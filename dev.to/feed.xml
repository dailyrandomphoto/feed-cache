<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Polyfill and shim</title>
      <author>MurtazaBagwala07</author>
      <pubDate>Wed, 12 Jan 2022 10:35:14 +0000</pubDate>
      <link>https://dev.to/murtazabagwala07/polyfill-and-shim-1o25</link>
      <guid>https://dev.to/murtazabagwala07/polyfill-and-shim-1o25</guid>
      <description>&lt;p&gt;I will try to give a brief overview of what polyfill and shim is and why are they used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Polyfill"&gt;Polyfill &lt;/a&gt;&lt;/strong&gt;: It basically is a code that allows browser to support such feature which it is not capable of implementing on its own.&lt;br&gt;
Generally it refers to Javascript Library which implements the HTML5 or CSS web standard.&lt;/p&gt;

&lt;p&gt;For example, Math.floor(n) is a function that returns the largest integer less than or equal to a given number, e.g Math.floor(1.23) returns 1.&lt;/p&gt;

&lt;p&gt;In some (very outdated) JavaScript engines, there‚Äôs no Math.floor, so such code will not work.&lt;/p&gt;

&lt;p&gt;So how is this code supposed to work in those outdated JS engines?&lt;br&gt;
Thats Where polyfill comes in.&lt;/p&gt;

&lt;p&gt;It is a script that updates/adds new functions.It ‚Äúfills in‚Äù the gap and adds missing implementations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Shim"&gt;Shim &lt;/a&gt;&lt;/strong&gt;: A shim is any piece of code that performs interception of an API call and provides a layer of abstraction. It isn't necessarily restricted to a web application or HTML5/CSS3.&lt;/p&gt;

&lt;p&gt;The idea here is to make it normal using certain APIs across different environments. So, if two browsers implement the same API differently, you could intercept the API calls in one of those browsers and make its behavior align with the other browser.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>React: Conditional rendering</title>
      <author>Abayomi Ogunnusi</author>
      <pubDate>Wed, 12 Jan 2022 10:34:13 +0000</pubDate>
      <link>https://dev.to/drsimplegraffiti/react-conditional-rendering-32b4</link>
      <guid>https://dev.to/drsimplegraffiti/react-conditional-rendering-32b4</guid>
      <description>&lt;p&gt;This is one of the concepts I found most confusing when I started React. This post is a simple demonstration of how to render components with react using conditional rendering. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-to-it"&gt;
  &lt;/a&gt;
  Let's get to it
&lt;/h2&gt;

&lt;p&gt;ü•¶  Create a react project using &lt;code&gt;npx create-react-app .&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QO1LHnaD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oku9191i840kykk5juxc.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QO1LHnaD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oku9191i840kykk5juxc.PNG" alt="Image description" width="771" height="402"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ü•¶ Then start the react app using this command: &lt;code&gt;npm start&lt;/code&gt;, this opens up the react page on the default localhost:3000&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iQ3Yh7Hl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rpzf2b6hyaan79habrc.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQ3Yh7Hl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rpzf2b6hyaan79habrc.PNG" alt="Image description" width="880" height="367"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#clean-up"&gt;
  &lt;/a&gt;
  Clean Up
&lt;/h2&gt;

&lt;p&gt;Next, we cleanup our src folder and just have a h1 tag inside the App.jsthat says Choose your favorite pet.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;logo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./logo.svg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;favorite&lt;/span&gt; &lt;span class="nx"&gt;pet&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;ü•¶ Let's give this a well.&lt;br&gt;
Our result: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uSsQDja6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onb073a5otg2ctk295ta.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uSsQDja6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onb073a5otg2ctk295ta.PNG" alt="Image description" width="880" height="341"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ü•¶ Next, we create a component folder and a file, I call it Choose.jsx. You can call it whatever you like.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a component
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;am&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;cute&lt;/span&gt; &lt;span class="nx"&gt;Dog&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;
        &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://www.google.com/url?sa=i&amp;amp;url=https%3A%2F%2Fwww.countryliving.com%2Flife%2Fkids-pets%2Fnews%2Fa44032%2Fdog-owners-take-more-pictures-of-their-pet-than-their-spouse%2F&amp;amp;psig=AOvVaw1qbUbk4x640915cLFiHmZ0&amp;amp;ust=1642064745637000&amp;amp;source=images&amp;amp;cd=vfe&amp;amp;ved=0CAsQjRxqFwoTCMDU14Duq_UCFQAAAAAdAAAAABAJ&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cute dog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;ü•¶ Now let's import our Choose.jsx into the App.js component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/Choose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;favorite&lt;/span&gt; &lt;span class="nx"&gt;pet&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should have the following on save: &lt;/p&gt;




&lt;p&gt;ü•¶ Now let's write the logic that toggles our dog into a cat.&lt;br&gt;
import &lt;code&gt;useState&lt;/code&gt; Hook and declare an initial value for your useState.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/Choose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsToggle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;favorite&lt;/span&gt; &lt;span class="nx"&gt;pet&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;ü•¶ Next, we create  a button with an onClick function, and we tell it to change the setToggle state to true&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/Choose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsToggle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsToggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Change&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;favorite&lt;/span&gt; &lt;span class="nx"&gt;pet&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ü•¶ Now, whenever we click our button, the value of our toggle is set to the inverse of its initial value.&lt;br&gt;
Let me show you how this works by adding a console.log to the isToggle variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/Choose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsToggle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsToggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Change&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;favorite&lt;/span&gt; &lt;span class="nx"&gt;pet&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ü•¶ If you open your developer console by pressing f12 or use the inspect we have:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8uhwg7v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpnpbuas7ve7kgsdmaxm.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8uhwg7v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpnpbuas7ve7kgsdmaxm.PNG" alt="Image description" width="780" height="634"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, using ternary operators, let's build a conditional rendering that says, "Render my lovely dog or give me a cat." &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#method-1-inline-if-with-logical-ampamp-operator"&gt;
  &lt;/a&gt;
  üéØ Method 1: Inline If with Logical &amp;amp;&amp;amp; Operator
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useState } from "react";
import "./App.css";
import { Choose } from "./components/Choose";

function App() {
  const [toggle, setIsToggle] = useState(false);
  return (
    &amp;lt;div className="App"&amp;gt;
      &amp;lt;h1&amp;gt;Choose your favorite pet&amp;lt;/h1&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; setIsToggle(!toggle)}&amp;gt;Change&amp;lt;/button&amp;gt;
      {toggle &amp;amp;&amp;amp; &amp;lt;Choose /&amp;gt;}
    &amp;lt;/div&amp;gt;
  );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Explanation:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{toggle &amp;amp;&amp;amp; &amp;lt;Choose /&amp;gt;}&lt;/code&gt; this means if toggle is true, render  component.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#method-2-inline-ifelse-with-conditional-operator"&gt;
  &lt;/a&gt;
  üéØ Method 2: Inline If-Else with Conditional Operator
&lt;/h2&gt;

&lt;p&gt;Let's bring our cat into the picture by declaring that if we can't choose between a dog and a cat, we'll take a cat.&lt;/p&gt;

&lt;p&gt;In the Choose.jsx file, quickly develop and export a working component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Cat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;am&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;cute&lt;/span&gt; &lt;span class="nx"&gt;Cat&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;
        &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://th-thumbnailer.cdn-si-edu.com/ZoiTX0zdWNy5LOUC6Yh-qQsDcsE=/fit-in/1072x0/filters:focal(1834x1782:1835x1783)/https://tf-cmsv2-smithsonianmag-media.s3.amazonaws.com/filer/11/2c/112cfb7f-d73f-40d6-afab-7e05be7c7b73/andy_warhol_ch_6.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cute cat&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;500px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;380x&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's import it into our App.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Cat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/Choose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsToggle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;favorite&lt;/span&gt; &lt;span class="nx"&gt;pet&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsToggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Change&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Cat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our final code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Cat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/Choose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsToggle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;favorite&lt;/span&gt; &lt;span class="nx"&gt;pet&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsToggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Change&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Cat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is where the magic happens &lt;code&gt;{toggle ? &amp;lt;Choose /&amp;gt; : &amp;lt;Cat /&amp;gt;}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here, we are saying if toggle is true render  which is our dog and if not render cat.&lt;/p&gt;

&lt;p&gt;I hope you found this article useful.For reference, you can find the entire code here &lt;a href="https://github.com/drsimplegraffiti/conditional-render-react-tuts"&gt;click&lt;/a&gt;. Thanks &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/conditional-rendering.html"&gt;React&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>react</category>
    </item>
    <item>
      <title>Launching: Open-source one-page checkout</title>
      <author>Nicklas Gellner</author>
      <pubDate>Wed, 12 Jan 2022 10:33:08 +0000</pubDate>
      <link>https://dev.to/medusajs/launching-open-source-one-page-checkout-2279</link>
      <guid>https://dev.to/medusajs/launching-open-source-one-page-checkout-2279</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introducing-medusa-express%EF%B8%8F"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.producthunt.com/posts/medusa-express"&gt;Introducing Medusa Express&lt;/a&gt;‚ö°Ô∏è
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#what-if-you-could-buy-and-sell-products-via-a-link-that-sends-you-directly-to-checkout"&gt;
  &lt;/a&gt;
  What if you could buy and sell products via a link that sends you directly to check-out?
&lt;/h2&gt;




&lt;p&gt;Wanted to share a cool new open-source project that we have been building for our &lt;a href="https://www.medusajs.com/"&gt;headless commerce engine&lt;/a&gt;. Medusa Express is a one-page checkout flow allowing you to purchase a product directly via a URL-link which can be smart in cases of e.g. retargeting campaigns, outbound sales, special releases, or bloggers that want to sell easily to their followers.&lt;/p&gt;

&lt;p&gt;Medusa Express automatically creates pages for the products in your ecommerce backend each of them optimized to make the purchasing experience as frictionless as possible, by bundling the checkout flow alongside the product.&lt;/p&gt;

&lt;p&gt;Access it in the top link!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How it works:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A customer visits a link e.g. &lt;a href="https://medusa.express/basic-tshirt"&gt;https://medusa.express/basic-tshirt&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The customer selects the variant of the product they wish to buy&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Customer completes the checkout flow and the order is completedHope you might find it relevant!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>showdev</category>
      <category>opensource</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>I am back with 100 "Dark Mode" CSS loaders</title>
      <author>Temani Afif</author>
      <pubDate>Wed, 12 Jan 2022 10:30:34 +0000</pubDate>
      <link>https://dev.to/afif/i-am-back-with-100-dark-mode-css-loaders-4gp6</link>
      <guid>https://dev.to/afif/i-am-back-with-100-dark-mode-css-loaders-4gp6</guid>
      <description>&lt;p&gt;It's been a while since the last collection, but here I am with another one. Let's start 2022 with &lt;strong&gt;100&lt;/strong&gt; CSS-only loaders. This time, I joined the Dark Side of the force to create "Dark Mode" loaders.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/zZfNOVP35Nrkk/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/zZfNOVP35Nrkk/giphy.gif" alt="the dark side" width="500" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Always the same rule: &lt;strong&gt;One&lt;/strong&gt; div = &lt;strong&gt;One&lt;/strong&gt; loader. &lt;/p&gt;

&lt;p&gt;Let's go!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-moving"&gt;The Moving&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-infinity-ii"&gt;The Infinity II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-maze"&gt;The Maze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-square"&gt;The Square&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-circle"&gt;The Circle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-eyes"&gt;The Eyes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-factory"&gt;The Factory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-square-vs-the-circle"&gt;The Square vs The Circle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-blob-ii"&gt;The Blob II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-3d"&gt;The 3D&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#the-moving"&gt;
  &lt;/a&gt;
  The Moving
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/NWaYwMZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-infinity-ii"&gt;
  &lt;/a&gt;
  The Infinity II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/KKXByeG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-maze"&gt;
  &lt;/a&gt;
  The Maze
&lt;/h3&gt;

&lt;p&gt;A dot lost in a maze...&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/eYGrZPX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-square"&gt;
  &lt;/a&gt;
  The Square
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/jOGvOje?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-circle"&gt;
  &lt;/a&gt;
  The Circle
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/poWOEPm?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-eyes"&gt;
  &lt;/a&gt;
  The Eyes
&lt;/h3&gt;

&lt;p&gt;They are watching you&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/WNZyPqX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-factory"&gt;
  &lt;/a&gt;
  The Factory
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/ExwezVW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-square-vs-the-circle"&gt;
  &lt;/a&gt;
  The Square vs The Circle
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/xxXarQK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-blob-ii"&gt;
  &lt;/a&gt;
  The Blob II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/PoJavbw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-3d"&gt;
  &lt;/a&gt;
  The 3D
&lt;/h3&gt;

&lt;p&gt;You don't need 3D Glasses to watch the below!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/rNGKBwr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it!
&lt;/h3&gt;

&lt;p&gt;See you next collection üëç&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/L2wzqNa9gT2XWCDqRc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/L2wzqNa9gT2XWCDqRc/giphy.gif" alt="bye bye" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#you-want-to-support-me"&gt;
  &lt;/a&gt;
  &lt;center&gt;You want to support me?&lt;/center&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/afif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQj764Ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-orange.png" alt="buy me a coffee" width="434" height="100"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/center&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/temani"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4kAQAgAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/db3jtgy2i5l4w8slkps5.png" alt="Become a patron" width="499" height="125"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Different Ways 
of Deploying a Microservices Application on AWS</title>
      <author>Nicolas El Khoury</author>
      <pubDate>Wed, 12 Jan 2022 10:07:37 +0000</pubDate>
      <link>https://dev.to/aws-builders/different-ways-of-deploying-a-microservices-application-on-aws-18ge</link>
      <guid>https://dev.to/aws-builders/different-ways-of-deploying-a-microservices-application-on-aws-18ge</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Traditionally, applications were designed and implemented using a Monolithic architectural style, with which the application was developed and deployed as a single component, divided into multiple modules. Monolithic applications are very easy to develop and deploy.&lt;/p&gt;

&lt;p&gt;However, such an architectural pattern becomes a burden once the application becomes too large:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Difficult to manage and maintain, due to the large code.&lt;/li&gt;
&lt;li&gt;All of the application is built using one programming language, thus the system may suffer from bottlenecks when performing tasks not suitable for this specific language.&lt;/li&gt;
&lt;li&gt;Difficult to scale the application.&lt;/li&gt;
&lt;li&gt;Difficult to use container based technologies (Due to the large size of the application).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With the emergence of Cloud Computing, and the concept of the on-demand provisioning of resources, a more suitable architectural pattern was required. Microservices rapidly gained popularity, and became a widely used architectural pattern, especially for applications deployed on the cloud. Microservcies are an architectural pattern which divides an application into smaller, independent, loosely coupled services that may communicate with each other via multiple protocols (e.g., HTTP, sockets, events, etc). Microservices provide the following advantages:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Easy to maintain (smaller code in each service).
Highly scalable.&lt;/li&gt;
&lt;li&gt;Extremely suitable for container-based technologies.
Complements cloud solutions.&lt;/li&gt;
&lt;li&gt;Fault tolerance: If one microservice fails, the rest of the system remains functional.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9NmpY1-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbt7zrqtwc8u37irtvd1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9NmpY1-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbt7zrqtwc8u37irtvd1.png" alt="Microservices vs Monolithic" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Truly, the Microservices Architecture is a very powerful architectural pattern that goes hand in hand with the services provided by the cloud. However, a well designed system depends on two factors. A robust design of the software, and of the underlying infrastructure. There exists multiple articles, tutorials, courses, that explain and promote the design, and implementation of Microservices. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#microservices-example-project"&gt;
  &lt;/a&gt;
  Microservices Example Project
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/nicolaselkhoury/nk-microservices-deployment"&gt;The NK Microservices project&lt;/a&gt; is a sample project built using the Microservices approach. This project will be used in this article to better illustrate the differences between deployment modes.&lt;/p&gt;

&lt;p&gt;This project is made of the following components:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Gateway Microservice: A REST API Microservice built using SailsJS, and serves as a Gateway, and request router.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Backend Microservice: A REST API Microservice built using SailsJS, and serves as the first, out of many Microservices which can be incorporated and integrated with the aforementioned Gateway Service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Redis Database: An open source, in-memory data store, used for caching purposes, and for storing other ephemeral pieces of information such as JWT tokens.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Arango Database: A multi-model database used for storing persistent information.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The project requires all of the aforementioned components to be set up in order to function properly.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#deployment-modes"&gt;
  &lt;/a&gt;
  Deployment Modes
&lt;/h1&gt;

&lt;p&gt;Deploying applications on robust infrastructure is a key operation to the success of the product. Evidently, each application serves a specific purpose, and is designed uniquely using distinct technologies. In this regard, the underlying infrastructure for each application may differ based on the application, business, regulatory, etc, needs.&lt;/p&gt;

&lt;p&gt;Usually, when deploying software, several considerations must be taken into account, some of which include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Security: The system must always be secure from all sorts of unwanted access.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scalability: The ability to scale up/down resources based on demand.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Availability: The system must be able to sustain failure, and avoid single points of failure.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;System Observability: Tools that increase the system visibility (monitoring, logging, tracing, etc).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, in general, these different deployment modes can be categorized as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Single Server Deployment.&lt;/li&gt;
&lt;li&gt;Multi Server Deployment.&lt;/li&gt;
&lt;li&gt;Deployment using Container Orchestration Tools.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The rest of this document explains the details of each deployment type, its advantages, and disadvantages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#single-server-deployment"&gt;
  &lt;/a&gt;
  Single Server Deployment
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k4y6RAn9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/334jvvlbxar3z70l414a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k4y6RAn9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/334jvvlbxar3z70l414a.png" alt="Single Server Deployment" width="880" height="579"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the title states, in this mode, a single server is supposed to host all the different components. In this case, All the components of the NK Microservices project (Arango Database, Redis, Backend, and API Gateway) will be deployed on configured on the same server. A similar deployment can be found &lt;a href="https://github.com/nicolaselkhoury/nk-microservices-deployment/blob/master/deployment-modes/linuxMachine.md"&gt;here&lt;/a&gt;. Typically, the inter-service communication between the components can be done using the local machine's IP. Despite this advantage, this mode of deployment is highly unadvised, except for local and temporary testing. Below is a list of disadvantages, explaining why it is advised to never proceed with Single Server Deployments, especially for production workloads:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Time consuming: Properly installing and configuring each component may prove to be time consuming, especially as the number of components grows in sizes. The NK microservices project is a relatively small project of 4 components, but imagine larger ones with 20+ components. In this case, such a deployment is definitely inefficient.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Non-Scalable: Each component can be installed and configured to run as a standalone process. Evidently, on a single server, clustering databases and spinning multiple replicas of the same process is not only worthless (The server represents a SOF), but also will contribute to the server's performance degradation through consuming more resources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Huge Downtime: Any configuration, maintenance work, or the slightest error may put the whole server (and application) down, until the server and all of its components are restored.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Single Point of Failure: Being a single server, no matter what disaster recovery mechanisms, security policies, or auto-repair mechanisms, if the server goes down, the whole application goes down with it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;May mess up the host machine: The different application components are using the same servers, sharing the same resources, and outputting content on the same server. As the number of applications on the server grows, along with the demand of each one, the server is at risk of infection, where one component may consume the resources of the others, thus blocking them from operating safely.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In summary, single server deployments are only advised for personal use, and short term testing of small software applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#multi-server-deployment"&gt;
  &lt;/a&gt;
  Multi Server Deployment
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hjJ-P-Gp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eo46qwr781wj424bt8r7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hjJ-P-Gp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eo46qwr781wj424bt8r7.png" alt="Multi Server Deployment" width="880" height="590"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A better approach would be to divide the project's components across multiple servers. Monolithic applications are usually developed using MVC, a three-tier architectural style (Frontend, Backend, and Database). A proper and intuitive deployment approach would be to deploy each layer on a separate server. In the case of microservices, a similar approach can be taken, by dedicated a small server to each component of the application. Such a deployment mode, while not the best, is definitely a more convenient approach:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Separation of concerns: Processes are no longer sharing resources and risking each other's proper operation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Isolation: Each component may operate on its own, and use dedicated resources. A proper design of the application may allow partial system operation in case of partial downtimes. For instance, if the Redis database crashes, the rest of the system should be fully operational.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scalability: Database clustering and service replication are now possible by replicating the servers of each application independently from the other.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Evidently, multi server deployments are definitely a better alternative to their single server counterparts. However, this approach tends to become cumbersome at scale, especially when it comes to scalability, and managing the lifecycle of each component, and each replica of that component properly. Handling a system of 4 components, and a couple replicas per service may be easy. However, consider a system of 30 components and 5 replicas per component. Properly handling such a system may become cumbersome.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deployment-using-container-orchestration-tools"&gt;
  &lt;/a&gt;
  Deployment using Container Orchestration Tools
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HvH0vOtX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2op8sq6pkmc4y5gzhcm6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HvH0vOtX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2op8sq6pkmc4y5gzhcm6.png" alt="Image description" width="880" height="590"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Container Orchestration Tools provide a framework for managing microservices at scale. Such tools possess amazing capabilities and features to manage the lifecycle of distributed application components from a centralized command server, and can be used for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provisioning, configuration, resource allocation and deployment of services. &lt;/li&gt;
&lt;li&gt;Container availability &lt;/li&gt;
&lt;li&gt;Scale in/out of resources&lt;/li&gt;
&lt;li&gt;Load balancing and traffic distribution and routing &lt;/li&gt;
&lt;li&gt;Container health monitoring&lt;/li&gt;
&lt;li&gt;Managing inter-process communication.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There exists several mature tools that are widely used in the market, namely Kubernetes, Docker Swarm, Apache Mesos, etc. Describing these tools is out of scope of this article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AHUac8A1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xqi12i079cn1vti3ppo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AHUac8A1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xqi12i079cn1vti3ppo.png" alt="Image description" width="880" height="629"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The diagrams above clearly point how a simple Elastic Kubernetes Service (EKS) on AWS permits the provisioning of several servers, and deploying the NK microservices project in a production ready infrastructure composed of replicated servers and services. Such a deployment has several advantages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy scalability mechanisms for servers and containers.&lt;/li&gt;
&lt;li&gt;Improved governance and security controls.&lt;/li&gt;
&lt;li&gt;Better visibility on the system.&lt;/li&gt;
&lt;li&gt;Container health monitoring.&lt;/li&gt;
&lt;li&gt;Optimal resource allocation.&lt;/li&gt;
&lt;li&gt;Management of container lifecycle.&lt;/li&gt;
&lt;li&gt;System Visibility.&lt;/li&gt;
&lt;li&gt;Cost opimization.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In brief, this article summarized the different modes of deployment available for Microservices on AWS. Single server deployments are usually not advised, except for personal use and local temporary testing. Multi server deployments represent a better alternative, especially at small scale. However such a deployment may become cumbersome at scale, and must be replaced by a more convenient mode, such as using Container Orchestration Tools (At the expense of complexity).&lt;/p&gt;

</description>
      <category>aws</category>
      <category>kubernetes</category>
      <category>docker</category>
      <category>microservices</category>
    </item>
    <item>
      <title>The cloud in 2021: 21 game-changing outages, security issues, and highlights</title>
      <author>CAST AI</author>
      <pubDate>Wed, 12 Jan 2022 09:45:40 +0000</pubDate>
      <link>https://dev.to/castai/the-cloud-in-2021-21-game-changing-outages-security-issues-and-highlights-1kd8</link>
      <guid>https://dev.to/castai/the-cloud-in-2021-21-game-changing-outages-security-issues-and-highlights-1kd8</guid>
      <description>&lt;p&gt;Whew, what a year! &lt;strong&gt;From data centers going up in flames to security vulnerabilities that have been there for years to cloud providers flexing their influence.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At the same time, the industry has never been stronger as new cloud-native technologies and increased automation rose to prominence.&lt;/p&gt;

&lt;p&gt;Let‚Äôs take a look back at the most interesting, thought-provoking, and downright jaw-dropping developments in the cloud world.&lt;/p&gt;

&lt;p&gt;Jump through the list to what interests you most:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#top-5-cloud-outages-that-shook-our-world"&gt;Top 5 cloud outages that shook our world&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-security-vulnerabilities-that-stole-the-show"&gt;5 security vulnerabilities that stole the show&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-eye-opening-insights-from-research-into-the-cloud"&gt;5 eye-opening insights from research into the cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-things-the-cloud-industry-talked-about"&gt;3 things the cloud industry talked about&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-biggest-milestones-we-achieved-at-cast-ai"&gt;3 biggest milestones we achieved at CAST AI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="top-5-cloud-outages-that-shook-our-world"&gt;Top 5 cloud outages that shook our world&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;December 7, 2021 - AWS us-east-1 suffers from an outage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the mission-critical AWS cloud units us-east-1 was hit with an outage that took down services like Disney+, Netflix, Slack, Ticketmaster, stock trading app Robinhood, and the crypto exchange Coinbase. Key internal tools like Flex and AtoZ apps used by Amazon warehouse and delivery workers were affected as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;November 16, 2021 - Google Cloud finds a networking issue&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Google Cloud went down in mid-November and with it took services like Home Depot, Snap, and Spotify. What caused the outage? A glitch in a network configuration. Yet another scenario showing that betting on a single provider to manage all your apps is pretty risky.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚Äã‚ÄãOctober 4, 2021 - Facebook &amp;amp; Co. goes down spectacularly&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Facebook and its subsidiaries - Messenger, Instagram, WhatsApp, Mapillary, and Oculus - became unavailable for 6 to 7 hours and the world went crazy. Many desperate users flocked to Twitter, Discord, Signal, and Telegram and this resulted in disruptions on these apps' servers.&lt;/p&gt;

&lt;p&gt;https://twitter.com/Twitter/status/1445078208190291973&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;June 10, 2021 - One European AWS availability zone causes a stir&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The AWS EU-Central region experienced a major outage in EUC_AZ-1 due to connectivity problems ‚Äúcaused by an increase in ambient temperature.‚Äù The outage lasted three hours and it turned out to be caused by the failure of a control system that disabled multiple air handlers in the affected Availability Zone. Simple, isn‚Äôt it?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;March 10, 2021 - OVHcloud gets burned down (but then files for IPO)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The largest Europe-based cloud service provider OVHcloud saw its SBG2 data center in Strasbourg burn down, damaging the SBG1 data center as well. Thankfully, no one was hurt, but the incident led to website and email outages among many clients. Still, this didn‚Äôt deter the company from filing for IPO later that year.&lt;/p&gt;

&lt;p&gt;https://twitter.com/abonin_DNA/status/1369538028243456000&lt;/p&gt;



&lt;h2 id="5-security-vulnerabilities-that-stole-the-show"&gt;5 security vulnerabilities that stole the show&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Log4j catches us all by surprise&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2021 ended with a bang when a vulnerability in the log4j open source logging library was discovered. Its impact is massive and will affect the industry for years. The library is embedded practically everywhere, including the AWS S3 storage service and software solutions you might be using every day.¬†¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A series of Microsoft vulnerabilities sees the light&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Microsoft had one hell of a ride this year security-wise. In 2021, the giant released a patch for at least one zero-day vulnerability each month (except for May). Some important vulnerabilities were identified across Microsoft‚Äôs operating systems, platforms, and applications, potentially exposing their customers to risk and leading to attacks carried out on companies like SolarWinds, Colonial Pipeline, and HAFNIUM.¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cosmos DB leaves the door open to attackers for years&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By the end of August, the ‚Äúworst cloud vulnerability you can imagine‚Äù was discovered in Microsoft Azure. It impacted 30% of Cosmos DB customers. The service gave read/write access to every database to attackers who exploited the bug. It was there for ‚Äúat least several months, possibly years.‚Äù&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spectacular data breaches at Facebook and LinkedIn&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A security researcher uncovered a massive leaked database of 533 million Facebook accounts, with personal information of users across the US, UK, and India. Then someone else found the personal data of 700 million LinkedIn users (almost 93% of the platform members) on sale online.¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On-prem turns out to be a dangerous thing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Running email on your own server in 2021 is a risky business when Chinese hackers are on the lookout for loopholes. They found one in Microsoft Exchange. Any company running a copy of the software may have been hacked - we‚Äôre talking about 30k businesses getting affected! This just shows that moving to the cloud is a smart move, despite all the other security issues we mentioned above!&lt;/p&gt;



&lt;h2 id="5-eye-opening-insights-from-research-into-the-cloud"&gt;5 eye-opening insights from research into the cloud&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Who owns the public cloud¬†&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A study from &lt;a href="https://canalys.com/newsroom/global-cloud-services-q2-2021"&gt;Canalys&lt;/a&gt; showed that 61% of public cloud services come from the big three providers: AWS, Microsoft Azure, and Google Cloud. AWS now accounts for 31% of global cloud infrastructure spending, generating some $59 billion per year of revenue (that‚Äôs more than the revenue of HP or Lenovo!).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud-native is on the rise&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.hashicorp.com/blog/hashicorp-state-of-cloud-strategy-survey-welcome-to-the-multi-cloud-era"&gt;HashiCorp&lt;/a&gt; showed that in response to COVID-19, many companies embraced cloud-native technologies like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Infrastructure as Code (49%),¬†&lt;/li&gt;
&lt;li&gt;container orchestration (41%),¬†&lt;/li&gt;
&lt;li&gt;network infrastructure automation (33%),¬†&lt;/li&gt;
&lt;li&gt;and said self-service infrastructure (32%).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WPKq-0v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/Yy9vDBPj2TGVOukL-xN7IfTU26SrWsyl2zoZkZGHJLDmHHCG63drxg1mCBDC_rfEnE3eDiwE45_mflla-nJRcG4LobZ4c2aLP44leVa3-mBezymShzwYquiWPSEpst_62Gr9e6_s%3Ds0" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WPKq-0v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/Yy9vDBPj2TGVOukL-xN7IfTU26SrWsyl2zoZkZGHJLDmHHCG63drxg1mCBDC_rfEnE3eDiwE45_mflla-nJRcG4LobZ4c2aLP44leVa3-mBezymShzwYquiWPSEpst_62Gr9e6_s%3Ds0" alt="Covid's cloud impact chart" width="880" height="415"&gt;&lt;/a&gt;Source: HashiCorp&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Single and private clouds were out¬†&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A study from &lt;a href="https://www.ibm.com/downloads/cas/K0ZGR6BW"&gt;IBM&lt;/a&gt; revealed that both infrastructure types dropped from 29% in 2019 to only 2% in 2021. Who won the race? Hybrid cloud and multi cloud!¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Companies start using automation to control the rising cloud costs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://info.flexera.com/CM-REPORT-State-of-the-Cloud"&gt;Flexera&lt;/a&gt; State of the Cloud Report gave a glimpse of how companies are dealing with their rising &lt;a href="https://cast.ai/blog/how-to-solve-the-costliest-cloud-bill-issues/" rel="noreferrer noopener"&gt;cloud bills&lt;/a&gt;. Many of them turn to automation like automated policies that shut workloads down after hours (49%) and rightsize virtual machines (48%).¬†¬†¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But they still have a long way to go in 2022&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The microsurvey from the CNCF and FinOps found that cloud and Kubernetes-related bills continue to grow. Still, companies don‚Äôt have the right tools in place to make informed estimations and eliminate cloud waste. Nearly 45% of them said their monitoring strategy relied on estimations, almost 25% admitted to having no solution at all.¬†&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jtxSYVo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/Um5V_POOF1wR5RPGQUCHf5muK29MfvtzwXjwdY2TPUaZENNDwZ8lqntqoshhHJw4NeXmpIFNH6C-c7WqLiTCgcUBRL-T6e02Kw1l-5i9-Z2njYo2A2rGcGgOabFsKpOV57QItVLC" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jtxSYVo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/Um5V_POOF1wR5RPGQUCHf5muK29MfvtzwXjwdY2TPUaZENNDwZ8lqntqoshhHJw4NeXmpIFNH6C-c7WqLiTCgcUBRL-T6e02Kw1l-5i9-Z2njYo2A2rGcGgOabFsKpOV57QItVLC" alt="Kubernetes related spend growth" width="880" height="567"&gt;&lt;/a&gt;Source: CNCF and FinOps&lt;/p&gt;

&lt;h2 id="3-things-the-cloud-industry-talked-about"&gt;3 things the cloud industry talked about&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;AWS kicks Parler out&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2021 also started with a bang. A group representing Amazon employees called for the company‚Äôs cloud unit to stop providing services to Parler, the social network used by the rioters who stormed the US Capitol on January 6, 2021. AWS cut Parler off, and other major providers closed the door in its face as well - showing their decision-making power in the process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Pentagon cancels the JEDI contract with Microsoft¬†&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This contract could have been worth as much as $10 billion, but the Pentagon decided to check out the deals from other cloud service providers, citing the evolution of the cloud landscape as the reason why. Perhaps the Pentagon is going multi cloud?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The one thing that didn‚Äôt change? It‚Äôs still all about chips&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In 2021, the tech industry and beyond faced a global chip shortage as the chip supply chain of the pandemic times simply couldn‚Äôt cope with the increased demand. This affected companies from Apple to BMW to Whirlpool. On the other hand, lots of effort (and money) poured into independent chip projects - like Apple‚Äôs M2, Amazon designing its own networking chips, and Nvidia trying to buy Arm for $40 billion for over a year now.&lt;/p&gt;



&lt;h2 id="3-biggest-milestones-we-achieved-at-cast-ai"&gt;3 biggest milestones we achieved at CAST AI&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Support for all 3 major cloud providers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The CAST AI platform now supports Kubernetes on all the three major cloud providers: AWS (EKS, Kops), Google Cloud Platform (GKE), and Microsoft Azure (AKS).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Instant Rebalancing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Our team built a feature that helps you achieve in minutes what others take months to get to. Automatically bring your cluster to an ideal state and reduce your cloud compute costs by 50% or more, within minutes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Securing $10 million for further growth&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To deliver on our promise of fully autonomous cloud cost optimization for Kubernetes, we raised $10 million in a Series A round led by the San Francisco-based &lt;a href="https://www.cotacapital.com/"&gt;Cota Capital&lt;/a&gt;, with &lt;a href="https://www.samsungnext.com/"&gt;Samsung Next&lt;/a&gt; and other investors participating.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To get a good sense of what CAST AI can do for you - &lt;/strong&gt;&lt;a href="https://cast.ai/event/how-to-get-started-with-kubernetes-cost-optimization-live-demo/"&gt;&lt;strong&gt;tune in to our upcoming webinar&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;!&lt;/strong&gt;&lt;/p&gt;



</description>
      <category>cloud</category>
      <category>news</category>
      <category>devops</category>
      <category>kubernetes</category>
    </item>
    <item>
      <title>How to Mock dependencies with Jest</title>
      <author>Dany Paredes</author>
      <pubDate>Wed, 12 Jan 2022 09:26:13 +0000</pubDate>
      <link>https://dev.to/this-is-learning/how-to-mock-dependencies-with-jest-457l</link>
      <guid>https://dev.to/this-is-learning/how-to-mock-dependencies-with-jest-457l</guid>
      <description>&lt;p&gt;When we want to test our code, some things have dependencies inside, and you don't want to call these stuff. You won't be sure your code works, not external dependencies or external code not related to my code.&lt;/p&gt;

&lt;p&gt;Today we will add tests into our example weather app using Jest and Mock the dependencies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-app"&gt;
  &lt;/a&gt;
  The app
&lt;/h2&gt;

&lt;p&gt;Our example app has two principal codes, the &lt;code&gt;weatherAPI.js&lt;/code&gt; and &lt;code&gt;showWeather.js&lt;/code&gt;; the &lt;code&gt;showWeather&lt;/code&gt; uses weatherAPi.js code to display the data.&lt;/p&gt;

&lt;p&gt;The weatherAPI.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getWeather&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;  &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getWeather&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The showWeather.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;weatherAPI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./weatherAPI&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;messageWeather&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;weatherAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getWeather&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`Today weather is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, have a nice day!`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;messageWeather&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have a clear idea about our app, and the next step is to add tests for showWeather code.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You see the final example code from GitHub repo &lt;a href="https://github.com/danywalls/02-mocking-code"&gt;https://github.com/danywalls/02-mocking-code&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#writing-the-test"&gt;
  &lt;/a&gt;
  Writing the test
&lt;/h2&gt;

&lt;p&gt;We use jest functions &lt;code&gt;test&lt;/code&gt; to declare our test and the assertion functions &lt;code&gt;expect&lt;/code&gt; and &lt;code&gt;toBe&lt;/code&gt; matchers.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The idea focuses on mocking; to read more about the assertion functions, feel free to read &lt;a href="https://jestjs.io/docs/expect"&gt;the official documentation&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;weatherAPI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./weatherAPI&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;messageWeather&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./showWeather&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should return weather message with celsius temperature&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;messageWeather&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Today weather is 50, have a nice day!`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toBe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run our test npx jest, and all test works using our mocks!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; PASS  ./showWeather.test.js
  Show Weather functions
    ‚úì should &lt;span class="k"&gt;return &lt;/span&gt;weather message with celsius temperature &lt;span class="o"&gt;(&lt;/span&gt;3 ms&lt;span class="o"&gt;)&lt;/span&gt;
    ‚úì Should &lt;span class="k"&gt;return &lt;/span&gt;async weather &lt;span class="o"&gt;(&lt;/span&gt;1 ms&lt;span class="o"&gt;)&lt;/span&gt;

Test Suites: 1 passed, 1 total
Tests:       2 passed, 2 total
Snapshots:   0 total
Time:        0.383 s, estimated 1 s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nice, but our test calls the getWeather using the actual code, and my test only needs to cover the showWeather code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-fake-the-weatherapi-methods"&gt;
  &lt;/a&gt;
  How to fake the weatherAPI methods?
&lt;/h2&gt;

&lt;p&gt;Jest provides a few ways to mock the weatherAPI methods. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Override the methods with j &lt;a href="https://jestjs.io/docs/mock-functions#using-a-mock-function"&gt;est.fn&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Use  &lt;a href="https://jestjs.io/docs/jest-object#jestspyonobject-methodname"&gt;jest.spyOn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Mock the module with  &lt;a href="https://jestjs.io/docs/es6-class-mocks#the-4-ways-to-create-an-es6-class-mock"&gt;jest.mock&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will use the three options, with the same result but each, you can pick which is better for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#override-functions-with-jestfn"&gt;
  &lt;/a&gt;
  Override functions with jest.fn
&lt;/h2&gt;

&lt;p&gt;The easiest way is to reassign the getWeather method and assign a jest.fn mock function, we update the test with the following points.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;assign jest.fn and return 20 by default. &lt;/li&gt;
&lt;li&gt;validate the getWeather method to get the C parameter.&lt;/li&gt;
&lt;li&gt;validate the result and expect are equal.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should return weather message with celsius temperature&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;weatherAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getWeather&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`20`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;weatherAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getWeather&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toHaveBeenCalledWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;messageWeather&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Today weather is 20, have a nice day!`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;weatherAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getWeather&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toHaveBeenCalledWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toBe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;weatherAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getWeather&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mockRestore&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The function mockRestore assigns the original value to getWeather function.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#use-jestspyon"&gt;
  &lt;/a&gt;
  Use jest.spyOn
&lt;/h2&gt;

&lt;p&gt;The spyOn help us to assign a mock function to the object, in our case, the weatherAPI object.&lt;/p&gt;

&lt;p&gt;The spyOn override and the function getWeather mock have the mock implementation function to return the simulated value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;jest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spyOn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;weatherAPI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getWeather&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;weatherAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getWeather&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mockImplementation&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`20`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;messageWeather&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Today weather is 20, have a nice day!`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;weatherAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getWeather&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toHaveBeenCalledWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toBe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;weatherAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getWeather&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mockRestore&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#mock-the-module"&gt;
  &lt;/a&gt;
  Mock the module
&lt;/h2&gt;

&lt;p&gt;Instead of mocking every function, jest helps us mimic the entire module using jest.mock.&lt;/p&gt;

&lt;p&gt;Create  &lt;strong&gt;mocks&lt;/strong&gt; directory into the same path of the file to mock, export the functions, and create the module's name in our case weatherAPI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;getWeather&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;jest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`20`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our test, the to jest uses the mock module with jest.mock.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;jest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./weatherAPI&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should return weather message with celsius temperature&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;messageWeather&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Today weather is 20, have a nice day!`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;weatherAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getWeather&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toHaveBeenCalledWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toBe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;weatherAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getWeather&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mockRestore&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#testing-async-functions"&gt;
  &lt;/a&gt;
  Testing async functions
&lt;/h2&gt;

&lt;p&gt;Async functions are very common in our code, lets add a new function promise into the weatherAPI and use it, in the showWeather.js.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Read more about  &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function"&gt;async and await keyword&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getMetaWeather&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Summer time!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getWeather&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getMetaWeather&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The getMetaWeather function is a promise, to use it in our new function showWeatherStatus, we use the await and async to wait for the getMetaWeather response.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;showWeatherStatus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;weatherAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMetaWeather&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, Enjoy!`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;messageWeather&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;showWeatherStatus&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to update our test to cover the showWeatherStatus, editing the &lt;strong&gt;mocks&lt;/strong&gt;/weatherAPI.js to return the mock version of the getMetaWeather function returns a promise with the mock data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getMetaWeather&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;jest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Great day&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We create a new test for async weather status,  but using the async and await keyword because we update the mocks, our tests automatic will get the mocking example :)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Should return async weather status&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;showWeatherStatus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Great day, Enjoy!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toBe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Perfect, run your test &lt;code&gt;npx jest&lt;/code&gt; and all cases works using mock data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; PASS  ./showWeather.test.js
  Show Weather functions
    ‚úì should &lt;span class="k"&gt;return &lt;/span&gt;weather message with celsius temperature &lt;span class="o"&gt;(&lt;/span&gt;3 ms&lt;span class="o"&gt;)&lt;/span&gt;
    ‚úì Should &lt;span class="k"&gt;return &lt;/span&gt;async weather &lt;span class="o"&gt;(&lt;/span&gt;1 ms&lt;span class="o"&gt;)&lt;/span&gt;

Test Suites: 1 passed, 1 total
Tests:       2 passed, 2 total
Snapshots:   0 total
Time:        0.383 s, estimated 1 s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final"&gt;
  &lt;/a&gt;
  Final
&lt;/h2&gt;

&lt;p&gt;Jest makes it easy to test our code and external dependencies. I recommend using the &lt;strong&gt;mocks&lt;/strong&gt; overriding the complete module because it makes it easy to update the mocks and read the tests because it only has assertions methods.&lt;/p&gt;

&lt;p&gt;If you want to read more about mocking with jest, please read the  &lt;a href="https://jestjs.io/docs/mock-functions"&gt;official documentation.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@kc_gertenbach?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Christian Gertenbach&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/fake?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>testing</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Easiest way return largest numbers in arrays - Daily JavaScript #6</title>
      <author>SnowBit</author>
      <pubDate>Wed, 12 Jan 2022 09:20:06 +0000</pubDate>
      <link>https://dev.to/codewithsnowbit/easiest-way-return-largest-numbers-in-arrays-daily-javascript-6-53ek</link>
      <guid>https://dev.to/codewithsnowbit/easiest-way-return-largest-numbers-in-arrays-daily-javascript-6-53ek</guid>
      <description>&lt;p&gt;&lt;code&gt;Hello üëã&lt;/code&gt;,&lt;br&gt;
 It is very easy to do üôÇ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;largestNumber&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// You can do this!&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;largest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;largest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;largest&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;largestNumber&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;105&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;63&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;89&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;130&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;216&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;312&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;335&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;357&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;399&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;857&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This was a quick article, I hope it helped you&lt;/p&gt;




&lt;p&gt;Thank you for reading, have a nice day!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Follow me on Twitter - &lt;a href="https://twitter.com/codewithsnowbit"&gt;@codewithsnowbit&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Subscribe me on YouTube - &lt;a href="https://www.youtube.com/channel/UCNTKqF1vhFYX_v0ERnUa1RQ?view_as=subscriber&amp;amp;sub_confirmation=1"&gt;Code With SnowBit&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>ES6: Arrow functions explained</title>
      <author>Naftali Murgor</author>
      <pubDate>Wed, 12 Jan 2022 09:15:28 +0000</pubDate>
      <link>https://dev.to/naftalimurgor/es6-arrow-functions-explained-kh7</link>
      <guid>https://dev.to/naftalimurgor/es6-arrow-functions-explained-kh7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;ES6 introduced arrow functions. In arrow functions, we drop the &lt;code&gt;function&lt;/code&gt; keyword.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prees6-functions-declaration-and-function-expression"&gt;
  &lt;/a&gt;
  Pre-ES6 functions declaration and function expression
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// function declaration&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="c1"&gt;// add and return value to calling function in one line&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// somewhere else&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// prints 10&lt;/span&gt;

&lt;span class="c1"&gt;// function expression&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;multiply&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#es6-arrow-functions"&gt;
  &lt;/a&gt;
  ES6 Arrow functions
&lt;/h4&gt;

&lt;p&gt;In ES6 arrow functions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;we drop the &lt;code&gt;function&lt;/code&gt; keyword&lt;/li&gt;
&lt;li&gt;before after the params, we introduce "arrow" symbol =&amp;gt; , equal symbol + &lt;/li&gt;
&lt;li&gt;function signature takes this form &lt;code&gt;(param1, param2) =&amp;gt; { body}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;we assign this to a &lt;code&gt;const&lt;/code&gt; to make it usable elsewhere in our program.
so a complete signature for arrow function becomes:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arrowFn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;param1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;param2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="c1"&gt;// function body&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Rewriting the above Pre-ES6 function becomes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// function expression&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// in ES6 arrow functions, becomes:&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// usage&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// sum now holds value of 10&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// prints 10 to the console&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Droping the parentheses and the &lt;code&gt;return&lt;/code&gt; keyword altogether.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#arrow-functions-and-lexical-raw-this-endraw-"&gt;
  &lt;/a&gt;
  Arrow functions and lexical &lt;code&gt;this&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In JavaScript &lt;code&gt;this&lt;/code&gt; points to the &lt;code&gt;window&lt;/code&gt; object of the browser(in the browser).&lt;/p&gt;

&lt;p&gt;Checking  &lt;code&gt;this&lt;/code&gt; object from browser console:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Psshbzz0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/izheyxz9n6p5aise4jw6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Psshbzz0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/izheyxz9n6p5aise4jw6.png" alt="this snippet" width="880" height="277"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the above, &lt;code&gt;this === window&lt;/code&gt; objects.&lt;/p&gt;

&lt;p&gt;Checking the &lt;code&gt;window&lt;/code&gt; object from browser console:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SE4kHOAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chepubudppwnh9rgw4wm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SE4kHOAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chepubudppwnh9rgw4wm.png" alt="window snippet" width="880" height="275"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In JavaScript, &lt;code&gt;this&lt;/code&gt; keyword points to the object in the current execution context. You'd rarely use &lt;code&gt;this&lt;/code&gt; unless your code requires an explicit use of &lt;code&gt;this&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Say you have a function,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;multipy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// prints object, when multiply is called, we this will point to the global this, window object in the browser environment&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In an object literal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sasuke&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`hero details, name: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;printThis&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// when called, this will point to hero object, logs hero object, try it out :)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;hero&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// prints hero details, name: Sasuke&lt;/span&gt;
&lt;span class="nx"&gt;hero&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;printThis&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Arrow function lacks its ‚Äúown‚Äù this. Using the arrow function in object literals causes this to point to the lexical this and not the enclosing object literal.&lt;/p&gt;

&lt;p&gt;Observe:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sasuke&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// change to arrow function&lt;/span&gt;
  &lt;span class="na"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`hero details, name: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;printThis&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// when called, this will point to hero object, logs the surrounding this, eg window object, try it out :)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;hero&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// prints hero details, name: undefined&lt;/span&gt;
&lt;span class="nx"&gt;hero&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;printThis&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// logs refference to the  "surrounding object" &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;Arrow functions introduce a cleaner syntax for writing function expressions. Arrow functions do not replace regular function declaration.&lt;/p&gt;

&lt;p&gt;When to use Arrow functions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In callbacks:
&lt;code&gt;items.map((item) =&amp;gt; { // do something with item})&lt;/code&gt; is a bit cleaner than &lt;code&gt;items.map(function(item) { // do something with item})&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create functions that are not hoisted. Function declarations(the pre-ES6 functions) get hoisted and can be called anywhere in the program.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Read more next week about üëâ &lt;a href=""&gt;for/of&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Until next week, adios!&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>ES6: let and const keywords</title>
      <author>Naftali Murgor</author>
      <pubDate>Wed, 12 Jan 2022 09:10:33 +0000</pubDate>
      <link>https://dev.to/naftalimurgor/es6-let-and-const-keywords-2jge</link>
      <guid>https://dev.to/naftalimurgor/es6-let-and-const-keywords-2jge</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this blog article, we shall see various language features, introduced in ES2015(ES6) JavaScript version.&lt;/p&gt;

&lt;p&gt;A list of a summary of the language features can be found in this previous &lt;a href="https://dev.to/naftalimurgor/es6-and-modern-javascript-4nje"&gt;ES6 and modern JavaScript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's look at &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; keywords.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-raw-let-endraw-raw-const-endraw-keywords"&gt;
  &lt;/a&gt;
  1. &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt; keywords
&lt;/h3&gt;

&lt;p&gt;In ES6, the &lt;code&gt;var&lt;/code&gt; keyword has been deprecated in favor of &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; keywords in variable definition, declaration and initialization.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;let&lt;/code&gt; is used to declare block-scoped variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;pov&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt; &lt;span class="c1"&gt;// don't use this&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pointOfView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt; &lt;span class="c1"&gt;// reassignable, do this&lt;/span&gt;
&lt;span class="nx"&gt;pointOfView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt; &lt;span class="c1"&gt;// change&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;const&lt;/code&gt; behaves similarly to &lt;code&gt;let&lt;/code&gt; except that once variables are declared and initialized, they may never be reassigned once declared and initialized.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// declare constants using const&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;THREAD_COUNT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="c1"&gt;// must be declared and initialized in one line&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MAX_THREAD_COUNT&lt;/span&gt; &lt;span class="c1"&gt;//  Uncaught SyntaxError: Missing initializer in const declaration &lt;/span&gt;
&lt;span class="c1"&gt;// somewhere later: &lt;/span&gt;
&lt;span class="nx"&gt;MAX_THREAD_COUNT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For object literals, changing values stored in object properties work but reassigning the declared object throws an error.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Naruto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;jutsu&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;shadow clone justsu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;residence&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hidded Leaf Village&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;hero.name = 'Sasuke'&lt;/code&gt; alters the value stored in object property &lt;code&gt;name&lt;/code&gt; of the &lt;code&gt;hero&lt;/code&gt; object. However, reassigning the object like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// reassigning the variable&lt;/span&gt;
&lt;span class="c1"&gt;// Uncaught TypeError: Assignment to constant variable.&lt;/span&gt;
&lt;span class="nx"&gt;hero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sasuke&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;jutsu&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Fireball Jutsu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;residence&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hidden Leaf village&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;ES6 introduces &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; keywords in place of &lt;code&gt;var&lt;/code&gt; keyword in declaration and initialization of constants and variables.&lt;/p&gt;

&lt;p&gt;Use let to declare a variable that will change/be reassigned later and const for constants that are unlikely to change as the program executes.&lt;/p&gt;

&lt;p&gt;Read more about üëâ &lt;a href="https://dev.to/naftalimurgor/es6-arrow-functions-explained-kh7"&gt;Arrow functions&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>node</category>
    </item>
    <item>
      <title>This Week In React #89: Remix, Remotion, Preact, Nextra, Relay, JSI, Skia, SwiftUI, TypeScript, web3...</title>
      <author>Sebastien Lorber</author>
      <pubDate>Wed, 12 Jan 2022 08:44:49 +0000</pubDate>
      <link>https://dev.to/sebastienlorber/this-week-in-react-89-remix-remotion-preact-nextra-relay-jsi-skia-swiftui-typescript-web3-jnm</link>
      <guid>https://dev.to/sebastienlorber/this-week-in-react-89-remix-remotion-preact-nextra-relay-jsi-skia-swiftui-typescript-web3-jnm</guid>
      <description>&lt;p&gt;Hi everyone!&lt;/p&gt;

&lt;p&gt;I have a newsletter called &lt;a href="https://thisweekinreact.com/"&gt;This Week In React&lt;/a&gt;. I thought you may be interested to read its content on Dev directly, let me know if you like it.&lt;/p&gt;

&lt;p&gt;This is a calm week for React in terms of content and announcements. &lt;/p&gt;

&lt;p&gt;Remix continues to benefit from great marketing from its early adopters.&lt;/p&gt;

&lt;p&gt;Did you know: React hooks could have been called¬†&lt;a href="https://twitter.com/acdlite/status/1468737488365707271?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;"augmentors"&lt;/a&gt;¬†ü§î&lt;/p&gt;

&lt;p&gt;üôè¬†&lt;strong&gt;Support the newsletter¬†&lt;/strong&gt;üôè&lt;strong&gt;:¬†&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  üòò¬†&lt;strong&gt;Recommend it to your friends&lt;/strong&gt;: it really helps!&lt;/li&gt;
&lt;li&gt;  üí∏¬†&lt;a href="https://gist.github.com/slorber/cb732fb5d0a002c4d73236a9baeba7bb?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;Sponsorise This Week In React&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  üòç¬†&lt;a href="https://twitter.com/sebastienlorber/timelines/1448942785814466561?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;Write testimonials on Twitter&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;üßµ¬†&lt;/strong&gt;&lt;a href="https://slo.im/thread?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;Retweet the latest Twitter thread&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  üì®¬†&lt;strong&gt;Reply to this email:&lt;/strong&gt;¬†feedback is always welcome&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  React
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://zachdtaylor.com/blog/some-thoughts-on-server-state-in-remix?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;Some Thoughts on Server State in Remix&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An interesting thought on the management of state and server calls in Remix, which is designed to work with as well as without JavaScript on the client side. It can fall back to plain old browser behavior and JS is just a bonus.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://sergiodxa.com/articles/run-next-and-remix-on-the-same-server?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;Run Next and Remix on the same server&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An interesting setup, which shows that we can mix Remix and Next.js inside the same Node.js server. This help design an incremental migration strategy to adopt or assess Remix.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.fullstackfish.com/posts/2021-12-31-remix-prisma-sqlite/?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;Remix, SQLite, and Prisma, Oh my!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another nice demonstration of the features of Remix. Being able to call Prisma from loader functions is quite powerful. It reminds other solutions like Next.js (but in a more co-located way) and server components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.remotion.dev/blog/2-6?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;Remotion 2.6&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Latest release for this React video production lib. The Remotion player is now stable. A new Error Overlay and an Audiogram template. The next release will surely be 3.0 with AWS lambda serverless rendering support and the ability to encode videos very quickly!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extras:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://sergiodxa.com/articles/avoid-waterfalls-of-queries-in-remix-loaders?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Avoid waterfalls of queries in Remix loaders&lt;/a&gt;: even if Remix manages to parallelize the requests, you still have to use¬†&lt;code&gt;Promise.all ()&lt;/code&gt;¬†inside a loader function&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://twitter.com/remix_run/status/1480644017029189632?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Remix is recruiting&lt;/a&gt;: remote-first, min 4h overlap with USA&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://twitter.com/_developit/status/1478453325951610886?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Preact now has a Tutorial&lt;/a&gt;: 10 minutes to learn this React lightweight alternative with a nice code editor ad preview&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/facebook/relay/releases/tag/v13.0.0?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Relay 13.0&lt;/a&gt;: including the new¬†&lt;a href="https://relay.dev/blog/2021/12/08/introducing-the-new-relay-compiler/?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Rust compiler&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://twitter.com/shuding_/status/1478877774081318920?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Nextra 2.0 work-in-progress&lt;/a&gt;: nice stack planned for this upgrade of the Next.js SSG (docs/blog) tool. Good competition for Docusaurus üòØ&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://varun.ca/three-js-particles/?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Three ways to create 3D particle effects&lt;/a&gt;: for those like me learning Three.js üòè&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sponsors"&gt;
  &lt;/a&gt;
  üí∏ Sponsors
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.remixtape.dev/thisweekinreact?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;Remixtape&lt;/strong&gt;¬†- Modern SaaS boilerplate for building better websites&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jumpstart your next SaaS with the modern¬†&lt;strong&gt;Remix boilerplate&lt;/strong&gt;¬†that includes everything you need to build better websites.&lt;/p&gt;

&lt;p&gt;Save months of development time and skip implementing standard functionality like authentication, account management, sessions, subscription payments, billing management, teams, transactional emails, and more.&lt;/p&gt;

&lt;p&gt;Remixtape gives you a solid foundation to build great web apps today and scale with you tomorrow.&lt;/p&gt;

&lt;p&gt;S√©bastien's readers get a special¬†&lt;strong&gt;30% OFF discount&lt;/strong&gt;. Grab it¬†&lt;a href="https://www.remixtape.dev/thisweekinreact?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;here&lt;/a&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reactnative"&gt;
  &lt;/a&gt;
  React-Native
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://medium.com/async/a-react-native-engineer-builds-a-swiftui-app-the-good-the-bad-and-the-bee871bb9baa?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;A React Native Engineer Builds A SwiftUI App&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A React-Native dev trying SwiftUI. Knowledge of React and its declarative model is reusable. Positive feedback on animations, navigation and the SwiftUI "hot reload". Mixed feedback on error messages, nested syntax, and a few other details.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extras:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://github.com/dohooo/react-native-reanimated-carousel?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;react-native-reanimated-carousel&lt;/a&gt;: new modern carousel lib based on Reanimated 2, actually maintained&lt;/li&gt;
&lt;li&gt;  Marc Rousavy upgrades us to JSI with¬†&lt;a href="https://github.com/mrousavy/react-native-jsi-image?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;react-native-jsi-image&lt;/a&gt;¬†&amp;amp;¬†&lt;a href="https://twitter.com/mrousavy/status/1479454627284365322?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;"react-native-camera has now been deprecated in favor of react-native-vision-camera"&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/fela-state-driven-styles-react-react-native/?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Fela: Writing state-driven styles for React &amp;amp; React Native&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://davidl.fr/blog/keyboard-react-native-ios-android?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;An overview of all keyboard types available in React Native&lt;/a&gt;: convenient cheatsheet resource&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://twitter.com/appjsconf/status/1478039546331811841?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;App.js conf returns in June&lt;/a&gt;, CFP opening tomorrow&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/gorhom/docusaurus-react-native-plugin?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;docusaurus-react-native-plugin&lt;/a&gt;: React-Native-Web support üòç&lt;/li&gt;
&lt;li&gt;  üé•¬†&lt;a href="https://www.youtube.com/watch?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter&amp;amp;v=49QR0wUDMG0"&gt;The Matrix Reacts&lt;/a&gt;: 1st React-Native-Skia tutorial from William Candillon, with a great Remotion intro üòâ&lt;/li&gt;
&lt;li&gt;  üéôÔ∏è¬†&lt;a href="https://reactnativeradio.com/episodes/rnr-223-rnr-223-whats-the-difference-between-reactjs-and-react-native?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;RNR 223 - Difference between React.js and React Native?&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#partners"&gt;
  &lt;/a&gt;
  Partners
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://start-react-native.dev/?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;Start React Native&lt;/strong&gt;&lt;/a&gt;: learn everything about gestures and animations with William Candillon&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://andrei-calazans.com/?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;React-Native Weekly&lt;/strong&gt;&lt;/a&gt;: stay up-to-date React-Native core updates&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.typescript-weekly.com/?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;TypeScript Weekly&lt;/strong&gt;&lt;/a&gt;: the best TypeScript links every week, right in your inbox.&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://esnextnews.com/?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;ES.next News&lt;/strong&gt;&lt;/a&gt;: learn about the latest in JavaScript and cross-platform tools&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tailwindweekly.com/?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;Tailwind Weekly&lt;/strong&gt;&lt;/a&gt;: all things Tailwind CSS, new issue every Saturday&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.g2i.co/?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;G2i&lt;/strong&gt;&lt;/a&gt;: pre-vetted remote React &amp;amp; React-Native developers you can trust on contract or full-time basis&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://infinite.red/?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;Infinite Red&lt;/strong&gt;&lt;/a&gt;: US React-Native experts making your idea a reality&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://swmansion.com/?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;Software Mansion&lt;/strong&gt;&lt;/a&gt;: the co-creators of React Native and the technological core of many tech companies&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#other"&gt;
  &lt;/a&gt;
  Other
&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://click.revue.email/ss/c/TzfyQfvFfgo-vTkXDZQg12c33OFKuG-LOUsY1mTCzfXCNwqsrqZ5mLyHqV4bOGbsiTGPyYeS7oKE5emusLgxRY2MmRsMMpZcM_vdIDX363MZlbW-DfDCK_SpDGfIyK5XCWK7MMWQkPqY3xbprXmNIqlEEekACLx-DPYpxKxT65EjejB5-sA40-T76qqv_KU4/3im/XlzxqhFsQwuIvzDHCdZsKQ/h41/lyV1ZrkOslPiqoHPpzJnhnOeMOLAzNvitYMnSlKRP2E?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;How not to learn TypeScript&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great article from Stefan Baumgartner, full of good advice with which I fully agree. This should make it easier to get started with TypeScript and to gradually increase your skills without tears and pain. TIL about the¬†&lt;code&gt;noEmitOnError&lt;/code&gt;¬†flag.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://click.revue.email/ss/c/DMfKibboC_ZTmX8uI5IvEFs-iYyUeB8OWAsQpZfO7opypCVMxV65DMiQFKPRnK8RfLGwkbIap_Z1NKNwFYwS33R5hwX3OeV2H5opBlATEHEUys78oODZh6EHmfXUSnQWDRXxK7SOuKepkfZA_Go26TO4UuPmieJ8MCbU6T675XRK5SKmPaXjvodGToEs7duZ5X6M8twsROB0NP-jNfwox8ANvHJ_Gz6sD5QNsYs4-1Q/3im/XlzxqhFsQwuIvzDHCdZsKQ/h42/hEUR3aBm3-fxmjwyrka7N9rpf3wdpEUQnSnSDRGyhOE?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;A New Container Query Polyfill That Just Works&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chris Coyier's analysis on a new polyfill for container queries: a new, eagerly awaited CSS feature extremely useful for the encapsulation of responsive design (media queries) in component-based frameworks like React. This polyfill looks usable today for client-rendered apps, if you need SSR support it will unfortunately lead to FOUC until browsers support this.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://click.revue.email/ss/c/Q4yAUzxwNXTr2G6dmefrx2fvn6sFnQZRid1H4_SzJal6TBx3lSjJzsUJnqLKBHcl2iuKCcgT8YIMHryWuQHwFydkVV9nLv_rJ18-ceMA1G7AnfQ_YZC54BBvkxVl_QXuGA2iGp06Uj1P5bFFcCsOM3JtdKJ46zkJUMQgi5KyAPQo5xOJtrUIlEKhPfw8wHwmMxKrpFwFS2wNWfdsyGR7Wg/3im/XlzxqhFsQwuIvzDHCdZsKQ/h43/M_MtDJcinaOZdPZMu6CAkkg6Y7XWXmA2W1w0WnRtL8w?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;My first impressions of web3&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great post about the "web 3" from the Signal app creator, showing some surprisingly weird things in the current state of blockchain and NFT technologies. Many great answers from Web 3 leaders (like¬†&lt;a href="http://click.revue.email/ss/c/XN2t88CAhalHja1RClwc6ohErwFIqWBFKj0cc3IKFw1MQ3EICkRlDVkHLeDOiZB25apiRI7LNj0dhRYanBvzZ9KKh1P1R8Q8VFZcVlSAB7sw_fHr5P0F4cy8fUMJ4pMDZykaHqKIKPG9M1DUTDEQPjmjLMAnBiv4JxXoNX_9sAeBpVeuUUT42VOxokzMvG--HIVhv8TUOnRnR_k_0lps5225VSNc52SwjTLloQxDsI_UQH7vdna84iv2N1iEUm03/3im/XlzxqhFsQwuIvzDHCdZsKQ/h44/zo8tBM7FkzhNauP860kJ8beDzgjmQS6L3ht8Mib1cyg?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Vitalik&lt;/a&gt;). Also worth reading:¬†&lt;a href="http://click.revue.email/ss/c/XN2t88CAhalHja1RClwc6qnUAAaFz0g9RaRwGc52gx5LkCtZIJytWd38nr43entzxDDgnHpEuD4R-W-CwmhHdRr5HKt5CIC3Fv0cOkWoKSP4aNuWmCN6dmXGkshcf5h9vkdLKNdfMc75szNSSpemi0dqV-XMo9nBTDYLh9bOSOwerFaQfbtPxJcwtbzOcYy0W8w1Dq-X3r8gXEkiIslcV01Bxvl_VVPlSOP2FRwjt3vn57_3BPPLNhvPO5PNZVPs/3im/XlzxqhFsQwuIvzDHCdZsKQ/h45/qEitXJ7EyAkQnmxptpQPBiR_fnrAsEMt9HWgF0qRFME?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;The Myth of Decentralization and Lies about Web 2.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://click.revue.email/ss/c/ZBd8V3-T436PmZSgg_no_4E5tQfqvHM5xDNHy89Mg9lOHuMtLEx6RgXhBZMOQpq98JEyWavTEWXZU0brOwteyiFRn6KICL-7pqkV-XAaY7QFtdAzdIKBbI069qMozV8K6M76sgUvFoWW8SbCqPhLkq0KY-xwFQEvY2vWaRNQ2R8/3im/XlzxqhFsQwuIvzDHCdZsKQ/h47/RJQSrYq7Ye3JOr39JzYsTOM_gnPTC7IAKaOK2Mspeco?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;&lt;strong&gt;NAPI-RS v2&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This lib allows Node.js to interact efficiently with Rust code, and is increasingly used in our modern frontend tooling. V2 is a backward compatible rewrite that resolves some existing limitations, provide some automated binding files generations and new features. WebAssembly support planned.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extras:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="http://click.revue.email/ss/c/i4W3jH19ejJsNqtlezSpOzxjpLZNfqx99BlVQmngJJWOO2QpI8vaDnKiAMfe_CxrQtohw9GxQGLCl-E2C1bv8rEW84ixkzDgcwUOzwsXmk4GxIY9Js7SIJHM_-m4kMe5UrW371YM4bgas3cFnSgiogaUni1AATdS4KJgEnGidhpj6YATVw8TksB0jpfEPnFS/3im/XlzxqhFsQwuIvzDHCdZsKQ/h48/Nh29wW8iwvUZPSR0pWV3G6zbPUz9P2h9C1rHeslv6Co?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Browser-Vite&lt;/a&gt;: new innovation to run Vite inside your browser, using service workers. Interesting comparison with¬†&lt;a href="http://click.revue.email/ss/c/tViTjqfgHBuvLoFgNPyl4iIWRki-gcELn3W_dsCEcy964ktU9seFc3bUPwTgsenHb1lDodZRjkMz7BtzMK0jtTKCNu1g7Oi7pjPZpdp2gppuOdEygkBPZ38vMRiMFlnf4d7nqHh7aqcz3q8ObQetLQ0G6kSKRqUSf4sX6O5B1czUuN8-UR8zBJCVCsnVR73eYQVlRyClQyOH5p35nvBQEQ/3im/XlzxqhFsQwuIvzDHCdZsKQ/h49/j-MJCRsg8vV2AhsgDP9uSHNTqaGAwFW1vXCsUvTqNas?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Stackblitz WebContainers de StackBlitz&lt;/a&gt;¬†in the end.&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://click.revue.email/ss/c/OvZMTmFNG_ogo9mVNMFA3wYgN3xzt3sMxAOtT1Ci84t92yukiZBwC37JhQmkr6jjd7WUKVqyNfXLHTLuQbn0UEmpm8AYFv7UhCbuurA172kCJt_k_CWsjG35xz4PnK-HguW7CySC76JN0mhd3MR1Lh84h6hmST0JW9y8WHRqk_5I70l-XYzJ9yeTiLJSkzzR08GXPp4FnGfi-RstV5-X_Q/3im/XlzxqhFsQwuIvzDHCdZsKQ/h50/1c1rS9btkAY27f8qIpNoCtJW478OZYafFe6Oq6UoX9E?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Partytown in beta&lt;/a&gt;: lib to improve web perf by off-loading third-party scripts in service workers. Now in beta, looking for feedback to make it production ready. Exploring new implementation based on¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Atomics&lt;/a&gt;¬†for page&amp;lt;-&amp;gt;SW communication (instead of XHR sync)&lt;/li&gt;
&lt;li&gt;  AWS Lambda now supports¬†&lt;a href="http://click.revue.email/ss/c/OvZMTmFNG_ogo9mVNMFA36x1Erxl2XLw14NoU0fnZIMxvf2era6FAp2IkATNvdfM0NpCfdGn0KCP9CueQQMxn5hBqW2OnsDJy4g_7frTE612u9ACHf7r3supTK9jiBCgRXp1zu6iNw8c87cyeOwpqlCkIEpWppmc_QmEWpNWFATJuspobVngEmVptokvtELqaF3lZhHhHFUFqIX7pw4hwg/3im/XlzxqhFsQwuIvzDHCdZsKQ/h51/nw0TzolAfXMGcdaOcgGfhzi67wFmelpoCTpACYBBnKc?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;ES modules et top-level await&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;  An open-source maintainer willfully¬†&lt;a href="http://click.revue.email/ss/c/qdcGKZkIoGeXjvVtydBpPLnVovFGysjTu0wd3fNLSUYDVWgQhlISOTTHeFb_Oby4yaiPVjukWeE1IYtxLU0WUCcysvCguMC4iAVdFBzgnOVzwa52zqtjCd7GkL1l2calid_XZSequ1ATj7dwpw--X24RglcSqEmUCPvCD2vU2w39ZWlOecy1wo5UD4b-4aysyhQUR38mS5KdpuEjcFiPCw/3im/XlzxqhFsQwuIvzDHCdZsKQ/h52/0Dh25L1cT8bKNQbuOKSeUlcrccs6tha7YmKLjvsUW2w?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;sabotages his own npm packages colors &amp;amp; faker.js&lt;/a&gt;¬†to denunciate the lack of open-source funding&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://click.revue.email/ss/c/LCzjJVqW3iU4uG4vv7g717BxZ2z5bkBYfsN4lhvKvto8WHxzHewSeO8qK9gvD47g8Y9XBtYByFf6XEAgPBqmjptR_h2ZVgZFc5C1vHXNpivxwuV5O-IoSuTjZ3zydkzTofyltkTnTjGmlIbuDJRkdXtI-AjbUHMxEwjfrYIvC9Z0yxU2adufSiuWSgWAaCVQ3mNPhJyJQI5-jIJTVWoMdygSzcG5RfFs01ziTIGcs9g/3im/XlzxqhFsQwuIvzDHCdZsKQ/h53/QGWXJRgr1zb2hq1VJXPHT_z1mhhtAYn7DdZyHTYiDTU?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Prettier begins paying maintainers&lt;/a&gt;: but... not enough for 1 person full-time, yet this lib is used by the whole JS industry üòÖ crazy times&lt;/li&gt;
&lt;li&gt;  We wonder who's gonna¬†&lt;a href="http://click.revue.email/ss/c/OvZMTmFNG_ogo9mVNMFA307Z_yrwvcZ7_47u3TRrj6-Y7RS7Dik2EehLY7ba0IBVUsXhGzGoZxWZxv7CUWKqhJnPbvk8NtYLYB2uvdZUDXFAwENR1XufAySTQuCiwRNzNNYlhhCjhtHYUcjBjLbJJMGUb7is1jtR98OLLAjVAfrlNpJJABXjy8X8JlDOPOArvld3Av7vErwcr6bRhQBS4g/3im/XlzxqhFsQwuIvzDHCdZsKQ/h54/jv12ofG9_Yw42245wDMGgEiKoKpHIf0BMTp7H6yoonw?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;hire Jamie Kyle&lt;/a&gt;...¬†üòè&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://click.revue.email/ss/c/OvZMTmFNG_ogo9mVNMFA3wa3a9z1OBhUSK2NPV1UKQw72ttxzZ9T3lljIOYzACp1CiivN2fJwx5AyRydDoQVnfikYhQIyXRGnjeWdIxADP3X2O9274HFB5P9KUT2HyrC03UwouDQ6BIm_K-V4TI2AJPbaIub2qe1tMPiEQRzJQ0ClEMpN9fgkDBMZBfBD_aK67aGguWf4NTDOn299fU7DbfrZ9AhL_aAZfGb_hfstb6kaVq7yFnuN6d6AjYC0w8n/3im/XlzxqhFsQwuIvzDHCdZsKQ/h55/wPbljdGA2moDMvblBKIV3Nv_nTp_SpCB-2OALSq4XeM?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Svelte Core Team Mulls Rust Compiler to Further Speed Web Apps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://click.revue.email/ss/c/kpwlfvpU1JOX3R2iK4zkhItF9qVzxy1eqFV3pCmDxpT_yl58Y7_Fyw4pncBoHiflbveMYW3jKM6byALh3p2WuPVxsYFSlp3DNO6LiWuRKM4LFBpYROcD7GelRDzRdzKKKW7GRmk8p0A4rSYXqI0sDLx1NDJUKwJqLvYlCikv_7skQmxV_G1Xh5lBeDw1bQp_uZagu-L2hrGBQlld4zM6PQ/3im/XlzxqhFsQwuIvzDHCdZsKQ/h56/4s-j4ISwiX-rC_SvdC3WlISqaxvvVPVQLhWcVmRLJLc?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Solid 1.3&lt;/a&gt;: notable improvements on server rendering which supports streaming, error boundaries and "Islands architecture" hydration inspired by Astro&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://click.revue.email/ss/c/TzfyQfvFfgo-vTkXDZQg12c33OFKuG-LOUsY1mTCzfXCNwqsrqZ5mLyHqV4bOGbsiTGPyYeS7oKE5emusLgxRY2MmRsMMpZcM_vdIDX363MZlbW-DfDCK_SpDGfIyK5XCWK7MMWQkPqY3xbprXmNIqlEEekACLx-DPYpxKxT65EjejB5-sA40-T76qqv_KU4/3im/XlzxqhFsQwuIvzDHCdZsKQ/h57/g6R8Oa81RsdE0y_SCq6JmkV4WeiDwESFyfSWe1Tghx8?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Tina:&lt;/a&gt;&lt;a href="http://click.revue.email/ss/c/OvZMTmFNG_ogo9mVNMFA38RiD6CUDCzxLqPIv6DVMXvHb8qhGtqqhNPRXzKra9nKlCFF7J4W4Kt9ke6uH78IGwUGlOQGugOBn5oTRmx4OGPP0AhWO73xmCqA3h1LomB7Wx9w8IgHpMmzH4Q50-8CZ3w39m7jkD8vvGAGHr3kkjtV_OsgM7agTmeNiA9dnien/3im/XlzxqhFsQwuIvzDHCdZsKQ/h58/nMq0gYgYeg6yZ8gxymvusWnrCm1g7aWhhhZPDLXtI3I?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;New Year, New CMS?&lt;/a&gt;¬†really need to try it, the native MDX support is appealing&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://click.revue.email/ss/c/kpwlfvpU1JOX3R2iK4zkhAfU2AWE2KcbENkDlWoBt-RSm7uXR9oEbv8b3nbrTJbvwPcdNj4pr9-DSuKjy6L7duZqEd5vlu6KrJvP3v3o3PocUWgmmhDBoyCSLH-sBlnM0LoCm1Uo1nnSneESLfgIyXyl7jrRKLxW5z7KEir-8dBi3YC_6T7UZ0aGiktMLlp2/3im/XlzxqhFsQwuIvzDHCdZsKQ/h59/Cen7QHtK4Gh7KJGeU5ZCjsyHtnnhgYn4er9Y9-3iNuQ?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;fast-json-stringify 3.0&lt;/a&gt;: reported as 2x faster than JSON.stringify&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://click.revue.email/ss/c/kpwlfvpU1JOX3R2iK4zkhKYU7f3HOd2Iz7majPp6VW4I259nSoZSvP9YzwcftUGD-uun-tqfm-tSWiZXTy1aihKCG2fxpNFBqAG8yxmOJQuaCcS8bdqwu3vW-XEsaHvEU9ys7p6BNF3oteKoMPSJYuILNc6sayOn1MfSYigYT4UGbPw0fiuNsvdfB7w-rLzNLbcLD3n45we1PQwcqsUVEQ/3im/XlzxqhFsQwuIvzDHCdZsKQ/h60/mNp-RJ7zCKdQnFeC4bGeIXORoWzUlwq_Bbx1SysCsdM?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;TypeScript-Compiler-Notes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  üé•¬†&lt;a href="http://click.revue.email/ss/c/XN2t88CAhalHja1RClwc6pfjakVap186AH3NzFQpVNmOI_kfnvX4hnnPrcM6PwyVP870FoLgG5EuU0FqoozUBH_7WLArWQmXmju_NtR4YeL-cSci6TXqOE9DyOvZoUqQK9HUude_prfHcTe0rsf14TR4EjOJGWeagx5sDK0YiC-5PFJfyichaWICXDGl4ALq/3im/XlzxqhFsQwuIvzDHCdZsKQ/h62/3otbVcDJvEc4dATUz6CNLvREsM7fTaU3Fc6tKVtdkqA?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;The Story of TypeScript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  üé•¬†&lt;a href="http://click.revue.email/ss/c/XN2t88CAhalHja1RClwc6pfjakVap186AH3NzFQpVNmOI_kfnvX4hnnPrcM6PwyVP870FoLgG5EuU0FqoozUBH_7WLArWQmXmju_NtR4YeL-cSci6TXqOE9DyOvZoUqQK9HUude_prfHcTe0rsf14TR4EjOJGWeagx5sDK0YiC_IFHVgbW93iuIICfIVll4c/3im/XlzxqhFsQwuIvzDHCdZsKQ/h64/_iRy3qbFnKfKko0Aq-bgsjA_8xi6D9TUZG5JVn8uLZE?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Imperative vs Declarative Programming&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://click.revue.email/ss/c/qdcGKZkIoGeXjvVtydBpPNV58_cQbEIbQ78ue2Lmdp1u3JKdNsupNaUFp2PzW90FNBoE1O-R7bmX_c2cxvOeL4gsdRYTt3HsCC2p7o-IpMy1pL17qXSmcPkmA29KAizh3Mr3MqM-J2t-MI2jIZ9oWFe6IjdJ5jwFE1aSpCGh_TydeGTNepu3ETNGJjVV4-UyjQolyi5fkXo5VgXLDlhnRQ/3im/XlzxqhFsQwuIvzDHCdZsKQ/h65/YmtUzXvigFaY2BvbhxP5jZTzR1gneI5pW6avbjsc7rg?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Design integrations for Storybook&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://click.revue.email/ss/c/OvZMTmFNG_ogo9mVNMFA3zMloDttzW0TnrQJ6Il9ed51u10MdBwllXTiMQ8l9XQzegpf3dPbCW0OjMxWsDsb42MZMrqrRznV8jS7ig1ESKU2THFlv_v0Cp6p5s6BktUxDbWR2M-RB9XJLykFeNiA2MlncmpiQfHVOdQyNZObu06iV34zE5bzSwujMm6u-GbOae2vIUm5FEHFZFLve-wMPg/3im/XlzxqhFsQwuIvzDHCdZsKQ/h66/YCZl42aT8ozaiCUFHKfhXDIQdCnIGnRabPBQg_LBG-c?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Parcel 2.1&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://click.revue.email/ss/c/i4W3jH19ejJsNqtlezSpO9ffHA85fnO5VtS3N3CIlvlr2yQpOK4JlZDmiZKB-cN6BW1g2eIfIof3WpG945kKbCKp3jrCw0h3HgyquCIp9ngQPT5ar-Xpcc1_tyZvFfxEIn9YG2gcbv2k7xwgRt4p6s-uZcfRhMTEw4mwWld4KCg1fbpuX9l6DUIGTa5bXraugPNAZqaoGLoUWJBm_Ca8qQ/3im/XlzxqhFsQwuIvzDHCdZsKQ/h67/7CvjeKjhrOJqWg3UKknmXlh0c509jFW2iGnZ2aH38pg?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;New in Chrome 97&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://click.revue.email/ss/c/ZBd8V3-T436PmZSgg_no_0ajU36cxH49R2uOOxJRHVFXzpEYfm8hcwmibfVnYIlbFraxGJUl-15d5pqIMra63T19W5MUY_NJ6Fuk5EYuYpDSS_ZRytA2CtN2_kuecaX9BXNkaNxaYt69qJzScwCvU0bAEoQu5SJY1RFr_E0ldXgEEIpDTF4cQQFXXbd9QmAj5xBIHZVF0wasuUNuzix1VGkYF32eGnRwY_0rwe_XmxfTrR_8LITCsEusC0hOChxfQe7wydm1parSYuogVl_3Ww/3im/XlzxqhFsQwuIvzDHCdZsKQ/h68/LdBw-GVTO_-xiDawZspHw3k9FJJTmvnHpQ_6on6E77o?utm_campaign=thisweekinreact&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;Introducing fuite: a tool for finding memory leaks in web¬†apps&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://twitter.com/_chenglou/status/1479301107943809025"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gGCSywrL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t49tztfud50q24t77kov.png" alt="Image description" width="880" height="836"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>reactnative</category>
      <category>typescript</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Spring Auto-wiring and interact with other POJOs</title>
      <author>Suvasish Das</author>
      <pubDate>Wed, 12 Jan 2022 08:40:56 +0000</pubDate>
      <link>https://dev.to/suvasish114/spring-auto-wiring-and-interact-with-other-pojos-4d8g</link>
      <guid>https://dev.to/suvasish114/spring-auto-wiring-and-interact-with-other-pojos-4d8g</guid>
      <description>&lt;p&gt;In this tutorial, I'm going to cover how to interact with internal POJOs (Plain Old Java Objects) in spring application. Also I'm going to cover why spring need auto-wiring between two POJOs. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h2&gt;

&lt;p&gt;Sometime the POJO instances or beans need to refer another POJO instance to complete application's functionality (i.e. a POJO instance is dependent on another POJO instance). To access a POJO inside another POJO, we need to specify the bean reference inside the configuration file. Often, this dependency need to handle manually by programmers. But, in large commercial application, we need a more reliable way to resolve this inner dependency. That's where spring auto-wiring comes in place.&lt;/p&gt;

&lt;p&gt;By auto-wiring, spring container establish a relationship between two POJO instances. By enebeling auto-wiring, we let spring to resolve collabration between beans automatically. Thus autowiring can be especially useful during development, without negating the option of switching to explicit wiring when the code base becomes more stable.&lt;/p&gt;

&lt;p&gt;The autowiring functionality has four modes. They are-&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Mode&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Explanation&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;no&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;(Default) No auto-wiring. Bean references must be defined by ref elements. Changing the default setting is not recommended for larger deployments, because specifying collaborators explicitly gives greater control and clarity. To some extent, it documents the structure of a system.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;byName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Auto-wiring by property name. Spring looks for a bean with the same name as the property that needs to be auto-wired. For example, if a bean definition is set to auto-wire by name and it contains a master property (that is, it has a setMaster(..) method), Spring looks for a bean definition named master and uses it to set the property.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;byType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Lets a property be auto-wired if exactly one bean of the property type exists in the container. If more than one exists, a fatal exception is thrown, which indicates that you may not use byType auto-wiring for that bean. If there are no matching beans, nothing happens (the property is not set).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;constructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Analogous to byType but applies to constructor arguments. If there is not exactly one bean of the constructor argument type in the container, a fatal error is raised.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#program-structure"&gt;
  &lt;/a&gt;
  Program structure
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FHEQfgtH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3gxvgw7p8l8lu79965t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FHEQfgtH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3gxvgw7p8l8lu79965t.png" alt="Image description" width="880" height="407"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github repository link: &lt;a href="https://github.com/suvasish114/SpringAutowire"&gt;click here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#program-logic"&gt;
  &lt;/a&gt;
  Program logic
&lt;/h2&gt;

&lt;p&gt;Let's create a java class named &lt;code&gt;Laptop&lt;/code&gt; having four local variable, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;price&lt;/code&gt;, &lt;code&gt;motherboard&lt;/code&gt;, &lt;code&gt;processor&lt;/code&gt;. motherboard is an object of &lt;code&gt;Motherboard&lt;/code&gt; class and processor is an object of &lt;code&gt;Processor&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zs3rRb2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ve20urwmbmpe14uvqvbr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zs3rRb2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ve20urwmbmpe14uvqvbr.png" alt="Image description" width="880" height="264"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;So, we can clearly see that, &lt;code&gt;Laptop&lt;/code&gt; class has inner dependency on &lt;code&gt;Motherboard&lt;/code&gt; and &lt;code&gt;Processor&lt;/code&gt; class. In normal programming approach, we need to declare each of dependent object with &lt;code&gt;new&lt;/code&gt; operator. But, whenever we use &lt;code&gt;new&lt;/code&gt; to declare object, we are hardcoding the value (the program will have tight coupling). So, we are going to resolve this problem by declaring POJO instances. Now, we don't need to hardcoding values inside our program logic.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Filename: Laptop.java&lt;/span&gt;
&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.example.SpringAutowire&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Laptop&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;Motherboard&lt;/span&gt; &lt;span class="n"&gt;motherboard&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;Processor&lt;/span&gt; &lt;span class="n"&gt;processor&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// constructors&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Laptop&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// getters and setters&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;getPrice&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setPrice&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;Motherboard&lt;/span&gt; &lt;span class="nf"&gt;getMotherboard&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;motherboard&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setMotherboard&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Motherboard&lt;/span&gt; &lt;span class="n"&gt;motherboard&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;motherboard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;motherboard&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;Processor&lt;/span&gt; &lt;span class="nf"&gt;getProcessor&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;processor&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setProcessor&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Processor&lt;/span&gt; &lt;span class="n"&gt;processor&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;processor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;processor&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;getLaptopDetails&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Laptop Name: "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Laptop price: "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Motherboard: "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;motherboard&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Processor: "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;processor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Filename: Motherboard.java&lt;/span&gt;
&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.example.SpringAutowire&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Motherboard&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Filename: Processor.java&lt;/span&gt;
&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.example.SpringAutowire&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Processor&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, It's time to define POJO instances for the above java classes. To do this, I'm going to create a &lt;code&gt;.xml&lt;/code&gt; file named &lt;code&gt;Beans.xml&lt;/code&gt; inside my application root class-path.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;beans&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.springframework.org/schema/beans"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:xsi=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2001/XMLSchema-instance"&lt;/span&gt;
    &lt;span class="na"&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class="s"&gt;"http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, inside those &lt;code&gt;&amp;lt;beans&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;/beans&amp;gt;&lt;/code&gt; tag, we are going to define our individual POJO instances, with some values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"laptop"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"com.example.SpringAutowire.Laptop"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"dell vostro 1450s"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"price"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"45000"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"motherboard"&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"motherboard"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"processor"&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"processor"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"processor"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"com.example.SpringAutowire.Processor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"intel i3 11g"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"motherboard"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"com.example.SpringAutowire.Motherboard"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"gigabyte h81ms v2"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that inside laptop bean, the value of &lt;code&gt;motherboard&lt;/code&gt; and &lt;code&gt;processor&lt;/code&gt; is referencing (&lt;code&gt;ref&lt;/code&gt; attribute inside &lt;code&gt;property&lt;/code&gt; tag refer to another POJO. It's not mandatory to place the POJO instances inside same xml file) to another POJO instances, which are declared after &lt;code&gt;laptop&lt;/code&gt; POJO. By doing this, we have resolve internal POJO dependency. Now, if you run your application (with driving code), it will work successfully.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#autowiring-pojos"&gt;
  &lt;/a&gt;
  Autowiring POJOs
&lt;/h2&gt;

&lt;p&gt;So far we resolve internal POJO dependency. But, still we writing POJO dependency by ourself manually. By using &lt;code&gt;autowire&lt;/code&gt; attribute inside a &lt;code&gt;&amp;lt;bean&amp;gt;&lt;/code&gt; tag, we let spring to automatically fetch the internal beans.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"laptop"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"com.example.SpringAutowire.Laptop"&lt;/span&gt; &lt;span class="na"&gt;autowire=&lt;/span&gt;&lt;span class="s"&gt;"byName"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"dell vostro 1450s"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"price"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"45000"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that, now laptop no longer has &lt;code&gt;processor&lt;/code&gt; and &lt;code&gt;motherboard&lt;/code&gt; value defined. By define &lt;code&gt;autowire="byName"&lt;/code&gt;, srping will search for the required beans by its name, and whenever match found, spring will automatically refer the bean at compile time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#driving-code"&gt;
  &lt;/a&gt;
  Driving code
&lt;/h2&gt;

&lt;p&gt;Now, we are ready to write our final pice of code or the driving code. Now create a java class containing the main method(if you create your project using maven or groovy project template, you are provided a java class containing main mathod, just use those file).&lt;/p&gt;

&lt;p&gt;Inside those class declare a &lt;code&gt;ApplicationContext&lt;/code&gt; variable and&lt;br&gt;
define with &lt;code&gt;ClassPathXmlApplicationContext()&lt;/code&gt; with parameter the string representation of your configuration xml file name with fully specified path (in my case, my xml file is placed at the root location, so I no need to enter the fully specified path name). Make sure that this variable is declared as static, so that we can access it from main method.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;ApplicationContext&lt;/code&gt; interface is responsible to create the spring IOC container(if you are not familiar with IOC, &lt;a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-factory-autowire"&gt;click here&lt;/a&gt; and go through the documentation). &lt;code&gt;ClassPathXmlApplicationContext&lt;/code&gt; class is a subclass which implemented &lt;code&gt;ApplicationContext&lt;/code&gt; interface. There are many other subclass available to create IOC container.&lt;/p&gt;

&lt;p&gt;Now, inside the main method of our code, create a variable of type Laptop and instantiated it with a defined bean. In this case &lt;code&gt;context.getBean("laptop", Laptop.class)&lt;/code&gt; return a variable of type &lt;code&gt;Laptop&lt;/code&gt;. The first argument of getBean refers to the bean name as string and the second argument refers to the actual class. By default &lt;code&gt;getBean()&lt;/code&gt; method's return type is &lt;code&gt;java.lang.Object&lt;/code&gt;. The second argument in the &lt;code&gt;getBean()&lt;/code&gt; method actually used to typecast the value. So we no need to typecast it manually. In the below code, I'm typecasting the value to &lt;code&gt;Laptop.class&lt;/code&gt; type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.example.SpringAutowire&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.context.ApplicationContext&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.context.support.ClassPathXmlApplicationContext&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nc"&gt;ApplicationContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ClassPathXmlApplicationContext&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Beans.xml"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;){&lt;/span&gt;
       &lt;span class="nc"&gt;Laptop&lt;/span&gt; &lt;span class="n"&gt;laptop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getBean&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"laptop"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Laptop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
       &lt;span class="n"&gt;laptop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getLaptopDetails&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lFzY3auS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kgy1nvkhxewiukjpilx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lFzY3auS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kgy1nvkhxewiukjpilx.png" alt="Image description" width="880" height="209"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>java</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
