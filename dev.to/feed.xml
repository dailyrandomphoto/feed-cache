<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>DevSecOps notes!</title>
      <author>Bour Abdelhadi</author>
      <pubDate>Tue, 28 Sep 2021 12:31:20 +0000</pubDate>
      <link>https://dev.to/bscript/devsecops-notes-490j</link>
      <guid>https://dev.to/bscript/devsecops-notes-490j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#devsecops-notes"&gt;
  &lt;/a&gt;
  DevSecOps notes!
&lt;/h2&gt;

&lt;p&gt;I spent the last three months reading the &lt;a href="https://www.oreilly.com/library/view/agile-application-security/9781491938836/"&gt;Agile Application Security book,&lt;/a&gt; book, which helped to learn more about how to:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Add security practices to each stage of the existing &lt;em&gt;SDLC&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Integrate security with planning, requirements, design, and at the code level.&lt;/li&gt;
&lt;li&gt;Implement regulatory compliance in an agile or &lt;em&gt;DevOps&lt;/em&gt; environment.&lt;/li&gt;
&lt;li&gt;Build an effective security program through a culture of empathy, openness, transparency, and collaboration.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;The software development area is changing every day, and it keeps accelerating. Therefore, The security pioneers should also &lt;em&gt;change&lt;/em&gt; the way how to operate.&lt;/p&gt;

&lt;p&gt;Integrating security in each stage of your existing development lifecycle requires a good plan and a well-documented study on your current environment setup.&lt;/p&gt;

&lt;p&gt;Most organizations face a slowdown issue when it comes to executing security tasks in the &lt;em&gt;SDLC workflow&lt;/em&gt;, and the main problem is the absence of &lt;em&gt;Automation&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Automation&lt;/em&gt;&lt;/strong&gt; will play a key role in enabling application security to sustain the speed of &lt;em&gt;DevOps&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-devsecops"&gt;
  &lt;/a&gt;
  What is DevSecOps?
&lt;/h2&gt;

&lt;p&gt;Before I say anything, I'd like to mention that &lt;em&gt;DevSecOps&lt;/em&gt; is not a &lt;em&gt;one-person&lt;/em&gt; job; What you see on &lt;a href="https://linkedin.com/"&gt;LinkedIn&lt;/a&gt; and other job listing websites is titles, nothing more than.&lt;/p&gt;

&lt;p&gt;DevSecOps is a &lt;em&gt;culture&lt;/em&gt; or a process where the whole team (Development and IT operations) works &lt;em&gt;collaboratively&lt;/em&gt; to build, test, and release software in a more agile, &lt;em&gt;secure&lt;/em&gt;, and iterative manner than the traditional software development process.&lt;/p&gt;

&lt;p&gt;In a nutshell, &lt;em&gt;DevSecOps&lt;/em&gt; means integrating &lt;em&gt;security&lt;/em&gt; into every stage of the software development lifecycle. Some people refer to it as &lt;strong&gt;&lt;em&gt;shift-left&lt;/em&gt;&lt;/strong&gt;, which suggests moving critical testing practices earlier in the &lt;em&gt;SDLC&lt;/em&gt;.&lt;/p&gt;



&lt;p&gt;This is a mainly DevSecOps flow chart. On this basis, we can think that the most prominent feature of DevSecOps to SDL is &lt;strong&gt;&lt;em&gt;Automation&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--asEhHK1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmdddilhru34oi25dx4a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--asEhHK1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmdddilhru34oi25dx4a.png" alt="DevOps Approach"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before moving further with &lt;strong&gt;&lt;em&gt;Automation&lt;/em&gt;&lt;/strong&gt;, we should divide the testing part into two sections:&lt;/p&gt;

&lt;p&gt;1- &lt;strong&gt;&lt;em&gt;White-box&lt;/em&gt;&lt;/strong&gt; is the practice of testing the code running behind the scene. This kind of testing is typically executed in Static Application Security Testing (SAST), including analyzers and linters in the IDE. Scanning the codebase we write is not enough; nowadays, 80-90% of a software project is third-party code in the form of libraries and packages. Thus we need Software Composition Analysis (SCA) to detect software licenses, deprecated dependencies, and known vulnerabilities.&lt;/p&gt;

&lt;p&gt;2- &lt;strong&gt;&lt;em&gt;Black-box&lt;/em&gt;&lt;/strong&gt; is another way of testing the application while it's &lt;strong&gt;&lt;em&gt;running&lt;/em&gt;&lt;/strong&gt;; it's also known as Dynamic Analysis security testing (DAST). Black box analysis occurs in real-time, finding security issues that an attacker could exploit while the application is running in the production server.&lt;/p&gt;

&lt;p&gt;The most common issue we face as security engineers is a large number of the &lt;strong&gt;&lt;em&gt;false positive rate&lt;/em&gt;&lt;/strong&gt;, which we'd like to reduce by using both &lt;em&gt;black-box&lt;/em&gt; and &lt;em&gt;white-box&lt;/em&gt; test techniques. &lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#integrate-security-tools-in-your-build-pipeline"&gt;
  &lt;/a&gt;
  Integrate Security tools in your build pipeline
&lt;/h2&gt;

&lt;p&gt;If you'd like to integrate SAST/SCA/DAST/ or RASP tools, all you need to do is to choose a suitable CI/CD tool such as &lt;a href="https://docs.gitlab.com/ee/ci/"&gt;GitLab CI/CD&lt;/a&gt;, &lt;a href="https://www.jenkins.io/"&gt;Jenkins&lt;/a&gt; or anything else.&lt;/p&gt;

&lt;p&gt;Integrating those security tools is not enough to ensure that we have everything in place. The most challenging job is to review the tool's results and automate that process as well.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;"It's much more useful to think of security as being a vector to follow rather than a point to be reached. Vectors have size and direction, and you should think about the direction you want to go in pursuit of security and how fast you'd like to chase it. However it's path you will continue to walk forever."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/feed/"&gt;@Bour Abdelhadi&lt;/a&gt;&lt;/p&gt;

</description>
      <category>security</category>
    </item>
    <item>
      <title>Luos 2.0 is released to the world</title>
      <author>Emanuel Allely</author>
      <pubDate>Tue, 28 Sep 2021 12:20:26 +0000</pubDate>
      <link>https://dev.to/emanuel_allely/luos-2-0-is-released-to-the-world-4go9</link>
      <guid>https://dev.to/emanuel_allely/luos-2-0-is-released-to-the-world-4go9</guid>
      <description>&lt;p&gt;üéâ The whole team is proud to announce the v2.0.0 &lt;strong&gt;release&lt;/strong&gt; of Luos with even more crucial features for &lt;strong&gt;embedded&lt;/strong&gt; developers such as Profiles to simplify user API, Packages to simplify portability, Bootloader, Gate discovering, Pyluos shell, Selftest üÜï&lt;/p&gt;

&lt;p&gt;‚öôÔ∏è Luos is the new way to think, create, maintain and evolve embedded systems. It's an &lt;strong&gt;open-source&lt;/strong&gt; and real-time orchestrator for distributed architectures to easily design, test and deploy embedded applications, like &lt;strong&gt;Tesla&lt;/strong&gt;, &lt;strong&gt;SpaceX&lt;/strong&gt; or &lt;strong&gt;Dyson&lt;/strong&gt; do. ü§ñ&lt;/p&gt;

&lt;p&gt;Discover Luos üëâ &lt;a href="https://docs.luos.io"&gt;https://docs.luos.io&lt;/a&gt; and feel free to contact us to discuss your project üöÄ&lt;/p&gt;

</description>
      <category>embedded</category>
      <category>opensource</category>
      <category>luos</category>
      <category>release</category>
    </item>
    <item>
      <title>DRY Way to Manage Subscriptions in Angular Components</title>
      <author>Marko Stanimiroviƒá</author>
      <pubDate>Tue, 28 Sep 2021 12:10:26 +0000</pubDate>
      <link>https://dev.to/this-is-angular/dry-way-to-manage-subscriptions-in-angular-components-256j</link>
      <guid>https://dev.to/this-is-angular/dry-way-to-manage-subscriptions-in-angular-components-256j</guid>
      <description>&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/photos/eOpewngf68w"&gt;Tim Swaan&lt;/a&gt; on Unsplash.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This article explains how to manage subscriptions in Angular components without repeating the same teardown logic in each component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#common-ways"&gt;
  &lt;/a&gt;
  Common Ways
&lt;/h2&gt;

&lt;p&gt;There are two common ways to manage RxJS subscriptions in Angular components to prevent memory leaks:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-subscription"&gt;
  &lt;/a&gt;
  Using Subscription
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;interval&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;templateUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./interval.component.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;IntervalComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnInit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;OnDestroy&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// initialize `Subscription` object&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;subscriptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Subscription&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;ngOnInit&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// add all subscriptions to it&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscriptions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`== &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; ==`&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscriptions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`=== &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; ===`&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;ngOnDestroy&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// unsubscribe from all added subscriptions&lt;/span&gt;
    &lt;span class="c1"&gt;// when component is destroyed&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscriptions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unsubscribe&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#using-destroy-subject"&gt;
  &lt;/a&gt;
  Using Destroy Subject
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;interval&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;templateUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./interval.component.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;IntervalComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnInit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;OnDestroy&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// initialize destroy subject&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;destroySubject$&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Subject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;ngOnInit&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`== &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; ==`&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="c1"&gt;// unsubscribe when destroy subject emits an event&lt;/span&gt;
        &lt;span class="nx"&gt;takeUntil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroySubject$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`=== &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; ===`&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="nx"&gt;takeUntil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroySubject$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;ngOnDestroy&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// emit destroy event when component is destroyed&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroySubject$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Both solutions have the same drawback: We have to initialize the additional property, and add teardown logic to the &lt;code&gt;ngOnDestroy&lt;/code&gt; method. However, there is a better way to manage subscriptions in Angular components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;p&gt;We can put the teardown logic in a single place by creating &lt;code&gt;Destroy&lt;/code&gt; class that extends the &lt;code&gt;Observable&lt;/code&gt; class and implements the &lt;code&gt;OnDestroy&lt;/code&gt; interface:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Destroy&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnDestroy&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// initialize destroy subject&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;destroySubject$&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ReplaySubject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// emit destroy event to all subscribers when destroy subject emits&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;subscriber&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroySubject$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;subscriber&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;ngOnDestroy&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// emit destroy event when component that injects&lt;/span&gt;
    &lt;span class="c1"&gt;// `Destroy` provider is destroyed&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroySubject$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroySubject$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, we can provide &lt;code&gt;Destroy&lt;/code&gt; at the component level and inject it through the constructor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="c1"&gt;// provide `Destroy` at the component level&lt;/span&gt;
  &lt;span class="na"&gt;viewProviders&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Destroy&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;IntervalComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnInit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// inject it through the constructor&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;destroy$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Destroy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="nx"&gt;ngOnInit&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`== &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; ==`&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="c1"&gt;// unsubscribe when `destroy$` Observable emits an event&lt;/span&gt;
        &lt;span class="nx"&gt;takeUntil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroy$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When a provider is provided at the component level, it will be tied to the component lifecycle which allows us to use the &lt;code&gt;ngOnDestroy&lt;/code&gt; lifecycle method within it. Therefore, the &lt;code&gt;ngOnDestroy&lt;/code&gt; method of the &lt;code&gt;Destroy&lt;/code&gt; provider will be called when the &lt;code&gt;IntervalComponent&lt;/code&gt; is destroyed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In general, manual (un)subscriptions in Angular components should be avoided. If you need to perform a side effect at the component level, you can do so using the &lt;a href="https://ngrx.io/guide/component-store"&gt;&lt;code&gt;@ngrx/component-store&lt;/code&gt;&lt;/a&gt; effects, and let &lt;code&gt;ComponentStore&lt;/code&gt; take care to prevent memory leaks. However, if you prefer to manage the side effects in the components, consider using the &lt;code&gt;Destroy&lt;/code&gt; provider to avoid repeating the same teardown logic in each component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#peer-reviewers"&gt;
  &lt;/a&gt;
  Peer Reviewers
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tim_deschryver"&gt;Tim Deschryver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/LayZeeDK"&gt;Lars Gyrup Brink Nielsen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>angular</category>
      <category>rxjs</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Do you need a Automata Library ?</title>
      <author>ZigRazor</author>
      <pubDate>Tue, 28 Sep 2021 11:42:54 +0000</pubDate>
      <link>https://dev.to/zigrazor/do-you-need-a-automata-library-1i6m</link>
      <guid>https://dev.to/zigrazor/do-you-need-a-automata-library-1i6m</guid>
      <description>&lt;p&gt;In this day i see that there is no implementation of an Automata Library in &lt;strong&gt;C++&lt;/strong&gt;.&lt;br&gt;
I think it can be useful for the community start a new open-source project for this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-automaton"&gt;
  &lt;/a&gt;
  What is an Automaton?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;is a relatively self-operating machine, or control mechanism designed to automatically follow a properations, or respond to predetermined instructions. ( &lt;a href="https://en.wikipedia.org/wiki/Automaton"&gt;Wikipedia&lt;/a&gt; ).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-automata-theory"&gt;
  &lt;/a&gt;
  What is the Automata Theory?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T3J_IYPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ywie65p4kcw1ncadjrov.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T3J_IYPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ywie65p4kcw1ncadjrov.png" alt="Classes of Automata"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Automata theory is the study of abstract machines and automata, as well as the computational problems that can be solved using them. ( &lt;a href="https://en.wikipedia.org/wiki/Automata_theory"&gt;Wikipedia&lt;/a&gt; )&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-an-automata-library"&gt;
  &lt;/a&gt;
  Why an Automata Library?
&lt;/h2&gt;

&lt;p&gt;There are so much reason to develop an automata library, but the most important is the capability of study and solve computational problem that can be solved with an &lt;strong&gt;Automaton&lt;/strong&gt;. For Example there are a lot of study on &lt;strong&gt;Formal Languages Theory&lt;/strong&gt; that use the Automata.&lt;br&gt;
Moreover Automata find a major role in &lt;strong&gt;theory of computation&lt;/strong&gt;, &lt;strong&gt;compiler construction&lt;/strong&gt;, &lt;strong&gt;artificial intelligence&lt;/strong&gt;, &lt;strong&gt;parsing&lt;/strong&gt; and &lt;strong&gt;formal verification&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-c"&gt;
  &lt;/a&gt;
  Why C++?
&lt;/h2&gt;

&lt;p&gt;I thought about &lt;em&gt;C++&lt;/em&gt; for performance reasons. With large automata the performance of other languages ‚Äã‚Äãcan be a bottleneck, so &lt;em&gt;C++&lt;/em&gt; can be a solution to this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;So do we need an &lt;strong&gt;Automata Library&lt;/strong&gt;? Maybe we do or maybe we don't but either way please let me know if you are interested in this project? I look forward to reading your comments.&lt;/p&gt;

&lt;p&gt;Thank you so much for reading.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>cpp</category>
      <category>opensource</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>How to use the JavaScript += operator?</title>
      <author>hrishikesh1990</author>
      <pubDate>Tue, 28 Sep 2021 11:33:24 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/how-to-use-the-javascript-operator-1fjh</link>
      <guid>https://dev.to/hrishikesh1990/how-to-use-the-javascript-operator-1fjh</guid>
      <description>&lt;p&gt;In this tutorial, we look at how to use the JavaScript += operator. We explain its use-case and break down the code to allow further learning.&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-javascript-"&gt;
  &lt;/a&gt;
  Table of Contents - JavaScript +=
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-does-mean-in-javascript"&gt;What does += mean in JavaScript?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#syntax-code-amp-explanation"&gt;Syntax, Code &amp;amp; Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts-javascript-"&gt;Closing thoughts - JavaScript +=&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-does-mean-in-javascript"&gt;
  &lt;/a&gt;
  What does += mean in JavaScript?
&lt;/h2&gt;

&lt;p&gt;The JavaScript += operator takes the values from the right of the operator and adds it to the variable on the left. This is a very concise method to add two values and assign the result to a variable hence it is called the addition assignment operator.&lt;/p&gt;

&lt;p&gt;This operator is not only used to add numerical values but can also be used to concatenate strings together. Essentially it replaces the variable = a + b syntax with a += b.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#syntax-code-amp-explanation"&gt;
  &lt;/a&gt;
  Syntax, Code &amp;amp; Explanation:
&lt;/h2&gt;

&lt;p&gt;The syntax of the assignment operator is quite straightforward and does not require any prerequisites.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case you are still confused, I shall break it down even further. This method is just a shorter way of writing the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are again taking the value on the right (y) and adding &amp;amp; assigning it to the value on the left (x). The assignment operator does the same in a more concise method.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-using-javascript-"&gt;
  &lt;/a&gt;
  Code using JavaScript +=:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Code using JavaScript +=&lt;/span&gt;
&lt;span class="c1"&gt;//On int values&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 

&lt;span class="c1"&gt;//On strings&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of the above code snippet is as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the values of ‚Äòy‚Äô &amp;amp; ‚Äòb‚Äô have been added to the ‚Äòx‚Äô &amp;amp; ‚Äòa‚Äô respectively.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts-javascript-"&gt;
  &lt;/a&gt;
  Closing thoughts - JavaScript +=:
&lt;/h2&gt;

&lt;p&gt;Using the JavaScript += operator would help increase code readability, and such minor changes would help while working with a group of senior developers.&lt;/p&gt;

&lt;p&gt;Once you have familiarized yourself with the addition assignment operator (+=) I would recommend practicing the other assignment operators. There are seven in total ( =, +=, -=, &lt;em&gt;=, /=, %=, *&lt;/em&gt;= ), and mastering them all would help you go a long way.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Why I can't wait for the :has() pseudo-class in CSS</title>
      <author>Charanjit Chana</author>
      <pubDate>Tue, 28 Sep 2021 11:19:11 +0000</pubDate>
      <link>https://dev.to/cchana/why-i-can-t-wait-for-the-has-pseudo-class-in-css-5een</link>
      <guid>https://dev.to/cchana/why-i-can-t-wait-for-the-has-pseudo-class-in-css-5een</guid>
      <description>&lt;p&gt;This past week I had a great idea for a tiny PWA that would only use JavaScript to make sure it worked offline and nothing more. In the future, I could make use of localStorage to remember preferences, but beyond that there would be no need at all.&lt;/p&gt;

&lt;p&gt;I finally carved out some time after a few days mulling over the idea and was determined to make it work with the &lt;code&gt;:has()&lt;/code&gt; pseudo-class but it turns out that browser support is non-existent! I've seen it talked about for at least a year, maybe more so had assumed it would be safe to use.&lt;/p&gt;

&lt;p&gt;I came to the realisation yesterday that I should give up on the CSS-only approach, for now. I can revisit once &lt;a href="https://caniuse.com/css-has"&gt;browser support&lt;/a&gt; starts ramping up and strip out any JavaScript that's no longer required.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-i-cant-wait-for-has-to-come-to-css"&gt;
  &lt;/a&gt;
  Why I can't wait for :has() to come to CSS
&lt;/h2&gt;

&lt;p&gt;The reason I can't wait for the &lt;code&gt;:has()&lt;/code&gt; pseudo-class is that it's effectively a parent selector for CSS. I've been working professionally with CSS since 2005 and it's something I've wanted for the past 16 years at least. In the days before heavy JavaScript pages where things were just progressively enhanced, adding classes dynamically as you created the HTML was easy enough ‚Äì even if it meant more logic than was ideal.&lt;/p&gt;

&lt;p&gt;Then came along jQuery with its &lt;code&gt;.parent()&lt;/code&gt; function that meant we could progressively enhance the page rather than having to fetch from the server every time. In reality, this meant twice the logic in some cases. Once for the canonical server-side rendered pages and another for how it should be handled in JavaScript.&lt;/p&gt;

&lt;p&gt;When we finally get our hands on &lt;code&gt;:has()&lt;/code&gt;, no longer will we need helper classes or will we need to specify which item is 'active' at a higher level than the developer wants it to be.&lt;/p&gt;

&lt;p&gt;Here's an example of some HTML and where our classes are required right now. We have a menu where a sub-item is selected which needs to be highlighted, but I'd also like to highlight the parent item it belongs too but that also means adding a class:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div&amp;gt;
    &amp;lt;ul&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href="#"&amp;gt;Item 1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href="#" class="active"&amp;gt;Item 2&amp;lt;/a&amp;gt;
            &amp;lt;ul&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href="#" class="active"&amp;gt;Item 1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href="#"&amp;gt;Item 2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
             &amp;lt;/ul&amp;gt;
        &amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href="#"&amp;gt;Item 3&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href="#"&amp;gt;Item 4&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href="#"&amp;gt;Item 5&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Once we get &lt;code&gt;:has()&lt;/code&gt; in CSS though, our HTML changes a little and the parent no longer needs an explicit class to show that it's active:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div&amp;gt;
    &amp;lt;ul&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href="#"&amp;gt;Item 1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href="#"&amp;gt;Item 2&amp;lt;/a&amp;gt;
            &amp;lt;ul&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href="#" class="active"&amp;gt;Item 1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href="#"&amp;gt;Item 2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
             &amp;lt;/ul&amp;gt;
        &amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href="#"&amp;gt;Item 3&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href="#"&amp;gt;Item 4&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href="#"&amp;gt;Item 5&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;With just some CSS, we can now do the following to determine that the 'parent' has a child that meets the criteria:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;li:has(.active) &amp;gt; a {
    font-weight: bold;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;It really would be that simple, now the parent of an element with the class "active" is targeted with its direct descendent styled.&lt;/p&gt;

&lt;p&gt;I would personally prefer 'contains' or 'parent-of' instead of has for the pseudo-class name but I won't complain too much! This is yet another huge step in the right direction.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Which One is The Best Tech Stack Spring-Boot or Laravel for UberEats Clone App?
</title>
      <author>Johnmarison</author>
      <pubDate>Tue, 28 Sep 2021 11:18:12 +0000</pubDate>
      <link>https://dev.to/johnmarison2/which-one-is-the-best-tech-stack-spring-boot-or-laravel-for-ubereats-clone-app-2ifg</link>
      <guid>https://dev.to/johnmarison2/which-one-is-the-best-tech-stack-spring-boot-or-laravel-for-ubereats-clone-app-2ifg</guid>
      <description>&lt;p&gt;On-demand food delivery business online is now at its peak on startups among entrepreneurs. Due to its heavy market value in real-time, contemporary business personalities are highly focused on the profitable marketplace. In which, the UberEats clone app is the most favored for them with high benefits already in-built itself.&lt;/p&gt;

&lt;p&gt;Following, developing an UberEats clone for business could be done much more effectively through using some powerful tech-stack. On that, we are going to see about the two, Spring-boot and Laravel, backend frameworks on the basis of which one is the best for you to build your UberEats clone app to the present market demands.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UberEats Clone - An Overview of Client-centric Development Needs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ready to Move Design&lt;/strong&gt; - Today‚Äôs increasing competition in the food delivery marketplace rushes new service providers to present themselves online soon as possible. So that their new business apps are effectively visible for the users in real-time shortly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick Testing&lt;/strong&gt; - The high possibility to go live that quick with the UberEats clone app for the entrepreneurs‚Äô initiation is depending on fast unit testing. So that all the bugs or exceptions would be entirely clear for perfect business app output speedily.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;New Features Add-on Solution&lt;/strong&gt; - Even the readymade UberEats clone app solution available with all the very latest in-app options, having facilitated with additional add-ons is much expected by contemporary entrepreneurs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;High Security&lt;/strong&gt; - To securely sustain the digitized food delivery business online, it is crucial to have your yet-to-develop business app as robust. Therefore, ensuring high security is always considered important in UberEats clone development at present. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enhanced App Performance&lt;/strong&gt; - The more smoothie business app performance naturally acquires more users in fact. Hence, the food delivery app to businesses should possess such achievement for great user value and service productivity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Which One Is The Best Tech Stack Spring-Boot or Laravel for UberEats Clone?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Spring-Boot and Laravel, both are very popular backend frameworks in the development platform. And, could be widely used by most clone app developers around the world. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring-Boot and Laravel - UberEats Clone App Development Side of Notable Advantages&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G9ClDM-9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpadeqtjwwkj19a7p8by.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G9ClDM-9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpadeqtjwwkj19a7p8by.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring-Boot and Laravel - UberEats Clone App Development Side of Notable Disadvantages&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t-QYHFU6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i0j072bbdornth5ho3oh.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t-QYHFU6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i0j072bbdornth5ho3oh.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In which, the majority of today‚Äôs developers are highly preferred Laravel compared to Spring-boot because of its notable assistance in the UberEats clone app development as viewed.&lt;/p&gt;

&lt;p&gt;Following, the majority of today‚Äôs developers using the Laravel framework focus on its crucial benefits as discussed. Developing an UberEats clone for the on-demand food ordering service startup highly preferred some crucial custom-centric options. So that building your business app according to requirements makes your clients benefit from advanced stuff. &lt;/p&gt;

&lt;p&gt;Taking this into account, the following strategies greatly help you as a developer to create this ready-to-go food delivery app too progressive. For i.e., you could develop your new UberEats clone app powerful to the latest marketplace using the Laravel framework as follows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How Progressively You Can Develop Your UberEats clone with Selective Tech-stack?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advanced Built-in Tech Traits&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Laravel has its own templating system. Through this, you can format existing/default data and create a new one based on demands. So that the client could smartly get the new food delivery app apt to his exact business model and plan requirement. &lt;/p&gt;

&lt;p&gt;For i.e., it lets you remove any premade features and add a new one, and the entrepreneurs can create their apps by modulating the complete app look.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick Development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Utilizing Laravel‚Äôs powerful authentication technology, you could create your app much faster than usual. So that the possibility of getting a fully developed new app output for launching is reduced to days.&lt;/p&gt;

&lt;p&gt;As discussed earlier, the quicker the app launching smartly gains high user value for the greatest productivity evolutions. Also, such an advantage provides both sides, on you and on your client-side benefits evenly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Full-customizing Solution Provision&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Through your future-ready app creation with Laravel, you can provide a fully tailored app creation solution to entrepreneurs. Using the regularly improving framework technology you can smartly build your food delivery app with extraordinary functionality nature.&lt;/p&gt;

&lt;p&gt;When it goes to the custom modulations, it completes with uniqueness in the actual business app output. And, the top of new technology options for the freshly building food delivery app is finely possessed greatness at all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Robust App Security Provision&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As your UberEats clone developed with the safeguarding framework Laravel, you and your clients smartly receive one of the most important security benefits on the digitized business functionality certainly. &lt;/p&gt;

&lt;p&gt;As a result, you can develop a secured on-demand food delivery app for businesses that do not allow any malware activities or security threats.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bottom Line:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.spotnrides.com/ubereats-clone"&gt;UberEats clone&lt;/a&gt; app is now a powerful app source to develop a food delivery app as per the entrepreneurs‚Äô requirements. This is why the clone script is becoming too famous among service providers nowadays. &lt;/p&gt;

&lt;p&gt;As the backend program plays a major role in the food delivery service business online, creating it strong enough using the Laravel framework would be more effective for you.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>appdevelopment</category>
      <category>springboot</category>
    </item>
    <item>
      <title>How To Learn About¬†Artificial Intelligence¬†In Only 10 Days.
</title>
      <author>XTEALTH</author>
      <pubDate>Tue, 28 Sep 2021 11:16:44 +0000</pubDate>
      <link>https://dev.to/xtealth/how-to-learn-about-artificial-intelligence-in-only-10-days-5coe</link>
      <guid>https://dev.to/xtealth/how-to-learn-about-artificial-intelligence-in-only-10-days-5coe</guid>
      <description>&lt;p&gt;Artificial intelligence is trending topic in technology related field and currently many colleges and universities are now adding Artificial intelligence and machine learning in¬† their technology courses and due to which its creating new Artificial intelligence technologists¬† , which can advance this Artificial intelligence¬† industry.&lt;/p&gt;

&lt;p&gt;Below are some of the ways you can learn Artificial intelligence in 10 days. &lt;/p&gt;

&lt;p&gt;1&lt;br&gt;
First setup your goal for Artificial intelligence learning and follow that goal. &lt;/p&gt;

&lt;p&gt;2.&lt;br&gt;
Learn basic Python¬† , there are many online learning Platforms you can learn there. &lt;/p&gt;

&lt;p&gt;3&lt;br&gt;
Learn from youtube Artificial intelligence projects. &lt;/p&gt;

&lt;p&gt;4&lt;br&gt;
Learn about tensorflow and their projects. &lt;/p&gt;

&lt;p&gt;5&lt;br&gt;
Create some AI projects with the help of Python and Tensorflow.&lt;/p&gt;

&lt;p&gt;6&lt;br&gt;
Do debugging in your project. &lt;/p&gt;

&lt;p&gt;Learning Artificial intelligence is totally depends on the person , how quickly they can grab programming and technology. &lt;/p&gt;

&lt;p&gt;Artificial intelligence will be change the ways of learning in the future so it's very important to be get update in the field of Artificial intelligence.&lt;br&gt;
We are XTEALTH, a technology company which can develop and work on new technologies which can solve problems and¬† technologies for the future like Artificial intelligence¬† and machine learning. &lt;/p&gt;

&lt;p&gt;We are Artificial intelligence¬† based services and products development company &lt;a href="https://www.xtealthglobal.com"&gt;¬†XTEALTH.&lt;/a&gt;&lt;br&gt;
We are developing Technology Developers community around the world &lt;/p&gt;

&lt;p&gt;Join our Discord Channel&lt;br&gt;
Links are in the description below.&lt;br&gt;
Like and Share.&lt;br&gt;
Join our Discord Channel¬† and visit our¬† website.&lt;br&gt;
Inviting people to join our Discord channel &lt;/p&gt;

&lt;p&gt;&lt;a href="https://discord.gg/Errt88sE"&gt;https://discord.gg/Errt88sE&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ai</category>
      <category>machinelearning</category>
      <category>python</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>How can I integrate the CCAvenue payment gateway in flutter</title>
      <author>anveshrajb</author>
      <pubDate>Tue, 28 Sep 2021 11:14:57 +0000</pubDate>
      <link>https://dev.to/anvesh/how-can-i-integrate-the-ccavenue-payment-gateway-in-flutter-368g</link>
      <guid>https://dev.to/anvesh/how-can-i-integrate-the-ccavenue-payment-gateway-in-flutter-368g</guid>
      <description></description>
    </item>
    <item>
      <title>Flutter: Interesting packages, part¬†3.</title>
      <author>Samuel Wahome</author>
      <pubDate>Tue, 28 Sep 2021 11:07:21 +0000</pubDate>
      <link>https://dev.to/samueldotcloud/flutter-interesting-packages-part-3-2c5a</link>
      <guid>https://dev.to/samueldotcloud/flutter-interesting-packages-part-3-2c5a</guid>
      <description>&lt;p&gt;Welcome one and all to yet another edition of this blog series, that revolves around flutter packages that can and may be included in your individual flutter projects. The first and second parts can be found right &lt;a href="https://medium.com/@samuelwahome/flutter-interesting-packages-part-1-bcbae82e4d4b"&gt;here&lt;/a&gt; and &lt;a href="https://medium.com/@samuelwahome/flutter-interesting-packages-part-2-b8edd9292e90"&gt;here&lt;/a&gt;. Finally, enough of the niceties and let's cut to the chase.&lt;/p&gt;




&lt;p&gt;1.&lt;a href="https://pub.dev/packages/video_player"&gt;video_player&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Need to include video playback functionality in your flutter app, well look no further than this, as the Flutter dev team has your back with this awesome plugin. It is able to display videos by integrating with &lt;a href="https://exoplayer.dev/"&gt;ExoPlayer&lt;/a&gt; and &lt;a href="https://developer.apple.com/documentation/avfoundation/avplayer"&gt;AVPlayer&lt;/a&gt; for Android and iOS specifically. As much as it is a great package, the tooling isn't exactly a piece of cake, as one would be required to build their own custom controls for volume, playback speed, and everything in between. Plus &lt;a href="https://docs.fileformat.com/video/srt/#:~:text=SRT%20(SubRip%20file%20format)%20is,content%20after%20it%20is%20produced."&gt;SRT&lt;/a&gt; is the only subtitle format it supports at the moment, hence this plugin does have some improvements that should be considered in the near future.&lt;br&gt;
Other than that, if your needs aren't that complex, then this package is definitely a good recommendation for you.&lt;/p&gt;

&lt;p&gt;2.&lt;a href="https://pub.dev/packages/chewie"&gt;chewie&lt;/a&gt;&lt;br&gt;
Enough judgment of the &lt;a href="https://pub.dev/packages/video_player"&gt;video_player&lt;/a&gt; plugin, as it may have just found a suitable companion. Long story short, chewie simply wraps around the video player plugin and adds custom controls that you can easily adjust to your liking, resulting in a unique and positive user experience. In case you do need a bit of help integrating both chewie and &lt;a href="https://pub.dev/packages/video_player"&gt;video_player&lt;/a&gt; in your flutter app, this &lt;a href="https://medium.com/flutterdevs/video-player-in-flutter-22202be72d6e"&gt;post&lt;/a&gt; by &lt;a href="https://medium.com/@shaiq_khan"&gt;Shaiq khan&lt;/a&gt; should be of much help. Therefore, this package is definitely a good recommendation.&lt;/p&gt;

&lt;p&gt;3.&lt;a href="https://pub.dev/packages/url_launcher"&gt;url_launcher&lt;/a&gt;&lt;br&gt;
Ever required your flutter to handle URLs? Well, then this package may be just what you need to accomplish just that. This package supports a wide variety of URL schemes, both on Android and iOS, hence this package definitely has your back. All in all, this package is definitely a good recommendation for all interested flutter developers out there.&lt;/p&gt;

&lt;p&gt;4.&lt;a href="https://pub.dev/packages/flutter_blurhash"&gt;flutter_blurhash&lt;/a&gt;&lt;br&gt;
Ever required a placeholder for an image that may be loaded from storage or a network? Then this package may be just what you need for that very purpose. I know that I've mentioned &lt;a href="https://pub.dev/packages/transparent_image"&gt;transparent_image&lt;/a&gt; somewhere in one of my other posts. Well, this package simply serves as an alternative to that, depending of course, on your preferences or specific use-case. In case you do need help incorporating this package, then this blog &lt;a href="https://medium.com/flutterdevs/exploring-blurhash-image-placeholder-in-flutter-24dad611c487"&gt;post&lt;/a&gt; should be of much help. All in all, this package is definitely a good recommendation.&lt;/p&gt;

&lt;p&gt;5.&lt;a href="https://pub.dev/packages/flutter_bloc"&gt;flutter_bloc&lt;/a&gt;&lt;br&gt;
All this talk about &lt;a href="https://flutter.dev/docs/development/data-and-backend/state-mgmt"&gt;state management&lt;/a&gt;, then suddenly bloc pops into the fray. In addition to other solutions out there such as &lt;a href="https://pub.dev/packages/provider"&gt;provider&lt;/a&gt;, &lt;a href="https://pub.dev/packages/flutter_bloc"&gt;flutter_bloc&lt;/a&gt; simply enables you to share application state between screens, and across your app. Therefore, depending on your specific use case, then this package is definitely a good recommendation.&lt;/p&gt;

&lt;p&gt;6.&lt;a href="https://pub.dev/packages/share_plus"&gt;share_plus&lt;/a&gt;&lt;br&gt;
Do you require your flutter application to be able to share content with other apps, much like implicit &lt;a href="https://developer.android.com/guide/components/intents-filters"&gt;intents&lt;/a&gt; in android? Well, look no further as this package definitely has your back. This package enables you to share files, text, and links with ease, and also invokes the share dialog on your behalf, so it definitely has you covered. All in all, this package is definitely a worthy recommendation.&lt;/p&gt;

&lt;p&gt;7.&lt;a href="https://pub.dev/packages/device_info_plus"&gt;device_info_plus&lt;/a&gt;&lt;br&gt;
Do you need to collect information on the specific device your application is running on, perhaps for analytical or debugging purposes? Well, look no further as this package may just be what you need. With this package, you are able to get current device information from within the Flutter application and is supported on most platforms, which is definitely a huge plus. All in all, this package is definitely a good recommendation.&lt;/p&gt;

&lt;p&gt;8.&lt;a href="https://pub.dev/packages/sign_in_with_apple"&gt;sign_in_with_apple&lt;/a&gt;&lt;br&gt;
Are you a flutter dev that needs an authentication service that is specific to Apple device users, specifically via their Apple ID? Then this package may be just what you need. Implementing this functionality goes beyond just importing this package in your app, but the official package docs do a good job of simplifying the process to ensure a smooth user experience. All in all, this package is definitely a worthy recommendation.&lt;/p&gt;

&lt;p&gt;9.&lt;a href="https://pub.dev/packages/android_alarm_manager_plus"&gt;android_alarm_manager_plus&lt;/a&gt;&lt;br&gt;
Ever needed to include an alarm clock-like functionality in your Flutter application? Then this package may be just what you are looking for. This package works by accessing the android &lt;a href="https://developer.android.com/reference/android/app/AlarmManager"&gt;AlarmManager&lt;/a&gt; service, then runs some dart code underneath to extend even more control to your Flutter app.&lt;br&gt;
With that said, there is one catch though, as this package only caters to the android platform, which kinda beats the logic of designing an app that can work on more than one platform. Anyways, this package is still definitely a worthy recommendation to all who may need it.&lt;/p&gt;

&lt;p&gt;10.&lt;a href="https://pub.dev/packages/infinite_scroll_pagination"&gt;infinite_scroll_pagination&lt;/a&gt;&lt;br&gt;
All this talk about efficiently retrieving information from databases and suddenly pagination pops into mind. Need a package for this exact use case? Well, look no further as this package may be just what you need. Call it auto-pagination, lazy loading pagination, progressive loading pagination, or endless scrolling pagination, then this package definitely has your back, and is also a worthy recommendation to all who may need it.&lt;/p&gt;




&lt;p&gt;I guess that has been a lot to swallowüòÇ. All the afro mentioned packages have null safety incorporated into them, hence no worries about incompatibility with recent versions of Flutter. If you've loved this post, leaving a like‚ù§ won't hurt one bit.&lt;br&gt;
To all readers, cheers to codeü•Ç, and have a blessed day.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>100daysofcode</category>
      <category>codenewbie</category>
      <category>dart</category>
    </item>
    <item>
      <title>Using the values of a function's arguments to default initialize subsequent arguments.</title>
      <author>Sergey Plishka</author>
      <pubDate>Tue, 28 Sep 2021 11:01:56 +0000</pubDate>
      <link>https://dev.to/russelldev/using-the-values-of-a-function-s-arguments-to-default-initialize-subsequent-arguments-51bn</link>
      <guid>https://dev.to/russelldev/using-the-values-of-a-function-s-arguments-to-default-initialize-subsequent-arguments-51bn</guid>
      <description>&lt;p&gt;You knew that when coding in javascript, you can use the values of a function's arguments to default initialize subsequent arguments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const rectangle = (width, height, square = width * height) =&amp;gt; {
  console.log({ width, height, square });
};

rectangle(5, 5, 25);    // {width: 5, height: 5, square: 25}
rectangle(3, 7);        // {width: 3, height: 7, square: 21}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But &lt;strong&gt;not vise versa&lt;/strong&gt;, compiler going through arguments and create variables that can be used for initializing next ones.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const square = (square = length * length, length) =&amp;gt; {
  console.log({ length, square });
};

square(7);  // {length: undefined, square: 7}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also use object deconstructing. But initializing parameters must come before initialized ones.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const figure = ({ w, h } = {}, { width = w, height = h } = {}, square = width * height) =&amp;gt; {
  console.log({ width, height, square });
};

figure(undefined, { width: 3, height: 7 }); //{width: 3, height: 7, square: 21}
figure({ w: 5, h: 8});                      //{width: 5, height: 8, square: 40}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can event use function calls and pass previous arguments to them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const perimeter = (...sides) =&amp;gt; sides.reduce((p, side) =&amp;gt; p + side);
const trapezium = (a, b, c, d, p = perimeter(a, b, c, d)) =&amp;gt; {
  console.log(`Perimeter - ${p}`);
};

trapezium(12, 36, 15, 15);  //Perimeter - 78
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://stackblitz.com/edit/js-default-args"&gt;Source&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How Google‚Äôs Penalty Damage Your Business Online</title>
      <author>SDM</author>
      <pubDate>Tue, 28 Sep 2021 11:00:32 +0000</pubDate>
      <link>https://dev.to/shrushtidigitalmarketing/how-google-s-penalty-damage-your-business-online-1ck7</link>
      <guid>https://dev.to/shrushtidigitalmarketing/how-google-s-penalty-damage-your-business-online-1ck7</guid>
      <description>&lt;p&gt;As a new online business owner, you may look for ways to run a legitimate business. You care for every post that you share online and even want to stay within the safe boundaries of the search engines like Google. However, there are small things that you might do to your website to cause Google to object. The result is a penalty from Google. &lt;/p&gt;

&lt;p&gt;Here, Pearl Lemon comes up with its specialized &lt;a href="https://pearllemon.com/google-penalty-checker/"&gt;Google penalty checker service&lt;/a&gt;. The firm has experience handling several online marketing and branding programs, from PR services to SEO and SEM. Their hands-on experience has given them an upper hand in protecting businesses while also helping them earn ROI in time. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#google-penalty-and-when-do-you-get-them"&gt;
  &lt;/a&gt;
  Google Penalty and When Do You Get them
&lt;/h1&gt;

&lt;p&gt;Google hands you a penalty in case your site violates any rule that it has laid down. The penalty could tarnish a business‚Äôs online image, and this is why you should go for the same. &lt;/p&gt;

&lt;p&gt;Before we proceed on how it could do so, let us examine why it might in the first place. First, Google changes its algorithms and rules frequently. It will penalize a site that manipulates or tries to hoodwink Google‚Äôs crawling process. If the site does not provide the products it uses to draw in traffic or has misleading information, it might get a penalty. &lt;/p&gt;

&lt;p&gt;If there is a spurious link or too much of a keyword overdose and some plagiarized content, Google may spot it. Have a Google penalty checker to comb through your site regularly, and be safe.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-penalty-and-its-effects"&gt;
  &lt;/a&gt;
  The Penalty and its Effects
&lt;/h1&gt;

&lt;p&gt;Your site will see a slip in the rankings and even have more inadequate leads. The most significant damage will be when you do not find your site as you search for it in Google. Once that happens, your &lt;a href="https://kitelytech.com/how-to-get-small-businesses-big-results-with-local-seo-plans/"&gt;SEO plans&lt;/a&gt; may not work in your favor too. The Webmaster will issue warning messages, and these would further complicate your business. &lt;/p&gt;

&lt;p&gt;You may get a Manual penalty when your site has a harmful virus or violates Google‚Äôs policies. In that case, you have to appeal to Google for a resolution. If the site uses plagiarized content or has used too many keywords, you may get an algorithm-based penalty, and if this happens, your site will slip down the ranking. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-save-your-site"&gt;
  &lt;/a&gt;
  How to Save Your Site
&lt;/h1&gt;

&lt;p&gt;Prevention is better than cure, and so the Google Penalty checker will scan through the site and check everything. They will check the content, the bad links and even help to bring SEO back on track. They will help in solving any bugs or technical issues the site has. It will not just help your site safe from any Google penalties but also in enabling it to be able to proceed with SEO. &lt;/p&gt;

&lt;p&gt;Companies spend thousands and more on advertising and in Google ads. To ensure that you have a healthy relationship with the search engine, doing regular diagnostics is a necessity. &lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
