<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>FollowStats - keep track of your followers and subscribers and get weekly emails</title>
      <author>Soumya Ranjan Mohanty</author>
      <pubDate>Fri, 14 Jan 2022 02:42:56 +0000</pubDate>
      <link>https://dev.to/geekysrm/followstats-keep-track-of-your-followers-and-subscribers-and-get-weekly-emails-2f03</link>
      <guid>https://dev.to/geekysrm/followstats-keep-track-of-your-followers-and-subscribers-and-get-weekly-emails-2f03</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;As part of the &lt;a href="https://dev.to/devteam/announcing-the-mongodb-atlas-hackathon-on-dev-4b6m"&gt;MongoDB Atlas + Dev hackathon&lt;/a&gt;, I am glad to present &lt;a href="https://followstats.vercel.app/"&gt;FollowStats&lt;/a&gt;. &lt;br&gt;
FollowStats enables you to be more intentional about building an audience and helps you to track your followers, subscribers from various platforms periodically. It keeps a daily track of your followers and subscribers count. You can view your growth/ decline of your followers and subscribers in an organized dashboard.&lt;br&gt;
It also sends you a weekly overview of your audience to your email every Monday morning at 09:00.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://followstats.vercel.app/"&gt;Live Application&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/geekysrm/followstats"&gt;View Source Code&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#submission-category-action-star"&gt;
  &lt;/a&gt;
  Submission Category: Action Star
&lt;/h3&gt;
&lt;h3&gt;
  &lt;a href="#link-to-code-github-httpsgithubcomgeekysrmfollowstats-"&gt;
  &lt;/a&gt;
  Link to Code &lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/geekysrm"&gt;
        geekysrm
      &lt;/a&gt; / &lt;a href="https://github.com/geekysrm/followstats"&gt;
        followstats
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
FollowStats&lt;/h1&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/geekysrm/followstats"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;

&lt;/h3&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#screenshots-and-video"&gt;
  &lt;/a&gt;
  Screenshots and Video
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;User Dashboard&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PEczouBH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ktm0yifuoknzhzpwqnwo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PEczouBH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ktm0yifuoknzhzpwqnwo.png" alt="User Dashboard" width="880" height="486"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Settings Page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r8EXb3vY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bari64vpkix3utaqwz3h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r8EXb3vY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bari64vpkix3utaqwz3h.png" alt="Settings Page" width="880" height="485"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Weekly Email Report&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oGOAISva--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gcyk52hhzacwrf37qfx8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oGOAISva--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gcyk52hhzacwrf37qfx8.png" alt="Image description" width="880" height="1136"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have prepared a &lt;strong&gt;demo video&lt;/strong&gt; which can be viewed here: &lt;a href="https://link.soumya.dev/atlas-hack-demo"&gt;Video Link&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#my-experience"&gt;
  &lt;/a&gt;
  My experience
&lt;/h4&gt;

&lt;p&gt;I had previously used MongoDB but was unaware of the cool functionalities like Realm functions, triggers etc.&lt;br&gt;
I was really fascinated by how easy it is to build your backend using MongoDB Realm functions. We can easily import npm packages and use those too. I also used triggers for the first time to fetch followers' count everyday and send email report every Monday.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#challenges-faced"&gt;
  &lt;/a&gt;
  Challenges faced
&lt;/h4&gt;

&lt;p&gt;The major challenge was to figure out the way to fetch followers/ subscribers data from various platforms. I had to try many methods (like using official API, scraping etc.) before I arrived at a method that works. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#whats-next-for-followstats"&gt;
  &lt;/a&gt;
  What's next for FollowStats?
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Add more platforms like Instagram, LinkedIn and newsletter platforms like Mailchimp, Convertkit, Buttondown etc.&lt;/li&gt;
&lt;li&gt;Add charts and graphs to visualize followers' growth.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#try-it-out"&gt;
  &lt;/a&gt;
  Try it Out
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://followstats.vercel.app/"&gt;Live Application&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/geekysrm/followstats"&gt;View Source Code&lt;/a&gt;&lt;br&gt;
Please try this out and give your valuable feedback in the comments below or on &lt;a href="https://twitter.com/geekysrm"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Again thanks to &lt;a class="mentioned-user" href="https://dev.to/mongodb_staff"&gt;@mongodb_staff&lt;/a&gt; and &lt;a class="mentioned-user" href="https://dev.to/thepracticaldev"&gt;@thepracticaldev&lt;/a&gt; for this amazing opportunity!&lt;/p&gt;

</description>
      <category>atlashackathon</category>
    </item>
    <item>
      <title>How AI is used for mental health therapy</title>
      <author>Mage</author>
      <pubDate>Fri, 14 Jan 2022 00:43:29 +0000</pubDate>
      <link>https://dev.to/mage_ai/how-ai-is-used-for-mental-health-therapy-59m6</link>
      <guid>https://dev.to/mage_ai/how-ai-is-used-for-mental-health-therapy-59m6</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;As the current mental health screening system relies too heavily on manual assessments, how can sentiment analysis (SA) be used to streamline the new patient screening process and reduce the abysmal 10-week long waitlist to receive help from a therapist?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The issue&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What’s all this jargon?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;New patient debrief&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CTRL+F for symptoms&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Further research and considerations&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Conclusion&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-issue"&gt;
  &lt;/a&gt;
  The issue
&lt;/h2&gt;

&lt;p&gt;For a generation of young people who have de-stigmatized mental illness, we are shocked to discover that finding a therapist is as appalling as our dating culture: an arduous ghosting game. Patients wait an average of 10 weeks to see a mental health professional, just to receive a diagnosis! So if you are absolutely thirsty for attention, then there are apps commonly sponsored by YouTubers that match you with a therapist, but results may vary.&lt;/p&gt;

&lt;p&gt;Why is it so difficult to receive help? Since we rely solely on a mental health professional to review tens of pages of medical history and questionnaires for each new patient, and with the normalization of mental illness, the supply of qualified mental health professionals cannot keep up with the volume of patients seeking help. It’s &lt;a href="https://www.nimh.nih.gov/health/statistics/mental-illness"&gt;alarming&lt;/a&gt; that while 20% of people are mentally ill at any given time, only 44% get help, and 100% of therapists are exhausted and can’t get up.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nT5vsC5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qnqvmmgc6ka59x5ynhqk.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nT5vsC5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qnqvmmgc6ka59x5ynhqk.jpeg" alt="Image description" width="314" height="177"&gt;&lt;/a&gt;Life alert &lt;a href="https://memegenerator.net/Help-IVe-Fallen-And-I-CanT-Get-Up"&gt;meme&lt;/a&gt;
&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#treatment-plan"&gt;
  &lt;/a&gt;
  Treatment plan
&lt;/h3&gt;

&lt;p&gt;So, how can machine learning help in this situation?&lt;/p&gt;

&lt;p&gt;In this blog post, we’ll be exploring how a method of sentiment analysis, &lt;strong&gt;&lt;em&gt;named entity recognition&lt;/em&gt;&lt;/strong&gt; (NER) can &lt;a href="https://pubmed.ncbi.nlm.nih.gov/25982909/"&gt;expedite&lt;/a&gt; the new patient screening process for psychologists by categorizing and summarizing large amounts of unwritten responses by patients. This is a powerful information extraction tool that can potentially organize and make sense of otherwise unstructured and qualitative data that we currently rely on extremely specialized, manual labor for.&lt;/p&gt;

&lt;p&gt;Sentiment analysis in therapy is a very new area of study, and the goal is not to replace mental health professionals, but make their jobs easier using machine learning applications. I genuinely hope there is more research in medicine and mental health so that we can not only ease the burden of overworked psychologists dealing with everyone’s Zoom fatigue but also improve accessibility to mental healthcare for those in need.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5ZPQlDzQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/szh1ynmga56h5788s238.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ZPQlDzQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/szh1ynmga56h5788s238.jpeg" alt="Image description" width="277" height="209"&gt;&lt;/a&gt;&lt;a href="https://knowyourmeme.com/memes/modern-problems-require-modern-solutions"&gt;Source&lt;/a&gt;
&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-all-this-jargon"&gt;
  &lt;/a&gt;
  What’s all this jargon?
&lt;/h2&gt;

&lt;p&gt;Before we discuss any AI, I’d like to spend some time addressing any confusion about the terms I just rattled off.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sentiment-analysis"&gt;
  &lt;/a&gt;
  Sentiment analysis
&lt;/h3&gt;

&lt;p&gt;Sentiment analysis (SA) is the way AI is able to extract human emotions and intensity through &lt;a href="https://www.mdpi.com/2076-3417/9/24/5462"&gt;natural language processing&lt;/a&gt; and context.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#machine-learning-pipeline"&gt;
  &lt;/a&gt;
  Machine learning pipeline
&lt;/h3&gt;

&lt;p&gt;The end goal of ML is to teach the model to do a task for you. Suppose you are a &lt;a href="https://www.urbandictionary.com/define.php?term=Weeb"&gt;weeb&lt;/a&gt; and want to learn Japanese (did I just expose myself?)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rk0QfM0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zherl6d4654bv3cfsnsf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rk0QfM0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zherl6d4654bv3cfsnsf.png" alt="Image description" width="646" height="363"&gt;&lt;/a&gt;Doki Doki Literature Club &lt;a href="https://knowyourmeme.com/photos/1308052-doki-doki-literature-club"&gt;reference&lt;/a&gt;
&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I like to think of &lt;strong&gt;&lt;em&gt;sentiment analysis&lt;/em&gt;&lt;/strong&gt; (SA) in machine learning akin to learning Japanese from watching 1000 hours of anime (training stage), then going to an authentic Japanese restaurant to eavesdrop on some people speaking Japanese (testing stage).&lt;/p&gt;

&lt;p&gt;Although you can’t understand entire statements, you used &lt;strong&gt;&lt;em&gt;named entity recognition&lt;/em&gt;&lt;/strong&gt; (NER) to pick up key phrases in the “PEOPLE” category/entity like mother-in-law, husband, and “unreasonable,” and that gives us a general vibe (or sentiment) that they’re likely talking 💩.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#named-entity-recognition"&gt;
  &lt;/a&gt;
  Named entity recognition
&lt;/h3&gt;

&lt;p&gt;NER is actually an information extraction algorithm that trains itself on specialized jargon and then categorizes data into pre-labeled entities or concepts.&lt;/p&gt;

&lt;p&gt;Now that we have a better idea of what SA and NER are, let’s see how named entity recognition is useful for psychoanalysis.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-patient-debrief"&gt;
  &lt;/a&gt;
  New patient debrief
&lt;/h2&gt;

&lt;p&gt;Using NER, therapists can quickly familiarize themselves with new patients and which intense emotions they feel, behaviors they exhibit, which mental illness they suspect they have using the keywords patients used in their questionnaires.&lt;/p&gt;

&lt;p&gt;Take this existing implementation of NER on identifying clinical terms in patient charts by &lt;a href="https://demo.johnsnowlabs.com/healthcare/NER_CLINICAL/"&gt;John Snow Labs&lt;/a&gt; (screenshot of demo below) for example: the ML model is able to identify symptoms of illness and treatment methods after learning medical jargon from the PubMD data set.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3NF5mzfy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48w87cl3ss7dnok29rnw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3NF5mzfy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48w87cl3ss7dnok29rnw.png" alt="Image description" width="880" height="268"&gt;&lt;/a&gt;NER_clinical &lt;a href="https://demo.johnsnowlabs.com/healthcare/NER_CLINICAL/"&gt;demo&lt;/a&gt;
&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thus, for therapists, instead of reading a patient’s entire life story, a sentence like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“When I’m feeling anxious, I overthink and lose my appetite.”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Would be reduced to:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;anxious: B-ILLNESS&lt;br&gt;
lose: B-SYMPTOM&lt;br&gt;
my: I-SYMPTOM&lt;br&gt;
appetite: I-SYMPTOM&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since some ideas are multiple words long, we use the “B” tag in front of the entity to indicate the first word in the phrase, and those that follow after with the “I” tag.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#impact"&gt;
  &lt;/a&gt;
  Impact
&lt;/h2&gt;

&lt;p&gt;This summary is significant in automating a time-consuming step by allowing therapists to quickly grasp what’s ailing the new patient. Particularly for patients that require care from both a psychiatrist and therapist, it would be revolutionary to have a tool that ensures communication between the medical professionals are concise, detailed, and missing no information.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-technical-explanation-of-ner"&gt;
  &lt;/a&gt;
  A technical explanation of NER
&lt;/h3&gt;

&lt;p&gt;If you are the godsend thinking of implementing a sentiment analysis using NER for therapists, thank you, and please refer to SnowLab’s &lt;a href="https://github.com/JohnSnowLabs/spark-nlp-workshop/blob/master/tutorials/Certification_Trainings/Healthcare/1.Clinical_Named_Entity_Recognition_Model.ipynb"&gt;implementation&lt;/a&gt; and &lt;a href="https://medium.com/spark-nlp/named-entity-recognition-for-healthcare-with-sparknlp-nerdl-and-nercrf-a7751b6ad571"&gt;Medium article&lt;/a&gt; as a guide.&lt;/p&gt;

&lt;p&gt;Else, we can get a general idea of how this NER model by Spark NLP (an open source &lt;strong&gt;&lt;em&gt;N&lt;/em&gt;&lt;/strong&gt;atural &lt;strong&gt;&lt;em&gt;L&lt;/em&gt;&lt;/strong&gt;anguage &lt;strong&gt;&lt;em&gt;P&lt;/em&gt;&lt;/strong&gt;rocessing library) works through the same weeb analogy:&lt;/p&gt;

&lt;p&gt;Since you cannot possibly learn Japanese from raw anime episodes, someone has to do the manual labor of adding English subtitles before you watch it. Therefore, we have to convert sentences into a format the NER model understands, CoNLL.&lt;/p&gt;

&lt;p&gt;So my sentence “When I am feeling anxious, I overthink and lose my appetite,” has punctuation removed, and contractions like “I’m” expanded, parts of speech tags added, and is converted into this mess:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--psZ96zI9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9vz0azdm99rgz4x5rhi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--psZ96zI9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9vz0azdm99rgz4x5rhi.png" alt="Image description" width="364" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you’re kind of confused yet curious, you can find the list for part of speech abbreviations &lt;a href="https://stackoverflow.com/questions/15388831/what-are-all-possible-pos-tags-of-nltk"&gt;here&lt;/a&gt; and try this example for yourself using my &lt;a href="https://github.com/Felicious/Freudian-Clip"&gt;code snippet&lt;/a&gt;! Essentially, what’s happening in the code is that we need to separate sentences into individual words, mark their part of speech, and entity labels like in this excerpt:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vqqANQR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3dxvf5f8y3l75lhyceky.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vqqANQR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3dxvf5f8y3l75lhyceky.png" alt="Image description" width="880" height="431"&gt;&lt;/a&gt;using “Paraiso” from &lt;a href="https://carbon.now.sh/"&gt;carbon.now.sh&lt;/a&gt;
&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Fortunately, the Spark NLP library has a couple built-in functions that convert sentences into this format, so you don’t need to use the NLTK one I used in my example. The functions are this &lt;a href="https://nlp.johnsnowlabs.com/docs/en/annotators#tokenizer"&gt;tokenizer&lt;/a&gt; for converting sentences into individual words, and a &lt;a href="https://nlp.johnsnowlabs.com/docs/en/annotators#postagger-part-of-speech-tagger"&gt;POS tagger&lt;/a&gt; for identifying part of speech.&lt;/p&gt;

&lt;p&gt;But since they do not have entity labels for psychology terms like the “emotion” and “behavior” tags I used in my example, we’d need to find a library based on the &lt;a href="https://www.psychiatry.org/psychiatrists/practice/dsm"&gt;The Diagnostic and Statistical Manual of Mental Disorders (DSM)&lt;/a&gt; that’ll be used to identify mental illnesses and their symptoms in a piece of text.&lt;/p&gt;

&lt;p&gt;Finally, now that the training data is pre-processed, data scientists can now train the model, test it, and let therapists use it! Let me know when it happens! 😉&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ws1xfLZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f331epockwk25g2rzsri.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ws1xfLZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f331epockwk25g2rzsri.png" alt="Image description" width="500" height="407"&gt;&lt;/a&gt;draw an owl &lt;a href="https://knowyourmeme.com/memes/how-to-draw-an-owl"&gt;meme&lt;/a&gt;
&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ctrlf-for-symptoms"&gt;
  &lt;/a&gt;
  CTRL+F for symptoms
&lt;/h2&gt;

&lt;p&gt;Or CMD+F for you Mac users.&lt;/p&gt;

&lt;p&gt;On the other hand, after identifying the symptoms, emotions, and behaviors of the patient from their questionnaire, we can do a reverse-search to look for more specific information. Let’s say the therapist noticed a patient used sleeping medication and wanted more context and why.&lt;/p&gt;

&lt;p&gt;In SnowLab’s &lt;a href="https://github.com/JohnSnowLabs/spark-nlp-workshop/blob/master/tutorials/Certification_Trainings/Healthcare/1.Clinical_Named_Entity_Recognition_Model.ipynb"&gt;implementation&lt;/a&gt;, for example, they wrote a search function called &lt;strong&gt;&lt;em&gt;get_clinical_entities&lt;/em&gt;&lt;/strong&gt; that finds all mentions of medications for 100 patients, as well as specifications, if any, about the quantity and frequency the medication is consumed. The location of the sentence in the overall piece is also recorded, to locate the information easier.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7O-BqtZ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t82pgzarirxklt1v24ks.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7O-BqtZ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t82pgzarirxklt1v24ks.png" alt="Image description" width="646" height="590"&gt;&lt;/a&gt;from line 51 of &lt;a href="https://github.com/JohnSnowLabs/spark-nlp-workshop/blob/master/tutorials/Certification_Trainings/Healthcare/1.Clinical_Named_Entity_Recognition_Model.ipynb"&gt;NER_clinical&lt;/a&gt;
&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#applications"&gt;
  &lt;/a&gt;
  Applications
&lt;/h2&gt;

&lt;p&gt;Once this information is identified, therapists can request data scientists to help them analyze and visualize trends in patient medical histories, and whether treatments are effective or not.&lt;/p&gt;

&lt;p&gt;For example, a potential usage of analyzing a patient’s medication history for psychiatrists is monitoring whether the medicine they’re taking has improved their condition. It would be a lot to keep track of the condition of the numerous psychiatric patients, how dosages of several medications affect them, and whether there are unexpected side effects over time, but &lt;strong&gt;&lt;em&gt;detecting anomalies&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;finding trends&lt;/em&gt;&lt;/strong&gt; is what machine learning is great at.&lt;/p&gt;

&lt;p&gt;Moreover, if certain medication is proven to be successful for a statistically significant number of patients with ADHD who experience the symptoms “x, y, and z,” it is crucial that this discovery is shared with a medical professional. While additional research is required, ML can expedite this cross-referencing process for psychiatrists. One possible application is an attempt at unbiased data reporting by generating a list of ADHD patients taking this medication, detailing whether they’ve recovered or not, the duration of consumption, and the side effects they experienced.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-research-and-considerations"&gt;
  &lt;/a&gt;
  Further research and considerations
&lt;/h2&gt;

&lt;p&gt;There are many more ways sentiment analysis would improve the quality of therapy and assist mental health professionals in treating more patients. In addition to the ways textual information extraction SAs determine emotion in unstructured, self-reported medical reports, other forms of sentiment analysis could improve other facets of mental healthcare, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A classifier, based on various parameters describing patient condition, of whether a patient could be in a bad mental state and harm themselves. A support vector machine (SVM) is allegedly one of the best ML approaches that predict the polarity of a sentiment, according to the 3rd reference (“Emotion AI-Driven Sentiment Analysis”)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Somehow quantifying a severity score of a patient’s condition to indicate they’re in critical condition and get them help faster&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Due to the personalized nature of therapy, it can also be difficult to get definitive feedback from patients. In this study, researchers have been trying to identify which words exchanged between therapist and patient were most effective at treating their illness using natural language processing (NLP). This is the umbrella sentiment analysis falls under&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to normalize qualitative data, like subjective description of emotions, so that a patient who describes their emotions more animatedly does not receive a biased score over a patient who keeps things to themselves&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Whether you are a medical professional, data scientist, or someone with an interest, I thank you for taking the time to consider all of these ways sentiment analysis can benefit therapy. I believe your work and contribution to research in using machine learning to improve the quality of healthcare is noble and greatly appreciated in these times when we’re experiencing a mental health crisis and a shortage in healthcare workers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hUyDoprT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xhx3hvt08oekftikqm5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hUyDoprT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xhx3hvt08oekftikqm5.gif" alt="Image description" width="461" height="346"&gt;&lt;/a&gt;&lt;a href="https://giphy.com/gifs/love-cute-1hoKkBNSBxVyHIsPer"&gt;capoo&lt;/a&gt; ❤&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I’m grateful that the two most important people in my life have access to mental healthcare, and I hope that with further interdisciplinary research, this accessibility is extended to more people’s loved ones.&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>therapy</category>
      <category>mentalhealth</category>
      <category>sentimentanalysis</category>
    </item>
    <item>
      <title>Explaining Kubernetes for Developers Who Know How to Code</title>
      <author>Ali</author>
      <pubDate>Fri, 14 Jan 2022 00:22:50 +0000</pubDate>
      <link>https://dev.to/endingwithali/explaining-kubernetes-for-developers-who-know-how-to-code-1473</link>
      <guid>https://dev.to/endingwithali/explaining-kubernetes-for-developers-who-know-how-to-code-1473</guid>
      <description>&lt;p&gt;You know how to program - you're in your first or second year of your first software engineering job. You've mastered the basics and are excelling at your job, but something's been bothering you. You keep hearing about this thing called Kubernetes being thrown around by another team. Kuber...netes? What does it mean?&lt;/p&gt;

&lt;p&gt;After the third or fourth time you hear it, you decide to look it up. You get what it does, but you don't really get what it does.&lt;/p&gt;

&lt;p&gt;Don't worry—I’m here to help.&lt;/p&gt;

&lt;p&gt;Before we get started, I highly recommend &lt;a href="https://newrelic.com/blog/how-to-relic/what-is-kubernetes"&gt;reading this article by fellow Relic John Withers&lt;/a&gt; - it's an excellent primer of basic colloquialisms and technical terms used when diving into the world of Kubernetes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hi-welcome-to-the-container-store"&gt;
  &lt;/a&gt;
  Hi, welcome to the container store.
&lt;/h2&gt;

&lt;p&gt;Most starter tutorials will explain how to deploy a basic "Hello World" server in the language of your choice. But it doesn't really do much except return an endpoint that says "Hello World.” What do you learn from that? Why is it always a web server?&lt;/p&gt;

&lt;p&gt;Let's take a step back and remember that any type of application can be containerized and deployed using Kubernetes. Even the hit game from 2002, &lt;a href="https://en.wikipedia.org/wiki/PF_Magic"&gt;Petz: Dogz 5&lt;/a&gt;, can be run using k8s.&lt;/p&gt;

&lt;p&gt;Does it actually make sense to put Petz: Dogz 5 into a container and deploy with Kubernetes? Maybe, maybe not. But say we wanted to run 10,000 instances of Petz: Dogz 5 or we wanted to access the game 10,000 times at once, all simultaneously. Then yes, using Kubernetes makes sense.&lt;/p&gt;

&lt;p&gt;But Petz: Dogz 5 doesn’t use the internet. Kubernetes must require the internet, right? Not exactly. Connectivity is a must, but things like intranet allow for connection without using actual internet, creating isolated instances. Keeping it straight forward, while you can run things on k8s that do not need internet access, you’ll need connectivity in order to access the k8s cluster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#memenetes"&gt;
  &lt;/a&gt;
  Memenetes
&lt;/h2&gt;

&lt;p&gt;Kubernetes has been the subject of memes...a lot. Why? Because in reality, setting up Kubernetes is hard. It's confusing and it takes a long time to get right.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7i7elhBd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c8tnf6b2i8vmc7xf3cia.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7i7elhBd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c8tnf6b2i8vmc7xf3cia.jpg" alt="Evil Kubernetes be like shuts down containers when needed&amp;lt;br&amp;gt;
" width="750" height="499"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, once set up and configured properly, it's a powerful tool that can save developer time and application uptimes. &lt;/p&gt;

&lt;p&gt;So when should one start using Kubernetes? And why?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-what-where-when-why-of-kubernetes"&gt;
  &lt;/a&gt;
  Who? What? Where? When? Why? of Kubernetes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#who-what"&gt;
  &lt;/a&gt;
  Who? + What?
&lt;/h3&gt;

&lt;p&gt;Technically, anyone can run anything using Kubernetes. Usually, you'll find it being utilized by DevOps teams to help scale their company's services to meet incoming demand.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where"&gt;
  &lt;/a&gt;
  Where?
&lt;/h3&gt;

&lt;p&gt;Kubernetes is run on a server (managing it yourself is known as “rolling your own Kubernetes”) or handled by vendor or cloud service provider as a managed Kubernetes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when"&gt;
  &lt;/a&gt;
  When?
&lt;/h3&gt;

&lt;p&gt;Technically, you can start using Kubernetes on day one of building a project, but it doesn't matter when you start using it. The choice is up to the developers and the DevOps team.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h3&gt;

&lt;p&gt;The ‘why’ question is where it gets a little more interesting.&lt;/p&gt;

&lt;p&gt;Without Kubernetes, launching an application of any kind requires three different parts: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A compiled version of the code: provided by you and built in a form that can be easily run (such as binary). &lt;/li&gt;
&lt;li&gt;An operating system: this might be your computer or something you set up manually, but could also be a container or use a buildpack. &lt;/li&gt;
&lt;li&gt;A start command: The command used to execute your codes such as a binary or run statement. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#kubernetes-x-docker-best-friends-forever"&gt;
  &lt;/a&gt;
  Kubernetes x Docker: Best Friends Forever
&lt;/h4&gt;

&lt;p&gt;Whenever you hear Kubernetes, you're probably going to hear Docker in the same sentence. Kubernetes and Docker are like peanut butter and jelly—they're a perfect pair. Docker combines the three parts required to launch an application into one command. This makes it easier to deploy (or start) new applications through the creation of containers.&lt;/p&gt;

&lt;p&gt;Containers are a critical part of the Kubernetes metaverse because they're the smallest building block of Kubernetes orchestration. Just like how atoms are the smallest bits of matter in the universe, pods are encapsulations of containers. Pods are considered a unit of one or more containers. All the containers in a pod will be co-located on the same operating system. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#scale"&gt;
  &lt;/a&gt;
  Scale
&lt;/h4&gt;

&lt;p&gt;Kubernetes can help make scaling your application easier. It's a distributed system that can automatically spin up new pods to help balance the load of incoming requests.&lt;/p&gt;

&lt;p&gt;For example, you've just shared your side project on ProductHunt and HackerNews. As the creator, you're responsible for maintaining your side project's uptime and making sure that it works. It's starting to pick up popularity, and you see that your previous configuration is starting to max out at its ability to stay running. Did I mention that your project just blew up on Tiktok, and you've gone from 100 visits per day to over 10,000? It also just hit top of HackerNews - everyone is talking about it.&lt;/p&gt;

&lt;p&gt;With the influx of users trying out your side project, you need to scale - fast.&lt;/p&gt;

&lt;p&gt;Prior to implementing Kubernetes, you would need to go to your hosting site (either via a website for the cloud or on premises for non-cloud servers), manually provision the servers, run the containers, and set up the reverse proxies to handle incoming router traffic. With Kubernetes, this process is mostly automated. Since you were conveniently creating this side project to try to learn Kubernetes, you were prepared. To scale with the huge influx of demand, you're able to quickly update your Kubernetes config file to begin rolling out scaling changes for your side project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#by-the-way-new-relic-s-kubernetes"&gt;
  &lt;/a&gt;
  By the way, New Relic 💙's Kubernetes
&lt;/h2&gt;

&lt;p&gt;If you've just set up your first Kubernetes cluster or are looking to understand the Kubernetes cluster you've been running, look no further. I'm a visual learner, and having a tool like New Relic is critical for helping create awesome visualizations for your clusters. Learn more about our visualization tools and sign up for &lt;a href="https://newrelic.com/signup?utm_campaign=fy22-q2-amer-obsv-event-devrel-organic&amp;amp;utm_medium=event&amp;amp;utm_source=organic&amp;amp;utm_content=organic&amp;amp;fiscal_year=fy22&amp;amp;quarter=q2&amp;amp;program=obsv&amp;amp;audience=none&amp;amp;creative=none&amp;amp;placement=none&amp;amp;targeting=none&amp;amp;ad_type=none&amp;amp;geo=amer"&gt;a free account today&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weve-done-it"&gt;
  &lt;/a&gt;
  We've done it
&lt;/h2&gt;

&lt;p&gt;As a developer, it's easy to forget to slow down, to get frustrated when learning new topics, and to gloss over asking why when one is confused. Hopefully, by reading this article, you've gained a bit more practical knowledge about Kubernetes and why you keep hearing about it everywhere you go.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nMBAS537--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://newrelic.com/sites/default/files/styles/800w/public/2021-10/glasses-dog.webp%3Fitok%3DK2jwKlKl" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nMBAS537--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://newrelic.com/sites/default/files/styles/800w/public/2021-10/glasses-dog.webp%3Fitok%3DK2jwKlKl" alt="Dog wearing glasses reading a book" width="436" height="581"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  Learn more:
&lt;/h3&gt;

&lt;p&gt;Here are some excellent resources I'd recommend checking out if you're keen on learning more about Kubernetes from a highly technical angle:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Utf-A4rODH8"&gt;Kubernetes from Scratch in Go by Liz Rice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nirmata.com/2018/02/07/kubernetes-for-developers-pods-part-1/"&gt;Kubernetes For Developers (A multipart series) by the team at Nirmata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=i7ABlHngi1Q"&gt;Docker for Beginners by Travis Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thenewstack.io/why-serverless-vs-kubernetes-isnt-a-real-debate/"&gt;Why Kubernetes vs Serverless isn't a Real Debate by David Simmons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/"&gt;Kubernetes AutoScaler (AKA How It works) from Kubernetes.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>kubernetes</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>#Data4Good: Find an At-Home COVID-19 Test Kit Near You</title>
      <author>Michael Thomas</author>
      <pubDate>Thu, 13 Jan 2022 23:42:12 +0000</pubDate>
      <link>https://dev.to/mike_ketchbrook/data4good-find-an-at-home-covid-19-test-kit-near-you-3b78</link>
      <guid>https://dev.to/mike_ketchbrook/data4good-find-an-at-home-covid-19-test-kit-near-you-3b78</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;We built a web application using the Shiny framework from the R programming language to help users locate &amp;amp; report at-home COVID-19 test kits. You can check out the web app live in action &lt;a href="https://ketchbrookanalytics.shinyapps.io/covid_test_spotter/"&gt;here&lt;/a&gt; for the State of Connecticut!&lt;/p&gt;

&lt;p&gt;This app works very similar to the &lt;a href="https://www.waze.com/"&gt;Waze app&lt;/a&gt;, in that the data that populates the app is entirely user-driven. Through the UI, users have the ability to add a new record to the back-end MongoDB Atlas database (i.e., where/when they saw COVID-19 at-home test kits &lt;em&gt;in&lt;/em&gt; stock), and remove a record (where/when they saw COVID-19 at-home test kits &lt;em&gt;out of&lt;/em&gt; stock).&lt;/p&gt;

&lt;p&gt;The purpose of this project spawned from seeing &lt;em&gt;so many&lt;/em&gt; disjointed Facebook forum questions/answers about where people could find at-home COVID-19 antigen test kits. There was no &lt;em&gt;single&lt;/em&gt; place to centralize this information -- so we set out to build just that!&lt;/p&gt;

&lt;p&gt;Furthermore, we wanted to open-source this effort, so that anyone can reproduce this app to serve their own town/state/region/country/etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Choose Your Own Adventure&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ketchbrookanalytics"&gt;
        ketchbrookanalytics
      &lt;/a&gt; / &lt;a href="https://github.com/ketchbrookanalytics/covid_test_spotter"&gt;
        covid_test_spotter
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Shiny web application for locating and reporting inventory of COVID-19 at-home test kits
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
CT COVID-19 At-Home Test Spotter&lt;/h1&gt;
&lt;p&gt;The goal of the &lt;strong&gt;CT COVID-19 At-Home Test Spotter&lt;/strong&gt; app is to allow
users to locate and report the availability of at-home COVID testing
kits at retail locations in their state.&lt;/p&gt;
&lt;p&gt;It works very similar to the &lt;a href="https://www.waze.com/" rel="nofollow"&gt;Waze&lt;/a&gt; app, in that
the “reports” data is entirely user-driven.&lt;/p&gt;
&lt;p&gt;The app opens to the “Home” page, which displays the most recently
reported test kits available in retail locations:&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/ketchbrookanalytics/covid_test_spotterwww/home_page.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--igPL-m5j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ketchbrookanalytics/covid_test_spotterwww/home_page.PNG" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When the user clicks either the &lt;em&gt;green&lt;/em&gt; or &lt;em&gt;red&lt;/em&gt; buttons at the top of
the page, they are taken to a form prompting them to submit information
about when and where they saw test kits &lt;em&gt;in&lt;/em&gt; or &lt;em&gt;out of&lt;/em&gt; stock:&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/ketchbrookanalytics/covid_test_spotterwww/report_in_page.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FdfnvQtQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ketchbrookanalytics/covid_test_spotterwww/report_in_page.PNG" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Clone this repository to your local machine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the &lt;a href="https://github.com/ketchbrookanalytics/covid_test_spottercovid_test_spotter.Rproj"&gt;covid_test_spotter.Rproj&lt;/a&gt; file
from the directory on your local machine where you cloned this
repository. This should install the {renv} package if you do not
already have it installed, but…&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ketchbrookanalytics/covid_test_spotter"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;As stated in our overview, you can check out the web app live in action &lt;a href="https://ketchbrookanalytics.shinyapps.io/covid_test_spotter/"&gt;here&lt;/a&gt;, tailored for the State of Connecticut.&lt;/p&gt;

&lt;p&gt;This projects utilizes a really neat combination of R, Shiny, Google Maps &amp;amp; Places APIs, and MongoDB Atlas to provide a seamless user experience that serves as a benefit to the public. See for yourself in the screenshot below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HqXj1RtS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vx9rpbzc04ewm85akt1g.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HqXj1RtS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vx9rpbzc04ewm85akt1g.PNG" alt="App screenshot showing Google map and UI" width="880" height="542"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have already gotten amazingly positive feedback about how this app helped people in our local community find an at-home COVID-19 test kit that they had been desperately searching for. We sincerely hope that the project only continues to grow -- and winning the &lt;strong&gt;MongoDB + DEV Atlas Hackathon&lt;/strong&gt; would be a tremendous help to ensure that it does.&lt;/p&gt;

</description>
      <category>atlashackathon</category>
    </item>
    <item>
      <title>The Beginner's Guide to Understanding an API: Part 2</title>
      <author>Martins Oloyede</author>
      <pubDate>Thu, 13 Jan 2022 23:07:32 +0000</pubDate>
      <link>https://dev.to/devmayor15/the-beginners-guide-to-understanding-an-api-part-2-2phn</link>
      <guid>https://dev.to/devmayor15/the-beginners-guide-to-understanding-an-api-part-2-2phn</guid>
      <description>&lt;p&gt;In the last article, we discussed what an API is, the engine behind an API, the benefits, types, what are endpoints and the major request methods we have. &lt;/p&gt;

&lt;p&gt;You can review it &lt;a href="https://dev.to/devmayor15/the-beginners-guide-to-understanding-an-api-52m3"&gt;here&lt;/a&gt; to have an idea on APIs.&lt;/p&gt;

&lt;p&gt;Now we can collect everything that we learned together and discuss more on API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ENBROepw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ure8llplq2psy30ojcli.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ENBROepw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ure8llplq2psy30ojcli.png" alt="types of apis image" width="768" height="509"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-service-apis"&gt;
  &lt;/a&gt;
  Web Service APIs
&lt;/h2&gt;

&lt;p&gt;Before we discuss about what a web service API is, let's learn what what a web service is.&lt;/p&gt;

&lt;p&gt;The term Web service is either: a service offered by an electronic device to another electronic device, communicating with each other via the World Wide Web, or a server running on a computer device, listening for requests at a particular port over a network, serving web documents.&lt;/p&gt;

&lt;p&gt;Apart from the main web APIs, there are also web service APIs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Rest&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Soap&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XML-RPC&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JSON-RPC&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following are the most common types of web service APIs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Rest(Representational State Transfer): REST is a set of architectural constraints, not a protocol or a standard like other web services. API developers can implement REST in a variety of ways.&lt;br&gt;
 When a client request is made via a RESTful API, it transfers &lt;br&gt;
 a representation of the state of the resource to the &lt;br&gt;
 requester or endpoint. &lt;br&gt;
 This information, or representation, is delivered in one of &lt;br&gt;
 several formats via HTTP: JSON (Javascript Object Notation), &lt;br&gt;
 HTML, XLT, Python, PHP, or plain text. JSON is the most &lt;br&gt;
 generally popular file format to use because, despite its &lt;br&gt;
 name, it’s language-agnostic, as well as readable by both &lt;br&gt;
 humans and machines. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Soap(Simple Object Access Protocol): This is a protocol that uses XML as a format to transfer data. Its main function is to define the structure of the messages and methods of communication.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Today, it's mostly used to expose web services and transmit data over HTTP/HTTPS.&lt;/p&gt;

&lt;p&gt;It also uses WSDL, or Web Services Definition Language, in a machine-readable document to publish a definition of its interface.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;XML-RPC: This is a protocol that uses a specific XML format to transfer data compared to SOAP that uses a proprietary XML format. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In XML-RPC, a client performs an RPC by sending an HTTP request to a server that implements XML-RPC and receives the HTTP response.&lt;/p&gt;

&lt;p&gt;It is also older than SOAP. XML-RPC uses minimum bandwidth and is much simpler than SOAP. Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;employees&amp;gt;
  &amp;lt;employee&amp;gt;
    &amp;lt;firstName&amp;gt;Martins&amp;lt;/firstName&amp;gt; &amp;lt;lastName&amp;gt;Oloyede&amp;lt;/lastName&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;JSON-RPC: JSON-RPC is a remote procedure call protocol encoded in JSON. It is similar to the XML-RPC protocol, defining only a few data types and commands.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JSON-RPC allows for notifications (data sent to the server that does not require a response) and for multiple calls to be sent to the server which may be answered asynchronously. Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{"employees":[
 { "firstName":"Martins", "lastName":"Oloyede" },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#differences-between-soap-and-rest"&gt;
  &lt;/a&gt;
  Differences between Soap and Rest
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u&gt;Soap:&lt;/u&gt; It is driven by Function.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Rest:&lt;/u&gt; It is driven by data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u&gt;Soap:&lt;/u&gt; Since SOAP is a protocol, it follows a strict &lt;br&gt;
standard to allow communication between the client and the &lt;br&gt;
server.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Rest:&lt;/u&gt; REST is an architectural style that doesn’t follow any strict standard.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u&gt;Soap:&lt;/u&gt; It is difficult to implement and it requires more bandwidth.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Rest:&lt;/u&gt; It is easy to implement and requires less bandwidth such as smartphones.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#differences-between-json-and-xml"&gt;
  &lt;/a&gt;
  Differences between JSON and XML
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u&gt;Json:&lt;/u&gt; It is JavaScript Object Notation.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Xml:&lt;/u&gt; It is extensible Markup Language.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u&gt;Json:&lt;/u&gt; Focuses mainly on Data.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Xml:&lt;/u&gt; Focuses mainly on Document.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u&gt;Json:&lt;/u&gt; Supports only text and numbers.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Xml:&lt;/u&gt; Supports various types of data for example text, numbers, images, graphs, charts etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u&gt;Json:&lt;/u&gt; It has low security.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Xml:&lt;/u&gt; It has high security.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-start-using-an-api"&gt;
  &lt;/a&gt;
  How to start using an API
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Get an API key&lt;/li&gt;
&lt;li&gt;Test API endpoints&lt;/li&gt;
&lt;li&gt;Create your app&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-get-an-api-key"&gt;
  &lt;/a&gt;
  1. Get an API key
&lt;/h2&gt;

&lt;p&gt;An application programming interface key is a unique identifier used to authenticate a user, developer, or calling program to an API. In order to get an API key, you need to somehow register with the API server and enter your identity data.&lt;/p&gt;

&lt;p&gt;This can be a username, email, and password; Google, Facebook, or Github account.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-test-api-endpoints"&gt;
  &lt;/a&gt;
  2. Test API endpoints
&lt;/h2&gt;

&lt;p&gt;After we receive the API key, we can refer to the API endpoints (according to the rules in the documentation) to check if everything works as we expected. For this, we can use a REST client like Postman.&lt;/p&gt;

&lt;p&gt;Here is a &lt;a href="https://www.youtube.com/watch?v=VywxIQ2ZXw4"&gt;video&lt;/a&gt; on freecodecamp that can teach you on how to test api endpoints on the Postman application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u0i69W-h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek2w8j8ovexofssmgde6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u0i69W-h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek2w8j8ovexofssmgde6.png" alt="api endpoints img" width="880" height="392"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-create-your-app"&gt;
  &lt;/a&gt;
  3. Create your app
&lt;/h2&gt;

&lt;p&gt;After we tested all endpoints and read through the API documentation and it worked as we expected, then we can start creating the application, including calls to the API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;APIs are an integral part of the modern development ecosystem. Having spent a relatively short period of time studying them, you can use them to widely extend the capabilities of your own application.&lt;/p&gt;

&lt;p&gt;Thank you for reading this article. Watch out for the next one on - How to use an API in javascript.&lt;/p&gt;

&lt;p&gt;Reach out to me via:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Twitter: @devmayor_&lt;/li&gt;
&lt;li&gt;LinkedIn: Martins Oloyede.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Metro Rail Path Finder</title>
      <author>Abdul Samad</author>
      <pubDate>Thu, 13 Jan 2022 22:53:26 +0000</pubDate>
      <link>https://dev.to/iabdsam/metro-rail-path-finder-2o3k</link>
      <guid>https://dev.to/iabdsam/metro-rail-path-finder-2o3k</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;I made an &lt;strong&gt;Express application which basically calculates the path from one station to another in a particular city's Metro rail map.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It connects to the database on Mongodb Atlas. My database has collections based on maps of different cities.&lt;br&gt;
The express app passes the User-preferences over to functions that query the database to find the route.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The app is very easily scalable&lt;/strong&gt;, as to add a map, one only has to add a new collection in the database (containing Station names etc) and one option in the "Map Select" drop-down.&lt;br&gt;
Everything else, including the functions and the drop-downs are designed to get updates from the database itself.&lt;/p&gt;

&lt;p&gt;Here is the link to my &lt;a href="https://github.com/mr-loop-1/metro-path-mongodb/"&gt;Github repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Choose Your Own Adventure&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mr-loop-1"&gt;
        mr-loop-1
      &lt;/a&gt; / &lt;a href="https://github.com/mr-loop-1/metro-path-mongodb"&gt;
        metro-path-mongodb
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      My Mongodb Atlas Project for Devto+Mongodb Hackathon
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
metro-path-mongodb&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Note: The Mongodb database may refuse to connect sometimes. I am finding a fix for that&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is a Metro Rail Path Finder app I made for Dev.to + MongoDb Atlas Hackathon. It sources its data from Mongodb Atlas Database.&lt;/p&gt;
&lt;p&gt;Technology Used: Expressjs, MongoDb Atlas&lt;/p&gt;
&lt;h2&gt;
To run the app&lt;/h2&gt;
&lt;p&gt;Just make sure that node and npm are installed and&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And it will be deployed on &lt;code&gt;http://localhost:3000/users/details&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The calculation may get slow for longer paths.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mr-loop-1/metro-path-mongodb"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#screenshots"&gt;
  &lt;/a&gt;
  Screenshots
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HnUrDAsi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9snw17frob02mmw5bsqs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HnUrDAsi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9snw17frob02mmw5bsqs.png" alt="mm" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--onmJfqDL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t9pwusvwamp7mqwr2m08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--onmJfqDL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t9pwusvwamp7mqwr2m08.png" alt="ss" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;Technology Used: Express, Mongodb, Atlas&lt;br&gt;
Contact: &lt;a href="mailto:iabdulsamad1412@gmail.com"&gt;iabdulsamad1412@gmail.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>atlashackathon</category>
    </item>
    <item>
      <title>Mundos virtuales | Ep. 1 El MUD</title>
      <author>Bel Rey</author>
      <pubDate>Thu, 13 Jan 2022 22:50:06 +0000</pubDate>
      <link>https://dev.to/iamdoomling/mundos-virtuales-ep-1-el-mud-1nc1</link>
      <guid>https://dev.to/iamdoomling/mundos-virtuales-ep-1-el-mud-1nc1</guid>
      <description>&lt;p&gt;Pertenezco a las última generación que vivió una infancia sin internet. A pesar de estoy mi relación con las computadoras empezó a una edad muy temprana. Mi papá era programador, de los que trabajaban con tarjetas perforadas y fueron avanzando al paso de la tecnología. En casa siempre tuvimos computadora, pero era una máquina más que se prendía para hacer un trabajo especifico y después se apagaba. A diferencia de la tele o la radio, que nos traían información del exterior, la compu era algo estático, frizado en el tiempo. Las únicas actualizaciones que recibía llegaban en diskettes de 3/4. &lt;/p&gt;

&lt;p&gt;Mamá no la usaba. Yo la prendía de vez en cuando para hacer dibujos en paint, papá la usaba para trabajar y de vez en cuando para darme lecciones de cómo usar Fox Pro. “Tenés que aprender, esto es el futuro” decía orgulloso.&lt;/p&gt;

&lt;p&gt;Fast-forward a 1998, el momento en que llegó dial-up a mi vida. Algunos de ustedes quizás ni sepan QUE es dial up. Básicamente era internet a través de la linea telefónica. Una de sus particularidades era que te ocupaba la linea, es decir, mientras estabas conectado no podías recibir ni hacer llamadas y si levantabas el teléfono se escuchaban unos ruiditos al estilo &lt;em&gt;bip bop prippp pp&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Con papá vivíamos casi solos. Mamá transitó una serie de problemas de salud y pasaba meses enteros internada, así que eramos él, un adicto al trabajo que nunca se esperó tener que hacerse cargo solo de mi pre-adolescencia y yo con doce años y muchas opiniones.&lt;/p&gt;

&lt;p&gt;Empecé a pasar cada minuto que no estaba en la escuela usando la computadora. Tenía que aprovechar porque a las 19hs llegaba papá y me cortaba la linea. No le gustaba que use internet. Está lleno de extraños, decía. Y tenía razón, de pronto mi mundo era mucho más extenso. Ya no estaba limitada a hablar con los amigos del cole o la gente de inglés. Me conectaba a salas de mIRC y conectaba con extraños. Extraños con los que muchas veces compartía gustos que con la gente del cole no. No saben lo difícil que era ser otaku en los ‘90.&lt;/p&gt;

&lt;p&gt;En algún momento, explorando páginas de literatura fantástica me crucé con Petria. Petria era un MUD, multi-user dungeon. Un juego fantástico basado en texto donde te hacías un personaje, lo subías de nivel, explorabas el mapa, mejorabas tu equipo y eventualmente llegabas a nivel 100, peleabas contra un boss final y te hacías inmortal. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w6zpTBs9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8lm9h71lzoj4nawoxkw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w6zpTBs9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8lm9h71lzoj4nawoxkw.png" alt="Image description" width="604" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¿Cómo se jugaba? Te conectabas a una dirección a través de un cliente telnet (básicamente una consola o terminal) e ibas leyendo las descripciones de cada sala en la que estabas. Si alguien entraba en la misma sala el juego te avisaba. Si el clima cambiaba te avisaba. Cada acción que pudiera afectar al personaje aparecía como texto.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hr45EvUO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cszae13je9uycqu6bmy6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hr45EvUO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cszae13je9uycqu6bmy6.png" alt="Image description" width="517" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¿Era divertido? Sí, re. Pero al margen de eso su verdadero atractivo era la comunidad. Jugué desde 1998 a 2002 con diferentes niveles de intensidad. A veces eran horas por día, en otros momentos una vez por semana. En Petria hice amigos de muchos países y a algunos los conocí en el mundo real. Entre ellos se destacan Renzo, que fue mi mejor amigo toda la adolescencia y David, quien eventualmente fue mi primer novio.&lt;/p&gt;

&lt;p&gt;La principal diferencia entre este tipo de experiencia en mundos virtuales versus una simple sala de chat es que nos daban un contexto. Vos entrabas a Petria y te encontrabas con personas con un interés común y un mundo con reglas definidas donde podías interactuar.&lt;/p&gt;

&lt;p&gt;Cuando alguien cumplía años armabamos un festín y nos emborrachabamos en la plaza principal. Cuando alguien estaba triste se organizaba un torneo de PK (player killing, lo que hoy sería PvP). A veces ibamos de excursión a zonas complicadas o ayudábamos a algún alma en pena a pasar niveles.&lt;/p&gt;

&lt;p&gt;Nos recomendábamos música y libros. A veces se contaban historias. Gracias a Petria conocí a Tolkien y a Blind Guardian. En mi entorno real de ese momento nadie era fan de estas cosas y si bien creo que eventualmente podría haber llegado al mismo lugar, la realidad es que Petria ayudó a este proceso. El mundo y sus reglas en sí eran solamente el catalizador para nuestra experiencia colectiva pero detrás de cada nombre, de cada personaje, había un humano real que generaba conexiones que se sentían reales.&lt;/p&gt;

&lt;p&gt;En algún momento las tardes de Petria fueron reemplazadas por partidas de AoE, Quake y salidas a la Bond Street. Pero las experiencias que viví en ese mundo son tan reales como cualquiera que me haya pasado en el mundo físico.&lt;/p&gt;

&lt;p&gt;El mundo mutó, hoy en día no es raro conocer amigos en “la internet”. Mucho menos después de dos años de pandemia. Y aunque todavía seguimos poniendo barreras entre el mundo real y el virtual, yo creo que la linea será cada vez más difusa.&lt;/p&gt;

&lt;p&gt;En la novela “Otherland” de Tad Williams, se habla de un mundo donde la gente se conecta por medio de dispositivos de realidad virtual a un universo paralelo. En ese mundo se juntan con amigos, estudian, realizan actividades del día a día y también cometen alguna que otra ilegalidad.&lt;/p&gt;

&lt;p&gt;Estamos hoy en día dando los primeros pasos hacia el mundo de “Otherland”, pero la realidad no siempre se va a presentar como lo hace en la ciencia ficción. Hoy en día estamos viendo  grandes empresas entrando en el juego y planteando experiencias híbridas entre lo real y virtual, algunas incluso ofreciendo plataformas. &lt;/p&gt;

&lt;p&gt;Pero al final del día, esta experiencia en sí misma no es nueva, es algo que ya viene ocurriendo naturalmente. Cualquiera que haya pasado tiempo jugando un MMORPG con amigos sabe que al margen de las reglas y los objetivos del juego la experiencia cambia radicalmente según con quien la compartimos. Y este punto es clave en cualquier mundo virtual, que la plataforma sea solo catalizador de nuestra imaginación colectiva como usuarios. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Mundos virtuales es una serie de blogs donde voy a explorar las vivencias online que fueron y serán. Si te interesa contarme alguna vivencia podés hacermela llegar por &lt;a href="//mailto:bethlejem@gmail.com"&gt;acá&lt;/a&gt; o &lt;a href="http://twitter.com/iamdoomling"&gt;acá&lt;/a&gt; &amp;lt;3. Si tenemos suerte algún día Netflix hace una película al respecto.&lt;/em&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Manage webhooks with MongoDB Functions and Triggers</title>
      <author>Pubudu Jayawardana</author>
      <pubDate>Thu, 13 Jan 2022 22:46:31 +0000</pubDate>
      <link>https://dev.to/pubudusj/manage-webhooks-with-mongodb-functions-and-triggers-4lob</link>
      <guid>https://dev.to/pubudusj/manage-webhooks-with-mongodb-functions-and-triggers-4lob</guid>
      <description>&lt;p&gt;In this post I explain how I built a webhook management system with MongoDB triggers and functions. This is part of mongodb atlas hackathon here in dev.to&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;Webhooks are still a preferred choice of many organizations to communicate with 3rd party services. Since webhook calls are event-driven, if we use MongoDB Atlas as our database solution, we can use the features like &lt;a href="https://docs.mongodb.com/realm/triggers/trigger-types/"&gt;triggers&lt;/a&gt; and &lt;a href="https://docs.mongodb.com/realm/functions/"&gt;functions&lt;/a&gt; to build a low code webhook management system. In this project, I showcase how to build such system with MongoDB Realm.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Action Star&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;

&lt;p&gt;You can find the source code of the application at &lt;a href="https://github.com/pubudusj/webhook-management-with-mongodb/"&gt;https://github.com/pubudusj/webhook-management-with-mongodb/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Setup instructions are available further in this post.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#mongodb-featurestools-used"&gt;
  &lt;/a&gt;
  MongoDB features/tools used
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.mongodb.com/cloud/atlas/lp/try2"&gt;MongoDB Atlas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/realm/triggers/trigger-types/"&gt;Realm Triggers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/realm/functions/"&gt;Realm Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/realm/functions/add-external-dependencies"&gt;Realm External Dependancies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/realm/cli/"&gt;Realm CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/realm/hosting/"&gt;Realm static hosting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/realm/sdk/node/"&gt;MongoDB NodeJS SDK&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h4&gt;

&lt;p&gt;You can see a fully functional demo at&lt;br&gt;
&lt;a href="https://webhookmanagement-gfbga.mongodbstitch.com/"&gt;https://webhookmanagement-gfbga.mongodbstitch.com/&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#architecture"&gt;
  &lt;/a&gt;
  Architecture
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kXGPG2zx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a7t4neex5pjj11czk51y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kXGPG2zx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a7t4neex5pjj11czk51y.png" alt="System architecture" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h4&gt;

&lt;p&gt;There are 3 parts to this implementation.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Webhook registration.&lt;/li&gt;
&lt;li&gt;Webhook call for create candidate/user event.&lt;/li&gt;
&lt;li&gt;View webhook call history.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Webhook Registration&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;There is an API exposed in the AWS API gateway which proxy to a Lambda function (&lt;em&gt;RegisterWebhookFunction&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;In this function, MongoDB NodeJS SDK is included, where it generate a webhook signing token and save the companyId, webhookUrl, event type as ‘candidate.created’ and the signing token to MongoDB collection - webhooks.&lt;/li&gt;
&lt;li&gt;Generated webhook signing token will be returned from the API end point. &lt;/li&gt;
&lt;li&gt;This token can be used to authenticate the incoming webhook.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Create user&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;There is an API exposed in the AWS API gateway which proxy to a Lambda function (&lt;em&gt;CreateUserFunction&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;Again, in this function, MongoDB NodeJS SDK is included, where it save user data including the companyId to a MongoDB collection - users.&lt;/li&gt;
&lt;li&gt;In MongoDB Realm, I have created a application - WebhookManagement.&lt;/li&gt;
&lt;li&gt;There, I have created a trigger (&lt;em&gt;CandidateCreated&lt;/em&gt;), which will trigger when a new user is added to the users collection.&lt;/li&gt;
&lt;li&gt;Also, there is a function created as &lt;em&gt;CandidateCreated&lt;/em&gt; attached to this trigger, so this function will be executed upon the trigger.&lt;/li&gt;
&lt;li&gt;Within this &lt;em&gt;CandidateCreated&lt;/em&gt; function, there are few steps involved to call the webhook.&lt;/li&gt;
&lt;li&gt;First it calls another function, &lt;em&gt;GetWebhook&lt;/em&gt; to check if there are webhooks registered for this companyId and event type ‘candidate.created’.&lt;/li&gt;
&lt;li&gt;If so, &lt;em&gt;GetUserObject&lt;/em&gt; function will be called to fetch the respective user data from users collection.&lt;/li&gt;
&lt;li&gt;With those information, there is another function - &lt;em&gt;CreateWebhookPayload&lt;/em&gt; - called to create the payload for the webhook.&lt;/li&gt;
&lt;li&gt;In this &lt;em&gt;CreateWebhookPayload&lt;/em&gt; function, it generates a token to be added to the payload using signing token. To generate the token, I use SHA256 algorithm as:
&lt;code&gt;
hmacSHA256(userId + currentTime, signingToken)
&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;This token will be used to verify the authenticity of the request coming into the webhook. To generate this token, I use JS library 'crypto-js' which can be added easily into the realm app as an external dependency.&lt;/li&gt;
&lt;li&gt;Once the payload is created, external url will be called including this payload using JS library 'axios'. Here also, I use external dependancy feature of realm app to load 'axios' library into the function.&lt;/li&gt;
&lt;li&gt;Once the external api is called, the result will be saved into the webhook_calls collection using the function - &lt;em&gt;CreateWebhookCall&lt;/em&gt;. Here, the url, payload, timestamp, status and response from the webhook call are saved into the webhook_calls collection.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;View webhook call history&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To fetch webhook call history, an API exposed in the AWS API gateway which proxy to a Lambda function (&lt;em&gt;FetchWebhookHistoryFunction&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;Given the companyId, using MongoDB NodeJS SDK, it will query the webhook_call collection to fetch the data.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;How to Set up&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First, create a new MongoDB Cluster with the name "Testing" at MongoDB Atlas.&lt;/li&gt;
&lt;li&gt;Create a new user with username+password authentication at the Database Access section with permission read and write to any database.&lt;/li&gt;
&lt;li&gt;In the Realm section, create a new application. Use name as "WebhookManagement" and choose the option: 'Use and existing MongoDB Atlas Data Source' and choose the cluster created in step 1 - Testing.&lt;/li&gt;
&lt;li&gt;Under the 'Authentication' section, enable API keys and create a API key. Generated public key and private keys is required for realm cli authentication later on.&lt;/li&gt;
&lt;li&gt;Install realm cli using &lt;code&gt;npm install -g mongodb-realm-cli&lt;/code&gt; in your local machine.&lt;/li&gt;
&lt;li&gt;Clone this &lt;a href="https://github.com/pubudusj/webhook-management-with-mongodb"&gt;github repository&lt;/a&gt; to your local machine.&lt;/li&gt;
&lt;li&gt;This repo contains 3 main directories.&lt;/li&gt;
&lt;li&gt;Goto the the realm directory, open the Makefile and set the values for parameters: REALM_APP_ID, APP_NAME, REALM_PUBLIC_KEY, REALM_PRIVATE_KEY.&lt;/li&gt;
&lt;li&gt;Within the realm directory, run &lt;code&gt;make realm_login&lt;/code&gt;, &lt;code&gt;make realm_pull_app&lt;/code&gt;, &lt;code&gt;make setup_functions&lt;/code&gt;, &lt;code&gt;make setup_triggers&lt;/code&gt;, &lt;code&gt;make deploy_all&lt;/code&gt; in the same order. This will create all the functions, triggers and dependancies in the Realm app.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;backend&lt;/code&gt; directory contains a AWS SAM application to set up the required Lambda functions and API gateway apis which are consumed by the frontend app. Once the backend deployed, the API gateway url is required to set up frontend app. To deploy the backend, you need to have the connection string for the MongoDB database. You can get it from 'Connect' button on the dashboard of your DB cluster.&lt;/li&gt;
&lt;li&gt;Instead of this AWS backend, you can use Realm endpoints as well. &lt;a href="https://docs.mongodb.com/realm/endpoints/"&gt;https://docs.mongodb.com/realm/endpoints/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;frontend&lt;/code&gt; directory contains a VueJS app. Copy the .env.example file into .env and changed the VUE_APP_API_BASE_URL parameter with the one received in the backend deployment.&lt;/li&gt;
&lt;li&gt;Then, use &lt;code&gt;npm run serve&lt;/code&gt; for local testing or for production build, use &lt;code&gt;npm run build --production&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Goto the hosting section of the Realm App and enable hosting. This will create a sample app with a url. ex: webhookmanagement-gfbga.mongodbstitch.com&lt;/li&gt;
&lt;li&gt;Upload the frontend build files generated in step 12.&lt;/li&gt;
&lt;li&gt;Confirm the changes and visit the url. You will see the frontend app.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Sample screenshot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r8s5uLO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jkz36ywl8l2vfin196b6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r8s5uLO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jkz36ywl8l2vfin196b6.png" alt="Success Webhooks" width="880" height="609"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RbpwYzcq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osuhp318bdsedmyiqdde.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RbpwYzcq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osuhp318bdsedmyiqdde.png" alt="Failed Webhooks" width="880" height="600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;Overall, Atlas and Realm provides great experience in terms of developer experience and performance. There are few thing I would like to see in future.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Retry feature: Currently, if Realm function fails, we cannot automatically retry.&lt;/li&gt;
&lt;li&gt;Individual function calls in log: Currently if one function is being called within another function, it is not recorded in the logs. Only the calling function has a entry. Better to make all the function executions available in the logs.&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>atlashackathon</category>
      <category>showdev</category>
      <category>mongodb</category>
    </item>
    <item>
      <title>xChange-MongoDB Realm and SwiftUI</title>
      <author>Amey Sunu</author>
      <pubDate>Thu, 13 Jan 2022 22:42:45 +0000</pubDate>
      <link>https://dev.to/ameysunu/xchange-mongodb-realm-and-swiftui-34d4</link>
      <guid>https://dev.to/ameysunu/xchange-mongodb-realm-and-swiftui-34d4</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;xChange is an app designed in SwiftUI for iOS that helps meet users from different parts of the globe. It uses “Letter”, in which users can create letters, through which users can share their thoughts and feelings as notes to which users within the local region can react and get in touch with. Users with premium features can get access to the global feature where they can interact with letters all over the globe. The app uses MongoDB Realm for authentication and CRUD operations as local persistence storage, and is deployed on to MongoDB Atlas whenever a trigger to the app is viewed. The app mainly focuses on how people can interact with each other, merely based on their thoughts. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Action Star&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ameysunu"&gt;
        ameysunu
      &lt;/a&gt; / &lt;a href="https://github.com/ameysunu/xchange"&gt;
        xchange
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
xChange&lt;/h2&gt;
&lt;p&gt;xChange is an app designed in SwiftUI for iOS that helps meet users from different parts of the globe. It uses “Letter”, in which users can create letters, through which users can share their thoughts and feelings as notes to which users within the local region can react and get in touch with. Users with premium features can get access to the global feature where they can interact with letters all over the globe. The app uses MongoDB Realm for authentication and CRUD operations as local persistence storage, and is deployed on to MongoDB Atlas whenever a trigger to the app is viewed. The app mainly focuses on how people can interact with each other, merely based on their thoughts.&lt;/p&gt;
&lt;h2&gt;
Tools Used&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SwiftUI&lt;/li&gt;
&lt;li&gt;MongoDB Realm&lt;/li&gt;
&lt;li&gt;MapKit and CoreLocation&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ameysunu/xchange"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;The application uses MapKit, and CoreLocation for determining current location using Apple Maps to analyse the current location of users to deploy the letter in such a way that it binds the users of the same location. Using Realm, the data is bound with local CoreData within the iPhone and can be deployed to MongoDB Atlas. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#future-work"&gt;
  &lt;/a&gt;
  Future Work
&lt;/h4&gt;

&lt;p&gt;Using Artificial Intelligence, illegitimate users shall be removed. The AI will also monitor and handle abusive images, and NSFW content.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#screenshots"&gt;
  &lt;/a&gt;
  Screenshots
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dECXH3e_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bqzp1mi3d34j0rfiitgl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dECXH3e_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bqzp1mi3d34j0rfiitgl.png" alt="Home" width="880" height="1904"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G_y3Czw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tk1el1rxxblb4sil6sd9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G_y3Czw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tk1el1rxxblb4sil6sd9.png" alt="Upload" width="880" height="1904"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Z9baB3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sgqqbcyvjewm5531zjsm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Z9baB3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sgqqbcyvjewm5531zjsm.png" alt="Letters" width="880" height="1904"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wvuh8lCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4dhwd7z6s8s5l6234w00.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wvuh8lCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4dhwd7z6s8s5l6234w00.png" alt="Realm" width="880" height="547"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SiCsSaWH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxbw4k52qa49rqacjef6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SiCsSaWH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxbw4k52qa49rqacjef6.png" alt="Premium" width="880" height="1904"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>atlashackathon</category>
    </item>
    <item>
      <title>Creating a better date-picking experience with the DateRangePicker component</title>
      <author>Bryan Robinson</author>
      <pubDate>Thu, 13 Jan 2022 22:15:11 +0000</pubDate>
      <link>https://dev.to/algolia/creating-a-better-date-picking-experience-with-the-daterangepicker-component-4019</link>
      <guid>https://dev.to/algolia/creating-a-better-date-picking-experience-with-the-daterangepicker-component-4019</guid>
      <description>&lt;p&gt;When crafting a search interface, it's often enough to use what comes prepackaged with Algolia's InstantSearch libraries. Each library comes in a different flavor of JavaScript for your ease of use. Each one has all the main pieces you need to craft a strong UI. &lt;/p&gt;

&lt;p&gt;Sometimes you want to go beyond what's available. &lt;/p&gt;

&lt;p&gt;At that point, you're presented with two options: craft your own with our connector APIs or find a pre-built custom widget.&lt;/p&gt;

&lt;p&gt;It should come as no surprise to anyone that knows me that when presented with wanting a React date picker for &lt;a href="https://www.algolia.com/blog/engineering/algolia-coding-challenge-help-santa/"&gt;December's coding challenge,&lt;/a&gt; I wanted to write as little code as possible to make it work, but I also wanted the best UI possible for Santa. When it came to bonus challenge number 5, I needed something extra. My first stop? &lt;a href="https://www.algolia.com/developers/code-exchange/"&gt;The Algolia Code Exchange&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;After a quick search around &lt;code&gt;date&lt;/code&gt; components, I found exactly what I needed: the aptly-named &lt;a href="https://github.com/algolia/react-instantsearch-widget-date-range-picker"&gt;@algolia/react-instantsearch-widget-date-range-picker&lt;/a&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-project"&gt;
  &lt;/a&gt;
  Setting up the project
&lt;/h2&gt;

&lt;p&gt;If you'd like to follow along, you'll need to install a new React InstantSearch project. The easiest way to do that is to run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; npx create-instantsearch-app concert-search &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;--app-id&lt;/span&gt; latency &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;--api-key&lt;/span&gt; 059c79ddd276568e990286944276464a &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;--index-name&lt;/span&gt; concert_events_instantsearchjs &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;--template&lt;/span&gt; &lt;span class="s2"&gt;"React InstantSearch"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This monster command will set up a React InstantSearch project and connect it to &lt;a href="https://github.com/algolia/datasets/tree/master/concerts"&gt;Algolia's hosted concert Index&lt;/a&gt;. Change directory into the created folder and run &lt;code&gt;yarn start&lt;/code&gt; for a solid starting point.&lt;/p&gt;

&lt;p&gt;At this point, you've got a full search experience for a set of concerts. &lt;/p&gt;

&lt;p&gt;If you want to filter by date, you could set up a &lt;code&gt;&amp;lt;RefinementList&amp;gt;&lt;/code&gt; component and set its &lt;code&gt;attribute&lt;/code&gt; prop to &lt;code&gt;date&lt;/code&gt;, but those dates are Unix timestamps (for easiest comparisons). This isn't ideal for the user experience. Let's make that better.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-and-configuring-the-widget"&gt;
  &lt;/a&gt;
  Installing and configuring the widget
&lt;/h2&gt;

&lt;p&gt;To get the date range picker up and running, we need to install a couple of dependencies.&lt;br&gt;
&lt;br&gt;
 &lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; @algolia/react-instantsearch-widget-date-range-picker @duetds/date-picker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will install the official Algolia React Date picker widget and its dependency the Duet Date picker.&lt;/p&gt;

&lt;p&gt;From here, we need to import the packages into our &lt;code&gt;src/App.js&lt;/code&gt; file and initialize the Duet Date Picker for use.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// Add right after the imports included in the create-instantsearch-app code&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DateRangePicker&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@algolia/react-instantsearch-widget-date-range-picker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineCustomElements&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@duetds/date-picker/dist/loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Defines the custom elements from the date picker for use on the window object  &lt;/span&gt;
&lt;span class="nx"&gt;defineCustomElements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that these packages are imported, we're ready to get this on the page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-date-range-picker"&gt;
  &lt;/a&gt;
  Adding the date range picker
&lt;/h2&gt;

&lt;p&gt;To add the picker to the page, we need to select a spot within the &lt;code&gt;&amp;lt;InstantSearch&amp;gt;&lt;/code&gt; component. The base of the app is a &lt;code&gt;search-panel&lt;/code&gt;. By default, all we have inside this is the results, but we can add a filter panel, as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;InstantSearch&lt;/span&gt; &lt;span class="nx"&gt;_searchClient_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;searchClient&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;indexName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;concert_events_instantsearchjs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;search-panel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;search-panel__filters&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DateRangePicker&lt;/span&gt; &lt;span class="nx"&gt;attribute&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;date&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;  
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt; &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;_className_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;search-panel__results&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="err"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;//... Results code&lt;/span&gt;

    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/InstantSearch&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The DateRangePicker accepts an &lt;code&gt;attribute&lt;/code&gt; prop. This prop accepts a date-based attribute from the hits in our Index. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Quick note&lt;/em&gt;: The DateRangePicker accepts a Unix timestamp with milliseconds since the Epoch, not seconds. Depending on your data structure, you may need to create a secondary timestamp in your data.&lt;/p&gt;

&lt;p&gt;When you view the rendered page, you should now have a date picker. There are a few small UI snags to clean up. &lt;/p&gt;

&lt;p&gt;The Duet Date picker uses a slew of CSS Custom Properties for much of its styling. At the start of our &lt;code&gt;src/App.css&lt;/code&gt; file, we need to paste those in and configure for our app (as appropriate).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
  &lt;span class="py"&gt;--duet-color-primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3c4ee0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="py"&gt;--duet-color-text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="py"&gt;--duet-color-text-active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="py"&gt;--duet-color-placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#666&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="py"&gt;--duet-color-button&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f5f5f5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="py"&gt;--duet-color-surface&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="py"&gt;--duet-color-overlay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
  &lt;span class="py"&gt;--duet-color-border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#d6d6e7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

  &lt;span class="py"&gt;--duet-font&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;-apple-system&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlinkMacSystemFont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'Segoe UI'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Roboto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
  &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="py"&gt;--duet-font-normal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="py"&gt;--duet-font-bold&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

  &lt;span class="py"&gt;--duet-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="py"&gt;--duet-z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The two picker areas are a little close together still, so let's fix that with a little CSS, as well. This can go in &lt;code&gt;src/App.css&lt;/code&gt; but should be closer to the bottom. There are many ways to get the space between the two items, the quick and easy solution is to use CSS Grid and the &lt;code&gt;gap&lt;/code&gt; property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="nc"&gt;.date-range-picker&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="py"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And with that, we have a functioning, user-friendly date picker. No more dealing with Unix timestamps and conversions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#take-this-further"&gt;
  &lt;/a&gt;
  Take this further
&lt;/h2&gt;

&lt;p&gt;This works great in the small sample dataset, but can also be brought into any Algolia InstantSearch application. If you're looking to take this example further, create a better UI around each Hit by editing the hit component in &lt;code&gt;src/App.js&lt;/code&gt;. You could also show the current filters applied with the &lt;a href="https://www.algolia.com/doc/api-reference/widgets/current-refinements/react/"&gt;CurrentRefinements component&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Search Job Postings on HackerNews</title>
      <author>I love integers</author>
      <pubDate>Thu, 13 Jan 2022 22:06:03 +0000</pubDate>
      <link>https://dev.to/yuhuishishishi/search-job-postings-on-hackernews-bmk</link>
      <guid>https://dev.to/yuhuishishishi/search-job-postings-on-hackernews-bmk</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;Hacker Job Search let you search job postings on HackerNews.&lt;br&gt;
It used Realm Scheduled Triggers and Functions to scrape job postings from HackerNews at an hour interval.&lt;/p&gt;

&lt;p&gt;Atlas Search index is built on top to enable searching by keyword functionalities. &lt;/p&gt;

&lt;p&gt;The searching endpoint is exposed as HTTPS endpoints with Realm Functions to serve incoming requests from frontend&lt;/p&gt;

&lt;p&gt;The frontend website is hosted by Realm Hosting.&lt;/p&gt;

&lt;p&gt;So basically, the entire stack is run on Atlas and Realm.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Automation Innovation&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/yuhuishi-convect"&gt;
        yuhuishi-convect
      &lt;/a&gt; / &lt;a href="https://github.com/yuhuishi-convect/hacker-job-search"&gt;
        hacker-job-search
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://hacker-job-geiwg.mongodbstitch.com/"&gt;Demo Site&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.loom.com/share/43df624c66ae46489bf6285fbc027868"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pv6olKPl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.loom.com/sessions/thumbnails/43df624c66ae46489bf6285fbc027868-with-play.gif" alt="demo video" width="609" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>atlashackathon</category>
      <category>react</category>
      <category>mongodb</category>
      <category>serverless</category>
    </item>
    <item>
      <title>Configurar una cuenta AWS IAM para desplegar nuestras aplicaciones con ASP.NET</title>
      <author>Daniel Gomez Jaramillo</author>
      <pubDate>Thu, 13 Jan 2022 21:59:14 +0000</pubDate>
      <link>https://dev.to/esdanielgomez/configurar-una-cuenta-aws-iam-para-desplegar-nuestras-aplicaciones-con-aspnet-2e9b</link>
      <guid>https://dev.to/esdanielgomez/configurar-una-cuenta-aws-iam-para-desplegar-nuestras-aplicaciones-con-aspnet-2e9b</guid>
      <description>&lt;p&gt;Amazon Web Services, también conocida como AWS, es un conjunto de herramientas y servicios de cloud computing de Amazon. En este primer artículo, nuestro objetivo será crear una cuenta IAM (AWS Identity and Access Management), enfocada en el despliegue de aplicaciones web ASP.NET. En este sentido, este será el proceso: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Obtener una cuenta de capa gratuita de AWS&lt;/li&gt;
&lt;li&gt;Configurar una cuenta IAM&lt;/li&gt;
&lt;li&gt;Establecer las políticas para un usuario determinado en IAM&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-registrarse-para-obtener-una-cuenta-de-capa-gratuita-de-aws"&gt;
  &lt;/a&gt;
  1. Registrarse para obtener una cuenta de capa gratuita de AWS
&lt;/h2&gt;

&lt;p&gt;AWS dispone de un nivel gratuito para probar y consumir servicios durante 12 meses. En la siguiente dirección podemos realizar el registro correspondiente: &lt;a href="https://aws.amazon.com/free"&gt;aws.amazon.com/free&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Este es un proceso bastante sencillo, sin embargo, hay que tener en cuenta que hay que proporcionar los datos de nuestra tarjeta de crédito/debito para poder activarla.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-configurar-una-cuenta-iam"&gt;
  &lt;/a&gt;
  2. Configurar una cuenta IAM
&lt;/h2&gt;

&lt;p&gt;AWS &lt;em&gt;Identity and Access Management&lt;/em&gt; (IAM) proporciona un control de acceso detallado en todo AWS. Con IAM, podemos especificar quién puede acceder a qué servicios y recursos, y en qué condiciones. Con las políticas de IAM, también podemos administrar los permisos de otros usuarios y de sistemas que tengamos implementados para garantizar los permisos de privilegios mínimos.&lt;/p&gt;

&lt;p&gt;Muy bien, suponiendo que ya nos hemos creado una cuenta raíz, o en caso de que ya tengamos alguna, al iniciar sesión veremos la consola de AWS:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3aB7M5ht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qwxj3f845iqg6z684e3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3aB7M5ht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qwxj3f845iqg6z684e3.png" alt="" width="880" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Al ingresar a este servicio IAM, nos dirigiremos al apartado Users dentro del menú de opciones y seleccionaremos Add User. El objetivo es crear un usuario, el cual se utilizará para asociar los servicios de AWS que se van a utilizar, ya que no es recomendable proporcionar nuestros privilegios de acceso de usuario raíz. &lt;/p&gt;

&lt;p&gt;El formulario para agregar a un nuevo usuario se verá de esta manera:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X2Yf2W6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3vk2g1orymii71s3t87.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X2Yf2W6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3vk2g1orymii71s3t87.png" alt="" width="880" height="365"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Una vez que se haya terminado con la creación del nuevo usuario de IAM, es necesario descargar las credenciales. Estas las podremos utilizar más adelante para realizar una configuración de AWS desde Visual Studio por ejemplo. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--odDf_3s5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/put010of4ls7pwvqdp26.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--odDf_3s5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/put010of4ls7pwvqdp26.png" alt="" width="481" height="106"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nota: es muy importante mantener este archivo CSV en un lugar seguro, ya que se encuentran allí las credenciales de acceso. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-establecer-las-pol%C3%ADticas-del-usuario"&gt;
  &lt;/a&gt;
  3. Establecer las políticas del usuario
&lt;/h2&gt;

&lt;p&gt;Dependiendo de nuestro objetivo, nosotros podemos proporcionar los permisos de acceso y uso de los servicios de AWS para nuestros usuarios. Supongamos que en este caso queremos desplegar nuestras aplicaciones con ASP.NET Core desde Visual Studio hacia AWS, para esto nuestro nuevo usuario IAM necesita poder acceder a ciertos servicios de AWS. En este caso, nos dirigiremos al usuario en cuestión dentro de IAM en AWS y seleccionaremos la opción &lt;code&gt;Add inline policy&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ra1MLeha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5w6w00f7ch8nrhpjpf5g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ra1MLeha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5w6w00f7ch8nrhpjpf5g.png" alt="" width="757" height="134"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luego, realizaremos este proceso para cada uno de los siguientes servicios, los cuales serán de utilidad para poder desplegar nuestras aplicaciones web ASP.NET:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Elastic Beanstalk&lt;/li&gt;
&lt;li&gt;EC2&lt;/li&gt;
&lt;li&gt;S3&lt;/li&gt;
&lt;li&gt;CloudFormation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qlf4k90p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vl1h4b5ck84jfy9kfxyo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qlf4k90p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vl1h4b5ck84jfy9kfxyo.png" alt="" width="880" height="498"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Después de agregar cada uno de los servicios, asignaremos un nombre para esta política y la guardaremos. Al final tendremos algo como esto: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKs9x8JX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28njfw2xm8ga3hw3ywyi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKs9x8JX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28njfw2xm8ga3hw3ywyi.png" alt="" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gracias-por-leer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;¡Gracias por leer!&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Con este proceso, nuestro IAM estará creado, y las políticas estarán establecidas. En próximos artículos revisaremos como acceder a AWS desde Visual Studio 2019 gracias a esta configuración. &lt;/p&gt;

&lt;p&gt;Si tienes alguna pregunta o alguna idea en mente, será un gusto poder estar en comunicación y juntos intercambiar conocimientos entre sí.&lt;/p&gt;

&lt;p&gt;¡Nos vemos en &lt;a href="https://twitter.com/esDanielGomez"&gt;Twitter&lt;/a&gt;! O si gustas también puedes escribirme por otros medios: &lt;a href="https://esdanielgomez.com"&gt;esDanielGomez.com&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>dotnet</category>
      <category>cloud</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
