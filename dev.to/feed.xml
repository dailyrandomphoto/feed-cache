<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Metamask authentication in Next.js with Clerk 🔒</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Sun, 23 Jan 2022 13:53:54 +0000</pubDate>
      <link>https://dev.to/avneesh0612/metamask-authentication-in-nextjs-with-clerk-34fe</link>
      <guid>https://dev.to/avneesh0612/metamask-authentication-in-nextjs-with-clerk-34fe</guid>
      <description>&lt;p&gt;Hello everyone! As you have seen web3 is very popular right now. Clerk has recently released metamask authentication. So let's take a look at how to implement it in our app!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-clerk"&gt;
  &lt;/a&gt;
  What is Clerk?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://clerk.dev/"&gt;Clerk&lt;/a&gt; is one of the best ways to add authentication to a Next.js or a react application. It gives us things that are a pain to handle on our own like user management and multiple sessions.&lt;/p&gt;

&lt;p&gt;Why use Clerk?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to work with&lt;/li&gt;
&lt;li&gt;Customizable&lt;/li&gt;
&lt;li&gt;2-step verification&lt;/li&gt;
&lt;li&gt;New device notifications&lt;/li&gt;
&lt;li&gt;Single sign-on&lt;/li&gt;
&lt;li&gt;Passwordless sign-in&lt;/li&gt;
&lt;li&gt;Multi-sessions&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-our-nextjs-app"&gt;
  &lt;/a&gt;
  Setting up our Next.js app
&lt;/h3&gt;

&lt;p&gt;Creating a new Next.js app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-next-app next-clerk-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Installing &lt;a href="https://clerk.dev/"&gt;Clerk&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @clerk/clerk-react &lt;span class="c"&gt;# npm&lt;/span&gt;
yarn add @clerk/clerk-react &lt;span class="c"&gt;# yarn&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#setting-up-clerk"&gt;
  &lt;/a&gt;
  Setting up Clerk
&lt;/h3&gt;

&lt;p&gt;Go to &lt;a href="https://clerk.dev"&gt;Clerk&lt;/a&gt;, sign up/in, then create a new app. Select "Sign in with Metamask" as the Authentication strategy-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AhgbW3pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642933471226/6hFpFKly_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AhgbW3pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642933471226/6hFpFKly_.png" alt="image.png" width="880" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you now go to "API Keys" in the sidebar, you will be able to see your frontend API key. Copy it as we are going to need it soon.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rNKf0_Bh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642933643582/0uZGe5OP1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rNKf0_Bh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642933643582/0uZGe5OP1.png" alt="image.png" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integrating-clerk-into-nextjs"&gt;
  &lt;/a&gt;
  Integrating Clerk into Next.js
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#configuring-clerk"&gt;
  &lt;/a&gt;
  Configuring Clerk
&lt;/h3&gt;

&lt;p&gt;Inside &lt;code&gt;_app.js&lt;/code&gt; wrap the in a ClerkProvider-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ClerkProvider
  frontendApi={clerkFrontendApi}
  navigate={(to) =&amp;gt; router.push(to)}
&amp;gt;
  &amp;lt;Component {...pageProps} /&amp;gt;
&amp;lt;/ClerkProvider&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Get router from useRouter-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const router = useRouter();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Import useRouter and ClerkProvider-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { ClerkProvider } from "@clerk/clerk-react";
import { useRouter } from "next/router";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see we also need the &lt;code&gt;clerkFrontendApi&lt;/code&gt;, so create a new variable-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const clerkFrontendApi = process.env.NEXT_PUBLIC_CLERK_FRONTEND_API;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are going to use env variables for the API key, so create a new file &lt;code&gt;.env.local&lt;/code&gt;, and add &lt;code&gt;NEXT_PUBLIC_CLERK_FRONTEND_API&lt;/code&gt;-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NEXT_PUBLIC_CLERK_FRONTEND_API=YOUR_API_KEY
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Paste in the API key that you got from the clerk dashboard. You also going to restart the dev server-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run dev # npm

yarn dev # yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#creating-the-signin-button"&gt;
  &lt;/a&gt;
  Creating the sign-in button
&lt;/h3&gt;

&lt;p&gt;Inside &lt;code&gt;index.js&lt;/code&gt; add the following-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;SignedOut&amp;gt;
  &amp;lt;SignInWithMetamaskButton&amp;gt;Sign in with Metamask&amp;lt;/SignInWithMetamaskButton&amp;gt;
&amp;lt;/SignedOut&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You also need to import the following-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import {
  SignedIn,
  SignedOut,
  SignInWithMetamaskButton,
} from "@clerk/clerk-react";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, if you go to &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;, you will be able to see a sign-in button!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xT6fLweV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642936017421/NM4fTVnvBE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xT6fLweV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642936017421/NM4fTVnvBE.png" alt="image.png" width="880" height="478"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you try clicking on it, it works 🥳.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#showing-userprofile-and-address-if-the-user-is-logged-in"&gt;
  &lt;/a&gt;
  Showing UserProfile and address if the user is logged in
&lt;/h3&gt;

&lt;p&gt;Show a User component if the user is SignedIn-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;SignedIn&amp;gt;
  &amp;lt;User /&amp;gt;
&amp;lt;/SignedIn&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a new component in the components folder as &lt;code&gt;User.js&lt;/code&gt; and add the following-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { UserButton, useUser } from "@clerk/clerk-react";

const User = () =&amp;gt; {
  const user = useUser();

  console.log(user);
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;UserButton /&amp;gt;
      &amp;lt;p&amp;gt;{user.web3Wallets[0].web3Wallet}&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
  );
};

export default User;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Clerk provides a &lt;code&gt;useUser&lt;/code&gt; hook which allows us to access the user's details like the wallet address.&lt;/p&gt;

&lt;p&gt;If you now login into the app then, it would show you a profile picture and your address-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RBdd_6dZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642936338400/cP77poM852.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RBdd_6dZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642936338400/cP77poM852.png" alt="image.png" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you click on the user profile, it will show you a popup. You can click on manage account to add details like name, email, profile picture, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keeping-the-users-on-our-site"&gt;
  &lt;/a&gt;
  Keeping the user's on our site
&lt;/h3&gt;

&lt;p&gt;When you clicked on manage account, you might have noticed that the URL was completely different and was not looking good. So let's see how to keep users on our site itself!&lt;/p&gt;

&lt;p&gt;Create the sign in, sign up, and the user page&lt;br&gt;
Inside the &lt;code&gt;pages&lt;/code&gt; folder we will create 3 folders named&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sign-in&lt;/li&gt;
&lt;li&gt;sign-up&lt;/li&gt;
&lt;li&gt;user&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Inside all the folders we will create a file named &lt;code&gt;[[…index]].js&lt;/code&gt;&lt;br&gt;
Here is the code for all the files-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sign-in/ [[…index]].js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { SignIn } from "@clerk/clerk-react";

export default function SignInPage() {
  return &amp;lt;SignIn path="/sign-in" routing="path" /&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;sign-up/ [[…index]].js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { SignUp } from "@clerk/clerk-react";

export default function SignUpPage() {
  return &amp;lt;SignUp path="/sign-up" routing="path" /&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;user/ [[…index]].js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { UserProfile } from "@clerk/clerk-react";

export default function UserProfilePage() {
  return &amp;lt;UserProfile path="/user" routing="path" /&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, go to the clerk dashboard, and click on paths in the sidebar. Now edit the URLs with the following-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CmIodaS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642936667724/670892Zym.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CmIodaS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642936667724/670892Zym.png" alt="image.png" width="880" height="650"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBCtfeNG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642936685668/_fkztjnDg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBCtfeNG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642936685668/_fkztjnDg.png" alt="image.png" width="880" height="589"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you now try signing in, signing up, or viewing your profile then the user will be on the website itself (localhost in development).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.loom.com/share/f43d9d81f60947f28b30f7346f0d8ae0"&gt;Video demo&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://clerk.dev/"&gt;Clerk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/avneesh0612/Next-Clerk-metamask"&gt;GitHub Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.avneesh.tech/mastering-clerk-authentication-with-the-nextjs-standard-setup"&gt;Read more about Clerk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://links.avneesh.tech/"&gt;Let's connect&lt;/a&gt;&lt;/p&gt;

</description>
      <category>metamask</category>
      <category>nextjs</category>
      <category>web3</category>
      <category>auth</category>
    </item>
    <item>
      <title>10+ Best Websites To Download Free Website Templates For Developers.</title>
      <author>Cess</author>
      <pubDate>Sun, 23 Jan 2022 13:34:35 +0000</pubDate>
      <link>https://dev.to/cesscode/10-best-websites-to-download-free-website-templates-for-developers-24g3</link>
      <guid>https://dev.to/cesscode/10-best-websites-to-download-free-website-templates-for-developers-24g3</guid>
      <description>&lt;p&gt;People nowadays create websites on the internet to make money. Whether you are a beginner or expert, you always need the best templates for your website. You need to make your website appear professional on the internet.&lt;/p&gt;

&lt;p&gt;Thousands of different website designs are available on the internet. Many of them are free to download. You will get many customizable website templates. &lt;/p&gt;

&lt;p&gt;In this article, we'll look at a few websites where you will get free templates.&lt;/p&gt;

&lt;p&gt;let's get started 💃&lt;/p&gt;


&lt;p&gt;&lt;a href="https://giphy.com/gifs/thesimpsons-l0G17c5peP4uHYsco"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-website-template"&gt;
  &lt;/a&gt;
  What is a website template?
&lt;/h2&gt;

&lt;p&gt;In a word, a &lt;strong&gt;template&lt;/strong&gt; is a predesigned page that you can use as a foundation for a new page. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A website template&lt;/strong&gt; is also known as a &lt;strong&gt;Web-page template&lt;/strong&gt; or &lt;strong&gt;page template&lt;/strong&gt;.  &lt;/p&gt;

&lt;p&gt;You can use a &lt;strong&gt;website template&lt;/strong&gt; to create beautiful websites with little or no coding skills.&lt;/p&gt;

&lt;p&gt;Check out this article to know more about &lt;a href="https://www.techopedia.com/definition/4899/website-template"&gt;website Templates&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are many benefits to using a website template. We will focus on two of the most important, which are: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Time-Saving: It takes a long time to build a website from the ground up. The developer will be able to save time by using a website template. All that's left for the developer to do now is add its content. Adding materials such as text and images will take far less time than if the developer built it from the ground up.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Money-Saving:  One of the benefits of using a website template is that it saves money.  The cost of purchasing ready-made web design templates is cheap. The designer will save money by going for finished themes for his customers. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#heres-a-list-of-websites-where-you-will-get-free-responsive-website-templates"&gt;
  &lt;/a&gt;
  Here's a list of websites where you will get free responsive website templates:
&lt;/h3&gt;

&lt;p&gt;1.&lt;br&gt;
&lt;strong&gt;Html5Up&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Html5Up&lt;/strong&gt; contains free website templates built with HTML5 + CSS3. The website templates are responsive and customizable.  There are many portfolios with good transitions to choose from.   &lt;/p&gt;

&lt;p&gt;You can use these templates for personal or business purposes. You can also customize them in whatever way you like. &lt;/p&gt;

&lt;p&gt;You can use all the templates on HTml5up for free all you have to do is give them credit for the design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--azA-FPcH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642715682472/ZuKm7rIZl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--azA-FPcH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642715682472/ZuKm7rIZl.png" alt="frame_chrome_mac_dark (1).png" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to  HTml5up  website [&lt;a href="https://html5up.net"&gt;https://html5up.net&lt;/a&gt;]  &lt;/p&gt;

&lt;p&gt;2.&lt;br&gt;
&lt;strong&gt;Colorlib&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Colorlib&lt;/strong&gt; provides top-of-the-line website templates that are ready to use on any site. This website contains simple, responsive, clean, and fast-loading free WordPress themes for everyone. &lt;/p&gt;

&lt;p&gt;The different theme options are customizable. You have total control over how you customize them.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Colorlib&lt;/strong&gt; makes creating professional websites easy with is different customizable templates.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tqN44gCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642715794498/t-CL7PBzu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tqN44gCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642715794498/t-CL7PBzu.png" alt="frame_chrome_mac_dark (2).png" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to  Colorlib  website [&lt;a href="https://colorlib.com/wp/templates"&gt;https://colorlib.com/wp/templates&lt;/a&gt;] &lt;/p&gt;

&lt;p&gt;3.&lt;br&gt;
&lt;strong&gt;Templatemo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This website contains free Html5, CSS, and Bootstrap templates. The templates are responsive and customizable. You can customize them in whatever way you like.&lt;/p&gt;

&lt;p&gt;You can use these templates for personal or business purposes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WlkKhphF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642715950029/jIO4NcgF8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WlkKhphF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642715950029/jIO4NcgF8.png" alt="frame_chrome_mac_dark (3).png" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to  Templatemo  website [&lt;a href="https://templatemo.com"&gt;https://templatemo.com&lt;/a&gt;]  &lt;/p&gt;

&lt;p&gt;4.&lt;br&gt;
&lt;strong&gt;Onepage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This website contains both free and paid website templates. The template website templates are single-page websites. Each template contains a review, long screenshot, live demo, and download links.  &lt;/p&gt;

&lt;p&gt;It has no extra pages like the about or services pages. All the content on the website sits within the same webpage in a long scrolling layout.&lt;/p&gt;

&lt;p&gt;The website runs on WordPress and features customized WordPress themes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gCg3Ek2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642716115968/Oymm7qQTg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gCg3Ek2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642716115968/Oymm7qQTg.png" alt="frame_chrome_mac_dark (4).png" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to  Onepage  website [&lt;a href="https://onepagelove.com/templates"&gt;https://onepagelove.com/templates&lt;/a&gt;] &lt;/p&gt;

&lt;p&gt;5.&lt;br&gt;
&lt;strong&gt;Cruip&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This website contains free HTML landing page templates for download. The templates make it simple to create your landing pages.&lt;/p&gt;

&lt;p&gt;You can also sign up with your email address to receive updated templates in your inbox.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kJg3FEcJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642716339599/8xOvtHshV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJg3FEcJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642716339599/8xOvtHshV.png" alt="frame_chrome_mac_dark (5).png" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to  Cruip  website [&lt;a href="https://cruip.com/free-templates"&gt;https://cruip.com/free-templates&lt;/a&gt;]  &lt;/p&gt;

&lt;p&gt;6.&lt;br&gt;
&lt;strong&gt;StyleShout&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This website contains beautiful free website templates. The websites are simple, clean, and handcrafted.&lt;/p&gt;

&lt;p&gt;It also has a blog section where they post articles. They publish articles about their daily updates, web design, and web development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L1LsxmC6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642716521821/8hlhZKOuP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L1LsxmC6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642716521821/8hlhZKOuP.png" alt="frame_chrome_mac_dark (6).png" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to Styleshout website [&lt;a href="https://www.styleshout.com/free-templates"&gt;https://www.styleshout.com/free-templates&lt;/a&gt;] &lt;/p&gt;

&lt;p&gt;7.&lt;br&gt;
&lt;strong&gt;Startbootstrap&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This website contains bootstrap themes, templates, and UI tools. You have complete freedom to customize them in whatever way you like. &lt;/p&gt;

&lt;p&gt;You can also sign up with your email address to receive updated templates in your inbox. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---J5lW5GO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717619130/XVc_9kQbO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---J5lW5GO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717619130/XVc_9kQbO.png" alt="frame_chrome_mac_dark (11).png" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to Startbootstrap website [&lt;a href="https://startbootstrap.com"&gt;https://startbootstrap.com&lt;/a&gt;]  &lt;/p&gt;

&lt;p&gt;8.&lt;br&gt;
&lt;strong&gt;ZeroTheme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This website contains free Html5, Css3, and bootstrap website templates.  You can use these templates for personal or business purposes. &lt;/p&gt;

&lt;p&gt;The different template options are customizable. You can customize them in any form you like. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pU0o8orC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717845499/o04A2Q5Gw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pU0o8orC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717845499/o04A2Q5Gw.png" alt="frame_chrome_mac_dark (13).png" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to Zerotheme website [&lt;a href="https://www.zerotheme.com"&gt;https://www.zerotheme.com&lt;/a&gt;] &lt;/p&gt;

&lt;p&gt;9.&lt;br&gt;
&lt;strong&gt;Html5xcss3&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This website contains free responsive Css3, bootstrap, and Html5 templates. The templates are editable and you can use them for both business and personal reasons.&lt;/p&gt;

&lt;p&gt;You can also sign up with your email address to get new templates delivered to your inbox.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Myaq_C7u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717735825/1TMjDAb1X.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Myaq_C7u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717735825/1TMjDAb1X.png" alt="frame_chrome_mac_dark (12).png" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to Html5xcss3  website [&lt;a href="https://www.html5xcss3.com"&gt;https://www.html5xcss3.com&lt;/a&gt;] &lt;/p&gt;

&lt;p&gt;10.&lt;br&gt;
&lt;strong&gt;Graphberry&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This website contains free HTML, CSS, Bootstrap, and React templates. It also contains UI kits, mockups, and designs for your use. Select the mockups, icons, or template links from the navigation menu.&lt;/p&gt;

&lt;p&gt;Graphberry provides assets that help speed the design process for a variety of needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VVM3V4BW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642715455508/5ou8ZxC7L.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VVM3V4BW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642715455508/5ou8ZxC7L.png" alt="frame_chrome_mac_dark.png" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to  Graphberry  website [&lt;a href="https://www.graphberry.com"&gt;https://www.graphberry.com&lt;/a&gt;] &lt;/p&gt;

&lt;p&gt;11.&lt;br&gt;
&lt;strong&gt;Tooplate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This website contains responsive HTML CSS templates built on the responsive Bootstrap framework. The templates are customizable. They are easy to edit for your websites.&lt;/p&gt;

&lt;p&gt;You can download any template for free. There's no need to log in or register to use the templates.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qVJlYhs---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717361107/GqFjAfH81.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qVJlYhs---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717361107/GqFjAfH81.png" alt="frame_chrome_mac_dark (10).png" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to  Tooplate  website [&lt;a href="https://www.tooplate.com"&gt;https://www.tooplate.com&lt;/a&gt;] &lt;/p&gt;

&lt;p&gt;12.&lt;br&gt;
&lt;strong&gt;UIdeck&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This website contains free and paid HTML, Bootstrap, React, and Tailwind templates. These templates help you to create websites without coding from scratch.&lt;/p&gt;

&lt;p&gt;You can use these templates for personal or business purposes. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hy5UF0ih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717231930/kjS2sX1mO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hy5UF0ih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717231930/kjS2sX1mO.png" alt="frame_chrome_mac_dark (9).png" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to  UIdeck  website [&lt;a href="https://uideck.com"&gt;https://uideck.com&lt;/a&gt;] &lt;/p&gt;

&lt;p&gt;13.&lt;br&gt;
&lt;strong&gt;ThemeForest&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This website contains professional WordPress themes and website templates for any project. The templates are customizable.  You can also customize them in whatever way you like. &lt;/p&gt;

&lt;p&gt;There are both free and paid templates and designs in ThemeForest.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L1wEfSBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642716834306/otT_peFNk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L1wEfSBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642716834306/otT_peFNk.png" alt="frame_chrome_mac_dark (8).png" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to  ThemeForest  website [&lt;a href="https://themeforest.net"&gt;https://themeforest.net&lt;/a&gt;] &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope that this article has provided you with a few websites to get free templates. With these sites, you will find the perfect website templates to download. &lt;/p&gt;

&lt;p&gt;I hope you enjoyed this article, be sure to check back for more content soon! 💙&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>How Vercel is changing the cloud game</title>
      <author>Pablo Bermejo</author>
      <pubDate>Sun, 23 Jan 2022 13:25:12 +0000</pubDate>
      <link>https://dev.to/peibolsang/how-vercel-is-changing-the-cloud-game-fme</link>
      <guid>https://dev.to/peibolsang/how-vercel-is-changing-the-cloud-game-fme</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-what-is-vercel"&gt;
  &lt;/a&gt;
  1. What is Vercel?
&lt;/h2&gt;

&lt;p&gt;In all likelihood, many people know Vercel for being the creators of &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt;, a React-based Web development framework with SPA, SSG, and SSR capabilities. But frankly, after discussing what Vercel really is with my colleagues at work several times, it is way more than that:&lt;/p&gt;

&lt;p&gt;Vercel is a cloud computing provider.&lt;/p&gt;

&lt;p&gt;After reading that line, you may be thinking: &lt;em&gt;"This guy has lost his freaking mind"&lt;/em&gt;. Well, it happens that I know exactly what I am saying; bear with me.&lt;/p&gt;

&lt;p&gt;Funnily enough, they do not introduce themselves as such in their main channels, like their Web site, but they technically are. You need to surf to &lt;a href="https://github.com/vercel/vercel/tree/main/examples#what-is-vercel"&gt;this particular folder in a specific repository on GitHub&lt;/a&gt; to find the definition I like the most:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Vercel is a &lt;strong&gt;cloud platform&lt;/strong&gt; for static frontends and serverless functions. It enables developers to host websites and web applications that deploy instantly, scale automatically, and require no supervision.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In other words, Vercel is a &lt;em&gt;niche&lt;/em&gt; cloud computing provider where the niche is Web application development. It offers a higher-order abstraction on top of infrastructure utilities from &lt;em&gt;generalist&lt;/em&gt; cloud providers by wrapping, encapsulating, and composing them into a developer-centric computing solution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XUU8979A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15di0g39pcy49nwc7afv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XUU8979A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15di0g39pcy49nwc7afv.png" alt="Vercel" width="880" height="681"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With this context, why do we consider AWS a cloud computing provider and not Vercel? The problem comes with the definition of &lt;em&gt;cloud computing provider&lt;/em&gt;. Suppose AWS reshuffles its entire catalog of services keeping only serverless components such as Lambda, DynamoDB, API Gateway, S3, or Step Functions. What's the difference with Vercel, then? In this scenario, they both provide computing abstractions and offer them as a service; it just happens that Vercel provides higher levels of abstraction and defaults oriented for Web developers. Both offer building blocks, and developers will use them depending on how well these abstractions fit their needs. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Spoiler: For Web developers, Vercel abstractions fit very well.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the era of serverless and infrastructure as a commodity, the definition of cloud computing provider is broader than we think. How do companies qualify as cloud computing providers? Doesn't Vercel provide cloud computing services? To be an authentic cloud computing provider, do companies need to own their entire stack, including hardware, to be a genuine cloud computing provider? Do they need to offer VMs and VPCs in their cloud computing catalog to be considered such a provider? No, I don't think so.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-vercels-managed-service"&gt;
  &lt;/a&gt;
  1.1. Vercel's managed service
&lt;/h3&gt;

&lt;p&gt;Vercel's mission in this world is to empower developers to build a faster Web. This obsession for speed manifests itself in two main lines of action:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Run the fastest Web applications on earth thanks to an auto-scalable, high-performance computing solution.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create the best tools for Web developers to build, deploy, preview, and ship Web applications instantly.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And both are interconnected. Vercel's Deploy-Preview-Ship (DPS) workflow allows developers to go from code to actual deployment of your Web application in a matter of seconds. For that, you can either import your project directly from GitHub or create a new one based on a template from a catalog of different Web technologies. Interestingly, if you decide to go for Next.js, Vercel also provides you with canned scaffolds for certain types of frontend architectures such as e-commerce, events, documentation, and blog Websites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e8Z2S8MO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01jbj81m3bsp6rdqr0t8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8Z2S8MO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01jbj81m3bsp6rdqr0t8.png" alt="Vercel templates" width="880" height="739"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the simplest use case, after you configure permissions and allow GitHub's Vercel app to access your repository, every commit will result in an instant build and deployment of your Web app onto Vercel. And it will happen in a question of seconds, giving you back an actual application URL you can try. This process reminded me of Heroku, and that's because Vercel is also investing in this kind of developer productivity to shorten feedback loops. Of course, there are multiple ways to make deployments with Vercel; in addition to GitHub's Vercel app, we have other alternatives such as Deploy Hooks, Vercel CLI, and the Vercel API.&lt;/p&gt;

&lt;p&gt;OK, but what's the &lt;strong&gt;value of Vercel&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;Let's suppose you are building a Web site with a mix of capabilities: SPA with React Hooks for the most interactive part, SSG for some pages with significant static information, and SSR for some low-latency data access. You can do that by utilizing Next.js or even &lt;a href="https://remix.run/"&gt;Remix&lt;/a&gt;. As you can imagine, these applications need different pieces of cloud computing resources (infrastructure), so where do they get deployed?&lt;/p&gt;

&lt;p&gt;Three alternatives respond to different stages in the technology evolution:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Custom built&lt;/strong&gt;: You handle the entire deployment process and technology end-to-end. You would need to start by designing an entire build process where you identify, split, and package the different components of your Web App into separate bundles. That's because your SPA, SSG, and SSR pieces are deployed separately on different types of cloud infrastructure. Then, you would need to write a few lines of Terraform (or Pulumi, etc.) to get those bundles deployed into their pertinent cloud services. If you use AWS, those are services such as S3, Lambda, CloudFront, and API Gateway. Additionally, although you don't &lt;em&gt;own&lt;/em&gt; those server-side computing resources, you still need to manage their status in this scenario.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Buy a product&lt;/strong&gt;: Similar as above, but instead of writing your own infrastructure-as-code scripts, you buy it from the market as a pre-integrated product. I am thinking of solutions such as the &lt;a href="https://www.serverless.com/plugins/serverless-nextjs-plugin"&gt;Next.js plugin from Serverless Framework&lt;/a&gt; or &lt;a href="https://registry.terraform.io/modules/dealmore/next-js/aws/latest"&gt;this Terraform module&lt;/a&gt; created by the community. In this case, you are not custom-building everything from scratch, but you still need to manage the status of the serverless resources you have created. Also, you are now totally dependent on these frameworks to adapt to the potential changes in conventions and structure introduced by the different Web technologies (e.g., changes in Next.js build)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Subscribe to a service&lt;/strong&gt;: You don't care how your components are bundled, where they are deployed, and how they are managed. Your infrastructure-as-code scripts are reduced to very few calls to a Deployment API with coarse-grained abstractions specifically designed for Web applications. Everything is given to you as a well-oiled build, deploy, and ship managed service where you only pay per user. This is Vercel.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this last scenario, the entire build, deploy, and ship process is absolutely transparent to you, including managing the status of the server-side computing resources of your Web application. &lt;/p&gt;

&lt;p&gt;We can represent these three alternatives with the following Wardley map:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sHBqszzh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1i0us2aj42i3f8lqsbxx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sHBqszzh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1i0us2aj42i3f8lqsbxx.png" alt="Wardley map" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you move to the right through the evolution line, technologies keep adding levels of abstractions that come with limitations and constraints. That's the price they pay for industrialization and commoditization. If you are happy with them and fit your bill, they may be an exciting solution to your problems. In the case of Vercel, these abstractions, limitations, and constraints may pay off for a considerable number of Web development use cases.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-vercels-cloud-computing-abstractions"&gt;
  &lt;/a&gt;
  1.2. Vercel's cloud computing abstractions
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"Speed of developer iteration is the single most important factor in how quickly a technology company can move." — Paul Biggar, founder of Darklang and CircleCI&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Amongst all the computing and deployment characteristics of Vercel, there are two that bring my total attention: &lt;a href="https://vercel.com/docs/concepts/functions/serverless-functions"&gt;Serverless Functions&lt;/a&gt; and &lt;a href="https://vercel.com/docs/concepts/functions/edge-functions"&gt;Edge Functions&lt;/a&gt;: Yes, with Vercel you can &lt;strong&gt;build, deploy, and ship APIs too&lt;/strong&gt;. These are HTTP Req/Res constructs that can either be consumed by the frontend components ... or not. I mean, you could use Vercel to deploy an API without any visual components if you wish and expose it through an HTTP endpoint.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Serverless Functions&lt;/strong&gt; are pieces of code written with backend languages that take an HTTP request and provide a response. They are deployed on &lt;a href="https://vercel.com/docs/concepts/edge-network/overview"&gt;Vercel's Edge Network&lt;/a&gt;, which uses AWS Lambda under the hood running on different &lt;a href="https://vercel.com/docs/concepts/edge-network/regions"&gt;regions&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: Remember, even if these Vercel functions run on AWS Lambda@Edge, that's surprisingly not an edge solution as &lt;a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/HowCloudFrontWorks.html#CloudFrontRegionaledgecaches"&gt;documented by AWS many times&lt;/a&gt;. AWS's proper edge computing solution is &lt;a href="https://aws.amazon.com/blogs/aws/introducing-cloudfront-functions-run-your-code-at-the-edge-with-low-latency-at-any-scale/"&gt;CloudFront Functions&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Edge Functions&lt;/strong&gt; (in beta) are very similar to Serverless Functions except that they are deployed at the edge with &lt;a href="https://workers.cloudflare.com/"&gt;CloudFlare Workers&lt;/a&gt;. I believe these functions can only be programmed in Javascript and are executed by the powerful &lt;a href="https://developers.google.com/apps-script/guides/v8-runtime"&gt;V8 runtime&lt;/a&gt;. Additionally, with Edge Functions, you need to write a small piece of middleware that is executed before the request is processed and is very useful for use cases such as authentication, redirects, or A/B testing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's take a closer look at Serverless functions. To me, the most impressive feature is that they can be written in a handful of &lt;a href="https://vercel.com/docs/concepts/functions/supported-languages#supported-languages"&gt;backend programming languages&lt;/a&gt;. You just need to place that code under the &lt;code&gt;/api&lt;/code&gt; folder of your Web app repository and next Vercel will automatically recognize these source code files and deploy them as Lambda functions on AWS. &lt;/p&gt;

&lt;p&gt;Well, to be 100% accurate, Vercel DPS workflow does not deploy them directly as Lambda functions. Instead, Vercel uses a thing called &lt;code&gt;node-bridge&lt;/code&gt; that &lt;a href="https://www.npmjs.com/package/@vercel/node-bridge"&gt;spins up a Node.js server inside a Lambda function&lt;/a&gt; and then creates a request from the Lambda invoke event. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wDGJKrpF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p81ylordqcn4y7c15o21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wDGJKrpF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p81ylordqcn4y7c15o21.png" alt="Vercel node bridge" width="670" height="316"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Source: &lt;a href="https://stackoverflow.com/questions/58112093/how-to-deploy-next-js-9-to-aws-lambda"&gt;Stack Overflow&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is what I was referring to before when I said that Vercel identifies, splits, and bundles different components of your Web application and deploys them onto various cloud services. For example, I am sure the SPA bundle is deployed onto something like Amazon S3, while these functions are deployed on AWS Lambda. However, both are contained within the same repository. I didn't try it, but you could even write your frontend part in Typescript and the backend part in Go, everything structured within the same Web app repository.&lt;/p&gt;

&lt;p&gt;Vercel's work to encapsulate the underlying cloud complexity and create valuable abstractions for Web developers manifests itself brilliantly in the signature of these Serverless Functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NextApiRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;NextApiResponse&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NextApiRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NextApiResponse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are familiar with AWS Lambda and its handler function, you'll notice that the &lt;code&gt;context&lt;/code&gt; and &lt;code&gt;event&lt;/code&gt; objects are not exposed at this level by Vercel Serverless Functions. The main reason is that, from all possible &lt;a href="https://docs.aws.amazon.com/whitepapers/latest/security-overview-aws-lambda/lambda-event-sources.html"&gt;AWS Lambda event sources&lt;/a&gt;, Vercel has restricted its usage to the HTTP Request/Response use case (most probably with requests coming from the API Gateway). This is precisely the scenario that makes more sense for Web applications.&lt;/p&gt;

&lt;p&gt;This is interesting because, if we look at other Lambda-based solutions such as &lt;a href="https://www.netlify.com/products/functions/"&gt;Netlify Functions&lt;/a&gt; we can see how they do expose the exact same parameters as the Lambda handler-function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;   
  &lt;span class="p"&gt;};&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not sure why I have access to the &lt;code&gt;event&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; objects here. Does it mean that I can make my Netlify Function respond to another type of event that is not an HTTP Req/Res? Can I make my Netlify Function implementation respond to events from Amazon S3 even If I have no access to it? I am probably missing something, but I couldn't find an explanation for this design decision.&lt;/p&gt;

&lt;p&gt;All in all, it is understandable to look at this cloud computing solution with skeptical eyes. You may be asking &lt;em&gt;"OK, but if I use Vercel Serverless Functions I will lock in and lose control of the Lambda functions, their cyber-protection, etc"&lt;/em&gt;. Well yes, in the same way that if you use AWS Lambda you lose control of your Virtual Machines, their cyber-protection, etc. And you were happy with that.&lt;/p&gt;

&lt;p&gt;Evolve or die.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-what-are-vercels-integration-use-cases"&gt;
  &lt;/a&gt;
  2. What are Vercel's integration use cases?
&lt;/h2&gt;

&lt;p&gt;As you might have guessed already at this point, this post is not about Nex.js, and to be honest, I won't write much more about it.&lt;/p&gt;

&lt;p&gt;This post is about how companies like Vercel are changing the cloud computing game by creating niche abstractions for Web developers. And that's where it can unleash its full potential: Vercel is a great place to deploy any frontend application. It is a platform for static sites and frontend frameworks, built to integrate with your headless content, commerce, or database.&lt;/p&gt;

&lt;p&gt;So, let's look at its integration capabilities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#21-integrating-with-your-architecture-on-aws"&gt;
  &lt;/a&gt;
  2.1. Integrating with your architecture on AWS
&lt;/h3&gt;

&lt;p&gt;Suppose you are building a Web application with Next.js and deploying it with Vercel. You have some SPA pages and also one Serverless Function. Now, say you have other parts of your architecture running on AWS you want to integrate with. Concretely speaking, you love DynamoDB, and you want your Vercel Serverless Function to integrate directly with your DynamoDB tables on your AWS account using AWS SDK. Can you do that?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Short answer&lt;/strong&gt;: yes. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Long answer&lt;/strong&gt;: it's complicated (not complex). Your DynamoDB table is just one API call away, but you need to put in some authentication and authorization, which is not trivial. Although Vercel &lt;a href="https://vercel.com/support/articles/how-can-i-use-aws-sdk-environment-variables-on-vercel"&gt;provides documentation&lt;/a&gt; on how to integrate with AWS services directly, I don't think that's a solid solution. Basically, this approach is suggesting that you to set up your AWS user's secret access key as an &lt;a href="https://vercel.com/docs/concepts/projects/environment-variables"&gt;environment variable&lt;/a&gt;, so you can access them later from your function. Unfortunately, that's not a security best practice as many users express in &lt;a href="https://github.com/vercel/next.js/discussions/13920"&gt;this GitHub discussion&lt;/a&gt;. User secrets rotate, and I would never create a DynamoDB policy declaring an IAM &lt;strong&gt;user&lt;/strong&gt; as a principal. Instead, you use IAM &lt;strong&gt;roles&lt;/strong&gt; for that. However, you can't use the IAM Role assigned to Vercel's lambda function and declare it as the principal in your AWS DynamoDB policy ... because that role is managed by Vercel. &lt;/p&gt;

&lt;p&gt;What are the alternatives? Well, at the end of the day, my DynamoDB scenario above is nothing but an HTTP API call encapsulated by an SDK function. So basically, I would use Amazon Cognito and OAuth 2.0 credential flows to &lt;a href="https://aws.amazon.com/blogs/mobile/building-fine-grained-authorization-using-amazon-cognito-user-pools-groups/"&gt;control access to my DynamoDB tables&lt;/a&gt; from my Vercel Serverless Function based on the user’s group membership. I am pretty sure that this is similar to what other public DBaaS solution like &lt;a href="https://supabase.com/"&gt;Supabase&lt;/a&gt; do.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#22-vercel-integrations-marketplace"&gt;
  &lt;/a&gt;
  2.2. Vercel Integrations Marketplace
&lt;/h3&gt;

&lt;p&gt;Vercel features an &lt;strong&gt;Integrations&lt;/strong&gt; panel where you can select multiple &lt;em&gt;aaS&lt;/em&gt; vendors from a marketplace to integrate with your Web application (and serverless functions). What's a Vercel Integration? Well, I thought I was going to find something fancy and complex, but it seems that an &lt;em&gt;integration&lt;/em&gt; is just a shortcut for creating Vercel Environment Variables automatically, so they are ready to use in your code:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cl_XsiGv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t2mm7kp8mhi3ypsjpz5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cl_XsiGv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t2mm7kp8mhi3ypsjpz5.png" alt="Vercel Integrations" width="792" height="329"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hey, don't get me wrong. There is NOTHING wrong with that. Again, I may be missing something, and there may be more things and nuances behind Vercel Integrations, but I am not experienced enough to catch them all.&lt;/p&gt;

&lt;p&gt;And here is where I have mixed feelings. Although apparently, you could create &lt;strong&gt;any backend&lt;/strong&gt; with Vercel Serverless Functions, as far as I am concerned that's unrealistic. And if you think twice, I don't even think it's in Vercel's interest to become such an overarching framework encompassing multiple architecture layers. They are focusing on Web development, so the features and abstractions they give you to create backends are bounded within the context of Web applications. In other words, it may be that Vercel Serverless Functions provide their best value when they are used as &lt;strong&gt;Backends for the Frontend (BFF)&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-how-can-vercel-evolve"&gt;
  &lt;/a&gt;
  3. How can Vercel evolve?
&lt;/h2&gt;

&lt;p&gt;As I wrote in my &lt;a href="https://dev.to/peibolsang/the-future-of-cloud-computing-is-developer-experience-g0p"&gt;previous post about the future of cloud computing&lt;/a&gt;, solutions like Vercel are already playing in the services economy and offering their features as utilities you can pay per use.&lt;/p&gt;

&lt;p&gt;Although, as a company, they are a very well-valuated startup in the hypergrowth phase, they still need an enterprise-grade customer base to grow organically. They have everything to succeed, and that's why they must pay attention to inertia so they don't die of success.&lt;/p&gt;

&lt;p&gt;What's inertia like for Vercel? As I wrote earlier, I don't think Vercel is interested in becoming the next Heroku by providing overarching capabilities covering the entire development spectrum. In my opinion, they are doing pretty well focusing on their mission to enable a faster Web and optimizing the SDLC for Web developers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#31-frictionless-deploypreviewship-workflow"&gt;
  &lt;/a&gt;
  3.1. Frictionless Deploy-Preview-Ship workflow
&lt;/h3&gt;

&lt;p&gt;There is nothing more motivating for a developer than an efficient SDLC. That efficiency can be achieved through automation and, do you know what the highest expression of automation is? You guessed it, &lt;strong&gt;the answer is managed services&lt;/strong&gt;. Imagine for a moment that you could have infinite resources to improve your CI/CD pipelines and SDLC so you can move from idea to live product almost in zero seconds at zero cost. It does make sense then to put the time you saved from not building those computing features yourself into something of greater value, such as improving your application's user experience. That is what managed services like Vercel do for you.&lt;/p&gt;

&lt;p&gt;Let me raise another point. Once our Web applications are running on production and users find a malfunction, why do we fix those bugs at all? In the physical world, you would throw that product away and produce a new one through your super-optimized production chain. Why don't we do that with software? Why don't we throw the application away and start from scratch?&lt;/p&gt;

&lt;p&gt;Well, I am playing devil's advocate here. The reason is that building software is not like building physical stuff, and the hard part is in the design, modeling, and problem-solving logic. But, what if we could optimize software's SDLC and make it almost negligible in the overall sum of efforts? What if Vercel DPS workflow becomes totally frictionless and tends to &lt;em&gt;0 seconds&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;I am ranting here, but that is precisely &lt;a href="https://darklang.com/"&gt;Darklang's&lt;/a&gt; mission. I wouldn't go as far as Darklang with Vercel, and I am especially skeptical about the idea of creating its own kind-of-visual programming language. Still, I like the idea of &lt;strong&gt;instant&lt;/strong&gt; deployments as you code, transparently. I mean, with an optimized DPS workflow like Vercel's, &lt;strong&gt;why do we need to &lt;a href="https://vercel.com/live"&gt;build on localhost&lt;/a&gt; anyway&lt;/strong&gt;? I guess we are not just prepared for that. To me, one of the main problems of Darklang is that it is too forward-thinking, too advanced for our time, and it does not resolve any of the problems developers have nowadays. In other words, it didn't consider our &lt;em&gt;zeitgeist&lt;/em&gt;. It is not meeting their customers (developers) where they are.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zdUZZdEi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6edjve1ln9vogzqq1tpv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zdUZZdEi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6edjve1ln9vogzqq1tpv.jpeg" alt="Darklang" width="880" height="680"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Darklang&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Finally, and always, in my opinion, Vercel should keep focusing on the following areas of action:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Industrialize cross-cutting capabilities that every Web application needs or uses.&lt;/li&gt;
&lt;li&gt;Rationalize access to the ever-evolving serverless primitives from &lt;em&gt;traditional&lt;/em&gt; cloud providers.&lt;/li&gt;
&lt;li&gt;Create higher-order cloud computing abstractions and other frameworks oriented to their niche users, Web developers.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Of course, if you have reached this far and you want to know more, I wrote about this stuff in my book &lt;a href="https://leanpub.com/software-platforms"&gt;Building Software Platforms&lt;/a&gt;. Go and check it out! The first chapter is free.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;PS: As I wrote this post, Vercel announced another promising capability called &lt;a href="https://demo.vercel.pub/platforms-starter-kit"&gt;Platforms Starter Kit&lt;/a&gt;. While I only had the time to make a diagonal read, I could notice how this new solution ticks many of the boxes I have described in this article, especially the latest 3 points about industrializing, rationalizing, and curating Web developer experiences.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>aws</category>
    </item>
    <item>
      <title>10 best free paraphrasing tools for content creators in 2022</title>
      <author>Rex Anthony</author>
      <pubDate>Sun, 23 Jan 2022 12:51:49 +0000</pubDate>
      <link>https://dev.to/rexthony/10-best-free-paraphrasing-tools-for-content-creators-in-2022-5eoj</link>
      <guid>https://dev.to/rexthony/10-best-free-paraphrasing-tools-for-content-creators-in-2022-5eoj</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JBSz0dUE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sharetxt.live/uploads/images/typing-on-a-laptop" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JBSz0dUE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sharetxt.live/uploads/images/typing-on-a-laptop" alt="Typing on a laptop" width="800" height="478"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Are you looking for the best free paraphrasing tools in 2022? We have got you covered. &lt;/p&gt;

&lt;p&gt;A paraphrasing tool, often known as a content spinner, article rewriter, or sentence re-writer, has only one goal: to paraphrase your text to the required level of uniqueness while keeping the original meaning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-purpose-of-a-paraphrasing-tool"&gt;
  &lt;/a&gt;
  What is the purpose of a paraphrasing tool?
&lt;/h2&gt;

&lt;p&gt;A paraphrasing tool is an online application or downloaded software that rewrites text, emotions, or ideas using alternative words or changing the structure of the sentence to make it distinctive and clear while maintaining the sense of the original content.&lt;/p&gt;

&lt;p&gt;If you're not a native English speaker, the paraphrasing program might help you explain yourself more effectively and improve your writing skills. Many premium and free online paraphrase tools are available. In this post, we will be looking at the best free paraphrasing tools online in 2022.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-to-consider-before-selecting-a-paraphrasing-tool"&gt;
  &lt;/a&gt;
  Things to consider before selecting a paraphrasing tool
&lt;/h2&gt;

&lt;p&gt;The choice of the best paraphrase tool is entirely up to the person doing the editing. The task's requirements are a crucial component in determining the optimal tool to utilize for a specific task. &lt;/p&gt;

&lt;p&gt;Various tools are appropriate for various tasks, such as editing blogs, rephrasing sentences, or regenerating an entire thesis. The way the instrument works, whether it's simple to use or not, and whether the result is satisfactory or not are all things to consider.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-of-the-10-best-paraphrasing-tools"&gt;
  &lt;/a&gt;
  List of the 10 best paraphrasing tools
&lt;/h2&gt;

&lt;p&gt;&lt;b&gt;&lt;br&gt;
The 10 best paraphrasing tools of 2022 are&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;QuillBot&lt;/li&gt;
&lt;li&gt;Spinbot&lt;/li&gt;
&lt;li&gt;Paraphraser.io&lt;/li&gt;
&lt;li&gt;Rewriter tools&lt;/li&gt;
&lt;li&gt;Paraphrasing Tool&lt;/li&gt;
&lt;li&gt;Article Rewriter tool&lt;/li&gt;
&lt;li&gt;SpinnerChief&lt;/li&gt;
&lt;li&gt;PlagiarismDetector.net&lt;/li&gt;
&lt;li&gt;My Assignment Help&lt;/li&gt;
&lt;li&gt;PrePost SEO
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-quillbot"&gt;
  &lt;/a&gt;
  &lt;a href="https://quillbot.com/"&gt;1. QuillBot&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;QuillBot’s paraphrasing tool can rewrite a sentence, paragraph, or article using state-of-the-art AI. QuillBot can instantly improve your writing, cut unnecessary words, and help you deliver a clear message. &lt;/p&gt;

&lt;p&gt;Quillbot is by far the best paraphrasing tool or article rewrite in this list. It uses AI for paraphrasing and produces great results.&lt;/p&gt;

&lt;p&gt;The con of the application at present is that it currently supports 125 words in the free plan. You can upgrade to premium to paraphrase more words.&lt;/p&gt;

&lt;p&gt;The tool has a built-in full-sentence thesaurus that helps users to write better, faster, and clearer. It offers a very distinctive feature with 7 different AI-writing modes.&lt;/p&gt;

&lt;p&gt;Some features of Quillbot include&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;QuillBot can be integrated with your Google Docs and MS Word so that you can paraphrase your text inside your doc.&lt;/li&gt;
&lt;li&gt;This software has on offer a Word Flipper feature that helps you to control the number of words replaced in the paraphrased content.&lt;/li&gt;
&lt;li&gt;There is the Freeze Words option through which you can prevent words or phrases from being replaced. Here you can enter all the words and QuillBot will not touch those words while paraphrasing.&lt;/li&gt;
&lt;li&gt;It can rephrase large text, complex phrases, and unordered lists easily and efficiently.&lt;/li&gt;
&lt;li&gt;This tool has an AI-powered thesaurus that helps you to choose the right synonyms in your writing.&lt;/li&gt;
&lt;li&gt;In addition to the paraphrasing tool, QuillBot also provides you summarizer and Grammar checker tools at one purchase. However, currently, QuillBot’s Grammar checker is only available in the beta version as they recently introduced this feature in their software.&lt;/li&gt;
&lt;li&gt;It is an AI-based rephrasing tool that offers seven quill-modes such as Standard, Fluency, Creative, Creative+, Formal, Shorten, and Expand modes to paraphrase the content.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-spinbot"&gt;
  &lt;/a&gt;
  &lt;a href="https://spinbot.com/"&gt;2. Spinbot&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Spinbot is a free, automatic article spinner that will rewrite human-readable text into additional, intelligent, readable text. Similarly, if you need a paraphrasing tool, Spinbot will get the job done for you for that purpose as well.&lt;/p&gt;

&lt;p&gt;Having a continuous flow of the fresh, human-readable text is the best way for your website or blog to gain search engine exposure. Content is King, as they say! It is extremely important for search engine optimization.&lt;/p&gt;

&lt;p&gt;It allows you to rewrite up to 10,000 characters on the free plan. You don’t need to sign up for a Spinbot account to use it. Spinbot does have a premium plan, which allows you to rewrite articles without any ads on the page and without needing to fill out the Captcha.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-paraphraserio"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.paraphraser.io/"&gt;3. Paraphraser.io&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The online paraphrase tool is free to use and it has numerous features including, rewriting essays, removing plagiarism, and rewording articles. &lt;/p&gt;

&lt;p&gt;Paraphraser.io allows you to rephrase up to 1,000 words without creating an account. You don’t need to sign up for a Paraphraser.io account to use it.&lt;/p&gt;

&lt;p&gt;It has support for 13 language localization consisting of English, Espanol, Norwegian, Dutch, French, Germany, Portugues, Turkish, Indonesian, Russian, Japanese, Chinese, and Vietnamese.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-rewriter-toolshttpsrewritertoolscomparaphrasing"&gt;
  &lt;/a&gt;
  [4. Rewriter tools](&lt;a href="https://rewritertools.com/paraphrasing-"&gt;https://rewritertools.com/paraphrasing-&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Rewriter tools consist of a suite of free tools consisting of 5 tools consisting of article rewriter, paraphrasing tool, article spinner, and grammar checker tool.&lt;/p&gt;

&lt;p&gt;The paraphrasing tool uses algorithms to generate synonyms of the words that you have used using its rich inbuilt vocabulary. The paraphrase generator first checks the context of the given material before approaching the paraphrasing process.&lt;/p&gt;

&lt;p&gt;Unfortunately, replacing synonyms does not always provide the best result.&lt;/p&gt;

&lt;p&gt;Rewriter Tools can be slow at times. If you don’t like the results in one tool, like the Article Spinner, try out the Paraphrasing Tool or the Article Rewriter. They perform similar functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-paraphrasing-tool"&gt;
  &lt;/a&gt;
  &lt;a href="https://paraphrasing-tool.com/"&gt;5. Paraphrasing Tool&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Sometimes discovering new ways of stating the same message intelligently can be very difficult. If you are one of the many people who struggle with brainstorming new ways to express an idea that has already been stated, then Paraphrasing-Tool will be a great fit for you.&lt;/p&gt;

&lt;p&gt;The paraphrasing tool was surprisingly good. It allows you to rephrase up to 10,000 words without creating an account. You don’t need to sign up for an account to use the tool.&lt;/p&gt;

&lt;p&gt;It has a captcha that slows you down but is useful to prevent spam. It is affiliated with spinbot and uses the same paraphrasing API. The Paraphrasing Tool allows you to check a box if you want to rephrase capitalized words as well. By default, the tool assumes that capitalized words are specific nouns that you need to keep the same in your text, such as the names of places or people.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-article-rewriter-tool"&gt;
  &lt;/a&gt;
  &lt;a href="https://articlerewritertool.com/"&gt;6. Article Rewriter tool&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you already have a lot of blog content, you can turn this content into additional, unique blog posts in seconds using the Article Rewriter Tool. You can use this free service to turn any number of blog posts into twice the amount of valuable, readable content for the same or different blogs.&lt;/p&gt;

&lt;p&gt;It is free to use, there is no character limit and it does not require you to create an account to use it.&lt;/p&gt;

&lt;p&gt;When spinning an article, you can also check a box if you want the article to paraphrase and spin capitalized words as well.&lt;/p&gt;

&lt;p&gt;Article Rewriter Tool allows you to exclude specific words from being rephrased.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-spinnerchief"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.spinnerchief.com/"&gt;7. SpinnerChief&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Spinner Chief can not only generate hundreds of new articles in minutes for you but also in one click, it can rewrite articles to a very high level of human readability and uniqueness because it uses natural language analysis and artificial intelligence techniques to understand your articles.&lt;/p&gt;

&lt;p&gt;It allows you to rewrite up to 10,000 characters. You don’t need to sign up for an account to use it. It also has an option to toggle the level of paraphrasing intensity. &lt;/p&gt;

&lt;p&gt;In addition to the online web application, SpinnerChief also has a downloadable desktop version if you prefer to work offline on your computer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-plagiarismdetectornet"&gt;
  &lt;/a&gt;
  &lt;a href="https://plagiarismdetector.net/paraphrasing-tool"&gt;8. PlagiarismDetector.net&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Plagiarism Detector tool is a free-to-use online application that enables you to paraphrase your text. It does not make use of AI but uses algorithms to discover and replace synonyms in your text.&lt;/p&gt;

&lt;p&gt;It allows you to spin up to 2,000 words. You don’t need to sign up for an account to use it. &lt;/p&gt;

&lt;p&gt;From my experience from using the application, it appears to be slow and takes a couple of seconds to perform paraphrasing tasks.&lt;/p&gt;

&lt;p&gt;The key features of the application according to information obtained from the website are the following&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hand-Picked Synonyms in Database&lt;/li&gt;
&lt;li&gt;Unlimited Content producing opportunity&lt;/li&gt;
&lt;li&gt;Auto-spinning of content&lt;/li&gt;
&lt;li&gt;Human-friendly Readable Text&lt;/li&gt;
&lt;li&gt;SEO Friendly Content&lt;/li&gt;
&lt;li&gt;Creative Outcome of Submitted Content&lt;/li&gt;
&lt;li&gt;Responsive Layout for all the digital devices&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#9-my-assignment-help"&gt;
  &lt;/a&gt;
  &lt;a href="https://myassignmenthelp.com/paraphrasing-tool.php"&gt;9. My Assignment Help&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;According to the website, My Assignment Help Paraphrasing tool helps you to get a rewritten text for any document, having the same meaning and essence.&lt;/p&gt;

&lt;p&gt;The website has a collection of tools to help you with your homework, essay, and research. It consists of an essay typer, a plagiarism checker, and a paraphrasing tool. In this review, we will be taking a look at the paraphrasing tool provided by My Assignment Help.&lt;/p&gt;

&lt;p&gt;To make use of the application, you simply type or paste your text content into the input field. You also have the option to upload your text. The application has support for uploading word documents, PowerPoint presentation documents (PPT), PDFs, and TXT file formats.&lt;/p&gt;

&lt;p&gt;You also have the option to upload files from your google drive or dropbox account directly from within the application. &lt;/p&gt;

&lt;p&gt;Unlike other paraphrasing tools, the application does not appear to have a character or word limit. You can paraphrase as much content as you want for free.&lt;/p&gt;

&lt;p&gt;It works very fast and it is by far the best non-AI paraphrasing tool on this list. The paraphrasing works very well because it analyses the semantics of the word and uses clever algorithms to spin the article. &lt;/p&gt;

&lt;p&gt;The site is light on ads, it does not require a captcha and by far it gives the best result compared to other alternatives.&lt;/p&gt;

&lt;p&gt;A con of the application for most people might be its support for only the English language. It lacks support for other languages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-prepost-seo"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.prepostseo.com/paraphrasing-tool"&gt;10. PrePost SEO&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;PrePost SEO is an online paraphrasing tool that you can use for free with no character or word limit. &lt;/p&gt;

&lt;p&gt;It works like other paraphrasing tools. To use the application, simply copy and paste your text into the input field. You can upload your text from a file. &lt;/p&gt;

&lt;p&gt;According to the site, the paraphrasing tool it provides, helps you to rewrite articles and essays online. It also enables you to prevent plagiarism by rephrasing sentences.&lt;/p&gt;

&lt;p&gt;The tool consists of three modes, a simple and an advanced mode. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The simple mode&lt;/strong&gt; replaces synonyms from the text. You can paraphrase unlimited words in this version. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The advanced mode&lt;/strong&gt; works like a word changer. If you are not satisfied with the automatic substitution of synonyms, you can add your own words. It does not have a word limit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The AI mode&lt;/strong&gt; offers a state-of-the-art paraphrasing tool. Not only does it change words, but it also rewrites sentences to break down complex sentences. It has 3 sub-modes&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Fluency&lt;/strong&gt;: fixes grammar errors. (supports 5000 characters)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Standard&lt;/strong&gt;: rewrites sentence structure and makes the text easy to read. (supports 5000 characters)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Creative&lt;/strong&gt;: paraphrase content completely, leaving very little risk of plagiarism. (supports 5000 characters)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;According to the website, PrePost SEO is safe for SEO. It would also take care of SEO content without affecting the structure of keywords. You can also check keyword density up to one, two, or three keywords on the Prepostseo website.&lt;/p&gt;

&lt;p&gt;After using the application for a while, I can say that the paraphrasing does not work as well as advertised. You will have to play around a lot with the modes to pick the right mode that is good for your content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;Paraphrasing tools help you to create unique articles by spinning articles. There are many advantages to having an excellent paraphrasing tool at your disposal especially if you are a writer.&lt;/p&gt;

&lt;p&gt;Paraphrasing tools help you to avoid plagiarism because the content that is created is unique. It simplifies content, making it sound more natural, and enables you to save time, money and allocate your time more productively. It is an excellent tool in any content creator's toolkit.&lt;/p&gt;

&lt;p&gt;If you like cool applications like these, you might be interested in checking out more free tools for content creators such as  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A content auditor&lt;/li&gt;
&lt;li&gt;A text sharing application to enable you to quickly share text between your devices&lt;/li&gt;
&lt;li&gt;A tool to help you discover what people are searching online&lt;/li&gt;
&lt;li&gt;An AI writing assistant&lt;/li&gt;
&lt;li&gt;Speech to text&lt;/li&gt;
&lt;li&gt;Text to speech&lt;/li&gt;
&lt;li&gt;A countdown timer&lt;/li&gt;
&lt;li&gt;An online stopwatch application&lt;/li&gt;
&lt;li&gt;and a lot more, &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://sharetxt.live"&gt;ShareTXT&lt;/a&gt; is a collection of tools that have been created to boost your productivity as a content creator and the great thing about it is that it is free to use. It is a site worth bookmarking. &lt;a href="//https//sharetxt.live"&gt;Click this link to get access to a collection of free tools for content creators&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tooling</category>
      <category>productivity</category>
      <category>writing</category>
      <category>ai</category>
    </item>
    <item>
      <title>Data Structures vs. Algorithms? </title>
      <author>Ahmed Wafik</author>
      <pubDate>Sun, 23 Jan 2022 12:35:59 +0000</pubDate>
      <link>https://dev.to/ahmed_wafik_06f743afef285/data-structures-vs-algorithms-4ic8</link>
      <guid>https://dev.to/ahmed_wafik_06f743afef285/data-structures-vs-algorithms-4ic8</guid>
      <description>&lt;p&gt;If you are a &lt;strong&gt;fresh&lt;/strong&gt; or &lt;strong&gt;junior&lt;/strong&gt; Software engineer, you probably heard a lot about data structures and algorithms. Everyone tells you about their importance or how valuable to learn them. You hear about them together, and sometimes you ask yourself, are they one thing, or do they most come together? So what is data structures and algorithms, or what are data structures vs. algorithms?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NGe3HdEB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9xezghzd9l6e3qcit0c.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NGe3HdEB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9xezghzd9l6e3qcit0c.jpeg" alt="Think with me" width="625" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#if-you-search-on-wikipedia-about-data-structures-you-will-find"&gt;
  &lt;/a&gt;
  If you search on Wikipedia about data structures, you will find:
&lt;/h2&gt;

&lt;p&gt;Data structure is a data organization, management, and storage format that enables efficient access and modification. More precisely, a data structure is a collection of data values, their relationships, and the functions or operations that can be applied to the data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#if-you-search-on-wikipedia-about-algorithms-you-will-find"&gt;
  &lt;/a&gt;
  If you search on Wikipedia about Algorithms, you will find:
&lt;/h2&gt;

&lt;p&gt;In mathematics and computer science, an algorithm is a finite sequence of well-defined instructions, typically used to solve a class of specific problems or to perform a computation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So that is what the book says about data structures and algorithms, but why do you hear about both of them as a package? What value do you have from learning them?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Good learning of data structures and algorithms will help you solve more problems easier. In a world driven by big data and microservices technology, a good understanding of this science is the base you can build on it to develop high-quality software.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nAuk2nW1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awv0c5rote4tp4xxsyhf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nAuk2nW1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awv0c5rote4tp4xxsyhf.jpg" alt="Coding" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To understand more, let me tell you a story. This story is about John. He is a chef in one of the elite restaurants. He is famous for his low-time cocking and high-quality food. We interviewed him to know what is his secrets. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: Hello John, can you tell us what is your secrets?&lt;br&gt;
&lt;strong&gt;A&lt;/strong&gt;: hahaha, I don’t have any secrets, I studied data structures and algorithms science in high school, and they were one of my favorite subjects, so when I started working as a chef, I used them in my daily work that my (secret).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: No, explain to me How?&lt;br&gt;
&lt;strong&gt;A&lt;/strong&gt;: data structures and algorithms science is not only applied in computer science. It is a way of thinking and mindset that can help you solve any problems, like divide and conquer algorithms. People use it in real-life problems, so machines use it in software issues. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: ok, let me understand more from you. How do Algorithms help you in cocking?&lt;br&gt;
&lt;strong&gt;A&lt;/strong&gt;: ok, for me, Algorithm is the set of steps I take to optimize the process of cocking so for example, I can go to the fridge to get one ingredient at a time, which is terrible and waste more time, or I can go one time or two and bring bulk ingredients at a time and save more time. Decisions like this are my Algorithm to cock faster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: ok, that’s clever of you, but what about data structures?&lt;br&gt;
&lt;strong&gt;A&lt;/strong&gt;: the ingredient for my meal is like the data for the computer process, so I need to store my ingredients in a structure that makes things easier when cocking, like a computer program stores the data in a particular data structure.&lt;br&gt;
So, for example, I can store onions in a net because their shape is circular to retrieve them faster. That can also be applied for tomato, but it has a different body for cucumber, so I can store it on a flat surface without being worried about it rolling off. That is exactly what you do when you write a program. You choose the data structures that suit your data type, and your problem type is an insertion problem or retrieving problem, for example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: thank you for your time, John.&lt;br&gt;
&lt;strong&gt;A&lt;/strong&gt;: That was my pleasure. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Data Structure and algorithms are science that you can apply with any programming language in any software field and even in real-life problems.&lt;br&gt;
A good understanding of this science will help you boost your code quality and build more efficient applications that can handle more load with good performance.&lt;br&gt;
Thanks for reading ❤️❤️&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Feel free to reach out on&lt;/em&gt;&lt;/strong&gt; &lt;a href="https://www.linkedin.com/in/ahmedwafik/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/data-structures/#:~:text=A%20data%20structure%20is%20a,using%20the%20array%20data%20structure."&gt;Data Structures&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/fundamentals-of-algorithms/"&gt;Algorithms&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Engineering leadership; the series</title>
      <author>Jelle Smeets</author>
      <pubDate>Sun, 23 Jan 2022 12:27:12 +0000</pubDate>
      <link>https://dev.to/smeetsmeister/engineering-leadership-the-series-2993</link>
      <guid>https://dev.to/smeetsmeister/engineering-leadership-the-series-2993</guid>
      <description>&lt;p&gt;Welcome to the brand new series on the blog; Engineering leadership. In this series, we will take a look at topics that can help you with your work in an Engineering leadership position.&lt;/p&gt;

&lt;p&gt;The topics in this series will vary in different aspects of running an engineering team or department. I expect to write about building the best teams, how to manage stakeholders, how to achieve technical excellence, how to be a good leader, and many more!&lt;/p&gt;

&lt;p&gt;To not make this series a dry bin of theoretical texts, I came up with the following format for the blog posts. Each blog post will start with a theoretical/technical explanation of the topic. In addition, I will write on how you can use this in practice. From my personal experience or from others. As a result, you can put into practice what you learned right away!&lt;/p&gt;

&lt;p&gt;If you are excited as me for the next post in this series, sign up for the &lt;a href="https://blog.jellesmeets.nl/newsletter-signup/"&gt;newsletter&lt;/a&gt;! In that case, you will not miss the new posts. If you are unable to wait for the next post, you can take a look at the &lt;a href="https://blog.jellesmeets.nl/lists/4-lessons-i-learned-as-a-starting-scrum-master/"&gt;4 lessons I learned as a starting scrum master&lt;/a&gt; blog post.&lt;/p&gt;

&lt;p&gt;I am open to suggestions on topics to add to this series. Are there any topics you would like to see in this series? Let me know in the comments or &lt;a href="https://blog.jellesmeets.nl/contact/"&gt;contact&lt;/a&gt; me!&lt;/p&gt;

</description>
      <category>leadership</category>
      <category>career</category>
      <category>devjournal</category>
      <category>learning</category>
    </item>
    <item>
      <title>Detect crashes in your Kubernetes cluster using kwatch and PagerDuty</title>
      <author>Amgad Ashraf</author>
      <pubDate>Sun, 23 Jan 2022 12:02:17 +0000</pubDate>
      <link>https://dev.to/amgadramses/detect-crashes-in-your-kubernetes-cluster-using-kwatch-and-pagerduty-6p8</link>
      <guid>https://dev.to/amgadramses/detect-crashes-in-your-kubernetes-cluster-using-kwatch-and-pagerduty-6p8</guid>
      <description>&lt;p&gt;In this article you will learn how to setup and deploy &lt;a href="https://github.com/abahmed/kwatch"&gt;kwatch&lt;/a&gt; in your Kubernetes (K8s) cluster to monitor and receive real time crash alerts through PagerDuty&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-pagerduty"&gt;
  &lt;/a&gt;
  Configure PagerDuty
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#step-1-create-a-new-service"&gt;
  &lt;/a&gt;
  Step 1: Create a new service
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yw6Cjzbu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymk6uhptod91yjawtaz9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yw6Cjzbu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymk6uhptod91yjawtaz9.png" alt="1" width="880" height="125"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2-give-your-service-a-name-and-a-description"&gt;
  &lt;/a&gt;
  Step 2: Give your service a Name and a Description
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D0seyivN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70lmahvi4stprcxmysua.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D0seyivN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70lmahvi4stprcxmysua.png" alt="2" width="880" height="656"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-3-add-an-escalation-policy"&gt;
  &lt;/a&gt;
  Step 3: Add an &lt;a href="https://support.pagerduty.com/docs/escalation-policies"&gt;Escalation Policy&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ahRR6X7R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2x99eydson9bb793xf7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ahRR6X7R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2x99eydson9bb793xf7.png" alt="3" width="880" height="596"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-4-make-sure-to-add-the-events-api-v2-integration"&gt;
  &lt;/a&gt;
  Step 4: Make sure to add the &lt;a href="https://developer.pagerduty.com/api-reference/b3A6Mjc0ODI2Nw-send-an-event-to-pager-duty"&gt;Events API V2&lt;/a&gt; Integration
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s2LP1bR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58gchbqxbjh0wr2961o7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s2LP1bR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58gchbqxbjh0wr2961o7.png" alt="4" width="880" height="551"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-5-navigate-to-your-service-and-copy-the-integration-key"&gt;
  &lt;/a&gt;
  Step 5: Navigate to your service and copy the Integration Key
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Na2lug2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ev8u5szwr80d4qbhyd25.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Na2lug2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ev8u5szwr80d4qbhyd25.png" alt="5" width="880" height="650"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-kwatch"&gt;
  &lt;/a&gt;
  Configure kwatch
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#step-1-get-the-configuration-template"&gt;
  &lt;/a&gt;
  Step 1: Get the configuration template
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl  &lt;span class="nt"&gt;-L&lt;/span&gt; https://raw.githubusercontent.com/abahmed/kwatch/v0.3.0/deploy/config.yaml &lt;span class="nt"&gt;-o&lt;/span&gt; config.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#step-2-edit-raw-configyaml-endraw-file-and-add-the-integration-key"&gt;
  &lt;/a&gt;
  Step 2: Edit &lt;code&gt;config.yaml&lt;/code&gt; file and add the Integration Key
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Namespace&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;kwatch&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ConfigMap&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;kwatch&lt;/span&gt;
  &lt;span class="na"&gt;namespace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;kwatch&lt;/span&gt;
&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;config.yaml&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
    &lt;span class="s"&gt;alert:&lt;/span&gt;
      &lt;span class="s"&gt;pagerduty:&lt;/span&gt;
        &lt;span class="s"&gt;integrationKey: &amp;lt;integration_key&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#step-3-apply-the-configuration"&gt;
  &lt;/a&gt;
  Step 3: Apply the configuration
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; config.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#deploy-kwatch"&gt;
  &lt;/a&gt;
  Deploy kwatch
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; https://raw.githubusercontent.com/abahmed/kwatch/v0.3.0/deploy/deploy.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;You will now start receiving PagerDuty alerts whenever there is a pod crash in your Kubernetes (K8s) cluster!&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--baHAaw65--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fec0qertafgoazh76n2b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--baHAaw65--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fec0qertafgoazh76n2b.png" alt="6" width="880" height="567"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can find more documentation about kwatch &lt;a href="https://kwatch.dev/docs"&gt;Here&lt;/a&gt;.&lt;br&gt;
If you like kwatch, give it a star on &lt;a href="https://github.com/abahmed/kwatch"&gt;GitHub&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We are happy to hear feedback from you and if you have any request, or suggestion don’t hesitate to ping us on our channels (&lt;a href="https://discord.com/invite/kzJszdKmJ7"&gt;Discord&lt;/a&gt;, &lt;a href="https://github.com/abahmed/kwatch"&gt;GitHub&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>monitoring</category>
      <category>pagerduty</category>
    </item>
    <item>
      <title>E2E testing: challenges &amp; lessons learned</title>
      <author>Swimm 🤿</author>
      <pubDate>Sun, 23 Jan 2022 11:42:53 +0000</pubDate>
      <link>https://dev.to/swimm_io/e2e-testing-challenges-lessons-learned-35ca</link>
      <guid>https://dev.to/swimm_io/e2e-testing-challenges-lessons-learned-35ca</guid>
      <description>&lt;p&gt;End-to-end testing. The holy grail of all testing types. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y2akbzh3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cxieqmmhs3nnuooppoxo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y2akbzh3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cxieqmmhs3nnuooppoxo.gif" alt="Holy Grail gif" width="240" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's everything we learned regarding the ins and outs of end-to-end testing - lessons, takeaways, mistakes, you name it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-lets-start-out-with-why"&gt;
  &lt;/a&gt;
  So, let's start out with why
&lt;/h2&gt;

&lt;p&gt;Swimm started growing, we added new features, and we found that we simply couldn't keep up with changes. &lt;/p&gt;

&lt;p&gt;We realized that our goal for a testing solution had two parts: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Find a solution that allowed us to catch regressions bugs DURING development&lt;/li&gt;
&lt;li&gt;Save manual regression QA time &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;E2E testing seemed to be the right answer to our testing paradigm. &lt;/p&gt;

&lt;p&gt;We ended up choosing Cypress&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Awesome community &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Great documentation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Great features: automatic waiting, automatic sreenshots &amp;amp; videos, time travel&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cypress is intuitive &amp;amp; easy to set up &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Writing tests is fun  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using Cypress' API applies for user behavior  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Lack of multi-tab support&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Difficulty with iFrames&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Limited browser support (just Chrome-based browsers &amp;amp; firefox) &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#challenges-of-e2e-testing"&gt;
  &lt;/a&gt;
  Challenges of E2E testing
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Wins:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Identified &amp;amp; fixed a lot of bugs &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Saved so much time by not having to repeat manual flows weekly&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dramatically increased stability &amp;amp; coverage &lt;br&gt;
&lt;strong&gt;Challenges&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Human vs machine testing &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We had zero experience with e2e tests&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Monitoring tests that are less reliable &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It takes more time than you think &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#key-takeaways"&gt;
  &lt;/a&gt;
  Key takeaways
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Appoint an owner for E2E testing&lt;/li&gt;
&lt;li&gt;Patience, patience, patience&lt;/li&gt;
&lt;li&gt;Write stable tests &lt;/li&gt;
&lt;li&gt;Trust. Your. Tests. &lt;/li&gt;
&lt;li&gt;Stable tests = stable product&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://swimm.io/blog/end-to-end-testing-challenges-and-lessons-learned/"&gt;Here's a detailed blog on how we implemented E2E testing. &lt;/a&gt;&lt;/p&gt;

</description>
      <category>testing</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Why you need to play with Arduino Uno.</title>
      <author>Cody..!</author>
      <pubDate>Sun, 23 Jan 2022 11:40:43 +0000</pubDate>
      <link>https://dev.to/codedpirater/why-you-need-to-play-with-arduino-uno-odo</link>
      <guid>https://dev.to/codedpirater/why-you-need-to-play-with-arduino-uno-odo</guid>
      <description>&lt;p&gt;&lt;strong&gt;What is this stuff called Arduino ?&lt;/strong&gt; &lt;br&gt;
If you are a programmer and a you are thinking of it, well then it's something you can play with around. Though Arduino is an eloctronic device used in most of the IOT projects but being a programmer you will not just always code and do the stuffs like that whole day... You need something you can play and have fun with ! This is one of the best thing you can play with..&lt;br&gt;
Not only if you are a programmer but anyone can have fun playing it one of the best cool thing to go around...!&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;What is Arduino ?🤔&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Well this the longest answer I can give you !&lt;/p&gt;

&lt;p&gt;-&amp;gt;Arduino is an open-source electronics platform based on easy-to-use hardware and software. &lt;a href="https://www.arduino.cc/en/Main/Products"&gt;Arduino boards&lt;/a&gt; are able to read inputs light on a sensor, a finger on a button, or a Twitter message and turn it into an output activating a motor, turning on an LED, publishing something online. You can tell your board what to do by sending a set of instructions to the microcontroller on the board. To do so you use the &lt;a href="https://www.arduino.cc/reference/en/"&gt;Arduino programming language&lt;/a&gt; (based on Wiring), and the Arduino Software &lt;a href="https://www.arduino.cc/en/Main/Software"&gt;(IDE)&lt;/a&gt;, based on &lt;a href="https://processing.org/"&gt;Processing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Over the years Arduino has been the brain of thousands of projects, from everyday objects to complex scientific instruments. A worldwide community of makers - students, hobbyists, artists, programmers, and professionals - has gathered around this open-source platform, their contributions have added up to an incredible amount of accessible knowledge that can be of great help to novices and experts alike.&lt;/p&gt;

&lt;p&gt;Arduino was born at the Ivrea Interaction Design Institute as an easy tool for fast prototyping, aimed at students without a background in electronics and programming. As soon as it reached a wider community, the Arduino board started changing to adapt to new needs and challenges, differentiating its offer from simple 8-bit boards to products for IoT applications, wearable, 3D printing, and embedded environments.&lt;/p&gt;




&lt;p&gt;Now one more question arrives in your mind &lt;strong&gt;Why should I play with Arduino ? What's the reason I need to play with this stuff "I'm happy with it I don't need it&amp;gt;!"&lt;/strong&gt; But Let me tell you, You can even have a lot of fun with it in your free time and this one the coolest thing I like to do whenever I'm free. It's your choice you want to play with this stuff or not. But at the end of the day it's cool. &lt;/p&gt;

&lt;p&gt;At the End of the Day last question rises that is...&lt;br&gt;
&lt;strong&gt;How do I use Arduino?&lt;/strong&gt;&lt;br&gt;
Short answer read the arduino uno &lt;a href="https://www.arduino.cc/en/Guide/HomePage"&gt;getting started guide&lt;/a&gt;. If you are looking for inspiration you can find a great variety of Tutorials on &lt;a href="https://create.arduino.cc/projecthub?_gl=1*qh9vtk*_ga*MTE5MTY3MjYwOC4xNjQxODk5ODc4*_ga_NEXN8H46L5*MTY0MjkzNTYxNS41LjEuMTY0MjkzNjA3OS4w"&gt;Arduino Project Hub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for reading..&lt;/p&gt;




&lt;p&gt;*&lt;em&gt;||Peace'✌&lt;br&gt;
&lt;a class="mentioned-user" href="https://dev.to/codedpirater"&gt;@codedpirater&lt;/a&gt; *&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>arduino</category>
      <category>techtalks</category>
      <category>programming</category>
    </item>
    <item>
      <title>(web-app)Open-Source URL-Shortener built using Python.</title>
      <author>Aswin</author>
      <pubDate>Sun, 23 Jan 2022 11:20:29 +0000</pubDate>
      <link>https://dev.to/iamaswin/web-appopen-source-url-shortner-built-using-python-36e4</link>
      <guid>https://dev.to/iamaswin/web-appopen-source-url-shortner-built-using-python-36e4</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-it-started"&gt;
  &lt;/a&gt;
  🧨How it started.
&lt;/h2&gt;



&lt;p&gt;Hey there🤚.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Long story short&lt;/strong&gt; , I recently joined here and I came over a post by &lt;a class="mentioned-user" href="https://dev.to/liyasthomas"&gt;@liyasthomas&lt;/a&gt; where he created a URL-SHORTNER which is open-source. As a person learning web development I was fascinated by it. But the thing that I noticed while going through the GitHub repo was that he have clearly mentioned not to put any sensitive links as all the links are publicly visible. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2CHCbrTY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkv2gmceg2bfxavyj6lb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2CHCbrTY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkv2gmceg2bfxavyj6lb.png" alt="Image description" width="880" height="69"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;So I decided to make my own version of it but with some personal touches. &lt;/p&gt;

&lt;p&gt;With my previous experiences in &lt;strong&gt;Python&lt;/strong&gt; I already knew to write a script which can shorten a URL using some Python modules. So I sat down to make it into a web-app using Flask. Hence Small-Heart💖 was born.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1pLwo_Yy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r91k1s97jfr2x55y6g61.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1pLwo_Yy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r91k1s97jfr2x55y6g61.png" alt="Image description" width="880" height="553"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  🎀Demo
&lt;/h2&gt;



&lt;p&gt;Check out a live demo of it here 👇.&lt;br&gt;
&lt;a href="https://small-heart-demo.herokuapp.com"&gt;Small-Heart💖&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#note-the-site-is-hosted-using-herokus-free-version-so-increased-traffic-can-make-the-site-lag-a-bit"&gt;
  &lt;/a&gt;
  Note -- The site is hosted using Heroku's free version so increased traffic can make the site lag a bit.
&lt;/h3&gt;



&lt;h2&gt;
  &lt;a href="#features-"&gt;
  &lt;/a&gt;
  ✨Features :
&lt;/h2&gt;



&lt;ul&gt;
&lt;li&gt;🔭 Yes it is Open-Source. You can check it out here on &lt;a href="https://github.com/aswinofficial/Small-heart"&gt;GitHub&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;📺 Simple UI(not the best😅).&lt;/li&gt;
&lt;li&gt;🤖 No account creation or login required.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#cons-"&gt;
  &lt;/a&gt;
  ⭕Cons :
&lt;/h2&gt;



&lt;ul&gt;
&lt;li&gt;🤍 Currently in its 1st version(as of 1/23/2022).&lt;/li&gt;
&lt;li&gt;🔆 Not a fully responsive web-design.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#behind-the-scenes"&gt;
  &lt;/a&gt;
  🖤Behind the scenes
&lt;/h2&gt;

&lt;p&gt;Small-Heart is created using Flask as mentioned already.&lt;br&gt;
A python module named &lt;a href="https://pypi.org/project/pyshorteners/"&gt;pyshorteners&lt;/a&gt; is used to shorten the URL.&lt;/p&gt;

&lt;p&gt;Last but not least a bit of JavaScript is used in the web page to make it much more user friendly(at least to an extent).&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#i-clearly-want-to-mention-that-the-inspiration-of-this-project-entirely-came-from-liyasthomas-i-surely-recommend-everyone-to-check-out-his-post-as-well"&gt;
  &lt;/a&gt;
  I clearly want to mention that the inspiration of this project entirely came from &lt;a class="mentioned-user" href="https://dev.to/liyasthomas"&gt;@liyasthomas&lt;/a&gt; 🎉. I surely recommend everyone to check out his post as well.
&lt;/h3&gt;




&lt;p&gt;With that said I would love💘 to know all of your suggestions and opinions on this. If you are interested in making any changes or improvements to it , feel free to check out the GitHub repo -- &lt;a href="https://github.com/aswinofficial/Small-heart"&gt;Small-Heart&lt;/a&gt;.Simply star it if you like the idea, it will encourage me to do a lot more of projects. And always &lt;strong&gt;Stay Safe and Keep Coding🎊&lt;/strong&gt;.&lt;/p&gt;

</description>
      <category>python</category>
      <category>javascript</category>
      <category>ux</category>
      <category>webdev</category>
    </item>
    <item>
      <title>useReducer Hook+ Context API = A Powerful React Tool</title>
      <author>Abhishek Singh</author>
      <pubDate>Sun, 23 Jan 2022 10:30:51 +0000</pubDate>
      <link>https://dev.to/asingh04/usereducer-hook-context-api-a-powerful-react-tool-32ef</link>
      <guid>https://dev.to/asingh04/usereducer-hook-context-api-a-powerful-react-tool-32ef</guid>
      <description>&lt;p&gt;We are immensely familiar with hooks like &lt;code&gt;useState&lt;/code&gt;, &lt;code&gt;useEffect&lt;/code&gt; and &lt;code&gt;useRef&lt;/code&gt; a lot which allows us to use class-based components features now in functional components. But React hooks have one more weapon in its arsenal which can be an effective tool to optimise a react application: the &lt;strong&gt;&lt;code&gt;useReducer&lt;/code&gt;&lt;/strong&gt; hook.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usereducer-a-redux-wannabe"&gt;
  &lt;/a&gt;
  useReducer - a redux wannabe
&lt;/h2&gt;

&lt;p&gt;The best description and example of the &lt;code&gt;useReducer&lt;/code&gt; hook can be found in the &lt;a href="https://reactjs.org/docs/hooks-reference.html#usereducer"&gt;Official React docs&lt;/a&gt;. But if I have to explain it in a concise manner: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;useReducer allows your react component to have a redux-like state&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You just need to provide a reducer function and an initial state value. Your component will get a &lt;code&gt;state&lt;/code&gt; and a &lt;code&gt;dispatch&lt;/code&gt; function which can be used to update that &lt;code&gt;state&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;It seems similar to &lt;code&gt;useState&lt;/code&gt;, and React specifies some deciding factor that can indicate when &lt;code&gt;useReducer&lt;/code&gt; will be better alternative:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Your component state is complex that involves multiple sub-values, and/or&lt;/li&gt;
&lt;li&gt;The next state value depends upon the current state value.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So a best example of &lt;code&gt;useReducer&lt;/code&gt; can be like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialTodos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sample Done task #1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sample todo task #2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;new_todo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;edit_todo_task&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todoIdx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;todoIdx&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;todoIdx&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todoIdx&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toggle_todo_state&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todoIdx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;todoIdx&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;todoIdx&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="na"&gt;done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;todoIdx&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todoIdx&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;TodoApp&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useReducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialTodos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleStatusChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todoId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toggle_todo_state&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;todoId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleTaskUpdate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todoId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newTaskText&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;edit_todo_task&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;todoId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newTaskText&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createNewTodo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newTodoTask&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;new_todo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newTodoTask&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TodoList&lt;/span&gt;
            &lt;span class="na"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="na"&gt;onTodoCreate&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;createNewTodo&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="na"&gt;onStatusChange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleStatusChange&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="na"&gt;onTaskEdit&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleTaskUpdate&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#a-common-and-irritating-use-case-in-react-application"&gt;
  &lt;/a&gt;
  A common and irritating use case in React Application
&lt;/h2&gt;

&lt;p&gt;When using a complex component state like &lt;code&gt;useReducer&lt;/code&gt;, we are likely to run into a scenario where we have to pass down the state updating function or a callback function (wrapping the state updating function) to the children components. If you have a large application, then it may happen that you have to pass those callback functions through intermediate children components until it reaches the actual descendant component which uses them. This can become unmanageable &amp;amp; suboptimal. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The Solution?
&lt;/h2&gt;

&lt;p&gt;Combine the &lt;code&gt;useReducer&lt;/code&gt; state &amp;amp; dispatch with the Context API.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The Context API&lt;/strong&gt;&lt;br&gt;
Context API have been a key feature of React. If you feel you need to be familiar with it, you can go through the &lt;a href="https://reactjs.org/docs/context.html"&gt;docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Both the state and the dispatch function produced by the &lt;code&gt;useReducer&lt;/code&gt; can be fed to separate Context Providers in a parent component. Then any child component, no matter how deep, under the parent, can access them as needed with the use of &lt;code&gt;useContext&lt;/code&gt; or Context Consumer.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TodosDispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Todos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;TodoApp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useReducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialTodos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TodosDispatch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TodoList&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Todos.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/TodosDispatch.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;



&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;TodoList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Todos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TodoItem&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;isDone&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;)
&lt;/span&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ul&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;AddTodoButton&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;TodosDispatch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;new_todo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This combination helps to avoid passing down states or update functions through intermediate components.&lt;/p&gt;

&lt;p&gt;Only the components who actually needs the state or the dispatch function can get what they need. &lt;/p&gt;

&lt;p&gt;The intermediate components get to handle lesser props as well and can better handle faster component re-rendering decision when memoized.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  Benefits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;This &lt;code&gt;useReducer&lt;/code&gt; and &lt;code&gt;useContext&lt;/code&gt; combination actually simulates Redux's state management, and is definitely a better light weight alternative to the PubSub library.&lt;/li&gt;
&lt;li&gt;If your application is already using an application state, and you require another application state(for whole or part of the application), the combination can be used as a 2nd application state &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#caveat"&gt;
  &lt;/a&gt;
  Caveat
&lt;/h2&gt;

&lt;p&gt;This is not a perfect Redux alternative.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redux allows use of custom middlewares for better state management, but this feature is lacking in React's &lt;code&gt;useRecuder&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Async tasks can not be used with &lt;code&gt;useReducer&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Just like in Redux, there will be huge boilerplate code in the reducer function, and there are no APIs like Redux Tookkit to use for avoiding this.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Backend: Layered Architecture</title>
      <author>Blind Kai</author>
      <pubDate>Sun, 23 Jan 2022 10:04:45 +0000</pubDate>
      <link>https://dev.to/blindkai/backend-layered-architecture-514h</link>
      <guid>https://dev.to/blindkai/backend-layered-architecture-514h</guid>
      <description>&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;Choosing the correct architecture for your backend application is an important decision because you will get the most of it in a long shot. This article is written to give Backend Developers an understanding of how to structure the code in order to make it properly incapsulated correspondingly to its purpose. Properly structured code that follows the same rules for each inner domain is easier to be read and maintain for you and other developers that would work with it. Better code you write at the start - less pain you get later when requirements will change.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#considering-layered-architecture"&gt;
  &lt;/a&gt;
  Considering Layered Architecture
&lt;/h2&gt;

&lt;p&gt;When developers work in the backend, they've mostly worked with data and business logic around that data. No matter if you're dealing with API or if it's CLI - you need to structure your code properly.&lt;/p&gt;

&lt;p&gt;Layered Architecture is a great example of lightweight architecture which is not overwhelmed with redundant abstractions, contracts or boilerplate code.&lt;/p&gt;

&lt;p&gt;In order to implement this architecture correctly, you just need to place your code in a place according to its properties and purpose.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#general-schema"&gt;
  &lt;/a&gt;
  General schema
&lt;/h2&gt;

&lt;p&gt;For example, we need to design REST API architecture. If you're interested in reading more about REST API design, please check &lt;a href="https://dev.to/blindkai/rest-api-design-27j9"&gt;this link&lt;/a&gt;.&lt;br&gt;
The general schema of layers is shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s----7SGCAg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wuk9zhfszle8qa4jfzof.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s----7SGCAg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wuk9zhfszle8qa4jfzof.jpg" alt="General schema for layered architecture" width="484" height="164"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, we have three layers, let's discuss them in detail:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Controller layer&lt;/strong&gt;: Controllers themselves should only be responsible for work delegation. They should not contain any logic or direct data manipulation. The main purpose of a controller is to get the request, then pass it to the service that will process it and then return the response that is given from the service. See controllers like a manager for requests.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Service layer&lt;/strong&gt;: Generally services contain information that is related to their domain. For example, if we have "Mail Service" we expect that sending/receiving emails happens there like in a real life. The same is fair for the codebase. Services (and their methods) handle the business logic which means that they are responsible for transforming data, performing additional actions &lt;em&gt;(like asking the repository for additional data or another service for processing some logic for it)&lt;/em&gt;. So if we need to send a mail, the service is responsible for getting the data as parameters, formatting them into the mail itself and sending it thru an external service or saving it thru the repository if it's an internal functionality.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Repository layer&lt;/strong&gt;: If there is code that somehow works with the database here is the place for this code to live. No matter if we're fetching the data from the DB or saving/modifying objects, it's the place where SQL queries or ORM operations should be placed.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#detailed-schema"&gt;
  &lt;/a&gt;
  Detailed schema
&lt;/h2&gt;

&lt;p&gt;Let's discuss a few workflows to have a better understanding of how things could work if we're building the REST API for some "Shop orders" domains.&lt;br&gt;
Below you can see a few cases for writing domain code that follows the architecture:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CDARQ4Hj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/of739v9cu7namgc9m2am.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CDARQ4Hj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/of739v9cu7namgc9m2am.jpg" alt="Image description" width="484" height="504"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scenario-a-user-creates-order"&gt;
  &lt;/a&gt;
  Scenario A: User creates order
&lt;/h3&gt;

&lt;p&gt;For example, we have a user that wants to create a new order. The request comes into the controller, the request is validated so we ensure that we're working with valid parameters.&lt;br&gt;
Let's assume that the user also had discounts so we need to apply them in order to get the final price. For example, we have the service &lt;code&gt;UserOrderService&lt;/code&gt; which has the method &lt;code&gt;createOrder(user, order)&lt;/code&gt;. Within this method, we calculate the discount that is available for the user &lt;em&gt;(for example the user has a premium account or have a corporative discount so prices are lower)&lt;/em&gt;. The calculations are the business logic so they live inside a service method &lt;code&gt;calculateFinalPrice(order, discounts)&lt;/code&gt;. After we are done with the logic, we could use &lt;code&gt;UserOrderRepository&lt;/code&gt; with a method &lt;code&gt;createOrder(order)&lt;/code&gt; which contains all fields like orderId, userId, creation date etc. Inside this method, we simply write our "INSERT" statement.&lt;/p&gt;

&lt;p&gt;So we have a controller that passes the data into a service that process it and then the data is saved using the repository.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scenario-b-confirm-order-choose-to-ship-and-pay-for-the-order"&gt;
  &lt;/a&gt;
  Scenario B: Confirm order, choose to ship and pay for the order
&lt;/h3&gt;

&lt;p&gt;As you already see, here we have several things to work with. We have an order that should be confirmed, shipping options to be configured and money-related operations to be done.&lt;br&gt;
So in practice, we get the request in our controller and pass it to the &lt;code&gt;UserOrderService&lt;/code&gt; which handle logic that checks if the order can be confirmed with those parameters. After that, we're triggering services that have logic to work with external &lt;code&gt;ShippingService&lt;/code&gt; and &lt;code&gt;PaymentService&lt;/code&gt;. Those may contain some additional logic or utility methods that belong to them so we will need to implement some additional features for it. Finally, those services might trigger our repositories because we need to save that we need to pass the order to a shipping company and we know that the order is paid already.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scenario-c-user-creates-a-comment-below-the-bought-product"&gt;
  &lt;/a&gt;
  Scenario C: User creates a comment below the bought product
&lt;/h3&gt;

&lt;p&gt;The user got the order and want to give feedback &lt;em&gt;(or post the comment on the product page)&lt;/em&gt;. In this scenario, there is not much logic to work with the data &lt;em&gt;(if comment moderation is manual. If it's done by AI it could have some logic in &lt;code&gt;CommentService&lt;/code&gt; in method &lt;code&gt;checkComment(comment)&lt;/code&gt;)&lt;/em&gt;. If we have no logic there, we can simply pass the comment into &lt;code&gt;CommentRepository&lt;/code&gt; which has a method called &lt;code&gt;addComment(user, comment)&lt;/code&gt; and that's it. If no service is required you can simply trigger repository functionality from the controller.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Layered architecture is pretty simple and doesn't require developers to have big experience as well as it doesn't force developers to write too much boilerplate or deal with complicated abstractions and structures.&lt;br&gt;
If you need to design MVP or if your project is not that big (yet) consider using layered architecture as a base architecture.&lt;/p&gt;

</description>
      <category>backend</category>
      <category>architecture</category>
    </item>
  </channel>
</rss>
