<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to optimize MySQL to speed up your Laravel application with Releem?</title>
      <author>Bobby Iliev</author>
      <pubDate>Mon, 06 Sep 2021 15:45:14 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/how-to-optimize-mysql-to-speed-up-your-laravel-application-with-releem-208e</link>
      <guid>https://dev.to/bobbyiliev/how-to-optimize-mysql-to-speed-up-your-laravel-application-with-releem-208e</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Optimizing your MySQL service is a great way to improve your Laravel application's overall performance. &lt;/p&gt;

&lt;p&gt;Of course, it is important to follow Laravel Eloquent's best performance practices as described in &lt;a href="https://twitter.com/reinink"&gt;Jonathan Reinink&lt;/a&gt;'s course on &lt;a href="https://eloquent-course.reinink.ca"&gt;Laravel Eloquent performance patterns&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But you should also not forget the server-side of things too. There are numerous MySQL server settings that you could change and tweak which could be crucial to both your performance and stability. &lt;/p&gt;

&lt;p&gt;In the past, you had to have a solid understanding and experience with MySQL performance tunning before you could jump into the MySQL config file and start changing things. It was a nightmare to make a mistake and completely crash a production database server.&lt;/p&gt;

&lt;p&gt;Luckily thanks to &lt;a href="https://twitter.com/agabekovroman"&gt;Roman Agabekov&lt;/a&gt; we now have Releem! &lt;/p&gt;

&lt;p&gt;Releem is the most effective way to improve MySQL performance and keep its configuration well-tuned using AI and best practices.&lt;/p&gt;

&lt;p&gt;Releem is perfect for both people with less experience in server management and database performance tuning as well as experienced DBAs.&lt;/p&gt;

&lt;p&gt;In this tutorial, you will learn how to use Releem to optimize your MySQL service and drastically boost the performance and reliability of your Laravel website!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;In order for you to be able to follow along, you need to have the following things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A Laravel project up and running. If you don't have one yet or if you just want to follow along, you can follow the steps on &lt;a href="https://devdojo.com/bobbyiliev/how-to-install-laravel-on-digitalocean-with-1-click"&gt;How to Install Laravel with 1-Click here&lt;/a&gt;!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You would also need to have a Releem account. You can get a free trial via this link here: &lt;a href="https://releem.com/#rec221377760"&gt;Releem free trial&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#releem-introduction"&gt;
  &lt;/a&gt;
  Releem introduction
&lt;/h1&gt;

&lt;p&gt;There are 4 main things that I would like to point out on how Releem works:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;First we have the Releem Agent that automatically collects MySQL metrics, system information and transfers them to the Releem Cloud Platform&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We have the Releem Cloud Platform analyzes that collected metrics, calculates MySQL Performance Score, and automatically detects performance issues&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After that we have the Releem Cloud Platform makes recommendations, where we see the new recommended MySQL server configuration to improve performance&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally we have the Releem Agent that applies the recommended configurations for us. You can apply the new configuration file manually or automatically&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That way we can leave the whole process to Releem and focus on building our application and not worry about our MySQL performance degradation and optimization.&lt;/p&gt;

&lt;p&gt;To learn more about Releem, make sure to check out this 1-minute video demo on how Releem's MySQL Performance Tuning as a Service works:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/7gixIYTpuPU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#installing-releem"&gt;
  &lt;/a&gt;
  Installing Releem
&lt;/h1&gt;

&lt;p&gt;Once you have your Releem account ready, follow these steps on how to install Releem on your server. Once installed, the Releem Agent will start to automatically collect metrics and recommend configuration.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-the-releem-agent"&gt;
  &lt;/a&gt;
  Installing the Releem agent
&lt;/h3&gt;

&lt;p&gt;To install the agent run the following one-step install command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;RELEEM_API_KEY=YOUR_KEY_HERE bash -c "$(curl -L https://releem.s3.amazonaws.com/install.sh)" 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Make sure to change the &lt;code&gt;YOUR_KEY_HERE&lt;/code&gt; part with your actual Releem key!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#configuring-the-releem-mysql-access"&gt;
  &lt;/a&gt;
  Configuring the Releem MySQL access
&lt;/h3&gt;

&lt;p&gt;After that, in order for the agent to be able to connect to your MySQL service, create &lt;code&gt;~/.my.cnf&lt;/code&gt; file with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[client] 
user=root
password=your_mysql_root_password_here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Make sure to change the &lt;code&gt;your_mysql_root_password_here&lt;/code&gt; part with your actual MySQL root password&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For more information on how the above works, you could take a look at this tutorial here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-securely-login-to-mysql-without-providing-password-each-time"&gt;How to securely login to MySQL without providing password each time?&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-the-releem-agent-manually"&gt;
  &lt;/a&gt;
  Running the Releem Agent manually
&lt;/h3&gt;

&lt;p&gt;In order to send your very first metrics from your server to the Releem Cloud Platform, run the Releem Agent manually once:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/bin/bash /opt/releem/mysqlconfigurer.sh -k YOUR_RELEEM_KEY_HERE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Don't forget to change the &lt;code&gt;YOUR_RELEEM_KEY_HERE&lt;/code&gt; part with your actual Releem Key.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After this first execution, you will be able to see your current MySQL Performance Score for this specific server on the Metrics page of your Releem account.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuring-the-releem-agent-cron-job"&gt;
  &lt;/a&gt;
  Configuring the Releem Agent cron job
&lt;/h3&gt;

&lt;p&gt;In order to get better recommendations, don't forget to add the Releem Agent in your crontab.&lt;/p&gt;

&lt;p&gt;First, open your crontab with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;crontab -e
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then add the following line at the bottom:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;10 */12 * * * PATH=/bin:/usb/bin:/usr/sbin /bin/bash /opt/releem/mysqlconfigurer.sh -k YOUR_RELEEM_KEY_HERE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By having this cron job in place, your Releem Agent will periodically collect new metrics and recommend performance-optimized configuration tailored for your server and website.&lt;/p&gt;

&lt;p&gt;Releem Agent will automatically collect metrics and recommend configuration.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#applying-the-recommended-mysql-configuration"&gt;
  &lt;/a&gt;
  Applying the recommended MySQL configuration
&lt;/h1&gt;

&lt;p&gt;Once installed and configured, the Releem Agent will automatically store the recommended MySQL configuration at the following file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/tmp/.mysqlconfigurer/z_aiops_mysql.cnf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to apply those recommended configuration settings, you can follow the steps here.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Copy Recommended Configuration to MySQL configuration folder:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cp /tmp/.mysqlconfigurer/z_aiops_mysql.cnf /etc/mysql/conf.d/ 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;For CentOS servers instead of &lt;code&gt;/etc/mysql/conf.d&lt;/code&gt; you should use &lt;code&gt;/etc/my.cnf.d&lt;/code&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After that, don't forget to restart the MySQL service in order to apply the new optimized configuration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl start mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that, your MySQL service would use the MySQL configuration for optimal performance and reliability.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#mysql-performance-benchmark"&gt;
  &lt;/a&gt;
  MySQL Performance Benchmark
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#here-are-some-benchmarking-results-based-on-the-configuration-changes-suggested-by-releem"&gt;
  &lt;/a&gt;
  Here are some benchmarking results based on the configuration changes suggested by Releem:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#read-operations-graph"&gt;
  &lt;/a&gt;
  Read operations graph
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AXgTfsiz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/udVGZ6d.png" alt="Read operations count for three MySQL configurations depending on threads count."&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#write-operations-graph"&gt;
  &lt;/a&gt;
  Write operations graph
&lt;/h3&gt;

&lt;p&gt;![Write operation count for three MySQL configurations depending on threads count.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#httpsimgurcomq3rw4xypng"&gt;
  &lt;/a&gt;
  ](&lt;a href="https://imgur.com/Q3rW4XY.png"&gt;https://imgur.com/Q3rW4XY.png&lt;/a&gt;)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#reads-and-writes-counts"&gt;
  &lt;/a&gt;
  Reads and writes counts
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ikTGlVLo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/0eHqSUN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ikTGlVLo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/0eHqSUN.png" alt="Reads and writes counts for three MySQL configurations with two threads"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Optimizing your MySQL service on the server level using Releem is an excellent and quick way to boost the performance of your Laravel application without having to make any significant changes.&lt;/p&gt;

&lt;p&gt;If you like Releem make sure to check it out here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://releem.com"&gt;https://releem.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first 5 people to message me on Twitter would get a Releem free license:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com"&gt;@bobbyiliev_&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope that this helps and if you have any questions make sure to put them in the comments below.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>mysql</category>
      <category>linux</category>
      <category>devops</category>
    </item>
    <item>
      <title>Should you listen to music while you code?</title>
      <author>Saji Wang</author>
      <pubDate>Mon, 06 Sep 2021 14:54:25 +0000</pubDate>
      <link>https://dev.to/codesphere/should-you-listen-to-music-while-you-code-gkj</link>
      <guid>https://dev.to/codesphere/should-you-listen-to-music-while-you-code-gkj</guid>
      <description>&lt;p&gt;Written by Dan Parry. &lt;/p&gt;

&lt;p&gt;Listening to music while coding is a topic I often find myself talking to other developers about and everyone seems to have a different opinion or preference. Some don't like to listen to anything, needing silence to really focus. Others are into 'chill beats' to help them find their flow, and one maniac I know can code to black metal (he's from Finland).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jgd286MN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rymfwaxupit2lvdn9hb.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jgd286MN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rymfwaxupit2lvdn9hb.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;It's all subjective! What works for you might not work for another but the reasoning is always the same - it's about finding a state of focus, creating an environment that minimizes outside interference and allows you to fix the problem at hand.&lt;/p&gt;

&lt;p&gt;I am listening to music right now as I write this, just like I do when I write code. For me personally, and I believe many others like me, I find lyricless low-fi beats allow me to tune in and drop out the best. Songs with a lot of lyrics pull my concentration and distract me too easily. That's not to say my peers may not find Bohemian Rhapsody the way to go! What do you like?&lt;/p&gt;

&lt;p&gt;For me, music can shut out the outside world and allow me to get lost in what I am doing, so much so that by the time I look up the music might have stopped already and I hadn't even noticed. But maybe you don't listen to music at all…&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#if-silence-is-gold-why-cant-we-sell%C2%A0it"&gt;
  &lt;/a&gt;
  If silence is gold, why can't we sell it?
&lt;/h3&gt;

&lt;p&gt;There is a strong argument that listening to music can be detrimental to true focus, stating that in order to properly process information the brain needs to analyze and retain instructions.&lt;/p&gt;

&lt;p&gt;When listening to music, the added stress of processing audio data can cause the brain to misinterpret things or make mistakes. Which, I suppose, might explain any grammatical errors you find in my writing today.&lt;/p&gt;

&lt;p&gt;This stance does line up with the global library ethos of "shhh! you're in a library" - people are reading and therefore a noisy environment is not good for them, so shut up or get out. Noise can increase stress levels, adversely affect the prefrontal cortex, and thereby lower productivity!&lt;/p&gt;

&lt;p&gt;The counterpoint to this is of course that putting on headphones boils the myriad of sounds and distractions down to just you and the tune. Studies have shown that listening to music while performing repetitive tasks can increase productivity but again, it really depends on the individual.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yCw8dbHa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eq8823c6llw3ih3n9bjz.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yCw8dbHa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eq8823c6llw3ih3n9bjz.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#a-place-for-my%C2%A0head"&gt;
  &lt;/a&gt;
  A place for my head
&lt;/h3&gt;

&lt;p&gt;Music or audio input, in general, can prevent the mind from wandering off and create a space for the mind to reside in.&lt;/p&gt;

&lt;p&gt;I listen to music when I work for example, but I listen to audiobooks when I run - a practice I highly recommend to any runners reading this that haven't tried it. When I am in control of the task and I am required to exercise my mind, non-intrusive music provides me with a space to do that because it removes external distractions without introducing new ones.&lt;/p&gt;

&lt;p&gt;When I need to shut my brain out or otherwise distract it while I do something that it's not really needed for, an audiobook is a perfect babysitter for my short attention span. &lt;/p&gt;

&lt;p&gt;It's all about finding how to harness the potential of your mind. What environment provides the best conditions for you to focus yourself on the task you're completing. Deep focus itself is a fascinating topic and one we will discuss another time because it allows you and coders like you to fully explore an issue or topic at hand.&lt;/p&gt;

&lt;p&gt;You will be surprised at just how negative the effect of moving from one task to another can be if they require different emotional sensibilities to complete. Moving from writing code to writing emails requires an entirely different part of your brain to do and can result in you achieving neither as well as you are really able to.&lt;/p&gt;

&lt;p&gt;Developers that are able to truly focus on the same issue for a long time with no distraction, to deeply focus, are able to find a state of workflow that the rest of us would envy if we could only experience it. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sonic-youth"&gt;
  &lt;/a&gt;
  Sonic youth
&lt;/h3&gt;

&lt;p&gt;Gone are my teen years of MSN messenger and LimeWire when I would listen to obnoxiously loud music while surfing the internet and writing essays for school. It may be that the input of information we are exposed to has grown so much when we are online that the role of music has changed from a distraction to a blocker.&lt;/p&gt;

&lt;p&gt;It is true the genres of music I listen to while I work have changed dramatically in the intervening years. There is no accounting for taste but as I mentioned earlier I write now to non-intrusive instrumental music, but I wrote my dissertation to Metallica.&lt;/p&gt;

&lt;p&gt;There may be a case that my adolescent mind was better at multitasking, but I think the evidence is clear that complicated tasks require a clean backdrop for the mind to be set against, and music (or silence) can provide that. The overwhelming amount of "music to code to" videos on youtube in this style would support this theory.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3U9Gqnc3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48szvr0y7kg9dg2mlm7c.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3U9Gqnc3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48szvr0y7kg9dg2mlm7c.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That being said, I can still code, run, eat or sleep to Tool.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#ok-listen-to%C2%A0this"&gt;
  &lt;/a&gt;
  Ok, listen to this…
&lt;/h3&gt;

&lt;p&gt;I will leave you with a piece of information I have been thinking about ever since I came across it at university over a decade ago…&lt;/p&gt;

&lt;p&gt;A man was placed in an anechoic chamber, a specially constructed room that allows no sound in or out, he reported hearing a high pitched and a low pitch frequency. The low pitch frequency was the blood rushing through his veins and the high pitch frequency was his own nervous system.&lt;/p&gt;

&lt;p&gt;All living things will experience the same and seeing as no electronic device can record true silence without some level of electronic feedback. So it would seem to me that there is no such thing as silence anyway…so you might as well stick a tune on while you're coding.&lt;/p&gt;




&lt;p&gt;What's your favorite music to code to? Do you listen to music at all? Maybe you totally disagree with everything I've said, but that's ok, it's subjective. One man's music is another man's noise, so find your focus!&lt;/p&gt;

&lt;p&gt;Happy coding from your good friends at &lt;a href="https://link.codesphere.com/DC"&gt;Codesphere&lt;/a&gt;, the next-generation cloud provider.&lt;/p&gt;

</description>
      <category>music</category>
      <category>coding</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Understanding Java packages for the absolute beginner.</title>
      <author>Hopeuche360</author>
      <pubDate>Mon, 06 Sep 2021 14:36:47 +0000</pubDate>
      <link>https://dev.to/onychris/understanding-java-packages-for-the-absolute-beginner-5dik</link>
      <guid>https://dev.to/onychris/understanding-java-packages-for-the-absolute-beginner-5dik</guid>
      <description>&lt;p&gt;What are Java packages?&lt;br&gt;
We all began from somewhere in our journey to learning how to code and software development in general. One characteristic of seasoned developers is not that they can write codes or their thought processes, it is that their foundational knowledge is solid. They know this stuff. So, any beginner Java programmer aspiring to be great should get an excellent grasp of the basics, especially Java Packages.&lt;/p&gt;

&lt;p&gt;When you see the term “package,” don’t think of it as jargon to deceive you. Instead, think of folders and folder structures, because thats what a package is in the most basic form. Java packages are clusters of comparable varieties of categories, interfaces, and sub-packages. It is a mechanism for encapsulating teams of Java packages, classes, sub-packages, and interfaces.&lt;/p&gt;

&lt;p&gt;Types of Java packages&lt;br&gt;
There are essentially two types of Java packages, namely the User-defined packages and the built-in packages.&lt;/p&gt;

&lt;p&gt;Built-in package&lt;br&gt;
The built-in package consists of the many categories that constitute a part of the Java API. A number of the inherent packages are:&lt;/p&gt;

&lt;p&gt;java.lang: Contains language support categories (for example, categories that outline default knowledge varieties, like math).&lt;br&gt;
java.io: Contains categories to support input / output operations.&lt;br&gt;
java.util: Contains utility categories for implementing knowledge structures like a List of collections and dictionaries to support date/time work.&lt;br&gt;
java.applet: Contains categories for making applications programms.&lt;br&gt;
java.awt: Contains categories for implementing elements of graphical user interfaces (for example, buttons, menus, etc.).&lt;br&gt;
java.net: Contains categories that support network operations.&lt;/p&gt;

&lt;p&gt;User-defined packages&lt;br&gt;
As the name suggests, these packages are user-defined. We create a folder whose name should be the same as the name of the package. Next, we create a class inside the folder.&lt;/p&gt;

&lt;p&gt;Package names and directory structure are closely related. For example, if a package name is school.faculty.department, then there are three directories school, faculty, and department. The school package can be thought of as a tier one package, while faculty is a school sub-package and department is a sub-package of faculty.&lt;/p&gt;

&lt;p&gt;Why do we need packages in Java?&lt;br&gt;
Java packages make it easy to find or locate classes and interfaces.&lt;br&gt;
Java packages help to avoid name conflicts. For example, there could be two classes with the name Student in two packages, school.scienceDepartment.Student and school.educationDepartment.Student.&lt;br&gt;
Java packages perform data encapsulation (or data masking).&lt;br&gt;
Java packages provide controlled access. Access designations are protected and have packet-level access control by default. A member declared as guard is accessible by classes of the same package and its subclasses. A member without an access specifier is a default identifier that can only be accessed by classes in the same package.&lt;br&gt;
Java packages reuse classes contained in packages from other programs.&lt;br&gt;
Java packages provide a unique comparison of classes in other packages.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Writing "The Art Of Micro Frontends"</title>
      <author>Florian Rappl</author>
      <pubDate>Mon, 06 Sep 2021 14:07:12 +0000</pubDate>
      <link>https://dev.to/florianrappl/writing-the-art-of-micro-frontends-31ce</link>
      <guid>https://dev.to/florianrappl/writing-the-art-of-micro-frontends-31ce</guid>
      <description>&lt;p&gt;Two months ago my book "The Art of Micro Frontends" was published by Packt. Personally, I had a great time writing the book and working together with the amazing people at Packt, which is why I wanted to share the experience and give a little bit of advice from my point of view.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--N-NI8spT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1177096872579731458/IHg9ZP0M_normal.jpg" alt="Florian Rappl profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Florian Rappl
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/florianrappl"&gt;@florianrappl&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      So &lt;a href="https://twitter.com/hashtag/happy"&gt;#happy&lt;/a&gt; that my &lt;a href="https://twitter.com/hashtag/book"&gt;#book&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/art"&gt;#art&lt;/a&gt; of &lt;a href="https://twitter.com/hashtag/microfrontends"&gt;#microfrontends&lt;/a&gt; has finally been &lt;a href="https://twitter.com/hashtag/published"&gt;#published&lt;/a&gt;! &lt;a href="https://t.co/AtJfi2eYdh"&gt;packt.live/3wk2fkX&lt;/a&gt; Thanks to the whole team at &lt;a href="https://twitter.com/PacktPub"&gt;@PacktPub&lt;/a&gt; and everyone contributing!
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:00 PM - 07 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1412818701691224065" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1412818701691224065" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1412818701691224065" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;In short, this is how the book looks like on Amazon.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://packt.live/3wk2fkX"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G2XGcY5X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dby5axqtcwf11mqglngg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-idea"&gt;
  &lt;/a&gt;
  The Idea
&lt;/h2&gt;

&lt;p&gt;The idea of writing a book about micro frontends was born in mid 2019 when &lt;a href="https://github.com/smapiot/piral"&gt;Piral&lt;/a&gt; was born out of &lt;a href="https://smapiot.com/"&gt;smapiot&lt;/a&gt;'s open-source efforts. We've been leading and assisting to micro frontend implementations for a while, and our intention was to put together an (almost) ideal pattern into an open-source framework.&lt;/p&gt;

&lt;p&gt;Even though our framework is primarily targeted at client-side rendering our knowledge in the whole space is something that is worth talking about. Over the years, I was fortunate enough to give talks at numerous conferences and publish dozens of articles on the subject.&lt;/p&gt;

&lt;p&gt;One of the bigger conference where smapiot as a company was asked to present was &lt;a href="https://conferences.oreilly.com/software-architecture/sa-eu-2019.html"&gt;O'Reilly's Software Architecture conference in Berlin&lt;/a&gt;. Here, we got in touch with some of the people at O'Reilly - discussing various opportunities. Ultimately, it became clear that packaging my knowledge into a book may be a task worth doing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-a-publisher"&gt;
  &lt;/a&gt;
  Finding a Publisher
&lt;/h2&gt;

&lt;p&gt;First approached by O'Reilly, but that was no fit as the expectation already deviated from my vision. Also, I heard that Luca may already be in touch with them, so I was not positive that any proposal would make it through their processes. Why should they publish two books on the same subject?&lt;/p&gt;

&lt;p&gt;I was then approached by Manning, but since they already got a (great) book by Michael Geers they have only been interested in something like an online lecture (called "live project"). Here, their idea was to come up with some real life scenario that needs to be implemented by the student. I was actually already convinced that this may be a viable way forward, however, the response to the proposal was then frustrating. Keeping all their requirements in mind they then pretty much went into the opposite direction. For me this was a deal breaker as I value consistency and don't like my time being wasted.&lt;/p&gt;

&lt;p&gt;The third party to approach me was &lt;a href="https://www.packtpub.com/"&gt;Packt&lt;/a&gt;. Here, everything went right from the beginning. It was clear that they are highly interested in publishing a book and that they want it to be published by me - and the way I envision it. Once settled that we are on the same page they requested a detailed outline.&lt;/p&gt;

&lt;p&gt;My advice on this one is to go with a publisher who you believe understands you and the thing you want to write about. If you are not convinced of their intentions or plans for the book then don't do it. Most likely your book will not make you rich. That's fine. But you should be fine with the book and its contents. The book should provide you something you are happy to talk about, use as a reference, and show around. Don't necessarily go with the best offer regarding money. Go with the offer that reflects your idea the best.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-time"&gt;
  &lt;/a&gt;
  The Time
&lt;/h2&gt;

&lt;p&gt;I've started writing the book in November 2020 and finished around May 2021. All in all I'd not recommend spending less time on it. Especially if you want to fine tune some graphics you'll need more - not less - time for writing a book with 200+ pages (the book has even around 300 pages making it even more time consuming to write).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outlining-the-content"&gt;
  &lt;/a&gt;
  Outlining the Content
&lt;/h2&gt;

&lt;p&gt;One of the hardest parts about writing a book is finding the correct structure. In the end, this will determine quite a few things - and will actually make the book more accessible to some readers than to others. I did not want to do experiments here. So I've chosen a structure that starts with some general ideas and motivations, before it covers the available patterns in the most practical way. Finally, after the practical part ends I've chosen to include some case studies and high-level information which may be useful to successfully implement micro frontend projects at larger companies.&lt;/p&gt;

&lt;p&gt;What surprised my from the publisher was that the process of outlining the book was really detailed. It turns out that this is a lot of work. It was not only about finding the right structure, but also explaining it, writing what is actually covered in quite some detail and then even estimating the amount of pages. Especially the last part is tricky.&lt;/p&gt;

&lt;p&gt;How should I estimate the amount of pages if I don't know what examples I'll use or how much space they require? What format is used here? I had to make some assumptions here - like A4 with font size 12pt will be used here for these drafts. I also assumed that things like diagrams and code will take about 20% of the space meaning that every word-only estimate would need a fixed factor of 1.25 to be more realistic.&lt;/p&gt;

&lt;p&gt;My advice on this would be: Take your time here. This may be the most important work and it will happen before the actual work, which may be deceiving. Everything you do here will not only follow you for the rest of writing the book, but also for the book itself. There may be future editions of the book, but they will rarely (i.e., never) deviate from the plan you make here. Make it good. Think about it twice and then one more time.&lt;/p&gt;

&lt;p&gt;One of the things that bothered me in the whole context was that basic things like terminology have not been determined, yet I was already writing a lot of text assuming a standard vocabulary. One of the most basic things was how to refer to micro frontends.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#micro-frontends-and-alternatives"&gt;
  &lt;/a&gt;
  Micro Frontends and Alternatives
&lt;/h2&gt;

&lt;p&gt;If you start a Google search you'll see some variants on the matter: microfrontends, micro-frontends, and micro frontends. Personally, I am a strong believer in microfrontends. If you write "microservice" you also need to settle on "microfrontend". There is no other way. However, if you are a strong believer in the "first one to mention it wins" philosophy then potentially "micro frontend" is the one - this is the name that was chosen by &lt;a href="https://www.thoughtworks.com/de/radar/techniques/micro-frontends"&gt;ThoughtWorks&lt;/a&gt; when it appeared on their tech radar.&lt;/p&gt;

&lt;p&gt;Naturally, there was an initial discussion about what word to use here. While some favored micro-frontends or micro frontends (mostly due to SEO) I was quite convinced that consistency is key - therefore opting into microfrontends. This was then also the chosen name until... well pretty much the last draft. Then it was changed in a mutual agreement due to better alignment with the community (and better search results on Amazon). Today, I still stay strong on my desire regarding consistency here, but I also feel that "MF" is a good acronym. In the end, it does not matter much - as long as everyone knows what's behind that word.&lt;/p&gt;

&lt;p&gt;A much easier discussion was around the title.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#choosing-the-title"&gt;
  &lt;/a&gt;
  Choosing the Title
&lt;/h2&gt;

&lt;p&gt;The title of the book should somewhat not only reflect its contents, but also its ambition. It should draw the attention of potential readers. And it should be minimal and to the point. This is not an easy thing to achieve. It may actually be one of the hardest parts in writing. Together with some editors at Packt we brainstormed this a bit and came up with some suggestions. In the end, we settled for a quite conservative, yet bold statement: "The Art of Micro Frontends" essentially tries to be a complete reference for the subject, while staying practical and down to earth.&lt;/p&gt;

&lt;p&gt;My advice on this would be: go with a title you are comfortable with and that would make you happy to have on a book. That the title should (at least up to a certain degree) reflect the contents of the book should be self explanatory here. Don't lie, but still try to sell it (and make you happy).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Overall I had a great experience writing the book. The feedback and suggestions from the Packt team has been great. They are always very welcoming and try to make the best possible product here.&lt;/p&gt;

&lt;p&gt;The only regret that I have is that I did not insist on reviewing the last draft in more detail. I'd have wished to still get on or the other smaller fix or improvement in there, but luckily, these are only minor exceptions and overall I am pretty happy with the outcome.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>writing</category>
      <category>books</category>
      <category>architecture</category>
    </item>
    <item>
      <title>ES6 - A beginners guide - Rest and Spread Operator</title>
      <author>Stefan Wright</author>
      <pubDate>Mon, 06 Sep 2021 13:59:58 +0000</pubDate>
      <link>https://dev.to/stefanwrightcodes/es6-a-beginners-guide-rest-and-spread-operator-2he9</link>
      <guid>https://dev.to/stefanwrightcodes/es6-a-beginners-guide-rest-and-spread-operator-2he9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hey-welcome-back"&gt;
  &lt;/a&gt;
  Hey, Welcome back!
&lt;/h2&gt;

&lt;p&gt;In this article I am going to look into the Rest parameter and Spread operator introduced with ES6. The purpose of these two new entries into the JS specification is to help with condensing the volume of code we write and improve readability. &lt;code&gt;rest&lt;/code&gt; is used as a parameter in a function declaration to condense an indeterminate number of parameters into a single array, whereas &lt;code&gt;spread&lt;/code&gt; is used in the opposite sense in that we can split iterables (arrays/objects/strings) into individual arguments. Let's at these seperately with some code examples shall we?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rest"&gt;
  &lt;/a&gt;
  Rest
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-is-raw-rest-endraw-done-in-es5"&gt;
  &lt;/a&gt;
  How is &lt;code&gt;...rest&lt;/code&gt; done in ES5?
&lt;/h3&gt;

&lt;p&gt;Typical in ES5 we were quite restricted in the supply of parameters to a function, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// Returns 3 in a console.log&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we needed to handle an indeterminate amount of arguments we could reference the &lt;code&gt;arguments&lt;/code&gt; keyword:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;newFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Stefan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;is&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;coding&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// Returns {0: "Stefan", 1: "is", 2: "coding"}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is a problem with this approach, the return of the &lt;code&gt;arguments&lt;/code&gt; keyword is ann &lt;code&gt;array-like&lt;/code&gt; object. Unfortunately this means we cannot use array methods such as &lt;code&gt;.filter&lt;/code&gt;, or &lt;code&gt;.map&lt;/code&gt;. Also, if we were to try and combine the &lt;code&gt;arguments&lt;/code&gt; keyword and an ES6 arrow function it would not work because arrow functions do not contain their own &lt;code&gt;arguments&lt;/code&gt; binding, this leads to the introduction of the &lt;code&gt;...rest&lt;/code&gt; implementation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-how-to-use-raw-rest-endraw-in-es6"&gt;
  &lt;/a&gt;
  So... how to use &lt;code&gt;...rest&lt;/code&gt; in ES6
&lt;/h3&gt;

&lt;p&gt;As mention previously &lt;code&gt;...rest&lt;/code&gt; is used when we do not know the number of parameters that we want to handle in a function declaration. This can be used nicely for math type functions (when we utilise some of the Array helpers introduced with ES5, I am going to cover them later in the series), for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// Returns 10 in a console.log&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// Returns 55 in a console.log&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We might already have some parameters that will always be supplied that we want to reference by name if so we can still declare tham as parameters and use &lt;code&gt;...rest&lt;/code&gt; to automatically use the rest of the parameters. For example here is a very simple example where we still want to have &lt;code&gt;num1&lt;/code&gt; and &lt;code&gt;num2&lt;/code&gt; as named parameters and we'll use that for the starting value in our &lt;code&gt;.reduce&lt;/code&gt; helper, but also we can have reference to the rest of the parameters:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// Returns 10 in a console.log&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// Returns 55 in a console.log&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One thing to note though, &lt;code&gt;...rest&lt;/code&gt; parameters &lt;strong&gt;&lt;em&gt;must&lt;/em&gt;&lt;/strong&gt; appear at the end of the list of parameters. Attempting to place anything after the &lt;code&gt;...rest&lt;/code&gt; parameter will trigger an &lt;code&gt;Uncaught SyntaxError&lt;/code&gt; in your code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spread"&gt;
  &lt;/a&gt;
  Spread
&lt;/h2&gt;

&lt;p&gt;So, as I mentioned earlier &lt;code&gt;...spread&lt;/code&gt; is used to split iterables (arrays/objects/strings) into a list of agruments, it can also be used to combine multiple arrays into one single array. Let's take a look:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-es5-way"&gt;
  &lt;/a&gt;
  The ES5 way
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;// Concatenate an array&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arr3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Returns [1, 2, 3, 4, 5, 6] in a console.log&lt;/span&gt;

&lt;span class="c1"&gt;// Copying an array&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arr4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Returns [4, 5, 6] in a console.log&lt;/span&gt;
&lt;span class="c1"&gt;// Note: there is a risk when copying an array in this manner, see explanation after this code block&lt;/span&gt;

&lt;span class="c1"&gt;// Expanding an array&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arr5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;expanded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;arr5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expanded&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Returns [[1, 2, 3], 4, 5] in a console.log&lt;/span&gt;

&lt;span class="c1"&gt;// String to Array&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stefan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;split&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Returns ['s', 't', 'e', 'f', 'a', 'n'] in a console.log&lt;/span&gt;

&lt;span class="c1"&gt;// Math functions&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Returns NaN in a console.log&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the "copying" example I noted that that way of work is susceptible to error, the reason for this is that in ES5 when you "copy" an array you are actually copying the reference to it, so if you update your "new" variable, you will actually update both copies of the array. Let me show you an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Returns [1, 2, 3, 4] in a console.log&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Returns [1, 2, 3, 4] in a console.log&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#so-how-does-es6-raw-spread-endraw-help"&gt;
  &lt;/a&gt;
  So how does ES6 &lt;code&gt;...spread&lt;/code&gt; help?
&lt;/h2&gt;

&lt;p&gt;Using the &lt;code&gt;...spread&lt;/code&gt; operator in ES6 we can create a new list of arguments. This allows us to always treat the new var/let/const as a completely new item. Let's take a look at some of the above examples again in ES6 using &lt;code&gt;...spread&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Concatenate an array&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Returns [1, 2, 3, 4, 5, 6] in a console.log&lt;/span&gt;
&lt;span class="c1"&gt;// Note, the spread operator is ok in an example like this, but it is not recommended in potentially large application as it can cause excessive memory usage and risks of Stack Overflow errors. Using .concat is safer here&lt;/span&gt;

&lt;span class="c1"&gt;// Copying an array&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Returns [4, 5, 6] in a console.log&lt;/span&gt;

&lt;span class="c1"&gt;// Expanding an array&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;expanded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;arr5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expanded&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Returns [1, 2, 3, 4, 5] in a console.&lt;/span&gt;

&lt;span class="c1"&gt;// String to Array&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stefan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;split&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Returns ['s', 't', 'e', 'f', 'a', 'n'] in a console.log&lt;/span&gt;

&lt;span class="c1"&gt;// Math functions&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Returns 3 in a console.log&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice how the Math function now returns the value we expected?? Thats because instead of passing an array now (which ES5 would have done) we are passing &lt;code&gt;1, 2, 3&lt;/code&gt; so the function actually compiles like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;// ...arr1 outputs 1, 2, 3&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Open source is a valuable development resource. Give it your attention</title>
      <author>Andreas Sommarström</author>
      <pubDate>Mon, 06 Sep 2021 13:34:49 +0000</pubDate>
      <link>https://dev.to/sumstrm/open-source-is-a-valuable-development-resource-give-it-your-attention-4haf</link>
      <guid>https://dev.to/sumstrm/open-source-is-a-valuable-development-resource-give-it-your-attention-4haf</guid>
      <description>&lt;p&gt;&lt;em&gt;Open source software (OSS) gives access to a never-ending amount of external development resources. Developing any application, it is simply more efficient to reuse building blocks from others than having to write everything yourself - a necessity for most organisations.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Businesses should see the open source they depend on as a valuable resource - that requires management.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Using OSS to build applications allows access to additional developer resources and expertise that wouldn’t otherwise be available. The downside - you have no direct influence over the persons behind the component or their actions. And there is no reason to blindly trust them.&lt;/p&gt;

&lt;p&gt;For internal development resources the norm is to spend time and money hiring the best candidates and continuously invest in their skills and performance. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Businesses need to echo some of that effort spent finding the right in-house talent into safe use of open source - instead of taking it for granted.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-source-in-short"&gt;
  &lt;/a&gt;
  Open source in short
&lt;/h2&gt;

&lt;p&gt;If you’re not working with software development or open source in your day-to-day work, then perhaps the analogy in the title is not self-explanatory. Not to worry, let’s walk through it.&lt;/p&gt;

&lt;p&gt;Today there is no need to start from scratch every time you are to deliver a feature. There are millions of already finished components ready to be used - and they are only a few letters on the keyboard away from being nested in your application and inside your environments.&lt;/p&gt;

&lt;p&gt;What makes something open source is that the source code for all these components is freely available to everyone and anyone, to view, duplicate, work on etc. That means that as long as you adhere to licenses of components, you can use them in your applications to serve your needs.&lt;/p&gt;

&lt;p&gt;And open source software has proven to be an explosive engine for business growth. And it’s everywhere. For ecosystems like JavaScript / npm the figures speak for themselves:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;99% of projects use open source components to some extent.&lt;/li&gt;
&lt;li&gt;An astonishing 70% of all code used to run applications are open source.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_xuQoQQA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qn4buqn0xc5fpvpsj7o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_xuQoQQA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qn4buqn0xc5fpvpsj7o.png" alt="70% of all code used to run applications are open source"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-massive-upside-whats-the-downside"&gt;
  &lt;/a&gt;
  So massive upside - what’s the downside?
&lt;/h3&gt;

&lt;p&gt;When your application utilize external dependencies you’ll depend on developers who you can exert no direct control over. Without control, how do you know whether the open source components in your codebase are being maintained and adhere to your security guidelines?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Core components of your business are probably relying on components that your dev team has never reviewed or seen the insides of.&lt;/em&gt; &lt;br&gt;
Let that sink in. Eye opening, isn’t it?&lt;/p&gt;

&lt;p&gt;And to be clear, open source is a positive thing. We wholeheartedly support it and use it every day in our own apps. But like most things in life it needs some safeguards to make sure everyone is playing by the rules.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Using a particular open source component extensively?&lt;/strong&gt; Consider supporting it! Sponsor, buy the developers some coffee or spend some development time on improving it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#manage-the-open-source-you-use-by-inserting-control-into-your-supply-chain"&gt;
  &lt;/a&gt;
  Manage the open source you use - by inserting control into your supply chain
&lt;/h2&gt;

&lt;p&gt;Not everyone can be an expert - and fortunately you don’t have to be. Committing to safe use of open source can be as simple as supporting the right process and tools for your organisation. Tooling that:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Keeps track of the open source software used&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Identifies for security threats - and keeps potential issues out&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Highlights issues early- for easier and more cost-effective remediation&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://bytesafe.dev/"&gt;Bytesafe&lt;/a&gt; allows you to combine your team’s need for package management of JavaScript open source packages with security. Using Bytesafe, developers can access public open source dependencies or private proprietary components for your applications, securely. Mitigating risks for your business.&lt;/p&gt;

&lt;p&gt;Bytesafe identifies all the components your team is using and keeps track of them for you. Your supply chain is kept secure as part of the firewall where &lt;a href="https://bytesafe.dev/posts/using-quarantine-dependency-firewall/"&gt;threats are automatically quarantined&lt;/a&gt;. And all &lt;a href="https://bytesafe.dev/posts/using-issue-tracking/"&gt;issues are highlighted for you&lt;/a&gt; - accessible to all team members.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>security</category>
      <category>node</category>
      <category>devops</category>
    </item>
    <item>
      <title>When Should I Start Applying for Software Developer Jobs</title>
      <author>Joseph Mania</author>
      <pubDate>Mon, 06 Sep 2021 13:33:20 +0000</pubDate>
      <link>https://dev.to/maniamartial/when-should-i-start-applying-for-software-developer-jobs-1dh1</link>
      <guid>https://dev.to/maniamartial/when-should-i-start-applying-for-software-developer-jobs-1dh1</guid>
      <description>&lt;p&gt;Immediately after learning some slightly deeper concepts. What do you we by deep concepts? Here is the thing. Taking a four-year course or attending an 8-month bootcamp is enough to prepare you for any software development job. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The time you committed&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Mark Zuckerberg will tell you that a good programmer must spend 1000 hours writing codes. Yes, it's true, for you to call yourself an experienced programmer in a certain language or field, then you must have spent much time learning various concepts. Let us be honest, programming is difficult, it requires more time of commitment. &lt;/p&gt;

&lt;p&gt;For a 6-12 month bootcamp, you need like 8 hours per day, please let it be consecutive. For a 4 year course, if you could give 5 hours per day programming and doing research, you are good to solve complex programs. But don't confuse the quality and quantity, lol.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Basic understanding&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A full grasp of the basic concept is the core value of solving ambiguous problems. Please just follow this. If you want to solve complex problems, you must understand their roots. Therefore, if you are into web development, HTML5, CSS3, and JavaScript must be fully revised. Not just once, but frequently. Warning! You don’t need to know the whole of JavaScript, everyone experiences difficulty in this language, even senior engineers.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Framework&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Have you learned any frameworks by this time? If you are a front-end engineer then react, vuejs or angular must be in your toolbox. I don’t mean all of them, but choose one. If you are a backend engineer in the web development field, then nodejs, PHP/Laravel, or Django must be fully grasped. Chose one, for my case I learned Django in three months.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Projects on a resume.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What projects have you handled? It can be a fully optimized site. Make sure you have deployed it live on Netfly or Heroku. Have in mind that Heroku hosts dynamic projects, while netfly hosts static websites. If you are working with java or python, then let your project be on your GitHub account.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Able to read other people's code&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Throughout your learning journey, kindly collaborate. Or take other people's code and try to read through it, look at how they write clean codes. Look at their comments, the naming of JavaScript variables, and functions. Be keen. You will realize how people write simple codes that might take you longer to write. But don’t panic, your time will come.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Is your Github green?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Please! Please! Have a Github account. Then, look at open-source projects and contribute. Have some 50% knowledge of how Github works. Because when you get a job, I am sure you are going to work with a team. This is where you will be getting your feedback on where each of you has reached.&lt;/p&gt;

&lt;p&gt;They will let you know if you are on the right or wrong track. Master the basics before applying for any job. Also, more interaction with GitHub, posting a few projects daily or weekly will make it green. The algorithm will show how consistent and determined you are. No company will give you a job without looking at your Github account.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I can do it&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The last thing is to believe in what you have learned. Don’t doubt your mind, not even your ability to handle some complex problems. Kindly, don’t rush applying to the big four companies if you are fresh from a local Bootcamp. Unless you join their own Bootcamps. But if you have been on a four-year computer science degree, it's your chance to give it a try.&lt;br&gt;
The big question is simple, do you understand the algorithm? That’s the full technical interview with large tech companies. &lt;br&gt;
Have hope and trust in God. It’s a matter of time and you will be a senior engineer. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>React learning guide</title>
      <author>Harry J Beckwith</author>
      <pubDate>Mon, 06 Sep 2021 13:32:48 +0000</pubDate>
      <link>https://dev.to/hjames/react-learning-guide-g58</link>
      <guid>https://dev.to/hjames/react-learning-guide-g58</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vnHsDh7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpa41njjntficjo0satd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vnHsDh7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpa41njjntficjo0satd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;How do you go about learning React?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Find a list of core concepts in react. (see list below)&lt;/li&gt;
&lt;li&gt;Write small code examples for each with a written description on what is going on.&lt;/li&gt;
&lt;li&gt;Combine all the small examples into a working application.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;What is React?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;React is a javascript library for building user interfaces. &lt;/li&gt;
&lt;li&gt;A client-side javascript library.&lt;/li&gt;
&lt;li&gt;All about building modern reactive user interfaces for the web.&lt;/li&gt;
&lt;li&gt;Declarative, component focused approach.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;How does react work?&lt;/h3&gt;

&lt;p&gt;React creates a virtual DOM which means changes can be made to the UI and only that specific part that was updated not the whole page.&lt;/p&gt;

&lt;h3&gt;What is declarative code?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;is a way to write code that describe what you want to do.&lt;/li&gt;
&lt;li&gt;rather than imperative which is how you do something.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;What is JSX?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;JSX is javascript and XML combined meaning you can write html inside javascript. This allows you to write components in React easily.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;State vs props&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;State is used to handle data in the application which will be reactive and update in turn then update the UI.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Props are used to pass data/or state through to other components in the application that react to the state update.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;What is reactDOM?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;is a package that provides DOM (document object model) specific methods. These methods can be used to manage the DOM in an effective easy way.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Explain hooks?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Hooks are a new addition in React 16.8. This is a move away from class based components. You can access the state by using a hook called useState.  Some of the main hooks are useState, useEffect, useContext, useReducer and useRef. There are a few more also.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;What is Redux?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Redux is a state management library for React. It allows you to centralise state in once place rather passing state through multiple components.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Core concepts&lt;/p&gt;

&lt;p&gt;&lt;b&gt;useState&lt;/b&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The above gist&lt;/p&gt;

&lt;p&gt;line 1: we import &lt;code&gt;useState&lt;/code&gt;&lt;br&gt;
line 4: we use array destructuring, &lt;code&gt;count&lt;/code&gt; is our state &lt;code&gt;setCount&lt;/code&gt; is the function we use to update the state.&lt;br&gt;
line 4: 1 is passed into &lt;code&gt;useState&lt;/code&gt; this is are starting state&lt;br&gt;
line 7: &lt;code&gt;setCount&lt;/code&gt; is called passing the starting state &lt;code&gt;count&lt;/code&gt; plus 1&lt;br&gt;
line 16: &lt;code&gt;count&lt;/code&gt; is placed into the JSX&lt;br&gt;
line 17: &lt;code&gt;onClick&lt;/code&gt; is used to call the function that updates our count&lt;/p&gt;

&lt;p&gt;&lt;b&gt;prevState&lt;/b&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The above gist&lt;/p&gt;

&lt;p&gt;line 4: we set our state to and object &lt;br&gt;
line 9: function to update state&lt;br&gt;
line 10: we use &lt;code&gt;prevState&lt;/code&gt; as we want to keep the previous state and update only part of the object&lt;br&gt;
line 13: we use the spread operator to create a copy of the object&lt;br&gt;
line 14: we select the key we want to update, and change the value&lt;br&gt;
line 19 down: we click to call the function and update the key displaying it to the DOM.&lt;/p&gt;

&lt;p&gt;The above, &lt;code&gt;prevState&lt;/code&gt; is used so we keep the old state and update only the selected value.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;props&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;props are used to pass information (state or other) to components and share this information. Once the source of the props is updated all components using this prop will then update.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;line 7: &lt;code&gt;message&lt;/code&gt; prop name is set to a string &lt;code&gt;hello world!&lt;/code&gt;&lt;br&gt;
HelloWorld.js takes props and returns the &lt;code&gt;props.message&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Lifting up state&lt;/b&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The above gist&lt;/p&gt;

&lt;p&gt;line 6: state is set &lt;br&gt;
line 8: function that updates state&lt;br&gt;
line 15: Button component, &lt;code&gt;updateMessage&lt;/code&gt; set to the &lt;code&gt;handleUpdateMessage&lt;/code&gt; function&lt;/p&gt;

&lt;p&gt;Button.js&lt;/p&gt;

&lt;p&gt;line 3: click event from the pass props &lt;code&gt;handleButtonClick&lt;/code&gt;&lt;br&gt;
line 4: we access the parent function through props, passing in the message &lt;code&gt;hello!&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Button is clicked now the parent App.js updates the state, line 14: now shows the &lt;code&gt;hello&lt;/code&gt; message.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;useRef&lt;/b&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Use ref can be used to reference input fields and get the value from the input.&lt;/p&gt;

&lt;p&gt;Above gist&lt;/p&gt;

&lt;p&gt;line 1: &lt;code&gt;useRef&lt;/code&gt; is imported&lt;br&gt;
line 6: we store &lt;code&gt;useRef()&lt;/code&gt; in a const&lt;br&gt;
line 15: &lt;code&gt;ref&lt;/code&gt; is set the &lt;code&gt;useRef&lt;/code&gt; const&lt;br&gt;
line 9: we access the value from the input. using &lt;code&gt;.current.value&lt;/code&gt;&lt;br&gt;
line 9: state is updated, &lt;code&gt;message&lt;/code&gt; is updated in the DOM.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Fragments&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Avoid div soup and write cleaner html. React allows one root DOM element. This means sometimes using &lt;code&gt;div&lt;/code&gt; where it's not really needed. Fragments solve this.&lt;/p&gt;

&lt;p&gt;Without fragment&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;With Fragment&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;b&gt;Forward refs&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Refs cannot be used when adding the &lt;code&gt;ref&lt;/code&gt; tag to a component. In order to use refs when passing to a child component you can use forwardRefs.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Above gist&lt;/p&gt;

&lt;p&gt;App.js&lt;/p&gt;

&lt;p&gt;Line 1: import useRef&lt;br&gt;
Line 2: import import component&lt;br&gt;
Line 5: create useRef&lt;br&gt;
Line 8: focus on the input with ref&lt;br&gt;
Line 13: add pass ref to child component&lt;/p&gt;

&lt;p&gt;InputText.js&lt;/p&gt;

&lt;p&gt;Line 1: import forwardRef&lt;br&gt;
Line 3: Wrap component in forwardRef function, pass props and ref as required&lt;br&gt;
Line 4: set the ref to the input&lt;/p&gt;

&lt;p&gt;Now back in App.js we on click &lt;/p&gt;

&lt;p&gt;Line 14: we set the focus to the child input.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Use effect&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Use effect is a way to call code on page and respond to any updates inside the use effect method, calling the code again.&lt;/p&gt;

&lt;p&gt;Im not sure if the above made much sense. However it's a method that is used for when the component is mounted and when an effect triggers the code inside the use effect method.&lt;/p&gt;

&lt;p&gt;Let's look at an example. This example is an email and password login. We want to check on page load if the user is logged in.&lt;/p&gt;

&lt;p&gt;Using useEffect we can check local storage for logged in user.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The above gist has a few things going on. But we only need to focus on line 10 for now.&lt;/p&gt;

&lt;p&gt;Inside we check for local storage item, if its then we update the state.&lt;/p&gt;

&lt;p&gt;What this allows us to do is, on page refresh we can fire the useEffect method - checking local storage. if true then we update the state to so the user is logged in.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;useEffect dependencies&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Use effect takes an array as the second argument. In here the dependencies that are being updated (state should be passed in ) this way react knows which state to look out for changes and fire the function again.&lt;/p&gt;

&lt;p&gt;The below gist shows a login screen, the useEffect function takes the two dependencies as array items. Now if either update the function is called again.&lt;/p&gt;

&lt;p&gt;Gist showing useEffect dependencies&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;b&gt;useReducer&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Sometimes you have more complex state - for example if it got multiple states, multiple ways of changing it or dependencies to other states.&lt;/p&gt;

&lt;p&gt;more powerful state management.&lt;/p&gt;

&lt;p&gt;More complex to use.&lt;/p&gt;

&lt;p&gt;good replacement for useState when you have state that belongs together.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
 

&lt;p&gt;useReducer takes two arguments, a function and the initial state.&lt;/p&gt;

&lt;p&gt;The variable name dispatch calls the reducer function, which in turn updates the state.&lt;/p&gt;

&lt;p&gt;Using this methods allows us to handle complex logic in the reducer function.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Conclusion&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;That's some of the core basic concepts, with small examples. The trick now is too combine to create a small application.&lt;/p&gt;

&lt;p&gt;Link to follow showing a small project with core basic concepts. Thanks. &lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>frontend</category>
      <category>developer</category>
    </item>
    <item>
      <title>How to update nested state in react component without using redux</title>
      <author>Abu Jaid</author>
      <pubDate>Mon, 06 Sep 2021 13:26:46 +0000</pubDate>
      <link>https://dev.to/abu/how-to-update-nested-state-in-react-component-without-using-redux-1k6k</link>
      <guid>https://dev.to/abu/how-to-update-nested-state-in-react-component-without-using-redux-1k6k</guid>
      <description>&lt;p&gt;In this article, I'm going to create a simple registration form using bootstrap where we will make a functional component, in this component we will use react &lt;code&gt;useState()&lt;/code&gt; hooks,where will make a nested state in a single object and try to update the nested object.it is very difficult to update nested state in real life project.&lt;br&gt;
I'm hoping you are familiar with basic of reactjs,we are not going the basic settings of reactjs,we are going to jump on registration form creation.&lt;/p&gt;

&lt;p&gt;let's start to create registration form using Bootstraps.&lt;br&gt;
in &lt;code&gt;App.js&lt;/code&gt; file we will create registration form&lt;br&gt;
just copy the snippet of html code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;onSubmit=&lt;/span&gt;&lt;span class="s"&gt;{submit}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
            &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Username"&lt;/span&gt;
            &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
            &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Email"&lt;/span&gt;
            &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
            &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"State"&lt;/span&gt;
            &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"state"&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
            &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"City"&lt;/span&gt;
            &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"city"&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
            &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Latitude"&lt;/span&gt;
            &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"lat"&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
            &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Longitude"&lt;/span&gt;
            &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"long"&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-primary"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            Submit
          &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now let's start to create a state where the user data will be available in our component.&lt;br&gt;
&lt;code&gt;App.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;city&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;long&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have created a state with nestes state.now lets add name and value attributes in our html code and also add a form submit method &lt;code&gt;submit&lt;/code&gt; and onChange event &lt;code&gt;onChange&lt;/code&gt; into html inputs field.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;onSubmit=&lt;/span&gt;&lt;span class="s"&gt;{submit}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
            &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Username"&lt;/span&gt;
            &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;{user.username}&lt;/span&gt;
            &lt;span class="na"&gt;onChange=&lt;/span&gt;&lt;span class="s"&gt;{onChange}&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
            &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Email"&lt;/span&gt;
            &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;
            &lt;span class="na"&gt;onChange=&lt;/span&gt;&lt;span class="s"&gt;{onChange}&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
            &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"State"&lt;/span&gt;
            &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"state"&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;{user.address.state}&lt;/span&gt;
            &lt;span class="na"&gt;onChange=&lt;/span&gt;&lt;span class="s"&gt;{onChange}&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
            &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"City"&lt;/span&gt;
            &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"city"&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;{user.address.city}&lt;/span&gt;
            &lt;span class="na"&gt;onChange=&lt;/span&gt;&lt;span class="s"&gt;{onChange}&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
            &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Latitude"&lt;/span&gt;
            &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"lat"&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;{user.address.geolocation.lat}&lt;/span&gt;
            &lt;span class="na"&gt;onChange=&lt;/span&gt;&lt;span class="s"&gt;{onChange}&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
            &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Longitude"&lt;/span&gt;
            &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"long"&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;{user.address.geolocation.long}&lt;/span&gt;
            &lt;span class="na"&gt;onChange=&lt;/span&gt;&lt;span class="s"&gt;{onChange}&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-primary"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            Submit
          &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;onChange&lt;/code&gt; events&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;state&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;city&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;long&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and onSubmit event &lt;code&gt;submit&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;submit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;let's see the whole code together.&lt;br&gt;
&lt;code&gt;App.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;city&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;long&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;state&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;city&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;long&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;submit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-control&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-control&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-control&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;State&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;state&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-control&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;City&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;city&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-control&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Latitude&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lat&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-control&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Longitude&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;long&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;long&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;btn btn-primary&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;Submit&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>beginners</category>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to identify and avoid burnout as a software developer</title>
      <author>Luke Babich</author>
      <pubDate>Mon, 06 Sep 2021 13:23:54 +0000</pubDate>
      <link>https://dev.to/lukeinthecloud/how-to-identify-and-avoid-burnout-as-a-software-developer-1e4i</link>
      <guid>https://dev.to/lukeinthecloud/how-to-identify-and-avoid-burnout-as-a-software-developer-1e4i</guid>
      <description>&lt;p&gt;Recently me and some friends have been working on a side project. Since we had been hanging out together a lot more you start to get some insight into how they manage their time, as well as see how they burnout.&lt;/p&gt;

&lt;p&gt;This started to get me thinking that in the current tech space there is this constant need for validation and push towards always learning. However it is not talked about how on top of your regular job these extra learnings, side projects and general life start to add up and contribute to burnout.&lt;/p&gt;

&lt;p&gt;I recently made a video that outlines the issues and how to deal with burnout. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IZVZkVG283A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;However I will also discuss it here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The Problem
&lt;/h2&gt;

&lt;p&gt; &lt;br&gt;
I will focus on one main point within this article and that has to do with how developers (the ones in the frontend space in particular) are swamped with a so much information, tools, frameworks etc.&lt;/p&gt;

&lt;p&gt;This is not a bad thing. However I am sure there are people that have reached a point where they have been reading articles or been in software long enough to see the infamous &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;x framework vs y framework&lt;/strong&gt;, &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Top 10 tools this week&lt;/strong&gt;, &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What you need to know to be a good developer&lt;/strong&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once again these are not necessarily bad. I am more focusing on the mindset. The feeling newer developers start to experience when either coming into the industry or just starting. I know I felt it when I first started and that was when half the current tools didn't exist yet. This feeling of a massive amount of learning. &lt;/p&gt;

&lt;p&gt;If I had to list every single tool or framework I have worked with or learnt, either in my free time or work the list would be quite a nice chunky read. The frontend ecosystem is always growing and evolving. However there is always pressure on people to try and learn it all as quick as they can. There is a reason there is a meme behind "Have 3 years of experience in X framework" when it has only been around for a year. This pressure to learn the latest and newest things as fast as possible, causes a ripple effect across the industry.&lt;/p&gt;

&lt;p&gt;What does this result in? New and existing developers feeling pressure to dedicate what little time they have and this can lead to burnout and lifestyle imbalances.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-controversy"&gt;
  &lt;/a&gt;
  The Controversy
&lt;/h2&gt;

&lt;p&gt; &lt;br&gt;
This take might seem somewhat double edged. On one hand its important to grow your skills. However on the other it is also important to not just wither away learning something that may not even be relevant in a few years time. Or rather, just to live a little.&lt;/p&gt;

&lt;p&gt;Some might say that learning is what they enjoy. That is fine and maybe then this article is not something that would really appeal to you. The idea behind this is to identify unhealthy habits that some people have when it comes to learning in their free time, on top of a job, side project and just a general busy schedule.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-whats-the-solution"&gt;
  &lt;/a&gt;
  So what's the solution?
&lt;/h2&gt;

&lt;p&gt; &lt;br&gt;
The solution is not to stop learning. The solution is to schedule your time accordingly. &lt;/p&gt;

&lt;p&gt;As an example I dedicate 30min in the morning and evening (this is more a time to wind down and relax) to reading. During my day job, at lunch I use the gym to stay in shape and ensure I stay healthy.&lt;/p&gt;

&lt;p&gt;After work it becomes a choice, dedicate an hour or two to studies/articles/videos or on my side project. The rest of my time is dedicated to what I enjoy, playing games with my friends or watching some TV.&lt;/p&gt;

&lt;p&gt;By scheduling this time it ensures that I am getting the right amount of sleep and balance. This balance allows not only for me to grow as a developer but also to grow as a person and enjoy the things I want. &lt;/p&gt;

&lt;p&gt;I just want to re-iterate. If what you find as fun is learning and doing little code projects this is 100% fine. The point behind the solution is not to stop coding and doing those things. It is about managing your time in order to ensure that you get sleep/exercise/eat well and stay hydrated. What you do for fun is up to you. However that fun should not make you feel pressured or induce anxiety and stress to do it. That fun time should be the stuff that allows you to unwind and reset mentally in order to avoid a prolonged or new burnout.&lt;/p&gt;

&lt;p&gt;I hope this was helpful to some as I have found this is what works best for me. Feel free to leave any questions and if you did check out that video that is much appreciated as well! &lt;/p&gt;

</description>
      <category>discuss</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Monitor your Golang application with OpenTelemetry and SigNoz</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Mon, 06 Sep 2021 13:09:14 +0000</pubDate>
      <link>https://dev.to/signoz/monitor-your-golang-application-with-opentelemetry-and-signoz-3fli</link>
      <guid>https://dev.to/signoz/monitor-your-golang-application-with-opentelemetry-and-signoz-3fli</guid>
      <description>&lt;p&gt;OpenTelemetry provides a set of APIs to directly measure the performance and behavior of your software and send this data to observability platforms. Let's learn how to get started with OpenTelemetry for Go applications and visualize that data with SigNoz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OpenTelemetry is a vendor-agnostic instrumentation library. In this article, let's explore how you can instrument your Go application with OpenTelemetry and get the data reported through SigNoz - an open-source APM and observability tool.&lt;/p&gt;

&lt;p&gt;Steps to get started with OpenTelemetry for Go application&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installing SigNoz&lt;/li&gt;
&lt;li&gt;Installing sample Go application&lt;/li&gt;
&lt;li&gt;Instrumentation with OpenTelemetry and sending data to SigNoz&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#installing-signoz"&gt;
  &lt;/a&gt;
  Installing SigNoz
&lt;/h2&gt;

&lt;p&gt;You can get started with SigNoz using just three commands at your terminal if you have Docker installed. You can read about other deployment options from &lt;a href="https://signoz.io/docs/deployment/docker/"&gt;SigNoz documentation&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/SigNoz/signoz.git
cd signoz/deploy/
./install.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;You will have an option to choose between ClickHouse or Kafka + Druid as a storage option. Trying out SigNoz with ClickHouse database takes less than 1.5GB of memory, and for this tutorial, we will use that option.&lt;/p&gt;

&lt;p&gt;When you are done installing SigNoz, you can access the UI at: &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The application list shown in the dashboard is from a sample app called HOT R.O.D that comes bundled with the SigNoz installation package.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p7xY4Ub6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/my8jrh3z0vkc9c5yi2mb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p7xY4Ub6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/my8jrh3z0vkc9c5yi2mb.png" alt="SigNoz dashboard"&gt;&lt;/a&gt;SigNoz dashboard&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-sample-go-application"&gt;
  &lt;/a&gt;
  Installing sample Go application
&lt;/h2&gt;

&lt;p&gt;To see how OpenTelemetry can be used to instrument a Go application, let's see how it works with a sample bookstore app (&lt;a href="https://github.com/SigNoz/sample-golang-app"&gt;GitHub repo&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;It is a simple bookstore app with a REST API that provides book data and performs CRUD operations. The app uses Gin framework to build a RESTful API. Gin is a high-performance HTTP web framework written in Golang containing a set of commonly used functionalities like routing, middleware support and rendering.&lt;/p&gt;

&lt;p&gt;OpenTelemetry has specific instrumentation packages to support popular Go packages and use cases.  For example, this app uses the Gin framework for request routing. OpenTelemetry provides instrumentation package named &lt;strong&gt;otelgin&lt;/strong&gt; to instrument the Gin framework which you need to import in your app. You can find the complete list of supported Golang packages &lt;a href="https://github.com/open-telemetry/opentelemetry-go-contrib/tree/main/instrumentation"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;br&gt;
Verify if you have Golang installed on your machine by running &lt;code&gt;$ go version&lt;/code&gt; on your terminal. If you don't have Golang installed, you can download it &lt;a href="https://golang.org/doc/install"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps to install sample Go application:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clone sample Go application repository
From your terminal use the following command to clone sample Go application GitHub repository.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   git clone https://github.com/SigNoz/sample-golang-app.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Update path to sample-golang-app &amp;amp; check if the app is working
Update your terminal path to the sample app directory and check if the app is working or not using the following command:
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   cd sample-golang-app
   go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Make sure you have an available port for running your app. If, by default, the go app tries to run on port 8080, you might get an error as SigNoz uses port 8080 for its query service. On your mac terminal, you can set the listening port of your app by using the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   export PORT = 8081
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q5bv4aTa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz2jfq4l2kz51z4wcmez.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q5bv4aTa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz2jfq4l2kz51z4wcmez.png" alt="Sample Go app"&gt;&lt;/a&gt;/books endpoint of our bookstore app&lt;/p&gt;

&lt;p&gt;Once you ensure that your application is working, exit the server by pressing 'Ctrl + C' on your mac terminal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#instrumentation-with-opentelemetry-and-sending-data-to-signoz"&gt;
  &lt;/a&gt;
  Instrumentation with OpenTelemetry and sending data to SigNoz
&lt;/h2&gt;

&lt;p&gt;The file &lt;code&gt;main.go&lt;/code&gt; has instructions to import all the necessary OpenTelemetry packages in order to instrument the sample app. For this app, we import the following OpenTelemetry packages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import (
    "go.opentelemetry.io/contrib/instrumentation/github.com/gin-gonic/gin/otelgin"
    "go.opentelemetry.io/otel"
    "go.opentelemetry.io/otel/exporters/otlp"
    "go.opentelemetry.io/otel/exporters/otlp/otlpgrpc"
    "go.opentelemetry.io/otel/label"

    "go.opentelemetry.io/otel/sdk/resource"
    sdktrace "go.opentelemetry.io/otel/sdk/trace"
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;You need to run the Go app with the necessary environment variables in order to start sending data to SigNoz. Use the following command to run and configure the app to send data to SigNoz:&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SERVICE_NAME=goApp INSECURE_MODE=true OTEL_METRICS_EXPORTER=none OTEL_EXPORTER_OTLP_ENDPOINT=&amp;lt;IP of SigNoz backend&amp;gt;:4317 go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Ip of SigNoz&lt;/code&gt; can be replaced with localhost in this case. Hence, the final command becomes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SERVICE_NAME=goApp INSECURE_MODE=true OTEL_METRICS_EXPORTER=none OTEL_EXPORTER_OTLP_ENDPOINT=localhost:4317 go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;And, congratulations! You have instrumented your sample Golang app. Hit the &lt;code&gt;/books&lt;/code&gt; endpoint of the bookstore app at &lt;a href="http://localhost:8081/books"&gt;http://localhost:8081/books&lt;/a&gt;. Refresh it a bunch of times in order to generate load, and wait for 1-2 mins for data to appear on SigNoz dashboard.&lt;/p&gt;

&lt;p&gt;You can now access the SigNoz dashboard at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; to monitor your app for performance metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ogpWkixR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw8wdk1jjstpn511yey8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ogpWkixR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw8wdk1jjstpn511yey8.png" alt="Sample Go app in the list of applications monitored by SigNoz"&gt;&lt;/a&gt;Sample Golang app appears in the list of application&lt;/p&gt;

&lt;p&gt;If you want to instrument your own Golang application, you can read about it in our &lt;a href="https://signoz.io/docs/instrumentation/golang/#instrumentation-of-a-sample-golang-application"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#metrics-and-traces-of-the-go-application"&gt;
  &lt;/a&gt;
  Metrics and Traces of the Go application
&lt;/h2&gt;

&lt;p&gt;SigNoz makes it easy to visualize metrics and traces captured through OpenTelemetry instrumentation.&lt;/p&gt;

&lt;p&gt;SigNoz comes with out of box RED metrics charts and visualization. RED metrics stands for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rate of requests&lt;/li&gt;
&lt;li&gt;Error rate of requests&lt;/li&gt;
&lt;li&gt;Duration taken by requests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Krt7sg1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/458uyqzezqn35e0ket9q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Krt7sg1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/458uyqzezqn35e0ket9q.png" alt="Sample nodejs app in the applications monitored"&gt;&lt;/a&gt;Measure things like application latency, requests per sec, error percentage and see your top endpoints&lt;/p&gt;

&lt;p&gt;You can then choose a particular timestamp where latency is high to drill down to traces around that timestamp.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nNg3XxmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx1o1wnci108ftkxy4al.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nNg3XxmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx1o1wnci108ftkxy4al.png" alt="See traces, and apply powerful filters on trace data"&gt;&lt;/a&gt;View of traces at a particular timestamp&amp;lt;/figcaption&lt;/p&gt;

&lt;p&gt;You can use flamegraphs to exactly identify the issue causing the latency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ymHYIBju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qg7wtak5ca4x0pr90wj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ymHYIBju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qg7wtak5ca4x0pr90wj.png" alt="Flamegraphs for distributed tracing"&gt;&lt;/a&gt;Flamegraphs showing exact duration taken by each spans - a concept of distributed tracing&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry makes it very convenient to instrument your Go applications and generate telemetry data. You can then use an open-source APM tool like SigNoz to analyze the performance of your app. As SigNoz offers a full-stack observability tool, you don't have to use multiple tools for your monitoring needs.&lt;/p&gt;

&lt;p&gt;You can try out SigNoz by visiting its GitHub repo 👇&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you face any issues while trying out SigNoz, feel free to write to us at: &lt;a href="mailto:support@signoz.io"&gt;support@signoz.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to read more about SigNoz 👇&lt;br&gt;&lt;br&gt;
&lt;a href="https://signoz.io/blog/opentelemetry-spring-boot/"&gt;Monitor your Spring Boot application with OpenTelemetry and SigNoz&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>monitoring</category>
      <category>devops</category>
      <category>opentelemetry</category>
    </item>
    <item>
      <title>How to See Which Branch Your Teammate is on in PhpStorm</title>
      <author>Andrew</author>
      <pubDate>Mon, 06 Sep 2021 13:01:40 +0000</pubDate>
      <link>https://dev.to/gitlive/how-to-see-which-branch-your-teammate-is-on-in-phpstorm-1f3k</link>
      <guid>https://dev.to/gitlive/how-to-see-which-branch-your-teammate-is-on-in-phpstorm-1f3k</guid>
      <description>&lt;p&gt;&lt;em&gt;“What branch are you on?”&lt;/em&gt; is often the first question you ask when a teammate says &lt;em&gt;“The tests aren't passing”&lt;/em&gt; or &lt;em&gt;“The build failed”&lt;/em&gt;. Here’s how you can get an answer to that question without even needing to ask.&lt;/p&gt;

&lt;p&gt;In PhpStorm, open up the Team Window by clicking GitLive on the bottom tool window bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wOs_Zlzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630926853406/aEZhmCiDS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wOs_Zlzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630926853406/aEZhmCiDS.png" alt="PhpStorm-IDE.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will show a list of your teammates, if they are online (or away) and the issue they are currently working on. Locate the teammate you are interested in and click the arrow on the left-hand side of their avatar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TVn3kdJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629731240886/JbaOB-CYS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TVn3kdJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629731240886/JbaOB-CYS.png" alt="ide window scaled.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you will see all the repositories they have cloned including the name of their current branch! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bdtbo19P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630506270361/bHUNayHHj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bdtbo19P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630506270361/bHUNayHHj.png" alt="screenshot 3 scaled.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If an issue has been connected to the branch you’ll see the issue name instead, if that's the case just hover your cursor over the issue name and a tooltip will appear showing you the branch name (and even the commit hash)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p7t5LnoA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630506279553/DVzcaTM-n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p7t5LnoA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630506279553/DVzcaTM-n.png" alt="screenshot 4 scaaled.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't have the GitLive extension installed yet? You can &lt;a href="https://plugins.jetbrains.com/plugin/11955-gitlive"&gt;find GitLive here&lt;/a&gt; and, if you need help setting it up, follow the instructions in &lt;a href="https://docs.git.live/docs/installation/"&gt;GitLive docs&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
      <category>git</category>
    </item>
  </channel>
</rss>
