<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Advent of code 4; I never liked Bingo...</title>
      <author>Marco Servetto</author>
      <pubDate>Sat, 04 Dec 2021 10:58:39 +0000</pubDate>
      <link>https://dev.to/marcoservetto/advent-of-code-4-i-never-liked-bingo-lil</link>
      <guid>https://dev.to/marcoservetto/advent-of-code-4-i-never-liked-bingo-lil</guid>
      <description>&lt;p&gt;Here we are again,&lt;br&gt;
I'm starting to get tired of this advent of code, I'm solving them, and 42 is not failing under me, but I'm not that motivated to write nice 42ish code.&lt;br&gt;
Here the difficulty was that more then one can win at the same round, it was not very clear from the text. This also makes the order of the bingos as provided in the file very relevant...&lt;br&gt;
The code below is interesting for someone learning 42 since it uses matrixes and lists of mutable elements.&lt;br&gt;
Note the funky &lt;code&gt;\#add(right=_)&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Numbers = { class method mut I.List(S that)={
  for s in that.split(S.nl()) (
    return \()(for si in s.split(S",") \add(I(string=si)))
    )
  error X"unreachable: input has at least one nl"
  }}
Board = Data.AddList:Collection.matrix(I.List row=5I col=5I)
Boards = {
  class method mut Board.List(S that) = \()(
    for i in Range.endless(), b in that.split(S.nl()++S.nl()) (
      //two new lines between each board
      if i!=0I \#add(right=This(board=b))
      )
    )
  class method mut Board(S board) = (
    //sometimes they are padded
    s = board.replace(S.nl() with=S" ").replace(S"  " with=S" ")
    Board(\()(for si in s.split(S" ") \add(I(string=si))))
    //the board matrix factory takes an I.List 
    )
  }
Bingo = Data:{
  mut I.List ns
  mut Board.List bs
  mut method Void round()=(
    n = \ns.left()
    this.#ns().removeLeft()
    for mut b in this.#bs() This.round(b=b, n=n)
    )
  class method Void round(mut Board b, I n)=(
    for var ni in b.#vals() if ni==n ni:=I"-1"
    )
  read method I winner()={
    for i in Range(this.bs().size()), read bi in \bs (
      if This.win(b=bi) return i
      )
    return I"-1"
    }
  class method Bool win(read Board b) = {
    for i in Range(5I) (
      allRow = Match.All()(for j in Range(5I) \add(b.val(row=i,col=j)==I"-1"))
      if allRow return \.true()
      )
    for j in Range(5I) (
      allCol = Match.All()(for i in Range(5I) \add(b.val(row=i,col=j)==I"-1"))
      if allCol return \.true()
      )
    return \.false()
    }
  class method I points(read Board b) = (
    var res = 0I
    for ni in b if ni!=I"-1" ( res+=ni )
    res
    )
  }
MainPart1 = (
  fs = Fs.Real.#$of()
  input = fs.read(\"input")
  bingo = Bingo(ns=Numbers(input), bs=Boards(input))
  while Bool.true() (
    current = bingo.ns().left()
    bingo.round()
    res = bingo.winner()
    if res!=I"-1" (
      points = Bingo.points(b=bingo.bs().readVal(res))
      Debug(points*current)
      Break()
      )
    )
  )
MainPart2 = (
  fs = Fs.Real.#$of()
  input = fs.read(\"input")
  bingo = Bingo(ns=Numbers(input), bs=Boards(input))
  while Bool.true() (    
    current = bingo.ns().left()
    bingo.round()
    while Bool.true() (//more then one can win in a single round
      res = bingo.winner()
      if res==I"-1" ( Break() )
      bi = bingo.bs().readVal(res)
      points = Bingo.points(b=bi)
      Debug(points*current)//it is printing all the winning ones,
      //I can just see the last one,
      //it will then goes in error when finishes the numbers :P
      bingo.#bs().remove(res)
      )
    )
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ultimately, this exercise gave me no good push into putting this giant piece of logic in a method as it should clearly be. Eventually, I just resorted to the trick of looking to the last printout before the program failed because of the end of the numbers.``&lt;/p&gt;

</description>
      <category>adventofcode</category>
      <category>42</category>
    </item>
    <item>
      <title>How to Use a Loop in CSS!</title>
      <author>Ustariz Enzo</author>
      <pubDate>Sat, 04 Dec 2021 10:54:20 +0000</pubDate>
      <link>https://dev.to/ziratsu/how-to-use-a-loop-in-css-418i</link>
      <guid>https://dev.to/ziratsu/how-to-use-a-loop-in-css-418i</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;Learn &lt;em&gt;how to use a loop in CSS&lt;/em&gt; with the help of the SASS preprocessor in less than a minute!&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/PUOcI8XuDDU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-html-structure"&gt;
  &lt;/a&gt;
  1. The HTML structure.
&lt;/h2&gt;

&lt;p&gt;Start by installing the live sass compiler extension in VS Code, or download it globally via npm to use its script.&lt;br&gt;
Then create a hundred paragraphs by using an Emmet shortcut:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;p.t${Hello World}*100
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-create-a-scss-file"&gt;
  &lt;/a&gt;
  2. Create a SCSS file.
&lt;/h2&gt;

&lt;p&gt;Create a SCSS file and copy and paste the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sass"&gt;&lt;code&gt;&lt;span class="k"&gt;@for&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="ow"&gt;from&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;through&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;.t&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then press F1 and look for &lt;em&gt;Live Sass: Watch Sass&lt;/em&gt; if you are using the live sass compiler extension.&lt;br&gt;
Click on it and it'll create a style.css file with all of the different font-sizes, growing one by one, for each paragraph. &lt;/p&gt;

&lt;p&gt;Check out your app and you'll see that each paragraph will grow from a small font to a bigger font steadily!&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>5 GitHub Repositories for learning developers...</title>
      <author>crater90</author>
      <pubDate>Sat, 04 Dec 2021 10:44:36 +0000</pubDate>
      <link>https://dev.to/crater90/5-github-repositories-for-learning-developers-4kn6</link>
      <guid>https://dev.to/crater90/5-github-repositories-for-learning-developers-4kn6</guid>
      <description>&lt;p&gt;For programmers and budding developers, GitHub is always the first choice to explore and learn new tech. It is the home of some of the most interesting and famous open source projects. It is also a great place for sharing resources of all kinds, from free books to APIs, from roadmaps to project ideas.&lt;/p&gt;

&lt;p&gt;Having a massive collection of repositories under the hood, it has always been a tedious task to find good GitHub repos. &lt;strong&gt;In this article, we will look at a few repositories that I have found useful to build/improve skills in software development.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-developerroadmap"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;developer-roadmap&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UEPhcIS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkqkqq8scjiajc60mbct.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UEPhcIS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkqkqq8scjiajc60mbct.png" alt="developer-roadmap" width="880" height="304"&gt;&lt;/a&gt;&lt;br&gt;
With over 178k+‚≠ê, This repository is great for those looking for a career in software web development. The repository focuses on Front-end, Back-end and DevOps career tracks. The repository covers all the skills and technology required for each of these paths. It also provides a strategy to learn these skills in a structured manner.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-build-your-own-x"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://github.com/danistefanovic/build-your-own-x"&gt;Build your own X&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you are someone who doesn't get the theory part and always want to know what goes behind this repository is a daily stop for you. It has links to the resources which help you build your own Cryptocurrency, Database, Bots, BitTorrent Clients, and many more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-freeprogrammingbooks"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;free-programming-books&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Reading a book is still one of the best ways to learn a new topic. This repository has a massive collection of free programming books useful for learning all sorts of technology.Buying a book is often costly. Fortunately for us, there are many free books available on the internet for developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-codinginterviewuniversity"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://github.com/jwasham/coding-interview-university"&gt;coding-interview-university&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This repository will help you land a job in FAANG companies, curated by the software engineer at amazon this is a full preparation guide on cracking the toughest interviews. It also has links to the flashcards for quickly brushing up your knowledge and stay updated. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-systemdesignprimer"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://github.com/donnemartin/system-design-primer"&gt;system-design-primer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pgk2wtZ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhyfsuh597qdzmlfpuos.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pgk2wtZ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhyfsuh597qdzmlfpuos.png" alt="system-design" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a great repository for developers that teaches how to design large-scale systems. The repo provides an organized collection of resources for this broad topic. System Design is a must known topic for most of the tech-interviews hence, this is the perfect stop to learn system design.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bonus-for-js-developers"&gt;
  &lt;/a&gt;
  Bonusüòâ for JS developers..
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#6-javascriptalgorithms"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;javascript-algorithms&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you are in web-development and want to learn DSA have a look at this amazing repository that presents JavaScript-based examples of many popular algorithms and data structures. Furthermore, each algorithm and data structure has related explanations and YouTube video links for further reading.&lt;/p&gt;

&lt;p&gt;Hope you will learn a lot. Happy coding! üöÄüë®‚Äçüíª&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What is a Mining Pool Familiarity with the most money-making pools in the world</title>
      <author>xavier trinkal</author>
      <pubDate>Sat, 04 Dec 2021 10:22:26 +0000</pubDate>
      <link>https://dev.to/xtrinkal/what-is-a-mining-pool-familiarity-with-the-most-money-making-pools-in-the-world-7pa</link>
      <guid>https://dev.to/xtrinkal/what-is-a-mining-pool-familiarity-with-the-most-money-making-pools-in-the-world-7pa</guid>
      <description>&lt;p&gt;Mining is one of the most attractive industries in the world. There are many people working in this industry. One of the most important issues in mining is the choice of pool. Mining pool is one of the most important issues that miners need to agree on. In this article, we want to answer the question of what is a mining pool. Stay with us.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-digital-currency-mining-pool"&gt;
  &lt;/a&gt;
  What is a digital currency mining pool?
&lt;/h2&gt;

&lt;p&gt;New blocks are formed in an online digital currency exchange or when buying and selling digital currencies. These blocks are created based on complex mathematical and cryptographic equations. The equations of the Bitcoin network and other digital currencies are extremely complex and difficult. To solve these equations, we need devices with very high processing power. But this is not enough. Miners combine the power of devices into a single server to increase their chances of solving the equation. In this way, the processing power increases and more equations can be solved in a shorter time. On the other hand, with the successful and timely resolution of a block by a mining pool, the reward resulting from solving that block is divided among all miners based on the processing power they provide.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#miners-the-hardworking-miners-of-the-cryptocurrency-world"&gt;
  &lt;/a&gt;
  Miners, the hardworking miners of the cryptocurrency world
&lt;/h2&gt;

&lt;p&gt;At each transfer in the network, a new block is formed. Forming a new block requires solving complex equations. Miners are those who are willing to do this process. The network rewards them for solving each of these blocks. In a bitcoin network, for example, a miner, depending on the difficulty of the network, solves a block and receives a reward for that block to bitcoin. Most cryptocurrency architectures are such that each time a new block is generated, the equations become more complex and more obscure. In other words, every time miners solve an equation, they create another difficult equation for themselves. Based on the architecture of different networks, it can be said that miners play a very important role in completing the process of buying bitcoins and other currencies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mining-pool-more-chances-and-better-rewards"&gt;
  &lt;/a&gt;
  Mining pool, more chances and better rewards
&lt;/h2&gt;

&lt;p&gt;The mining industry has become one of the most lucrative industries today. This situation has led powerful individuals and companies to solve equations with supercomputers. Meanwhile, the chances of small miners with weaker devices are very low. In fact, this is where the idea of ‚Äã‚Äãa mining pool came from. People could connect their devices to a network using the Internet. In this way, the chances of solving the equation and receiving a reward increased.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-is-the-reward-distributed-among-the-miners"&gt;
  &lt;/a&gt;
  How is the reward distributed among the miners?
&lt;/h2&gt;

&lt;p&gt;Remuneration methods are not the same for miners. Each pool distributes the rewards to members based on a pre-determined agreement. Pay-per-share, partial pay, point pay, and pay per last n share are some of the common methods in mining pools. Here's a look at some of these rewards.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#paypershare-pps-more-powerful-device-and-more-rewards"&gt;
  &lt;/a&gt;
  Pay-per-share (PPS), more powerful device and more rewards
&lt;/h3&gt;

&lt;p&gt;This is the most sensible way to divide stocks. In this method, the computing power of each device is calculated first. Rewards are also paid based on computational power. Naturally, a more powerful device has a greater role in solving equations. So it's natural for him to get a bigger share. It is interesting to know that in this method it is not necessary to solve the block. In fact, the pools that use this method encourage others to join them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#relative-payment-a-slight-difference-from-payment-per-share"&gt;
  &lt;/a&gt;
  Relative payment, a slight difference from payment per share
&lt;/h3&gt;

&lt;p&gt;Relative payment is just like payment per share. In this method, the profit is divided among the miners based on the power of the devices. But the condition for receiving a profit is to solve the block. In this method, after solving the block, immediately the profit is divided among the miners based on the power of the devices and is deposited in their account.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pointbased-payment-permanent-activity-in-a-pool"&gt;
  &lt;/a&gt;
  Point-based payment, permanent activity in a pool
&lt;/h3&gt;

&lt;p&gt;Some pools use a point-based payment method to create more loyalty for miners. In this method, the miner who spends more time in the pool for more time, scores more points. When the bonus is distributed, the payment is divided among the miners based on the points earned.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#paying-for-the-last-n-shares-is-the-most-complicated-payment-method"&gt;
  &lt;/a&gt;
  Paying for the last N shares is the most complicated payment method
&lt;/h3&gt;

&lt;p&gt;In this way, the miners first receive pre-determined shares within a calculated framework. After solving the equation, only those who have joined the extraction process will receive a reward.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dark-and-light-pools-extraction-mining-coins-what-are-the-strengths-and-weaknesses"&gt;
  &lt;/a&gt;
  Dark and light pools extraction, mining Coins What are the strengths and weaknesses?
&lt;/h2&gt;

&lt;p&gt;As mentioned, mining pools improve the speed, reward and performance of miners. People can have a better chance of solving the equation by joining a pool. But on the other hand, there are weaknesses. For smaller currencies, there is concern that large pools will exert power over them. On the other hand, some pools are not very transparent. In other words, a mining pool with a reward handling may give miners less money. Also, in most cases, there must be the necessary technical knowledge to join and resolve unforeseen technical problems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-can-we-find-a-suitable-pool"&gt;
  &lt;/a&gt;
  Where can we find a suitable pool?
&lt;/h2&gt;

&lt;p&gt;If you are interested in the mining industry and mining pools, it is better to remember a few points in choosing a pool:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-infrastructure-laws-are-not-the-same-everywhere"&gt;
  &lt;/a&gt;
  1. Infrastructure, laws are not the same everywhere
&lt;/h3&gt;

&lt;p&gt;The first point in choosing a pool is to pay attention to the infrastructure. Some pools do not allow any device to be connected to them. On the other hand, some coin mines only allow the device to be connected under certain conditions. Nor should we overlook the important role of the Internet in joining a mining pool.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-specify-your-payment-method"&gt;
  &lt;/a&gt;
  2. Specify your payment method
&lt;/h3&gt;

&lt;p&gt;The second point is to choose the pool with the appropriate payment method. Each pool uses a special payment method. Some pools offer rewards immediately. Others do this at regular intervals. On the other hand, we should note that some pools have restrictions on withdrawals.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-authentic-and-transparent-pool-dive-into-the-heart-of-the-mining-industry"&gt;
  &lt;/a&gt;
  3. Authentic and transparent pool, dive into the heart of the mining industry
&lt;/h3&gt;

&lt;p&gt;The most important thing in choosing a pool is to pay attention to the validity and transparency of the pool. Mining pool can easily deceive miners. Therefore, it is better to choose a pool that has a high reputation. On the other hand, the selected pool should expose the processes to the miner in a completely transparent and explicit manner.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-fees-and-other-restrictions-keep-an-eye-on-everything"&gt;
  &lt;/a&gt;
  4. Fees and other restrictions, keep an eye on everything
&lt;/h3&gt;

&lt;p&gt;Another point in choosing a pool is the fee. Some pools charge less and some charge more. Here the miner must specify how much he is willing to pay. On the other hand, some pools are private and do not allow any minor to enter. It should also be noted that some pools only allow access to certain devices.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#which-pools-are-more-prestigious"&gt;
  &lt;/a&gt;
  Which pools are more prestigious?
&lt;/h2&gt;

&lt;p&gt;According to the above criteria, one pool cannot be recommended for everyone. But F2pool and Poolin are some of the most famous pools in the world. Antpool and ViaBTC have also been able to attract many miners.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mining-a-moneymaking-but-dangerous-industry"&gt;
  &lt;/a&gt;
  Mining, a money-making but dangerous industry
&lt;/h2&gt;

&lt;p&gt;In this article, we examined the mining pool. As we mentioned, choosing a mining pool is just one of the steps to enter this attractive industry. Mining, despite all its charms, can be dangerous. Before entering this industry, different factors should be considered together and then the decision should be made. &lt;/p&gt;

</description>
      <category>blockchain</category>
    </item>
    <item>
      <title>Creating a Restaurant Receptionist BOT from LEVEL 0 by SilvenLEAF</title>
      <author>SilvenLEAF</author>
      <pubDate>Sat, 04 Dec 2021 10:08:33 +0000</pubDate>
      <link>https://dev.to/silvenleaf/creating-a-restaurant-receptionist-bot-from-level-0-by-silvenleaf-47nf</link>
      <guid>https://dev.to/silvenleaf/creating-a-restaurant-receptionist-bot-from-level-0-by-silvenleaf-47nf</guid>
      <description>&lt;p&gt;Ahoy there! Let's create a fully functional Restaurant Receptionist BOT using the Botonic Framework!! A framework powered by React and Tensorflow!! &lt;/p&gt;

&lt;p&gt;We'll be going from LEVEL 0. So as long as you know the basics for JavaScript, hop on!! Who's excited?&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-0-project-setup"&gt;
  &lt;/a&gt;
  Step 0: Project Setup
&lt;/h3&gt;

&lt;p&gt;First let's install the &lt;strong&gt;botonic cli&lt;/strong&gt; globally.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; @botonic/cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we are ready to go!! Let's go create a folder called &lt;strong&gt;"Bots"&lt;/strong&gt; and open our terminal there!!&lt;/p&gt;

&lt;p&gt;I'm storing all my bots in this folder, you can choose any folder you like!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-1-create-a-blank-bot"&gt;
  &lt;/a&gt;
  Step 1: Create a blank bot
&lt;/h3&gt;

&lt;p&gt;Type the following command to start creating the bot&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;botonic new YourBotName
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm giving my bot name as "Chihuo" because in Chinese it means "Foodie" haha. You can name whatever you want. So my command will be this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;botonic new Chihuo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it'll show us a list of available templates. I'm gonna choose the &lt;strong&gt;Blank (TypeScript)&lt;/strong&gt; one, but you can choose any of those, be it typescript or javascript.&lt;/p&gt;

&lt;p&gt;(To navigate on those templates, use up or down arrow and when you select your favorite template, click enter to create it)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IJDFMkxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bwqssxydcvu2b5ip3t25.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IJDFMkxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bwqssxydcvu2b5ip3t25.png" alt="Botonic Bot Creating" width="880" height="226"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After selecting your favorite template, click enter. It'll take a while, let's wait&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LCYJ8H0n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jtl5wjvtuoeosu15oob.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LCYJ8H0n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jtl5wjvtuoeosu15oob.png" alt="Botonic Bot Creating 02" width="880" height="261"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once done, open our project in your favorite text editor.&lt;/p&gt;

&lt;p&gt;Mine is VS Code, so I'm gonna use the following command to open it in VS Code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;code Chihuo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll see that these files and folders were created.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HPthL_fO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hy67xp0wapq54qo73o5p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HPthL_fO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hy67xp0wapq54qo73o5p.png" alt="Bot File System" width="330" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the way, unlike react, it did not init the git repo, so let's init it first.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And also create a &lt;strong&gt;".gitignore"&lt;/strong&gt; file and write the following content to ignore these from being tracked&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dist
node_modules
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can commit the changes so far if you like!&lt;/p&gt;

&lt;p&gt;Anyway, let's run our Bot!!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then go to this url &lt;strong&gt;"&lt;a href="http://localhost:8080/"&gt;http://localhost:8080/&lt;/a&gt;"&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You'll see our bot running live!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LaTGFgMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdw1eatwypnkwm6qasdw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LaTGFgMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdw1eatwypnkwm6qasdw.png" alt="Live Bot 01" width="880" height="789"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on that bottom right button to open the bot!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rMemFR9_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nu8o2w4u2uu8yh5wvy0a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rMemFR9_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nu8o2w4u2uu8yh5wvy0a.png" alt="Live Bot 02" width="880" height="795"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yay!! Now let's get to the fun stuff!! Let's make the bot alive!!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-2-creating-a-simple-functional-bot"&gt;
  &lt;/a&gt;
  Step 2: Creating a Simple Functional Bot
&lt;/h3&gt;

&lt;p&gt;Currently whatever you type, bot will not understand you. Because just like a new born baby, our little bot is naive and innocent. We have to train her to learn more and be an amazing Receptionist.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3_oUjlK1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2th0e5ax98j5p3q8qjid.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3_oUjlK1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2th0e5ax98j5p3q8qjid.png" alt="Bot not understanding" width="481" height="712"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open &lt;strong&gt;"routes.ts"&lt;/strong&gt; file and write the content in it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Reply&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@botonic/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;initial&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/hi/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello! Nice to meet you&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          How can I help you?
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"order"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Place an order&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"question"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Have a question&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You now have to rename this file as &lt;strong&gt;"routes.tsx"&lt;/strong&gt; because it contains &lt;strong&gt;jsx&lt;/strong&gt; and TypeScript will throw error if you not rename it as &lt;strong&gt;".tsx"&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now you type &lt;strong&gt;"Hi"&lt;/strong&gt; to your bot and see it's working.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--USrCp_UY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uvb4osatr8jx8awimfrm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--USrCp_UY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uvb4osatr8jx8awimfrm.png" alt="Hi Bot" width="486" height="706"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great! Now we know the basic workflow to train our bot. So let's jump into the more sophisticated way to continue improving our bot.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-sophisticated-way-to-develop-the-bot"&gt;
  &lt;/a&gt;
  Step 3: Sophisticated way to develop the bot
&lt;/h3&gt;

&lt;p&gt;Normally we'll keep the actions and routes seperate, just like how we seperate controllers and api routes in our Serverside application.&lt;/p&gt;

&lt;p&gt;So inside the &lt;strong&gt;"actions"&lt;/strong&gt; folder, we'll create all those actions, and importing it inside the &lt;strong&gt;"routes.ts"&lt;/strong&gt; file.&lt;/p&gt;

&lt;p&gt;Look, we'll not write any JSX inside the &lt;strong&gt;"routes.tsx"&lt;/strong&gt; file anymore, so rename it back to &lt;strong&gt;"routes.ts"&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Anyway, let's create the FULLY FUNCTIONAL BOT!!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-4-create-the-receptionist"&gt;
  &lt;/a&gt;
  Step 4: Create the Receptionist
&lt;/h3&gt;

&lt;p&gt;Inside the actions folder, create these files&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;ROOT REPO
‚îú‚îÄ‚îÄ src
‚îÇ   ‚îú‚îÄ‚îÄ actions (it's a folder)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ .gitkeep (it was already there)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Welcome.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ PlaceAnOrder.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ VegOrNonVeg.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ OrderDone.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ HaveAQuestion.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ ContactDelivery.tsx
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ContactManager.tsx
‚îÇ   ‚îú‚îÄ‚îÄ routes.ts
‚îÇ   ‚îî‚îÄ‚îÄ other stuff
‚îÇ
‚îú‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ .gitignore
‚îî‚îÄ‚îÄ other stuff
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once that done, we'll fill them up with the following content&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-welcometsx"&gt;
  &lt;/a&gt;
  1. Welcome.tsx
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Reply&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@botonic/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Welcome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Hello! Nice to meet you.
      How can I help you?
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"order"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Place an order&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"question"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Have a question&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Welcome&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-placeanordertsx"&gt;
  &lt;/a&gt;
  2. PlaceAnOrder.tsx
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Reply&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@botonic/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PlaceAnOrder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Nice, what do you want to eat today?
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"hamburger"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hamburger&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"pizza"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Pizza&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"sandwich"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Sandwich&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"taco"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Taco&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"burrito"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Burrito&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;PlaceAnOrder&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3-vegornonvegtsx"&gt;
  &lt;/a&gt;
  3. VegOrNonVeg.tsx
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Reply&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@botonic/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Nice, do you want Veg or Non-veg?
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"veg"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Veg&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"nonveg"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Non-Veg&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#4-orderdonetsx"&gt;
  &lt;/a&gt;
  4. OrderDone.tsx
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Reply&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@botonic/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Thanks for your order. Delivery boy will knock your door within 30mins.
      Here's his contact, name: "Manash Sarma" and phone: "+91 9876543210".
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      For contacting our manager, 
      Here's his contact, name: "SilvenLEAF" and phone: "+91 0123456789".
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"contact"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Contact Delivery Boy&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"contact"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Contact Manager&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#5-haveaquestiontsx"&gt;
  &lt;/a&gt;
  5. HaveAQuestion.tsx
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Reply&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@botonic/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HaveAQuestion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Nice, what question do you have?
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"order"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;See the food menu&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"contactDelivery"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Where is my order?&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"contactDelivery"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Track my order&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"contactManager"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I want to contact the delivery boy&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"contactManager"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I want to contact the manager&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"contactDelivery"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I have a complaint&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;HaveAQuestion&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#6-contactdeliverytsx"&gt;
  &lt;/a&gt;
  6. ContactDelivery.tsx
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Reply&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@botonic/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ContactDelivery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      I've informed our delivery boy, he'll call you back within 5 mins.
      If not, you can contact him here

      Here's his contact, name: "Manash Sarma" and phone: "+91 9876543210".
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Thanks, wish you a delicious day!!
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mainMenu"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Go to main menu&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"foodMenu"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;See food menu&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ContactDelivery&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#7-contactmanagertsx"&gt;
  &lt;/a&gt;
  7. ContactManager.tsx
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Reply&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@botonic/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ContactManager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      I've informed our manager, he'll call you back within 5 mins.
      If not, you can contact him here

      Here's his contact, name: "SilvenLEAF" and phone: "+91 0123456789".
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Thanks, wish you a delicious day!!
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mainMenu"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Go to main menu&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"foodMenu"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;See food menu&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Reply&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ContactManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After all that done, update the &lt;strong&gt;"routes.ts"&lt;/strong&gt; with this following content&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#8-routestsx"&gt;
  &lt;/a&gt;
  8. routes.tsx
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Reply&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@botonic/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Welcome&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./actions/Welcome&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;HaveAQuestion&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./actions/HaveAQuestion&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;PlaceAnOrder&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./actions/PlaceAnOrder&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./actions/VegOrNonVeg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;OrderDone&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./actions/OrderDone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ContactDelivery&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./actions/ContactDelivery&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ContactManager&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./actions/ContactManager&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;vegOrNonVegRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;order-done&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;veg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;OrderDone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;order-done&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nonveg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;OrderDone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;initial&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/hi/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Welcome&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="na"&gt;childRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;have-a-question&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/question/gi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;question&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HaveAQuestion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;place-an-order&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;order&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PlaceAnOrder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="na"&gt;childRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;veg-or-nonveg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hamburger&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

            &lt;span class="na"&gt;childRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;vegOrNonVegRoutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;veg-or-nonveg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pizza&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

            &lt;span class="na"&gt;childRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;vegOrNonVegRoutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;veg-or-nonveg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sandwich&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

            &lt;span class="na"&gt;childRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;vegOrNonVegRoutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;veg-or-nonveg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;taco&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

            &lt;span class="na"&gt;childRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;vegOrNonVegRoutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;veg-or-nonveg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;burrito&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

            &lt;span class="na"&gt;childRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;vegOrNonVegRoutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;  
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;contact-manager&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;contact&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;manager&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/gi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;contactManager&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ContactManager&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;contact-delivery&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;contactDelivery&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;((&lt;/span&gt;&lt;span class="sr"&gt;contact&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;delivery&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;|&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;where is my order|track my order&lt;/span&gt;&lt;span class="se"&gt;))&lt;/span&gt;&lt;span class="sr"&gt;/gi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ContactDelivery&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;go-to-main-menu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/main menu/gi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mainMenu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;initial&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;go-to-food-menu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;what|what's&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;food&lt;/span&gt;&lt;span class="se"&gt;)?(&lt;/span&gt;&lt;span class="sr"&gt;menu&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/gi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foodMenu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;place-an-order&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;place-an-order&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;order&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;make|place&lt;/span&gt;&lt;span class="se"&gt;)?(&lt;/span&gt;&lt;span class="sr"&gt;an&lt;/span&gt;&lt;span class="se"&gt;)?(&lt;/span&gt;&lt;span class="sr"&gt;order&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/gi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PlaceAnOrder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="na"&gt;childRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;veg-or-nonveg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hamburger&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="na"&gt;childRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;vegOrNonVegRoutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;veg-or-nonveg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pizza&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="na"&gt;childRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;vegOrNonVegRoutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;veg-or-nonveg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sandwich&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="na"&gt;childRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;vegOrNonVegRoutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;veg-or-nonveg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;taco&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="na"&gt;childRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;vegOrNonVegRoutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;veg-or-nonveg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;burrito&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;VegOrNonVeg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="na"&gt;childRoutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;vegOrNonVegRoutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yay!! With all that done our bot is ready to take orders!! Go and enjoy playing with the bot!!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#final-bot-screenshots"&gt;
  &lt;/a&gt;
  Final BOT Screenshots
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PQWa0j7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93svnhz3t4dq5gfueayh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PQWa0j7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93svnhz3t4dq5gfueayh.png" alt="Demo 01" width="489" height="727"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZcDCNs0Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7k4xiyi43vg2onmydgdj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZcDCNs0Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7k4xiyi43vg2onmydgdj.png" alt="Demo 02" width="481" height="700"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fhcvWE0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r0ggg1xtyqlg6y0rqz63.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fhcvWE0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r0ggg1xtyqlg6y0rqz63.png" alt="Demo 03" width="481" height="702"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A1UC4TGu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ok2q2doqy3w09aaz0hin.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A1UC4TGu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ok2q2doqy3w09aaz0hin.png" alt="Demo 04" width="486" height="703"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mGg52ZQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9sb0kmmj8htzl7fp3map.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mGg52ZQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9sb0kmmj8htzl7fp3map.png" alt="Demo 05" width="501" height="715"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uro8fW0c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9h7ukqgwl0sug92o2t9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uro8fW0c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9h7ukqgwl0sug92o2t9.png" alt="Demo 06" width="475" height="709"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W1POGzLw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pix6gr47ucdid7lij7sx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W1POGzLw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pix6gr47ucdid7lij7sx.png" alt="Demo 07" width="487" height="711"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--psizqNXf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/49wz6wmh74rae5ikwips.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--psizqNXf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/49wz6wmh74rae5ikwips.png" alt="Demo 08" width="483" height="711"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iWxq3ps1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jonxz9bilhjur5vcsfbt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iWxq3ps1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jonxz9bilhjur5vcsfbt.png" alt="Demo 09" width="484" height="709"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-5-making-the-bot-production-level"&gt;
  &lt;/a&gt;
  Step 5: Making the bot Production Level
&lt;/h3&gt;

&lt;p&gt;You can make it dynamic and production level like this...&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Retrive the food menu from your Backend Server, and show it dynamically&lt;/li&gt;
&lt;li&gt;When the user places an order, make a Backend request and handle the order&lt;/li&gt;
&lt;li&gt;You can ask for the user's contact information and contact him&lt;/li&gt;
&lt;li&gt;Show the prices for the orders as well&lt;/li&gt;
&lt;li&gt;You can integrate LUIS (Language Understanding Inteligence) and understand what the user is trying to say more accurately for whatever input they give&lt;/li&gt;
&lt;li&gt;You can integrate QnAMaker to make the bot answer any  question the user asks&lt;/li&gt;
&lt;li&gt;You can also use Botonic's own NLU (Natural Language Understanding) instead of LUIS&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Anyway, integrating Backend and with the unlimited power of TypeScript/JavaScript, you can literally do anything with your user&lt;/p&gt;

&lt;p&gt;So have fun!! Did you enjoy it? Let me know in the comments. Also let me know if you want more of these kinds of project oriented blogs.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-6-where-to-test-this-bot"&gt;
  &lt;/a&gt;
  Step 6: Where to test this bot?
&lt;/h3&gt;

&lt;p&gt;Here is the github repo, you can clone it and run, or you can try using this following link to test it live.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#github-repo"&gt;
  &lt;/a&gt;
  Github REPO:
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://github.com/SilvenLEAF/RestaurantReceptionistBOT"&gt;https://github.com/SilvenLEAF/RestaurantReceptionistBOT&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#test-it-live"&gt;
  &lt;/a&gt;
  Test it LIVE
&lt;/h4&gt;

&lt;p&gt;Currently Botonic has &lt;a href="https://github.com/hubtype/botonic/issues/1811"&gt;a bug in their CLI&lt;/a&gt; and not letting us depoy it, once the &lt;a href="https://github.com/hubtype/botonic/issues/1811"&gt;bug&lt;/a&gt; is fixed, I'll deploy and update this blog.&lt;br&gt;
&lt;strong&gt;[LIVE Link will come here]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Anyway, if you are curious on how to deploy it, the process is like this&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#step-7-how-to-deploy-the-bot"&gt;
  &lt;/a&gt;
  Step 7: How to deploy the bot?
&lt;/h3&gt;

&lt;p&gt;From your project terminal type this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;botonic deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It'll prompt you with this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BcQvGKdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hw3dkei4hw4ys5alp9jt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BcQvGKdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hw3dkei4hw4ys5alp9jt.png" alt="Deploy 01" width="825" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you already have a &lt;strong&gt;"HubType"&lt;/strong&gt; account, select &lt;strong&gt;"Login"&lt;/strong&gt;. But I don't have it yet, so let's create one&lt;/p&gt;

&lt;p&gt;I'll select &lt;strong&gt;"Signup"&lt;/strong&gt;. After selecting "Signup" and clicking enter, it'll ask for your email, aftering entering your email, it'll ask you to enter your password.&lt;/p&gt;

&lt;p&gt;Then you'll see this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uke6jJ7m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubafn068hzjysd9m4z8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uke6jJ7m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubafn068hzjysd9m4z8u.png" alt="Deploy 02" width="880" height="256"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you select your bot, it'll be deployed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Currently there is a bug here. We can not select any bot, also we can not type a bot name here.&lt;/p&gt;

&lt;p&gt;You can also try this command alternatively&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;botonic deploy &lt;span class="nt"&gt;-b&lt;/span&gt; YOUR_BOT_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Normally it should work, but due to current bug, it will throw this error&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Bot YOUR_BOT_NAME doesn't exist
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#here-is-the-github-issue-link"&gt;
  &lt;/a&gt;
  HERE is the Github issue Link
&lt;/h4&gt;

&lt;p&gt;Here is the link for the bug issue that is still open&lt;br&gt;
&lt;a href="https://github.com/hubtype/botonic/issues/1811"&gt;https://github.com/hubtype/botonic/issues/1811&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;But anyway, don't let this little thing stop you from exploring this amazing framework.&lt;/p&gt;

&lt;p&gt;It's relatively new and still in its development stage, so it's expectable. But it sure is amazing. You can try it yourself!!&lt;/p&gt;

&lt;p&gt;Wish this little bug gets resolved soon!!&lt;/p&gt;

&lt;p&gt;Hope you liked this. Let me know in the comments. Also let me know if you want more of these kinds of project oriented blogs.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;NEXT blog is coming by December 12th&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's NEXT?
&lt;/h1&gt;

&lt;h4&gt;
  &lt;a href="#1-more-on-chatbots"&gt;
  &lt;/a&gt;
  1. More on Chatbots
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#2-more-on-devops"&gt;
  &lt;/a&gt;
  2. More on DevOps
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#3-improved-ai-bot-that-can-do-anything"&gt;
  &lt;/a&gt;
  3. Improved AI BOT that can do anything
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#4-insane-stuff-with-javascripttypescript"&gt;
  &lt;/a&gt;
  4. Insane stuff with JavaScript/TypeScript
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#5-debugging-typescript-with-vs-code-debugger"&gt;
  &lt;/a&gt;
  5. Debugging TypeScript with VS Code Debugger
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#6-writing-automated-tests-for-any-server"&gt;
  &lt;/a&gt;
  6. Writing Automated Tests for any Server
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#7-how-to-create-an-android-app-with-no-xp"&gt;
  &lt;/a&gt;
  7. How to create an Android APP with NO XP
&lt;/h4&gt;

&lt;p&gt;(including apk generating)&lt;/p&gt;

</description>
      <category>silvenleaf</category>
      <category>javascript</category>
      <category>typescript</category>
      <category>chatbot</category>
    </item>
    <item>
      <title>Creating a Pac-Man themed divider in CSS</title>
      <author>Chris Bongers</author>
      <pubDate>Sat, 04 Dec 2021 10:07:24 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/creating-a-pac-man-themed-divider-in-css-50j0</link>
      <guid>https://dev.to/dailydevtips1/creating-a-pac-man-themed-divider-in-css-50j0</guid>
      <description>&lt;p&gt;I'm sure you're all aware of Pac-Man, the famous yellow ball that eats dots and gets chased by ghosts.&lt;/p&gt;

&lt;p&gt;I wanted to try and make a cool little &lt;code&gt;HTML&lt;/code&gt; divider that represents the feeling of this fantastic game.&lt;/p&gt;

&lt;p&gt;The end result will look like this:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rebelchris/embed/rNzbbeg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-divider-structure"&gt;
  &lt;/a&gt;
  Setting up the divider structure
&lt;/h2&gt;

&lt;p&gt;Let's get started by setting up our basic structure.&lt;br&gt;
A divider in &lt;code&gt;HTML&lt;/code&gt; is often represented by a &lt;code&gt;&amp;lt;hr /&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;Which is a thematic break (Horizontal Rule) and can be ideally used to divide content.&lt;/p&gt;

&lt;p&gt;So for our &lt;code&gt;HTML&lt;/code&gt; section, all we need is the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;hr&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's add some styling to it. I've decided to make my page black, so the effect shows a bit better.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And for the &lt;code&gt;hr&lt;/code&gt; we want to remove the default border and introduce a single border that will be our dots as seen in the Pac-Man game.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.3rem&lt;/span&gt; &lt;span class="nb"&gt;dotted&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So far, we should see the following result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T-RdeQkV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637643235880/TL93ju4gu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T-RdeQkV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637643235880/TL93ju4gu.png" alt="Pac-Man divider hr" width="382" height="84"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It might already start to look familiar, right?&lt;/p&gt;

&lt;p&gt;Now let's add our Pac-Man character into the mix.&lt;br&gt;
For this will use the &lt;a href="https://daily-dev-tips.com/posts/css-pseudo-elements/#heading-before-pseudo-element"&gt;&lt;code&gt;:before&lt;/code&gt; pseudo-element&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;hr&lt;/span&gt;&lt;span class="nd"&gt;:before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;move&lt;/span&gt; &lt;span class="m"&gt;10s&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='571.11' width='541.6'%3E%3Cpath style='fill:%23ffcc00' d='M535.441,412.339A280.868,280.868 0 1,1 536.186,161.733L284.493,286.29Z'/%3E%3C/svg%3E")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;22px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;24px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's quite a lot going on, so let's break it down a little bit more.&lt;/p&gt;

&lt;p&gt;First, we add an animation called &lt;code&gt;move&lt;/code&gt;. This animation runs forever and lasts 10 seconds.&lt;/p&gt;

&lt;p&gt;Then we make this &lt;code&gt;:before&lt;/code&gt; an absolute positioned element and set all sides to zero.&lt;/p&gt;

&lt;p&gt;The Pac-Man itself is set as the background image, using an encoded SVG.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can use the &lt;a href="https://yoksel.github.io/url-encoder/"&gt;following site to encode SVG's&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And then, we set some background properties to show the initial state correctly.&lt;/p&gt;

&lt;p&gt;Small note, the &lt;code&gt;content: ' '&lt;/code&gt; is mandatory for a pseudo-element to show.&lt;/p&gt;

&lt;p&gt;Now we should see our Pac-Man at the end of our horizontal line.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0OK1bbW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637643801463/V00aoBOr9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0OK1bbW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637643801463/V00aoBOr9.png" alt="Pac-Man not moving yet" width="464" height="64"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We'll get to the moving part. Let's first introduce the ghost!&lt;br&gt;
For this, we will leverage the &lt;a href="https://daily-dev-tips.com/posts/css-pseudo-elements/#heading-after-pseudo-element"&gt;&lt;code&gt;:after&lt;/code&gt; pseudo element&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;hr&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;move&lt;/span&gt; &lt;span class="m"&gt;10s&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg version='1.1' viewBox='0 0 400 444.34' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill-rule='evenodd'%3E%3Cpath d='...")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;24px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;24px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, it's pretty much the same concept. However, we added a &lt;code&gt;1s&lt;/code&gt; delay to the animation, causing the animation of the ghost to be a bit delayed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: I cut down the SVG for display purposes. You can find the full one on the CodePen linked on top&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now all that's left to do is introduce the move animation, which will be as simple as this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;move&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And there you go, a super cool yet simple Pac-Man-themed divider.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
    </item>
    <item>
      <title>Day 55 of 100 Days of Code &amp; Scrum: Eighth Weekly Retrospective (RIP my streak)</title>
      <author>Rammina</author>
      <pubDate>Sat, 04 Dec 2021 10:06:36 +0000</pubDate>
      <link>https://dev.to/rammina/day-55-of-100-days-of-code-scrum-eighth-weekly-retrospective-rip-my-streak-49e3</link>
      <guid>https://dev.to/rammina/day-55-of-100-days-of-code-scrum-eighth-weekly-retrospective-rip-my-streak-49e3</guid>
      <description>&lt;p&gt;Happy weekend, everyone!&lt;/p&gt;

&lt;p&gt;This week may have been the least productive one during my entire &lt;a href="https://dev.to/rammina/100-days-of-code-and-scrum-a-new-challenge-24lp"&gt;challenge&lt;/a&gt;. My 51-day streak also ended this week, and I took a two-day break. I just try not to be too hard on myself, because I had personal issues getting in the way. I can still somehow make up for it in the coming weeks.&lt;/p&gt;

&lt;p&gt;Let's move on to my weekly retrospective!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-sprint-goals"&gt;
  &lt;/a&gt;
  Weekly Sprint Goals
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;fix the bugs in my company website.&lt;/li&gt;
&lt;li&gt;deploy my company website after cleaning everything up.&lt;/li&gt;
&lt;li&gt;after the website, learn Ghost so I can use it to build my personal blog.&lt;/li&gt;
&lt;li&gt;continue to learn Next.js and Typescript by using concepts while I build my website or maybe just from reading documentations.&lt;/li&gt;
&lt;li&gt;continue studying for Professional Scrum Master I (PSM I) certification.&lt;/li&gt;
&lt;li&gt;continue networking, but allocate less time to this (coding is more important).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#weekly-review"&gt;
  &lt;/a&gt;
  Weekly Review
&lt;/h2&gt;

&lt;p&gt;Here are the things I've managed to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;fix remaining bugs in my company website.&lt;/li&gt;
&lt;li&gt;deployed my &lt;a href="https://www.rammina.com/"&gt;company website's homepage&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;learned about Ghost, particularly a Jamstack setup using Next.js frontend deployed on Vercel and Ghost on Heroku as my headless CMS.&lt;/li&gt;
&lt;li&gt;discovered various features in Next.js and Vercel, such as zones, Image Optimization, blurDataURL, and monorepos.&lt;/li&gt;
&lt;li&gt;continue my studies for PSM I (not by much).&lt;/li&gt;
&lt;li&gt;expanded my network.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;...I guess it wasn't really that bad?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-retrospective"&gt;
  &lt;/a&gt;
  Weekly Retrospective
&lt;/h2&gt;

&lt;p&gt;Moving on, let's tackle what I've managed to do well, what my shortcomings are, and what I could do better next time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-went-great"&gt;
  &lt;/a&gt;
  What Went Great
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I successfully deployed my business page.&lt;/li&gt;
&lt;li&gt;learn plenty regarding Ghost.&lt;/li&gt;
&lt;li&gt;enhanced my knowledge in Next.js and Vercel.&lt;/li&gt;
&lt;li&gt;expanded my network a little bit more.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#some-mistakes-ive-made"&gt;
  &lt;/a&gt;
  Some Mistakes I've Made
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;broke my coding streak and lost my momentum.&lt;/li&gt;
&lt;li&gt;I pretty much neglected a lot of things that had little to nothing to do with my website.&lt;/li&gt;
&lt;li&gt;learned almost nothing new about Typescript and Scrum this week.&lt;/li&gt;
&lt;li&gt;got distracted at times and couldn't focus much.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#things-i-could-improve-on"&gt;
  &lt;/a&gt;
  Things I Could Improve On
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;learn a little bit even if it's not much, on bad days.&lt;/li&gt;
&lt;li&gt;should probably do just a little bit more of activities related to my secondary goals.&lt;/li&gt;
&lt;li&gt;prioritize tasks that are more likely to help me meet my weekly goals.&lt;/li&gt;
&lt;li&gt;I should DEFINITELY install something that blocks me from checking certain sites at a specific time.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ghost.org/docs/content-api/"&gt;Content API | Ghost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/docs/basic-features/environment-variables"&gt;Environment Variables | Next.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/docs/deployment"&gt;Deployment | Next.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/intro.html"&gt;The Typescript Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for the support, everyone! Enjoy your weekend!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Rammina Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://www.rammina.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BK-zilS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1638444046/rammina-button-128_x9ginu.png" alt="Rammina Logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Introduction to Ruby on Rails and Dockerfile</title>
      <author>Amree Zaid</author>
      <pubDate>Sat, 04 Dec 2021 09:51:12 +0000</pubDate>
      <link>https://dev.to/amree/introduction-to-ruby-on-rails-and-dockerfile-5a29</link>
      <guid>https://dev.to/amree/introduction-to-ruby-on-rails-and-dockerfile-5a29</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction-to-ruby-on-rails-and-dockerfile"&gt;
  &lt;/a&gt;
  Introduction to Ruby on Rails and Dockerfile
&lt;/h1&gt;

&lt;p&gt;I think everyone knows by now how good Docker is in making sure we have &lt;em&gt;almost&lt;/em&gt; the same setup everywhere. However, I think it is not easy as everyone thought for people new to it. There are just so many questions that I have to the point they discouraged me from using it as my daily driver.&lt;/p&gt;

&lt;p&gt;I decided to spend some time to look into this and document this journey through this blog post. I hope this will help me and you in learning this awesome service. There will be more after this, but we will start with this one first.&lt;/p&gt;

&lt;p&gt;At the end of this blog post, you will be able to run a Ruby on Rails application with a working asset compilation using just a &lt;code&gt;Dockerfile&lt;/code&gt;. We will be using SQLite first for now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-dockerfile"&gt;
  &lt;/a&gt;
  Using Dockerfile
&lt;/h2&gt;

&lt;p&gt;Let us start with a simple &lt;code&gt;Dockerfile&lt;/code&gt;. You can create a directory and place this file there. Right now, we just want to create a new Rails application without installing the rails gem on our local machine.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="c"&gt;# Dockerfile&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ruby:2.6.3&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; &lt;span class="nt"&gt;--no-install-recommends&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;  curl build-essential libpq-dev &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;  curl &lt;span class="nt"&gt;-sL&lt;/span&gt; https://deb.nodesource.com/setup_10.x | bash - &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;  curl &lt;span class="nt"&gt;-sS&lt;/span&gt; https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"deb https://dl.yarnpkg.com/debian/ stable main"&lt;/span&gt; | &lt;span class="nb"&gt;tee&lt;/span&gt; /etc/apt/sources.list.d/yarn.list &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;  apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;  apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; nodejs yar

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;gem &lt;span class="nb"&gt;install &lt;/span&gt;rails bundler

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; ["/bin/bash"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will go through this file line by line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ruby:2.6.3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will pull an image from &lt;a href="https://hub.docker.com/_/ruby"&gt;DockerHub&lt;/a&gt; and use it as the base. This particular line will pull the image tagged as &lt;code&gt;2.6.3&lt;/code&gt;, which is not listed on the main page. However, you can always look it up from the Tags page.&lt;/p&gt;

&lt;p&gt;There are still many variants that you can choose from. That will determine the size of your local image and the library that is loaded with it.&lt;/p&gt;

&lt;p&gt;I also learnt that once you build the image using that base, you can only clear it using &lt;code&gt;docker builder prune&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;RUN &lt;/span&gt;apt-get update ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This line will install all of our required libraries in order to make sure we can run what we want. Try not to install unnecessary applications/services to reduce the image size.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will set &lt;code&gt;/app&lt;/code&gt; as our default directory. Every subsequent command will be run from that directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; ["/bin/bash"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the command that will be executed when we run the container. In this case, we need access to &lt;code&gt;bash&lt;/code&gt; first so that we can create a new rails application and install all the required gems.&lt;/p&gt;

&lt;p&gt;Let's build the container for the first time:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whenever we build the image, we need to tag it using &lt;code&gt;-t&lt;/code&gt;. We also need to supply the &lt;code&gt;Dockerfile&lt;/code&gt; but we can just &lt;code&gt;.&lt;/code&gt; and docker will find the file on its own.&lt;/p&gt;

&lt;p&gt;We will see the base image is downloaded and cached. It may take some time for the first time, but it will be faster once everything is cached.&lt;/p&gt;

&lt;p&gt;Since we need to create a new Rails application, we will interact with the container:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;--rm&lt;/code&gt; will ensure there will be no unused container once we exit from it. We can verify it using &lt;code&gt;docker container ls&lt;/code&gt;. &lt;code&gt;-it&lt;/code&gt; is actually &lt;code&gt;--interactive + --tty&lt;/code&gt; and it is for to interact with the container. The explanation is a bit long, but we can read it from these pages (&lt;a href="https://stackoverflow.com/a/59965320/113573"&gt;1&lt;/a&gt;, &lt;a href="https://stackoverflow.com/a/22287905/113573"&gt;2&lt;/a&gt;). The &lt;code&gt;blog&lt;/code&gt; param is just the image name that was created using &lt;code&gt;docker build&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once we got it, we realize we don't have anything yet, so, we need to create the Rails application with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;rails new &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once everything is installed and you exit the container, you will realize the Rails application you generated is not available in your local copy. It is also not available in your docker container if you use the &lt;code&gt;docker run&lt;/code&gt; again. Obviously, we don't want to keep on creating a new Rails application. &lt;/p&gt;

&lt;p&gt;Create another directory in the same level as the &lt;code&gt;Dockerfile&lt;/code&gt; called &lt;code&gt;blog&lt;/code&gt;. This directory will be mapped to &lt;code&gt;/app&lt;/code&gt; in our container.&lt;/p&gt;

&lt;p&gt;We can use volume for this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="nt"&gt;-v&lt;/span&gt; /local/path/to/blog:/app blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This time, we can create a Rails application with &lt;code&gt;rails new .&lt;/code&gt; from within the container itself and it will be persisted in our local copy as well. Any changes made from our machine (the host) and the container will be reflected on both sides.&lt;/p&gt;

&lt;p&gt;Once that is done, try exiting and entering your container again. We will realize &lt;code&gt;rails -v&lt;/code&gt; will throw us an error saying we are missing lots of gems. This is happening because our gem installation wasn't persisted. In order to fix this, we can use the volume feature again. &lt;/p&gt;

&lt;p&gt;This time, we won't be mounting from our local directory just like we did with our Rails application, instead, it will be created first and then we will supply it as one of the arguments:&lt;/p&gt;

&lt;p&gt;We just need to specify a new volume name and it will be created automatically and in this case, we are using &lt;code&gt;bundle&lt;/code&gt; as the volume name:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; /local/path/to/blog:/app &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; bundle:/bundle &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;BUNDLE_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/bundle &lt;span class="se"&gt;\&lt;/span&gt;
  blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;BUNDLE_PATH&lt;/code&gt; is just an environment variable that is used by &lt;code&gt;ruby&lt;/code&gt; to install the bundled gems. Just do &lt;code&gt;bundle&lt;/code&gt; and exit once it's done. Run the container with the same command and &lt;code&gt;rails -v&lt;/code&gt; won't give us any error.&lt;/p&gt;

&lt;p&gt;Run this command to finish setting up our Rails application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;rails db:create db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Normally we can just use &lt;code&gt;rails s&lt;/code&gt; to access our welcome page, but we can't yet as there is no way we can access it from the host. In order to solve this, we need to expose a port when we run the container:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; /local/path/to/blog:/app &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; bundle:/bundle &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;BUNDLE_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/bundle &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-p&lt;/span&gt; 3000:3000
  blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to start our server using &lt;code&gt;rails -b 0.0.0.0&lt;/code&gt; as we want it to be accessible to the host as well. You should be able to see the Welcome page now when you open &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We need to use this line in order to get the &lt;code&gt;docker run&lt;/code&gt; to run the rails server automatically without going into the &lt;code&gt;bash&lt;/code&gt; first anymore:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ENTRYPONT &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"/bin/bash"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="c"&gt;# vs&lt;/span&gt;
CMD &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"rails"&lt;/span&gt;, &lt;span class="s2"&gt;"server"&lt;/span&gt;, &lt;span class="s2"&gt;"-b"&lt;/span&gt;, &lt;span class="s2"&gt;"0.0.0.0"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I think this &lt;a href="https://stackoverflow.com/a/34245657/113573"&gt;answer&lt;/a&gt; explained about &lt;code&gt;ENTRYPOINT&lt;/code&gt; vs &lt;code&gt;CMD&lt;/code&gt; pretty well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#webpacker"&gt;
  &lt;/a&gt;
  webpacker
&lt;/h3&gt;

&lt;p&gt;I didn't manage to get this working on the first try due to the lack of knowledge on how docker and webpacker works. But, you guys are lucky because I have the summary on how to get it to work.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;./bin/webpack-dev/server&lt;/code&gt; that compiles our asset is serving the files from the memory, not from our file system. However, it writes to &lt;code&gt;public/packs/manifest.json&lt;/code&gt; if it doesn't exist or maybe during the update as well.&lt;/p&gt;

&lt;p&gt;Without a working &lt;code&gt;webpacker&lt;/code&gt;, you might run into a situation where the &lt;code&gt;rails server&lt;/code&gt; is the one doing the compilation which is slow and wrong.&lt;/p&gt;

&lt;p&gt;Normally, both of them would run in the same host, but with docker, you are running them in different containers. So, we need to ensure the webpacker and web containers can connect with each other.&lt;/p&gt;

&lt;p&gt;If we don't specify any network when we run our docker container, it will be connected to the &lt;code&gt;bridge&lt;/code&gt; network by default. You can connect to another container using the IP but not through the container name. To fix this, you need to create a different network:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network create blog-net &lt;span class="c"&gt;# bridge driver by default&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to update our &lt;code&gt;config/webpacker.yml&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;development:
  dev_server:
    host: webpacker &lt;span class="c"&gt;# change to this from "localhost"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once that is done, we need to update our &lt;code&gt;docker run commands&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# for webpacker&lt;/span&gt;
docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; /local/path/to/blog:/app &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; bundle:/bundle &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;BUNDLE_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/bundle &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;NODE_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;development &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;RAILS_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;development &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-p&lt;/span&gt; 3035:3035 &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="c"&gt;# needed for auto reload page&lt;/span&gt;
  &lt;span class="nt"&gt;--network&lt;/span&gt; blog-net &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--name&lt;/span&gt; webpacker &lt;span class="se"&gt;\&lt;/span&gt;
  blog &lt;span class="se"&gt;\&lt;/span&gt;
  bin/webpack-dev-server

&lt;span class="c"&gt;# for rails&lt;/span&gt;
docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; /local/path/to/blog:/app &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; bundle:/bundle &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;BUNDLE_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/bundle &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-p&lt;/span&gt; 3000:3000 &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--network&lt;/span&gt; blog-net &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--name&lt;/span&gt; web &lt;span class="se"&gt;\&lt;/span&gt;
  blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main reason for these changes is to ensure our &lt;code&gt;rails&lt;/code&gt; container can access &lt;code&gt;webpacker&lt;/code&gt; container. Confused about the network part? I did and this &lt;a href="https://docs.docker.com/network/network-tutorial-standalone/"&gt;tutorial&lt;/a&gt; helped me a lot.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tips"&gt;
  &lt;/a&gt;
  Tips
&lt;/h3&gt;

&lt;p&gt;Some other tips that I discovered:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;rails&lt;/code&gt; is not in &lt;code&gt;/bundle&lt;/code&gt; but it is in the original directory which is &lt;code&gt;/usr/local/bundle&lt;/code&gt;. I think this is because of the base image. Then, this raises another question which is how do we upgrade rails themselves?&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can override the &lt;code&gt;ENTRYPOINT&lt;/code&gt; with:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; blog command-to-override
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This also means we can use it to run other rails command such as &lt;code&gt;rails db:migrate&lt;/code&gt;, &lt;code&gt;rails g scaffold&lt;/code&gt; and so on.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you don't want to kill the container when exiting it, you can use &lt;code&gt;Ctrl + P, Ctrl + Q&lt;/code&gt;. After that, you can use &lt;code&gt;docker attach container-name&lt;/code&gt; to get in again.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dockercompose"&gt;
  &lt;/a&gt;
  docker-compose
&lt;/h2&gt;

&lt;p&gt;As we have noticed, the &lt;code&gt;docker run&lt;/code&gt; command is getting longer. It doesn't make sense to keep on passing that command to everyone. What about the database? Webpack? Etc. As the title said, we can use &lt;code&gt;docker-compose&lt;/code&gt; to improve our docker experience. &lt;/p&gt;

&lt;p&gt;I will talk about it in the next post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/tsftech/how-to-fully-utilise-docker-compose-during-development-4b723caed798"&gt;https://medium.com/tsftech/how-to-fully-utilise-docker-compose-during-development-4b723caed798&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/swlh/docker-caching-introduction-to-docker-layers-84f20c48060a"&gt;https://medium.com/swlh/docker-caching-introduction-to-docker-layers-84f20c48060a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/painless-rails-development-environment-setup-with-docker/"&gt;https://www.freecodecamp.org/news/painless-rails-development-environment-setup-with-docker/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.plymouthsoftware.com/articles/dockerising-webpacker"&gt;https://www.plymouthsoftware.com/articles/dockerising-webpacker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rails/webpacker/issues/1019#issuecomment-351066969"&gt;https://github.com/rails/webpacker/issues/1019#issuecomment-351066969&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/network/network-tutorial-standalone/"&gt;https://docs.docker.com/network/network-tutorial-standalone/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>docker</category>
      <category>rails</category>
    </item>
    <item>
      <title>Why Frontend Developers Should Learn Firebase in 2022</title>
      <author>javinpaul</author>
      <pubDate>Sat, 04 Dec 2021 09:38:50 +0000</pubDate>
      <link>https://dev.to/javinpaul/why-frontend-developers-should-learn-firebase-in-2022-1kga</link>
      <guid>https://dev.to/javinpaul/why-frontend-developers-should-learn-firebase-in-2022-1kga</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, if you are thinking to learn Firebase but not sure whether you should go for it or not then you have come to the right place. Earlier, I have shared &lt;a href="https://javarevisited.blogspot.com/2020/03/top-5-courses-to-learn-firebase-in-2020.html"&gt;best Firebase courses&lt;/a&gt; and today I will tell you why Frontend developers, both web developers and app developer should Learn Firebase in 2022.&lt;/p&gt;

&lt;p&gt;What are the benefits of Firebase and how it can make you a more competent frontend developer. While Firebase is around for quite some time, it really got traction in the last couple of years after the popularity of Google Cloud Platform increased, and several other Firebase services were introduced. &lt;/p&gt;

&lt;p&gt;If you are really &lt;a href="https://javarevisited.blogspot.com/2018/08/top-5-react-js-and-redux-courses-to-learn-online.html#axzz5r06B3egD"&gt;React.js&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2018/06/5-best-courses-to-learn-angular.html"&gt;Angular&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2019/08/top-5-online-courses-to-learn-vue.js-best.html"&gt;Vue.js&lt;/a&gt;, or any other front-end development framework, you will benefit from Firebase. &lt;/p&gt;

&lt;p&gt;It provides an online, free database and several other useful services like FireStore, FireAuth, and Firebase Cloud function. Firebase is equally useful for Mobile developers as well as people using &lt;a href="https://medium.com/javarevisited/top-5-online-courses-to-learn-ios-12-swift-in-2019-a35ae1be7b2b"&gt;Swift&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2019/01/top-5-ios-developer-course-to-learn-ios.html"&gt;iOS&lt;/a&gt;, and &lt;a href="https://medium.com/hackernoon/top-5-courses-to-learn-android-for-java-programmers-667e03d995b4"&gt;Android&lt;/a&gt; to create mobile apps. They can also use Firebase services to create the backend for their application.&lt;/p&gt;

&lt;p&gt;More often than not Frontend developers stuck if there is no API to consume, they need an API to download data, authenticate the user and make payments and if that's not available then they don't make progress.&lt;/p&gt;

&lt;p&gt;While many companies have both &lt;a href="https://medium.com/javarevisited/top-10-frameworks-full-stack-java-developers-can-learn-in-2020-5995021401e5"&gt;frontend and backend developers&lt;/a&gt; which work in tandem but for POC and demo, you feel stuck when there is no backend developer and you don't know how to set up the backend. Firebase solves that problem by providing you a &lt;strong&gt;database&lt;/strong&gt; and &lt;strong&gt;pre-built APIs&lt;/strong&gt;, and Authentication and Payment support.&lt;/p&gt;

&lt;p&gt;And, I can say from my experience that if you can handle CRUD, authentication, and payment then you are more or less can do POC for any application.&lt;/p&gt;

&lt;p&gt;In this article, I am going to tell you &lt;strong&gt;why frontend and mobile developers should learn Firebase&lt;/strong&gt; and how it can help them to quickly create a web application or mobile apps in 2022.&lt;/p&gt;

&lt;p&gt;I first come to know about &lt;a href="https://javarevisited.blogspot.com/2020/03/top-5-courses-to-learn-firebase-in-2020.html"&gt;Firebase&lt;/a&gt; when I was learning &lt;a href="https://javarevisited.blogspot.com/2019/08/top-5-online-courses-to-learn-vue.js-best.html"&gt;Vue.js&lt;/a&gt; and looking for a public API to develop my application. &lt;/p&gt;

&lt;p&gt;I end up using Github User API, which was good for loading users and showing their repositories but you don't have control over data, Firebase allows that to you.&lt;/p&gt;

&lt;p&gt;By the way, if you are also learning Vue.js and want to use Firebase for backend then you should check out &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fbuild-web-apps-with-vuejs-firebase%2F"&gt;&lt;strong&gt;Build Web Apps with Vue JS 2 &amp;amp; Firebase&lt;/strong&gt;&lt;/a&gt; course by Shaun Pelling, better known as The Net Ninja on Udemy and Youtube.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fbuild-web-apps-with-vuejs-firebase%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gDSAfnDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/600/1%2AtMQzjqwzmhLS12xUUgyeKA.png" alt="best course to learn Firebase for beginners" width="600" height="320"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-firebase"&gt;
  &lt;/a&gt;
  What is Firebase?
&lt;/h2&gt;

&lt;p&gt;If you don't know, Firebase is an online, free service provided by Google which acts as a very feature-rich, fully-fledged back-end to both mobile and web applications. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://javarevisited.blogspot.com/2019/05/top-5-html-5-and-css-3-courses-for-web-developers.html"&gt;Frontend Developers&lt;/a&gt; can use Firebase to store and retrieve data to and from a NoSQL database called &lt;strong&gt;Firestore&lt;/strong&gt;, as well as to authenticate their app's users with the Firebase Auth service.&lt;/p&gt;

&lt;p&gt;While Firestore, the Realtime Database is really just one big JSON object that the developers can manage in realtime. It allows you to set up the data you want for your application, while Firebase Authentication is built by the same people who created Google Sign-in, Smart Lock, and Chrome Password Manager.&lt;/p&gt;

&lt;p&gt;Firebase also provides a service called &lt;strong&gt;Firebase Cloud Functions&lt;/strong&gt; which allows you to run server-side JavaScript code in a Node.js environment, and you can also deploy all of your applications to Firebase hosting.&lt;/p&gt;

&lt;p&gt;You can further check out the &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fdevslopes-firestore-ios%2F"&gt;&lt;strong&gt;Firebase Firestore for the iOS&lt;/strong&gt;&lt;/a&gt; course to learn more about Firestore and how to use it in your project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fdevslopes-firestore-ios%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ARvCFYyB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-L2EcpjJGMJU/Xt447txYgbI/AAAAAAAAfvc/Ub8uGD_Vm8IjAJIfIKbPvan6PIJ2kvHAACLcBGAsYHQ/s400/Top%252B5%252BCourses%252Bto%252Blearn%252BFirebase.png" alt="Why Frontend Developer should learn Firebase in 2022?" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#10-essential-firebase-services-for-frontend-developers"&gt;
  &lt;/a&gt;
  10 Essential Firebase Services for Frontend Developers?
&lt;/h2&gt;

&lt;p&gt;Actually, there are a lot more Firebase services than I have mentioned here and you can basically divide them into two categories like Development and Testing Services and Analytics services.&lt;/p&gt;

&lt;p&gt;Here is a list of some of the most popular Development and Testing Firebase Services for Frontend Developers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Realtime Database&lt;/li&gt;
&lt;li&gt;  Auth&lt;/li&gt;
&lt;li&gt;  Test Lab&lt;/li&gt;
&lt;li&gt;  Crashlytics&lt;/li&gt;
&lt;li&gt;  Cloud Functions&lt;/li&gt;
&lt;li&gt;  Firestore&lt;/li&gt;
&lt;li&gt;  Cloud Storage&lt;/li&gt;
&lt;li&gt;  Performance Monitoring&lt;/li&gt;
&lt;li&gt;  Crash Reporting&lt;/li&gt;
&lt;li&gt;  Hosting&lt;/li&gt;
&lt;li&gt;  Grow &amp;amp; Engage your audience&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best thing about Firebase is that with &lt;strong&gt;just a single API&lt;/strong&gt;, the Firebase database provides your app with both the current value of the data and any updates to that data.&lt;/p&gt;

&lt;p&gt;If you are interested in using Firebase with Angular, Vue.js, or React.js, I suggest you check out &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Ffirebase-course%2F"&gt;Firebase &amp;amp; Firestore Masterclass&lt;/a&gt;&lt;/strong&gt; which will show you how to use Firebase hosting, Firebase Cloud Functions, and AngularFire with Angular 8 for full-stack development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Ffirebase-course%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZBqYiDrT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/0%2APGiXOL-8luNsqP3O.png" alt="5 Best Firebase and Firestore Courses from Udemy &amp;amp;amp; Coursera in 2022 | by  javinpaul | Javarevisited | Medium" width="880" height="435"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#why-frontend-developers-should-learn-firebase-in-2022"&gt;
  &lt;/a&gt;
  Why Frontend Developers should learn Firebase in 2022
&lt;/h2&gt;

&lt;p&gt;So now that you know the capabilities of Firebase, we can summaries why Frontend Developer should learn Firebase. here are some of the key reasons why I think both frontend and &lt;a href="https://javarevisited.blogspot.com/2020/01/10-things-mobile-app-developers-can-learn.html"&gt;mobile app develope&lt;/a&gt;r will benefit from learning Firebase:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-unblocks-frontend-development"&gt;
  &lt;/a&gt;
  1. Unblocks Frontend Development
&lt;/h3&gt;

&lt;p&gt;Firebase provides a ready-made backend system that frontend developer can use to hook their GUI without waiting for the backend to be ready.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-faster-development"&gt;
  &lt;/a&gt;
  2. Faster Development
&lt;/h3&gt;

&lt;p&gt;Firebase provides database, authentication, payment, and API which are an integral part of any frontend application, and with that is made readily available, your development time is significantly reduced. &lt;/p&gt;

&lt;p&gt;Though a good knowledge of Firebase services helps here and if you are starting from scratch then the &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Ffirebase-fundamentals"&gt;&lt;strong&gt;Firebase Fundamentals&lt;/strong&gt;&lt;/a&gt; course by Joe Eames on Pluralsight is a great resource for beginners.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Ffirebase-fundamentals"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ToTslyJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-fD3Mn-K5ZtY/Xt5MHumsadI/AAAAAAAAfw0/j3fyM2CXXAAXbr7im2p_eAghiaGA569ZACLcBGAsYHQ/s400/Firebase%252BFundamentals%252Bbest%252BPluralsight%252Bcourse.png" alt="Best courses to learn Firebase and Firestore online" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-better-code"&gt;
  &lt;/a&gt;
  3. Better Code
&lt;/h3&gt;

&lt;p&gt;People might argue that using Firebase means you are locked into Google Cloud Platform and you may not be able to deploy your web application or mobile app into &lt;a href="https://javarevisited.blogspot.com/2020/05/top-5-amazon-web-services-aws-courses-for-beginners-and-experienced-programmers.html"&gt;AWS&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-courses-to-crack-azure-architecture-technologies-certification-az-300-exam.html"&gt;Azure&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-google-cloud-platform-gcp-courses-certifications-online.html"&gt;GCP&lt;/a&gt;, or any other Cloud platform, but that's not true. &lt;/p&gt;

&lt;p&gt;As long as you follow standard coding practice and separation of concern you can encapsulate interaction in the service or data layer.&lt;/p&gt;

&lt;p&gt;In most cases, developers use Firebase on the development stage with an actual backend on production. So they design their app in such a way that switching to a different backend is easier, this approach results in a better structure.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-speed-and-simplicity"&gt;
  &lt;/a&gt;
  4. Speed and Simplicity
&lt;/h3&gt;

&lt;p&gt;Firebase not only provides blazing-fast data storage capabilities but also a simple API, which can be tempting if you are considering to use Firebase in Production.&lt;/p&gt;

&lt;p&gt;That's all about &lt;strong&gt;why frontend developers should learn Firebase in 2022&lt;/strong&gt;. These were just some of the most important reasons I can think of now, but there are many more. Firebase is evolving and adding more and more services so that more and more companies start using them in Production as well.&lt;/p&gt;

&lt;p&gt;If you are learning &lt;a href="https://medium.com/javarevisited/10-courses-to-learn-angular-for-web-development-6da1bd2856dc"&gt;Angular&lt;/a&gt;, &lt;a href="https://javinpaul.medium.com/top-5-courses-to-learn-react-js-in-2019-best-of-lot-fa02cd96cdf0"&gt;React.js&lt;/a&gt;, or &lt;a href="https://medium.com/javarevisited/top-5-online-courses-to-learn-vue-js-in-2021-249e66b60646"&gt;Vue.js&lt;/a&gt; then Firebase can really help you with developing projects and mastering the front-end framework of your choice.&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Programming and Development Articles&lt;/strong&gt; you may like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  The 2022 React Developer RoadMap (&lt;a href="https://medium.com/javarevisited/the-2019-react-js-developer-roadmap-9a8e290b8a56"&gt;roadmap&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  My favorite Courses to learn Web Development in 2022 (&lt;a href="https://medium.com/better-programming/my-5-favorite-courses-to-learn-web-development-in-2019-a5e74167f8b2"&gt;courses&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  The Complete Frontend Developer RoadMap (&lt;a href="https://javarevisited.blogspot.com/2019/02/the-2019-web-developer-roadmap.html"&gt;guide&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  10 Things Frontend Developer should learn (&lt;a href="https://javarevisited.blogspot.com/2020/01/10-things-web-developers-should-learn.html"&gt;article&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  7 Free Courses to learn Kubernetes in 2022 (&lt;a href="https://medium.com/javarevisited/7-free-online-courses-to-learn-kubernetes-in-2020-3b8a68ec7abc"&gt;courses&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  10 Essential Frontend Skills for Beginners (&lt;a href="https://www.java67.com/2020/10/best-frontend-skills-web-developer.html"&gt;skills&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  The Complete DevOps Developer RoadMap (&lt;a href="https://javarevisited.blogspot.com/2018/09/the-2018-devops-roadmap-your-guide-to-become-DevOps-Engineer.html#axzz61d5FPRru"&gt;guide&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  10 Frameworks full-stack Java developer should learn (&lt;a href="https://medium.com/javarevisited/top-10-frameworks-full-stack-java-developers-can-learn-in-2020-5995021401e5"&gt;article&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  5 Free Courses to learn Docker for DevOps (&lt;a href="https://medium.com/javarevisited/top-5-free-courses-to-learn-docker-for-beginners-best-of-lot-b2b1ad2b98ad"&gt;courses&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  10 Skills Java Developer should learn (&lt;a href="https://dev.to/javinpaul/10-skills-java-programmer-can-learn-to-accelerate-their-career-3nlh"&gt;skills&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  Why Everybody Should Learn Python Programming (&lt;a href="https://becominghuman.ai/why-everybody-should-learn-python-in-2020-2578e7031629"&gt;article&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  10 Mobile frameworks and libraries for Beginners (&lt;a href="https://medium.com/@javinpaul/10-frameworks-and-libraries-mobile-application-developers-can-learn-in-2020-e0b91391cade"&gt;frameworks&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  10 Coursera Professional certificate to boost your career (&lt;a href="https://medium.com/javarevisited/top-10-coursera-certificates-to-start-your-career-in-cloud-data-science-ai-mainframe-and-it-558690c83587"&gt;certs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  5 Computer Science degrees you can earn online (&lt;a href="https://medium.com/javarevisited/5-ivy-league-computer-science-and-engineering-degrees-you-can-earn-online-on-coursera-6ab0155d4147"&gt;degrees&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  The 2022 Java Developer RoadMap (&lt;a href="https://javarevisited.blogspot.com/2019/10/the-java-developer-roadmap.html"&gt;guide&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  How to learn Python in 7 days using Udemy courses (&lt;a href="https://javarevisited.blogspot.com/2020/10/how-to-learn-python-programming-in-7-days.html"&gt;guide&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you like this article then please share it with your friends and colleagues. If you have any questions or feedback then please drop a note.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. -&lt;/strong&gt; If you are interested in learning Firebase and its different services like FireStore and Cloud Functions but looking for a free online training course to kickstart your journey then you may check this &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fnew-react-firebase-real-time-serverless-apps%2F"&gt;&lt;strong&gt;React + Firebase for Beginners&lt;/strong&gt;&lt;/a&gt; course on Udemy. It's completely free and you just need a Udemy account to enroll in this course.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>development</category>
      <category>firebase</category>
    </item>
    <item>
      <title>Project 3:CSS Variables</title>
      <author>prachigarg19</author>
      <pubDate>Sat, 04 Dec 2021 08:25:36 +0000</pubDate>
      <link>https://dev.to/prachigarg19/project-3css-variables-n04</link>
      <guid>https://dev.to/prachigarg19/project-3css-variables-n04</guid>
      <description>&lt;p&gt;Welcome to my "Build 30 Js Projects in 30 Days" Series .This is day 3 and project 3. If you haven't read the other articles in this series please check them out first. I'll list them at the end of this article.&lt;br&gt;
&lt;a href="" class="article-body-image-wrapper"&gt;&lt;img alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As mentioned in my previous article. This is the Day 3 challenge of &lt;a href="https://javascript30.com/"&gt;Wes Bos Javascript30 course&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is the final result:&lt;/p&gt;

&lt;p&gt;As always before starting download the starter files from &lt;a href="https://github.com/wesbos/JavaScript30"&gt;here&lt;/a&gt;. I've made a separate article on how to download starter files, you can check it out &lt;a href="https://dev.to/prachigarg19/build-30-javascript-projects-in-30-daysday-0-2m8j"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CODE&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/prachigarg19/embed/yLzYoLW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#part-1html"&gt;
  &lt;/a&gt;
  &lt;em&gt;PART 1:HTML&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;In html part as you can see I've created 3 inputs. The thing to notice here is that I've given name to the input similar to variable names as we will later use them to manipulate variable values. I've created data-sizing variable which will store px. Keep reading to understand why it's needed. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#part-2css"&gt;
  &lt;/a&gt;
  &lt;em&gt;PART 2:CSS&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;Now we are going to style our project.&lt;br&gt;
Here we have created 3 variables in root. As I said, notice variable names are similar to name of inputs.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#part-3javascript"&gt;
  &lt;/a&gt;
  &lt;em&gt;PART 3:JAVASCRIPT&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;Now we will make our project interactive.&lt;br&gt;
The idea is to get all input tags from document, traverse them and call function updateValues when input is clicked or when mouse is moved upon range input to change values. Without mousemove event Listener the function will not take values until range input is stopped at a point. &lt;/p&gt;

&lt;p&gt;&lt;u&gt;updateValue function-&amp;gt;&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; let suffix=this.dataset.sizing||"";
    document.documentElement.style.setProperty(`--${this.name}`,this.value+suffix);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;suffix will store the dataset sizing value that is px. This is required as we want to set variable values to somethingpx.&lt;br&gt;
Example- If user sets padding value to 18 then we need to update&lt;br&gt;
 --padding variable to 18px. Thus we need to concatenate 18 and string px to achieve this. &lt;br&gt;
Also since image does not have a data-sizing set to it we have set an or condition in suffix initialisation to prevent concatenation of undefined.This can also be achieved by setting data-sizing="" in img but this is not a good method for larger code bases as we'd then need to add data-sizing="" to all the inputs.&lt;/p&gt;

&lt;p&gt;Now we will update css value by calling setProperty function of style .of document element ,which is further a part of document ,for name of the input that called the function (same as variable name) to the value of this input(returns value set by user/initial value set by programmer). (Tip: this is a complicated part hence try breaking it and printing on console to get the idea or you can comment below and I'll be happy to help you)&lt;br&gt;
For more details on this part ,read &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#previous-article-from-this-series"&gt;
  &lt;/a&gt;
  &lt;em&gt;&lt;u&gt;Previous article from this series:&lt;/u&gt;&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/prachigarg19/project-2javascript-clock-5a0c"&gt;Day 2 Project 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the working code :&lt;a href="https://github.com/prachigarg19/Javacript_beginner_projects/tree/main/js30"&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-learnt"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;u&gt;Things learnt:&lt;/u&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;1.mousemove event listener.&lt;br&gt;
2.css variables.&lt;br&gt;
3.updating variables from javascript&lt;br&gt;
4.dataset&lt;br&gt;
5.filter property in css (here used to blur image)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;em&gt;&lt;u&gt;Conclusion&lt;/u&gt;&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;That's it for today's project.Next project will be Array Cardio Day 1.&lt;/p&gt;

&lt;p&gt;If you have any doubts or suggestions please do let me know in the comment section. I'll be more than happy to interact with you.&lt;/p&gt;

&lt;p&gt;If you like this series and want to be a part of it, do consider following me at &lt;a class="mentioned-user" href="https://dev.to/prachigarg19"&gt;@prachigarg19&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Thanks for reading. :)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Help With SVG In Python</title>
      <author>Elero Obaitan</author>
      <pubDate>Sat, 04 Dec 2021 08:18:13 +0000</pubDate>
      <link>https://dev.to/elero/help-with-svg-in-python-58hj</link>
      <guid>https://dev.to/elero/help-with-svg-in-python-58hj</guid>
      <description>&lt;p&gt;Hello Dev.to community!&lt;br&gt;
I am new here and hoping for a rewarding experience. I need help with questions I have about a Python project I am embarking on.&lt;/p&gt;

&lt;p&gt;The project has me creating an application in Flask to generate lettering stencils - to be used to form the lettering on concrete tombstones - and also to manage records of the departed. The characters used in the stencils are in SVG format and the stencils are currently made manually using a vector-based editing software. The output is an A3-size PDF file which is then printed and laser-cut.&lt;/p&gt;

&lt;p&gt;I seek to automate the stencil-generating process but have no experience working with SVG in Python. The ideal situation would be to find a way to get the application to "recognize" and store each SVG stencil character (perhaps by mapping it to regular alphabets, digits and symbols) and generate the appropriate PDF stencil file whenever the details of a departed person are fed in.&lt;/p&gt;

&lt;p&gt;I have tried to do a little research on the SVG libraries available in Python and haven't been very encouraged by my findings (I confess I haven't researched them thoroughly).&lt;/p&gt;

&lt;p&gt;My questions are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Does anyone know any Python library or libraries that would be helpful for a project of this nature?&lt;/li&gt;
&lt;li&gt;Is there a better way to do what I am trying to do? (This is really important to me).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Help, comments, questions are all welcome.&lt;br&gt;
Thank you.&lt;/p&gt;

</description>
      <category>help</category>
      <category>python</category>
      <category>flask</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to use Observers in Laravel?</title>
      <author>Reza Khademi</author>
      <pubDate>Sat, 04 Dec 2021 07:57:51 +0000</pubDate>
      <link>https://dev.to/rezakhademi/how-to-use-observers-in-laravel-3egp</link>
      <guid>https://dev.to/rezakhademi/how-to-use-observers-in-laravel-3egp</guid>
      <description>&lt;p&gt;So what are observers in Laravel and why you should use them?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-definition"&gt;
  &lt;/a&gt;
  1. Definition
&lt;/h3&gt;

&lt;p&gt;Observers in Laravel help you to fire multiple events or do a CRUD operation in database!&lt;/p&gt;

&lt;p&gt;When you create an observer, it will listen to a specific condition for a model, e.g: if user create a post and he/she achieved a certain level, the observer will fire related method(event) and do what ever you wrote!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-real-example"&gt;
  &lt;/a&gt;
  2. Real Example
&lt;/h3&gt;

&lt;p&gt;In this world websites, there are so many things we want to do after a user registered in our website! e.g: send an email, send SMS and etc... So why not leave them to Observers!&lt;/p&gt;

&lt;p&gt;First, run this command to make a user observer (for User model):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php artisan make:observer UserObserver --model=User&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Second, you will see four methods in it, that will run when their condition are true. these methods are:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Observers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Models\User&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserObserver&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     *  Will do what you want When an instance of model created 
     *
     * @param  \App\Models\User  $user
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;User&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; 

    &lt;span class="cd"&gt;/**
     * Will do what you want When an instance of model updated
     *
     * @param  \App\Models\User  $user
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;updated&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;User&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Will do what you want When an instance of model deleted
     *
     * @param  \App\Models\User  $user
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;deleted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;User&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Will do what you want When an instance of model force deleted
     *
     * @param  \App\Models\User  $user
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;forceDeleted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;User&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should know there is some other functions like: &lt;code&gt;creating, updating, saving, afterSaving, restore&lt;/code&gt; and etc... so you have a handful feature observer for many situations.&lt;/p&gt;

&lt;p&gt;Maybe we just want to send a welcome message to user whenever he/she registered!&lt;br&gt;
we may use &lt;code&gt;create()&lt;/code&gt; method, as below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;User&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;Mail&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;newUserRegisteredMailable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And third one is registering our observer in the boot method of your application's &lt;code&gt;App\Providers\EventServiceProvider&lt;/code&gt; service provider:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Models\User&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Observers\UserObserver&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cd"&gt;/**
 * Register any events for your application.
 *
 * @return void
 */&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;boot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;UserObserver&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it. &lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
