<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>NPM vs. YARN: Basic Commands</title>
      <author>vandna kapoor</author>
      <pubDate>Wed, 24 Nov 2021 21:16:05 +0000</pubDate>
      <link>https://dev.to/vandnakapoor19/npm-vs-yarn-basic-commands-3bl6</link>
      <guid>https://dev.to/vandnakapoor19/npm-vs-yarn-basic-commands-3bl6</guid>
      <description>&lt;p&gt;Here is a quick reference guide for basic commands that we can use when dealing with Node and requiring the use of NPM or YARN.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;h5&gt;
  &lt;a href="#install-dependencies-from-packagejson"&gt;
  &lt;/a&gt;
  Install dependencies from package.json:
&lt;/h5&gt;



&lt;p&gt;&lt;code&gt;npm install == yarn&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5&gt;
  &lt;a href="#install-a-package-and-add-to-packagejson"&gt;
  &lt;/a&gt;
  Install a package and add to package.json:
&lt;/h5&gt;



&lt;p&gt;&lt;code&gt;npm install package --save == yarn add package&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5&gt;
  &lt;a href="#install-a-devdependency-to-packagejson"&gt;
  &lt;/a&gt;
  Install a devDependency to package.json:
&lt;/h5&gt;



&lt;p&gt;&lt;code&gt;npm install package --save-dev == yarn add package --dev&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5&gt;
  &lt;a href="#remove-a-dependency-from-packagejson"&gt;
  &lt;/a&gt;
  Remove a dependency from package.json:
&lt;/h5&gt;



&lt;p&gt;&lt;code&gt;npm uninstall package --save == yarn remove package&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5&gt;
  &lt;a href="#upgrade-a-package-to-its-latest-version"&gt;
  &lt;/a&gt;
  Upgrade a package to its latest version:
&lt;/h5&gt;



&lt;p&gt;&lt;code&gt;npm update --save == yarn upgrade&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5&gt;
  &lt;a href="#install-a-package-globally"&gt;
  &lt;/a&gt;
  Install a package globally:
&lt;/h5&gt;



&lt;p&gt;&lt;code&gt;npm install package -g == yarn global add package&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>react</category>
      <category>node</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Top 6 JavaScript Chart Libraries</title>
      <author>Zahab Kakar</author>
      <pubDate>Wed, 24 Nov 2021 21:13:20 +0000</pubDate>
      <link>https://dev.to/zahab/top-6-javascript-chart-libraries-22k2</link>
      <guid>https://dev.to/zahab/top-6-javascript-chart-libraries-22k2</guid>
      <description>&lt;p&gt;JavaScript is a programming language used to develop dynamic and interactive websites.&lt;br&gt;
There are over 1.8 Billion websites in the world, and JavaScript is used on 95% of them. I have compiled the best and useful Chart Libraries that you need as a Javascript developer. The JavaScript Chart Libraries helps you easily visualize data using JavaScript&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chartjs"&gt;
  &lt;/a&gt;
  ChartJS
&lt;/h2&gt;

&lt;p&gt;Simple, clean and engaging HTML5 based JavaScript charts. Chart.js is an easy way to include animated, interactive graphs on your website for free. It is a community maintained an open-source library that helps you easily visualize data using JavaScript. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vTTpAT8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786759833/XQXeLvuYs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTTpAT8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786759833/XQXeLvuYs.png" alt="s.png" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-driven-documents-d3"&gt;
  &lt;/a&gt;
  Data Driven Documents (D3)
&lt;/h2&gt;

&lt;p&gt;D3.js is a JavaScript library for producing dynamic, interactive data visualizations in web browsers. It makes use of Scalable Vector Graphics, HTML5, and Cascading Style Sheets standards. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aEI1wRiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786837377/oreo8n-Nk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aEI1wRiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786837377/oreo8n-Nk.png" alt="hero-53ca6ca6f61a2f70ee5054f1a5c0ffb5.png" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-charts"&gt;
  &lt;/a&gt;
  Google Charts
&lt;/h2&gt;

&lt;p&gt;Google Charts is an interactive Web service that creates graphical charts from user-supplied information. The user supplies data and a formatting specification expressed in JavaScript embedded in a Web page; in response, the service sends an image of the chart.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gdV92NSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786908812/FGiGUpBPC.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gdV92NSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786908812/FGiGUpBPC.jpeg" alt="687474703a2f2f7369722d64756e78616c6f742e6769746875622e696f2f656d6265722d676f6f676c652d6368617274732f656d6265722d676f6f676c652d6368617274732d32366432333337346136653365336437626330626635316534353430633065632e6a7067.jpeg" width="880" height="338"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#apexchartsjs"&gt;
  &lt;/a&gt;
  ApexCharts.Js
&lt;/h2&gt;

&lt;p&gt;ApexCharts is a free and open-source modern charting library that helps developers to create beautiful and interactive visualizations for web pages. This library allows you to build interactive data visualizations with simple API and 100+ ready-to-use samples.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dGLE2Ua4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786935124/x0ekQ0QV6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dGLE2Ua4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786935124/x0ekQ0QV6.png" alt="68747470733a2f2f617065786368617274732e636f6d2f6d656469612f617065786368617274732d62616e6e65722e706e67.png" width="750" height="499"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chartist"&gt;
  &lt;/a&gt;
  Chartist
&lt;/h2&gt;

&lt;p&gt;Chartist JS is a simple, flexible way to visualize so many types of data, it is developed to create simple responsive charts. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--15s-YTCX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637787002341/cuco1DyZR.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--15s-YTCX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637787002341/cuco1DyZR.jpeg" alt="chartist.jpg" width="880" height="483"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#g2plot"&gt;
  &lt;/a&gt;
  G2Plot
&lt;/h2&gt;

&lt;p&gt;G2Plot is an interactive and responsive charting library based on the grammar of graphics. The responsive ability of g2plot guarantee your chart's readability in any display space and data status.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iKoRDo8w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637787035967/gs7GX_oJc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iKoRDo8w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637787035967/gs7GX_oJc.gif" alt="A_wkoYQ5JuFckAAAAAAAAAAABkARQnAQ.gif" width="880" height="235"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading, I hope you found this useful.&lt;/p&gt;

&lt;p&gt;Feel free to connect with me on &lt;a href="https://twitter.com/zahab_k"&gt;Twitter&lt;/a&gt;  &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Parameter usage for default args in JS</title>
      <author>icncsx</author>
      <pubDate>Wed, 24 Nov 2021 20:59:57 +0000</pubDate>
      <link>https://dev.to/icncsx/parameter-usage-for-default-args-in-js-4b0g</link>
      <guid>https://dev.to/icncsx/parameter-usage-for-default-args-in-js-4b0g</guid>
      <description>&lt;p&gt;A default argument can reference a prior argument.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;defaultFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`num1: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; num2: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;defaultFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="c1"&gt;// num1: 3 num2: 3&lt;/span&gt;
&lt;span class="nx"&gt;defaultFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// num1: 3 num2: 6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>shorts</category>
    </item>
    <item>
      <title>Boolean coercion</title>
      <author>icncsx</author>
      <pubDate>Wed, 24 Nov 2021 20:53:57 +0000</pubDate>
      <link>https://dev.to/icncsx/boolean-coercion-2ckc</link>
      <guid>https://dev.to/icncsx/boolean-coercion-2ckc</guid>
      <description>&lt;p&gt;Use !! to see how JavaScript would coerce a real value into a boolean-ish interpretation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;//  false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//  false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>shorts</category>
    </item>
    <item>
      <title>Welcome Thread - v152</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 24 Nov 2021 20:51:24 +0000</pubDate>
      <link>https://dev.to/thepracticaldev/welcome-thread-v152-2gfl</link>
      <guid>https://dev.to/thepracticaldev/welcome-thread-v152-2gfl</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/3otPoSyc3ty37iTKsU/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3otPoSyc3ty37iTKsU/giphy.gif" alt="Buddy the elf saying hi" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-dev"&gt;
  &lt;/a&gt;
  Welcome to DEV!
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Leave a comment below to introduce yourself! You can talk about what brought you here, what you're learning, or just a fun fact about yourself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to someone's comment, either with a question or just a hello. 👋 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Great to have you in the community!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>welcome</category>
    </item>
    <item>
      <title>Assignment has a return value in JS</title>
      <author>icncsx</author>
      <pubDate>Wed, 24 Nov 2021 20:47:33 +0000</pubDate>
      <link>https://dev.to/icncsx/assignment-has-a-return-value-in-js-2359</link>
      <guid>https://dev.to/icncsx/assignment-has-a-return-value-in-js-2359</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because assignment has a return value, we are able to chain assignments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hard to read, but it works...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>State of my Cloud Journey: Nov 24, 2021</title>
      <author>Alex Eversmeyer</author>
      <pubDate>Wed, 24 Nov 2021 20:24:19 +0000</pubDate>
      <link>https://dev.to/alexeversmeyer/state-of-my-cloud-journey-nov-24-2021-1e7b</link>
      <guid>https://dev.to/alexeversmeyer/state-of-my-cloud-journey-nov-24-2021-1e7b</guid>
      <description>&lt;p&gt;Bit of a late blog this week. I was deep into some coding until late last night, and then got absolutely &lt;em&gt;flattened&lt;/em&gt; by my body's immune response to the COVID booster I received around lunchtime. I went from fine to feeling sicker than I've been in a long time in the span of about five minutes. I'm taking a sick day from work today, and with two more days off for the Thanksgiving holiday, I have plenty of time to lay around and recover. Maybe I'll get some solid learning in, too!&lt;/p&gt;

&lt;p&gt;This past week started with a whimper: some personal frustrations boiled over and I didn't get a whole lot done for a couple days. However, some long days on the tail end of the week helped me regain momentum.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#learning-paths"&gt;
  &lt;/a&gt;
  Learning Paths 📚
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;CS50x&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I've been really enjoying this course. Like, &lt;em&gt;really&lt;/em&gt; enjoying it. It's hard - C is different enough from Python that it gives me fits sometimes - but I'm learning a lot and really wish I'd run across a course like this when I was an undergrad. I suspect I would have been hooked.&lt;/p&gt;

&lt;p&gt;The big battle this week has been working to understand how code in C interacts with memory. The programming concepts are familiar (loops, arrays, etc.) but the way C handles types has taken some getting used to. Thankfully, the lecturer is fantastic and I have a good coding mentor to help me understand how to get past the rough patches. I'm certain this course, even though I'm not taking it for any sort of credit, will help me grow as a programmer.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;DevOps in the Cloud&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I got my first look at Ansible this week. Even though I didn't dig in particularly far, I can see how powerful a tool it is, and I'm really digging it. I am excited to see how it integrates with Terraform and Jenkins.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#job-search"&gt;
  &lt;/a&gt;
  Job Search 🔎
&lt;/h1&gt;

&lt;p&gt;This past week's focus was moving forward in my learning, so I didn't make much progress on the job search front. My goal this week is to take a hard look at my resume and projects (thanks for the advice, Lou!) and try to make them more appealing and more demonstrative of my abilities.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;0 applications; 0 interviews; 1 rejection&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapup"&gt;
  &lt;/a&gt;
  Wrap-up 🍩
&lt;/h1&gt;

&lt;p&gt;Today is probably going to be a wash, but a couple more days off gives me the opportunity to relax a bit and make some forward progress. I &lt;em&gt;really&lt;/em&gt; want to fix whatever is preventing me from getting interviews right now, because there seem to be plenty of open positions into which I can see myself fitting. Time to do work.&lt;/p&gt;

&lt;p&gt;Onward and upward!&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>learning</category>
      <category>careerchanger</category>
      <category>jobsearch</category>
    </item>
    <item>
      <title>Understanding User Authentication from Scratch</title>
      <author>propelauthblog</author>
      <pubDate>Wed, 24 Nov 2021 19:09:16 +0000</pubDate>
      <link>https://dev.to/propelauth/understanding-user-authentication-from-scratch-3pl2</link>
      <guid>https://dev.to/propelauth/understanding-user-authentication-from-scratch-3pl2</guid>
      <description>&lt;p&gt;Authentication is a broad topic that can be both very simple and very complicated. In this series we'll describe what it is and different approaches to implement it, starting from older less-secure methods and ending with modern more-secure methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-authentication"&gt;
  &lt;/a&gt;
  What is Authentication?
&lt;/h2&gt;

&lt;p&gt;Authentication is the process of determining who someone or something is. In the real world, when you give someone your ID or passport, that's a form of authentication. Online, when you enter an email/password, that's a form of authentication.&lt;/p&gt;

&lt;p&gt;While authentication processes can also be for machine-to-machine communication, in this post we'll focus on users identifying themselves to a web server - a.k.a. &lt;strong&gt;user&lt;/strong&gt; authentication.&lt;/p&gt;

&lt;p&gt;To simplify the problem, we need two processes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Some way to create new users&lt;/li&gt;
&lt;li&gt;Some way to identify existing users&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's look at a few approaches to do these and point out what's good and bad about each approach. Let's assume we are building a web app, and we have both a server to handle requests and a database to store data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-user-authentication-attempt-1"&gt;
  &lt;/a&gt;
  Implementing User Authentication: Attempt 1
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#creating-new-users"&gt;
  &lt;/a&gt;
  Creating new users
&lt;/h3&gt;

&lt;p&gt;When a new user wants to sign up, we'll ask for their email address and password and save those to the DB. Typically, we also create a user ID so that users can change their email address but their user ID won't change.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JdzV9Q1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jk53vhqwvdthz3sqazk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JdzV9Q1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jk53vhqwvdthz3sqazk.png" alt="Signup flow attempt 1" width="880" height="251"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#identifying-existing-users"&gt;
  &lt;/a&gt;
  Identifying existing users
&lt;/h3&gt;

&lt;p&gt;A user wants to make a request to our server. The only pieces of information we have are their email address, user ID, and password. What if we just ask them to send us their email address and password again on each request?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EpIiGC3W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u11h3hdd8uvmn4k0u5jw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EpIiGC3W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u11h3hdd8uvmn4k0u5jw.png" alt="Basic auth workflow" width="880" height="314"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we get a request, we verify the email address exists in our database and the password is correct.&lt;/p&gt;

&lt;p&gt;This is called &lt;strong&gt;Basic Authentication&lt;/strong&gt; (technically basic authentication requires the email/password to be sent in a specific format in the header, but the idea is still the same - the request contains the email and password).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pros-and-cons"&gt;
  &lt;/a&gt;
  Pros and Cons
&lt;/h3&gt;

&lt;p&gt;On the plus side, this system is very simple... one might even call it basic. &lt;/p&gt;

&lt;p&gt;That being said, every time a user wants to do anything, they need to specify their email address and password. It's bad practice to save a user's password somewhere in the browser (like &lt;code&gt;localStorage&lt;/code&gt;), and asking the user to re-enter their password every single time they want to do anything is a terrible user experience.&lt;/p&gt;

&lt;p&gt;This approach isn't completely worthless though. Remember, authentication is a broad topic, and while I wouldn't implement a system where users are constantly passing in their email/password in a browser, if I was building a service where the requests primarily come from a terminal instead, saving someone's email and password to a file or keychain and passing it along on every request is definitely more reasonable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-user-authentication-attempt-2"&gt;
  &lt;/a&gt;
  Implementing User Authentication: Attempt 2
&lt;/h2&gt;

&lt;p&gt;We don't want to ask our users to keep entering their password, so we need something else they can send to us to prove they are who they say they are.&lt;/p&gt;

&lt;p&gt;We do also have a user id... and we can make that user id as random as we like. What if we keep our signup method the same, but return the user id to the client and ask them to return it on each request.&lt;/p&gt;

&lt;p&gt;Assuming user ids are generated with a &lt;a href="https://en.wikipedia.org/wiki/Cryptographically-secure_pseudorandom_number_generator"&gt;cryptographically-secure pseudorandom number generator&lt;/a&gt;, they should be unguessable, and we should be fine here... right?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ln5b-DZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28123cl7cs40ls6flfhb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ln5b-DZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28123cl7cs40ls6flfhb.png" alt="Bad auth workflow" width="880" height="299"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h3&gt;

&lt;p&gt;This approach is actually worse than our first attempt. One reason why is user ids aren't supposed to change. If a user's id is leaked, we have no way to prevent attackers from accessing that users account, forever. In our last attempt, if someone's password was stolen, they could have changed it. Now, however, they need a new account with a different user ID.&lt;/p&gt;

&lt;p&gt;We did say that user IDs were unguessable but there are unfortunately ways where it could get leaked. Maybe the user used an insecure password and someone guessed it and therefore got their user id. Maybe they logged in on a shared computer with malware on it. We have unfortunately no good ways to protect our users once their user ID is out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-user-authentication-attempt-3"&gt;
  &lt;/a&gt;
  Implementing User Authentication: Attempt 3
&lt;/h2&gt;

&lt;p&gt;Ok, so we don't want to send passwords on each request, and we don't want to send a user ID on each request because we can't easily revoke it.&lt;/p&gt;

&lt;p&gt;What if, instead of asking the user to send us a user ID, we create a new unguessable token and map it to the user's ID?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OfP-UpJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8g9xptgb2bndpjlgvcbi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OfP-UpJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8g9xptgb2bndpjlgvcbi.png" alt="Issuing a token" width="880" height="314"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bIrEfoVn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v72azyvdz99mm24p2zj9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bIrEfoVn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v72azyvdz99mm24p2zj9.png" alt="Using a token" width="880" height="299"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If someone steals our token, we can delete it from our database and our user would have to log in again. We can even add an expiration time, after which the token is considered invalid.&lt;/p&gt;

&lt;p&gt;These tokens are often called session tokens, and they are typically stored in cookies. These tokens are also called &lt;strong&gt;opaque&lt;/strong&gt; tokens, because the string itself has no meaning outside our database.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pros-and-cons"&gt;
  &lt;/a&gt;
  Pros and Cons
&lt;/h3&gt;

&lt;p&gt;This a way more reasonable approach. After a user logs in, they have an unguessable token which only they have. It's not sensitive like a password. If a user wants to log out or if their phone/laptop gets stolen, we can just delete the token from our database.&lt;/p&gt;

&lt;p&gt;The main con is that this is a stateful approach. Verifying a session token requires us to do a database lookup. Some platforms like &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt; have solutions like &lt;a href="https://nextjs.org/docs/api-routes/introduction"&gt;Next.js API Routes&lt;/a&gt; which boast that they can be run globally at the edge - meaning as close to the user as possible. If you need to do a database lookup in a database in a fixed location, you can lose some of the latency advantages you gain by globally hosting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alternative-approach-jwts"&gt;
  &lt;/a&gt;
  Alternative Approach - JWTs
&lt;/h3&gt;

&lt;p&gt;If we want to avoid the database lookup, instead of issuing tokens that are saved to our database, we can issue JWTs. We have a separate article dedicated to understanding JWTs &lt;a href="https://blog.propelauth.com/jwt-explained/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-user-authentication-hard"&gt;
  &lt;/a&gt;
  Why is User Authentication hard?
&lt;/h2&gt;

&lt;p&gt;So far, everything we've mentioned is hopefully pretty straightforward. The difficulty in user authentication doesn't come from the approach, it comes from all the tiny details. For example:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When you store passwords, you need to make sure they are stored securely. See our article about that &lt;a href="https://blog.propelauth.com/securely-storing-passwords/"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Best practice for user authentication is to deny commonly used passwords and &lt;a href="https://blog.propelauth.com/easy-breached-password-detection/"&gt;passwords seen in previous data breaches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It's easy to introduce subtle &lt;a href="https://blog.propelauth.com/understanding-timing-attacks-with-code/"&gt;timing attack vulnerabilities&lt;/a&gt;, either in verifying the password or in supplementary workflows like forgotten password flows.&lt;/li&gt;
&lt;li&gt;There are guidelines about the error messages you display to avoid leaking email addresses of your users.&lt;/li&gt;
&lt;li&gt;There have been multiple vulnerabilities in JWT libraries themselves.&lt;/li&gt;
&lt;li&gt;If you are using cookies, they should be HTTP-only and secure.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And the list goes on. &lt;/p&gt;

&lt;p&gt;Services like &lt;a href="https://www.propelauth.com"&gt;PropelAuth&lt;/a&gt; exist so you can avoid wasting time worrying about user authentication and get back to just building your product.&lt;/p&gt;

&lt;p&gt;In future posts in this series, we'll look at how things like social logins and two-factor authentication work.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>security</category>
    </item>
    <item>
      <title>Visual Studio Code Lifehack that saved me a ton of time!</title>
      <author>Hrn Svncハルン Харун Севиндж</author>
      <pubDate>Wed, 24 Nov 2021 19:01:59 +0000</pubDate>
      <link>https://dev.to/harsvnc/visual-studio-code-lifehack-that-saved-me-a-ton-of-time-23b1</link>
      <guid>https://dev.to/harsvnc/visual-studio-code-lifehack-that-saved-me-a-ton-of-time-23b1</guid>
      <description>&lt;p&gt;Do you know that situation when you have a huge file with a lot of lines in vs code and you jump from one line to another and lose your orientation where you where last?&lt;/p&gt;

&lt;p&gt;Don't worry, i got you!&lt;/p&gt;

&lt;p&gt;By simply pressing&lt;br&gt;&lt;br&gt;
Alt + ⬅️ on &lt;strong&gt;Windows&lt;/strong&gt; or &lt;br&gt;
control + "-" (minus letter) on &lt;strong&gt;Mac&lt;/strong&gt; &lt;br&gt;
you will navigate to the last courser position. &lt;/p&gt;

&lt;p&gt;Thanks and i hope i could save you some time =)&lt;/p&gt;

&lt;p&gt;If you likes this post you may will like some of my other posts too, like &lt;a href="https://dev.to/harsvnc/the-css-chrome-dev-tool-you-didnt-know-of-3155"&gt;that one chrome extension you didn't know of&lt;/a&gt;. 🧑‍💻 ✅&lt;br&gt;
Or just follow me on&lt;a href="https://twitter.com/harsvnc"&gt;Twitter&lt;/a&gt; 📢 ✅&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Listen to the S7E3 of DevDiscuss: "Getting a Read on Tech Publishing"</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 24 Nov 2021 18:56:56 +0000</pubDate>
      <link>https://dev.to/devteam/listen-to-the-s7e3-of-devdiscuss-getting-a-read-on-tech-publishing-3e7g</link>
      <guid>https://dev.to/devteam/listen-to-the-s7e3-of-devdiscuss-getting-a-read-on-tech-publishing-3e7g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#there-might-be-a-book-inside-of-you-waiting-to-be-written-lets-explore-that-in-this-weeks-episode-of-devdiscuss"&gt;
  &lt;/a&gt;
  There might be a book inside of you waiting to be written. Let's explore that in this week's episode of DevDiscuss...
&lt;/h2&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devdiscuss/s7-e3-getting-a-read-on-tech-publishing"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S7:E3 - Getting a Read on Tech Publishing&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devdiscuss"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevDiscuss
      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s7-e3-getting-a-read-on-tech-publishing" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s7-e3-getting-a-read-on-tech-publishing" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s7-e3-getting-a-read-on-tech-publishing" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s7-e3-getting-a-read-on-tech-publishing" alt="DevDiscuss" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtvK04RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j-SdIkjZ--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s7-e3-getting-a-read-on-tech-publishing"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devdiscuss/s7-e3-getting-a-read-on-tech-publishing"&gt;
      &lt;img id="episode-profile-image" alt="S7:E3 - Getting a Read on Tech Publishing" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--zTELFWpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--otY2jCJh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Quick refresher — DevDiscuss is the first original podcast from DEV all about the burning topics that impact all our lives as developers.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Episode Info&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;In S7E3, we talk about the fascinating world of tech publishing. If you're here on DEV contributing content, this episode is made for you!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hosts"&gt;
  &lt;/a&gt;
  Hosts:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/ben"&gt;@ben&lt;/a&gt;
 — Creator of DEV &amp;amp; Co-Founder of Forem&lt;/li&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/coffeecraftcode"&gt;@coffeecraftcode&lt;/a&gt;
 — Developer Advocate at Forem&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#guests"&gt;
  &lt;/a&gt;
  Guests:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://twitter.com/@theledu"&gt;Katel LeDû&lt;/a&gt; is the CEO of A Book Apart, where she helps passionate tech community members become successful authors. She’s also a personal and professional transformation coach, focused on helping folks cultivate creativity, develop social awareness in themselves and at work, and embody sensitivity and empathy as superpowers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us know your thoughts on this show in the comments below — or on Twitter (&lt;a href="https://twitter.com/thepracticaldev"&gt;@thepracticaldev&lt;/a&gt; ).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0zcTd9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/qZelsWAXfWpAA/giphy.gif%3Fcid%3Decf05e47ddu6jql6tkj8kvdmj4z5ofal65l38f235ruuinlo%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0zcTd9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/qZelsWAXfWpAA/giphy.gif%3Fcid%3Decf05e47ddu6jql6tkj8kvdmj4z5ofal65l38f235ruuinlo%26rid%3Dgiphy.gif%26ct%3Dg" alt="Speakers" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devdiscuss"&gt;follow DevDiscuss&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; — or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  Quick Listening Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s7-e3-getting-a-read-on-tech-publishing/id1513053883?i=1000542927515"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/75aoNPdGIKUREVuIxsAaua"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5kZXZwb2RzLmRldi9kZXZkaXNjdXNzX3BvZGNhc3QueG1s/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZkaXNjdXNzLzUy?sa=X&amp;amp;ved=0CAQQkfYCahcKEwjA4PPM1rH0AhUAAAAAHQAAAAAQCg"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devdiscuss-dev-xtQvoDylAUg/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevDiscuss-p1324596/?topicId=167986563"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://devpods.herokuapp.com/podcasts/devdiscuss/episodes/232"&gt;DEV Pods Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Our season seven sponsors: &lt;a href="https://www.microsoft.com/en-us/dev-community/Event/Register?eventId=DevDiscussPodcast_o7nllI4cp4Vg&amp;amp;ocid=aid3038582"&gt;Microsoft&lt;/a&gt;, &lt;a href="https://developer.newrelic.com/"&gt;New Relic&lt;/a&gt;, &amp;amp; &lt;a href="https://dev.toource=devdiscuss&amp;amp;utm_medium=syndication&amp;amp;utm_campaign=october21"&gt;Vultr&lt;/a&gt;!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>discuss</category>
      <category>podcast</category>
    </item>
    <item>
      <title>Understanding Basic Coding Terminology: Industry Basics ✏️</title>
      <author>Amy Oulton</author>
      <pubDate>Wed, 24 Nov 2021 18:37:24 +0000</pubDate>
      <link>https://dev.to/amyoulton/understanding-basic-coding-terminology-industry-basics-43p7</link>
      <guid>https://dev.to/amyoulton/understanding-basic-coding-terminology-industry-basics-43p7</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This article was originally written by me for &lt;a href="//codecast.io"&gt;CodeCast&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you’re just entering the world of development, one of the first things you will likely notice is how much jargon there is. I know when I first started, it felt like there was at least one word in every sentence that I had never heard before. Like any field, there is very specific jargon related to the field of development. With coding, there is specific jargon for different types of programming as well as jargon that is unique to specific languages, libraries, and frameworks. &lt;/p&gt;

&lt;p&gt;I know I've looked up what words mean only to be more confused after reading the definition. It can all feel a little daunting to start, so our goal in this post is to introduce some of the broader and more commonly used terms in coding to help get you started on your coding journey!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8ib2eoO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uvm6n4ppi7pjw8utemqy.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ib2eoO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uvm6n4ppi7pjw8utemqy.jpeg" alt="Exhausted Dev" width="880" height="588"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#developerprogrammer"&gt;
  &lt;/a&gt;
  Developer/Programmer
&lt;/h3&gt;

&lt;p&gt;Even in the small amount of text you’ve already read, both of these things have come up. They’re mentioned basically everywhere, and one of the most common questions from people new to coding is "what is the difference between a programmer and a developer". Essentially, within the industry, these two terms are used almost interchangeably. There are some technical differences between them, but even that meaning can shift from company to company. But generally speaking, a programmer has a more specific task or workload than a developer. A programmer will be working on a project in a much narrower scope, instead of having the hands in many different pieces of the pie like a developer. &lt;/p&gt;

&lt;p&gt;But for simplicity's sake, especially when you’re just starting out, it’s safe to understand that when you read ‘programmer’ or ‘developer’, they are meaning ‘someone who codes’.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontendbackendfull-stack"&gt;
  &lt;/a&gt;
  Front-End/Back-End/Full Stack
&lt;/h3&gt;

&lt;p&gt;One of the first things you will be introduced to (and likely already have been) when you look into the world of coding are front-end and back-end developers. This is one of the easier concepts to grasp, as it’s quite simple in what the roles are.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Front-End Developer&lt;/strong&gt;:  Someone who codes the aspects of a web application that a user directly interacts with. This includes all the visual aspects of the application, as well as the interactivity and functionality. They’ll be the ones to make the requests to the back-end and implement the information the back-end provides to them. Because of all this, the front-end is known as the “client-side”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Back-End Developer&lt;/strong&gt;: Someone who is responsible for the “server-side” logic of the application. Essentially, they’ll use the requests made by the front-end to return information from things like a database or an API that the front-end can use. We’ll get more into what these two terms mean later.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Full-Stack&lt;/strong&gt;: You may have already guessed this one, but a full-stack developer is someone who works on both the client and server-side. Generally, most programs or bootcamps will teach coding as full-stack because even if someone prefers to work in either the front or back-end, and eventually seeks jobs only doing one, you need a solid understanding of the other side to know what your code is doing.‍&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Database&lt;/strong&gt;: A database is simply a collection of data. It’s where all the information is stored, like users' emails, passwords, names, birthdays, etc. It’s what the server extracts data from to obtain the specific information a client may be requesting. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#api"&gt;
  &lt;/a&gt;
  API
&lt;/h3&gt;

&lt;p&gt;An API stands for Application Program Interface. Clear as mud right? API’s are one of the things I struggled with wrapping my head around in my bootcamp because they can be a bit difficult to grasp as a beginner. In very simple terms, an API is something that allows you to communicate with a separate piece of software. It allows you to make a request to an entirely different piece of software than you’re currently working on, and receive a specific piece of data or information back. Often this is a third-party API and there will be clear documentation on how to make the requests to get back the desirable information. &lt;/p&gt;

&lt;p&gt;API’s are a bit difficult to wrap your head around, but understanding will come as you use them. Think of this example. You visit a website for a restaurant and you click on a specific location, which brings up a small map showing you the location. The website (almost definitely) didn’t create a match from scratch, but instead, made a request to an API (like Google Maps API) with a location, and the API gave it back the information needed to render out the map on the page. &lt;/p&gt;

&lt;p&gt;If you want to read more into APIs, I personally really like &lt;a href="https://www.howtogeek.com/343877/what-is-an-api/"&gt;this article&lt;/a&gt; by How To Geek, as they really try to simplify it while going deeper into what APIs are.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#languagelibraryframework"&gt;
  &lt;/a&gt;
  Language/Library/Framework
&lt;/h3&gt;

&lt;p&gt;This one is a bit more difficult, at least in my opinion, to wrap your head around. I will do my best to explain it in a simplified version. These terms are vast and can vary (annoyingly so!). So think of these definitions as a guide to get you understanding the concepts as a whole, as opposed to the hard and fast rules of what they are.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Language&lt;/strong&gt;: The language is all the syntax, grammar, and rules for how you write different parts of code, like functions, variables, classes, etc. The language is just a set of rules for how something needs to look syntactically to work.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Library&lt;/strong&gt;: A library is a collection of individual pieces of pre-written code. Many languages have pre-set libraries that are built by the people who developed the language. These are called standard libraries. There are also third-party libraries that people have written to make coding in a specific language easier. You can think of a library as something that provides you with ‘helper functions’, something that has a consistent output that you don’t have to write yourself. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Framework&lt;/strong&gt;: A framework is essentially what we know the word to mean in common speech: a foundation which you can build on top of. The framework is the base on which you add your own code to. Most frameworks have a collection of libraries that provide structure and common tools to begin building your code. Frameworks define how the base and structure of the code should work, making less room for errors.&lt;/p&gt;

&lt;p&gt;Again, this is a highly simplified version and as your journey progresses, they will likely get a bit more complicated, but so is the life of a developer!&lt;/p&gt;

&lt;p&gt;Alright, for now, I think this is a good place to start. These are some of the broad and vague concepts and terms used within the industry and are important to know when learning how to code. I intend to continue this series, so keep an eye out for more blog posts coming later!&lt;/p&gt;

&lt;p&gt;Find more of my stuff here:&lt;br&gt;
&lt;a href="https://dev.to/amyoulton/how-to-avoid-common-mistakes-made-by-junior-developers-4j5j"&gt;How To: Avoid Common Mistakes By Junior Devs&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/amyoulton/essential-keyboard-shortcuts-for-developers-plc"&gt;Essential Keyboard Shortcuts&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.codecast.io/casts/KPjp7XYOQw2A-javascript-classes-constructors"&gt;JavaScript Constructors&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>devops</category>
    </item>
    <item>
      <title>How To Hire the Right Bubble Developer</title>
      <author>Lisa Dziuba</author>
      <pubDate>Wed, 24 Nov 2021 18:31:42 +0000</pubDate>
      <link>https://dev.to/lisadziuba/how-to-hire-the-right-bubble-developer-3lkc</link>
      <guid>https://dev.to/lisadziuba/how-to-hire-the-right-bubble-developer-3lkc</guid>
      <description>&lt;p&gt;🤔 Did you know that no-code is the future? No-code development is fast becoming the ideal option for startups, small businesses, and enterprises to build and scale products quickly. &lt;/p&gt;

&lt;p&gt;One of the amazing no-code tools in the space is Bubble, an app that lets you build websites and web apps without coding.&lt;/p&gt;

&lt;p&gt;If you’re considering building your product on Bubble and hiring Bubble developers, my team wrote a comprehensive guide on &lt;a href="https://welovenocode.com/hire-bubble-developers"&gt;hiring Bubble developers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Those are the top 5 benefits of hiring a Bubble developer:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Low-cost: Although it can be more expensive to hire full-stack developers, the cost is much lower when hiring a Bubble developer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Faster development: The process of writing custom software is much faster when using no-code tools, so you'll have your new application in a shorter time frame than hiring full-stack developers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Better quality: Because no-code tools allow you to write code without much overhead, the quality of your application will be more excellent than with full-stack developers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Better testing: The process of writing custom software is much faster when using no-code.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hiring for any technical role is challenging and time-consuming but good preparation will help a lot. So let's go through a checklist of soft &amp;amp; hard skills that you need to consider and put in place when you want to hire a Bubble developer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Previous Bubble projects &amp;amp; experience with Bubble templates&lt;/li&gt;
&lt;li&gt;Passion for no-code and Bubble&lt;/li&gt;
&lt;li&gt;Agile experience&lt;/li&gt;
&lt;li&gt;UX design skills&lt;/li&gt;
&lt;li&gt;Problem-solving skills&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>nocode</category>
      <category>lowcode</category>
      <category>hiring</category>
    </item>
  </channel>
</rss>
