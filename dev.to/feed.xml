<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Extending Bootstrap components using utility classes only, just like Tailwind</title>
      <author>Alexis</author>
      <pubDate>Thu, 09 Dec 2021 10:06:34 +0000</pubDate>
      <link>https://dev.to/webpixels/extending-bootstrap-components-using-utility-classes-only-just-like-tailwind-59am</link>
      <guid>https://dev.to/webpixels/extending-bootstrap-components-using-utility-classes-only-just-like-tailwind-59am</guid>
      <description>&lt;p&gt;In this post, I will talk about the utility classes concept to demonstrate how you can use Bootstrap in a way that allows you to build faster, better, and with no duplicate code or custom CSS classes.&lt;/p&gt;

&lt;p&gt;Using the utility API included in the framework, you can create classes like &lt;code&gt;mx-auto&lt;/code&gt; or &lt;code&gt;shadow-5&lt;/code&gt; to change the default style of an element, just like Tailwind does. This is a great approach that allows us to remain consistent, by having pre-built patterns (buttons, cards, etc.) and these classes to tweak the components quickly without messing with CSS. &lt;/p&gt;

&lt;p&gt;To make things easier in my development process, I created a Bootstrap 5 extension to add new components that are not included in the core of the framework (e.g. avatars), new colors and typography, and an extended set of utility classes to allow you to customize your components directly into you HTML. It is open-source. Here is the &lt;a href="https://webpixels.io/docs/css/1.0/transform"&gt;demo&lt;/a&gt; and the &lt;a href="https://github.com/webpixels/css"&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customizing-bootstrap-components"&gt;
  &lt;/a&gt;
  Customizing Bootstrap components
&lt;/h2&gt;

&lt;p&gt;How can you customize and extend a Bootstrap component? There are two approaches I recommend:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-the-sass-variables"&gt;
  &lt;/a&gt;
  Using the Sass variables
&lt;/h3&gt;

&lt;p&gt;I highly recommend using Sass when you want to change the default style provided by Bootstrap. Change the padding, color, border using variables. Bootstrap did a great job documenting each component and its variables.&lt;/p&gt;

&lt;p&gt;Say you want to change the appearance of the alert component. Head to the documentation and scroll to the Sass variables section. You will find something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="nv"&gt;$alert-padding-y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;               &lt;span class="nv"&gt;$spacer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$alert-padding-x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;               &lt;span class="nv"&gt;$spacer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$alert-margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;           &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$alert-border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;           &lt;span class="nv"&gt;$border-radius&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$alert-link-font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="nv"&gt;$font-weight-bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$alert-border-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;            &lt;span class="nv"&gt;$border-width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$alert-bg-scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;                &lt;span class="m"&gt;-80%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$alert-border-scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;            &lt;span class="m"&gt;-70%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$alert-color-scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;             &lt;span class="m"&gt;40%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$alert-dismissible-padding-r&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="nv"&gt;$alert-padding-x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 3x covers width of x plus default padding on either side&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace the values with your own and compile it to see the changes using Gulp, Webpack, Laravel Mix, or your current setup.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-utility-classes"&gt;
  &lt;/a&gt;
  Using utility classes
&lt;/h3&gt;

&lt;p&gt;Instead of creating new custom CSS classes, you can use utilities. These allow you to avoid duplicate code and help you keep things very clean. Every time you need a custom style or behavior for your components, try using utility classes.&lt;/p&gt;

&lt;p&gt;Say you want a pill button. Instead of going to your CSS and create a new class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.btn-pill&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;border-radius-pill&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It would look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-primary rounded-pill"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Button&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So simple right? And this is just the easiest example. Things get much more interesting when you need more complex stuff. &lt;/p&gt;

&lt;p&gt;Check out how I used the transform utilities to change the orientation or rotation of an element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"d-flex"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"transform translate-x-n1/2 translate-y-n1/2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"transform rotate-12"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"transform skew-x-12"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"transform scale-50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://webpixels.io/docs/css/"&gt;Check out the documentation&lt;/a&gt; to see all the utility classes included in Webpixels CSS using the Bootstrap utility API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-responsive-breakpoints"&gt;
  &lt;/a&gt;
  Using the responsive breakpoints
&lt;/h2&gt;

&lt;p&gt;Use the &lt;code&gt;.transform-none&lt;/code&gt; to remove this behaviour on any breakpoint.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"transform translate-x-32 transform-md-none"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;This was just a short introduction to the Bootstrap utility API and how you can use Webpixels CSS to extend the framework's default look and feel.&lt;/p&gt;

&lt;p&gt;What do you think about this approach? Is this how you build UIs too, or do you prefer a different method? 🤔&lt;/p&gt;

</description>
      <category>bootstrap</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>Advent of code  Day 9</title>
      <author>Marco Servetto</author>
      <pubDate>Thu, 09 Dec 2021 10:03:34 +0000</pubDate>
      <link>https://dev.to/marcoservetto/advent-of-code-day-9-4l7p</link>
      <guid>https://dev.to/marcoservetto/advent-of-code-day-9-4l7p</guid>
      <description>&lt;p&gt;I'm very satisfied for my solution today.&lt;br&gt;
This problem fits very well with AdamsTowel matrixes.&lt;br&gt;
You can see a video description of my solution at &lt;br&gt;
(&lt;a href="https://www.youtube.com/watch?v=tSTDJlICst8"&gt;https://www.youtube.com/watch?v=tSTDJlICst8&lt;/a&gt;)&lt;br&gt;
Some highlights of the solution:&lt;br&gt;
(1)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(new=that.with(row=\row-1\) catch error Any _ void \add(new))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is making a new coordinate and adding it to the list under construction. If the coordinate would be outside of the matrix, an error is raised and ignored.&lt;br&gt;
(2)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sizes=I.List()( for i in Range(seeds.size()) 
    \add(Match.Count()(for v in matrix \add(v==i+100I)))
    )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we taint the seeds using a number much bigger than any height.&lt;br&gt;
The number can be tracked back as the corresponding seed index.&lt;/p&gt;

&lt;p&gt;(3)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GrowBasin={class method Void(mut Matrix matrix)=(
  for c in matrix.coords() var h in matrix {
    if h&amp;gt;=9I return void
    return for ci in Near(c) if matrix.val(ci)&amp;gt;99I return h:=matrix.val(ci)
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To grow a basin one step, we search for all the coordinates c of height h; if there is a ci near c that is tainted with a basin number, we taint the current height too.&lt;/p&gt;

&lt;p&gt;Here is the full code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;reuse [L42.is/AdamsTowel]

Fs = Load:{reuse[L42.is/FileSystem]}

Matrix = Collection.matrix(I.List,row=100I, col=100I)

Coords = Collection.list(Matrix.Coord)

Split={class method S.List (S that)=\()(//should be in adamsTowel
  for c in that.replace(S"" with=S",").split(S",")\add(c)
  )}
Near={class method Coords (Matrix.Coord that)=Coords()((
  (new=that.with(row=\row-1\) catch error Any _ void \add(new))
  (new=that.with(row=\row+1\) catch error Any _ void \add(new))
  (new=that.with(col=\col-1\) catch error Any _ void \add(new))
  (new=that.with(col=\col+1\) catch error Any _ void \add(new))
  ))}
GrowBasin={class method Void(mut Matrix matrix)=(
  for c in matrix.coords() var h in matrix {
    if h&amp;gt;=9I return void
    return for ci in Near(c) if matrix.val(ci)&amp;gt;99I return h:=matrix.val(ci)
    }
  )}
NeedsMore={class method Bool(read Matrix matrix) = 
  Match.Some()(for e in matrix \add(e&amp;lt;9I))  
  }
PopMax ={class method I (mut I.List that)=(
  var i = 0I
  var e = 0I
  for ei in that, ii in Range(that.size()) if ei&amp;gt;e (
    e:=ei, i:=ii
    )
  that.remove(i)
  e
  )}

MainPart2 = (
  input = Fs.Real.#$of().read(\"input")
  matrix = Matrix(\()(
    for s in input.split(S.nl()) for si in Split(s) \add(I(string=si))
    ))
  seeds = Coords()(for c in matrix.coords() h in matrix (
    min = Match.All()(for ci in Near(c) \add(matrix.val(ci)&amp;gt;h))
    if min \add(c)
    ))
  for c in seeds, i in Range(seeds.size()) (matrix.set(c val=i+100I))
  while NeedsMore(matrix=matrix) ( GrowBasin(matrix=matrix) )
  sizes=I.List()( for i in Range(seeds.size()) 
    \add(Match.Count()(for v in matrix \add(v==i+100I)))
    )
  v1=PopMax(sizes)
  v2=PopMax(sizes)
  v3=PopMax(sizes)
  Debug(v1*v2*v3)//882942
  )

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>adventofcode</category>
      <category>adventofcode2021</category>
      <category>programming</category>
      <category>42</category>
    </item>
    <item>
      <title>Data Types in JavaScript</title>
      <author>Khyati Baria</author>
      <pubDate>Thu, 09 Dec 2021 09:50:19 +0000</pubDate>
      <link>https://dev.to/khyatibaria/data-types-in-javascript-1mal</link>
      <guid>https://dev.to/khyatibaria/data-types-in-javascript-1mal</guid>
      <description>&lt;p&gt;Data types describe the characteristics of data stored in a variable. Data types can be divided into two:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Primitive Data types&lt;/li&gt;
&lt;li&gt;Non-primitive Data types&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;1. Primitive Data Types&lt;/strong&gt;&lt;br&gt;
Primitive data types are immutable or non-modifiable data types. Once a primitive data type is created we cannot modify it. Primitive data types in JavaScript include:-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Number&lt;/strong&gt;&lt;br&gt;
Number datatype can stores both integers and decimal values. Using Number data type we can do all the arithmetic operations.&lt;br&gt;
&lt;code&gt;let age = 21;&lt;br&gt;
var quantity= 12;&lt;br&gt;
const gravity = 9.81  // we use const for non-changing values&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Strings&lt;/strong&gt;&lt;br&gt;
Strings data type are used to store textual data. To declare a string, we need a variable name, assignment operator, and a value under a single quote, double quote, or backtick quote.&lt;br&gt;
&lt;code&gt;let userName = "Khyati";&lt;br&gt;
let city = 'Mumbai';&lt;br&gt;
let language = 'JavaScript';&lt;br&gt;
let space = ' ';           // an empty space string&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Booleans&lt;/strong&gt;&lt;br&gt;
The Boolean data type can store only two values i.e. true and false.This type is commonly used to store yes or no types values.&lt;br&gt;
&lt;code&gt;var yes = true;&lt;br&gt;
var no= false;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Null&lt;/strong&gt;&lt;br&gt;
null data type is special type of placeholder in JavaScript. Null value represents the intentional absence of any object value.&lt;br&gt;
&lt;code&gt;var vaule = null;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Undefined&lt;/strong&gt;&lt;br&gt;
The undefined data type is special type of placeholder in JavaScript, undefined means “value is not assigned”. If a variable is declared, but not assigned, then its value is undefined.&lt;br&gt;
&lt;code&gt;var  userName;&lt;br&gt;
console.log(userName);  // shows "undefined"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Non-primitive Data Types&lt;/strong&gt;&lt;br&gt;
Non-primitive data types are modifiable or mutable. We can modify the value of non-primitive data types even after it gets created. Non-primitive data types in JavaScript includes:-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Arrays&lt;/strong&gt;&lt;br&gt;
Arrays data type are used to store multiple values at a time in single variable. An array is a list of values store within a variable, and can access these values by referring to their index number.&lt;br&gt;
&lt;code&gt;let numbers = [1, 2, 3];&lt;br&gt;
let fruits=['apple', 'banana', 'mango'];&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Objects&lt;/strong&gt;&lt;br&gt;
Objects are the complex data type in JavaScript. Object tries to map real like things in programing. Object stores the data in form of key value pair. Where key is string and value can be anything.&lt;br&gt;
&lt;code&gt;let car={&lt;br&gt;
name: 'Honda City',&lt;br&gt;
model: 'VMT' ,&lt;br&gt;
color: 'Black',&lt;br&gt;
}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So this is it for this article. If you find it informative please leave a like and consider following me. Thanks for reading.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Binary Tree Traversal, Part 1</title>
      <author>Mia</author>
      <pubDate>Thu, 09 Dec 2021 09:50:18 +0000</pubDate>
      <link>https://dev.to/miatemma/binary-tree-traversal-part-1-2m0m</link>
      <guid>https://dev.to/miatemma/binary-tree-traversal-part-1-2m0m</guid>
      <description>&lt;p&gt;In the last post, we discussed how &lt;a href="https://picolisp-blog.hashnode.dev/picolisp-explored-the-idx-function"&gt;binary trees&lt;/a&gt; are created in PicoLisp. Now let's play a little more with them. See the following &lt;a href="https://rosettacode.org/wiki/Tree_traversal#PicoLisp"&gt;task from the Rosetta Code&lt;/a&gt;:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#task"&gt;
  &lt;/a&gt;
  Task
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Implement a binary tree where each node carries an integer, and implement:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pre-order,&lt;/li&gt;
&lt;li&gt;in-order,&lt;/li&gt;
&lt;li&gt;post-order, and&lt;/li&gt;
&lt;li&gt;level-order traversal. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use those traversals to output the following tree:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;         1
        / \
       /   \
      /     \
     2       3
    / \     /
   4   5   6
  /       / \
 7       8   9
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The correct output should look like this:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;preorder:    1 2 4 7 5 3 6 8 9
inorder:     7 4 2 5 1 8 6 9 3
postorder:   7 4 5 2 8 9 6 3 1
level-order: 1 2 3 4 5 6 7 8 9
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#some-thoughts-about-the-task"&gt;
  &lt;/a&gt;
  Some thoughts about the task
&lt;/h3&gt;

&lt;p&gt;The first thing we need to clarify is the meaning of "preorder", "inorder", "postorder" and "level-order". This &lt;a href="https://en.wikipedia.org/wiki/Tree_traversal"&gt;Wikipedia article&lt;/a&gt; can help:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;preorder&lt;/strong&gt;: visit current node, traverse the left subtree, traverse right subtree. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;inorder&lt;/strong&gt;  traverse left subtree, visit current node, traverse right subtree. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;postorder&lt;/strong&gt; traverse left subtree, traverse right subtree, visit  current node. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;level-order&lt;/strong&gt;  (also called "breadth first search") the tree is broadened as much as possible before going to the next depth.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One key characteristic of binary trees is that a "large" binary tree is constructed from a repetitive pattern of "small" trees. This is very convenient for us: It means we can define the above four rules in a very simple way &lt;strong&gt;by use of recursion&lt;/strong&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#step-1-defining-the-tree"&gt;
  &lt;/a&gt;
  Step 1. Defining the tree
&lt;/h2&gt;

&lt;p&gt;We have learned in the previous post that a binary tree is represented as a nested list where the syntax is &lt;code&gt;(root (left-child) right-child)&lt;/code&gt;. Let's set a global variable &lt;code&gt;*Tree&lt;/code&gt; as list:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(setq *Tree
   (1
      (2 (4 (7)) (5))
      (3 (6 (8) (9))) ) )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;You can double-check the tree structure in the REPL with &lt;code&gt;(view &amp;lt;var&amp;gt;)&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Question: &lt;strong&gt;Why didn't we use the &lt;code&gt;idx&lt;/code&gt; function as learned in the previous post?&lt;/strong&gt; - Because the tree from the task is not a &lt;em&gt;search&lt;/em&gt; tree. In a search tree, the left child is supposed to be smaller, the right child larger than the root.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-recursive-nature-of-binary-trees"&gt;
  &lt;/a&gt;
  The recursive nature of binary trees
&lt;/h2&gt;

&lt;p&gt;Now we need to think a little bit about the nature of binary trees. We said before that a large binary tree is a &lt;em&gt;composition&lt;/em&gt; of small binary trees. What does that mean exactly? &lt;/p&gt;

&lt;p&gt;Look at the binary tree example from above and "chop" off the root. What do you get? &lt;strong&gt;Two new binary trees!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YzHiGID---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631698821200/WmDepGhHW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YzHiGID---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631698821200/WmDepGhHW.png" alt="choppedtree.png" width="517" height="330"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Together with the fact that binary trees are actually implemented as lists, this is a very handy characteristics. In lists we can access the first list element with the &lt;code&gt;car&lt;/code&gt; function, and all the rest with the &lt;code&gt;cdr&lt;/code&gt;-function. &lt;em&gt;(Go back to the &lt;a href="https://picolisp-blog.hashnode.dev/60-picolisp-functions-you-should-know-6-lists-and-strings"&gt;List and Strings post&lt;/a&gt; if you forgot why).&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;: (car *Tree)
-&amp;gt; (1)
: (cdr *Tree)
-&amp;gt; -&amp;gt; ( (2 (4 (7)) (5)) (3 (6 (8) (9))) )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we know that &lt;code&gt;2, 4, 7, 5&lt;/code&gt; forms one subtree, and &lt;code&gt;3, 6, 8, 9&lt;/code&gt; forms another subtree. This corresponds to the output of &lt;code&gt;(cdr *Tree)&lt;/code&gt;:  &lt;code&gt;( (subtree 2-4-7-5) (subtree 3-6-8-9)&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;This means: &lt;strong&gt;if we do &lt;code&gt;car&lt;/code&gt; and &lt;code&gt;cdr&lt;/code&gt; on &lt;code&gt;(cdr *Tree)&lt;/code&gt;, we can get the subtrees on each side.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Instead of &lt;code&gt;car (cdr ...)&lt;/code&gt; we can write &lt;code&gt;cadr&lt;/code&gt;, and instead of &lt;code&gt;cdr (cdr ..)&lt;/code&gt;, we can write &lt;code&gt;cddr&lt;/code&gt;. So let's use this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;: (cadr *Tree)
-&amp;gt; (2 (4 (7)) (5))
: (cddr *Tree)
-&amp;gt; ((3 (6 (8) (9))))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
&lt;code&gt;&lt;br&gt;
Looks almost good, only one minor modification is needed.&lt;/code&gt;&lt;code&gt;cddr&lt;/code&gt;&lt;code&gt;returns a **list with only one item**. In order to get this single item, let's take the&lt;/code&gt;&lt;code&gt;car&lt;/code&gt;&lt;code&gt;of&lt;/code&gt;&lt;code&gt;cddr&lt;/code&gt;&lt;code&gt;, in short&lt;/code&gt;&lt;code&gt;caddr&lt;/code&gt;`, for the right subtree:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
: (caddr *Tree)&lt;br&gt;
-&amp;gt; (3 (6 (8) (9)))&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;




&lt;p&gt;One last thing to mention is that the &lt;code&gt;&lt;/code&gt;car&lt;code&gt;&lt;/code&gt; and &lt;code&gt;&lt;/code&gt;cdr&lt;code&gt;&lt;/code&gt; functions do not modify the original &lt;code&gt;&lt;/code&gt;&lt;em&gt;Tree&lt;code&gt;&lt;/code&gt;. We merely move the pointers around. This means, these functions are **not destructive&lt;/em&gt;*:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;`&lt;br&gt;
: *Tree&lt;br&gt;
-&amp;gt; (1 (2 (4 (7)) (5)) (3 (6 (8) (9))))&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-endraw-raw-"&gt;
  &lt;/a&gt;
  `&lt;code&gt;&lt;/code&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#and-recurse"&gt;
  &lt;/a&gt;
  ...and recurse!
&lt;/h3&gt;

&lt;p&gt;Let's double-check the recursive nature of our tree. Let's take the left subtree, &lt;code&gt;&lt;/code&gt;2-4-7-5&lt;code&gt;&lt;/code&gt;. Again, we get the &lt;strong&gt;node&lt;/strong&gt; by &lt;code&gt;&lt;/code&gt;car&lt;code&gt;&lt;/code&gt;, the &lt;strong&gt;left subtree&lt;/strong&gt; by the &lt;code&gt;&lt;/code&gt;cadr&lt;code&gt;&lt;/code&gt; and the &lt;strong&gt;right subtree&lt;/strong&gt; by &lt;code&gt;&lt;/code&gt;caddr&lt;code&gt;&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
: (car (cadr *Tree))&lt;br&gt;
-&amp;gt; 2&lt;br&gt;
: (cadr (cadr *Tree))&lt;br&gt;
-&amp;gt; (4 (7))&lt;br&gt;
: (caddr (cadr *Tree))&lt;br&gt;
-&amp;gt; (5)&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;br&gt;
If we try to access a breach that does not exist, we get &lt;code&gt;&lt;/code&gt;NIL&lt;code&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
: (caddr (caddr (cadr *Tree)))&lt;br&gt;
-&amp;gt; NIL&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#step-2-defining-the-functions"&gt;
  &lt;/a&gt;
  Step 2. Defining the functions
&lt;/h2&gt;

&lt;p&gt;Now comes the interesting part - how can we use this recursive nature to solve the pre-order task? Well, the definition from above already tells us how to do it:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;preorder&lt;/strong&gt;: visit current node, traverse the left subtree, traverse right subtree. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's define a function &lt;code&gt;&lt;/code&gt;preorder&lt;code&gt;&lt;/code&gt;, with an argument &lt;code&gt;&lt;/code&gt;Tree&lt;code&gt;&lt;/code&gt; (which is a list, as we know now). If &lt;code&gt;&lt;/code&gt;Tree&lt;code&gt;&lt;/code&gt; is defined, let's print its root:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
(de preorder (Tree)&lt;br&gt;
    (printsp (car Tree)&lt;br&gt;
    ....&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we want to "traverse the left subtree", and if there is a left child, we print it. And then we take again the left child, if available. If there is no left child, we return &lt;code&gt;&lt;/code&gt;NIL&lt;code&gt;&lt;/code&gt; and try the right side next. Well, and that's already all there is to do.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
(de preorder (Tree)&lt;br&gt;
   (when Tree&lt;br&gt;
      (printsp (car Tree))&lt;br&gt;
      (preorder (cadr Tree) )&lt;br&gt;
      (preorder (caddr Tree) ) ) )&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The function returns &lt;code&gt;&lt;/code&gt;1 2 4 7 5 3 6 8 9&lt;code&gt;&lt;/code&gt;. &lt;/p&gt;




&lt;p&gt;Now it is easy to define &lt;code&gt;&lt;/code&gt;inorder&lt;code&gt;&lt;/code&gt; and &lt;code&gt;&lt;/code&gt;postorder&lt;code&gt;&lt;/code&gt;.  Basically, they are just variations in order.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;inorder&lt;/strong&gt;:  traverse left subtree, visit current node, traverse right subtree. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
(de inorder (Tree)&lt;br&gt;
   (when Tree&lt;br&gt;
      (inorder (cadr Tree))&lt;br&gt;
      (printsp (car Tree))&lt;br&gt;
      (inorder (caddr Tree)) ) )&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;postorder&lt;/strong&gt;: traverse left subtree, traverse right subtree, visit  current node. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
(de postorder (Tree)&lt;br&gt;
   (when Tree&lt;br&gt;
      (postorder (cadr Tree))&lt;br&gt;
      (postorder (caddr Tree))&lt;br&gt;
      (printsp (car Tree)) ) )&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#step-3-calling-the-functions"&gt;
  &lt;/a&gt;
  Step 3. Calling the functions
&lt;/h2&gt;

&lt;p&gt;Last step is to call the functions and get the output.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;`&lt;br&gt;
(printsp 'preorder:) &lt;br&gt;
(preorder *Tree)&lt;br&gt;
(prinl)&lt;/p&gt;

&lt;p&gt;(printsp 'inorder:) &lt;br&gt;
(inorder *Tree)&lt;br&gt;
(prinl)&lt;/p&gt;

&lt;p&gt;(printsp 'postorder:) &lt;br&gt;
(postorder *Tree)&lt;br&gt;
(prinl)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-endraw-raw-"&gt;
  &lt;/a&gt;
  `&lt;code&gt;&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The code above is working, but very redundant with all its &lt;code&gt;&lt;/code&gt;printsp&lt;code&gt;&lt;/code&gt; and &lt;code&gt;&lt;/code&gt;prinl&lt;code&gt;&lt;/code&gt;. Let's try to improve it. We can simply pack all three functions in a list and loop through it:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
(for Order '(preorder inorder postorder)&lt;br&gt;
   (prin Order ": ")&lt;br&gt;
   (Order *Tree)&lt;br&gt;
   (prinl) )&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;br&gt;
&lt;em&gt;As you can see, &lt;code&gt;&lt;/code&gt;Order&lt;code&gt;&lt;/code&gt; can both work as **string&lt;/em&gt;* to be printed, or as &lt;strong&gt;function name&lt;/strong&gt;. This is one of the nice things you can do in functional languages!*&lt;/p&gt;

&lt;p&gt;Output:&lt;br&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
preorder: 1 2 4 7 5 3 6 8 9 &lt;br&gt;
inorder: 7 4 2 5 1 8 6 9 3 &lt;br&gt;
postorder: 7 4 5 2 8 9 6 3 1 &lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#wrapup"&gt;
  &lt;/a&gt;
  Wrap-Up
&lt;/h3&gt;

&lt;p&gt;So far, so good. However, we are not done yet: The &lt;code&gt;&lt;/code&gt;level-order&lt;code&gt;&lt;/code&gt; traversal route is missing. But before we do that, we will first study another interesting function that might help us wth that: the &lt;code&gt;&lt;/code&gt;fifo&lt;code&gt;&lt;/code&gt; function.&lt;/p&gt;




&lt;p&gt;You can download the finished code up to this point &lt;a href="https://gitlab.com/picolisp-blog/single-plage-scripts/-/blob/main/rosetta/tree-traversal-part1.l"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sources"&gt;
  &lt;/a&gt;
  Sources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://rosettacode.org/wiki/Tree_traversal"&gt;http://rosettacode.org/wiki/Tree_traversal&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>picolisp</category>
      <category>lisp</category>
      <category>functional</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Practice Asynchronous JavaScript with Quiz</title>
      <author>Sraboni Islam</author>
      <pubDate>Thu, 09 Dec 2021 09:35:44 +0000</pubDate>
      <link>https://dev.to/sraboni/practice-asynchronous-javascript-with-quiz-22a7</link>
      <guid>https://dev.to/sraboni/practice-asynchronous-javascript-with-quiz-22a7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#01-asynchronous-javascript-quiz"&gt;
  &lt;/a&gt;
  01. &lt;a href="https://www.codingame.com/playgrounds/347/javascript-promises-mastering-the-asynchronous/what-is-asynchronous-in-javascript"&gt;Asynchronous JavaScript quiz&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#02-asynchronous-javascript-quiz"&gt;
  &lt;/a&gt;
  02. &lt;a href="https://dev.to/ditdot/quiz-how-well-do-you-understand-asynchronous-javascript-5e4j"&gt;Asynchronous JavaScript quiz&lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Build a Successful DevOps Testing Strategy for Agile Teams</title>
      <author>Cody Simons</author>
      <pubDate>Thu, 09 Dec 2021 09:17:28 +0000</pubDate>
      <link>https://dev.to/codysimons20/how-to-build-a-successful-devops-testing-strategy-for-agile-teams-4le</link>
      <guid>https://dev.to/codysimons20/how-to-build-a-successful-devops-testing-strategy-for-agile-teams-4le</guid>
      <description>&lt;p&gt;As the definition suggests, speed and reliability are the two main objectives in a DevOps testing strategy.&lt;/p&gt;

&lt;p&gt;The traditional independent-working mindset would be removed by tightening the Dev (development) and Ops (operations) functions together. The process, in turn, makes tight delivery schedules for processes at scale less of a nightmare.&lt;br&gt;
&lt;a href="https://www.katalon.com/resources-center/blog/devops-testing-strategy/"&gt;How to Build a Successful DevOps Testing Strategy for Agile Teams&lt;/a&gt;&lt;/p&gt;

</description>
      <category>agile</category>
      <category>devops</category>
      <category>testing</category>
      <category>strategy</category>
    </item>
    <item>
      <title>Using Flex like a Pro</title>
      <author>Sumrit Grover</author>
      <pubDate>Thu, 09 Dec 2021 09:01:16 +0000</pubDate>
      <link>https://dev.to/grover_sumrit/using-flex-like-a-pro-5cm3</link>
      <guid>https://dev.to/grover_sumrit/using-flex-like-a-pro-5cm3</guid>
      <description>&lt;h3&gt;
  &lt;a href="#flex-defines-how-much-that-view-would-fill-the-screen"&gt;
  &lt;/a&gt;
  Flex defines how much that view would fill the screen.
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#space-would-be-divided-according-to-the-flex-property-of-each-element"&gt;
  &lt;/a&gt;
  Space would be divided according to the flex property of each element.
&lt;/h3&gt;

&lt;p&gt;In the following example, the container view has flex: 1. &lt;/p&gt;

&lt;p&gt;The red view has flex: 1, the yellow view has flex: 2, and the green view has flex: 3. &lt;/p&gt;

&lt;p&gt;1+2+3 = 6, which means that the red view will get 1/6 of the space, the yellow 2/6 of the space, and the green 3/6 of the space.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zHS3xPn2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l50svdkr2xcdhtywamkv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zHS3xPn2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l50svdkr2xcdhtywamkv.png" alt="Image description" width="880" height="342"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5eYrKk2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zljxfy2i3f2483rii7jo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5eYrKk2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zljxfy2i3f2483rii7jo.png" alt="Image description" width="150" height="261"&gt;&lt;/a&gt;&lt;/p&gt;







&lt;h3&gt;
  &lt;a href="#flexdirection"&gt;
  &lt;/a&gt;
  FlexDirection
&lt;/h3&gt;

&lt;p&gt;It is the property which defines the direction in which the child components are laid out. &lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#flexdirection-row"&gt;
  &lt;/a&gt;
  FlexDirection -"Row"
&lt;/h4&gt;

&lt;p&gt;Align children from left to right.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V5mLrjdD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rslipmcpbcpsrcq61ue.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V5mLrjdD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rslipmcpbcpsrcq61ue.png" alt="Image description" width="880" height="378"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2QzkvYMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jffvkj8zua1wqrhq0235.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2QzkvYMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jffvkj8zua1wqrhq0235.png" alt="Image description" width="198" height="37"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#flexdirection-columndefault"&gt;
  &lt;/a&gt;
  FlexDirection - Column(default)
&lt;/h4&gt;

&lt;p&gt;Align children from top to bottom.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x-VvUtzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmezglyz9i0ns4yw2rj1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x-VvUtzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmezglyz9i0ns4yw2rj1.png" alt="Image description" width="880" height="393"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JKsjz_vR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqk6wtvkeq2prfhv9asr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JKsjz_vR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqk6wtvkeq2prfhv9asr.png" alt="Image description" width="232" height="114"&gt;&lt;/a&gt;&lt;/p&gt;







&lt;blockquote&gt;
&lt;p&gt;Web development has tons of different layout techniques and &amp;gt;tricks available. While in React Native your best tool for &amp;gt;building layouts be will be Flexbox.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;&lt;br&gt;
Flexbox in React Native is a bit different from &lt;em&gt;CSS Flexbox&lt;/em&gt;. Differences are subtle but they are still there.&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Scraping a Web Page in Browser using XPath and Javascript</title>
      <author>Dendi Handian</author>
      <pubDate>Thu, 09 Dec 2021 07:53:52 +0000</pubDate>
      <link>https://dev.to/dendihandian/scrapping-a-web-page-in-browser-using-xpath-and-javascript-3m17</link>
      <guid>https://dev.to/dendihandian/scrapping-a-web-page-in-browser-using-xpath-and-javascript-3m17</guid>
      <description>&lt;p&gt;As a programmer we should think to automate anything related to our daily task every single time if possible. For instance when you gathering amount of data on a web page, rather than copying the text one-by-one you could do a simple web scraping.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-case"&gt;
  &lt;/a&gt;
  The Case
&lt;/h2&gt;

&lt;p&gt;I will demonstrate how to scrap the youtube playlist of PyCon ID 2020 Talks in this youtube page &lt;a href="https://www.youtube.com/playlist?list=PLIv0V1YCmEi3A6H6mdsoxh4RDpzvnJpMq"&gt;https://www.youtube.com/playlist?list=PLIv0V1YCmEi3A6H6mdsoxh4RDpzvnJpMq&lt;/a&gt;. As the result, I will have a list of the video titles.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zfmY8t5e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7dz4ac060oborpzi0sj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zfmY8t5e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7dz4ac060oborpzi0sj.png" alt="pycon id 2020 playlist" width="880" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-xpath"&gt;
  &lt;/a&gt;
  The XPath
&lt;/h2&gt;

&lt;p&gt;XPath is the query languange to get the nodes/element on the XML or HTML, you could learn it more on other resources like W3school &lt;a href="https://www.w3schools.com/xml/xpath_intro.asp"&gt;https://www.w3schools.com/xml/xpath_intro.asp&lt;/a&gt;. The simple query example for getting nodes containing the video titles is this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//a[@class="yt-simple-endpoint style-scope ytd-playlist-video-renderer"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The above xpath syntax may not work if the web page structure is changed in the future.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You could also try this yourself in the Chrome/Edge Browser developer tools, on the &lt;code&gt;Elements&lt;/code&gt; tab and &lt;code&gt;Ctrl + F&lt;/code&gt; to start using Xpath. The result indicates that it has 39 items and it seems to be right.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EPN9dLys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8309zb3zgjkhytqkdaqt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EPN9dLys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8309zb3zgjkhytqkdaqt.png" alt="xpath for the playlist" width="880" height="208"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-xpath-utility-function-in-javascript"&gt;
  &lt;/a&gt;
  The XPath Utility Function in Javascript
&lt;/h2&gt;

&lt;p&gt;After found the right xpath for the element, now open &lt;code&gt;Console&lt;/code&gt; tab in the browser developer tools to begin typing some javascript. Javascript has built-in XPath utility function that syntax like this &lt;code&gt;$x()&lt;/code&gt;. We could add the xpath string the function and check the length:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;//a[@class="yt-simple-endpoint style-scope ytd-playlist-video-renderer"]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h6OTVPnE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udk9i7dilifod22n2ndk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h6OTVPnE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udk9i7dilifod22n2ndk.png" alt="xpath result count" width="741" height="129"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If the output length matches the numbers of items we want to scrap, then the function will works. Now we just get list of titles and return it to the console screen:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;//a[@class="yt-simple-endpoint style-scope ytd-playlist-video-renderer"]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;()}).&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XPz6p1jJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypn04ix9r120uls718gx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XPz6p1jJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypn04ix9r120uls718gx.png" alt="xpath result list" width="880" height="259"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The output in the console may be weird because of the &lt;code&gt;\n&lt;/code&gt; but if you copy the string contents and paste it on the editor like Visual Studio Code, you will get the clean result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CZYe_U4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6acjoc16kqgyhawkx8a9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CZYe_U4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6acjoc16kqgyhawkx8a9.png" alt="result strings" width="880" height="474"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this will be useful for you.&lt;/p&gt;

</description>
      <category>xpath</category>
      <category>webscraping</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Why Confidence Is Important For Developers?</title>
      <author>Mr. Unity Buddy</author>
      <pubDate>Thu, 09 Dec 2021 07:47:02 +0000</pubDate>
      <link>https://dev.to/unitybuddy/why-confidence-is-important-for-developers-4o9g</link>
      <guid>https://dev.to/unitybuddy/why-confidence-is-important-for-developers-4o9g</guid>
      <description>&lt;p&gt;Hello, buddies! Self-Confidence. This word may very similar to you. But the problem is, most of us are not having it. The improvements of Self-confidence is mostly can be seen in Self-taught developers. And also, lack of self-confidence mostly can be seen in Self-taught developers. How? &lt;/p&gt;

&lt;p&gt;Well, self-taught developer must have enough strength to fight with Imposter's syndrome. To fight with Imposter's syndrome, they must have a self-confidence. That's the reason why they have a good self-confidence.&lt;/p&gt;

&lt;p&gt;On the other hand, we can(rarely) say Self-taught developers are lack of Self-confidence. Cause when they  code together with College-educated developers, they feel they are not good enough and they lose their self-confidence and become the victims of Imposter's syndrome. Anyway, I can say this article is for Self-taught developers to learn the importance of Self-Confidence.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selfconfidence-makes-you-attractive"&gt;
  &lt;/a&gt;
  Self-confidence makes you attractive
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oqPmX9dW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622558388105/anA89wBEi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oqPmX9dW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622558388105/anA89wBEi.png" alt="image.png" width="768" height="511"&gt;&lt;/a&gt;&lt;br&gt;
Do you want to live the life of your dreams?&lt;/p&gt;

&lt;p&gt;Do you want to become a person of affluence?&lt;/p&gt;

&lt;p&gt;You need to be able to attract the right kind of people into your life. You need to learn how to be attractive.&lt;br&gt;
People are attracted to self-confident people.&lt;/p&gt;

&lt;p&gt;If you walked into a room, which of these two people would you be attracted to? The buddy standing in a corner with a smile on his face or the another buddy whose head is bent, staring down at his phone. You would be attracted to the first buddy in a corner.&lt;/p&gt;

&lt;p&gt;When you are self-confident, you are more attractive.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selfconfidence-gets-you-hired-for-your-desired-jobs-and-clients"&gt;
  &lt;/a&gt;
  Self-confidence gets you hired for your desired jobs and clients
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eNRqV9s---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622558410864/FRKVLiRcf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eNRqV9s---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622558410864/FRKVLiRcf.png" alt="image.png" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
If you were the main attendee at a presentation, would you listen to the presenter if he wasn’t looking directly at you? You wouldn’t listen. You would switch off in your mind.&lt;/p&gt;

&lt;p&gt;But what if this man was engaging in his presentation? What if he was confident? He asked the right questions and said the things you wanted to hear. His persona was engaging. You would listen to him.&lt;/p&gt;

&lt;p&gt;If you want to seal a business deal, you need to express self-confidence to your prospective client. If you want to get hired for a job, you need to express self-confidence to the interviewers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selfconfidence-helps-you-aim-for-things-you-only-dream-about"&gt;
  &lt;/a&gt;
  Self-confidence helps you aim for things you only dream about
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---dsVCWcP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622558523936/X0aEHpVOU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---dsVCWcP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622558523936/X0aEHpVOU.png" alt="image.png" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Are you waiting for your big break? Does the life you want seem unreachable? Self-confidence gives you the guts to ask for what you want.&lt;/p&gt;

&lt;p&gt;If you want to live the life of your dreams, you need to be confident. If you are not, everyday miracles will pass you by. You won’t ask for what you really want. Don’t expect people to read your mind. &lt;strong&gt;Ask!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selfconfidence-helps-you-make-the-right-decisions"&gt;
  &lt;/a&gt;
  Self-confidence helps you make the right decisions
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RoV1YipT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622558313110/HIO-UpxTq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RoV1YipT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622558313110/HIO-UpxTq.png" alt="image.png" width="700" height="467"&gt;&lt;/a&gt;&lt;br&gt;
When you are self-confident, you choose yourself. Most people who lack self-confidence love to please people. They don’t choose themselves. Because they don’t, they make the wrong decisions.&lt;/p&gt;

&lt;p&gt;The more you make the right decisions aligned with your deepest desires and your core values, the faster you will achieve your goals.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selfconfidence-makes-you-productive"&gt;
  &lt;/a&gt;
  Self-confidence makes you productive
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RviIZV7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622558333563/QiDVBwsbY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RviIZV7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622558333563/QiDVBwsbY.png" alt="image.png" width="880" height="403"&gt;&lt;/a&gt;&lt;br&gt;
You need to be productive and manage your time wisely. Eliminate all the unnecessary activities. You can’t do this effectively without self-confidence.&lt;/p&gt;

&lt;p&gt;Without self-confidence, you will spend time on activities that don’t help you achieve your goals.&lt;br&gt;
The surprising thing is this action is done unconsciously. You don’t realize you’re doing it. I’ve realized when I don’t feel confident in my ability to achieve a goal, I waste time. I do mechanical tasks like checking my emails instead of focusing on the creative task I want to do.&lt;br&gt;
When you are self-confident — confident in your abilities, you are super productive.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-i-improve-my-confidence-then"&gt;
  &lt;/a&gt;
  How Can I Improve My Confidence, Then?
&lt;/h2&gt;

&lt;p&gt;I don't have to explain you. @&lt;a href="https://dev.to@victoria"&gt;Victoria Lo&lt;/a&gt; has already explained about &lt;a href="https://lo-victoria.com/365-days-of-hashnode-how-i-overcome-imposters-syndrome"&gt;How To Overcome Imposter's Syndrome&lt;/a&gt; Don't worry about &lt;em&gt;Imposter's Syndrome&lt;/em&gt; word cause all the Tips in that article can be used to Improve your self-confidence.&lt;/p&gt;

&lt;p&gt;So buddies, Self-Confidence is very, very important for Developers. So make yours strong as well. Happy Coding!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.devgenius.io/how-to-deal-with-self-doubt-in-programming-22af62dcb395"&gt;https://blog.devgenius.io/how-to-deal-with-self-doubt-in-programming-22af62dcb395&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.infoworld.com/article/2072517/confidence--an-important-software-developer-trait.html"&gt;https://www.infoworld.com/article/2072517/confidence--an-important-software-developer-trait.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
      <category>career</category>
    </item>
    <item>
      <title>6 Tips to Hire the Top Android App Development Company</title>
      <author>Sara Suarez</author>
      <pubDate>Thu, 09 Dec 2021 07:44:28 +0000</pubDate>
      <link>https://dev.to/suarezsara/6-tips-to-hire-the-top-android-app-development-company-517i</link>
      <guid>https://dev.to/suarezsara/6-tips-to-hire-the-top-android-app-development-company-517i</guid>
      <description>&lt;p&gt;Long gone are the days when websites used to be the face of a company. With the substantial technological advancements and innovation, mobile applications have not only replaced websites but also become imperative for businesses across all sizes and industry verticals.&lt;/p&gt;

&lt;p&gt;When it comes to mobile application development, businesses prefer Android application development over iOS. The reason being is Android has captured over 70% mobile OS market share, while iOS has less than 30% &lt;a href="https://gs.statcounter.com/os-market-share/mobile/worldwide"&gt;mobile OS market share&lt;/a&gt;. Before you partner with an Android mobile application development company for app development, you should be well-versed with the fact that there are over &lt;a href="https://www.statista.com/statistics/289418/number-of-available-apps-in-the-google-play-store-quarter/"&gt;3.48 million Android mobile apps&lt;/a&gt; already available as of the first quarter of 2021. This clearly indicates that your Android business application needs to be unique in order to stand out in the market.&lt;/p&gt;

&lt;p&gt;For unique application development, you need to partner with a professional agency that offers bespoke Android application development services.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Listed below are some little-known tips that will help you hire the top Android app development company:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Look for experts in Android application development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When planning to invest in &lt;a href="https://www.damcogroup.com/android-app-development.html"&gt;Android mobile application development&lt;/a&gt;, you should partner with someone who holds proficiency in app development. Developing a business-centric mobile application that caters to your unique needs is not everyone's cup of tea. Newbie or amateur developers often fail to engineer an application tailored to unique business requirements. Therefore, it is strongly recommended to hire experts only for your business application development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Don't fall into the trap of low-cost app development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Many businesses often fall prey to low-cost app development and end up having a business application that frequently crashes and delivers a poor user experience. Though it is imperative for startups, ISVs, and SMEs to get a mobile application for their business at economical prices, yet it is recommended not to partner with someone just because they are offering cheap pricing. Besides costs, you should also consider other crucial factors when looking for an agency for Android mobile application development for your business. Lastly, you should consider the one that holds strong potential in Android application development and offers development services at pocket-friendly prices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Examine the past Android app development projects&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Having a close look at the past projects of an Android app development agency will help you determine their potential and the development approach they follow. In other words, the answer to one of the most common questions i.e. "how to find the best Android mobile application development company" lies in exploring the work portfolio. Besides the work portfolio, you should also download a couple of applications developed by the agency to check the app's design (graphics), functionality, responsiveness, quality, and other important aspects. Also, you should take into consideration the total time taken by the agency to develop Android business applications. This will help you understand whether the application development agency meets your requirements or not.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Check reviews and ratings&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another easiest way to find the best mobile app development agency is to check the reviews and ratings of the agency on B2B websites such as GoodFirms, Clutch.co, SoftwareWorld, and more. Besides checking the agency's reviews and ratings on popular authoritative websites, it is also recommended to check ratings and reviews of Android apps developed by the agency. Simply visit the work portfolio section of the agency and then look for Android apps developed by them. Now, search for the same application on Google Play Store and check the ratings and reviews given by app users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Rich knowledge of open-source platforms&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Android OS being an open-source platform gives developers the freedom to customize the application the way they want. This, in turn, helps them engineer feature-rich mobile applications for their clients. When looking for an Android development agency, you should opt for one that has rich expertise in open-source libraries, frameworks, or platforms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Talk to previous clients&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before you hire an agency for Android application development, you must talk to their previous clients besides browsing their work portfolio or checking reviews and ratings. When you talk to their previous clients, you will get to know whether the agency was easy to work with, how they solved the challenges, how responsive they were to your feedback or any changes required, how they provided support after deploying mobile applications. However, you might be wondering how you could get the details of previous clients as development agencies are bound to a strict non-disclosure agreement. Right? To help you out of this conundrum, it's advised to visit the development agency Clutch or Extract profiles to get the past client information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Concluding Thoughts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After going through this detailed informative piece, hope, you can easily find the best agency to partner with for your Android mobile application development. Next time, when you are looking for an Android application development agency, you can consider this article as a checklist.&lt;/p&gt;

</description>
      <category>android</category>
      <category>webdev</category>
      <category>mobile</category>
    </item>
    <item>
      <title>UI UX Trends 2021: Top 10 Trends Your Users Will Love</title>
      <author>Bhavik Sadhu</author>
      <pubDate>Thu, 09 Dec 2021 07:39:04 +0000</pubDate>
      <link>https://dev.to/bhaviksadhu/ui-ux-trends-2021-top-10-trends-your-users-will-love-4jlh</link>
      <guid>https://dev.to/bhaviksadhu/ui-ux-trends-2021-top-10-trends-your-users-will-love-4jlh</guid>
      <description>&lt;p&gt;This article will examine what we think will be the UI UX Trends 2021. The year 2020 was extremely unstable year as the plague of covid was taking over the world and virtually all industries were affected some way.&lt;/p&gt;

&lt;p&gt;UX refers to "user experience" and UI refers "user interface". Both are interconnected and can't be used in conjunction without the other. Review design and interface design are both closely connected. These are usually hired in conjunction and often used together.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-follow-ui-ux-trends"&gt;
  &lt;/a&gt;
  Why Follow UI UX Trends?
&lt;/h1&gt;

&lt;p&gt;Like every perspective, UX/UI also changes. Much like the rest of the world that changes, it's not common to observe emerging trends all every day.&lt;/p&gt;

&lt;p&gt;Designers must stay current with the trends at every opportunity they are able to. It's no longer possible to ignore these trends and make outdated websites. Additionally, it's not as effective to stay up-to-date with new trends in advance of your competitors.&lt;br&gt;
It's not important to focus on the patterns and trends in 2020 or 2019. The most crucial thing is to keep track of the patterns that are most likely to be advanced in 2021. It is essential to be prepared to invest your money in these trends.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;With that said below are the most popular trends expected to take over 2021.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-illustration-and-animation-that-is-unique"&gt;
  &lt;/a&gt;
  1. Illustration and animation that is unique
&lt;/h2&gt;

&lt;p&gt;Digitally drawn or hand-drawn 3D custom illustrations, you can name them. The non-aligned shapes, the free element components, and the massive asymmetry don't just make them stand out from their designs from others, yet also make for a warm and relaxing environment that provides an enhanced experience for the users. To make pages look attractive, the images are usually enhanced with intricate motion design.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-glassmorphism"&gt;
  &lt;/a&gt;
  2. Glassmorphism
&lt;/h2&gt;

&lt;p&gt;Did you be aware of the latest trends in glassmorphism? (that's right, neuomorphism's not as trendy anymore). This is the most recent style within UI and is based around an effect that is known as blurring of the background which creates a "through the glass" look and feel of elements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-login-without-passwords"&gt;
  &lt;/a&gt;
  3. Login Without Passwords
&lt;/h2&gt;

&lt;p&gt;Forgetting passwords is among the most grave mistakes that a majority of users make while using websites. This is the reason why the password reset feature allows users to sign into new accounts. Most passwords are made up of letters, numbers (both lowercase and capital letters) as well as special characters. This makes them difficult for users to remember. To fix this problem new UI styles have been used to provide a range of alternative ways for users to sign in to their account.&lt;br&gt;
Some alternatives that could substitute password-free logins include the use of fingerprints or face recognition or even an PIN code!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-artificial-intelligence"&gt;
  &lt;/a&gt;
  4. Artificial Intelligence
&lt;/h2&gt;

&lt;p&gt;AI is currently employed in virtually every item. It's unlikely that AI can update designers but. Instead, it can be helpful and make our job easier. AI's capacity to gather information (of massive amounts of data.) we'll see more products that are customized specifically tailored to the needs of each client.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-augmented-reality"&gt;
  &lt;/a&gt;
  5. Augmented reality
&lt;/h2&gt;

&lt;p&gt;In 2021, the emergence of new web design trends will require you to think beyond the conventional instead of staying within the grid. Do not be dependent on web interfaces that only cater to screens. It's better to focus on the actions that appear to be happening in the real world.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-data-visualization"&gt;
  &lt;/a&gt;
  6. Data Visualization
&lt;/h2&gt;

&lt;p&gt;Data visualization lets users comprehend the information displayed on the internet platform in a short time. The most significant benefit is that everyone can comprehend the company's operations and follow your company's requirements. This can help turn potential leads to customers. This UI UX trend is expected to become a major trend in the coming years.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-dark-mode"&gt;
  &lt;/a&gt;
  7. Dark Mode
&lt;/h2&gt;

&lt;p&gt;The possibility of making use of the "Dark Mode" is growing with the emergence of the latest UI UX Trends. The mode is typically activated when daylight ends and darkness comes on. It's been found that exposure to light is not very beneficial for the eyes. This is one of the factors that led UI UX designers to turn their focus to using dark mode.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-rise-of-the-video"&gt;
  &lt;/a&gt;
  8. Rise of the Video
&lt;/h2&gt;

&lt;p&gt;Videos are a different UI UX style trend set to become popular in 2021. Videos assist users in comprehending the message they want to convey to users. They can also help to make the experience more enjoyable and enjoyable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-blurred-and-colorful-backdrop"&gt;
  &lt;/a&gt;
  9. Blurred and Colorful Backdrop
&lt;/h2&gt;

&lt;p&gt;Graphics with gradients were very popular in recent years and, even today, this trend continues to be popular. The growth of gradients has resulted in them becoming less complex in their design.&lt;/p&gt;

&lt;p&gt;At first, designers employed only two and 3 shades to create linear gradients. The current UX/UI design utilizes more than 10 different colors to produce gradients.&lt;br&gt;
Web sites are increasingly having vibrant backgrounds, with gradients that are more than three shades. In order to keep the main content on top, the images are made using blurred backgrounds.&lt;/p&gt;

&lt;p&gt;The background is appealing but also subtle, which means the main message will not be in a position to escape the attention of the viewers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-custom-navigation"&gt;
  &lt;/a&gt;
  10. Custom Navigation
&lt;/h2&gt;

&lt;p&gt;The usage of custom navigations is expected to influence UI UX Trends 2021. If you utilize it properly it will be able to improve the navigation and the visuals are able to attract attention to the user and keep them interested. There are various types of navigational elements, along with obvious factors of navigation as well as invisible factors to navigate. The navigation menu should be designed to ensure that it flows seamlessly. runs effortlessly.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h1&gt;

&lt;p&gt;The 2021 trends in design will be focused on minimalism, simple UX design as well as interactivity UI design. The article offers a list of UI and UX design trends expected to continue at least to 2021. Similar patterns could be applied to web design trends.&lt;/p&gt;

</description>
      <category>design</category>
      <category>ux</category>
      <category>ui</category>
    </item>
    <item>
      <title>Hello GitHub Actions 2021</title>
      <author>Peter Chan</author>
      <pubDate>Thu, 09 Dec 2021 07:35:37 +0000</pubDate>
      <link>https://dev.to/peterhychan/hello-github-actions-2021-2f42</link>
      <guid>https://dev.to/peterhychan/hello-github-actions-2021-2f42</guid>
      <description>&lt;p&gt;This is my first attempt of GitHub Actions in 2021. Thanks DEV for giving me such a great motivations (I love stickers!) to learn GitHub Actions as a potential alternative of CI/CD. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Goal : this action just says Hi to the user when a commit is made&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My workflow to complete this project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;keep track of the development process via Git &amp;amp; GitHub&lt;/li&gt;
&lt;li&gt;create a npm package&lt;/li&gt;
&lt;li&gt;install @actions/core and @actions/github packages&lt;/li&gt;
&lt;li&gt;add a index.js as the entry file with proper details included&lt;/li&gt;
&lt;li&gt;add a action.yml to define the steps on GitHub Actions&lt;/li&gt;
&lt;li&gt;create a new GitHub repo &amp;amp; commit the project to the repo&lt;/li&gt;
&lt;li&gt;add ./github/workflows/main.yml with proper details included to test whether the action works&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NOTE: we need to upload node_modules to the GitHub repo&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Wacky Wildcards&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/peterhychan"&gt;
        peterhychan
      &lt;/a&gt; / &lt;a href="https://github.com/peterhychan/hey-github-actions"&gt;
        hey-github-actions
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      My first attempt on GitHub Actions
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
hey-github-actions&lt;/h1&gt;
&lt;p&gt;My first attempt on GitHub Actions&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/peterhychan/hey-github-actions"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.github.com/en/actions"&gt;GitHub Actions Docs&lt;/a&gt;&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
    </item>
  </channel>
</rss>
