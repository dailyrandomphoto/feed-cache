<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Deep dive into React codebase [EP2: What package from the repo is the most popular on npm?]</title>
      <author>Nikita Grechino</author>
      <pubDate>Sun, 16 Jan 2022 06:56:54 +0000</pubDate>
      <link>https://dev.to/fromaline/deep-dive-into-react-codebase-ep2-what-package-from-the-repo-is-the-most-popular-on-npm-2328</link>
      <guid>https://dev.to/fromaline/deep-dive-into-react-codebase-ep2-what-package-from-the-repo-is-the-most-popular-on-npm-2328</guid>
      <description>&lt;h2&gt;
  &lt;a href="#preface"&gt;
  &lt;/a&gt;
  Preface
&lt;/h2&gt;

&lt;p&gt;In &lt;a href="https://dev.to/fromaline/deep-dive-into-react-codebase-ep1-prerequisites-33ak"&gt;the previous episode&lt;/a&gt; we laid the foundation of our React understanding and now we are ready to continue the journey! &lt;br&gt;
Today we'll find out about other packages, that live in the React monorepo, why they are there, and which package is the most popular on NPM!&lt;/p&gt;

&lt;p&gt;But before doing that, let's quickly recall &lt;em&gt;essential&lt;/em&gt; info, that we need today.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#recall"&gt;
  &lt;/a&gt;
  Recall
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lXCYxjem--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zlmaqq3bq10otflzxe7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lXCYxjem--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zlmaqq3bq10otflzxe7.png" alt="recall of the last article" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;React is a monorepo, that contains different React-related projects. More specifically:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React Core package for defining React components, called just &lt;code&gt;react&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;A bunch of renderers, that of course render React components in different environments.

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;react-dom&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;react-native-renderer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;react-art&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;react-test-renderer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;react-noop-renderer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A reconciler, that implements a diffing algorithm, called &lt;code&gt;react-reconciler&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#continue-with-the-repository-setup"&gt;
  &lt;/a&gt;
  Continue with the repository setup
&lt;/h2&gt;

&lt;p&gt;Now after the recall, we're good to go. So let's examine the rest of the packages.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sidenote: All packages are located, following a single pattern &lt;code&gt;./packages/{package-name}&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#utility-packages"&gt;
  &lt;/a&gt;
  Utility packages
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;react-is&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
It's a utility package, that allows testing whether some value is a valid React element or does some component is of a specific React element type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;ReactIs&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-is&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ExampleComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Is a valid React element?&lt;/span&gt;
&lt;span class="nx"&gt;ReactIs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isValidElementType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ExampleComponent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;Ract&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isisValidElementType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;

&lt;span class="c1"&gt;// Does a component is of specific React element type?&lt;/span&gt;
&lt;span class="nx"&gt;ReactIs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;typeOf&lt;/span&gt;&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;ReactIs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Element&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;ReactIs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;typeOf&lt;/span&gt;&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;ReactIs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fragment&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The later use-case strongly reminds me about &lt;code&gt;typeof&lt;/code&gt; operator from vanilla JavaScript. It's probably because it allows you to test arbitrary values' types, as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;code&gt;scheduler&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
This package is used for scheduling in the browser. Currently, it's only used by React itself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#subscriptionrelated-packages"&gt;
  &lt;/a&gt;
  Subscription-related packages
&lt;/h3&gt;

&lt;p&gt;There are two packages for dealing with subscriptions on external resources in React.  &lt;strong&gt;&lt;code&gt;create-subscription&lt;/code&gt;&lt;/strong&gt; utility function allow subscribing to external data sources from a React component, while &lt;strong&gt;&lt;code&gt;use-subscription&lt;/code&gt;&lt;/strong&gt; hook manages such subscriptions in concurrent mode.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devtoolsrelated-packages"&gt;
  &lt;/a&gt;
  Devtools-related packages
&lt;/h3&gt;

&lt;p&gt;We won't examine tooling for developers in the series, because it's an advanced topic on its own. But you need to know, that React monorepo hosts a lot of packages that help developers create their apps with React, like &lt;strong&gt;&lt;code&gt;react-devtools-core&lt;/code&gt;&lt;/strong&gt;,  &lt;strong&gt;&lt;code&gt;react-devtools&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;react-devtools-extensions&lt;/code&gt;&lt;/strong&gt; itself, that you might be lucky to use.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jj9lYQ6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsr57i8gil5t3wudn522.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jj9lYQ6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsr57i8gil5t3wudn522.png" alt="react devtools extension" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is only one package, that is related to this category, but a bit out of the ordinary here. It's &lt;strong&gt;&lt;code&gt;eslint-plugin-react-hooks&lt;/code&gt;&lt;/strong&gt;.&lt;br&gt;
Even though it doesn't have &lt;code&gt;devtool&lt;/code&gt; in its name. It's directly related to tooling for developers because it's an eslint plugin to enforce the so-called &lt;a href="https://reactjs.org/docs/hooks-rules.html"&gt;Rules of Hooks&lt;/a&gt;. It usually gives me warns, that I need to add something to the dependency array 😄&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sidenote: Such a huge amount of tools for developers leads me to believe, that it may be one of the reasons why React got traction in the first place. Tooling for it was and is officially supported by React team and you didn't need to surf the internet to find external sources. But it's only a guess.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#packages-for-testing"&gt;
  &lt;/a&gt;
  Packages for testing
&lt;/h3&gt;

&lt;p&gt;We won't examine packages for testing in the series, because it's out of scope, as well. Just want to let you know, that the React monorepo contains a couple of those, like &lt;strong&gt;&lt;code&gt;dom-event-testing-library&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;jest-mock-scheduler&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;jest-react&lt;/code&gt;&lt;/strong&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#experimental-packages"&gt;
  &lt;/a&gt;
  Experimental packages
&lt;/h3&gt;

&lt;p&gt;There are also a bunch of experimental packages. We won't investigate them at all in this series, because they are not stable and finished yet. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#subtotal"&gt;
  &lt;/a&gt;
  Subtotal
&lt;/h3&gt;

&lt;p&gt;So, now we know about all packages, the React monorepo has to offer. We'll pay most of our attention to &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;react-reconciler&lt;/code&gt;, and &lt;code&gt;react-dom&lt;/code&gt; because it's bread and butter for React developers. But we'll investigate other packages, in case it's crucial for our overall understanding.&lt;/p&gt;

&lt;p&gt;Uff, it was a long run, so now it's time for the fun stuff!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-most-popular-npm-package-that-lives-in-the-react-monorepo"&gt;
  &lt;/a&gt;
  What is the most popular npm package, that lives in the React monorepo?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#top-5-npm-packages-that-live-in-the-react-monorepo"&gt;
  &lt;/a&gt;
  Top 5 npm packages, that live in the React monorepo.
&lt;/h3&gt;

&lt;p&gt;First things first, let's deal with the basics. Here is the infographic of the Top 5 most popular npm packages from the monorepo with the number of downloads in the past 12 months.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K5n8N1Tt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1mjlgcpo100xelxuzjzs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5n8N1Tt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1mjlgcpo100xelxuzjzs.png" alt="info-graphics with top 5 most popular npm packages, that live in the react monorepo" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The interesting part is the &lt;code&gt;react&lt;/code&gt; package itself isn't the most popular out there. Actually, &lt;em&gt;the most popular package&lt;/em&gt; is &lt;code&gt;react-is&lt;/code&gt; with 639 million downloads, then goes &lt;code&gt;scheduler&lt;/code&gt; with 421 million and only after &lt;code&gt;react&lt;/code&gt; with its' "miserable" 404 million.&lt;/p&gt;

&lt;p&gt;Another great way to visualize it is to check &lt;a href="https://www.npmtrends.com/eslint-plugin-react-hooks-vs-react-vs-react-dom-vs-react-is-vs-scheduler"&gt;npm trends graphs&lt;/a&gt; and be amazed again by how much &lt;code&gt;react-is&lt;/code&gt; is more popular than other packages 😄&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#full-stats"&gt;
  &lt;/a&gt;
  Full stats
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1d1El0Qm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgkixpk1vkogbapcghmf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1d1El0Qm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgkixpk1vkogbapcghmf.png" alt="pie chart with last year's downloads of npm packages, that live in the react monorepo" width="880" height="582"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here is a pie chart with all packages, that are published on npm and which source code is currently in the monorepo.&lt;br&gt;
The interesting bit here is, that the number of downloads of the bottom 10 packages (colored in green) is only around 1% of the overall downloads.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#today-we-learned"&gt;
  &lt;/a&gt;
  Today we learned
&lt;/h3&gt;

&lt;p&gt;Let's sum up different things, that we learned from this episode.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In addition to the React Core, renderers, and the reconciler, the React monorepo contains a whole lot of different packages, including:

&lt;ul&gt;
&lt;li&gt;Different utility packages&lt;/li&gt;
&lt;li&gt;Devtools-related packages&lt;/li&gt;
&lt;li&gt;Packages for testing&lt;/li&gt;
&lt;li&gt;Experimental packages&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;We'll pay most of our attention to &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;react-reconciler and&lt;/code&gt;react-dom` because it's bread and butter for React developers.&lt;/li&gt;
&lt;li&gt;The most popular npm package from the React monorepo is not React itself, it's &lt;code&gt;react-is&lt;/code&gt;. React package is only the third one on the list.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#im-looking-forward-to-similar-articles-what-should-i-do"&gt;
  &lt;/a&gt;
  I'm looking forward to similar articles, what should I do?
&lt;/h3&gt;

&lt;p&gt;First of all, if you &lt;em&gt;do like&lt;/em&gt; this post leave a reaction or/and a comment to let me know, that I am going in the right direction. I really encourage you to leave any constructive feedback, either positive or negative.&lt;/p&gt;

&lt;p&gt;If you want more content like this &lt;strong&gt;right now&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check out &lt;a href="https://dev.to/fromaline/why-you-have-to-use-classname-in-react-but-not-in-preact-3fdm"&gt;my article&lt;/a&gt;, which tells a story of why you have to use &lt;code&gt;className&lt;/code&gt; instead of &lt;code&gt;class&lt;/code&gt; in React components.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want more content like this &lt;strong&gt;next week&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Follow &lt;a href="https://dev.to/fromaline"&gt;me here on dev.to&lt;/a&gt;, I am going to post the next episode of the  &lt;em&gt;Deep-dive-into-React-codebase series&lt;/em&gt;  on January 23 (next Sunday!).&lt;/li&gt;
&lt;li&gt;Follow &lt;a href="https://twitter.com/fromaline"&gt;me on Twitter&lt;/a&gt;, if you want to know about every article I made and also read their sum-ups in threads.&lt;/li&gt;
&lt;li&gt;Additionally, you may follow &lt;a href="https://blog.fromaline.com/"&gt;me on hashnode&lt;/a&gt;, I'll try to do my best to post an article every week there or even make a special hashnode-exclusive series.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Headphone responsive landing page with HTML CSS</title>
      <author>Atul Prajapati</author>
      <pubDate>Sun, 16 Jan 2022 06:26:05 +0000</pubDate>
      <link>https://dev.to/atulcodex/headphone-responsive-landing-page-with-html-css-5fi0</link>
      <guid>https://dev.to/atulcodex/headphone-responsive-landing-page-with-html-css-5fi0</guid>
      <description>&lt;p&gt;This is my 1st website of the "10 responsive websites with HTML CSS" challenge. This challenge is inspired by the florin pops "10 websites with HTML CSS" challenge which is currently published on YouTube.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BoRB0kic5M0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Headphone – Single Product Shop HTML CSS Theme is an elegantly designed and versatile Product theme that gives you smartly optimized page layouts and sections so you can easily create a stunning Product store for a single product. It incorporates a clean and modern design to give your website a professional look in little to no time.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;HTML5 &amp;amp; CSS3&lt;/li&gt;
&lt;li&gt;No framework&lt;/li&gt;
&lt;li&gt;Responsive Template&lt;/li&gt;
&lt;li&gt;Free icons used&lt;/li&gt;
&lt;li&gt;Pixel Perfect&lt;/li&gt;
&lt;li&gt;Clean &amp;amp; Unique Design&lt;/li&gt;
&lt;li&gt;Easy to customize&lt;/li&gt;
&lt;li&gt;Retina Ready&lt;/li&gt;
&lt;li&gt;Unlimited Colors&lt;/li&gt;
&lt;li&gt;Boxed or Wide layout&lt;/li&gt;
&lt;li&gt;SEO friendly&lt;/li&gt;
&lt;li&gt;Super fast loading speed&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/atulcodex"&gt;
        atulcodex
      &lt;/a&gt; / &lt;a href="https://github.com/atulcodex/headphone"&gt;
        headphone
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Headphone – Single Product Shop HTML CSS Theme is an elegantly designed and versatile Product theme that gives you smartly optimized page layouts and sections so you can easily create a stunning Product store for a single product. It incorporates a clean and modern design to give your website a professional look in little to no time.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h3&gt;
Headphone single page website template&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/atulcodex/headphone/blob/main/headphone-preview.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u5Rj2NTJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/atulcodex/headphone/raw/main/headphone-preview.gif" alt="Headphone single page website template"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Headphone – Single Product Shop HTML CSS Theme is an elegantly designed and versatile Product theme that gives you smartly optimized page layouts and sections so you can easily create a stunning Product store for a single product. It incorporates a clean and modern design to give your website a professional look in little to no time.&lt;/p&gt;
&lt;h3&gt;
Features&lt;/h3&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;
 HTML5 &amp;amp; CSS3&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 No framework&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Responsive Template&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Free icons used&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Pixel Perfect&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Clean &amp;amp; Unique Design&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Easy to customize&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Retina Ready&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Unlimited Colors&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Boxed or Wide layout&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 SEO friendly&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Super fast loading speed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;.
.
.
.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://headphone-atulcodex.netlify.app/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08475b45ac77dd012c7135c92310ab15ff8833b3e4b0dc137e6fb6dabad73b8e/68747470733a2f2f692e6962622e636f2f76774e386367572f6c6976652d64656d6f2e706e67" alt="Headphone - Responsive landing page"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.
.
.&lt;/p&gt;
&lt;h5&gt;
Support me and my work to see more such projects&lt;/h5&gt;
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/atulcodex" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c968055274b1e1804d6f49be3455388190da28566db8a51b28f727e16d767498/68747470733a2f2f692e6962622e636f2f3772523953344c2f6275792d6d652d612d636f666665652e706e67" alt="Atul - Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/atulcodex/headphone"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;&lt;a href="https://headphone-atulcodex.netlify.app/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NzZUVGPk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/vwN8cgW/live-demo.png" alt="Headphone - Responsive landing page" width="640" height="56"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#support-me-and-my-work-to-see-more-such-projects"&gt;
  &lt;/a&gt;
  Support me and my work to see more such projects
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/atulcodex"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9jkkH6N0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/7rR9S4L/buy-me-a-coffee.png" alt="Atul - Buy Me A Coffee" width="640" height="80"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>18 ways to ATTACK a Vault server | Production hardening | Tharun</title>
      <author>Tharun Shiv</author>
      <pubDate>Sun, 16 Jan 2022 06:25:25 +0000</pubDate>
      <link>https://dev.to/developertharun/18-ways-to-attack-a-vault-server-production-hardening-tharun-2a1f</link>
      <guid>https://dev.to/developertharun/18-ways-to-attack-a-vault-server-production-hardening-tharun-2a1f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#youtube-video"&gt;
  &lt;/a&gt;
  YouTube video
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3ikQlRQAso4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#podcast"&gt;
  &lt;/a&gt;
  Podcast:
&lt;/h2&gt;

&lt;p&gt;&lt;iframe src="https://open.spotify.com/embed/episode/6FyVgWpLYYmehmA6KzVJM7" width="100%" height="232px"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#episode"&gt;
  &lt;/a&gt;
  Episode
&lt;/h2&gt;

&lt;p&gt;In this episode we will look at 18 ways in which your Hashicorp Vault server or any Linux server in general can be attacked. We will also discuss on how to prevent those and secure your server. This process is also known as production hardening. &lt;/p&gt;

&lt;p&gt;Written by,&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__378811"&gt;
  
    .ltag__user__id__378811 .follow-action-button {
      background-color: #1e90ff !important;
      color: #fdf9f3 !important;
      border-color: #1e90ff !important;
    }
  
    &lt;a href="/developertharun" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cdxCiXS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CuAC2zZW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/378811/dfe9c221-cff5-4e4d-9fcb-61fb3ca2bdd0.png" alt="developertharun image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/developertharun"&gt;Tharun Shiv&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/developertharun"&gt;Site Reliability Engineer | Blogger | Podcasts | Youtube @ developertharun&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#thank-you-for-reading-this-is-tharun-shiv-aka-developer-tharun"&gt;
  &lt;/a&gt;
  Thank you for reading, This is Tharun Shiv a.k.a Developer Tharun
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4DVZ_PES--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtxq6bdms36fmn62450h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4DVZ_PES--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtxq6bdms36fmn62450h.png" alt="Tharun Shiv" width="500" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>systems</category>
      <category>security</category>
      <category>tutorial</category>
      <category>linux</category>
    </item>
    <item>
      <title>Making a Chrome extension for Gmail notifications</title>
      <author>Midhun</author>
      <pubDate>Sun, 16 Jan 2022 06:23:23 +0000</pubDate>
      <link>https://dev.to/midhunz/making-gmail-notification-extensions-without-logging-in-a-step-by-step-guide-160b</link>
      <guid>https://dev.to/midhunz/making-gmail-notification-extensions-without-logging-in-a-step-by-step-guide-160b</guid>
      <description>&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/blue-bell-gmail-notificat/dokpofkkaggijbeeaeijobkhjfdijjec?hl=en-GB&amp;amp;authuser=0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZO7a0la8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkn5ziwgx0r8sidhcev9.gif" alt="Image description" width="600" height="338"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/blue-bell-gmail-notificat/dokpofkkaggijbeeaeijobkhjfdijjec?hl=en-GB&amp;amp;authuser=0"&gt;&lt;strong&gt;Blue Bell Gmail™ notification tool&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was searching for a simple extension that would allow me to quickly view new e-mails received. I found some of the greatest extensions. But what impressed me the most is their ability to show my Gmail without asking for my password explicitly. Honestly, this was a real shock to me.&lt;/p&gt;

&lt;p&gt;These extensions can display my email without even asking for my password, which made me both fearful and curious. I eventually ended up at Gmail's feed API. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gmail Inbox Feed&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Gmail Inbox Feed will output your Inbox as an XML document. You can use an RSS aggregator to view this, or you can consume the feed with your own app.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;GET &lt;a href="https://mail.google.com/mail/feed/atom"&gt;https://mail.google.com/mail/feed/atom&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt; &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A feed atom API call returns unread emails and total unread emails in an inbox that is logged in.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In order to show an unread email when it is opened, the extension will call api and display it in the proper format&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unread email listeners must notify. It is necessary to have a background script when we want to run anything in the background for an extension. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In that case, the feed API is read every minute if there is an unread email update extension badge with a count.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Permission Required&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;"content_scripts": [&lt;br&gt;
    {&lt;br&gt;
      "matches": ["*://mail.google.com/*"],&lt;br&gt;
      "js": ["contentScript.bundle.js"]&lt;br&gt;
    }&lt;br&gt;
  ]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://chrome.google.com/webstore/detail/blue-bell-gmail-notificat/dokpofkkaggijbeeaeijobkhjfdijjec?hl=en-GB&amp;amp;authuser=0"&gt;Demo 🚀&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Feel free to contribute on &lt;strong&gt;&lt;a href="https://github.com/midhunz/gmail-notifier"&gt;GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/midhunz/gmail-notifier"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GIXYunmT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4tlk0givomcszyr1hx6r.png" alt="Image description" width="880" height="252"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please comment on your ideas and thoughts, Geeks &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---lraoHri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k93jg7rd6gj9gbsnjox2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---lraoHri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k93jg7rd6gj9gbsnjox2.gif" alt="Image description" width="384" height="384"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>react</category>
    </item>
    <item>
      <title>Front-End Web and
Mobile Development
on AWS</title>
      <author>Nirmal Naveen</author>
      <pubDate>Sun, 16 Jan 2022 06:16:13 +0000</pubDate>
      <link>https://dev.to/nirmalnaveen/front-end-web-andmobile-developmenton-aws-5f7f</link>
      <guid>https://dev.to/nirmalnaveen/front-end-web-andmobile-developmenton-aws-5f7f</guid>
      <description>&lt;p&gt;AWS offers a wide range of tools and services to support development workflows for iOS, Android, React Native, and web front-end developers. There is a set of services that make it easy to build, test, and deploy an application, even with minimal knowledge of AWS. With the speed and reliability of the AWS infrastructure, mobile and web applications can scale from prototype to millions of users to provide a better user experience and better solutions for the whole integrated system. &lt;/p&gt;

&lt;p&gt;Amazon services are primarily aimed at developing web and mobile&lt;br&gt;
applications:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Ease of use and minimal energy to start. Amazon services allow you to develop an application using existing iOS/Android IDEs and web frameworks. This makes it easy to add UI components for a user-friendly interface and use the CLI tool chain to easily customize the back end.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Provide access to the features you need. You can use Auth, Analytics, API, Storage, Predictions, XR, and others to create rich server infrastructures. GraphQL can be used to access and integrate data in flexible ways. Amazon services offer the ability to test mobile applications on hundreds of real devices.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A scalable approach allows you to grow your business quickly with built-in AWS best practices for security, availability, and reliability; your application can easily scale from one request per second with microsecond latency around the world.&lt;/p&gt;

&lt;p&gt;Let's look at which of the Amazon services will help in the development and operation of web and mobile solutions, as well as speed up the whole process and make it more stable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Amplify&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS Amplify is a collection of tools and services that enable developers of mobile applications and web interfaces to build secure and scalable end-to-end systems on AWS. With Amplify, you can easily create custom workflows, develop voice interfaces, connect artificial intelligence to real-time data streams, run targeted advertising campaigns, and so on. AWS Amplify will help you develop and deliver quality applications.&lt;/p&gt;

&lt;p&gt;AWS Amplify includes an open-source platform with separate libraries for specific use cases and a wide range of tools for building cloud functionality and incorporating them into applications, as well as a web hosting service for deploying static web applications.&lt;/p&gt;

&lt;p&gt;Within minutes of configuring the appropriate service, a developer can automatically configure a best-in-class backend service for mobile and web applications, such as an authentication service, data warehouse, or API based on Amazon S3, Amazon Cognito, and other AWS services.&lt;/p&gt;

&lt;p&gt;Amplify CLI seamlessly integrates with iOS and Android IDEs, as well as many popular web development frameworks, providing a guided workflow to customize the optimal backend for your applications with a few simple commands.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Amplify Console&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The AWS Amplify Console is a static web hosting service that accelerates the application release cycle with an uncomplicated CI/CD process for building and deploying static web applications. You only need to provide a link to the repository with your application code in the console, and all adjustments in the frontend and backend will be deployed in a single workflow every time you commit the code.&lt;/p&gt;

&lt;p&gt;A complex application includes a frontend hosted on a single-page application framework (such as React, Angular, Vue, Gatsby, or Flutter, which is now in developer preview) and an optional cloud-based backend (such as GraphQL, REST API, file and data stores). &lt;/p&gt;

&lt;p&gt;These main features allow you to integrate web and mobile applications with Amazon:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Authentication (User Registration and Authentication)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data storage (offline sync and conflict resolution)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;API (GraphQL and REST - Accessing Data from Multiple Data Sources)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Storage (User Content Management)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Analytics (Collecting analytic data for your application)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Forecasting (Artificial Intelligence/Machine Learning, including text broadcasts)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Interactions (Conversational Chatbots)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Push notifications (Sending targeted messages)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PubSub (Post and Subscription Management)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sWJgHHbH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bi7qf5shocb6dgbx9y3t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sWJgHHbH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bi7qf5shocb6dgbx9y3t.jpg" alt='A pie chart showing 40% responded "Yes", 50% responded "No" and 10% responded "Not sure"' width="880" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--__MVviC5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6lfk8k2kr64fm27zymi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--__MVviC5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6lfk8k2kr64fm27zymi.jpg" alt='A pie chart showing 40% responded "Yes", 50% responded "No" and 10% responded "Not sure"' width="880" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS AppSync&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS AppSync simplifies application development by letting you create a universal API to securely access, modify, and combine data from multiple sources. AppSync is a managed service that uses GraphQL so that applications can easily retrieve only the data they need.&lt;/p&gt;

&lt;p&gt;With AppSync, you can build scalable applications, including those requiring real-time updates, using a range of data sources such as NoSQL data stores, relational databases, HTTP APIs, and native data sources with AWS Lambda.&lt;/p&gt;

&lt;p&gt;For mobile and web applications, AppSync also provides access to local data when devices go offline and sync data when they reconnect to the Internet. In this case, the client can customize the order of conflict resolution. AWS AppSync is available in different regions.&lt;/p&gt;

&lt;p&gt;You can develop your application in a familiar IDE (for example, Xcode, Android Studio, VS Code), and use the intuitive AWS AppSync or AWS Amplify CLI management console to automatically generate APIs and client code.&lt;/p&gt;

&lt;p&gt;AWS AppSync integrates with Amazon DynamoDB, Amazon Aurora, Amazon Elasticsearch, AWS Lambda, and other AWS services, allowing you to build complex applications with nearly unlimited performance and storage that can change based on your business needs.&lt;/p&gt;

&lt;p&gt;AWS AppSync provides real-time subscriptions to millions of devices and offline access to application data. Once the device is reconnected, AWS AppSync syncs only the updates at the time the device was disconnected, not the entire database. AWS AppSync offers configurable server-side conflict detection and resolution.&lt;/p&gt;

&lt;p&gt;It is also possible to perform complex queries and generalizations across multiple data sources with a single network call using GraphQL. AWS AppSync makes it easy to protect your application data by using multiple authentication modes at the same time and also allows you to determine the severity of the threat and perform granular access control at the data definition level directly from your GraphQL schema.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ft1cTn9c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fiwljdf6o658b9vwg740.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ft1cTn9c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fiwljdf6o658b9vwg740.jpg" alt='A pie chart showing 40% responded "Yes", 50% responded "No" and 10% responded "Not sure"' width="880" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon API Gateway&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon API Gateway is a fully managed developer service for building, publishing, maintaining, monitoring, and securing APIs at scale. Applications access the data, business logic, or functionality of your backend services through the API. API Gateway allows you to create RESTful and WebSocket APIs, which are the main component of real-time two-way communication applications. API Gateway supports containerized and serverless workloads and Internet applications.&lt;/p&gt;

&lt;p&gt;API Gateway takes care of all the tasks associated with accepting and processing hundreds of thousands of concurrent API calls, including traffic management, CORS support, authorization, and access control, request throttling, and API monitoring and versioning. Working with API Gateway does not require minimum fees or start-up investments. This only pays for the received API calls and the amount of data transferred, and you can use API Gateway's tiered pricing model to reduce application costs as you scale your API usage.&lt;/p&gt;

&lt;p&gt;REST API and WebSocket are very important features for web and mobile application development:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;REST API. Allows you to create RESTful APIs optimized for serverless workloads and HTTP servers using HTTP APIs. HTTP APIs are the best way to create APIs that only require an API proxy. If your API requires API proxy functionality and API management capabilities in a single solution, API Gateway also provides REST APIs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;WebSocket API. Allows you to create real-time two-way communication applications such as chat apps and streaming panels using the WebSocket API. API Gateway maintains a persistent communication to handle messages passed between your backend service and your clients.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;API Gateway provides a tiered pricing model for API requests. At just $0.90 per one million API requests at the highest level, a developer can reduce their costs by increasing the number of API requests per region across all of your AWS accounts.&lt;/p&gt;

&lt;p&gt;By the way, it is possible to monitor performance metrics and information about API calls, data latency, and error rates in the API Gateway control panel. This will allow you to visually control calls to your services using Amazon.&lt;/p&gt;

&lt;p&gt;It is easy to set up API access using AWS Identity and Access Management (IAM) and Amazon Cognito. By using OAuth tokens, you leverage the built-in support for OIDC and OAuth2 API Gateway. To support custom authorization requirements, you can run the Lambda Authorization Tool from AWS Lambda.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AS5a20wH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnw4vs5fnx43e87ogjcl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AS5a20wH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnw4vs5fnx43e87ogjcl.jpg" alt='A pie chart showing 40% responded "Yes", 50% responded "No" and 10% responded "Not sure"' width="880" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Device Farm&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS Device Farm is an application testing service that improves the performance of mobile and web applications. It uses a variety of desktop browsers and real mobile devices, so the developer doesn't need to create his own test framework. The service allows you to run tests simultaneously in multiple browsers for desktop computers or use real mobile devices. This speeds up the testing process, which also generates videos and logs to quickly identify bugs in your application.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Automated testing. Test applications in parallel on multiple physical devices in the AWS Cloud. With the built-in Amazon infrastructures, the user is able to test their applications without any scripting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Testing on devices that potential users work with. It is possible to run tests on a wide variety of physical devices. Unlike emulators, physical devices allow you to more accurately determine how users interact with your application while taking into account factors such as memory size, processor usage, location, and firmware or software changes made by the manufacturer or operator. The base of devices in Amazon is constantly growing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Playback and quick troubleshooting. The service allows you to manually reproduce problems and run automatic testing in parallel. The service collects videos, logs, and performance data, which will provide detailed information about the problem and help you quickly solve it. In automated testing, problems are identified and grouped.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In doing so, you can set the location, language settings, network connection settings, application data, and install the required applications.&lt;/p&gt;

&lt;p&gt;It is possible to use open source testing frameworks such as Appium, Calabash, or Espresso. Testing can also be performed manually using remote access. For automated tests and to retrieve results from IDEs, it is possible to use continuous integration environments such as Android Studio or Jenkins.&lt;/p&gt;

&lt;p&gt;For web applications, testing is available in multiple desktop browsers and in different browser versions. This allows tests to run across multiple desktop browsers, including Chrome, Firefox, and Internet Explorer, to ensure that applications work properly across multiple browsers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Pinpoint&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Pinpoint is a flexible and scalable service for inbound and outbound marketing communications. It allows you to interact with your customers through channels such as email, SMS, push notifications, or voice. Amazon Pinpoint is easy to set up, easy to use, and flexible to fit any marketing interaction scenario.&lt;/p&gt;

&lt;p&gt;This allows you to segment your campaign audience by customer type and customize your messages by filling them with relevant content. Amazon Pinpoint delivery and campaign metrics measure the success of your engagement. Amazon Pinpoint can grow with your business and scale to billions of messages per day across all communication channels.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yD47gDa2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3bc8wazn6uu1kz98600.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yD47gDa2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3bc8wazn6uu1kz98600.jpg" alt='A pie chart showing 40% responded "Yes", 50% responded "No" and 10% responded "Not sure"' width="880" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We discovered in this article Front-End Web and&lt;br&gt;
Mobile Development on AWS Features.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed reading this blog post.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please feel free to leave a comment.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;[&lt;a href="https://aws.amazon.com/amplify/"&gt;https://aws.amazon.com/amplify/&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[&lt;a href="https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html"&gt;https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[&lt;a href="https://aws.amazon.com/appsync/"&gt;https://aws.amazon.com/appsync/&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[&lt;a href="https://aws.amazon.com/api-gateway/"&gt;https://aws.amazon.com/api-gateway/&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[&lt;a href="https://aws.amazon.com/device-farm/"&gt;https://aws.amazon.com/device-farm/&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[&lt;a href="https://aws.amazon.com/pinpoint/"&gt;https://aws.amazon.com/pinpoint/&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>aws</category>
      <category>webdev</category>
      <category>cloud</category>
      <category>mobile</category>
    </item>
    <item>
      <title>25 Tips I Wish I Knew Before I Started to Code</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 16 Jan 2022 05:51:50 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/25-tips-i-wish-i-knew-before-i-started-to-code-1k2n</link>
      <guid>https://dev.to/ruppysuppy/25-tips-i-wish-i-knew-before-i-started-to-code-1k2n</guid>
      <description>&lt;p&gt;Starting on the journey of coding can be &lt;strong&gt;extremely daunting&lt;/strong&gt;. Some tips can &lt;strong&gt;ease your path&lt;/strong&gt; &lt;em&gt;at the beginning of the journey&lt;/em&gt;. Here are &lt;strong&gt;25 tips&lt;/strong&gt; &lt;em&gt;I wish someone told me when I was starting out&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-you-dont-need-a-super-computer-to-start-coding"&gt;
  &lt;/a&gt;
  1. You don't need a &lt;em&gt;super computer&lt;/em&gt; to start coding
&lt;/h3&gt;

&lt;p&gt;At the start of the journey, often beginners &lt;em&gt;put starting off learning&lt;/em&gt; till they have a &lt;em&gt;"good enough computer"&lt;/em&gt;. But in actuality, &lt;em&gt;it is an excuse to avoid dragging yourself to the computer/laptop and start coding&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-raw-googling-endraw-is-the-most-important-skill"&gt;
  &lt;/a&gt;
  2. &lt;code&gt;Googling&lt;/code&gt; is the most important skill
&lt;/h3&gt;

&lt;p&gt;We live in a world of &lt;strong&gt;information abundance&lt;/strong&gt;. Nowadays information is &lt;em&gt;cheap&lt;/em&gt; and &lt;em&gt;often free&lt;/em&gt;, so gone are the days where &lt;em&gt;information was the currency&lt;/em&gt;. Now people are more interested in hiring people who can use the &lt;strong&gt;information constructively&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vCZkwzl6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vt3y2yhy1iufpk6cu48x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vCZkwzl6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vt3y2yhy1iufpk6cu48x.jpg" alt="Searching" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-a-math-nerd-is-not-required"&gt;
  &lt;/a&gt;
  3. A &lt;em&gt;Math Nerd&lt;/em&gt; is not required
&lt;/h3&gt;

&lt;p&gt;In movies, Computer Science is always depicted to be a subject for people with &lt;strong&gt;200+ IQ&lt;/strong&gt; with &lt;strong&gt;extensive Maths skills&lt;/strong&gt;. But in reality, all you need is the knowledge of &lt;strong&gt;the basics operations&lt;/strong&gt; for most niches of Computer Science.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-version-control-is-a-must"&gt;
  &lt;/a&gt;
  4. &lt;strong&gt;Version Control&lt;/strong&gt; is a must
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Version Control&lt;/strong&gt; is probably the &lt;em&gt;most important tool for a software developer&lt;/em&gt;. It &lt;strong&gt;saves&lt;/strong&gt;, &lt;strong&gt;backs up your codebase&lt;/strong&gt;, and also &lt;strong&gt;enables you to collaborate with other developers&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-done-is-better-than-perfect"&gt;
  &lt;/a&gt;
  5. &lt;strong&gt;Done&lt;/strong&gt; is Better than &lt;strong&gt;perfect&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;People judge you based on what &lt;strong&gt;you've done&lt;/strong&gt;, not what &lt;strong&gt;you plan to do&lt;/strong&gt;. &lt;strong&gt;Perfect&lt;/strong&gt; is just another term for never. Let me tell you the &lt;strong&gt;highly guarded secret of Mount Olympus&lt;/strong&gt;: &lt;em&gt;Every pro you meet, once started as a noob&lt;/em&gt;! The noob &lt;em&gt;who keeps working on his craft&lt;/em&gt; becomes a &lt;strong&gt;pro over time&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-work-hard-but-smartly"&gt;
  &lt;/a&gt;
  6. &lt;strong&gt;Work Hard&lt;/strong&gt;, but &lt;strong&gt;Smartly&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Hard Work&lt;/strong&gt; is what gets you &lt;em&gt;closer to your goal&lt;/em&gt;, &lt;strong&gt;Smart Work&lt;/strong&gt; is what makes you &lt;em&gt;complete tasks faster&lt;/em&gt;. Combining both, &lt;strong&gt;you become unstoppable&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; &lt;em&gt;Shameless self-promotion&lt;/em&gt; ahead!&lt;/p&gt;

&lt;p&gt;A client gave me a task of converting &lt;em&gt;1.5k&lt;/em&gt; &lt;code&gt;.svg&lt;/code&gt;s to &lt;code&gt;.tsx&lt;/code&gt;s, instead of &lt;strong&gt;converting them manually&lt;/strong&gt; (ETA: &lt;em&gt;30 to 50 hours&lt;/em&gt;), I &lt;strong&gt;wrote a script&lt;/strong&gt; (&lt;em&gt;took less than 2 hours&lt;/em&gt;) that &lt;strong&gt;automatically converts&lt;/strong&gt; them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3HDaU4fo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sd2hnts40ixa61q5ous6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3HDaU4fo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sd2hnts40ixa61q5ous6.jpg" alt="work hard smartly" width="800" height="418"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-tools-unlock-your-productivity"&gt;
  &lt;/a&gt;
  7. &lt;strong&gt;Tools&lt;/strong&gt; unlock your &lt;strong&gt;productivity&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Tools can be thought of &lt;em&gt;cheat codes of life&lt;/em&gt;, they help you &lt;strong&gt;get things done&lt;/strong&gt; &lt;em&gt;faster&lt;/em&gt; and &lt;em&gt;more efficiently&lt;/em&gt;. If you cannot find a tool that &lt;em&gt;fits your needs&lt;/em&gt;, you can always &lt;strong&gt;build out one&lt;/strong&gt; (&lt;em&gt;Heck Yeah! perks of being a developer!&lt;/em&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-one-completed-project-gtgt-100-incomplete-ones"&gt;
  &lt;/a&gt;
  8. One Completed Project &lt;strong&gt;&amp;gt;&amp;gt;&lt;/strong&gt; 100 Incomplete Ones
&lt;/h3&gt;

&lt;p&gt;As mentioned previously, people judge you based on what &lt;strong&gt;you've done&lt;/strong&gt;, not what &lt;strong&gt;you plan to do&lt;/strong&gt;. So put your &lt;em&gt;best foot forward&lt;/em&gt; and have a few deployed projects, &lt;em&gt;to ease up the process for the viewer&lt;/em&gt;, as nobody will download your &lt;em&gt;code&lt;/em&gt; and &lt;em&gt;run it&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-where-you-end-up-in-5-years-is-determined-by-what-you-do-now"&gt;
  &lt;/a&gt;
  9. Where you end up in &lt;strong&gt;5 years&lt;/strong&gt; is determined by what you do NOW
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Reality is negotiable&lt;/strong&gt;, &lt;em&gt;where you are currently in life, is a direct result of what you had been doing in the past 5 - 10 years&lt;/em&gt;. Don't like it? Strive to change it, and &lt;em&gt;in 5 - 10 years you will find yourself somewhere you are proud to be&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pe91YdsZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjzyhs90w6apbmmy3t7g.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pe91YdsZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjzyhs90w6apbmmy3t7g.jpeg" alt="take action now" width="880" height="564"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-selftaught-programmers-have-the-best-debugging-skills"&gt;
  &lt;/a&gt;
  10. Self-taught Programmers have the &lt;strong&gt;best debugging skills&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Self-taught Programmers&lt;/strong&gt; lack the &lt;em&gt;opportunity of having someone help out whenever they face a problem&lt;/em&gt;, so &lt;em&gt;after 100s of trial and error&lt;/em&gt;, they develop &lt;strong&gt;a feel&lt;/strong&gt; for &lt;em&gt;efficient ways to squash a bug&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-you-dont-need-the-right-answer-just-a-less-wrong-one"&gt;
  &lt;/a&gt;
  11. You don't need the &lt;strong&gt;right answer&lt;/strong&gt;, just a &lt;strong&gt;less wrong one&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;People are so &lt;strong&gt;afraid of failing&lt;/strong&gt; that &lt;em&gt;they don't even give things a shot&lt;/em&gt;, not realizing that &lt;em&gt;you might not be successful if you try, but you definitely won't be successful if you don't try&lt;/em&gt;. A failure is truly a failure, only if you &lt;strong&gt;don't learn from it&lt;/strong&gt; and &lt;strong&gt;keep repeating the same mistakes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ImsQdCF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3msik7icynglxgsnn2o.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ImsQdCF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3msik7icynglxgsnn2o.jpg" alt="failure" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-its-a-marathon-not-a-sprint"&gt;
  &lt;/a&gt;
  12. It's a &lt;strong&gt;Marathon&lt;/strong&gt;, not a &lt;strong&gt;Sprint&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The development space is &lt;strong&gt;constantly evolving&lt;/strong&gt;, so prepare yourself for &lt;em&gt;lifelong learning&lt;/em&gt;. By putting &lt;strong&gt;100-hour week&lt;/strong&gt;, &lt;em&gt;you will just get tired quickly&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-dont-reinvent-the-wheel"&gt;
  &lt;/a&gt;
  13. Don't reinvent the &lt;strong&gt;Wheel&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;If there is a library to &lt;strong&gt;solve a problem&lt;/strong&gt; you are working on, there is &lt;em&gt;no harm in utilizing it&lt;/em&gt; (unless you are actually trying to build a similar library).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14-tutorials-fail-to-teach-you-the-most-important-skill"&gt;
  &lt;/a&gt;
  14. &lt;strong&gt;Tutorials&lt;/strong&gt; fail to teach you &lt;em&gt;the most important skill&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;The most crucial skill &lt;strong&gt;problem-solving&lt;/strong&gt;, which comes only through &lt;strong&gt;trial and error&lt;/strong&gt;. Tutorials give you a &lt;em&gt;highly refactored final version of the code&lt;/em&gt;, so you miss out on seeing the skill in action.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15-no-technology-is-perfect"&gt;
  &lt;/a&gt;
  15. No Technology is &lt;strong&gt;perfect&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;In this world, everything has its &lt;strong&gt;pros and cons&lt;/strong&gt;. So don't waste time, fighting the battle &lt;em&gt;Tech X&lt;/em&gt; is better than &lt;em&gt;Tech Y&lt;/em&gt;, in some niches &lt;em&gt;Tech X&lt;/em&gt; will dominate &lt;em&gt;Tech Y&lt;/em&gt; and vice versa.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#16-a-project-is-never-complete"&gt;
  &lt;/a&gt;
  16. A project is &lt;strong&gt;never complete&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Learn the &lt;strong&gt;Pareto Principle&lt;/strong&gt; (&lt;em&gt;Law of disproportionate results&lt;/em&gt;). &lt;strong&gt;80%&lt;/strong&gt; of the results come from &lt;strong&gt;20%&lt;/strong&gt; of the inputs. &lt;em&gt;Find out the 20% in your case and focus on those&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_nsvCNpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zv3oha0s3b1otx8kafg5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_nsvCNpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zv3oha0s3b1otx8kafg5.jpg" alt="working on a project" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#17-the-hype-train-is-real-but-take-it-with-a-grain-of-salt"&gt;
  &lt;/a&gt;
  17. The &lt;strong&gt;hype train&lt;/strong&gt; is real, but &lt;em&gt;take it with a grain of salt&lt;/em&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;New players are where the puck was, good players are where the puck is, great players are where the puck will be.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;strong&gt;hype&lt;/strong&gt; around a technology tells you where the &lt;code&gt;puck&lt;/code&gt; is heading, but always &lt;em&gt;take it with a grain of salt&lt;/em&gt;, because &lt;em&gt;new technologies have high chances of failure&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#18-learn-what-not-to-learn"&gt;
  &lt;/a&gt;
  18. Learn what &lt;em&gt;NOT to learn&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Learning every is &lt;em&gt;simply not humanely possible&lt;/em&gt;. First &lt;em&gt;test out the waters by trying out everything&lt;/em&gt;, then &lt;em&gt;choose the technology that &lt;strong&gt;resonates the best with you&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#19-humility-is-your-superpower"&gt;
  &lt;/a&gt;
  19. Humility is your &lt;strong&gt;superpower&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Cherish your &lt;strong&gt;achievements from inside&lt;/strong&gt;, but be &lt;strong&gt;humble about them from outside&lt;/strong&gt;. &lt;em&gt;Bragging won't get you far.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#20-consistency-secret-sauce-to-achieve-outstanding-outputs-with-average-inputs"&gt;
  &lt;/a&gt;
  20. Consistency: &lt;strong&gt;Secret sauce&lt;/strong&gt; to achieve &lt;em&gt;outstanding outputs&lt;/em&gt; with &lt;em&gt;average inputs&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Nobody became a pro by putting in &lt;strong&gt;20 hours in a day&lt;/strong&gt;, but a lot of people did it by putting in &lt;strong&gt;1 hour for 20 days&lt;/strong&gt;. &lt;em&gt;Your brain needs time to digest the information, you feed it&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#21-open-source-can-help-you-level-up"&gt;
  &lt;/a&gt;
  21. Open Source can help you &lt;strong&gt;level up&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Open Source&lt;/strong&gt; is a great way to learn by building &lt;em&gt;amazing Softwares and tools&lt;/em&gt;. But be prepared to be &lt;em&gt;constantly learning as you would be required to be constantly adapting to new technologies&lt;/em&gt;. It is a great way to &lt;strong&gt;up your game&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wSznYPN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etvmjn6h4zbswf3z3jmt.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wSznYPN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etvmjn6h4zbswf3z3jmt.jpeg" alt="open source" width="880" height="490"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#22-the-more-you-learn-the-more-you-earn"&gt;
  &lt;/a&gt;
  22. &lt;strong&gt;The More you learn, the more you Earn&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;em&gt;amount of money you earn is directly proportional to the amount of knowledge you possess&lt;/em&gt;. Not happy with what you are making? &lt;em&gt;Pick up a new skill that is in higher demand&lt;/em&gt;, &lt;strong&gt;Reality is Negotiable&lt;/strong&gt; remember?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#23-soft-skills-pay-the-bills"&gt;
  &lt;/a&gt;
  23. Soft Skills &lt;em&gt;pay the bills&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Hard Skills&lt;/strong&gt; get you in the room, but &lt;strong&gt;Soft Skills&lt;/strong&gt; get selected. &lt;em&gt;People hire they enjoy interacting with.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#24-online-presence-is-crucial"&gt;
  &lt;/a&gt;
  24. Online Presence is &lt;strong&gt;crucial&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You can offer the &lt;strong&gt;best product in the world&lt;/strong&gt;, but &lt;em&gt;if nobody knows about it, no one will buy from you&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzkH8DBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tu753b98z0sbq0wu84q3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzkH8DBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tu753b98z0sbq0wu84q3.jpg" alt="Online Presence" width="800" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#25-jack-of-all-trades-master-of-none"&gt;
  &lt;/a&gt;
  25. &lt;em&gt;Jack of all Trades Master of None...&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;...is still better than the Master of One&lt;/em&gt; (Yep, that's the complete quote). But know what's &lt;strong&gt;the best&lt;/strong&gt;? &lt;em&gt;Jack of all Trades, Master of One.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h1&gt;

&lt;p&gt;That's all folk! Do you have any tips to add to the list? &lt;strong&gt;Share them in the comments below 👇&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Need a &lt;strong&gt;Top Rated Front-End Development Freelancer&lt;/strong&gt; to chop away your development woes? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Personal Website&lt;/a&gt; and &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to connect? Reach out to me on &lt;a href="https://www.linkedin.com/in/tapajyoti-bose/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a &lt;strong&gt;Digital Nomad&lt;/strong&gt; in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for &lt;strong&gt;Weekly new Tidbits&lt;/strong&gt; on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are a few commonly asked questions I get. So, I hope this &lt;strong&gt;FAQ&lt;/strong&gt; section solves your issues.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Front-End Web Dev?&lt;/strong&gt;&lt;br&gt;
Look into the following articles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/front-end-developer-roadmap-zero-to-hero-4pkf"&gt;Front End Development Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p"&gt;Front End Project Ideas&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you mentor me?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Sorry, I am already under a lot of workload and would not have the time to mentor anyone.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you like to collaborate on our site?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
As mentioned in the &lt;em&gt;previous question&lt;/em&gt;, I am in a time crunch, so I would have to pass on such opportunities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Freelancing For The Summer</title>
      <author>ayubf</author>
      <pubDate>Sun, 16 Jan 2022 05:40:29 +0000</pubDate>
      <link>https://dev.to/ayubf/freelancing-for-the-summer-5f0l</link>
      <guid>https://dev.to/ayubf/freelancing-for-the-summer-5f0l</guid>
      <description>&lt;p&gt;I'm graduating high school this summer, and I'm not sure any of the places I've applied to for internships will even reply 😅&lt;/p&gt;

&lt;p&gt;Does anyone have any expreience with freelance work on Fiverr or similar platforms?&lt;/p&gt;

&lt;p&gt;What jobs did you offer?&lt;/p&gt;

&lt;p&gt;What did your page look like and what specifically do you think landed you the jobs?&lt;/p&gt;

&lt;p&gt;I'm considering building sites for companies/people using Python/TypeScript for the backend and Jinja2(templating only)/React for the frontend&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

</description>
      <category>python</category>
      <category>typescript</category>
      <category>career</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Setup Vault in HA with MySQL backend in 10 minutes | Hashicorp | Tutorial | Tharun</title>
      <author>Tharun Shiv</author>
      <pubDate>Sun, 16 Jan 2022 05:35:10 +0000</pubDate>
      <link>https://dev.to/developertharun/setup-vault-in-ha-with-mysql-backend-in-10-minutes-hashicorp-tutorial-tharun-559h</link>
      <guid>https://dev.to/developertharun/setup-vault-in-ha-with-mysql-backend-in-10-minutes-hashicorp-tutorial-tharun-559h</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-to-set-up-vault-in-high-availability-ha-mode-with-mysql-as-storage-backend"&gt;
  &lt;/a&gt;
  How to set up Vault in High Availability ( HA mode ) with MySQL as storage backend
&lt;/h2&gt;

&lt;p&gt;In this tutorial we will look at how we can use MySQL as a backend to Vault. This setup will involve end to end TLS. We have already seen how to setup Vault with TLS frontend. We also saw how we can setup MySQL with TLS frontend. In this tutorial, we will look at how we can use TLS Enabled MySQL as a storage backend to Vault. This is a complete secure production setup.&lt;/p&gt;

&lt;p&gt;Tutorial on how to setup Vault Dev &amp;amp; Production mode:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/developertharun" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cdxCiXS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CuAC2zZW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/378811/dfe9c221-cff5-4e4d-9fcb-61fb3ca2bdd0.png" alt="developertharun"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/developertharun/hashicorp-vault-dev-and-prod-server-setup-unseal-policies-tls-setup-48mo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Hashicorp Vault | Dev and Prod server setup | Unseal | Policies | TLS setup | Tharun&lt;/h2&gt;
      &lt;h3&gt;Tharun Shiv ・ Jan 2 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#database&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Tutorial on how to setup TLS/SSL enabled MySQL/MariaDB:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/developertharun" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cdxCiXS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CuAC2zZW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/378811/dfe9c221-cff5-4e4d-9fcb-61fb3ca2bdd0.png" alt="developertharun"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/developertharun/easiest-way-to-setup-mysqlmariadb-with-tlsssl-in-10-minutes-v105-any-os-ubuntu-focal-developer-tharun-4okc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Easiest way to setup MySQL/MariaDB with TLS/SSL in 10 minutes- v10.5 - Any OS - Ubuntu Focal | Developer Tharun&lt;/h2&gt;
      &lt;h3&gt;Tharun Shiv ・ Jan 15 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#mysql&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#database&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#create-vault-user-in-mysql"&gt;
  &lt;/a&gt;
  Create Vault user in MySQL
&lt;/h2&gt;

&lt;p&gt;The Vault service needs credentials to login into MySQL server in order to store data and metadata in a backend. We will create this user in MySQL now.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mysql &lt;span class="nt"&gt;-uroot&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; &lt;span class="nt"&gt;--ssl-ca&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/mysql/certs/ca.pem
&amp;lt;Enter password&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;user&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;USER&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;vault-mysql-username&amp;gt;'&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="s1"&gt;'%'&lt;/span&gt; &lt;span class="n"&gt;IDENTIFIED&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;vault-mysql-password&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;grant&lt;/span&gt; &lt;span class="k"&gt;privileges&lt;/span&gt;
&lt;span class="k"&gt;GRANT&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt; &lt;span class="k"&gt;PRIVILEGES&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;vault&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;vault-mysql-username&amp;gt;'&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="s1"&gt;'%'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#mysql-bind-address"&gt;
  &lt;/a&gt;
  MySQL Bind Address
&lt;/h2&gt;

&lt;p&gt;When setting up Vault, I came across difficulties bringing up the Vault server. I have listed the challenges and solution at the end of this post. One point I would like to address is the MySQL Bind address. This configuration of MySQL defines to which network interface the MySQL process binds to / listens on. The other clients such as Vault will be able to access MySQL by sending requests to this particular interface only.&lt;/p&gt;

&lt;p&gt;We have seen where to set this in the below tutorial&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/developertharun" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cdxCiXS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CuAC2zZW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/378811/dfe9c221-cff5-4e4d-9fcb-61fb3ca2bdd0.png" alt="developertharun"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/developertharun/easiest-way-to-setup-mysqlmariadb-with-tlsssl-in-10-minutes-v105-any-os-ubuntu-focal-developer-tharun-4okc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Easiest way to setup MySQL/MariaDB with TLS/SSL in 10 minutes- v10.5 - Any OS - Ubuntu Focal | Developer Tharun&lt;/h2&gt;
      &lt;h3&gt;Tharun Shiv ・ Jan 15 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#mysql&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#database&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#mysql-ca-pem-file"&gt;
  &lt;/a&gt;
  MySQL CA Pem file
&lt;/h2&gt;

&lt;p&gt;Vault server needs the CA.pem of the MySQL server that we used in the MySQL TLS setup tutorial. Copy that to a  directory that vault can access&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cp&lt;/span&gt; ~/certs/ca.pem /opt/vault/tls/mysql-ca.pem

&lt;span class="nb"&gt;chown&lt;/span&gt; &lt;span class="nt"&gt;-R&lt;/span&gt; vault: /opt/vault/tls
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#vault-config"&gt;
  &lt;/a&gt;
  Vault config
&lt;/h2&gt;

&lt;p&gt;In the above tutorials we have setup Vault, now let us configure it to use MySQL Backend. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;/etc/vault.d/vault.hcl&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;ui = &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt; &lt;span class="c1"&gt;## or false&lt;/span&gt;

&lt;span class="c1"&gt;# MySQL backend config&lt;/span&gt;
&lt;span class="s"&gt;storage "mysql" {&lt;/span&gt;
  &lt;span class="s"&gt;ha_enabled = "true"&lt;/span&gt;
  &lt;span class="s"&gt;address = "&amp;lt;mySQL-hostname&amp;gt;:3306"&lt;/span&gt;
  &lt;span class="s"&gt;username = "&amp;lt;vault-mysql-username&amp;gt;"&lt;/span&gt;
  &lt;span class="s"&gt;password = "&amp;lt;vault-mysql-password&amp;gt;"&lt;/span&gt;
  &lt;span class="s"&gt;database = "&amp;lt;vault-mysql-database&amp;gt;"&lt;/span&gt;
  &lt;span class="s"&gt;#plaintext_connection_allowed = "true"&lt;/span&gt; &lt;span class="c1"&gt;#non-TLS mysql&lt;/span&gt;
  &lt;span class="c1"&gt;#path to CA.pem to verify MySQL SSL&lt;/span&gt;
  &lt;span class="s"&gt;tls_ca_file = "&amp;lt;path-to-mysql-ca-pem&amp;gt;"&lt;/span&gt; 
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Vault server listen configuration&lt;/span&gt;
&lt;span class="s"&gt;listener "tcp" {&lt;/span&gt;
  &lt;span class="s"&gt;address       = "&amp;lt;vault-hostname/IP&amp;gt;:8200"&lt;/span&gt;
  &lt;span class="s"&gt;tls_cert_file = "&amp;lt;path-to-vault-tls-cert&amp;gt;"&lt;/span&gt;
  &lt;span class="s"&gt;tls_key_file  = "&amp;lt;path-to-vault-tls-key&amp;gt;"&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# the address to advertise for HA purpose&lt;/span&gt;
&lt;span class="s"&gt;api_addr="https://&amp;lt;vault-hostname&amp;gt;:8200"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#restart-vault"&gt;
  &lt;/a&gt;
  Restart Vault
&lt;/h2&gt;

&lt;p&gt;Now we can go ahead export the Vault variables and restart the vault server&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;VAULT_ADDR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"https://&amp;lt;vault-server&amp;gt;:8200"&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;VAULT_CACERT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;path-to-vault-tls-cert&amp;gt;"&lt;/span&gt;

&lt;span class="c"&gt;# make sure MySQL is running and listening&lt;/span&gt;

&lt;span class="c"&gt;# now restart / start Vault&lt;/span&gt;
service vault start 

&lt;span class="c"&gt;# or&lt;/span&gt;
service vault restart

&lt;span class="c"&gt;# check Vault server logs&lt;/span&gt;
journalctl &lt;span class="nt"&gt;-u&lt;/span&gt; vault.service 

&lt;span class="c"&gt;# check Vault status&lt;/span&gt;
vault status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have successfully setup Vault with TLS frontend, TLS MySQL backend, thereby securing Vault end to end making it a perfect Production setup.&lt;/p&gt;

&lt;p&gt;Although there are 18 ways in which a Hashicorp Vault server can be attacked, and I have covered it in the below Video&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3ikQlRQAso4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thank-you-for-reading-this-is-tharun-shiv-aka-developer-tharun"&gt;
  &lt;/a&gt;
  Thank you for reading, This is Tharun Shiv a.k.a Developer Tharun
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4DVZ_PES--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtxq6bdms36fmn62450h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4DVZ_PES--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtxq6bdms36fmn62450h.png" alt="Tharun Shiv" width="500" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find more articles here: &lt;a href="https://dev.to/developertharun"&gt;https://dev.to/developertharun&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Roadrunners is a series that is aimed at delivering concepts as precisely as possible. Here, a roadrunner is referred to as a person who does things super fast &amp;amp; efficiently. Are you a roadrunner?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thank you&lt;/p&gt;

</description>
      <category>devops</category>
      <category>security</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Convert a File/URL File to a Base64 string or DataURL using JavaScript</title>
      <author>Shaswat Raj</author>
      <pubDate>Sun, 16 Jan 2022 05:32:54 +0000</pubDate>
      <link>https://dev.to/sh20raj/convert-a-file-to-a-base64-string-or-dataurl-using-javascript-3fkf</link>
      <guid>https://dev.to/sh20raj/convert-a-file-to-a-base64-string-or-dataurl-using-javascript-3fkf</guid>
      <description>&lt;p&gt;Converting JavaScript file objects or blobs to Base64 strings can be useful. For example when we can only send string based data to the server. In this tutorial we’ll explore how to use JavaScript to generate a Base64 string and a DataURL from a file object.&lt;/p&gt;

&lt;p&gt;In both examples we’ll use a file obtained from a file input field.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#encoding-a-file-as-a-dataurl"&gt;
  &lt;/a&gt;
  Encoding a File as a DataURL
&lt;/h2&gt;

&lt;p&gt;We use FileReader to convert the file object to a dataUR this is done by using the &lt;code&gt;readAsDataURL&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="file" /&amp;gt;

&amp;lt;script&amp;gt;
  // get a reference to the file input
  const fileInput = document.querySelector("input");

  // listen for the change event so we can capture the file
  fileInput.addEventListener("change", (e) =&amp;gt; {
    // get a reference to the file
    const file = e.target.files[0];

    // encode the file using the FileReader API
    const reader = new FileReader();
    reader.onloadend = () =&amp;gt; {
      // log to console
      // logs data:&amp;lt;type&amp;gt;;base64,wL2dvYWwgbW9yZ...
      console.log(reader.result);
    };
    reader.readAsDataURL(file);
  });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#encoding-the-file-as-a-base64-string"&gt;
  &lt;/a&gt;
  Encoding the File as a Base64 string
&lt;/h2&gt;

&lt;p&gt;The snippet below creates a base64 string, it’s identical to the previous example but it uses a regular expression to remove the Data URL part.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="file" /&amp;gt;

&amp;lt;script&amp;gt;
  // get a reference to the file input
  const fileInput = document.querySelector("input");

  // listen for the change event so we can capture the file
  fileInput.addEventListener("change", (e) =&amp;gt; {
    // get a reference to the file
    const file = e.target.files[0];

    // encode the file using the FileReader API
    const reader = new FileReader();
    reader.onloadend = () =&amp;gt; {
      // use a regex to remove data url part
      const base64String = reader.result
        .replace("data:", "")
        .replace(/^.+,/, "");

      // log to console
      // logs wL2dvYWwgbW9yZ...
      console.log(base64String);
    };
    reader.readAsDataURL(file);
  });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#generating-a-url-that-points-to-a-file-object"&gt;
  &lt;/a&gt;
  Generating a URL that points to a File object
&lt;/h2&gt;

&lt;p&gt;Sometimes we just want to use an &lt;code&gt;File&lt;/code&gt; object as an image source. But how to add the file object to the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;code&gt;src&lt;/code&gt; attribute?&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;URL.createObjectURL()&lt;/code&gt; method can help here.&lt;/p&gt;

&lt;p&gt;The following code snippet will update the image source to the file that is loaded in the file input.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="file" accept="image/*" /&amp;gt;

&amp;lt;img src="" alt="" /&amp;gt;

&amp;lt;script&amp;gt;
  // get a reference to the file input
  const imageElement = document.querySelector("img");

  // get a reference to the file input
  const fileInput = document.querySelector("input");

  // listen for the change event so we can capture the file
  fileInput.addEventListener("change", (e) =&amp;gt; {
    // get a reference to the file
    const file = e.target.files[0];

    // set file as image source
    imageElement.src = URL.createObjectURL(file);
  });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need to make sure to revoke the URL if we no longer need the file. If we don’t this causes memory leaks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;URL.revokeObjectURL(fileUrl);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That’s it! - &lt;a href="https://pqina.nl/blog/convert-a-file-to-a-base64-string-with-javascript/"&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-its-time-to-convert-a-url-file-to-base64"&gt;
  &lt;/a&gt;
  Now It's Time to convert a URL file to Base64
&lt;/h2&gt;

&lt;p&gt;Let's we have an Image Here :- &lt;a href="https://Gurimg.sh20raj.repl.co/logo.jpg"&gt;https://Gurimg.sh20raj.repl.co/logo.jpg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the Function...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function toDataUrl(url, callback) {
    var xhr = new XMLHttpRequest();
    xhr.onload = function() {
        var reader = new FileReader();
        reader.onloadend = function() {
            callback(reader.result);
        }
        reader.readAsDataURL(xhr.response);
    };
    xhr.open('GET', url);
    xhr.responseType = 'blob';
    xhr.send();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the function you have to run and get the image base64 on your console.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;toDataUrl("https://Gurimg.sh20raj.repl.co/logo.jpg", function(myBase64) {
    console.log(myBase64); // myBase64 is the base64 string
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>sh20raj</category>
      <category>tips</category>
    </item>
    <item>
      <title>java traditional method to remove duplicate String </title>
      <author>Mohammed Riyas</author>
      <pubDate>Sun, 16 Jan 2022 05:09:07 +0000</pubDate>
      <link>https://dev.to/riyas07/java-core-method-to-remove-duplicate-string-6o8</link>
      <guid>https://dev.to/riyas07/java-core-method-to-remove-duplicate-string-6o8</guid>
      <description>&lt;p&gt;I just saw a post in dev someone solved same problem using collections in java. so i thought let me try the same problem to solve in traditional way`&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;public class Main&lt;br&gt;
{&lt;br&gt;
public static void main(String[] args) {&lt;br&gt;
    String s="abbvcddgtttt";&lt;br&gt;
    char c[]=s.toCharArray();&lt;br&gt;
    char cc[]=new char[c.length];&lt;br&gt;
    int index=0;&lt;br&gt;
    char same=' ';&lt;br&gt;
    for(int i=0;i&amp;lt;c.length;i++)&lt;br&gt;
    {&lt;br&gt;
       for(int j=i+1;j&amp;lt;c.length;j++)&lt;br&gt;
       {&lt;br&gt;
           if(c[i]==c[j])&lt;br&gt;
           {&lt;br&gt;
              c[i]=' ';&lt;br&gt;
           }&lt;br&gt;
       }&lt;br&gt;
       if(c[i]!=' ')&lt;br&gt;
       {&lt;br&gt;
            cc[index]=c[i];&lt;br&gt;
          index++;&lt;br&gt;
       }&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;}
for(char i:cc)
{
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;System.out.println(i);&lt;br&gt;
    }&lt;br&gt;
}&lt;br&gt;
}&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>java</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Leaving electron.js to the past.</title>
      <author>Akash Pattanaik</author>
      <pubDate>Sun, 16 Jan 2022 03:32:05 +0000</pubDate>
      <link>https://dev.to/akashpattnaik/leaving-electronjs-to-the-past-3mkl</link>
      <guid>https://dev.to/akashpattnaik/leaving-electronjs-to-the-past-3mkl</guid>
      <description>&lt;p&gt;So, I recently started using &lt;a href="//tauri.studio"&gt;&lt;code&gt;tauri&lt;/code&gt;&lt;/a&gt; because electron.js was no longer working on my pc... I was amazed to see the release build size of the &lt;code&gt;tauri&lt;/code&gt; app.&lt;br&gt;
It was way smaller than expected.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#size-comparison"&gt;
  &lt;/a&gt;
  Size Comparison
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Electron.JS&lt;/th&gt;
&lt;th&gt;Tauri&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;62.5&lt;/code&gt;mb&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;4.32&lt;/code&gt;mb&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;These are the sized of installers for windows. The project was just a basic &lt;code&gt;hello world&lt;/code&gt; displaying page.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So as you can see, &lt;code&gt;Tauri&lt;/code&gt; is the next desktop framework for webdevs... &lt;code&gt;Electron.JS&lt;/code&gt; is nothing compared to &lt;code&gt;Tauri&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;Tauri&lt;/code&gt; by default provides various templates for new projects like &lt;code&gt;vanilla.js&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;svelte.js&lt;/code&gt;, &lt;code&gt;vue.js&lt;/code&gt; and a lot more in the future. The &lt;code&gt;tauri&lt;/code&gt; devs are also working on bringing &lt;code&gt;Tauri&lt;/code&gt; to &lt;code&gt;Android&lt;/code&gt; and &lt;code&gt;IOS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Tauri&lt;/code&gt; depends upon &lt;code&gt;Microsoft Edge Runtime2&lt;/code&gt; and not bulky core apps like &lt;code&gt;Electron.JS&lt;/code&gt; depends on &lt;code&gt;chromium&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-tauri"&gt;
  &lt;/a&gt;
  Getting started with Tauri
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This is for windows only, get your OS instructions on tauri.studio&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;code&gt;Microsoft Visual Studio C++ Build Tools&lt;/code&gt; &lt;a href="https://visualstudio.microsoft.com/visual-cpp-build-tools/"&gt;From Here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://nodejs.org/en/"&gt;&lt;code&gt;Node.JS&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.rust-lang.org/"&gt;&lt;code&gt;Rust&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Finally, Install &lt;a href="https://developer.microsoft.com/en-us/microsoft-edge/webview2/#download-section"&gt;&lt;code&gt;WebView2&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;This will make your ready for developing in tauri...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;For Further Understanding, Check Out The &lt;a href="https://tauri.studio/"&gt;Docs&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tauri</category>
      <category>electron</category>
    </item>
    <item>
      <title>How To: Build A Linked List in JavaScript Part 2</title>
      <author>Adriana DiPietro</author>
      <pubDate>Sun, 16 Jan 2022 03:05:34 +0000</pubDate>
      <link>https://dev.to/am20dipi/how-to-build-a-linked-list-in-javascript-part-2-9ec</link>
      <guid>https://dev.to/am20dipi/how-to-build-a-linked-list-in-javascript-part-2-9ec</guid>
      <description>&lt;p&gt;Hi everyone! Today we will continuing our exploration into Linked Lists by building a few methods into our Class LinkedList from &lt;a href="https://dev.to/am20dipi/how-to-build-a-linked-list-in-javascript-4kn1"&gt;this&lt;/a&gt; previous lesson. &lt;/p&gt;

&lt;p&gt;Let's get started! &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#goals"&gt;
  &lt;/a&gt;
  Goals
&lt;/h3&gt;

&lt;p&gt;Here are our goals for today:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#append"&gt;Build append()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prepend"&gt;Build prepend()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#recap"&gt;Recap + Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By implementing these methods, we will expand the utilization and effectiveness of our Class LinkedList and each instance instantiated thereafter. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#build-append"&gt;
  &lt;/a&gt;
  Build append()&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;First off, let's figure out what 'append' means. Append means to &lt;strong&gt;add&lt;/strong&gt; a new node at the &lt;strong&gt;end&lt;/strong&gt; of the linked list. &lt;/p&gt;

&lt;p&gt;Therefore, to add something to the end of the linked list, we need to do a few things:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Pass in a value to append() as a parameter.&lt;br&gt;
&lt;strong&gt;2.&lt;/strong&gt; Create a new node constant.&lt;br&gt;
&lt;strong&gt;3.&lt;/strong&gt; Set the new node's &lt;strong&gt;value&lt;/strong&gt; property.&lt;br&gt;
&lt;strong&gt;4.&lt;/strong&gt; Set the new node's &lt;strong&gt;next&lt;/strong&gt; property.&lt;br&gt;
&lt;strong&gt;5.&lt;/strong&gt; Update the &lt;strong&gt;tail&lt;/strong&gt; of our instance of LinkedList.&lt;br&gt;
&lt;strong&gt;6.&lt;/strong&gt; Increment the length of our instance of LinkedList.&lt;/p&gt;

&lt;p&gt;So, underneath our constructor method, let's create an append() method and pass in 'value':&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;append(value){


}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How do we create a new node? We can declare and assign a variable called "newNode" and establish the properties that make up a node (a "value" and a "next"):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;append(value){
   const newNode = {
       value: value,
       next: null
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The "value" property is going to be set to the value we pass in as a parameter. The "next" property will be set to null. &lt;/p&gt;

&lt;p&gt;Instead of the tail pointing to null, we are now pointing to the newNode we created.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;append(value){
   const newNode = {
       value: value,
       next: null
   }
   this.tail.next = newNode
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also want establish that our appended newNode is now the tail itself:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;append(value){
   const newNode = {
       value: value,
       next: null
   }
   this.tail.next = newNode
   this.tail = newNode
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we want to increment (or increase) the length to accommodate for the newly created appended node:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;append(value){
   const newNode = {
       value: value,
       next: null
   }
   this.tail.next = newNode
   this.tail = newNode
   this.length++
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Remember: "this" represents the instance of Class LinkedList.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's test this out:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const myLinkedList = new LinkedList(10)
myLinkedList.append(5)
myLinkedList.append(7)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our console, we should receive something like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0gTin224--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ncp6q2u30mxbybngxm5t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0gTin224--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ncp6q2u30mxbybngxm5t.png" alt="Image desc" width="716" height="652"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our head node is made up of a 'value' of 10 and a 'next' of the appended 5. &lt;/li&gt;
&lt;li&gt;Our second node has a value of 5 and a 'next' of the appended 7.
&lt;/li&gt;
&lt;li&gt;Our tail node has a value of 7 and a 'next' of null (because it is the last node in the list). &lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#build-prepend"&gt;
  &lt;/a&gt;
  Build prepend()&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;"Prepend", similarly to "append" adds a new node to a linked list. However, prepend adds the node to the &lt;strong&gt;beginning&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Having built append(), we can do something very similar for prepend():&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Pass in a value to prepend() as a parameter.&lt;br&gt;
&lt;strong&gt;2.&lt;/strong&gt; Create a new node constant.&lt;br&gt;
&lt;strong&gt;3.&lt;/strong&gt; Set the new node's &lt;strong&gt;value&lt;/strong&gt; property.&lt;br&gt;
&lt;strong&gt;4.&lt;/strong&gt; Set the new node's &lt;strong&gt;next&lt;/strong&gt; property.&lt;br&gt;
&lt;strong&gt;5&lt;/strong&gt;. Update the &lt;strong&gt;head&lt;/strong&gt; of our instance of LinkedList.&lt;br&gt;
&lt;strong&gt;6.&lt;/strong&gt; Increment the length of our instance of LinkedList.&lt;/p&gt;

&lt;p&gt;Beneath our append() method, let's create a prepend() method and pass in "value". We are also going to declare a new constant "newNode" with its "value" property set to the value we pass in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;prepend(value){
   const newNode = {
       value: value,
       next: ___
   }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since this new node is going to the &lt;strong&gt;beginning&lt;/strong&gt; of the linked list, its "next" value must be the &lt;em&gt;previous&lt;/em&gt; head node of the linked list:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;prepend(value){
   const newNode = {
       value: value,
       next: this.head
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we have to set the head of our instance of LinkedList to this newly created node AND increment the length:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;prepend(value){
   const newNode = {
       value: value,
       next: this.head
   }
   this.head = newNode
   this.length++
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we run an example, like this, in our console:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const newList = new LinkedList(10)
myLinkedList.prepend(44)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We should get returned something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b5r-dt1p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1utm1vv4hbz3tmtwgke1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b5r-dt1p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1utm1vv4hbz3tmtwgke1.png" alt="Image dec2" width="720" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our head node is made up of the prepended 'value' of 44 and a 'next' of the node with a value of 10 and a next of null. &lt;/li&gt;
&lt;li&gt;Our tail node has a 'value' of 10 and a 'next' of null (because it is the last node in the list).&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#recap-summary"&gt;
  &lt;/a&gt;
  Recap + Summary &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Here we now have a Class LinkedList built in JavaScript! We are getting to a point where our code provides functionality to instances instantiated from the class. A functional linked list is great for efficient coding, an introduction to Trees, and predictable data rendering. &lt;/p&gt;

&lt;p&gt;For the next part in the series, I want to focus on traversing linked lists in order to &lt;strong&gt;remove&lt;/strong&gt; and &lt;strong&gt;insert&lt;/strong&gt; a node in a specific location on the linked list. &lt;/p&gt;

&lt;p&gt;Stay tuned! And thank you for reading + coding along with me :)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>algorithms</category>
      <category>datastructures</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
