<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Day 14/30 : Samsung Watch Clone With HTML and CSS</title>
      <author>Somanath Goudar</author>
      <pubDate>Wed, 02 Jun 2021 12:41:51 +0000</pubDate>
      <link>https://dev.to/somanathgoudar/day-14-30-samsung-watch-clone-with-html-and-css-37nn</link>
      <guid>https://dev.to/somanathgoudar/day-14-30-samsung-watch-clone-with-html-and-css-37nn</guid>
      <description>&lt;p&gt;Welcome to Day 14 of this &lt;a href="https://dev.to/somanathgoudar/30dayschallenge-30-days-extreme-html-css-challenge-50k1"&gt;Challenge&lt;/a&gt;. This is what I created today. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;➜ Here is the Demo :&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OAmsqoGt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://1.bp.blogspot.com/-QkExAVHnUYM/YKinvizJJLI/AAAAAAAAAFE/tR9iYDrFnMMJ6uVicVjphT0HWtRlJS2qQCLcBGAsYHQ/s600/14.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OAmsqoGt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://1.bp.blogspot.com/-QkExAVHnUYM/YKinvizJJLI/AAAAAAAAAFE/tR9iYDrFnMMJ6uVicVjphT0HWtRlJS2qQCLcBGAsYHQ/s600/14.gif" alt="Samsung Watch Clone html css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;➜ Video Tutorial :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/LwPBMR97edA"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;strong&gt;➜ Source Code :&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.futurecodersweb.com/2021/06/samsung-watch-clone-with-html-and-css.html"&gt;https://www.futurecodersweb.com/2021/06/samsung-watch-clone-with-html-and-css.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;➜ Instagram Post and Reel for Day 14 :&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.instagram.com/future_coderss/"&gt;See Post and Reel&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Hey, If You don't know what is happening here. Don't Worry, I am doing a crazy challenge 😅. Read More about it from the post below.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/30dayschallenge-30-days-extreme-html-css-challenge-50k1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;🤯 30DaysChallenge - 30 Days Extreme HTML &amp;amp; CSS CHALLENGE 🤯&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar ・ May 19 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#frontend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#30daysofcode&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Support Me :&lt;/strong&gt;&lt;br&gt;
👉 Buy me a Coffee: &lt;a href="https://www.buymeacoffee.com/somanathgoudar"&gt;https://www.buymeacoffee.com/somanathgoudar&lt;/a&gt;&lt;br&gt;
👉 &lt;a href="https://www.instagram.com/somanath_goudar/"&gt;Follow Me on Instagram&lt;/a&gt;&lt;br&gt;
👉 &lt;a href="https://www.instagram.com/future_coderss/"&gt;Follow Future Coders on Instagram&lt;/a&gt;&lt;br&gt;
👉 &lt;a href="https://www.youtube.com/channel/UC_nTrhTr5fnBGjOxnkPUmmA"&gt;Subscribe to My Main Channel&lt;/a&gt;&lt;br&gt;
👉 &lt;a href="https://www.youtube.com/channel/UCzGSyMOf2jPt1MkNBB3SJ3g"&gt;Subscribe to Channel Created for this Challenge&lt;/a&gt;&lt;/p&gt;




</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Project 74 of 100 - Multipart Form</title>
      <author>James Hubert</author>
      <pubDate>Wed, 02 Jun 2021 12:37:05 +0000</pubDate>
      <link>https://dev.to/jwhubert91/project-74-of-100-multipart-form-1ifk</link>
      <guid>https://dev.to/jwhubert91/project-74-of-100-multipart-form-1ifk</guid>
      <description>&lt;p&gt;&lt;em&gt;Hey! I'm on a mission to make 100 React.js projects. Please follow my dev.to profile or my &lt;a href="https://www.twitter.com/jwhubert91"&gt;twitter&lt;/a&gt; for updates and feel free to reach out if you have questions. Thanks for your support!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Link to today's deployed app: &lt;a href="https://100-react-projects-day-74-multipart-form.netlify.app/"&gt;Link&lt;/a&gt;&lt;br&gt;
Link to the repo: &lt;a href="https://github.com/jwhubert91/100daysofreact/tree/master/day-74-multipart-form"&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was looking for a short project a week ago to continue my 100 projects list and came across a 20 minute Youtube tutorial that was mailed out as a part of the weekly FreeCodeCamp.org email &lt;a href="https://www.youtube.com/watch?v=dybbUOmtd0Y&amp;amp;feature=youtu.be"&gt;link here&lt;/a&gt;. Of course buyer beware, anyone who promises you'll implement a feature in a short Youtube tutorial probably isn't helping build the entire project, and the video ends mostly handling data with pseudocode.&lt;/p&gt;

&lt;p&gt;So last weekend I tried to implement this with the Context API, and then found it was so simple it wasn't even worth using Context, and instead just kept state and app-wide functions in the &lt;code&gt;App&lt;/code&gt; component. Of course a real application wouldn't function so simply.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#basic-structure"&gt;
  &lt;/a&gt;
  Basic Structure
&lt;/h2&gt;

&lt;p&gt;The basic structure of the application places all importance on the &lt;code&gt;App&lt;/code&gt; component. It didn't have to be App, it could have been a page component several layers deep, but the point is it's a parent component and the multiple steps in the form are handled simply as child components one level down.&lt;/p&gt;

&lt;p&gt;Here is the JSX:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;multi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;part&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://twitter.com/jwhubert91&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;jwhubert91&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main-form&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;FormPage&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleButtonClick&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;buttonText&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the App component I wanted to share a button between all pages so I kept it here in the parent component.&lt;/p&gt;

&lt;p&gt;The child component was so simple that I knew what props I needed to pass down even before creating it. It would be a simple div where some logic would render a different input to the user depending on the page. I then pass down the data state variable and the setData handler so that we can build controlled inputs in the child components using state from the parent component.&lt;/p&gt;

&lt;p&gt;Then I added state variables and handlers to the &lt;code&gt;App&lt;/code&gt; component, above the JSX:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;setPage&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;spam&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleButtonClick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevPage&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;prevPage&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buttonText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;edit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(...)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we simply handle the button text and the page number as the user clicks through the form.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#child-form-component"&gt;
  &lt;/a&gt;
  Child Form Component
&lt;/h2&gt;

&lt;p&gt;Now, in the child component we need to render different code depending on what page is being passed through to props. Here I just extended what the method that was taught in the otherwise not very useful Youtube video above. We use conditional rendering by &lt;a href="https://codeburst.io/javascript-short-circuit-conditionals-bbc13ac3e9eb"&gt;short circuiting&lt;/a&gt; the &amp;amp;&amp;amp;. &lt;/p&gt;

&lt;p&gt;We can simply do this multiple times in a row and render whatever is called for by the page number. Pretty simple, I know, but it works well for this use case.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;FormPage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; 
          &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
          &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevData&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;prevData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
          &lt;span class="p"&gt;}))}&lt;/span&gt;
        &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; 
          &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
          &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevData&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;prevData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
          &lt;span class="p"&gt;}))}&lt;/span&gt;
        &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; 
          &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
          &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Favorite color&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevData&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;prevData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
          &lt;span class="p"&gt;}))}&lt;/span&gt;
        &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Do&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;spam&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; 
                &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;checkbox&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
                &lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spam&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevData&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
                  &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;prevData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="na"&gt;spam&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;
                &lt;span class="p"&gt;}))}&lt;/span&gt;
            &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;results&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&amp;gt; {data.email}&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&amp;gt; {data.username}&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;favorite&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&amp;gt; {data.color}&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;spam&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&amp;gt; {data.spam &lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt; "Yes" : "No"}&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;FormPage&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the last page, we simply render all of the user data like in a User Profile screen and ask the user if they want to edit, which takes them back to page 0.&lt;/p&gt;

&lt;p&gt;That's it! Do you have a favorite way to implement multi-step forms, maybe using Context or Redux? Or even saving to the back-end with each step? Drop a comment below :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you like projects like this and want to stay up to date with more, check out my Twitter &lt;a href="https://twitter.com/jwhubert91"&gt;@jwhubert91&lt;/a&gt;, I follow back! See you tomorrow for another project.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>What is JavaScript Used For and How to Run It</title>
      <author>Coderslang: Become a Software Engineer</author>
      <pubDate>Wed, 02 Jun 2021 12:29:03 +0000</pubDate>
      <link>https://dev.to/coderslang/what-is-javascript-used-for-and-how-to-run-it-3c25</link>
      <guid>https://dev.to/coderslang/what-is-javascript-used-for-and-how-to-run-it-3c25</guid>
      <description>&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; is the de facto language to create web apps as it is the only language supported by browsers. Over time, &lt;strong&gt;JavaScript&lt;/strong&gt; has evolved from only a programming language for the web to a &lt;strong&gt;Cross-Platform Object-Oriented Programming Language&lt;/strong&gt;, that is, a programming language supported by multiple &lt;strong&gt;Operating Systems&lt;/strong&gt; and it follows the &lt;em&gt;Object-Oriented Programming&lt;/em&gt; paradigm, where everything is an &lt;em&gt;object&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-run-javascript-code"&gt;
  &lt;/a&gt;
  How to run &lt;strong&gt;JavaScript&lt;/strong&gt; code?
&lt;/h2&gt;

&lt;p&gt;If you want to use &lt;strong&gt;JavaScript&lt;/strong&gt; only for &lt;strong&gt;Web Development&lt;/strong&gt;, any modern browser would suffice for this purpose. All modern browsers support &lt;strong&gt;JavaScript&lt;/strong&gt; and you will be able to execute the scripts linked in your &lt;strong&gt;HTML&lt;/strong&gt; code like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script src="./script.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to unlock the full capabilities of &lt;strong&gt;JavaScript&lt;/strong&gt; and use it as a programming language, you will have to install &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;. After installing &lt;strong&gt;node&lt;/strong&gt; use the following command to check if it has been installed correctly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ node -v
v14.15.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your version might be different, but as long as you don’t get an error, you are good to go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basics-of-javascript"&gt;
  &lt;/a&gt;
  Basics of &lt;strong&gt;JavaScript&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Let’s go through the basics of &lt;strong&gt;JavaScript&lt;/strong&gt;. Since &lt;strong&gt;JavaScript&lt;/strong&gt; is a weakly typed language, the data types are not important as you can use the same variable to store different data types in different parts of the script.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-types"&gt;
  &lt;/a&gt;
  Data Types
&lt;/h3&gt;

&lt;p&gt;Even though &lt;strong&gt;JavaScript&lt;/strong&gt; doesn't have strict data type binding, you should be aware of the data types available in &lt;strong&gt;JavaScript&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;String&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Strings is the data type used to store text values. To define a string, use single or double-quotes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stringVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Some String&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also use backtick for multi-line string or string template, where the data is passed on to the string between dollar symbol and curly braces.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;multiLineStringVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
This is a
Multi-line string.
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stringTemplateVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`String Templating: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;multiLineStringVariable&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Number&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unlike most programming languages, &lt;strong&gt;JavaScript&lt;/strong&gt; does not support different data types for &lt;code&gt;integer&lt;/code&gt; and &lt;code&gt;float&lt;/code&gt;. Numbers can be used to store both whole numbers and fractional numbers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wholeNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fractionalNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Boolean&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Booleans can be used to store truth values, that is, true or false.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Undefined&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Undefined is used to define a value that has not been defined yet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, since the variable has not been initialized, its value is undefined.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Null&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Null is used to define where the is no value at all.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;variable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conditionals"&gt;
  &lt;/a&gt;
  Conditionals
&lt;/h3&gt;

&lt;p&gt;You can execute parts of the code only when a certain condition is met.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;shouldLog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shouldLog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Logging changes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we log only when &lt;code&gt;shouldLog&lt;/code&gt; is true.&lt;/p&gt;

&lt;p&gt;You can also use comparison operators and logical operators for complex conditions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Comparison Operators&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's consider &lt;code&gt;x = 5&lt;/code&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Comparing&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;===&lt;/td&gt;
&lt;td&gt;equal value and equal type&lt;/td&gt;
&lt;td&gt;x === 5&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!==&lt;/td&gt;
&lt;td&gt;not equal value or not equal type&lt;/td&gt;
&lt;td&gt;x !== 5&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;greater than&lt;/td&gt;
&lt;td&gt;x &amp;gt; 8&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;less than&lt;/td&gt;
&lt;td&gt;x &amp;lt; 8&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;=&lt;/td&gt;
&lt;td&gt;greater than or equal to&lt;/td&gt;
&lt;td&gt;x &amp;gt;= 8&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=&lt;/td&gt;
&lt;td&gt;less than or equal to&lt;/td&gt;
&lt;td&gt;x &amp;lt;= 8&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; operators are also supported, but using them is not suggested as they lead to unexpected results like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kc"&gt;true&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="kc"&gt;true&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="kc"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Logical Operators&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's consider &lt;code&gt;x = 5&lt;/code&gt; and &lt;code&gt;y = 3&lt;/code&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;and&lt;/td&gt;
&lt;td&gt;(x &amp;lt; 10 &amp;amp;&amp;amp; y &amp;gt; 1)&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\&lt;/td&gt;
&lt;td&gt;\&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;or&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!&lt;/td&gt;
&lt;td&gt;not&lt;/td&gt;
&lt;td&gt;!(x == y)&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#arrays"&gt;
  &lt;/a&gt;
  Arrays
&lt;/h3&gt;

&lt;p&gt;If you want to store a collection of items in a variable, you can use &lt;strong&gt;Arrays&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numberArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// adding an element to the `numberArray`&lt;/span&gt;
&lt;span class="nx"&gt;numberArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// removing the last element from the `numberArray`&lt;/span&gt;
&lt;span class="nx"&gt;numberArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#loops"&gt;
  &lt;/a&gt;
  Loops
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; supports &lt;code&gt;for&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt; loops.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For Loop&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For loops are the go-to choice when you know the number of iterations for the loop.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numberArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;numberArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numberArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;While Loop&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While loops are effective when you don’t know how many iterations the loop will run for. It takes a condition and keeps on running till the condition is true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numberArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;itemCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numberArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;itemCount&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-var-endraw-vs-raw-let-endraw-vs-raw-const-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;var&lt;/code&gt; vs &lt;code&gt;let&lt;/code&gt; vs &lt;code&gt;const&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; allows you to define data items using &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt;, when to use which? &lt;code&gt;var&lt;/code&gt; creates a global variable, &lt;code&gt;let&lt;/code&gt; creates a variable with local scope, that is, it will live only inside the block it is defined in and &lt;code&gt;const&lt;/code&gt; is used to create a constant.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;globalVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I can be accessed throughout the script&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;constant&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I CANNOT be changed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;localVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I can only be used inside this if block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-javascript-in-the-browser"&gt;
  &lt;/a&gt;
  Using &lt;strong&gt;JavaScript&lt;/strong&gt; in the browser
&lt;/h2&gt;

&lt;p&gt;Using &lt;strong&gt;JavaScript&lt;/strong&gt; in the browser gives you access to the &lt;strong&gt;DOM&lt;/strong&gt;, or the Document Object Model, which enables you to manipulate the &lt;strong&gt;HTML&lt;/strong&gt; using &lt;strong&gt;JavaScript&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let’s say you have an input on your page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test-input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can get access to the input in your &lt;strong&gt;JavaScript&lt;/strong&gt; script and modify it to your desire or add event listeners to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test-input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// styling the element&lt;/span&gt;
&lt;span class="nx"&gt;inputElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;borderRadius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;6px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// adding event listener on element click&lt;/span&gt;
&lt;span class="nx"&gt;inputElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Input Element Clicked&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-javascript-with-nodejs"&gt;
  &lt;/a&gt;
  Using &lt;strong&gt;JavaScript&lt;/strong&gt; with &lt;strong&gt;Node.js&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;If you use &lt;strong&gt;JavaScript&lt;/strong&gt; with &lt;strong&gt;Node.js&lt;/strong&gt;, you cannot access the &lt;strong&gt;DOM&lt;/strong&gt; as it is created by the browser, but you will be able to access the &lt;strong&gt;file system&lt;/strong&gt;, something you cannot do while using &lt;strong&gt;JavaScript&lt;/strong&gt; from the browser.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filePath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;temp.txt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rawData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filePath&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rawData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run the script use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we learned the basics of &lt;strong&gt;JavaScript&lt;/strong&gt;, what it is and how to get started with using it. We also learned how to use it in the browser and locally as per our requirements. Now it’s your turn to use it in your project and turn your ideas into reality.&lt;/p&gt;

&lt;p&gt;Get my &lt;a href="https://learn.coderslang.com/free-ebooks/"&gt;free e-book&lt;/a&gt; to prepare for the technical interview or start to &lt;a href="https://js.coderslang.com"&gt;Learn Full-Stack JavaScript&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Best VS Code Shortcuts To Make Your Coding Faster</title>
      <author>Animesh Dhanuk</author>
      <pubDate>Wed, 02 Jun 2021 12:20:55 +0000</pubDate>
      <link>https://dev.to/animeshdhanuk/best-vs-code-shortcuts-to-make-your-coding-faster-2343</link>
      <guid>https://dev.to/animeshdhanuk/best-vs-code-shortcuts-to-make-your-coding-faster-2343</guid>
      <description>&lt;p&gt;As a programmer, developer, or coder you have to faster speed for coding. And Every programmer wants fast typing speed to complete the work as soon as possible. Even they don't waste a second of time after any unnecessary things.&lt;/p&gt;

&lt;p&gt;For programmers, coders, and developers, I'm giving some best VS Code shortcut keys to speed up coding faster.&lt;/p&gt;

&lt;p&gt;19 Best vscode shortcuts&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-combine-line-vscode-shortcut"&gt;
  &lt;/a&gt;
  1. Combine Line vscode shortcut
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jWiedWvx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75ue4hryn3a71dizjeqn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jWiedWvx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75ue4hryn3a71dizjeqn.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This Shortcut use to combine the line when lines are not in sequence as you want. That's one of the best vs code shortcut to make your coding faster. &lt;br&gt;
For Mac: ctrl + j&lt;br&gt;
For Windows and Ubuntu: Open keyboard shortcuts from File &amp;gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-code-formate-vscode-shortcut"&gt;
  &lt;/a&gt;
  2. Code Formate vscode shortcut
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s----BtJrL4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50xgffpi2m1i5vxtircs.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s----BtJrL4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50xgffpi2m1i5vxtircs.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The priority of the programmer, developer, and coder is formatting a code in sequence to easily understand. And it's looking good for reading. So, this is one of the useful vs code shortcuts to make your coding faster.&lt;br&gt;&lt;br&gt;
For Mac: Shift + Option + F &lt;br&gt;
For Windows: Shift + Alt + F &lt;br&gt;
For Mac: Shift + Option + F&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-remove-white-space-vscode-shortcut"&gt;
  &lt;/a&gt;
  3. Remove White Space vscode shortcut
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tx4o6NcT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilqtgl0xb5ve4m6y674y.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tx4o6NcT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilqtgl0xb5ve4m6y674y.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we do coding unnecessary space creates it's a very irritable thing. There is a shortcut key available to remove unnecessary space from code. And this is a very useful vs code shortcut to make the coding speed faster.&lt;br&gt;
Open VS Code settings(Preferences &amp;gt; Settings &amp;gt; User Settings tab) and click the {} icon and add new setting("files.trimTrailingWhitespace": true) most of time it &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-code-folding-vscode-shortcut"&gt;
  &lt;/a&gt;
  4. Code Folding vscode shortcut
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PbDZ7K2U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9e340bh3qyrlfbqgdv5d.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PbDZ7K2U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9e340bh3qyrlfbqgdv5d.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Sometimes there is very huge code created by developers, so make it readable they can do cod folding to easily read and understand it. Code folding vs code shortcut key is the best key to make coding faster for developers, programmers, and coders.&lt;br&gt;
For Mac: Command+ Option + [ or ] &lt;br&gt;
For Mac: Command+ Option + [ or ]&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-copy-line-updown-vscode-shortcut"&gt;
  &lt;/a&gt;
  5. Copy Line Up/Down vscode shortcut
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VPTPjFbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9pagryd0hp5riu75zig.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VPTPjFbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9pagryd0hp5riu75zig.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is a lot of syntax in coding that is the same. You can't type it many times when it's long. Then you can copy it from where above you can use it that's the only way to do your work fast. This is one of the best vs code shortcuts to make your coding faster.&lt;br&gt;
For Mac: Shift + Option + Up/Down &lt;br&gt;
For Windows: Shift + Alt + Up/Down &lt;br&gt;
For Ubuntu: Ctrl + Shift + Alt + Up/Down&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-split-editor-layout-vscode-shortcut"&gt;
  &lt;/a&gt;
  6. Split Editor Layout vscode shortcut
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T2NaThOh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kce3k21uuud55t3jkbee.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T2NaThOh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kce3k21uuud55t3jkbee.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This tool allows you to open multiple screens at a time in VS code editor. With the help of this tool, you can solve any problem from one screen to another one. That's one of the best vs code shortcuts to make your coding faster. &lt;br&gt;
For Mac: Command + \ &lt;br&gt;
For  Windows: Shift + Alt + \ &lt;br&gt;
For Ubuntu: Shift + Alt + \&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-all-vscode-shortcuts-from-here"&gt;
  &lt;/a&gt;
  &lt;a href="https://cmsinstallation.blogspot.com/2021/06/best-vs-code-shortcuts-to-make-your.html"&gt;Get all vscode shortcuts from here&lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>vscode</category>
      <category>php</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Awesome custom right click options. Pure CSS and JS</title>
      <author>Techy Programmers</author>
      <pubDate>Wed, 02 Jun 2021 11:51:21 +0000</pubDate>
      <link>https://dev.to/kunaal438/how-to-make-custom-right-click-options-pure-css-and-js-53e8</link>
      <guid>https://dev.to/kunaal438/how-to-make-custom-right-click-options-pure-css-and-js-53e8</guid>
      <description>&lt;p&gt;Hello, glad you are here. I am kunaal and today we will see how to make our own custom right click options. You can see demo below.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kunaal_kumar/embed/LYWQWRW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial-"&gt;
  &lt;/a&gt;
  Video Tutorial -
&lt;/h1&gt;

&lt;p&gt;If you find this article hard or for better explanation. You can watch video tutorial.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Mi815PrcWQc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you like the video tutorial. Please consider subscribing my youtube channel.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#lets-code"&gt;
  &lt;/a&gt;
  Let's code
&lt;/h1&gt;

&lt;p&gt;Inside HTML file under &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag write&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;h1 class="text"&amp;gt;right click&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"options"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;pages&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link-item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link-item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;projects&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link-item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;about us&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link-item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;contact us&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CSS&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffa462&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;roboto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;place-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;250px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.25&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;user-select&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;word-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;break-word&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.options&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;250px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ebebeb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#f0efef&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="py"&gt;user-select&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.title&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#565656&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.options&lt;/span&gt; &lt;span class="nt"&gt;hr&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.link-item&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;list-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.link&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#969696&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.link&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And last little bit of JS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.options&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oncontextmenu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onclick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you understood everything. If you have any doubt or you find any mistake that I made or you have any suggestion feel free to ask me in comment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are interested in programming and want to know how I a 15yr old teen do coding make these design. You can follow me on my Instagram. I am also planning to post my game development stuff on Instagram.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/kunaal438/custom-right-click"&gt;Source Code&lt;/a&gt;&lt;a href="https://www.youtube.com/c/TechyProgrammers/"&gt;My youtube Channel&lt;/a&gt;, &lt;a href="https://www.instagram.com/techy_programmers/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Architecture options for building a basic Data Lake on AWS - Part 1</title>
      <author>Joël FARVAULT</author>
      <pubDate>Wed, 02 Jun 2021 11:21:53 +0000</pubDate>
      <link>https://dev.to/aws-builders/architecture-options-for-building-a-basic-data-lake-on-aws-part-1-18hc</link>
      <guid>https://dev.to/aws-builders/architecture-options-for-building-a-basic-data-lake-on-aws-part-1-18hc</guid>
      <description>&lt;p&gt;This article is a result of a chat discussion with &lt;a class="mentioned-user" href="https://dev.to/aditmodi"&gt;@aditmodi&lt;/a&gt;
, Willian ‘Bill’ Rocha, Kevin Peng, Rich Dudley, Patrick Orwat and Welly Tambunan. Any other contributors are welcome 😊&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;data lake&lt;/strong&gt; is the key foundation of data analytics. The data lake is the central repository that can store both structured data (such as tabular or relational data), semi-structured (key/value or document) and unstructured data (such as pictures or audio). &lt;br&gt;
The data lake is scalable and provides the following functionalities:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;all data stored in a single place with a low-cost model&lt;/li&gt;
&lt;li&gt;variety of data formats can be stored&lt;/li&gt;
&lt;li&gt;a fast data ingestion and consumption&lt;/li&gt;
&lt;li&gt;schema on read versus the traditional schema on write&lt;/li&gt;
&lt;li&gt;decoupling between storage and compute&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Building a data lake implies to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;setup the right storage (and the corresponding lifecycle management)&lt;/li&gt;
&lt;li&gt;define the solution for data movement&lt;/li&gt;
&lt;li&gt;clean, catalog and prepare the data&lt;/li&gt;
&lt;li&gt;configure policies and a governance &lt;/li&gt;
&lt;li&gt;make data available for visualization &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The data lake is very powerful solution for big data but there are some limitations: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data management is challenging with data lakes because they store data as a “bunch of files” of different format&lt;/li&gt;
&lt;li&gt;managing ACID transactions or rollback requires to write a specific ETL/ELT logic&lt;/li&gt;
&lt;li&gt;query performance implies to select wisely the data format (such as Parquet or ORC)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A first alternative is the &lt;strong&gt;lakehouse&lt;/strong&gt; architecture which bring the best of 2 worlds: data lake (low cost object store) and datawarehouse (transactions and data management). The lakehouse provides a metadata layer on top of the data lake (or object) storage that defines which objects are part of a table version. The lakehouse allows to manage ACID transactions through the metadata layer while keeping the data stored in the low cost data lake storage.&lt;/p&gt;

&lt;p&gt;Another alternative that fits well in a complex and distributed environments is the &lt;strong&gt;data mesh&lt;/strong&gt; architecture. Unlike a “monolithic” central data lake which handle in one place consumption, storage and transformation, a data mesh architecture supports distributed, domain-specific data consumers and views “data-as-a-product,” with each domain handling their own data pipelines. &lt;br&gt;
The domains are all connected through an interoperability layer that applies the same syntax and data standards. The data mesh architecture is based on few principles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Domain-oriented data owners and pipelines&lt;/li&gt;
&lt;li&gt;Self-serve functionality&lt;/li&gt;
&lt;li&gt;Interoperability and standardization of communications
This decentralized architecture brings more autonomy and flexibility. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each data architecture model has benefits and shortcomings, there is no good and bad approach, it depends on the context and the use cases. Let’s evaluate how these data architecture patterns can be applied using a concrete example.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements-for-a-data-platform"&gt;
  &lt;/a&gt;
  Requirements for a data platform
&lt;/h2&gt;

&lt;p&gt;Your company needs a data repository with the following expectations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ingest data manually or from data pipelines&lt;/li&gt;
&lt;li&gt;produce ML models, QuickSight dashboard or external API with the output data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What is the best AWS architecture for these requirements? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-lake-architecture"&gt;
  &lt;/a&gt;
  Data Lake architecture
&lt;/h2&gt;

&lt;p&gt;The diagram below presents a first solution for the requirements.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J0WUVtMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrb03c9vokczn5mok98m.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J0WUVtMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrb03c9vokczn5mok98m.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The AWS data lake architecture is based on several components:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. The data ingestion / collection&lt;/strong&gt; enables to connect different data sources through batch or real time modes.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Services&lt;/th&gt;
&lt;th&gt;Usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://aws.amazon.com/dms/"&gt;AWS Data Migration Services&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;one-time migration of a database (cloud or on-premise) and replicate on-going changes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://aws.amazon.com/aws-transfer-family/"&gt;AWS Transfer Family&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;transfer of data over SFTP ➡️ &lt;a href="https://dev.to/aws-builders/aws-transfer-family-ftp-for-efs-and-s3-32e5"&gt;article dev.to&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://aws.amazon.com/kinesis/data-firehose/"&gt;Kinesis Firehose&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;fully managed delivering of real-time streaming data to Amazon S3 ➡️ &lt;a href="https://dev.to/aws-builders/event-streaming-and-aws-kinesis-4877"&gt;article dev.to&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;serverless and event based data integration&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2. The data storage&lt;/strong&gt; enables to hold massive amount of data in raw format. That’s the core of the data lake. The best storage service for this purpose is &lt;a href="https://aws.amazon.com/s3/"&gt;Amazon S3&lt;/a&gt;. &lt;br&gt;
As highlighted in the diagram the best approach is to create specific buckets for landing zone, raw data and cleaned data. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. The data cleaning and preparation&lt;/strong&gt; implies to partition, index, catalog and transform data (especially into a columnar format for performance optimization). The data catalog will be automatically created or updated through a crawler that extracts the schemas and adds metadata tags in the catalog. The AWS options are AWS Glue or Glue DataBrew. &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Services&lt;/th&gt;
&lt;th&gt;Usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://aws.amazon.com/glue/"&gt;AWS Glue&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ETL/ELT that can extract both data and metadata to build catalogs and perform transformations. You can either use the UI or author your scripts in Python, Spark and Scala&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://aws.amazon.com/glue/features/databrew/"&gt;AWS Glue DataBrew&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;is a visual data prep tool that enables to profile, transform, clean and normalize data&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;You can also use other ETL tools such as &lt;a href="https://www.amundsen.io/"&gt;Amundsen&lt;/a&gt; for an intuitive UI and business data cataloguing. The solution &lt;a href="https://www.talend.com/"&gt;Talend&lt;/a&gt; can be also an option.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. The data processing and analytics&lt;/strong&gt; is the process that creates insights from data (following the rule « garbage in garbage out » it is recommended to use cleaned data to get the best insights). The data will be structured and analyzed to identify information or to support decision-making. &lt;br&gt;
The data processing can be done through &lt;strong&gt;batch mode&lt;/strong&gt;, &lt;strong&gt;interactive analysis&lt;/strong&gt;, &lt;strong&gt;streaming&lt;/strong&gt; or &lt;strong&gt;machine learning&lt;/strong&gt;.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Batch mode&lt;/th&gt;
&lt;th&gt;Services&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Querying or processing large amount of data on a regular frequency (daily, weekly or monthly)&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://aws.amazon.com/glue/"&gt;AWS Glue&lt;/a&gt; - &lt;a href="https://aws.amazon.com/emr/"&gt;EMR&lt;/a&gt; - &lt;a href="https://aws.amazon.com/redshift/"&gt;Redshift&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Interactive analysis&lt;/th&gt;
&lt;th&gt;Services&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ad hoc querying for data exploration and analysis&lt;/td&gt;
&lt;td&gt;&lt;a href="https://aws.amazon.com/athena/"&gt;Athena&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Streaming&lt;/th&gt;
&lt;th&gt;Services&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ingest and analyze a sequence of data continuously generated in high volume and/or high velocity&lt;/td&gt;
&lt;td&gt;&lt;a href="https://aws.amazon.com/kinesis/data-analytics/"&gt;Kinesis Data Analytics&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Machine Learning&lt;/th&gt;
&lt;th&gt;Services&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Perform on-demand data computation using inference endpoints&lt;/td&gt;
&lt;td&gt;Sagemaker Inferences ➡️ &lt;a href="https://dev.to/aws-builders/automate-sagemaker-machine-learning-inference-pipeline-in-a-serverless-way-bpk"&gt;article dev.to&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Based on the data lake requirements, the first approach for the data analytics &amp;amp; processing leverages the following AWS services:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D5ihPnL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnbp7ns2s6s2vsu2tp5i.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D5ihPnL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnbp7ns2s6s2vsu2tp5i.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Athena&lt;/strong&gt; for interactive analysis. Athena is a serverless querying service (based on Apache Presto) that enables to build SQL queries against relational or non-relational data stored in Amazon S3 (even outside S3 with Athena Federated Query). Athena is adapted for use cases such as: ad hoc queries, data exploration or integration with BI tools.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sagemaker Inferences&lt;/strong&gt; for machine learning. That service allows to execute ML models deployed through Sagemaker Endpoints.&lt;/p&gt;

&lt;p&gt;This architecture provides also the possibility to expose some data through &lt;strong&gt;API Gateway&lt;/strong&gt; using &lt;strong&gt;Lambda&lt;/strong&gt; function and Athena.  &lt;/p&gt;

&lt;p&gt;Another option for the data lake architecture is to use &lt;strong&gt;Redshift&lt;/strong&gt; as a curated datawarehouse. This approach will be described in the &lt;em&gt;part 2 “the lakehouse architecture”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. data visualization&lt;/strong&gt; is the tool that provides a view of the data for your data consumers. The purpose of &lt;a href="https://aws.amazon.com/quicksight/"&gt;Amazon QuickSight&lt;/a&gt; is to empower your data consumers (especially the business users) for building their visualization. QuickSight is powered by SPICE (Super-Fast, Parallel, In-Memory Calculation Engine) and provides the possibility to build easily dashboards and share it with other users. &lt;br&gt;
As highlighted in the proposed architecture, QuickSight is integrated with Athena but it can be integrated with other data sources.&lt;/p&gt;




&lt;p&gt;This article provides only an high level view of the topic, for more information I recommend these very useful dev.to posts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dev.to/aws-builders/aws-data-lake-with-terraform-part-1-of-6-4bf1"&gt;Building a data lake with Terraform&lt;/a&gt; by &lt;a class="mentioned-user" href="https://dev.to/valaug"&gt;@valaug&lt;/a&gt;
 &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/awscommunity-asean/introduction-to-the-aws-big-data-portfolio-2539"&gt;Presentation of the Big Data Portfolio&lt;/a&gt; by &lt;a class="mentioned-user" href="https://dev.to/klescosia"&gt;@klescosia&lt;/a&gt;
 &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>analytics</category>
      <category>database</category>
      <category>architecture</category>
    </item>
    <item>
      <title>ASP.NET Core request logging middleware</title>
      <author>Thomas Ardal</author>
      <pubDate>Wed, 02 Jun 2021 10:38:47 +0000</pubDate>
      <link>https://dev.to/thomasardal/asp-net-core-request-logging-middleware-3ci0</link>
      <guid>https://dev.to/thomasardal/asp-net-core-request-logging-middleware-3ci0</guid>
      <description>&lt;p&gt;I needed to debug an error logged through Microsoft.Extensions.Logging (MEL) on one of our ASP.NET Core-based services today. Usually, when getting errors logged through MEL, all of the HTTP context data is logged as part of the error, making it easy to spot why an error happened or at least making it a lot easier recreating the error. Today's error didn't include much more information than an error message and a request-id.&lt;/p&gt;

&lt;p&gt;To help debug what is turning sideways, I created a quick request logging feature in ASP.NET Core. There are multiple posts on the subject already, but while most of them are really good posts, they often cover too much for my simple use case or leave out essential information about how to create the configuration. I simply want a log message for each request, with as little information as possible, but enough for me to be able to correlate the generated error with an HTTP request.&lt;/p&gt;

&lt;p&gt;To log a message on every web request, start by creating a new class named &lt;code&gt;RequestLoggingMiddleware&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RequestLoggingMiddleware&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the following locals:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;RequestDelegate&lt;/span&gt; &lt;span class="n"&gt;_next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;ILogger&lt;/span&gt; &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'll explain what these are and what they are used for in a bit. Create a constructor on the class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;RequestLoggingMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RequestDelegate&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ILoggerFactory&lt;/span&gt; &lt;span class="n"&gt;loggerFactory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;_next&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;_logger&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;loggerFactory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateLogger&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;RequestLoggingMiddleware&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I set the &lt;code&gt;RequestDelegate&lt;/code&gt; local added in the previous step and create a new MEL &lt;code&gt;ILogger&lt;/code&gt; for my middleware class.&lt;/p&gt;

&lt;p&gt;Finally, add a new &lt;code&gt;Invoke&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;Invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nf"&gt;_next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;finally&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;LogInformation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;"Request {method} {url} =&amp;gt; {statusCode}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="n"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="n"&gt;StatusCode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is where the magic happens. The method invokes the next piece of ASP.NET Core middleware and logs an information message with the HTTP method, URL and status code. To avoid repeating myself, check out &lt;a href="https://blog.elmah.io/error-logging-middleware-in-aspnetcore/"&gt;Error Logging Middleware&lt;/a&gt; for a detailed explanation of how ASP.NET Core middleware works.&lt;/p&gt;

&lt;p&gt;Here's the source for the entire class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.AspNetCore.Http&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.Extensions.Logging&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;My.Service.Logging&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RequestLoggingMiddleware&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;RequestDelegate&lt;/span&gt; &lt;span class="n"&gt;_next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;ILogger&lt;/span&gt; &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;RequestLoggingMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RequestDelegate&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ILoggerFactory&lt;/span&gt; &lt;span class="n"&gt;loggerFactory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_next&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_logger&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;loggerFactory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateLogger&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;RequestLoggingMiddleware&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;Invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nf"&gt;_next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;finally&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;LogInformation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="s"&gt;"Request {method} {url} =&amp;gt; {statusCode}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="n"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="n"&gt;StatusCode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The only missing part now is configuring the middleware. You'd normally create an extension method to help, but in this case I'm taking the easy path and call the &lt;code&gt;UseMiddleware&lt;/code&gt; method directly in my &lt;code&gt;Startup.cs&lt;/code&gt; class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IApplicationBuilder&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IHostingEnvironment&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseMiddleware&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;RequestLoggingMiddleware&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it. Every request now generates a log message in the configured log. In my case, I'm logging to elmah.io. I'm using the &lt;a href="https://www.nuget.org/packages/Elmah.Io.Extensions.Logging/"&gt;Elmah.Io.Extensions.Logging&lt;/a&gt; NuGet package to do the actual logging and the &lt;a href="https://www.nuget.org/packages/Elmah.Io.AspNetCore.ExtensionsLogging/"&gt;Elmah.Io.AspNetCore.ExtensionsLogging&lt;/a&gt; package to decorate all log messages with HTTP contextual information.&lt;/p&gt;

&lt;p&gt;I normally don't log information messages from production, since ASP.NET Core generates a lot of info messages out of the box. In this example, I want to log all &lt;code&gt;Warning&lt;/code&gt;, &lt;code&gt;Error&lt;/code&gt;, and &lt;code&gt;Fatal&lt;/code&gt; messages, but also the new &lt;code&gt;Information&lt;/code&gt; messages generated from the new middleware class. This can be set up by including the following config in &lt;code&gt;appsettings.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Logging"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ElmahIo"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"LogLevel"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"Default"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Warning"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"My.Service.Logging"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Information"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the &lt;code&gt;Logging&lt;/code&gt; section, I've included an &lt;code&gt;ElmahIo&lt;/code&gt; section. If you are using &lt;code&gt;Console&lt;/code&gt; or another logger, you will need to replace the section name with the correct one. By including a &lt;code&gt;Default&lt;/code&gt; log level and setting the value to &lt;code&gt;Warning&lt;/code&gt;, I make sure that only &lt;code&gt;Warning&lt;/code&gt; messages and up are logged. For the specific namespace &lt;code&gt;My.Service.Logging&lt;/code&gt; I also allow &lt;code&gt;Information&lt;/code&gt; messages.&lt;/p&gt;

&lt;p&gt;To use the configuration from the &lt;code&gt;Logging&lt;/code&gt; section, call the &lt;code&gt;AddConfiguration&lt;/code&gt; method as part of your logging initialization in the &lt;code&gt;Program.cs&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;IWebHostBuilder&lt;/span&gt; &lt;span class="nf"&gt;CreateWebHostBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;WebHost&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CreateDefaultBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseStartup&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Startup&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ConfigureLogging&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddConfiguration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Configuration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetSection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Logging"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Everything is done in less than 30 minutes and ready to go to production. Here's an example of a log message stored in &lt;a href="https://elmah.io"&gt;elmah.io&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P7wJex3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.elmah.io/content/images/2020/01/request-logging.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P7wJex3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.elmah.io/content/images/2020/01/request-logging.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are using another logger, the view will be different but you will be able to see all of the same information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#would-your-users-appreciate-fewer-errors"&gt;
  &lt;/a&gt;
  Would your users appreciate fewer errors?
&lt;/h2&gt;

&lt;p&gt;elmah.io is the easy error logging and uptime monitoring service for .NET. Take back control of your errors with support for all .NET web and logging frameworks.&lt;/p&gt;

&lt;p&gt;➡️ &lt;a href="https://elmah.io/?utm_source=devto&amp;amp;utm_medium=social&amp;amp;utm_campaign=devtoposts"&gt;Error Monitoring for .NET Web Applications&lt;/a&gt; ⬅️&lt;/p&gt;

&lt;p&gt;This article first appeared on the elmah.io blog at &lt;a href="https://blog.elmah.io/asp-net-core-request-logging-middleware/"&gt;https://blog.elmah.io/asp-net-core-request-logging-middleware/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>csharp</category>
      <category>aspnetcore</category>
    </item>
    <item>
      <title>An Irish Hackerspace looking for a new home</title>
      <author>whykay 👩🏻‍💻🐈🏳️‍🌈 (she/her)</author>
      <pubDate>Wed, 02 Jun 2021 10:29:39 +0000</pubDate>
      <link>https://dev.to/whykay/an-irish-hackerspace-looking-for-a-new-home-f4m</link>
      <guid>https://dev.to/whykay/an-irish-hackerspace-looking-for-a-new-home-f4m</guid>
      <description>&lt;p&gt;Hackerspaces in Ireland are far and few, and some were lost during the passage of time.&lt;/p&gt;

&lt;p&gt;We still have &lt;a href="https://www.meetup.com/091-Labs/"&gt;091 Labs&lt;/a&gt; in Galway, &lt;a href="https://www.southeastmakerspace.org/"&gt;South East Maker Space&lt;/a&gt; to name a couple here in the Republic of Ireland. &lt;/p&gt;

&lt;p&gt;ℹ️ If you are curious, here's a list of Hacker/Makerspaces around the world: &lt;a href="https://hackaday.io/hackerspaces"&gt;https://hackaday.io/hackerspaces&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The longest running one (I am pretty sure) is &lt;a href="https://tog.ie"&gt;TOG Dublin Hackerspace&lt;/a&gt;. And bad news has beset them of late, they are looking for a new home, and this will be the fourth time they will be moving. 😢&lt;/p&gt;

&lt;p&gt;🌈 I'm not a member, but I know folks there and they have hosted some of my past events like my &lt;a href="https://dublin-pi-jam.github.io/"&gt;Dublin Raspberry Pi Jams&lt;/a&gt; and I have bumped into them or collaborated with them at various events like &lt;a href="https://coolestprojects.org/"&gt;Coolest Projects&lt;/a&gt; in the past. &lt;/p&gt;

&lt;p&gt;😓 I have been on and off pointing various locations and even an estate agent friend to help them, but it's soooooo expensive in Dublin City, and warehouses are being gobbled up by developers to build more shiney offices, or apartments, student accommodations or hotels (or all, who knows, all I know they are driving many creatives and indies from the city 🤬). &lt;/p&gt;

&lt;p&gt;🙇 So any help would be appreciated, and thank you in advance. 🥰&lt;/p&gt;




&lt;p&gt;This is from their &lt;a href="https://www.tog.ie/2021/06/help-tog-find-a-new-home/"&gt;blog post&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#help-tog-find-a-new-home"&gt;
  &lt;/a&gt;
  Help TOG find a new home!
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PTipf5cR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdf5vbc9etxcrj23804n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PTipf5cR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdf5vbc9etxcrj23804n.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have been given notice on our current home, TOG 3.0 at 22 Blackpitts, with &lt;strong&gt;31 July 2021&lt;/strong&gt; as our last day. Right now we have no new premises to move to, and with the current rental situation in Dublin, we need all the help we can get to find our new home!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-you-can-help-tog"&gt;
  &lt;/a&gt;
  How you can help TOG:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Do you know of an available building that could be TOG 4.0?&lt;/li&gt;
&lt;li&gt;Do you have contacts who could help us find that new home?&lt;/li&gt;
&lt;li&gt;Do you know of an organization that we could partner with on a space?&lt;/li&gt;
&lt;li&gt;Share this post/Forward this email to get the word out!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#what-does-tog-40-need"&gt;
  &lt;/a&gt;
  What does TOG 4.0 need?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ideally light industrial/workshop space with facilities with potential for common room, kitchen, classroom etc&lt;/li&gt;
&lt;li&gt;At least 150sqm (?)&lt;/li&gt;
&lt;li&gt;Easy access via public transport or walking distance from&lt;/li&gt;
&lt;li&gt;Safe and accessible for our members and the wider community&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please get in touch with us via email &lt;a href="mailto:info@tog.ie"&gt;info@tog.ie&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-tog"&gt;
  &lt;/a&gt;
  What is TOG?
&lt;/h2&gt;

&lt;p&gt;We are a community hackerspace/makerspace located in Dublin City Centre founded in 2009. We are a place where people can go to make things in a supportive and creative atmosphere. Where people can go along and pick up a new skill or have access to equipment to make their project a reality. Most importantly it’s a community space.&lt;/p&gt;

&lt;p&gt;We are a non-profit, non-commercial group funded by our members. We are a very diverse group of makers with strong software, hardware and engineering skills as well as arts and design skills. In our Blackpitts space, we have the room, tools and equipment to work in all of these areas. We range in age from students to retired. We have members with decades of experience in work and industry. We also host and attend external events such as Hackathons, Dublin Maker events for Science Week, Engineers Week and a range of other STEM outreach events. A strong social, networking and ideas exchange scene is also part of our membership and the wider public. We are open to new members joining and we run regular weekly events for the public.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-does-this-mean-for-you"&gt;
  &lt;/a&gt;
  What does this mean for you?
&lt;/h2&gt;

&lt;p&gt;Right now we are reducing the amount of material in TOG 3.0 as much as possible.&lt;/p&gt;

&lt;p&gt;If you are a member, please remove all your items from TOG ASAP! All members’ personal materials must be removed from TOG by &lt;strong&gt;30 June 2021&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you are a former member and still have material in TOG get in touch with us ASAP and we can facilitate collection or disposal.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>hackerspace</category>
      <category>makerspace</category>
    </item>
    <item>
      <title>Understanding KNNs</title>
      <author>Nukala Suraj</author>
      <pubDate>Wed, 02 Jun 2021 10:22:55 +0000</pubDate>
      <link>https://dev.to/lucidmach/understanding-knns-3jkd</link>
      <guid>https://dev.to/lucidmach/understanding-knns-3jkd</guid>
      <description>&lt;p&gt;&lt;strong&gt;KNNs&lt;/strong&gt; or &lt;strong&gt;K Nearest Neighbors&lt;/strong&gt; is the &lt;em&gt;simplest Machine Learning algorithm&lt;/em&gt; and also quite consequently the &lt;em&gt;slowest&lt;/em&gt; too 😂&lt;/p&gt;

&lt;p&gt;Nonetheless It's definitely the &lt;em&gt;best algorithm&lt;/em&gt; to &lt;em&gt;start&lt;/em&gt; your &lt;em&gt;ML journey&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A Machine Learning algorithm can be used for:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Regression (predict based on past history)&lt;/li&gt;
&lt;li&gt;Classification (sort an event into it's types)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;KNN is an algorithm that can be used for both, however it's most commonly used for classification problems.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-basicsprerequisites"&gt;
  &lt;/a&gt;
  The Basics/Pre-Requisites
&lt;/h1&gt;

&lt;p&gt;If you've done pythagoras theorem before, that's really all you need to know to understand the algorithm and this algo's gonna be a cake walk for you.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aj7dmiDk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://stricklerwms.weebly.com/uploads/1/1/3/7/11371633/1310318.jpg%3F240" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aj7dmiDk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://stricklerwms.weebly.com/uploads/1/1/3/7/11371633/1310318.jpg%3F240" alt="Pythagoras Theorem"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-algorithm"&gt;
  &lt;/a&gt;
  The Algorithm
&lt;/h1&gt;

&lt;p&gt;Consider a graph of a few plotted points &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--diSl0hOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dslytics.files.wordpress.com/2017/11/knn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--diSl0hOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dslytics.files.wordpress.com/2017/11/knn.png" alt="Source: dslytics"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#classification-with-knn"&gt;
  &lt;/a&gt;
  Classification with KNN
&lt;/h2&gt;

&lt;p&gt;Let's say we need to find if the star falls under class A or class B.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-nearest-neighbors-in-knn"&gt;
  &lt;/a&gt;
  What is Nearest Neighbors in KNN
&lt;/h3&gt;

&lt;p&gt;The Nearest Neighbors would be the points that are closest to the Star.&lt;br&gt;
We find the distance of each point to the star and sort it in ascending order.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-k-in-knn"&gt;
  &lt;/a&gt;
  What is K in KNN
&lt;/h3&gt;

&lt;p&gt;The K refers to the X closest neighbors.&lt;br&gt;
so,&lt;br&gt;
for K=3, we would be consider top 3 nearest neighbors for classification &lt;br&gt;
for K=6, we would consider top 6 nearest neighbors for classification&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#choosing-k-for-knn"&gt;
  &lt;/a&gt;
  Choosing K for KNN
&lt;/h4&gt;

&lt;p&gt;For each value of K, The class may vary a lot so we need to choose an optimal(best) value&lt;/p&gt;

&lt;p&gt;There is no specific way to find the optimal value of K, but most-of-the time K tends to be very near to root of total no of points.&lt;/p&gt;

&lt;p&gt;So start with K=√n and play around by increasing or decreasing K until you are happy&lt;/p&gt;

&lt;p&gt;Here we have 10 total points, &lt;br&gt;
so K = √10 which is approximately 3 &lt;br&gt;
We &lt;strong&gt;&lt;em&gt;could&lt;/em&gt;&lt;/strong&gt; get the best result for K = 3&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-classifying"&gt;
  &lt;/a&gt;
  The Classifying
&lt;/h3&gt;

&lt;p&gt;Now that we have top K of the nearest neighbors, all we have to do is find the &lt;strong&gt;mode&lt;/strong&gt; of them.&lt;/p&gt;

&lt;p&gt;We find the class that has majority of points under it and viola, we classified the star.&lt;/p&gt;

&lt;p&gt;for K=3, since Yellow is the mode. The star falls under Class B&lt;br&gt;
for K=6, since Purple is the mode. The star falls under Class A&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#regression-with-knn"&gt;
  &lt;/a&gt;
  Regression with KNN
&lt;/h2&gt;

&lt;p&gt;We were able to find the class of the star.&lt;/p&gt;

&lt;p&gt;But what if each of the points had a value (say price)&lt;/p&gt;

&lt;p&gt;With Classification you found the class of the point, but you don't know the price of the point(let's say the points  represent cars).&lt;/p&gt;

&lt;p&gt;Regression almost exactly the same thing as Classification, except here we find the &lt;strong&gt;mean&lt;/strong&gt; of the top K nearest neighbors instead of the mode.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tFEBg8on--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.squarespace.com/static/549dcda5e4b0a47d0ae1db1e/54a06d6ee4b0d158ed95f696/54a06d6fe4b0d158ed960101/1325818909397/1000w/Arithmetic.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tFEBg8on--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.squarespace.com/static/549dcda5e4b0a47d0ae1db1e/54a06d6ee4b0d158ed95f696/54a06d6fe4b0d158ed960101/1325818909397/1000w/Arithmetic.png" alt="mean formula"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And there we have predicted both the class and value of an unknown data-point from a data-set&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing Thoughts
&lt;/h1&gt;

&lt;p&gt;This might not seem like ML, but this is a very commonly used ML algorithm.&lt;/p&gt;

&lt;p&gt;ML is really easy when you have a solid understanding of your MATH.&lt;/p&gt;

&lt;p&gt;Thanks for the read&lt;/p&gt;

&lt;p&gt;If You ❤️ This Article&lt;br&gt;
Stay Tuned&lt;br&gt;
@&lt;a href="https://twitter.com/LucidMach"&gt;twitter&lt;/a&gt;&lt;br&gt;
@&lt;a href="https://www.instagram.com/lucidmach/"&gt;instagram&lt;/a&gt;&lt;br&gt;
@&lt;a href="https://www.youtube.com/channel/UCeiqLNsKT95FGM8obq1GH4g"&gt;youtube&lt;/a&gt;  &lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>algorithms</category>
      <category>datascience</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Change your approach to accessibilty and get a better developer experience (and create more accessible 
websites)</title>
      <author>Eli H. Schei</author>
      <pubDate>Wed, 02 Jun 2021 10:17:34 +0000</pubDate>
      <link>https://dev.to/elischei/change-your-approach-to-accessibilty-and-get-a-better-developer-experience-and-create-more-accessible-websites-b6b</link>
      <guid>https://dev.to/elischei/change-your-approach-to-accessibilty-and-get-a-better-developer-experience-and-create-more-accessible-websites-b6b</guid>
      <description>&lt;p&gt;You have probably heard about web accessibility on more than one occasion, especially if you work as a front-end developer. But a lot of front-enders think that making their applications accessible is a hassle. That’s not because we don’t care, but because the approach to how we implement it is kind of backwards.&lt;/p&gt;

&lt;p&gt;Typically the site is almost finished before someone suddenly showes up with the “accessibility check list” and (since we are not allowed to write every little thing all over again from the start) we try to put some ARIA-attributes on top of the stuff that are already built – and hope for the best.&lt;/p&gt;

&lt;p&gt;In this blogpost series I will cover the things you should know as a developer, to &lt;strong&gt;make the web an accessible place for everyone&lt;/strong&gt;, and to &lt;strong&gt;create a better developer experience&lt;/strong&gt; for yourself and others.&lt;/p&gt;

&lt;p&gt;The complete blogpost series will consist of five blogpost. In this first one I will give you an overview of web accessibility. Why is it important, what makes a web page (in)accessable, and what are the things that we as developers should take into concideration when creating web applications?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-it-important"&gt;
  &lt;/a&gt;
  Why is it important?
&lt;/h2&gt;

&lt;p&gt;The internet is such a huge part of education, commerce, socializing and entertainment, so it’s important to make it accessible to create equal access and equal opportunity. And if you chose not to, you chose to actively exclude potential users/customers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-makes-a-web-page-inaccessible"&gt;
  &lt;/a&gt;
  What makes a web page (in)accessible?
&lt;/h2&gt;

&lt;p&gt;When we talk about web accessibilty most of us think of blind people, or maybe someone that can’t use a mouse. That’s not wrong, and they are an important target group, but webiste accessibility is about more than supporting screen readers and tab-navigation.&lt;/p&gt;

&lt;p&gt;Have you ever tried to navigate a webpage and become lost, or been unable to find what you were looking for? Or maybe you started to fill out a form, then you got interrupted by a phone call, and afterwards you can’t remember what the input-field was supposed to contain – and the error you get only says “There is an error in the form”.&lt;br&gt;
What about reading the content of a webpage on your phone, outside in bright sunshine?&lt;/p&gt;

&lt;p&gt;By creating an accessiblie web application we make the experience better for all users.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#users-diversity"&gt;
  &lt;/a&gt;
  Users diversity
&lt;/h3&gt;

&lt;p&gt;There are four categories of access impairments: cognitive, motor, hearing and visual. And for each of them the impairment can be situational, temporary or permanent.&lt;/p&gt;

&lt;p&gt;Lets look at some examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A very noisy environment can make it difficult to hear. This is a situational hearing impairment.&lt;/li&gt;
&lt;li&gt;Blindness is a permanent visual impairment. Having difficulty reading on your phone because of bright light/sunshine is situational and visual.&lt;/li&gt;
&lt;li&gt;A broken arm can make it impossible to use a mouse. This is a temporary motor impairment. While being paralyzed is a permanent motor impairment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feeling a bit overwhelmed by all the possibilities and challenges we should try to meet in our web applications? Don’t worry, someone else has done a lot of work for you, and written down a wide range of recommendations for making web content more accessible. These recomendations are called Web Content Accessibility Guidelines (WCAG), and we will take a look at them in the next section.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#take-an-accessibility-first-approach"&gt;
  &lt;/a&gt;
  Take an “accessibility first” approach
&lt;/h2&gt;

&lt;p&gt;If you’ve been working in tech for a while you might remember when “mobile first” became a thing? In the beginning a lot of people (typically clients who didn’t want to pay more to support multiple screen sizes) was against it. Why should we care about users who visited our site from a phone? They can use a laptop! It took some time but after a while everyone was expecting front-end developers to create these amazing responsive web sites. And today that is something as natural as having a website in the first place.&lt;/p&gt;

&lt;p&gt;I think that it is the same thing with accessibility. Everyone is starting to realise that it is important, and that it will benefit everyone, but it is not common to have a “accessibility firts” approach yet. But I’m here to tell you that you as a developer should take this approach even though those around you are not there yet.&lt;/p&gt;

&lt;p&gt;It will make your developer experience better if you have accessibility in the forefront of your mind from the start. When you take that into concideration when deciding how to structure your code, or how to solve a user interaction, your creations will be accessible from the beginning. And you dont have to go back and refactor – or haphazardly put some ARIA-attributes on top of it.&lt;/p&gt;

&lt;p&gt;In the next blogposts in this series I will give you some practical examples, but first lets take a look at the guidelines that exists.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#web-content-accessibility-guidelines-wcag"&gt;
  &lt;/a&gt;
  Web Content Accessibility Guidelines (WCAG)
&lt;/h3&gt;

&lt;p&gt;The WCAG guidelines are created by The World Wide Web Consortium (W3C) Web Accessibility Initiative (WAI). If you &lt;a href="https://www.w3.org/WAI/about/"&gt;want to read more about the initiative you can find their website here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We have allready covered that WCAG is a set of guidelines and resources that we can use to create more accessible websites. WCAG is divided into four main principals, they say that web content should be percivable, operable, understandable and robust. From a high level this is what they cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Perceivable&lt;/strong&gt;
Information should be presented in a way that all users can perceive. This means that you should not rely only on one of the users senses.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Operable&lt;/strong&gt;
The web is interactive and it is important that users can navigate, click on buttons, fill in information, toggle hidden content etc, all without realying on a mouse.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Understandable&lt;/strong&gt;
The principle is about predictability, simple language, good help functionality.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Robust&lt;/strong&gt;
The principal about robustness is mostly about the code. The content should be accessible as technology evolves. This includes for assistive technology.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to guidelines WCAG also &lt;a href="https://www.w3.org/WAI/tips/developing/"&gt;covers concrete examples of how to implement different types of content&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Levels of WCAG&lt;/strong&gt;&lt;br&gt;
For each of the main principals there are guidelines that are categorized into three levels. A (lowest), AA (mid range and AAA (highest). For some types of content it is not possible to achive level AAA complience, so most sites should have level AA as their goal.&lt;/p&gt;

&lt;p&gt;This blogpost is already getting to long, and we have one more topic to cover, so I won’t go into more detail about WCAG for now. If you want to learn more about WCAG take a look at the official site.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#accessible-rich-internet-applications-aria"&gt;
  &lt;/a&gt;
  Accessible Rich Internet Applications (ARIA)
&lt;/h3&gt;

&lt;p&gt;As a developer you have probably encountered ARIA attributes before. If you haven’t used them when writing code yourself maybe you’ve seen them in other peoples code, or in code examples. ARIA is a set of attributes we use to describe the intent of our code for screen readers and other assistant technology.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is ARIA&lt;/strong&gt;&lt;br&gt;
The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA"&gt;MDN Web Docs&lt;/a&gt; defines ARIA like this: “Accessible Rich Internet Applications (ARIA) is a set of attributes that define ways to make web content and web applications (especially those developed with JavaScript) more accessible to people with disabilities.”&lt;/p&gt;

&lt;p&gt;As mentioned ARIA is a set of attributes you can use to add metadata to your html. Lets look at an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;aria-describedby=&lt;/span&gt;&lt;span class="s"&gt;"myButtonDescription"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Click here&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"myButtonDescription"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;When you click here ** will happen&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the example above the “aria-describedby” tells us (or the assistance technology) that the functionality of the button is described by the div that has id “myButtonDescription”. &lt;em&gt;Note, the better solution here would be to have a more descriptive text on the button itself, like "Register for the conference", WAI-ARIA should be the last resort&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;ARIA is a huge topic so I’ve dedicated a whole blogpost to it (part 4 of this series). If you want to learn more you should take a look at the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA"&gt;MDN Web Docs&lt;/a&gt; or the &lt;a href="https://www.w3.org/WAI/standards-guidelines/aria/"&gt;Web Accessibility Initiative site&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Yay, you made it all through this text-heavy introduction! (Or you just jumped here for the TL;DR; Thats ok too 😀 )&lt;/p&gt;

&lt;p&gt;Lets summarize what you just learned.&lt;/p&gt;

&lt;p&gt;Accessibility is about more than blind people and screen readers, and making the web more accessible will benefit all users.&lt;/p&gt;

&lt;p&gt;Access impairments can be categorized as &lt;strong&gt;cognitive, motor, hearing and visual&lt;/strong&gt;, and they can be &lt;strong&gt;situational, temporary or permanent&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;By taking av “accessibility first” approach you will get a better developer experience and help create equal access and equal opportunity by makin the web accessible to all. There are a lot of things to consider but luckily we have resources like WCAG and ARIA to help us create more accessible web applications.&lt;/p&gt;




&lt;p&gt;Did you find this article usefull? &lt;a href="https://twitter.com/acupof_dev"&gt;Follow me on twitter&lt;/a&gt; to be notified when I publish something new!&lt;/p&gt;

&lt;p&gt;Also, if you have any feedback or questions, please let me know in the comments below. 🙂&lt;/p&gt;

&lt;p&gt;Thank you for reading, and happy coding!&lt;/p&gt;

&lt;p&gt;/Eli&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Top 30 Open Source And Paid React Charts + Examples</title>
      <author>Nastassia Ovchinnikova</author>
      <pubDate>Wed, 02 Jun 2021 10:07:16 +0000</pubDate>
      <link>https://dev.to/flatlogic/top-30-open-source-and-paid-react-charts-examples-3ikg</link>
      <guid>https://dev.to/flatlogic/top-30-open-source-and-paid-react-charts-examples-3ikg</guid>
      <description>&lt;p&gt;The most evident outcome of the digital revolution (or the third industrial revolution) that began in the latter half of the 20th century is the amount of data that is collected and analyzed every day. &lt;/p&gt;

&lt;p&gt;In 2016 the global IP traffic first exceeded one zettabyte (a zettabyte is equivalent to 1021 bytes). The common amount of digital data in the world was more than 1 zettabyte as far back as in 2012. According to &lt;a href="https://newsroom.cisco.com/press-release-content?type=webcontent&amp;amp;articleId=1955935"&gt;Cisco research&lt;/a&gt; it’s expected 4.8 zettabytes of traffic per year by 2022. These numbers impress.&lt;/p&gt;

&lt;p&gt;That data includes videos, pictures, tweets, emails, messages. Besides, web apps collect data about users, websites collect cookies, marketing needs to understand the preferences and behavior of thousands of users, businesses require numbers to develop a strategy and move forward. &lt;/p&gt;

&lt;p&gt;And what to do with that all collected information? Show it…But how? &lt;/p&gt;

&lt;p&gt;The world came up with several ways of representing the data: tables, charts, and graphs. Whether you need to organize, analyze, identify a trend, track the changes over time, you can use all tools above. &lt;/p&gt;

&lt;p&gt;Representing your data in the form of charts is a great way to convey information to users. But the visualization of charts must be beautiful and insightful to users. The modern design of apps has gone far beyond the standard flat visualization that was a decade ago. The main requirement has stayed the same: charts must be informative. However, chart forms and types vary a lot, so you have control over user experience via the design you chose – and you are expected to make a good decision about the way you represent the data, otherwise, you shouldn’t wait for a high number of users. &lt;/p&gt;

&lt;p&gt;Charts are the most common data visualization components of mobile and web applications. One of the advantages of JavaScript frameworks like React is that it offers scalable and versatile components. React is a great framework that lets developers build rich and high-quality user interfaces easily, so your users will love to use the app. &lt;/p&gt;

&lt;p&gt;In the article, we discuss what types of charts exist, how users can interact with charts, what functional opportunities every type of chart offers, define the criteria for picking the right chart, and look through the list of the best React charts examples and libraries. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#charts-types-and-their-features-that-may-be-useful"&gt;
  &lt;/a&gt;
  Charts types and their features that may be useful
&lt;/h2&gt;

&lt;p&gt;Let’s start with a review of the most popular and well-known chart types.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pie-chart"&gt;
  &lt;/a&gt;
  Pie chart
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CthIPe_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/K2imwEKMZIv8tZGCTs2wWmlq2-IX5MhSytmuOXZnFcd99uvZ4i8_eqYcwKxGhWvqvawHyILyz9M-SPOis6cdUgdCg6gNGVAs44HREzIh6VMwwhIxdxQtTTTGy-sW4GVhhOfKyqc" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CthIPe_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/K2imwEKMZIv8tZGCTs2wWmlq2-IX5MhSytmuOXZnFcd99uvZ4i8_eqYcwKxGhWvqvawHyILyz9M-SPOis6cdUgdCg6gNGVAs44HREzIh6VMwwhIxdxQtTTTGy-sW4GVhhOfKyqc" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#possible-functions"&gt;
  &lt;/a&gt;
  Possible functions
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Droll-down – an option when the individual slices can be clicked to expose more detailed data. The slice can be drilled down to the next sub-category of data. &lt;/li&gt;
&lt;li&gt;Drill-up – give an option to return to the previous upper-level of the data.&lt;/li&gt;
&lt;li&gt;Select slice – all slices have no selection by default. This option allows the user to click on the slice and select it (if there is no drill-down opportunity) by moving it apart from other slices or using special animation like a blackout of other slices. &lt;/li&gt;
&lt;li&gt;Select multiple slices – selection of multiple slices. An additional useful option here is summing data attached to the slices.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#when-to-use"&gt;
  &lt;/a&gt;
  When to use
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;When you need to show relative proportions or percentages of a whole dataset. &lt;/li&gt;
&lt;li&gt;When you want to show the general sense of the part-to-whole relationship in the data without the precise comparison of separate slices. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#when-not-to-use"&gt;
  &lt;/a&gt;
  When not to use
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;When you need to compare data in different slices across pies.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#line-chart"&gt;
  &lt;/a&gt;
  Line chart
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ndk7NeG3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/ewqNji3QiDtNc9lYMUmqn_7FKdc4vRmztQtBQHIPavjCo3dJ3EqmfvhPv8GDJ0QEbh83NdtYdJKjRRHi_6negIUqqyLPonFlmWG8lBX5HGLeJ_qdJMjWmPiV7lN17pzAZFRGUWo" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ndk7NeG3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/ewqNji3QiDtNc9lYMUmqn_7FKdc4vRmztQtBQHIPavjCo3dJ3EqmfvhPv8GDJ0QEbh83NdtYdJKjRRHi_6negIUqqyLPonFlmWG8lBX5HGLeJ_qdJMjWmPiV7lN17pzAZFRGUWo" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#possible-features"&gt;
  &lt;/a&gt;
  Possible features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Scroll back (time) – change the displayed period to earlier without changing the period size. &lt;/li&gt;
&lt;li&gt;Scroll forward (time) – change the displayed period to later without changing the period size.&lt;/li&gt;
&lt;li&gt;Change time unit of measurement – choose different time aggregation units (year, day, hour, etc.)&lt;/li&gt;
&lt;li&gt;Select a point – if you want to see the detailed information of a certain point on a line, you can click on it or just move the cursor over it. &lt;/li&gt;
&lt;li&gt;Multi-axis – allows configuring the chart for multiple Y-axes, each associated with one or more data series. It’s useful when you need to track the dynamic in different interrelated continuous values that have different units of measurement or range. &lt;/li&gt;
&lt;li&gt;Zoom in / zoom out – an option to interact with an x-axis and change the size of the period for a chart. It allows viewing for a large period. The data on the line chart modify according to the selected period. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#when-to-use"&gt;
  &lt;/a&gt;
  When to use
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;To visualize trends in continuous data that change over some time.&lt;/li&gt;
&lt;li&gt;If you want to display multiple series of data for the same timeline and see the difference in their dynamics. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#when-not-to-use"&gt;
  &lt;/a&gt;
  When not to use
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;If the data contains different categories and their all must be displayed. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#bar-chart"&gt;
  &lt;/a&gt;
  Bar chart
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lcNerLYK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/kKwED0PBmcIeBpAeIbi35YJ-wtf6BfALiyXorgKYTkWmooy9-zf2AB9XR6zaVETwW4nUj2DsqQed6Bt18EAfnSU7lyKU2PAhpDnGAtv-EuSR7yyCe2P--5EuxHXtDR__Xk9YUzo" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lcNerLYK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/kKwED0PBmcIeBpAeIbi35YJ-wtf6BfALiyXorgKYTkWmooy9-zf2AB9XR6zaVETwW4nUj2DsqQed6Bt18EAfnSU7lyKU2PAhpDnGAtv-EuSR7yyCe2P--5EuxHXtDR__Xk9YUzo" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#possible-features"&gt;
  &lt;/a&gt;
  Possible features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Pick variation of bar chart – charts can be oriented vertically (categories on X-axis) or horizontally (categories on Y-axis). If we face long categories labels (like the sample above) it is a good idea to use a horizontal bar chart. &lt;/li&gt;
&lt;li&gt;Select a label – when clicking or hovering the label it reveals detailed information about the values for the label. &lt;/li&gt;
&lt;li&gt;Multiple select – click on labels to select multiple labels. If selection also sums up the values of every label – it’s great.&lt;/li&gt;
&lt;li&gt;Change / cancel selection – edit or cancel the selected period. &lt;/li&gt;
&lt;li&gt;Positive and negative variations – a chart with positive values that are above a mid-point (zero, by default) and negative values that are below the mid-point. They are most often painted with contrasting colors.&lt;/li&gt;
&lt;li&gt;Scroll left or right / top or down – if a chart is inscribed in the frame, this option allows to look through all labels. &lt;/li&gt;
&lt;li&gt;Zoom in / zoom out – an option to fine-tune chart appearance by changing its Y-axis dimension and number of labels at one frame. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#when-to-use"&gt;
  &lt;/a&gt;
  When to use
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;If you want to make a comparison of metric values across different subgroups of your data (in other words, if you work with categories). &lt;/li&gt;
&lt;li&gt;When you want to show the changes over time in a dataset. &lt;/li&gt;
&lt;li&gt;Stacked bar charts are helpful when you want to see the relationship of every stacked sub-bars on the total amount and track their changes over time.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#when-not-to-use"&gt;
  &lt;/a&gt;
  When not to use
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;If you have multiple data series that are independent and are not parts of the whole. &lt;/li&gt;
&lt;li&gt;When categories have different measurement units. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#area-chart"&gt;
  &lt;/a&gt;
  Area chart
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kDLfQ7-j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/IMadY9xj-cKw1b-6gdEmHxP1AqolJRgGsqlcKAUz4ffbXALu_Qf-P7EYPbPmwf5MZDWrIFcpa_5Cpo8oU0_W0V9qVj7bNnhCvBCeWQtkJmfENL7KTgluYDiQ_SOSwShO-A6RQ98" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kDLfQ7-j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/IMadY9xj-cKw1b-6gdEmHxP1AqolJRgGsqlcKAUz4ffbXALu_Qf-P7EYPbPmwf5MZDWrIFcpa_5Cpo8oU0_W0V9qVj7bNnhCvBCeWQtkJmfENL7KTgluYDiQ_SOSwShO-A6RQ98" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#possible-features"&gt;
  &lt;/a&gt;
  Possible features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Select a point – by clicking on a certain point within a chart, you can see the precise values of all categories at this point. &lt;/li&gt;
&lt;li&gt;Scroll – change the display period to earlier / later. &lt;/li&gt;
&lt;li&gt;Zoom in / out – an option to make the period on the chart smaller / bigger. &lt;/li&gt;
&lt;li&gt;Positive and negative values – when a chart allows to display negative values (only uses for non-stacked area charts) under X-axis. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#when-to-use"&gt;
  &lt;/a&gt;
  When to use
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;This area chart gives you a quick comparison of the trend for several series over the time&lt;/li&gt;
&lt;li&gt;When you need to see the magnitude of the trend for all series.&lt;/li&gt;
&lt;li&gt;When there is a lot of points on the X-axis&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#when-not-to-use"&gt;
  &lt;/a&gt;
  When not to use
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;When you have a lot of categories to compare with insignificant variations in values between them. &lt;/li&gt;
&lt;li&gt;When you need a precise comparison of values for categories.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#composed-combined-chart"&gt;
  &lt;/a&gt;
  Composed (combined) chart
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kzTn3vQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/55GLOD-w6CWHaJH9tlrSRlRG6Js357ae2012v2m4LgYMzS7ApL49jP55SFqzcP25UALnA3J7kHK6_iGvP0RKAiZRslfI48cFPxNQTeZ3D-_f8n7I33WjI0td_Sinx07wIzOGUXY" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kzTn3vQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/55GLOD-w6CWHaJH9tlrSRlRG6Js357ae2012v2m4LgYMzS7ApL49jP55SFqzcP25UALnA3J7kHK6_iGvP0RKAiZRslfI48cFPxNQTeZ3D-_f8n7I33WjI0td_Sinx07wIzOGUXY" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In most cases, composed charts are a combination of a bar chart and line charts. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#possible-features"&gt;
  &lt;/a&gt;
  Possible features
&lt;/h4&gt;

&lt;p&gt;Select a slice – an option to select a certain point and see all values from all types of charts at that particular point.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#when-to-use"&gt;
  &lt;/a&gt;
  When to use
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;If you need to compare values with different measurement units. &lt;/li&gt;
&lt;li&gt;If the values are different in range. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#when-not-to-use"&gt;
  &lt;/a&gt;
  When not to use
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;If the number of graph types you want to display is more than 3. It’s better not to mess up the information and make several graphs. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#other-charts"&gt;
  &lt;/a&gt;
  Other charts
&lt;/h2&gt;

&lt;p&gt;There are tons of different charts people have invented. We list some of them without a detailed review.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#radar-polar-chart"&gt;
  &lt;/a&gt;
  Radar (polar) chart
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Odc8MYqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-08-at-17.04.24.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Odc8MYqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-08-at-17.04.24.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scatter-chart"&gt;
  &lt;/a&gt;
  Scatter chart
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RYCVmiK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-08-at-17.07.18.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RYCVmiK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-08-at-17.07.18.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bubble-chart"&gt;
  &lt;/a&gt;
  Bubble chart
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HPxVI-Sy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-08-at-17.12.21.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HPxVI-Sy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-08-at-17.12.21.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#geo-chart"&gt;
  &lt;/a&gt;
  Geo chart
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xcw4QmQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-08-at-17.12.29.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xcw4QmQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-08-at-17.12.29.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sankey-diagram"&gt;
  &lt;/a&gt;
  Sankey diagram
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wj_4JIyo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-08-at-17.12.34.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wj_4JIyo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-08-at-17.12.34.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timeline-chart"&gt;
  &lt;/a&gt;
  Timeline chart
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3afNnxhl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-08-at-17.12.39.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3afNnxhl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-08-at-17.12.39.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that is not an exhaustive list of possible chart types. Developers, managers, and analytics all over the world adjust graphs to their needs. Charts become more tailored to the area where they are applied, however, almost all charts can be constructed out of charts listed above. For example, a stock chart that displays the exchange rates of currencies is a line chart with several series. A Gantt chart that is used for project management is based on a horizontal bar chart. If you want to get to know about most of the existing charts (44 charts to be exact!), read &lt;a href="https://visme.co/blog/types-of-graphs/"&gt;this article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Among specific features we would like to list some additional features that are common for all types of charts and may be necessary for some applications: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Animation – smooth and seamless animation provides a more consistent and nice user experience and increases the chances that users would like to work with your app. &lt;/li&gt;
&lt;li&gt;Additional events for interaction with a chart – charts may provide an option to attach custom events to any rendered element. When users trigger the event (on click, on touch for mobile, for example), some rendered elements can be modified, altered, or complimented.
&lt;/li&gt;
&lt;li&gt;Chart export – an option to save the chart in a local file (pdf, jpeg, png). &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-the-right-chart-library"&gt;
  &lt;/a&gt;
  How to choose the right chart library?
&lt;/h2&gt;

&lt;p&gt;When it comes to choosing the right chart library first of all you need to define the type of React chart your app needs. We have mentioned some common pieces of advice when to use different chart types, however, we covered not a comprehensive list, and maybe some tailored charts would cover your needs much better, than classic pie, bar charts. The decision on which chart to work with must be based on the kind of analysis you are targeting to provide. Another basis for making a decision is the way you want to represent the data to users. We highly recommend to read about existing types of charts here and match your needs with the tasks every chart solves.  &lt;/p&gt;

&lt;p&gt;If you already know what kind of graph you need, we gathered some factors you should pay attention to while choosing the chart library. The list: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How many stars on Github a library has? It is popular among developers? Do they trust the chart and use it in their apps? &lt;/li&gt;
&lt;li&gt;Is a Dev activity active or not? Is a library well maintained with regular bug fixes, new features deployment, and issues solving?&lt;/li&gt;
&lt;li&gt;What kind of support from developers is available? &lt;/li&gt;
&lt;li&gt;Does the chart provide mobile support? Is chart responsive out of the box? Does it support touches and gestures?&lt;/li&gt;
&lt;li&gt;Is the library well-documented with examples and explanations of every feature it offers? &lt;/li&gt;
&lt;li&gt;Does a chart offer additional features that you can use to make the user experience of working with charts much better? &lt;/li&gt;
&lt;li&gt;Does the chart have some nice-looking themes out of the box? Does the library allow to customize the design of a chart? What kind of customization does it offer?
&lt;/li&gt;
&lt;li&gt;Do you need SVG or Canvas output? SVG is great for a small or medium amount of dataset, while Canvas shows better performance when working with a large database. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additionally, it’s worth mentioning two things that were not included in the criteria, but which you need to know before you go looking for an ideal chart for you. &lt;/p&gt;

&lt;p&gt;Most libraries are client-side rendering, while server-side rendering charts are exceptions. If it is not a problem and you are not looking for a server-side rendering library, we keep going. &lt;/p&gt;

&lt;p&gt;Another thing you need to know: most of the libraries depend on &lt;a href="https://github.com/d3/d3"&gt;d3.js&lt;/a&gt;.  D3 is a popular JavaScript library with 90k stars on GitHub for visualizing data using Canvas, SVG, and Html. It’s a library with huge Dev activity, plenty of videos, tutorials, books, etc. It stems from a low-level approach and gives the developers freedom to create their own charts. For what is this information? &lt;/p&gt;

&lt;p&gt;If you are good at D3 or have an intention to level up in it, you should consider an option to write your own charts library. It may become a very good solution if you want to make a solution special for your use case.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-react-charts"&gt;
  &lt;/a&gt;
  Top React Charts
&lt;/h2&gt;

&lt;p&gt;We start from the most popular charts libraries for React. You can find a lot of chart types in every library, so you can look through them first. The top itself is divided into several abstracts by the chart types.&lt;/p&gt;

&lt;p&gt;Most popular charts libraries: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pie charts &lt;/li&gt;
&lt;li&gt;Line charts&lt;/li&gt;
&lt;li&gt;Bar charts&lt;/li&gt;
&lt;li&gt;Area charts&lt;/li&gt;
&lt;li&gt;Composed charts&lt;/li&gt;
&lt;li&gt;Gantt charts &lt;/li&gt;
&lt;li&gt;Other libraries that are worth to mention &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#a-brief-list-of-the-most-popular-charts-libraries"&gt;
  &lt;/a&gt;
  A brief list of the most popular charts libraries:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://recharts.org/"&gt;Recharts&lt;/a&gt; is a charting library built on React components with 16 k on &lt;a href="https://github.com/recharts/recharts"&gt;GitHub&lt;/a&gt;.  It doesn’t offer a great variety of chart types, however, it contains main chart types like pie, bar, line charts which are highly customizable and go with a lot of well-tested features. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://formidable.com/open-source/victory/"&gt;Victory&lt;/a&gt; is a collection of components for charting and data visualization with 8.8k on &lt;a href="https://github.com/FormidableLabs/victory"&gt;GitHub&lt;/a&gt;. It contains 25 types of charts that you can easily customize and integrate with your app. The options to fine-tune the design are also great. If the amount of charts in Recharts library doesn’t satisfy you, visit the website of this library.
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/plouc/nivo"&gt;Nivo&lt;/a&gt; is a popular React charts library with full components for data visualization. It offers more than 50 types of charts with comprehensive documentation for every type. The number of stars on GitHub is 8.5 k. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://airbnb.io/visx/"&gt;Visx&lt;/a&gt; is a set of low-level visualization primitives for React from Airbnb company with 13k on &lt;a href="https://github.com/airbnb/visx"&gt;GitHub&lt;/a&gt;. If you find all three previous libraries not suited for your use-case, go to Visx and built your own React chart using well-tested primitives that Airbnb offers. &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#best-pie-charts-examples"&gt;
  &lt;/a&gt;
  Best pie charts examples
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#pies-from-visx"&gt;
  &lt;/a&gt;
  Pies from visx
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wrZkqCba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/CyOMy1kgJtE5JuaMoJsR0TNlX7pA2Pn9CWeI8Zehl32FapoFgsNylpb_jExNyFmRFRCFwQFiHKHMjV0iFv3HGb9AW89Dvc20V41IsIrt0ZX5ruQcT9zWiQSTFSmCSo7WlKMWY-o" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wrZkqCba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/CyOMy1kgJtE5JuaMoJsR0TNlX7pA2Pn9CWeI8Zehl32FapoFgsNylpb_jExNyFmRFRCFwQFiHKHMjV0iFv3HGb9AW89Dvc20V41IsIrt0ZX5ruQcT9zWiQSTFSmCSo7WlKMWY-o" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That pie is built from a set of low-level primitives that visx library provides. It features a modern design and ample opportunities for customization for every element. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 13k stars on &lt;a href="https://github.com/airbnb/visx"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: a huge amount of developers like this library. The last update was in the February 2021&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: yes, on GitHub&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: not out of the box, but you can use the chapter to make the graph &lt;a href="https://airbnb.io/visx/docs/responsive"&gt;responsive&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: there is the documentation for every primitive, code sample and live demo for every chart, and getting-started tutorial for beginners&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it’s possible to create your own pie chart using primitives a library offers,&lt;/li&gt;
&lt;li&gt;the design uses gradient out of the box,&lt;/li&gt;
&lt;li&gt;the chart is interactive.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: the library itself is all about customization&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: SVG&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-pie-chart-from-nivo"&gt;
  &lt;/a&gt;
  A pie chart from nivo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uM8DmIUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/luc8G3ZMLWifj_Ng7xa9nIOK3Oro7cDOuWwmK9M_il7hpkDEkdpK_EUwaFGx3sMze7V40VMEho4T9d1FlHH-yL31wpQR7byv4POOon1d2ltYgxIBiIMdZhceJF43LaERLWopSpE" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uM8DmIUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/luc8G3ZMLWifj_Ng7xa9nIOK3Oro7cDOuWwmK9M_il7hpkDEkdpK_EUwaFGx3sMze7V40VMEho4T9d1FlHH-yL31wpQR7byv4POOon1d2ltYgxIBiIMdZhceJF43LaERLWopSpE" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 8.5k stars on &lt;a href="https://github.com/plouc/nivo"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: yes, a community with more than 1 k participants on discord channel&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: yes, issues page on GitHub&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: a mobile-friendly chart&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: exhaustive documentation with guides, theming section, &lt;a href="https://flatlogic.com/blog/raise-your-question-on-a-brand-new-flatlogic-forum/"&gt;FAQ&lt;/a&gt;, live examples, component playground&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;animated motions and transitions from react-motion,&lt;/li&gt;
&lt;li&gt;there is a server-side rendering option,&lt;/li&gt;
&lt;li&gt;event handler.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: it is a highly customizable chart with an online sandbox where you can change the visual appearance of the chart with the &lt;a href="https://flatlogic.com/blog/7-reasons-why-ui-matters-in-web-development/"&gt;user interface&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: SVG, Canvas&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-pie-chart-from-reactchartjs"&gt;
  &lt;/a&gt;
  A pie chart from react-chart.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FzdEbnKF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/7344-aTqHLTPIkyTBURT3ZensPbEDYf6-YX2OCW9mMsSPxWsK8OaxC2dCYDIsB3ASJNS0rxdR-A48bIIBbpFYhy9iDrsh4oN7EP6tx01kF46oZQ4B-Qt5-O6S_Ot7A77bYQQWUE" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FzdEbnKF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/7344-aTqHLTPIkyTBURT3ZensPbEDYf6-YX2OCW9mMsSPxWsK8OaxC2dCYDIsB3ASJNS0rxdR-A48bIIBbpFYhy9iDrsh4oN7EP6tx01kF46oZQ4B-Qt5-O6S_Ot7A77bYQQWUE" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A nice-looking well-coded pie chart with a transparent design and simple interface without redundant functions. The chart is a part of the react-char.js library. It is a wrapper for HTML5-based library chart.js with 53 k on &lt;a href="https://github.com/chartjs/Chart.js/tree/v3.0.2"&gt;GitHub&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 3.8k stars on GitHub&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: there is a huge community for the chart.js library you can get in touch with, the last update of react-chart.js was at the end of 2020&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: yes, via issues page on GitHub&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: the chart adjusts to all screen resolutions&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: the wrapper itself contains several lines of code that are described on the GitHub page. The original charts library is well-documented&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you can exclude data series from the chart with a nice animation,&lt;/li&gt;
&lt;li&gt;click events.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: limited customization options&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: Canva&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-line-charts-examples"&gt;
  &lt;/a&gt;
  Best Line charts examples
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#line-chart-from-recharts"&gt;
  &lt;/a&gt;
  Line chart from Recharts
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ucr-qJct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/HlbHMNzglmPK3gecdQfTwpnvBCimkXxDoS8Un-nxvjwugxC2ajgYpenX6XuPr8Lne12RlO61AH1ysbTShP3TZijQDpDkw-jUk_ZN7Qt9l8CAmrsLRqm9fyip5nJrYq8NLbWuCFs" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ucr-qJct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/HlbHMNzglmPK3gecdQfTwpnvBCimkXxDoS8Un-nxvjwugxC2ajgYpenX6XuPr8Lne12RlO61AH1ysbTShP3TZijQDpDkw-jUk_ZN7Qt9l8CAmrsLRqm9fyip5nJrYq8NLbWuCFs" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recharts is the most popular React charting library with simple and clean fully responsive charts. Line chart from that library offers a lot of customizable options to make a chart special for your app. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 16.1 stars on &lt;a href="https://github.com/recharts/recharts"&gt;GitHub&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: a huge and active community, the library constantly gets updated&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: quick support via GitHub (almost 2k issues were closed) &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: fully responsive, support mobile gestures  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: great documentation for every option the chart offers&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;connects two points between which there is an empty value,&lt;/li&gt;
&lt;li&gt;padding options,&lt;/li&gt;
&lt;li&gt;you can add a reference line,&lt;/li&gt;
&lt;li&gt;customizable dots,&lt;/li&gt;
&lt;li&gt;synchronized brushing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: labels of line, area, bar, axis, the shape of a bar, the content, and other elements can be customized. There is a &lt;a href="https://recharts.org/en-US/guide/customize"&gt;page&lt;/a&gt; with all customization options&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: SVG, Canvas&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#line-race-chart-from-echarts-for-react"&gt;
  &lt;/a&gt;
  Line race chart from Echarts for React
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--So8HFjmn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/LOoFUy_3TF6p3byhJrZwRmOpeOrHcjX8Gp94_iG_azE_8vRQ6KlVMjow_3V9wL9mtr8oj88nx55RaaD-QFAa0NsyfPyZ0Pt2xOfd-TBtWAkGEkKk8YBSU9d-GdumHmua5T8b024" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--So8HFjmn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/LOoFUy_3TF6p3byhJrZwRmOpeOrHcjX8Gp94_iG_azE_8vRQ6KlVMjow_3V9wL9mtr8oj88nx55RaaD-QFAa0NsyfPyZ0Pt2xOfd-TBtWAkGEkKk8YBSU9d-GdumHmua5T8b024" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That chart goes with the Echarts library. It is a React wrapper for Apache Echart, an open-sourced JavaScript visualization tool with 45k stars on &lt;a href="https://github.com/apache/echarts"&gt;GitHub&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 3.1 stars on &lt;a href="https://github.com/hustcc/echarts-for-react"&gt;GitHub&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: a huge and active community with more than 350 opened issues, the library gets updates and bug fixes constantly. The last was in February 2021&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: qualified and vivid support via issues page on GitHub (only 5 opened tickets)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: the chart itself is responsive, however, it doesn’t look great on small screen resolutions  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: well-structured code with a live example&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;VML rendering (for earlier IE versions),&lt;/li&gt;
&lt;li&gt;server-side rendering chart,&lt;/li&gt;
&lt;li&gt;dynamic animated changes of the chart when the data is altered,&lt;/li&gt;
&lt;li&gt;export is available.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: dark/lite mode, decal pattern, and a separate &lt;a href="https://echarts.apache.org/en/option.html#title"&gt;page with customization options&lt;/a&gt; for every element&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: SVG, Canvas, VML&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#line-chart-from-fusioncharts"&gt;
  &lt;/a&gt;
  Line chart from FusionCharts
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iY13Lnul--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/du_3wiS_hTLdBhQbOLrl_mT3TGhcG-ZbCuVkScPIYTlOWeTTk_6-NKVT_l1f-cwUftnuoEqj2iWhU567A52aueyorTv78mgrKbhjL3qoubT886OyVzV6jOe5uorvV5dYH5pWi4o" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iY13Lnul--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/du_3wiS_hTLdBhQbOLrl_mT3TGhcG-ZbCuVkScPIYTlOWeTTk_6-NKVT_l1f-cwUftnuoEqj2iWhU567A52aueyorTv78mgrKbhjL3qoubT886OyVzV6jOe5uorvV5dYH5pWi4o" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A simple line chart that goes in FusionCharts library along with other types of charts. The charts library has an integration with different technologies and frameworks, including the most &lt;a href="https://flatlogic.com/blog/react-native-vs-flutter-the-key-differences-every-mobile-app-developer-should-know/"&gt;popular frameworks&lt;/a&gt; for frontend development: Vue, Angular, React. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 74 stars on &lt;a href="https://github.com/fusioncharts/react-fusioncharts-component"&gt;GitHub&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: there were several frequent releases with bug fixes, but the last update was at the beginning of 2020&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: support only via issues page on GitHub&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: yes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: comprehensive documentation with examples&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;a href="https://www.fusioncharts.com/dev/exporting-charts/using-fc-export-server/configuring-the-export-feature#configuring-the-export-feature-0"&gt;an option to hide/show series&lt;/a&gt; by clicking its name in the legend, export option, export options&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: 4 design themes out of the box&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: Canvas&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-bar-charts-examples"&gt;
  &lt;/a&gt;
  Best bar charts examples
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#bar-chart-from-recharts"&gt;
  &lt;/a&gt;
  Bar chart from Recharts
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8MLg0qLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/T2V9qL9mcO2x5RBM042EMG44PR0M2mYCOxtbWvePPagV1sAY2OHyRihmThSuEF5vwW-I06xCdG8hs3hG5vyMbNMHS33hDU0gGpknF96NYJP6KhUQhb-EActdYsAGvQnTGuI2a18" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8MLg0qLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/T2V9qL9mcO2x5RBM042EMG44PR0M2mYCOxtbWvePPagV1sAY2OHyRihmThSuEF5vwW-I06xCdG8hs3hG5vyMbNMHS33hDU0gGpknF96NYJP6KhUQhb-EActdYsAGvQnTGuI2a18" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That is a well-coded bar chart library that comes with a bunch of chart forms for all possible needs: simple, stacked, mixed, with custom shapes, with positive and negative values. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 16.1 stars on &lt;a href="https://github.com/recharts/recharts"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: a great number of developers contributing to the continual development of the library, the updates are frequent&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: quick support via GitHub issues page&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: mobile-friendly, handles mobile gestures&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: great documentation for every option the chart offers&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;customizable events,&lt;/li&gt;
&lt;li&gt;option to set a bar chart min-height, &lt;/li&gt;
&lt;li&gt;a positive and negative stacked bar chart form,&lt;/li&gt;
&lt;li&gt;multi-axes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: the whole chart is highly customizable. You can look through all options &lt;a href="https://recharts.org/en-US/guide/customize"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: SVG, Canvas&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-material-admin-full"&gt;
  &lt;/a&gt;
  React Material Admin Full
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1aMk94tc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/wzNvqogyLkNblNIV8whVhgwIxiYKRdVhfb-zBj75RjnnT21wLGCNQphRfobNqnSC1VjL036saVUkG4mVhti9ScG1mEmYpUk3FqxN8TOrUztPQA_DFM6B8Id2BispFak5_UOSFpc" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1aMk94tc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/wzNvqogyLkNblNIV8whVhgwIxiYKRdVhfb-zBj75RjnnT21wLGCNQphRfobNqnSC1VjL036saVUkG4mVhti9ScG1mEmYpUk3FqxN8TOrUztPQA_DFM6B8Id2BispFak5_UOSFpc" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These charts are a part of a &lt;a href="https://flatlogic.com/templates/premium"&gt;premium template&lt;/a&gt; with a clean &lt;a href="https://flatlogic.com/blog/top-material-design-dashboards/"&gt;material design&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 1k stars on &lt;a href="https://github.com/flatlogic/react-material-admin"&gt;GitHub&lt;/a&gt; for a limited free version of the template &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: the last update was in February 2021, the Dev activity is big since the template is one of the products from the Flatlogic team of developers&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: good full support via forum/email&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: yes, fully responsive. Click the name on mobile to hide its series on the chart  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: well-structured code, the documentation minimalistic&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;nice and smooth animation,&lt;/li&gt;
&lt;li&gt;the template allows downloading charts as SVG, PNG, and CSV files,&lt;/li&gt;
&lt;li&gt;it highlights series when you hover the appropriate name in the legend,&lt;/li&gt;
&lt;li&gt;you can use a bar with an image in the background.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: easy customization, quick start, 3 inbuilt design themes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: SVG, Canvas&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bar-chart-with-slider-from-victory"&gt;
  &lt;/a&gt;
  Bar chart with slider from Victory
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---b6KjL4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/kIGrq-iHQUsD6oXBVd0h-9gsVaTMeJIWGF_EzL293JcQ9wV6qh29NItsV-7axb9duld6P98KY1nNCnGI9dLEDf8Avu6ObQ3NegGpRSyvwxFpId2sMYXd2_Mo2X6hk9L5nF0BOCU" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---b6KjL4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/kIGrq-iHQUsD6oXBVd0h-9gsVaTMeJIWGF_EzL293JcQ9wV6qh29NItsV-7axb9duld6P98KY1nNCnGI9dLEDf8Avu6ObQ3NegGpRSyvwxFpId2sMYXd2_Mo2X6hk9L5nF0BOCU" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a responsive charting component for React that features a connected slider that allows to choose the period (years in the example) to display. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 8.8 stars on &lt;a href="https://github.com/FormidableLabs/victory"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: the library is actively developed, there is a &lt;a href="https://spectrum.chat/victory"&gt;channel for developers&lt;/a&gt; where you can discuss any issues&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: great support from the Formidable team &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: fully responsive chart&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: docs with &lt;a href="https://flatlogic.com/blog/react-table-guide-and-best-react-table-examples/"&gt;guide&lt;/a&gt;, FAQ, configuration documentation, and live code examples &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a flexible events system,&lt;/li&gt;
&lt;li&gt;animation and transitions are available,&lt;/li&gt;
&lt;li&gt;you can add a background for labels and various label placement options.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: you can create your own theme with props and specialized styles. There is a list of Victory themes that are available out of the box here&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: SVG&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-area-chart-examples"&gt;
  &lt;/a&gt;
  Best area chart examples
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#gradient-stacked-area-chart-from-echars-for-react"&gt;
  &lt;/a&gt;
  Gradient stacked area chart from Echars for react
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qWxp0b6l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/-LFJGjUetDOsr3IQD8dv0wNysNJheMZfKdrsdY5K7WtIPGzUI3QzEuMQ0Ilv1eqKdqYFwR_eIF84yjRwOzfTsQAG_MxbA40hkvkTplSgFwDgA8XR_UUAp6uabwxKTKSHbHRtqTI" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qWxp0b6l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/-LFJGjUetDOsr3IQD8dv0wNysNJheMZfKdrsdY5K7WtIPGzUI3QzEuMQ0Ilv1eqKdqYFwR_eIF84yjRwOzfTsQAG_MxbA40hkvkTplSgFwDgA8XR_UUAp6uabwxKTKSHbHRtqTI" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A beautiful and interactive area chart with an awesome gradient-based design. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 3.1 stars on &lt;a href="https://github.com/hustcc/echarts-for-react"&gt;GitHub&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: a huge and active community with more than 350 opened issues, the library gets updates and bug fixes constantly. The last was in February 2021&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: qualified and vivid support via issues page on GitHub (only 5 opened tickets)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: the chart is responsive, but it is hard to work with it on mobile&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: well-structured code, &lt;a href="https://flatlogic.com/blog/react-pagination-guide-and-best-react-pagination-libraries/"&gt;API&lt;/a&gt; references, there is a Chinese version of the documentation and the example goes with Chinese sample data&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;VML rendering (for earlier IE versions),&lt;/li&gt;
&lt;li&gt;server-side rendering chart,&lt;/li&gt;
&lt;li&gt;dynamic animated changes of the chart when the data is altered,&lt;/li&gt;
&lt;li&gt;export is available.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: dark/lite mode, decal pattern, and a separate page with customization options for every element &lt;a href="https://echarts.apache.org/en/option.html#title"&gt;https://echarts.apache.org/en/option.html#title&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: SVG, Canvas, VML&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stacked-area-chart-from-reactapexcharts"&gt;
  &lt;/a&gt;
  Stacked area chart from React-ApexCharts
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--da8lAGBi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/hg9TEbWymqWVY1W6H4hgoc8D517agL2d2bC2EfSGtwh8ldloBl21vs61zM-AOeSwBnr9oDc6TBCfAauN_aihCIr2kWTUwHWuD7JA0iD2yHQ0JpG8PExbhF5ZANHJH14Wq5gPX6Q" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--da8lAGBi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/hg9TEbWymqWVY1W6H4hgoc8D517agL2d2bC2EfSGtwh8ldloBl21vs61zM-AOeSwBnr9oDc6TBCfAauN_aihCIr2kWTUwHWuD7JA0iD2yHQ0JpG8PExbhF5ZANHJH14Wq5gPX6Q" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A great example of an interactive area chart that goes with an open-source tool React-ApexCharts. It is a wrapper for the very popular &lt;a href="https://flatlogic.com/blog/best-19-javascript-charts-libraries/"&gt;JavaScript charting library&lt;/a&gt; ApexCharts with more than 10 k stars on &lt;a href="https://github.com/apexcharts/apexcharts.js"&gt;GitHub&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 688 stars on &lt;a href="https://github.com/apexcharts/apexcharts.js"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: there are some articles on the internet and a lot of issues on GitHub. The original charts library gets updates constantly, the last update for wrapper was more than a year ago&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: mail support, GitHub page with tickets (two pages, one for wrapper and another for the original library)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: the chart adjusts to mobile screen resolutions, but doesn’t handle gestures like swipe left/right&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: the library comes with documentation for all chart essentials, like animations, events, tooltip, grid, legend, live demos for the chart, and descriptions of all methods&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;gradients,&lt;/li&gt;
&lt;li&gt;a user control panel,&lt;/li&gt;
&lt;li&gt;update from json API and ajax,&lt;/li&gt;
&lt;li&gt;hide/show series on the chart,&lt;/li&gt;
&lt;li&gt;export option.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: there are 11 color palette out of the box, monochrome and background images options&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: SVG&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-composed-charts-examples"&gt;
  &lt;/a&gt;
  Best composed charts examples
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#plots-from-reactvis"&gt;
  &lt;/a&gt;
  Plots from React-Vis
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ecewHFE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/RBvkma2m_hbR137wvIMtuU2PafbQ7FM1Vw9TFTTVHCHbbj-TXzArTqj7-olZrQZtGacF1DH1mVWbAks6_OaPoIq5JqMAczYxWqGY9P5M7MKBZtUn8Wf0tTx714FFLxooiIIhh5M" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ecewHFE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/RBvkma2m_hbR137wvIMtuU2PafbQ7FM1Vw9TFTTVHCHbbj-TXzArTqj7-olZrQZtGacF1DH1mVWbAks6_OaPoIq5JqMAczYxWqGY9P5M7MKBZtUn8Wf0tTx714FFLxooiIIhh5M" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This chart is a good product from Uber company. Despite this is a complex chart, it requires a minimum amount of code and sensible defaults which means that your chart looks good even if you don’t do anything. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 7,7k stars on &lt;a href="https://github.com/uber/react-vis"&gt;GitHub&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: last the last update was in 2019&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: rare support via GitHub issues page&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: fully responsive, support clicks&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: documentation, storybook, live examples, and API references – all that you can find on the official website&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;powered by react-motion animated &lt;a href="https://github.com/chenglou/react-motion"&gt;library&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;support positive and negative values.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: you can customize every aspect of the chart via the React-Vis style sheet and properties or using your own style sheet&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: SVG, Canvas&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-composed-chart-from-sing-app-react"&gt;
  &lt;/a&gt;
  A composed chart from Sing App React
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8PSNF1Xw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/T4jz2ITy6RGiV8F8fXXbM4e12bKAn7ceHPpt3x7toy3OR2gX9ls-Q4a8C20cl3Ra8GCrLpVFtlqPQa_L6y4Ao7vOI_IknZCclCwSzuvuS39zkpowSL9khdU3U1Bi3U7ITHQWR4Y" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8PSNF1Xw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/T4jz2ITy6RGiV8F8fXXbM4e12bKAn7ceHPpt3x7toy3OR2gX9ls-Q4a8C20cl3Ra8GCrLpVFtlqPQa_L6y4Ao7vOI_IknZCclCwSzuvuS39zkpowSL9khdU3U1Bi3U7ITHQWR4Y" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A composed chart with modern design from a great designer. The chart is a part of the premium Sing App &lt;a href="https://flatlogic.com/templates/react"&gt;React dashboard template&lt;/a&gt;. The chart allows to display area and line charts. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://flatlogic.com/templates/sing-app-react/demo"&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 1.2k stars on &lt;a href="https://github.com/flatlogic/sing-app"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: the last update was in March 2021, the developers are very active&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: yes, there is a special support &lt;a href="https://flatlogic.com/forum"&gt;forum&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: the chart is responsive across all devices, but the interactions on mobile are not very convenient &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;:  great documentation with a live demo of the chart&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;neat animation when hovering any series,&lt;/li&gt;
&lt;li&gt;an option to hide/show series on the chart by clicking on its name in the legend.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: basic customization options&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: Canvas&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-gantt-react-charts"&gt;
  &lt;/a&gt;
  Best Gantt React charts
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#gantt-chart-from-react-google-charts"&gt;
  &lt;/a&gt;
  Gantt chart from React google charts
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IA_BjV-5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/84xm9pBJ_9ThtpXhn-ptUwyiM_FnCqnqgutBL6Qk4Mp7Jac2JbEy_84CHFRq-osSmT70THbkle8dDAew9onygp9ORtfg0jkpfbBVAX8WmzP7sxTQqk3y0CyrUxgv2Dks7jkgxR8" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IA_BjV-5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/84xm9pBJ_9ThtpXhn-ptUwyiM_FnCqnqgutBL6Qk4Mp7Jac2JbEy_84CHFRq-osSmT70THbkle8dDAew9onygp9ORtfg0jkpfbBVAX8WmzP7sxTQqk3y0CyrUxgv2Dks7jkgxR8" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;React Google Charts is a wrapper for React that allows using charts developed by Google. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 950 stars on &lt;a href="https://github.com/rakannimer/react-google-charts"&gt;GitHub&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: the last update was in 2018, the community is active because new issues are appearing&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: the support is very poor via the issues page on GitHub&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: yes, but the responsive Gantt chart is hard to read on mobiles&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: excellent documentation with examples and detailed configuration options&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;shows the percent done for every stage when hover it,&lt;/li&gt;
&lt;li&gt;allows to set the chart-specific events.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: two design themes (dark and default), a lot of configuration options for data, arrows, &lt;a href="https://developers.google.com/chart/interactive/docs/gallery/ganttchart#configuration-options"&gt;rows&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: SVG&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascripthtml5-gantt-chart-for-react"&gt;
  &lt;/a&gt;
  JavaScript/HTML5 Gantt chart for React
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QpHPDwVJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/0LlKWJSHoDH52s8jf79H3LVbUWdt5wGzHsfDo_JnrKcNDEgAt0p4GQfewZwYqzNFf1eiovcBNhTIdy2AmvxWoxzmB_z9secH_pNO9HdhKkTQVWwRpd-hKJ86TBf5r7bNs5hphCM" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QpHPDwVJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/0LlKWJSHoDH52s8jf79H3LVbUWdt5wGzHsfDo_JnrKcNDEgAt0p4GQfewZwYqzNFf1eiovcBNhTIdy2AmvxWoxzmB_z9secH_pNO9HdhKkTQVWwRpd-hKJ86TBf5r7bNs5hphCM" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This Gantt chart is a very complex chart with all possible functions and options for this type of chart. That is a full-fledged framework for your app. It has free and paid licenses.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 655 stars on &lt;a href="https://github.com/DHTMLX/gantt"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev activity&lt;/strong&gt;: the last update was in February 2021, there is a community forum with more than 2,5 k topics about the Gantt chart (and even more about other products)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: technical and community support&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile support&lt;/strong&gt;: yes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: a step-by-step guide, API references, comprehensive documentation  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional features&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;auto-scheduling,&lt;/li&gt;
&lt;li&gt;dynamic loading,&lt;/li&gt;
&lt;li&gt;task grouping,&lt;/li&gt;
&lt;li&gt;event handlers,&lt;/li&gt;
&lt;li&gt;and much &lt;a href="https://github.com/DHTMLX/gantt#features"&gt;more&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: fully customizable, you can customize time scale, define grid structure, style taskbars, and more&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawing options&lt;/strong&gt;: Canvas&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-libraries-that-worth-mentioning"&gt;
  &lt;/a&gt;
  Other libraries that worth mentioning
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#rough-charts"&gt;
  &lt;/a&gt;
  Rough Charts
&lt;/h3&gt;

&lt;p&gt;Well-documented charts with a hand-drawn style. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VFy4gzpt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/ZgM3ctSLFk-DgNzFRXWfR5_qqBjpTSE-b0I3xgBv7AetL2rY5bgwdz3flT5SSzV9G2hcHooZ_arHILZbII3jji66RaG5ZX5kHPQnS76TCpNXHL8TON37bE4CkF69zmDp5Qkvbmo" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VFy4gzpt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/ZgM3ctSLFk-DgNzFRXWfR5_qqBjpTSE-b0I3xgBv7AetL2rY5bgwdz3flT5SSzV9G2hcHooZ_arHILZbII3jji66RaG5ZX5kHPQnS76TCpNXHL8TON37bE4CkF69zmDp5Qkvbmo" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bizcharts"&gt;
  &lt;/a&gt;
  BizCharts
&lt;/h3&gt;

&lt;p&gt;A data visualization library from Alibaba, a technology company that specializes in e-commerce, retail, Internet, and technology. The library is great, however, all demos and documentation are available only in the Chinese language.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aXeM7EHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-13-at-15.40.46.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aXeM7EHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-13-at-15.40.46.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-time-series-charts"&gt;
  &lt;/a&gt;
  React time series charts
&lt;/h3&gt;

&lt;p&gt;A charting library for visualization of time series data and network traffic.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ec6S6iAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/ialHnI5K6jOv3lMEHE1qbv-BVsEVKd4oqfJTEmHJSCZoQWW61ePux77BSzh5UHo58NqdKogQ23wGLEL6xRaResxs1GUObbCTcaP7mCPskWZfW6SDlEfJ-lECcQJS08ztq6ngzFY" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ec6S6iAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/ialHnI5K6jOv3lMEHE1qbv-BVsEVKd4oqfJTEmHJSCZoQWW61ePux77BSzh5UHo58NqdKogQ23wGLEL6xRaResxs1GUObbCTcaP7mCPskWZfW6SDlEfJ-lECcQJS08ztq6ngzFY" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-stockcharts"&gt;
  &lt;/a&gt;
  React stockcharts
&lt;/h3&gt;

&lt;p&gt;An opinionated chart dedicated to finance. The library uses several indicators like EMA, SMA out of the box.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FFeR6pNl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/4NdoDa_TeAGIkxBi-u3ankQ0eqtUeXNp48iEH5auXW_9YzltkRNls8cWlzwqy-c4iyipaT5K4ra82quYYmn2Dxu61edL-HbA0ubyDesIoL1sp0UlyQWo4mHzDodi9EEpij745Xw" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FFeR6pNl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/4NdoDa_TeAGIkxBi-u3ankQ0eqtUeXNp48iEH5auXW_9YzltkRNls8cWlzwqy-c4iyipaT5K4ra82quYYmn2Dxu61edL-HbA0ubyDesIoL1sp0UlyQWo4mHzDodi9EEpij745Xw" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s all. We hope that you have found a chart for your app. &lt;/p&gt;

&lt;p&gt;Thanks for reading. &lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#about-flatlogic"&gt;
  &lt;/a&gt;
  About Flatlogic
&lt;/h1&gt;

&lt;p&gt;At Flatlogic, we help businesses to speed up web development with our beautifully designed web &amp;amp; mobile application templates built with &lt;a href="https://flatlogic.com/templates/react"&gt;React&lt;/a&gt;, &lt;a href="https://flatlogic.com/templates/vue"&gt;Vue&lt;/a&gt;, &lt;a href="https://flatlogic.com/templates/angular"&gt;Angular&lt;/a&gt;, &lt;a href="https://flatlogic.com/templates/react-native"&gt;React Native&lt;/a&gt;, and &lt;a href="https://flatlogic.com/templates/bootstrap"&gt;Bootstrap&lt;/a&gt;. During the last several years we have successfully delivered more than 100 custom dashboards and data management solutions to various clients starting from innovative startups to established and respected enterprises.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WpVQsS-Bb3U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;You might also like these articles:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://dev.to/flatlogic/7-open-source-react-navbars-some-pitfalls-and-things-to-consider-2ceg"&gt;7 Open Source React Navbars + Some Pitfalls And Things To Consider&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/flatlogic/12-react-boilerplates-starter-kits-for-developers-in-2021-29ai"&gt;12+ React Boilerplates &amp;amp; Starter Kits For Developers In 2021&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/flatlogic/6-reasons-to-use-reactjs-for-web-development-362a"&gt;6 Reasons To Use ReactJS For Web Development&lt;/a&gt;  &lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Connect API and a Database with Docker Network</title>
      <author>Rajitha Gunathilake</author>
      <pubDate>Wed, 02 Jun 2021 09:58:37 +0000</pubDate>
      <link>https://dev.to/rizkyrajitha/connect-api-and-a-database-with-docker-network-299g</link>
      <guid>https://dev.to/rizkyrajitha/connect-api-and-a-database-with-docker-network-299g</guid>
      <description>&lt;p&gt;Hi everyone,&lt;/p&gt;

&lt;p&gt;This is a tutorial I am going to walk through how to run two docker containers, add them to a new docker network and communicate with each other.&lt;/p&gt;

&lt;p&gt;for this, I am going to create a demo API with nodejs and a Postgres database in containers, and connect them to a docker network.  &lt;/p&gt;

&lt;p&gt;so first I am creating a docker network. docker network is an isolated network layer, which allows you to add containers to it. we can assign these containers' IP addresses inside the network, and let them communicate. host to container port mapping is still available when using a network in a container. docker will create a &lt;code&gt;bridge&lt;/code&gt; by default. &lt;/p&gt;

&lt;p&gt;to create a docker network&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network create &lt;span class="nt"&gt;--subnet&lt;/span&gt; 172.20.0.0/16 dockernetworkdemo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;here I have specified a &lt;code&gt;subnet&lt;/code&gt; with the value &lt;code&gt;172.20.0.0/16&lt;/code&gt; in CIDR format. &lt;/p&gt;

&lt;p&gt;after we run this command we can check it using&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network &lt;span class="nb"&gt;ls&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v1iZZ50j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0e9rlaxyefcfe1pw562n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v1iZZ50j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0e9rlaxyefcfe1pw562n.png" alt="docker network ls"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;we can also use&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network inspect dockernetworkdemo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;to view more details about the network. &lt;/p&gt;

&lt;p&gt;here &lt;code&gt;dockernetworkdemo&lt;/code&gt; is the name of the network we specified then creating the network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qb0ln6-p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71iqy1gg59c0sd2lqtvq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qb0ln6-p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71iqy1gg59c0sd2lqtvq.png" alt="docker network inspect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;now we have the network in place next move to the database. &lt;br&gt;
here we are going to use a Postgres database. &lt;/p&gt;

&lt;p&gt;to spin a Postgres database I will use&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;--name&lt;/span&gt; dockernetworkdemopg &lt;span class="nt"&gt;-p&lt;/span&gt; 6543:5432 &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;123 &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;POSTGRES_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;postgres &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;POSTGRES_DB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;postgres &lt;span class="nt"&gt;-d&lt;/span&gt; postgres:10-alpine
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;in this command,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dockernetworkdemopg&lt;/code&gt; is the name of the container &lt;/p&gt;

&lt;p&gt;&lt;code&gt;-p 6543:5432&lt;/code&gt; will map port &lt;code&gt;5432&lt;/code&gt; in the container to &lt;code&gt;6543&lt;/code&gt; host port. here I have used a different port because I have a Postgres database already running on port &lt;code&gt;5432&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-e POSTGRES_PASSWORD=123 -e POSTGRES_USER=postgres -e POSTGRES_DB=postgres&lt;/code&gt; here &lt;code&gt;-e&lt;/code&gt; flag will pass an environment variable to the container, here we specify the password, user, and database. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;-d&lt;/code&gt; flag will run this container in detached mode. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;postgres:10-alpine&lt;/code&gt; is the name and the tag of the Postgres image we are fetching from the &lt;a href="https://hub.docker.com/"&gt;Docker Hub&lt;/a&gt;. here I have chosen the alpine version because it is lightweight and smaller in size around 20 mb . &lt;/p&gt;

&lt;p&gt;now if we use&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker ps 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;command we can see that our Postgres container is up and running.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kMyVONsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e5q84hqdnbsw6zes155o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kMyVONsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e5q84hqdnbsw6zes155o.png" alt="docker ps"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;next, we are going to connect the Postgres container (&lt;code&gt;dockernetworkdemopg&lt;/code&gt;) to the network (&lt;code&gt;dockernetworkdemo&lt;/code&gt;) we created.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network connect &lt;span class="nt"&gt;--ip&lt;/span&gt; 172.20.0.5 dockernetworkdemo dockernetworkdemopg

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;here we have specified the IP of the connecting container to be &lt;code&gt;172.20.0.5&lt;/code&gt; using &lt;code&gt;--ip&lt;/code&gt; flag.&lt;/p&gt;

&lt;p&gt;now if we run the network inspect command we can see &lt;br&gt;
the container we added. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HCMK1rlL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/807zwjgql4476tcbmkp1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HCMK1rlL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/807zwjgql4476tcbmkp1.png" alt="inspect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;now we'll setup the API. I am using a simple nodejs API, and build a docker image.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/RizkyRajitha"&gt;
        RizkyRajitha
      &lt;/a&gt; / &lt;a href="https://github.com/RizkyRajitha/dockernetworkdemo"&gt;
        dockernetworkdemo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="MD"&gt;
&lt;h1&gt;
Connect API and a Database with Docker Network&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/RizkyRajitha/dockernetworkdemo/master/README.MD/API.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eNCqxORS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/RizkyRajitha/dockernetworkdemo/master/README.MD/API.jpg" alt="network diagram"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/RizkyRajitha/dockernetworkdemo"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;FROM  node:current-alpine3.12&lt;/span&gt;

&lt;span class="s"&gt;WORKDIR /usr/src/app&lt;/span&gt;

&lt;span class="s"&gt;COPY package*.json ./&lt;/span&gt;

&lt;span class="s"&gt;RUN npm i&lt;/span&gt;

&lt;span class="s"&gt;ENV NODE_ENV=production&lt;/span&gt;
&lt;span class="s"&gt;ENV DBURL=postgres://postgres:123@172.20.0.5:5432/postgres&lt;/span&gt;
&lt;span class="s"&gt;ENV PORT=3001&lt;/span&gt;

&lt;span class="s"&gt;COPY . .&lt;/span&gt;

&lt;span class="s"&gt;EXPOSE &lt;/span&gt;&lt;span class="m"&gt;3001&lt;/span&gt;

&lt;span class="s"&gt;CMD [ "npm", "run" , "prod" ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in the dockerfile, we have specified the environment variable &lt;code&gt;DBURL&lt;/code&gt; to the Postgres container we ran earlier.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ENV DBURL=postgres://postgres:123@172.20.0.5:5432/postgres&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;in the connection string &lt;code&gt;postgres://postgres:123@172.20.0.5:5432/postgres&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;172.20.0.5:5432&lt;/code&gt; is the IP address and the port of the Postgres container.&lt;code&gt;172.20.0.5&lt;/code&gt; is the IP address we specified when connecting to the network.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; dockernetworkdemoapi &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;here &lt;code&gt;-t&lt;/code&gt; will set the name and tag to &lt;code&gt;dockernetworkdemoapi:latest&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;before running the images we have to create the database relation so that we can query data using the API . for that I am using a migration script to run some SQL commands. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CzfNni1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82ylkhky01ow4uht5a8n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CzfNni1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82ylkhky01ow4uht5a8n.png" alt="migrate"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;because migration is running in the host machine, connection string is passed as &lt;code&gt;postgres://postgres:123@localhost:6543/postgres&lt;/code&gt; with database IP as &lt;code&gt;localhost&lt;/code&gt; and port as &lt;code&gt;6543&lt;/code&gt; specified when running the Postgres database.&lt;/p&gt;

&lt;p&gt;next, we will run the API image &lt;code&gt;dockernetworkdemoapi:latest&lt;/code&gt; .&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;--name&lt;/span&gt; dockernetworkdemoapicont &lt;span class="nt"&gt;-p&lt;/span&gt; 3001:3001 dockernetworkdemoapi:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in the above command &lt;code&gt;--name&lt;/code&gt; flag specifies the name of the container to be &lt;code&gt;dockernetworkdemoapicont&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-p 3001:3001&lt;/code&gt; to publish the ports with &lt;code&gt;3001&lt;/code&gt; container port to &lt;code&gt;3001&lt;/code&gt; host port. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;dockernetworkdemoapi:latest&lt;/code&gt; is the docker image. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fpJ-QceJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/slr3g9uwqdr7glcocgqi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fpJ-QceJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/slr3g9uwqdr7glcocgqi.png" alt="api run"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;here i ran the container without detached mode so we can see the output.&lt;/p&gt;

&lt;p&gt;now as the final step we are connecting the API (&lt;code&gt;dockernetworkdemoapicont&lt;/code&gt;) container to the &lt;code&gt;dockernetworkdemo&lt;/code&gt; docker network.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network connect dockernetworkdemo dockernetworkdemoapicont
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now if we send a get request to the API we can see that API is able to connect to the database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LMXhc6yN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/obterhot53q4rflpd7qt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LMXhc6yN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/obterhot53q4rflpd7qt.png" alt="api request"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W4FgygVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4tsmx0mpq5waxs71lr0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W4FgygVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4tsmx0mpq5waxs71lr0.png" alt="api log"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;final docker inspect output&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qBHpKT56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vr6cdvyiwwljctch2vtm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qBHpKT56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vr6cdvyiwwljctch2vtm.png" alt="docker inspect "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;illustration of the network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zQXGGuIj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/re53jiv75q9u543yl5g7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQXGGuIj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/re53jiv75q9u543yl5g7.jpg" alt="diagram network"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thanks-for-reading-till-the-end"&gt;
  &lt;/a&gt;
  Thanks for reading till the end 🙌
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#i-value-your-opinions-and-appreciate-you-taking-the-time-to-share-your-thoughts"&gt;
  &lt;/a&gt;
  I value your opinions, and appreciate you taking the time to share your thoughts.
&lt;/h2&gt;

</description>
      <category>docker</category>
      <category>network</category>
      <category>node</category>
      <category>postgres</category>
    </item>
  </channel>
</rss>
