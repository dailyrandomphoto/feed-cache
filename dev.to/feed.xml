<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>IPFS CIDS v.s. CWIDS</title>
      <author>Richard Leddy</author>
      <pubDate>Tue, 03 Aug 2021 07:59:39 +0000</pubDate>
      <link>https://dev.to/rleddy/ipfs-cids-v-s-cwids-3acm</link>
      <guid>https://dev.to/rleddy/ipfs-cids-v-s-cwids-3acm</guid>
      <description>&lt;p&gt;So, I just wrote a program, call it more a prototype, for something like email, but using IPFS. I call it interplanetary-contact for the moment.  You can find a copy of it at &lt;a href="https://www.github.com/copous-world"&gt;copious-world&lt;/a&gt;. I was hoping for email without a server, but for this you still have to invoke the node.js server included there. And, interface is a Svelte application.&lt;/p&gt;

&lt;p&gt;I got it up and working. But, I still have much more to do with it. One things I was doing was using the Mutable File System, MFS which is part of IPFS. And, I was allowing the server to act as an agent for IPFS. Not the worst thing you can do, but not a true player in P2P. Also, the server is being relied upon to make CIDs or fetch them from IPFS. &lt;/p&gt;

&lt;p&gt;So, I need to make CIDs in a browser. This led me to the anatomy of CID. And, as I dug deeper, I wanted more from a CID and less code in the browser, too. So, I came up with a CWID. It's really a minor difference. And, I will explain. But, I will also fill you in on a CID just in case you are not the CID aficionado.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cids"&gt;
  &lt;/a&gt;
  CIDs
&lt;/h3&gt;

&lt;p&gt;A CID is a content identifier. It refers to a unique set of bytes, that is one byte array per CID. It also has information, a prefix, preceding the true identifier telling the programs and programmers the format in which the identifier is being presented. So, the if identifier contains a SHA256 hash of the content, the hash may be presented in a base, such as Hex = base16, or base64url, or btc58, or binary, or other. Another hashing algorithm may be used, and the length will be part of the encoded data.  At the very front of the string is single character indicating the base. All the rest of the characters are in the base.&lt;/p&gt;

&lt;p&gt;So, for a CID not all formats can simply be tacked together by concatenating parts of the CID. Hex can be done that way. But, base64 requires a little more finesse. Before putting the base flag at the front of the string, all the descriptors must be placed into a binary buffer, and the whole buffer gets presented in the base.&lt;/p&gt;

&lt;p&gt;So, for a Hex string using SHA256, prior to putting an 'f' in front of the lower case hex string, the buffer will be arranged as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;version number: 01 - this is the CIDv1&lt;/li&gt;
&lt;li&gt;the hash storage structure:  'raw' = 0x55&lt;/li&gt;
&lt;li&gt;the algorithm: 'sha2-256' = 0x12&lt;/li&gt;
&lt;li&gt;length of the hash buffer: 0x20 = 256bits/8 = 32bytes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The final string will look something like the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;f01551220a9uf9ac9af9ua0c8a9f890a8f0af0...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, if you have a system that is solid in one kind of CID, you can store f01551220 as a constant. But, that works if you are using Hex or another very predictable base.&lt;/p&gt;

&lt;p&gt;If you get good CIDs, you can try them out using the IPFS &lt;a href="https://cid.ipfs.io/"&gt;CID Inspector&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-cid-problem"&gt;
  &lt;/a&gt;
  My CID problem
&lt;/h3&gt;

&lt;p&gt;So, I was thinking why use all that IPFS code to make a CID, and what if I want to use base64? So, I started toying around with CIDs and I came to a point where the idea of concatenating strings and have the SHA256 hash clearly exposed would be nice. But, CIDs are not so amazingly clear with base64.&lt;/p&gt;

&lt;p&gt;So, here is a SHA256 hash of "MUCH TO DO ABOUT IDENTITY" in base64url:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;KSrJ8BfYBJFRaHsFbClKvhwVFeapgccN2QCxShd54GY=&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is the IPFS CID for just this text:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;uAVUSICkqyfAX2ASRUWh7BWwpSr4cFRXmqYHHDdkAsUoXeeBm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, where did the SHA hash go?&lt;/p&gt;

&lt;p&gt;Well, it is in there, but the length of the SHA256 hash, 32 bytes, which you might have seen before in the hex prefix, has started the base64 encoding, changing the rest of the string.&lt;/p&gt;

&lt;p&gt;In fact, the base64 encoding of the prefix, which might never change, is uAVUSIA==. You can see the uAVUSI part. But, the size of hash is not going to change either.&lt;/p&gt;

&lt;p&gt;So, what if I want to get get the hash from the CID. There are times one wants to do that. For instance, you might be verifying a hash in a Merkel tree. So, this would mean that for all hashes, you have to run the CID parser and pull out the bytes. &lt;/p&gt;

&lt;p&gt;But, you could just make a string that keeps the hash exposed. You want the hash, and neither its function nor its accessibility doesn't change from how you pack the string. But, that is  a functional point about the hash doing its job as an indicator. You can make the string harder to access in the sense that the computer works harder to pull it out. But, that's all that will be happening. So, with millions and millions of hashes, the energy bill goes up.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cwid"&gt;
  &lt;/a&gt;
  CWID
&lt;/h3&gt;

&lt;p&gt;Does CWID rhyme with quid? &lt;/p&gt;

&lt;p&gt;Well, I put a program in this repository: &lt;a href="https://github.com/copious-world/CWID"&gt;CWID&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A CWID is not much different than a CID. I just made it so that the prefix is separate from the hash. I put in a Sheffer stroke '|' to indicate the separation. &lt;/p&gt;

&lt;p&gt;So, here is my CWID for "MUCH TO DO ABOUT IDENTITY":&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;uAVUSIA==|KSrJ8BfYBJFRaHsFbClKvhwVFeapgccN2QCxShd54GY=&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Maybe the padding could be taken out and put back in for checking it out. Maybe something other than a Sheffer stroke should be used (it gets URI encoded by some browsers). Or, maybe that is not too big a issue.&lt;/p&gt;

&lt;p&gt;So, if you are making lots of CWIDs, just make a constant out of the prefix and have it waiting in a buffer to write the hash after it. That works well in C++. The JavaScript might not gain too much from that.&lt;/p&gt;

&lt;p&gt;I was wondering if the prefix really had to be in the same base as the hash. I guess if you are on a really small machine that you might only have room for one encoding function. Would that just be a special prefix?&lt;/p&gt;

&lt;p&gt;Well, now that I have this trick, I can revisit Interplanetary-contact and switch to making CWIDs in the browser. Maybe I will have to rename it to Intergalactic-contact.&lt;/p&gt;

&lt;p&gt;You can play with the code.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm test&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;This should launch your default browser and start up http-server to serve the page. You may have to install http-server.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm i http-server@0.8.5&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;The CWID repository is not an npm package. But, you can clone it off of GitHub. Please feel free to raise issues.&lt;/p&gt;

&lt;p&gt;Also, note that this is very new (did it today), and there is very little support for all the different formats. That is, there is just base64url and Hex.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#following-up"&gt;
  &lt;/a&gt;
  Following up
&lt;/h3&gt;

&lt;p&gt;Hope that is entertaining for now. For later, I am planning to discuss identity and how to have email without having email. With the contact system, no email addresses are used. Rather, your description of yourself is turned into a content identifier. But, that's all for now...&lt;/p&gt;

</description>
      <category>cid</category>
      <category>ipfs</category>
      <category>svelt</category>
      <category>cwid</category>
    </item>
    <item>
      <title>New Luos feature: add some research API in the routing table.</title>
      <author>Emanuel Allely</author>
      <pubDate>Tue, 03 Aug 2021 07:44:03 +0000</pubDate>
      <link>https://dev.to/emanuel_allely/new-luos-feature-add-some-research-api-in-the-routing-table-5d1j</link>
      <guid>https://dev.to/emanuel_allely/new-luos-feature-add-some-research-api-in-the-routing-table-5d1j</guid>
      <description>&lt;h3&gt;
  &lt;a href="#feature-add-some-research-api-in-the-routing-table"&gt;
  &lt;/a&gt;
  🆕 Feature: Add some research API in the routing table
&lt;/h3&gt;

&lt;p&gt;When it comes to developing the behavior of your machine, you will have to access some &lt;strong&gt;drivers&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;With Luos, all the resources of your system are resumed into a &lt;a href="https://docs.luos.io/pages/embedded/containers/routing-table.html"&gt;routing_table structure&lt;/a&gt;. This structure allows you to find the resources you need to make your application work. We are constantly updating and optimizing the functions allowing you to easily find the resources you need.&lt;/p&gt;

&lt;p&gt;In this &lt;a href="https://github.com/Luos-io/Luos/releases/tag/1.3.0"&gt;revision 1.3.0 of Luos&lt;/a&gt;, we added index research, giving you the most optimized way of getting resource information.&lt;/p&gt;

&lt;p&gt;More details about this are on the &lt;a href="https://docs.luos.io/pages/embedded/containers/routing-table.html"&gt;routing_table&lt;/a&gt; section of our &lt;a href="https://docs.luos.io"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lmAKVkqu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0izknnpvko5vq2cudbry.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lmAKVkqu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0izknnpvko5vq2cudbry.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>embeddedsystems</category>
      <category>opensource</category>
      <category>luos</category>
      <category>api</category>
    </item>
    <item>
      <title>An introduction to machine learning with Unity ML-Agents</title>
      <author>Joy</author>
      <pubDate>Tue, 03 Aug 2021 07:29:51 +0000</pubDate>
      <link>https://dev.to/joooyz/an-introduction-to-machine-learning-with-unity-ml-agents-3an5</link>
      <guid>https://dev.to/joooyz/an-introduction-to-machine-learning-with-unity-ml-agents-3an5</guid>
      <description>&lt;p&gt;In this tutorial, you'll learn how to get set up with Unity's &lt;a href="https://github.com/Unity-Technologies/ml-agents"&gt;ML-Agents toolkit&lt;/a&gt; and train your own agent using reinforcement learning. No previous experience with Unity will be needed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-unity-mlagents"&gt;
  &lt;/a&gt;
  What's Unity ML-Agents?
&lt;/h2&gt;

&lt;p&gt;ML-Agents is an add-on for the existing Unity platform. It provides researchers and game developers with the ability to build complex 3D environments and train intelligent agents in them — all while leveraging the powerful Unity engine and UI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xKQatHj2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4k6qg740l2y5ec2ay6pq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xKQatHj2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4k6qg740l2y5ec2ay6pq.gif" alt="ML Agents Soccer Twos"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-we-start"&gt;
  &lt;/a&gt;
  Before we start...
&lt;/h2&gt;

&lt;p&gt;If you're looking for some background on reinforcement learning, check out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lilianweng.github.io/lil-log/2018/02/19/a-long-peek-into-reinforcement-learning.html"&gt;A (Long) Peek into Reinforcement Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gocoder.one/blog/rl-tutorial-with-openai-gym"&gt;Getting started with reinforcement learning using OpenAI Gym&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, you'll need to install both Unity and the ML-Agents add-on. &lt;a href="https://github.com/Unity-Technologies/ml-agents/blob/release_18_docs/docs/Installation.md"&gt;Follow the installation instructions here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;You'll want to follow the optional instructions for &lt;a href="https://github.com/Unity-Technologies/ml-agents/blob/release_18_docs/docs/Installation.md#clone-the-ml-agents-toolkit-repository-optional"&gt;cloning the ML-Agents Toolkit Repository&lt;/a&gt;, since this will contain the example environments we'll be playing around with in this tutorial.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-familiar-with-unity-mlagents"&gt;
  &lt;/a&gt;
  Getting familiar with Unity ML-Agents
&lt;/h2&gt;

&lt;p&gt;Once everything's installed, load the sample Unity Project provided by &lt;code&gt;ml-agents&lt;/code&gt;. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In the Unity Hub explorer, go to &lt;code&gt;Projects &amp;gt; Add&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Navigate to wherever you cloned or downloaded the &lt;code&gt;ml-agents&lt;/code&gt; repository&lt;/li&gt;
&lt;li&gt;Select the 'Project' folder, and click 'Select Folder' in the file browser&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The provided Project includes 18+ &lt;a href="https://github.com/Unity-Technologies/ml-agents/blob/release_18_docs/docs/Learning-Environment-Examples.md"&gt;example environments&lt;/a&gt; for us to play with out-of-the-box.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2YOZL0sg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrgl3xm0ju8gum1fwr1x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2YOZL0sg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrgl3xm0ju8gum1fwr1x.png" alt="ML Agents example environments"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Start by loading the provided &lt;a href="https://github.com/Unity-Technologies/ml-agents/blob/main/docs/Learning-Environment-Examples.md#push-block"&gt;PushBlock environment&lt;/a&gt;. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Find the &lt;strong&gt;Project tab&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;Navigate to &lt;strong&gt;Assets &amp;gt; ML-Agents &amp;gt; Examples &amp;gt; PushBlock &amp;gt; Scenes.&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;Double-click the  &lt;code&gt;PushBlock.unity&lt;/code&gt; scene to load it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should see a scene like this show up:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2XYJ4PTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3c0fddks1u3ih0tofkp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2XYJ4PTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3c0fddks1u3ih0tofkp.png" alt="ML Agents Push Block Scene"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;💡 Select the &lt;strong&gt;hand&lt;/strong&gt; tool in the Toolbar and click + drag to move around the view. Hold &lt;strong&gt;Alt (Windows) or Option (macOS) and left click&lt;/strong&gt; to rotate around an object.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;A note on scenes:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In Unity, scenes are assets that contain part of a game or application. In our case, this scene contains 32 'Area' objects. Each 'Area' object contains an 'Agent' object as well as other objects that make up our Push Block environment.&lt;br&gt;
These agents all act independently but share the same model. This is done to speed up training since all agents contribute to training in parallel.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The agents in our scene are already preloaded with a trained model. Click the ▶️ button just above the Scene panel to see them in action.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yxaWuwfQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9sutnm7iyev47girmps.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yxaWuwfQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9sutnm7iyev47girmps.gif" alt="ML Agents push block"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#training-an-agent-to-solve-push-block"&gt;
  &lt;/a&gt;
  Training an agent to solve Push Block
&lt;/h2&gt;

&lt;p&gt;In the Push Block environment, the goal is to push the block to the green goal area. The reward function is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;+0.0025 for every step&lt;/li&gt;
&lt;li&gt;+1.0 if the block touches the goal.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Run in your terminal from the root directory of the &lt;code&gt;ml-agents&lt;/code&gt; repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mlagents-learn config/ppo/PushBlock.yaml &lt;span class="nt"&gt;--run-id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;pb_01
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will start the training process using some default configurations. If you open up the &lt;code&gt;PushBlock.yaml&lt;/code&gt; file at the path  &lt;code&gt;config/ppo/PushBlock.yaml&lt;/code&gt; you'll see:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;behaviors&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;PushBlock&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;trainer_type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ppo&lt;/span&gt;
    &lt;span class="na"&gt;hyperparameters&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;batch_size&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;128&lt;/span&gt;
      &lt;span class="na"&gt;buffer_size&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2048&lt;/span&gt;
      &lt;span class="na"&gt;learning_rate&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.0003&lt;/span&gt;
      &lt;span class="na"&gt;beta&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.01&lt;/span&gt;
      &lt;span class="na"&gt;epsilon&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;
      &lt;span class="na"&gt;lambd&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.95&lt;/span&gt;
      &lt;span class="na"&gt;num_epoch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
      &lt;span class="na"&gt;learning_rate_schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;linear&lt;/span&gt;
    &lt;span class="na"&gt;network_settings&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;normalize&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
      &lt;span class="na"&gt;hidden_units&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;256&lt;/span&gt;
      &lt;span class="na"&gt;num_layers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
      &lt;span class="na"&gt;vis_encode_type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;simple&lt;/span&gt;
    &lt;span class="na"&gt;reward_signals&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;extrinsic&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;gamma&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.99&lt;/span&gt;
        &lt;span class="na"&gt;strength&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.0&lt;/span&gt;
    &lt;span class="na"&gt;keep_checkpoints&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;
    &lt;span class="na"&gt;max_steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2000000&lt;/span&gt;
    &lt;span class="na"&gt;time_horizon&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;64&lt;/span&gt;
    &lt;span class="na"&gt;summary_freq&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can experiment with different hyperparameters by simply modifying this file. You might also notice that there are other algorithms provided, namely PPO, SAC, POCA (developed by the ML-Agents team), and Imitation Learning.&lt;/p&gt;

&lt;p&gt;If you've installed &lt;code&gt;ml-agents&lt;/code&gt; correctly, you'll be greeted with the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gPUh_mDq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ok0ezyrp1ww5618osgyn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gPUh_mDq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ok0ezyrp1ww5618osgyn.png" alt="ML agents load screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now go to your Unity project and click the ▶️ button to start the training process. You can click the ▶️ button to stop the training process. At any time you will be able to resume training by adding the &lt;code&gt;--resume&lt;/code&gt; flag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;mlagents&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;learn&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ppo&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;PushBlock&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yaml&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pb_01&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;resume&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While training, you'll receive information about the training progress from the console. You'll also be able to visualize the training by running in a separate terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;tensorboard&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;logdir&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S4_MVnhl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wvdy1rxckratl7cgm1vi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S4_MVnhl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wvdy1rxckratl7cgm1vi.png" alt="Tensorboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also watch our agent training in real-time within Unity:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FFhGZb2O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvtxiyh57p3qjp7ju8zb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FFhGZb2O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvtxiyh57p3qjp7ju8zb.gif" alt="Untrained push block agent"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our agent starting to learn how to push the block after ~100,000 steps:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--14bKGIfn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxwugula8s16hlszc028.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--14bKGIfn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxwugula8s16hlszc028.gif" alt="Trained push block agent"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once training has been completed, your model will be located at &lt;code&gt;results/pb_01/PushBlock.onnx&lt;/code&gt;. To load this model:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Rename it so you don't confuse it with the provided &lt;code&gt;PushBlock.onnx&lt;/code&gt; model.&lt;/li&gt;
&lt;li&gt;Drag this &lt;code&gt;.onnx&lt;/code&gt; file into the &lt;strong&gt;TFModels&lt;/strong&gt; folder under &lt;strong&gt;Assets &amp;gt; ML-Agents &amp;gt; Examples &amp;gt; PushBlock&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;In the &lt;strong&gt;Project panel&lt;/strong&gt; go to &lt;strong&gt;Assets &amp;gt; ML-Agents &amp;gt; Examples &amp;gt; PushBlock &amp;gt; Prefabs&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Double click the &lt;strong&gt;PushBlockArea prefab&lt;/strong&gt;. &lt;/li&gt;
&lt;li&gt;In the &lt;strong&gt;Hierarchy panel&lt;/strong&gt;, select the &lt;strong&gt;Agent object&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Drag your model into the &lt;strong&gt;Model&lt;/strong&gt; field under &lt;strong&gt;Behavior Parameters&lt;/strong&gt; in the Inspector panel.&lt;/li&gt;
&lt;li&gt;Set inference device to &lt;strong&gt;CPU&lt;/strong&gt; (for most of the models generated with the ML-Agents toolkit, CPU will be faster than GPU)&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note on prefabs:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In Unity, a Prefab is a reusable asset that can be used in a scene. In our case, the Push Block scene we loaded earlier contains 32 instances of the PushBlockArea prefab.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By updating the model in the Prefab instead of the Scene, the settings for all 32 instances of this agent will be updated at once. Click ▶️ as before and watch your trained agent!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RSI3mthu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wxg95ipdnbsk1fe4bt7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RSI3mthu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wxg95ipdnbsk1fe4bt7.gif" alt="Loading a model"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next steps
&lt;/h2&gt;

&lt;p&gt;Unity ML-Agents is a powerful tool that makes it easy to train and experiment with reinforcement learning algorithms. &lt;/p&gt;

&lt;p&gt;However, what makes ML-Agents a powerful toolkit is the ability to leverage Unity's engine and create complex, physics- and graphics-rich 3D environments. Creating your own custom environments will require you to become more familiar with Unity. &lt;/p&gt;

&lt;p&gt;Up next, we'll show you how to create your own custom environment for training reinforcement learning agents within Unity.&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>machinelearning</category>
      <category>tutorial</category>
      <category>ai</category>
    </item>
    <item>
      <title>The 3 most interesting C++ posts of July 2021</title>
      <author>Sandor Dargo</author>
      <pubDate>Tue, 03 Aug 2021 07:06:49 +0000</pubDate>
      <link>https://dev.to/sandordargo/the-3-most-interesting-c-posts-of-july-2021-3mg3</link>
      <guid>https://dev.to/sandordargo/the-3-most-interesting-c-posts-of-july-2021-3mg3</guid>
      <description>&lt;p&gt;Let me share with you 3 interesting &lt;a href="https://dev.to/t/cpp"&gt;#cpp&lt;/a&gt; posts from July.&lt;/p&gt;

&lt;p&gt;I don't take the most popular articles anymore, because I find that while some articles do meet the criteria to add #cpp as a tag, but they are not mostly about C++. So there is a bit of subjectivity to this list. Yet, I try not to include multiple articles from the same author and I don't include the wrap-up of the previous month either ;)&lt;/p&gt;

&lt;p&gt;Feel free to share your favourite one in the comments.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://dev.to/vinitjogani"&gt;Vinit&lt;/a&gt; wrote clearly the most popular post last month. While people love to complain, about the weather, about the system, about programming languages, he expressed why he thinks C++ is awesome. Thank you!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/vinitjogani" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FbGgWMTY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mKHWtgF1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/69914/e76c5f22-3ddf-493a-84dc-c5a3316781d4.jpeg" alt="vinitjogani"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/vinitjogani/c-is-awesome-here-s-why-1be0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;C++ is awesome, here's why...&lt;/h2&gt;
      &lt;h3&gt;Vinit Jogani ・ Jul 24 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#cpp&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#microservices&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#performance&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;&lt;a href="https://dev.to/elvisoric"&gt;Elvis&lt;/a&gt; shared a couple of book recommendations that always comes in handy.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/elvisoric" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ENFv_c---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5uE8bdq2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/506731/9f050cc7-2d51-49f4-b8f1-55da24aaa17c.jpeg" alt="elvisoric"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/elvisoric/c-learning-materials-books-fpd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;C++ Learning Materials - Books&lt;/h2&gt;
      &lt;h3&gt;Elvis Oric ・ Jul 12 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#cpp&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#books&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Last but not least, &lt;a href="https://dev.to/animeshmaru"&gt;Animesh&lt;/a&gt;, didn't write about new features of C++, but old ones that got removed from the language. Remember, it's not only important to keep introducing new features, but we need to keep our language as clean as possible and remove the weed.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/animeshmaru" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--niHrRUIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--bkRFuNYE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/653034/293d1e30-c76b-4135-a9e0-8fcac8e34188.gif" alt="animeshmaru"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/animeshmaru/c-removed-features-f86" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;C++ Removed Features&lt;/h2&gt;
      &lt;h3&gt;Animesh ・ Jul 2 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#cpp&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#news&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Happy coding!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-deeper"&gt;
  &lt;/a&gt;
  Connect deeper
&lt;/h2&gt;

&lt;p&gt;If you liked this article, please &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hit on the like button,
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://eepurl.com/gvcv1j"&gt;subscribe to my newsletter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;and let's connect on &lt;a href="https://twitter.com/SandorDargo"&gt;Twitter&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>bestofdev</category>
      <category>cpp</category>
    </item>
    <item>
      <title>How does the promotion of posts work on DEV?</title>
      <author>InHuOfficial</author>
      <pubDate>Tue, 03 Aug 2021 06:29:49 +0000</pubDate>
      <link>https://dev.to/inhuofficial/how-does-the-promotion-of-posts-work-on-dev-39c</link>
      <guid>https://dev.to/inhuofficial/how-does-the-promotion-of-posts-work-on-dev-39c</guid>
      <description>&lt;p&gt;I have just been having a conversation on a post about how DEV decides what content to promote, so I thought I would ask the question instead of speculating!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What dictates what is promoted on social media?&lt;/li&gt;
&lt;li&gt;What dictates top comments in the newsletter / weekly post?&lt;/li&gt;
&lt;li&gt;What dictates a top 7 post in the newsletter / weekly post?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;For clarity:&lt;/strong&gt; I am talking about things that the DEV team actively promotes, not what is popular in the feeds or how the feeds work.&lt;/p&gt;

&lt;p&gt;I know they say in the top 7s that it is based on traffic or engagement but that doesn't appear to be the case (although I can't see traffic figures to be fair).&lt;/p&gt;

&lt;p&gt;They do seem very much human driven (which is fine but then I am asking how are they chosen)?&lt;/p&gt;

&lt;p&gt;Just wondered how it all worked and what is actually looked at as the criteria? &lt;/p&gt;

&lt;p&gt;Is there a bit of luck involved as to which posts the DEV team happen to read, as I understand you can't possibly read them all?&lt;/p&gt;

&lt;p&gt;I am intrigued so I can learn how to &lt;del&gt;game the system&lt;/del&gt; &lt;strong&gt;write better content that gets promoted&lt;/strong&gt; 😉🤣&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#personal-motivation"&gt;
  &lt;/a&gt;
  Personal motivation
&lt;/h2&gt;

&lt;p&gt;This question was sparked as I released a monster article (one that I believe is truly great quality...for once I didn’t shit post 😜!) that got great engagement but low views. (currently: 224 reactions to 2500 views)&lt;/p&gt;

&lt;p&gt;As an experiment I deliberately wrote a "low effort" post that I released at one of the worst possible times that was designed to be a click magnet / get noticed and....the "low effort" one got promoted! (currently: 55 reactions to 4400 views)&lt;/p&gt;

&lt;p&gt;Not complaining about getting a shout out (thanks DEV) it just seems a bit broken that I can predict what is likely to get shared based on the tags and title rather than the quality of the post!&lt;/p&gt;

&lt;p&gt;I know that increasing visibility of quality content is something the DEV team is working on, so perhaps a final question is how you find that quality content in the first place (suggestions are: "reactions to views" ratio seems like a decent starting place, maybe "number of comments to views" too?)? &lt;/p&gt;

&lt;p&gt;Anyway just asking the question, and from a purely selfish standpoint (until people get sick of me promoting it!) here is the article I believe was "promotion worthy" and the one deliberately designed to get promoted!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-high-effort-post"&gt;
  &lt;/a&gt;
  the "high effort" post
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/101-digital-accessibility-tips-and-tricks-4728" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;101 Digital Accessibility tips and tricks&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ Jul 30 ・ 68 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#the-low-effort-post"&gt;
  &lt;/a&gt;
  the "low effort" post
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/3-general-productivity-tools-you-should-be-using-that-you-possibly-haven-t-heard-of-1h9j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;3 general 🚀 Productivity 🚀 tools  you should be using that you possibly haven't heard of ⁉&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ Aug 1 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Thanks in advance for any clarity on this!&lt;/p&gt;

</description>
      <category>meta</category>
      <category>discuss</category>
    </item>
    <item>
      <title>What is StrictMode in React</title>
      <author>Shubham Khatri</author>
      <pubDate>Tue, 03 Aug 2021 06:18:52 +0000</pubDate>
      <link>https://dev.to/shubhamreacts/what-is-strictmode-in-react-4if</link>
      <guid>https://dev.to/shubhamreacts/what-is-strictmode-in-react-4if</guid>
      <description>&lt;p&gt;&lt;em&gt;As we gain more experience, we constantly evolve our coding practices and design patterns. This is the case with React too.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;React has also gone through many transitions, and as it has progressed, certain practices that were believed to be good in the past are no longer fit for the future roadmap. &lt;/p&gt;

&lt;p&gt;One significant change happened with the release of v16 where it went through a re-write onto React Fiber’s architecture. The major focus was on scheduling (i.e. deciding when a piece of work should be performed while keeping in mind the priorities of different tasks such as animations, UI updates, and so on).&lt;/p&gt;

&lt;p&gt;At about the same time, a new Context API was added in React.&lt;/p&gt;

&lt;p&gt;Also, intending to provide Concurrent Mode in future versions where the rendering phase is split into multiple parts, a lot of change has come about. The start of it saw the introduction of React Hooks, deprecation of certain lifecycle methods, and more.&lt;/p&gt;

&lt;p&gt;This article will look at all the deprecated patterns that &lt;code&gt;StrictMode&lt;/code&gt; in React helps us identify.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-reactstrictmode-and-how-can-we-use-it"&gt;
  &lt;/a&gt;
  What Is React.StrictMode and How Can We Use It?
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;React.StrictMode&lt;/code&gt; is a tool for highlighting potential problems in an application. It works by rendering it as a component encapsulating either part of or your entire application. &lt;code&gt;StrictMode&lt;/code&gt; does not render any visible element in the DOM but enables certain checks and provides warnings in development mode.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: &lt;code&gt;StrictMode&lt;/code&gt; doesn’t run any checks or show warnings in production mode.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can enable &lt;code&gt;React.StrictMode&lt;/code&gt; for your entire application like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StrictMode&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StrictMode&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can similarly enable it in part of your application by wrapping it with &lt;code&gt;&amp;lt;React.StrictMode&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The following functionalities are supported in &lt;code&gt;StrictMode&lt;/code&gt; as of v17 of React:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Identifying legacy string refs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Detecting deprecated &lt;code&gt;findDOMNode&lt;/code&gt; method.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Detecting use of legacy Context API.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Detecting unsafe lifecycle methods that have been deprecated by React.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Detecting unexpected side effects in React components.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#1-identifying-legacy-string-refs"&gt;
  &lt;/a&gt;
  1. Identifying Legacy String refs
&lt;/h3&gt;

&lt;p&gt;Refs in the initial versions of React were assigned using strings. However, there were many problems associated with it, as pointed out by Dan Abramov in &lt;a href="https://github.com/facebook/react/pull/8333#issuecomment-271648615"&gt;this Github Issue&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“It requires that React keeps track of currently rendering component (since it can’t guess &lt;code&gt;this&lt;/code&gt;). This makes React a bit slower.&lt;/p&gt;

&lt;p&gt;It doesn’t work as most people would expect with the “render callback” pattern (e.g. &lt;code&gt;&amp;lt;List renderRow={this.renderRow} /&amp;gt;&lt;/code&gt;) because the ref would get placed on &lt;code&gt;List&lt;/code&gt; for the above reason.&lt;/p&gt;

&lt;p&gt;It is not composable, i.e. if a library puts a ref on the passed child, the user can’t put another ref on it. Callback refs are perfectly composable.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For these reasons and many others, such as the issues with typing refs in TypeScript where they need to be casted, better alternatives were introduced for class components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Callback refs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React.createRef&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#2-detecting-deprecated-raw-finddomnode-endraw-method"&gt;
  &lt;/a&gt;
  2. Detecting deprecated &lt;code&gt;findDOMNode&lt;/code&gt; method
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;ReactDOM.findDOMNode&lt;/code&gt; method was previously used to get the DOM node given the class instance. The usage of &lt;code&gt;findDOMNode&lt;/code&gt; can always be avoided by adding a ref directly to the DOM element instead of the class instance.&lt;/p&gt;

&lt;p&gt;There are two main problems with the &lt;code&gt;findDOMNode&lt;/code&gt; API:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This would only return the first child in a class component instance. However, with the introduction of Fragments in v16, you could return multiple elements from a component instance and this could cause a problem, as you may want to target a wrapper of all the elements or a specific element from the list of elements returned.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;findDOMNode&lt;/code&gt; API was request-only (i.e. it would evaluate and return the result when it was called). If, for instance, the rendered element is conditionally changed in the child, the parent may not know about it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The alternative to &lt;code&gt;findDOMNode&lt;/code&gt; is to use &lt;code&gt;React.forwardRef&lt;/code&gt; and pass on the ref to the desired element in the child or to pass the ref by a separate name (such as &lt;code&gt;innerRef&lt;/code&gt;) and use it from props in the child component to set a ref on the desired element.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-legacy-context-api"&gt;
  &lt;/a&gt;
  3. Legacy Context API
&lt;/h3&gt;

&lt;p&gt;Version 16.3 of React introduced a new Context API. Before this, the old error-prone API was in use and would cause the consumers to not update if a component somewhere in the parent hierarchy stopped re-renders of the children element by implementing &lt;code&gt;shouldComponentUpdate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Even though React continues to support the old API in v16.x, &lt;code&gt;StrictMode&lt;/code&gt; will point out the usages of the old Context API by showing warnings so that these can be moved to the latest version.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-detecting-unsafe-lifecycle-methods"&gt;
  &lt;/a&gt;
  4. Detecting unsafe lifecycle methods
&lt;/h3&gt;

&lt;p&gt;In v16.3.0 of React, some breakthrough changes were made to the React APIs. One of those changes was the deprecation of lifecycle methods like &lt;code&gt;componentWillMount&lt;/code&gt;, &lt;code&gt;componentWillReceiveProps&lt;/code&gt;, and &lt;code&gt;componentWillUpdate&lt;/code&gt;. New lifecycles were also added, such as &lt;code&gt;getDerivedStateFromProps&lt;/code&gt; and &lt;code&gt;getSnapShotBeforeUpdate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Although these lifecycle methods continue to be available in further versions of React and have been renamed with a prefix &lt;code&gt;UNSAFE_&lt;/code&gt; added to them, React may remove them altogether in future versions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why were these lifecycle methods deprecated?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To understand this, we must first know that React typically works in two phases:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Render phase:&lt;/strong&gt; During this phase, React checks what changes need to be made to the DOM. React invokes a &lt;code&gt;render&lt;/code&gt; function during this phase and compares the result with the previous render. The render phase lifecycles included &lt;code&gt;componentWillMount&lt;/code&gt;, &lt;code&gt;componentWillReceiveProps&lt;/code&gt;, &lt;code&gt;componentWillUpdate&lt;/code&gt;, and &lt;code&gt;render&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Commit phase:&lt;/strong&gt; This is the phase during which React actually commits the changes to the DOM and invokes commit phase lifecycles such as &lt;code&gt;componentDidMount&lt;/code&gt; and &lt;code&gt;componentDidUpdate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The commit phase is fast, but the render phase can be slow. To optimize it with the vision of Concurrent Mode, React decided to break the rendering into pieces and pause and resume work to avoid blocking the browser.&lt;/p&gt;

&lt;p&gt;So when they do this, the render phase lifecycles could be called multiple times, and if these contain side effects or incorrect practices, they may cause the application to behave inconsistently. Also, some of these lifecycles encourage bad developer practices. These include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;componentWillMount&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;componentWillReceiveProps&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;componentWillUpdate&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us look at a few of these practices.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#calling-setstate-in-componentwillmount"&gt;
  &lt;/a&gt;
  Calling setState in componentWillMount
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Incorrect&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;componentWillMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;selectedTheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultTheme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Rest of code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Correct approach&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;selectedTheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultTheme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Rest of code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in the snippet above, &lt;code&gt;componentWillMount&lt;/code&gt; was used to set a state before the initial render, but that can easily be refactored by setting the initial state in the constructor or with &lt;code&gt;state&lt;/code&gt; as a class property.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#async-request-in-componentwillmount"&gt;
  &lt;/a&gt;
  Async request in componentWillMount
&lt;/h4&gt;

&lt;p&gt;Having an async fetch request in &lt;code&gt;componentWillMount&lt;/code&gt; is problematic for both server-side rendering as well as the upcoming Concurrent Mode. With server-side rendering, the data fetched in &lt;code&gt;componentWillMount&lt;/code&gt; will not be used. With async rendering, the fetch request may go multiple times.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Incorrect way to fetchData&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ExampleComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;componentWillMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Rest of the code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Correct way to fetchData and update state&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ExampleComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
     &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Rest of the code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is a common misconception that any data fetched inside &lt;code&gt;componentWillMount&lt;/code&gt; will be available before the initial render. This is not true and you should use a loading state to avoid using the data in the initial render and make an API call to fetch data in &lt;code&gt;componentDidMount&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#adding-subscriptions-or-listeners-in-componentwillmount"&gt;
  &lt;/a&gt;
  Adding subscriptions or listeners in componentWillMount
&lt;/h4&gt;

&lt;p&gt;There are two problems with adding subscriptions/listeners in &lt;code&gt;componentWillMount&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;With server-side rendering, the &lt;code&gt;componentWillUnmount&lt;/code&gt; function is not called on the server and hence cleanups will not happen and may result in memory leaks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With async rendering, multiple subscriptions may be attached, as rendering phase lifecycles may be invoked multiple times.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Incorrect way&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ExampleComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;componentWillMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unlisten&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataSource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleDataSourceChange&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;componentWillUnmount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unlisten&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;handleDataSourceChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Correct way&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ExampleComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unlisten&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataSource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleDataSourceChange&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;componentWillUnmount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unlisten&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;handleDataSourceChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The correct way to add and remove listeners is to pair up the &lt;code&gt;componentDidMount&lt;/code&gt; and &lt;code&gt;componentWillUnmount&lt;/code&gt; lifecycle methods.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#updating-state-or-calling-side-effects-on-prop-change"&gt;
  &lt;/a&gt;
  Updating state or calling side effects on prop change
&lt;/h4&gt;

&lt;p&gt;Previously, the &lt;code&gt;componentWillReceiveProps&lt;/code&gt; lifecycle was used for updating state or calling side effects in the children whenever parent props changed. Although there was not much wrong with it, developers had a misconception that this lifecycle was only called when props updated.&lt;/p&gt;

&lt;p&gt;However, it was invoked whenever parent props re-rendered.&lt;/p&gt;

&lt;p&gt;So any invocation of functions or state updates may have inconsistent behaviors if not done properly after comparing previous and current props.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reading-dom-properties-before-an-update"&gt;
  &lt;/a&gt;
  Reading DOM properties before an update
&lt;/h4&gt;

&lt;p&gt;Sometimes you may want to save certain DOM properties, such as scroll position before an update to revert it when the update is applied to prevent the items currently in view for the user from going out of view if new items are added or removed.&lt;/p&gt;

&lt;p&gt;Previously, you would do so in the &lt;code&gt;componentWillUpdate&lt;/code&gt; lifecycle method. However, with async rendering, there may be a gap between the time when &lt;code&gt;componentWillUpdate&lt;/code&gt; is called and when &lt;code&gt;componentDidUpdate&lt;/code&gt; is called, which may lead to inconsistencies if the user interacted with the DOM in a way that actually changed the scroll position, such as resizing the window or actually scrolling more content. &lt;code&gt;getSnapshotBeforeUpdate&lt;/code&gt; is suggested as an alternative to &lt;code&gt;componentWillUpdate&lt;/code&gt; for this reason since it is called just before the DOM mutations are made.&lt;/p&gt;

&lt;p&gt;Now that we have gone through a few reasons as to why the usages were removed, let us get back to the point.&lt;/p&gt;

&lt;p&gt;We may be tempted to think, “Why do we even need some utility to point us to the unsafe functions? We can simply search and update them with the recommended practices.”&lt;/p&gt;

&lt;p&gt;While you are correct and can do so in your own code base, you will not be able to easily identify &lt;em&gt;unsafe&lt;/em&gt; lifecycles within libraries that you use as dependencies in your codebase. &lt;code&gt;StrictMode&lt;/code&gt; will help you point those out too so that you can update them (or replace them with alternatives if the latest versions are not compatible).&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-detecting-unexpected-side-effects"&gt;
  &lt;/a&gt;
  5. Detecting unexpected side effects
&lt;/h3&gt;

&lt;p&gt;As we established in the previous section that React wanted to optimize the rendering phase in the upcoming Concurrent Mode, it decided to break down the rendering phase. As a result, rendering phase lifecycles can be called multiple times, causing unexpected behaviors if side effects are used within them.&lt;/p&gt;

&lt;p&gt;In the latest version of React, these functions include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;constructor&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;getDerivedStateFromProps&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;shouldComponentUpdate&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;render&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;setState&lt;/code&gt; updater functions in both class and functional components&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;functions passed to &lt;code&gt;useMemo&lt;/code&gt;, &lt;code&gt;useState&lt;/code&gt;, &lt;code&gt;useReducer&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While side effects are non-deterministic, &lt;code&gt;StrictMode&lt;/code&gt; helps by making it a little more deterministic to the developer by double-invoking the functions above. This way, if any side effect is incorrectly written in a rendering phase function, it can be in Development Mode itself due to the obvious inconsistencies presented by it.&lt;/p&gt;

&lt;p&gt;For example, if a WebSocket connection is being established in a &lt;code&gt;constructor&lt;/code&gt; function, a double invocation of &lt;code&gt;constructor&lt;/code&gt; in Development Mode can help make it easier to spot, as two connections will be established.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#key-takeaways"&gt;
  &lt;/a&gt;
  Key Takeaways
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;React.StrictMode&lt;/code&gt; can be enabled for part of or the entire application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is only run in Development Mode to provide warnings for legacy ref usage, the deprecated &lt;code&gt;findDOMNode&lt;/code&gt; method, the legacy Context API, unsafe lifecycles, and unexpected side effects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;StrictMode&lt;/code&gt; leads to an intentional double invocation of rendering phase lifecycles and functions to make it easier to spot unexpected side effects implemented in these functions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading.
&lt;/h3&gt;

&lt;p&gt;If you found this article useful and informative, please don't forget to like and share it with your friends and colleagues. &lt;/p&gt;

&lt;p&gt;If you have any suggestions, please feel free to comment. &lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/ShubhamReacts"&gt;Twitter&lt;/a&gt; for more web development content.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>programming</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Stripe payment implementation in Node.js</title>
      <author>Michael Burrows</author>
      <pubDate>Tue, 03 Aug 2021 06:15:23 +0000</pubDate>
      <link>https://dev.to/michaelburrows/stripe-payment-implementation-in-node-js-1857</link>
      <guid>https://dev.to/michaelburrows/stripe-payment-implementation-in-node-js-1857</guid>
      <description>&lt;p&gt;In this tutorial we’ll be building a simple “Buy me a coffee” app using Stripe and Node.js. Before beginning you’ll need to create a Stripe account (free) and have Node.js installed. Once complete you’ll have a fully functioning form that allows users to send you payments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-project"&gt;
  &lt;/a&gt;
  Setting up the project
&lt;/h2&gt;

&lt;p&gt;Open a new terminal window and run the following commands to setup the project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir stripe-node
cd stripe-node
npm init -y
npm install body-parser ejs express nodemon stripe
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will initiate the project using the default options and install the following packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;body-parser&lt;/code&gt; : parse incoming form data and convert into an easy to use object&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ejs&lt;/code&gt; : view engine for rendering static HTML files compatible with Express&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;express&lt;/code&gt; : provides a HTTP server framework for Node.js&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;nodemon&lt;/code&gt; : monitors files for changes and restarts the server automatically&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;stripe&lt;/code&gt; : allows us to use the Stripe.js library as an ES module.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-server"&gt;
  &lt;/a&gt;
  Setting up the server
&lt;/h2&gt;

&lt;p&gt;Create a new &lt;code&gt;index.js&lt;/code&gt; file in the root of the project folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First thing we’ll do is setup the Express server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Server is running...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s now test the setup with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nodemon index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see the ‘Server is running…‘ message logged in the terminal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-frontend"&gt;
  &lt;/a&gt;
  Setting up the frontend
&lt;/h2&gt;

&lt;p&gt;The frontend will consist of two HTML pages. First the page with the form to collect the payment details (&lt;code&gt;index.html&lt;/code&gt;) and a secondary page (&lt;code&gt;success.html&lt;/code&gt;) that we’ll redirect the user to if the payment was successful. These HTML files will need to live inside a &lt;code&gt;views&lt;/code&gt; folder so go ahead and create that before proceeding.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.html&lt;/code&gt; should contain the following markup:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Buy me a coffee&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex justify-center mt-32"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Buy me a coffee&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"/charge"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Email:&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Email"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"amount"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;$&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"amount"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"5"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"payment-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"payment-errors"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Submit&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://js.stripe.com/v3/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"payment.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates input fields for the user to enter their email and payment amount. The empty &lt;code&gt;payment-card&lt;/code&gt; element will be populated with a form to enter credit card information from Stripe.js. This needs to be loaded directly and not bundled into our application to be &lt;a href="https://stripe.com/docs/security/guide#validating-pci-compliance"&gt;PCI compliant&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;success.html&lt;/code&gt; is just a basic file that displays a payment received message:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Buy me a coffee&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Payment Received - Thanks!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next modify the &lt;code&gt;index.js&lt;/code&gt; to include &lt;code&gt;ejs&lt;/code&gt; as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;view engine&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;renderFile&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./views&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Server is running...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the server running test this by going to &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt; in the browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-stripe-functionality"&gt;
  &lt;/a&gt;
  Setting up the Stripe functionality
&lt;/h2&gt;

&lt;p&gt;Create a &lt;code&gt;payment.js&lt;/code&gt; file in the views folder. You’ll need to &lt;code&gt;replace pk_test_XXXXXXXXXXXXXXXXXXXX&lt;/code&gt; with your publishable key which can be found in the Stripe dashboard &lt;a href="https://dashboard.stripe.com/apikeys"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Stripe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pk_test_XXXXXXXXXXXXXXXXXXXX&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;card&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;card&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;hidePostalCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;card&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#payment-card&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#payment-errors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To complete the &lt;code&gt;payment.js&lt;/code&gt; setup we’ll add an event listener to the form that creates a token in a hidden input field which is used to encrypt the credit card details when the data is sent to Stripe for processing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;card&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripeToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;stripeToken&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;stripeToken&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stripeToken&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;stripeToken&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stripeToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To complete the project update &lt;code&gt;index.js&lt;/code&gt; to create the customer and process the payment. As with the publishable key you’ll need to replace &lt;code&gt;sk_test_XXXXXXXXXXXXXXXXXXXX&lt;/code&gt; with your secret key found in the Stripe dashboard:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bodyParser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body-parser&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stripe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sk_test_XXXXXXXXXXXXXXXXXXXX&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;view engine&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;renderFile&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./views&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bodyParser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urlencoded&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;extended&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}))&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/charge&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customers&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;          
          &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stripeToken&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;customer&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charges&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;usd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
          &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success.html&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;        
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Server is running...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For testing purposes you can use “4242424242424242” as the credit card number, any expiry date in the future and any 3 numbers for the CVC. If everything has been setup correctly when you enter this information you’ll be redirected to the successful payment page.&lt;/p&gt;

&lt;p&gt;That’s all for this tutorial. Hopefully it has given you an understanding of how to process Stripe payments in a Node.js application. There are many more configurable options available not used in this tutorial. To discover all these options the offical &lt;a href="https://stripe.com/docs/js"&gt;Stripe.js documentation&lt;/a&gt; is an excellent resource.&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Add Access logs to S3</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 03 Aug 2021 05:34:35 +0000</pubDate>
      <link>https://dev.to/this-is-learning/add-access-logs-to-s3-29bd</link>
      <guid>https://dev.to/this-is-learning/add-access-logs-to-s3-29bd</guid>
      <description>&lt;p&gt;Like websites we may need to add logs into our S3 bucket so that we can see what happens who added or deleted a certain file. This is very useful when we create a static website using S3 or we need logs for suspicious activity or find why we cannot access a file etc. When we add logging to our S3 bucket all our logs are stored in a different bucket in S3 and analyze them using various tools.&lt;/p&gt;

&lt;p&gt;Now we will add access logs to S3 bucket.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To add server access logs create a new bucket like we did in the previous articles.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hu19aNMO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sbrefa6wp3n9vpq22r7l.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then in your first bucket go to properties and scroll down to reach access logging.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Yd1p4pl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o668l9byd9sokfm5fng1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Yd1p4pl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o668l9byd9sokfm5fng1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on edit &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z6Bw5rPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3upopf0tw1aut2whb3t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z6Bw5rPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3upopf0tw1aut2whb3t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enable the setting then in the below portion click on browse S3 and select the new bucket we created for logging.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1MFxpTAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/blori372pqri2m6zzap6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1MFxpTAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/blori372pqri2m6zzap6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the bucket name you can add a prefix I'm adding a logs prefix &lt;code&gt;logs&lt;/code&gt; to my bucket and save changes&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IeMk3LNW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/upy3546r5dasgu8nf0wc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IeMk3LNW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/upy3546r5dasgu8nf0wc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xwql-jOV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xdbi3hil9953op60w1vg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xwql-jOV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xdbi3hil9953op60w1vg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This enables S3 logging in our bucket.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now you can check that this generates logs by accessing our files in S3. Remember it takes a few hours for S3 to generate logs so don't worry&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now you can query these logs using Athena service in AWS by  SQL very easily I'm attaching the link to the &lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/analyze-logs-athena/"&gt;documentation where you can see how to use Athena to analyze your S3 logs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have already learnt how to use S3. So now starting this article we are checking that how to make your S3 buckets more robust by logging. In the next article we will study how to Enable automatic backups using S3 replication so that anything cannot be deleted by mistake.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Complete Introduction to CSS Grid 📊</title>
      <author>CSS MASTER</author>
      <pubDate>Tue, 03 Aug 2021 05:21:40 +0000</pubDate>
      <link>https://dev.to/learn_css/complete-introduction-to-css-grid-joa</link>
      <guid>https://dev.to/learn_css/complete-introduction-to-css-grid-joa</guid>
      <description>&lt;p&gt; The CSS grid is a newer standard that makes it easy to build complex responsive layouts. It works by turning an HTML element into a grid, and lets you place child elements anywhere within.&lt;/p&gt;

&lt;p&gt;Life was tough before Flexbox and Grid came, centering a div was so troublesome that it became a meme.&lt;/p&gt;

&lt;p&gt;But fear no more, Flexbox and Grid have solved all our problems and things are so much easier now.&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;span&gt;&lt;a href="https://www.codelivly.com/an-introduction-to-css-grid-layout/"&gt;Complete Introduction to CSS Grid&lt;/a&gt;&lt;/span&gt;&lt;/b&gt; 📊&lt;/p&gt;

</description>
      <category>css</category>
    </item>
    <item>
      <title>Twitter Bot on AWS Serverless | Mohamed Fayaz</title>
      <author>Mohamed Fayaz</author>
      <pubDate>Tue, 03 Aug 2021 05:20:01 +0000</pubDate>
      <link>https://dev.to/aws-builders/running-twitter-bot-on-aws-serverless-mohamed-fayaz-b9</link>
      <guid>https://dev.to/aws-builders/running-twitter-bot-on-aws-serverless-mohamed-fayaz-b9</guid>
      <description>&lt;p&gt;Sharing my experience of how I am running the Twitter Bot on AWS for almost free using AWS serverless technologies. &lt;/p&gt;

&lt;p&gt;Social Bot is nothing but a program that mimics the behaviours of a user based on the rules you set. Twitter is one of the BOT friendly platforms where you can automate a lot of things from liking, re-posting, follow, unfollow and messaging using their API. &lt;/p&gt;

&lt;p&gt;Before we get down to the nitty-gritty of how it works, there is an &lt;a href="https://help.twitter.com/en/rules-and-policies/twitter-automation"&gt;official guidelines&lt;/a&gt; from Twitter to follow whenever we create a bot.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-bot-account"&gt;
  &lt;/a&gt;
  My Bot account
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Op8UyAIl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1269107326566281217/HZbs-SyF_normal.jpg" alt="Grepnetics profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Grepnetics
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @grepnetics
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Artificial intelligence, machine learning bolsters Exactech joint replacement system - Becker's Orthopedic &amp;amp;amp; Spine&lt;br&gt;&lt;br&gt;Read more here: &lt;a href="https://t.co/KjeZwQPwNa"&gt;ift.tt/35Vs68b&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/ArtificialIntelligence"&gt;#ArtificialIntelligence&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/AI"&gt;#AI&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/DataScience"&gt;#DataScience&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Python"&gt;#Python&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/MachineLearning"&gt;#MachineLearning&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/BigData"&gt;#BigData&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/DeepLearning"&gt;#DeepLearning&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/NLP"&gt;#NLP&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Robots"&gt;#Robots&lt;/a&gt; #
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:17 PM - 28 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1409561715813982212" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1409561715813982212" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1409561715813982212" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I've created this account last year June 2020, but it outperformed my other account which I have been using for 10+ years with a lot more followers, tweets and engagements so the same content I post in this account reaches much more audience than the actual one. &lt;/p&gt;

&lt;p&gt;To create your bot all we need is a Twitter account and an AWS account to host your application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-overview"&gt;
  &lt;/a&gt;
  Solution Overview
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZvfaYW2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cj6j0tegx9uso6sr06xf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZvfaYW2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cj6j0tegx9uso6sr06xf.jpg" alt="TwitterBOT"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-lambda"&gt;
  &lt;/a&gt;
  AWS Lambda
&lt;/h3&gt;

&lt;p&gt;Lambda is a serverless compute service from AWS that let you write and run your own code without managing any servers. Lambda comes with 1 million execution and 400,000 GB-seconds of compute time for free. It also supports multiple languages such as Node.js, Python, Java and many more. I've used Python to develop this bot which will run multiple times a day to source the best content based on the keywords and hashtags. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-secrets-manager"&gt;
  &lt;/a&gt;
  AWS Secrets Manager
&lt;/h3&gt;

&lt;p&gt;Secrets Manager helps to keep our secret keys secure within AWS. The cost is based on the number of keys so it may cost you ~$1 to keep our Twitter access keys securely.&lt;/p&gt;

&lt;p&gt;Alternatively, you can also keep the keys in your Lambda environment variable which won't cost you anything, but never store your keys straight in the code as a best practice.    &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-dynamodb"&gt;
  &lt;/a&gt;
  AWS DynamoDB
&lt;/h3&gt;

&lt;p&gt;DynamoDB is a NoSQL database from AWS which allows you to store the data in key-value pairs. I am using this to store the metadata of the content I shared on my Twitter to avoid repetitive content in my feed. Since am using on-demand, the cost is based on the read and writes so in my case it's costing me less than $1 per month. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-cloudwatch"&gt;
  &lt;/a&gt;
  AWS CloudWatch
&lt;/h3&gt;

&lt;p&gt;CloudWatch is a monitoring and observability tool which provides data to make actionable insights to monitor our application. I am writing all the Lambda logs back to CloudWatch to keep track of how it is progressing. We can run this within the free tier so there is no additional cost to keep these logs. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#slack"&gt;
  &lt;/a&gt;
  Slack
&lt;/h3&gt;

&lt;p&gt;Lastly, I am using Slack to monitor the content it shares. Now you may have a question why can't we directly use the Twitter app to check now and then, having that comes as a message in Slack is so much more comfortable than checking my Twitter feed. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final words
&lt;/h2&gt;

&lt;p&gt;Serverless architectures provide great benefits, but mainly the scalability and the cost. There are paid services to manage your Twitter content, but to run our own is nearly free using a platform like AWS. Similarly, there are several applications and use-cases you can develop using serverless technologies. &lt;/p&gt;

</description>
      <category>twitter</category>
      <category>python</category>
      <category>aws</category>
    </item>
    <item>
      <title>Developer Communities Every Developer should Join According to your niche.</title>
      <author>lary mak</author>
      <pubDate>Tue, 03 Aug 2021 04:52:15 +0000</pubDate>
      <link>https://dev.to/larymak/developer-communities-every-developer-should-join-according-to-your-niche-1a6b</link>
      <guid>https://dev.to/larymak/developer-communities-every-developer-should-join-according-to-your-niche-1a6b</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Alone, we can do so little; together, we can do so much. &lt;br&gt;
                      Helen Keller &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Over the past few years we have seen lots of developer communities come into the rise with different goals and missions, but you will agree with me that they all have one thing in common, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Help each other learn,&lt;/li&gt;
&lt;li&gt;Share ideas&lt;/li&gt;
&lt;li&gt;Offer support to newbies and&lt;/li&gt;
&lt;li&gt;freely interact.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have different types of communities, front-end based communities, back-end based, specific language-based and we also have general communities which include all the above under one platform.  &lt;/p&gt;

&lt;p&gt;Benefits offered by these communities are 'on another level' as I would say. They have helped people start from scratch to landing jobs in big tech companies like Google and Microsoft, they have raised mentors, helped improve people's code writing and reviewing skills, in other words, it has made programming easier to learn and master. &lt;/p&gt;

&lt;p&gt;Now to better help those looking for a good community to join according to your skills, I gathered a few of the top communities depending on your skills either front-end, back-end, blogging, and more to help you get started and meet your fellow developers. &lt;/p&gt;

&lt;p&gt;I may have not included all the communities out there because we have a ton of them, be free to add them up in the comment section to help others out: &lt;/p&gt;

&lt;p&gt; Web Development &amp;amp; Design Communities  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.webdeveloper.com/"&gt;Web Developer Forum&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u_o_06Qy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/inr0xpcff1za6moc0fsg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_o_06Qy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/inr0xpcff1za6moc0fsg.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a simple web development and programming site categorized into sections where web developers and designers learn and share how to design websites, build mobile applications, create WordPress themes, write code, HTML, JavaScript etc.. &lt;br&gt;
It is easy to use, it covers almost all questions on the sections. It is a great place for developers starting out on web development. &lt;br&gt;
To start a discussion all you need to do is sign up and you are good to go.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.sitepoint.com/community/"&gt;The SitePoint community&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CRLQXmfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wwmzu7mp8e7hnjbuejki.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CRLQXmfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wwmzu7mp8e7hnjbuejki.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It helps find answers on questions about CSS, HTML, marketing, PHP, JavaScript, design and UX, database, web hosting and more.&lt;br&gt;
The good thing about this community is that, it does not only talk about finding solutions, it also has books on web development, articles on these topics, and more although it is under premium, here is the catch You get to have a 7-day free trial, with these days you can download a lot of resources.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.talkgraphics.com/"&gt;Talk Grapics&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RnfRJypJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vywunnkt6xjynf4gjhzx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RnfRJypJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vywunnkt6xjynf4gjhzx.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
Just as the name says it, this is a community of graphic designers and 3D artists.&lt;br&gt;&lt;br&gt;
Here you will find latest and trending topics at the top of the list, when done with a forum mark it as read. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.coffeecup.com/forums/"&gt;CoffeeCup&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Yb66KJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/12b3uo1i2154kf86qugm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Yb66KJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/12b3uo1i2154kf86qugm.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
Just a little bit of history, It was started back in 1996 with a simple HTML editor inside a coffee shop. &lt;br&gt;
It helps designers create better sites, it's main goal is to make lives easier by providing customers with great yet affordable software &lt;br&gt;
It's user forum is where you get to post different questions and find solutions to other questions. To join an on going conversation all you need is to create an account. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bootstrap-slack.herokuapp.com/"&gt;Bootstarp&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5xH-QNkP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpfzx4qs60hq9pyjf2wx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5xH-QNkP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpfzx4qs60hq9pyjf2wx.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
Bootstrap is a popular HTML, CSS and JS framework for UI components and interactions. The community focuses and discusses on the latest trends and tips. &lt;br&gt;
It is good for building responsive sites with the help of popular front-end component library. &lt;br&gt;
You can either join the slack channel or subscribe to their official blog. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.indiehackers.com/"&gt;IndieHackers&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G_k_mUmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2ww81ifob22vecvo7jx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G_k_mUmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2ww81ifob22vecvo7jx.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is an emerging online community of web devs, It adds up as a platform where founders of successful startups share their stories and experience with others. &lt;br&gt;
It provides a forum where each member is able to share experience, explore ideas and offer support to upcoming developers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.dailyui.co/"&gt;Daily UI&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zVhdd7rM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oonrvk6xxxjuwrswt9y5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zVhdd7rM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oonrvk6xxxjuwrswt9y5.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It a series of daily UI challenges, design inspirations and rewards to help you become a better designer within a period of 100 days, their amazing support will motivate you to keep learning.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt; Blogging Communities  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/"&gt;Dev.to&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7BIrKD4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jg6j15e4p0sjlvos18od.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7BIrKD4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jg6j15e4p0sjlvos18od.PNG" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is an open source community of more than 600k developers where they share, learn nd stay updated with latest technology trends. It has resources like podcasts articles, Videos, Real-world examples, Hackathons etc. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news"&gt;Freecode Camp&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GrEcBsom--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cof79ebwkdybsbo73dnb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GrEcBsom--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cof79ebwkdybsbo73dnb.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a non-profit platform to learn and practice coding, but here is the catch, they also have a blogging platform where developers contribute by sharing knowledge through writing articles, this has a chat forum where you meet other developers too and share ideas, solve problems and errors and enhance on your knowledge. &lt;br&gt;
Want to write for freecode camp this article will help you know how to get started: &lt;a href="https://www.freecodecamp.org/news/how-to-write-for-freecodecamp/"&gt;Article&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://hashnode.com/"&gt;Hashnode&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NGja_Run--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1of28yk5ew5shv2tvf9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NGja_Run--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1of28yk5ew5shv2tvf9.PNG" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a global community of developers, where you can share ongoing projects, ask questions, suggest ideas, and help other solve their problems. It is a free platform that helps you stay connected with latest trends.&lt;br&gt;&lt;br&gt;
You are able to publish blogs, get your own sub-domain or add your own, follow your favorite author and even back up your blog on your GitHub also participate on hackathons and win prizes. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://hackernoon.com/"&gt;Hackernoon&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vnrx-FGR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ttyn4jjittp9f512jp2a.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vnrx-FGR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ttyn4jjittp9f512jp2a.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
It is a site where you can read, write, and publish articles visible internationally, it's a community of 15k + writers and over 3 million readers. &lt;br&gt;
Top tech companies use this platform to share their expertise. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.codenewbie.org/"&gt;Code Newbie&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gxselfMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghpe2gu5p3w3upp4vsxq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gxselfMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghpe2gu5p3w3upp4vsxq.PNG" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It started out as a weekly twitter chat providing needed support to people learning to code. Since then it has grown into a supportive community of developers, it resamples Dev.to, where you can publish your articles too. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bloggingfordevs.com/"&gt;Blogging for Devs&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nB1Mf2kq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/baod3tst912vvcs1eir6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nB1Mf2kq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/baod3tst912vvcs1eir6.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a private community for developers, freelancers and tech creators growing their audience through writing online. The only thing is that it's not free, you need to pay a fee to be a part of it. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt; General Communities  &lt;br&gt;
Remember earlier I had mentioned that we have communities that have all these under one roof, in this section we will have a look at some of them. &lt;br&gt;
The only thing you need to do is once registered as a member you need to choose your category and you will be good to go: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://stackoverflow.com/"&gt;Stack Overflow&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wkvV2klm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ev4i8f0ewemzez8qb3o0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wkvV2klm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ev4i8f0ewemzez8qb3o0.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
For anyone who is into programming, Stack Overflow is a must join the community to learn, share and build. &lt;br&gt;
It hosts developers from around the globe, where they come to seek answers to their coding challenges and ask questions about their errors. &lt;br&gt;
He is the amazing part, according to their analysis a question is posted every 12 seconds, and it is always answered by developers who already know how to solve it. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://stackexchange.com/"&gt;Stack Exchange&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--edVo7bQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ciffc9a0mr8ly5lj65j2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--edVo7bQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ciffc9a0mr8ly5lj65j2.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It was launched in 2010, by the Stack Exchange network.&lt;br&gt;
It comprises 173 Q&amp;amp;A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.reddit.com/"&gt;Reddit&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cZQeLzXU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7i3tws3j89k8ffk0ypw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cZQeLzXU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7i3tws3j89k8ffk0ypw7.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a global community with a lot of sub-groups, endless conversations going on. &lt;br&gt;
It has nearly all trending topics, opportunities for meet ups, how to for debugging and also job listings. &lt;br&gt;
Now to help you get started on the right path we have some of the common sub-groups where you can subscribe and get notified on updates: &lt;br&gt;
&lt;a href="https://www.reddit.com/r/webdev"&gt;WebDev&lt;/a&gt;, &lt;a href="https://www.reddit.com/r/reactjs"&gt;ReactJS&lt;/a&gt;, &lt;a href="https://www.reddit.com/r/Python/"&gt;Python&lt;/a&gt;, &lt;a href="https://thehiveindex.com/communities/r-javascript/"&gt;Javascript&lt;/a&gt; and more others.. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w6Ug5iGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/co4lv80q3ldlapkl8j0m.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w6Ug5iGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/co4lv80q3ldlapkl8j0m.PNG" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a very popular name amongst developers. The Community Forum is the place where you as a developer, can share ideas and follow up on discussions. &lt;br&gt;
However, users can easily share their code, making it an interesting programming and coding community. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.digitalocean.com/community"&gt;Digital Ocean&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PDsNEhGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6eu5ovxrtb1nwjpbd5d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PDsNEhGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6eu5ovxrtb1nwjpbd5d.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a place where developers can find or lend support and contribute to the community. The community provides guides, tutorials, trends for developers and a Q/A session and much more.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt; Specific Language Communities &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.python.org/community/"&gt;Python&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.oracle.com/java/technologies/javacommunity.html"&gt;Java&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cppalliance.org/#:~:text=Empower%20The%20C%2B%2B%20Community&amp;amp;text=C%2B%2B%20is%20not%20only%20popular,language%20that%20anyone%20can%20learn.&amp;amp;text=Evolves%20C%2B%2B%20through%20expertly%20maintained,programming%20community%20and%20educational%20env"&gt;C/C++&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://csharpforums.net/"&gt;C#&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://phpcommunity.org/"&gt;PHP&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://kotlinlang.org/community/"&gt;Kotlin&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://swift.org/community/#communication"&gt;Swift&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.lua.org/community.html"&gt;Lua&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://thehiveindex.com/communities/ios-developers/"&gt;iOS Developers&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://thehiveindex.com/communities/android-united/"&gt;Android Developers&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://forum.xda-developers.com/?ref=thehiveindex"&gt;Mobile Devellopers&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;I think you will agree with me is that not all developer communities are the same, although we have this now we can be assured to have others in the near future. &lt;/p&gt;

&lt;p&gt;But what they will all share are the community guidelines, no matter which you join you have to be respectful to each other. &lt;/p&gt;

&lt;p&gt;Each community has something to offer, take a look at the one that falls into your expertise and meet your fellow developers. &lt;/p&gt;

&lt;p&gt;Got another community you think is worth sharing, add it in the comments below and we will visit it. &lt;/p&gt;

&lt;p&gt;Support Me by &lt;a href="https://www.buymeacoffee.com/lary"&gt;Buying Me Tea&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Connect With me at &lt;a href="https://twitter.com/larymak1"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.instagram.com/nextgencoders/"&gt;Insta&lt;/a&gt; | &lt;a href="https://www.youtube.com/channel/UCrT1ARRZfLOuf6nc_97eXEg"&gt;YouTube&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/hillary-nyakundi"&gt;LinkedIn&lt;/a&gt;  | &lt;a href="https://github.com/larymak"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do share your valuable opinion, I appreciate your honest feedback!  &lt;/p&gt;

&lt;p&gt;Enjoy Coding ❤&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>60+ Awesome UI and UX resources for Developers and Designers 2021</title>
      <author>coderwatchHQ</author>
      <pubDate>Tue, 03 Aug 2021 04:51:00 +0000</pubDate>
      <link>https://dev.to/coderwatch/60-awesome-ui-and-ux-resources-for-developers-and-designers-2021-202</link>
      <guid>https://dev.to/coderwatch/60-awesome-ui-and-ux-resources-for-developers-and-designers-2021-202</guid>
      <description>&lt;p&gt;Yearning organizers, genuine solopreneurs, and sprouting visual creators all need a convincing proficient brand — or if nothing else the abilities and assets expected to foster one. &lt;/p&gt;

&lt;p&gt;Tragically, in case you're new to the visual communication world, this implies swimming through a confounding cluster of picture altering programming, stock picture locales, plan administrations, and considerably more. &lt;/p&gt;

&lt;p&gt;To save you time, we've accumulated the best visual communication assets to help you construct a bespoke brand that separates you from your rivals. &lt;/p&gt;

&lt;p&gt;Regardless of whether you're an originator searching for better visual communication apparatuses or an entrepreneur searching for practical programming, you'll track down the best paid and free visual UI and UX assets.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#fancy-fonts"&gt;
  &lt;/a&gt;
  &lt;a href="https://fancy-fonts.com/"&gt;Fancy Fonts&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZQudKnBx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451328765/Bsb0sSN9f.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZQudKnBx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451328765/Bsb0sSN9f.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Starting this list with one of my favourite resources of fonts. That is -&amp;gt; Fancy Fonts. Find Beautiful Free Fonts—Script, Display, Calligraphy, Sans, Serif, Handwritten, Retro, and more—Download Now—Its FREE.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#motion-places"&gt;
  &lt;/a&gt;
  &lt;a href="https://motionplaces.com"&gt;Motion Places&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5DUG4F6v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451377249/x_PU5_3dM.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DUG4F6v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451377249/x_PU5_3dM.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free Stock Video Footage by Motion Places. They offer a curated collection of beautiful footage you can use for your projects. Download our clips for free in HD quality, or purchase 4K clips for $99.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fontjoy"&gt;
  &lt;/a&gt;
  &lt;a href="https://fontjoy.com"&gt;Fontjoy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nqspCjb5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451406457/kOqG39BLu.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nqspCjb5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451406457/kOqG39BLu.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fontjoy helps designers choose the best font combinations. Mix and match different fonts for the perfect pairing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shotsnapp"&gt;
  &lt;/a&gt;
  &lt;a href="https://shotsnapp.com"&gt;Shotsnapp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cNAYa89C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451636111/cQGLNWMaS.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cNAYa89C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451636111/cQGLNWMaS.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create beautiful device mockup image from the screenshots or design of your mobile app and websites. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remix"&gt;
  &lt;/a&gt;
  &lt;a href="https://remixicon.com"&gt;Remix&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MlkM5t5H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451653393/nNtEQyMOV.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MlkM5t5H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451653393/nNtEQyMOV.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remix Icon is a set of open source neutral style system symbols elaborately crafted for designers and developers. All of the icons are free to use for both personal and commercial.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#who-can-use"&gt;
  &lt;/a&gt;
  &lt;a href="https://whocanuse.com"&gt;Who can use&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YGcGlKHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451679562/Nr40O437T.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YGcGlKHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451679562/Nr40O437T.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find out who can use your color combination. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#colorsafe"&gt;
  &lt;/a&gt;
  &lt;a href="https://colorsafe.co"&gt;ColorSafe&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2vF_CcwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451730362/iIdq1X4id.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2vF_CcwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451730362/iIdq1X4id.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Empowering designers with beautiful and accessible color palettes based on WCAG Guidelines of text and background contrast ratios.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vexels"&gt;
  &lt;/a&gt;
  &lt;a href="https://vexels.com"&gt;Vexels&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_6AmXQNC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451779458/glEW6Lxph.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_6AmXQNC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451779458/glEW6Lxph.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Graphic Resources for Commercial &amp;amp; Merch Use ✓ Vector image illustrations, logos, design templates &amp;amp; more ✓ T-Shirt Designs &amp;amp; other Merch  ✓ PNG, AI, SVG, JPG, PDF&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#open-doodles"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.opendoodles.com/"&gt;Open Doodles&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WK5rMojz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451946734/rVR7pITib.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WK5rMojz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451946734/rVR7pITib.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A library of sketchy illustrations of people free for personal and commercial use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#videvo"&gt;
  &lt;/a&gt;
  &lt;a href="https://videvo.net/stock-video-footage"&gt;Videvo&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e25Q5I4V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451902562/Bswj7KhFD.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e25Q5I4V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451902562/Bswj7KhFD.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download free stock video footage with 4k and HD clips available. Click here to download royalty-free licensing videos from Videvo today.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inkscape"&gt;
  &lt;/a&gt;
  &lt;a href="https://inkscape.org"&gt;Inkscape&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tUXvZCkS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451965475/xuvRK5B3-.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tUXvZCkS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451965475/xuvRK5B3-.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Inkscape is professional quality vector graphics software which runs on Linux, Mac OS X and Windows desktop computers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ionicons"&gt;
  &lt;/a&gt;
  &lt;a href="https://ionicons.com"&gt;Ionicons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TjNfpiKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451985394/V-F9Hl7ya.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TjNfpiKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451985394/V-F9Hl7ya.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ionicons is an open-sourced and MIT licensed icon pack.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#drawkit"&gt;
  &lt;/a&gt;
  &lt;a href="https://drawkit.io"&gt;DrawKit&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0g71F8pM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452009870/wBUAbFxCQ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0g71F8pM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452009870/wBUAbFxCQ.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free and premium vector SVG illustrations for you to use on your next project, no attribution required! Vector illustrations, packs, icons and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dafonts"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.dafont.com/"&gt;DaFonts&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cGZdY5g4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452038293/pixE8Y97Gq.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGZdY5g4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452038293/pixE8Y97Gq.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Archive of freely downloadable fonts. Browse by alphabetical listing, by style, by author or by popularity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-noun-project"&gt;
  &lt;/a&gt;
  &lt;a href="https://thenounproject.com"&gt;The Noun Project&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nYgIQ1WY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452078802/H3XiJ9xaV7.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nYgIQ1WY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452078802/H3XiJ9xaV7.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Noun Project features the most diverse collection of icons and stock photos ever. Download SVG and PNG. Browse over 3 million art-quality icons and photos.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#freepik"&gt;
  &lt;/a&gt;
  &lt;a href="https://freepik.com"&gt;Freepik&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ga3RHSIS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454940060/pPvuJ1GIWD.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ga3RHSIS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454940060/pPvuJ1GIWD.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Millions of Free Graphic Resources. ✓ Vectors ✓ Stock Photos ✓ PSD ✓ Icons ✓ All that you need for your Creative Projects&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gravit-designer"&gt;
  &lt;/a&gt;
  &lt;a href="https://designer.io"&gt;Gravit Designer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L_2aspDC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452190848/3mn8nHscJ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L_2aspDC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452190848/3mn8nHscJ.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create graphics, design logos and icons, edit images illustrations &amp;amp; presentations, all for free. Online professional vector graphic design tool - Gravit Designer&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#burst"&gt;
  &lt;/a&gt;
  &lt;a href="https://burst.shopify.com"&gt;Burst&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y4MJTV53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452627094/XMVsUUAGw.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y4MJTV53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452627094/XMVsUUAGw.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Browse thousands of beautiful copyright-free images. All our pictures are free to download for personal and commercial use, no attribution required.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mrmockup"&gt;
  &lt;/a&gt;
  &lt;a href="https://mrmockup.com/freebies/"&gt;MrMockUp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jbIqwkfe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452712840/pgfsDMqan.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jbIqwkfe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452712840/pgfsDMqan.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free design freebies you need should check out&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#material-icons"&gt;
  &lt;/a&gt;
  &lt;a href="https://material.io/icons"&gt;Material Icons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7pXTGrkY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452772064/3mu8eHhui.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7pXTGrkY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452772064/3mu8eHhui.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Build beautiful, usable products faster. Material Design is an adaptable system—backed by open-source code—that helps teams build high quality digital experiences.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scrnshts"&gt;
  &lt;/a&gt;
  &lt;a href="https://scrnshts.club"&gt;Scrnshts&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CK7QVZwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452874633/wZPiOAjKQ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CK7QVZwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452874633/wZPiOAjKQ.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A hand-picked collection of the finest app store design screenshots&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screenpeek"&gt;
  &lt;/a&gt;
  &lt;a href="https://screenpeek.io"&gt;Screenpeek&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KeyuePou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453079525/Us7meIgdd.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KeyuePou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453079525/Us7meIgdd.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Screenpeek captures any website within a high quality mockup in seconds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#isometric"&gt;
  &lt;/a&gt;
  &lt;a href="https://isometric.online"&gt;Isometric&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GYCUQqQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453103417/DP-ccmGtC.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GYCUQqQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453103417/DP-ccmGtC.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free vector isometric illustrations for designers, startups and companies without the need to include attribution&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#humaaans"&gt;
  &lt;/a&gt;
  &lt;a href="https://humaaans.com"&gt;Humaaans&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gYASvS4c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453182648/NIkauY3MT.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gYASvS4c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453182648/NIkauY3MT.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mix-&amp;amp;-match illustrations of people with a design library for InVIsion Studio and Sketch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shape"&gt;
  &lt;/a&gt;
  &lt;a href="https://shape.so"&gt;Shape&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BS243R8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453157179/qQWHkrkPq.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BS243R8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453157179/qQWHkrkPq.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Shape lets you customize the style, colors and border of static &amp;amp; animated icons and illustrations. You can export to React, SVG and Lottie code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#landing-stock"&gt;
  &lt;/a&gt;
  &lt;a href="https://landingstock.com"&gt;Landing Stock&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w1haaFon--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453195504/HNTY03PkS.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w1haaFon--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453195504/HNTY03PkS.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Discover your perfect landing page in with LandingStock, a collection of free images for landing pages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#happy-hues"&gt;
  &lt;/a&gt;
  &lt;a href="https://happyhues.co"&gt;Happy Hues&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4b9IIg2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453220019/W_LY80wqA.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4b9IIg2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453220019/W_LY80wqA.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See color palette inspiration on a real example website. As you click on different palettes every color on this site updates to give you context of how that color could be used for your design or illustration projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flaticon"&gt;
  &lt;/a&gt;
  &lt;a href="https://flaticon.com"&gt;Flaticon&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ww6HOK67--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453238093/C7ASTLtkC.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ww6HOK67--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453238093/C7ASTLtkC.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download Free Vector Icons and Stickers for your projects. Resources made by and for designers. PNG, SVG, EPS, PSD and CSS formats&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#joe-schmoe"&gt;
  &lt;/a&gt;
  &lt;a href="https://joeschmoe.io"&gt;Joe Schmoe&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QX4UUbxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453294400/NVuTCL8by.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QX4UUbxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453294400/NVuTCL8by.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An illustrated avatar generator for developers and designers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lukasz-adam-free-illustrations"&gt;
  &lt;/a&gt;
  &lt;a href="https://lukaszadam.com"&gt;Lukasz Adam Free Illustrations&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3sWzbD9Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453314390/rmH9jPmU4.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3sWzbD9Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453314390/rmH9jPmU4.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hey! Looking for the free Illustration guys? That's me. Check out my illustrations and my other resources.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#principle"&gt;
  &lt;/a&gt;
  &lt;a href="https://principleformac.com"&gt;Principle&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nombrzSU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453402497/RdhzJpQ2n.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nombrzSU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453402497/RdhzJpQ2n.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Principle makes it easy to design animated and interactive user interfaces. Whether you're designing the flow of a multi-screen app, or new interactions and animations, Principle helps you create designs that look and feel amazing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mockup-world"&gt;
  &lt;/a&gt;
  &lt;a href="https://mockupworld.co"&gt;Mockup World&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PirNJHoV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453423748/rhAbMynM9.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PirNJHoV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453423748/rhAbMynM9.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tons of free and legal, fully layered, easily customizable photo realistic PSD mockups: Ready to use in your projects, app showcases and presentations!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#httpster"&gt;
  &lt;/a&gt;
  &lt;a href="https://httpster.net"&gt;Httpster&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zk2SE4FW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453550047/4m3CGL9V9.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zk2SE4FW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453550047/4m3CGL9V9.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tons of free and legal, fully layered, easily customizable photo realistic PSD mockups: Ready to use in your projects, app showcases and presentations!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#animaticons"&gt;
  &lt;/a&gt;
  &lt;a href="https://animaticons.co"&gt;Animaticons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u4az7qlh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453528086/gwN2gyMN3.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4az7qlh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453528086/gwN2gyMN3.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Animaticons are a growing set of beautiful, high-resolution, animated GIF icons that you can customize. They are perfect for websites, emails, presentations and more&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#social-sizes"&gt;
  &lt;/a&gt;
  &lt;a href="https://socialsizes.io"&gt;Social Sizes&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N9qbJH0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453491952/GyG6Zt-ER.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N9qbJH0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453491952/GyG6Zt-ER.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SocialSizes provides designers with the best sizes to use for Image and Video content on Social Media. Get downloadable templates for Sketch, Figma, Photoshop and Adobe XD (no more googling for everything).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screeenlane"&gt;
  &lt;/a&gt;
  &lt;a href="https://screenlane.com"&gt;ScreeenLane&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G7DoNce5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453574613/a2V-WSBTj.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G7DoNce5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453574613/a2V-WSBTj.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Get inspired and keep up with the latest web &amp;amp; mobile app UI design trends. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#checklist"&gt;
  &lt;/a&gt;
  &lt;a href="https://checklist.design"&gt;Checklist&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dK1BhUj---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453680956/DDhLiVbLN.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dK1BhUj---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453680956/DDhLiVbLN.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Checklist Design is a curated list of checklists ranging from website pages, to UI components, all the way to branding assets.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fonts-squirrel"&gt;
  &lt;/a&gt;
  &lt;a href="https://fontsquirrel.com"&gt;Fonts Squirrel&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SMdA9ni6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453709053/m1Ke2qQ2L.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SMdA9ni6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453709053/m1Ke2qQ2L.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Font Squirrel scours the internet for high quality, legitimately free fonts . Download thousands of completely legal, high quality, free fonts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typewolf"&gt;
  &lt;/a&gt;
  &lt;a href="https://typewolf.com"&gt;Typewolf&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AqPSQy7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453740814/HOMwMd4wv.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AqPSQy7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453740814/HOMwMd4wv.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Typewolf helps designers choose the perfect font combination for their next design project—features web fonts in the wild, font recommendations and learning resources.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#humane"&gt;
  &lt;/a&gt;
  &lt;a href="https://humanebydesign.com"&gt;Humane&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o139Ia2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453804321/q0eignVmP.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o139Ia2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453804321/q0eignVmP.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A resource that provides guidance for designing ethically humane digital products through patterns focused on user well-being.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mixkit"&gt;
  &lt;/a&gt;
  &lt;a href="https://mixkit.co"&gt;Mixkit&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBZ1OO5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453780870/1x-T4WXJN.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBZ1OO5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453780870/1x-T4WXJN.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download Free Stock Video Footage, Stock Music &amp;amp; Premiere Pro Templates for your next video editing project. All assets can be downloaded for free!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rawpixel"&gt;
  &lt;/a&gt;
  &lt;a href="https://rawpixels.com"&gt;Rawpixel&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_vePzGu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455811070/LnbSgz8Ml.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_vePzGu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455811070/LnbSgz8Ml.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rawpixels is a portfolio of design work by Bill Safsel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lost-type"&gt;
  &lt;/a&gt;
  &lt;a href="https://losttype.com"&gt;Lost Type&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d7Q15blC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453959026/9ykX8pbXP.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d7Q15blC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453959026/9ykX8pbXP.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lost Type is a Collaborative Digital Type Foundry.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#craftwork"&gt;
  &lt;/a&gt;
  &lt;a href="https://craftwork.design"&gt;Craftwork&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E_mMwLQ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453995077/ljz6i8dxt.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E_mMwLQ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453995077/ljz6i8dxt.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Interface assets for designers, developers, and startup creatives. Speed up your design workflow with high-quality UX/UI kits, illustrations, and templates.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#feather-icons"&gt;
  &lt;/a&gt;
  &lt;a href="https://feathericons.com"&gt;Feather Icons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QnKwl7pZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454012171/qN49qsl99.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QnKwl7pZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454012171/qN49qsl99.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feather is a collection of simply beautiful open source icons. Each icon is designed on a 24x24 grid with an emphasis on simplicity, consistency and readability.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#color-claim"&gt;
  &lt;/a&gt;
  &lt;a href="https://vanschneider.com/colors"&gt;Color Claim&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--luApCDjv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454125586/bAF6jxmkc.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--luApCDjv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454125586/bAF6jxmkc.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ColorClaim is simple. Everything and amazing favorite color combinations on one big page&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coverr"&gt;
  &lt;/a&gt;
  &lt;a href="https://coverr.co"&gt;Coverr&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HJlbcwhQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454159279/Gaa1v0Quv.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HJlbcwhQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454159279/Gaa1v0Quv.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download royalty free (for personal and commercial use), unique and beautiful video footage for your website or any project. No attribution required.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pixeden"&gt;
  &lt;/a&gt;
  &lt;a href="https://pixeden.com"&gt;Pixeden&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1jXR8pZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454205830/N1OAZ_Bab.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1jXR8pZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454205830/N1OAZ_Bab.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pixeden is hard at work providing quality premium and free web resources and graphic design templates. Enjoy!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sketchsheets"&gt;
  &lt;/a&gt;
  &lt;a href="https://sketchsheets.com"&gt;Sketchsheets&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OQWJ-Svr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454228547/N4EP1CyCF.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OQWJ-Svr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454228547/N4EP1CyCF.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sketchsheets is an open source project dedicated to providing free printable templates of the latest devices and platforms for wireframing designs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#right-font"&gt;
  &lt;/a&gt;
  &lt;a href="https://rightfontapp.com"&gt;Right Font&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1-r8d7HB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454298954/fWXVMyCrc.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1-r8d7HB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454298954/fWXVMyCrc.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Professional and beautiful font manager and font organizer app, helps preview, sync, install and organize fonts over iCloud, Dropbox. All-in-one Font Manager for business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#colorsspark"&gt;
  &lt;/a&gt;
  &lt;a href="https://colorspark.app"&gt;ColorsSpark&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZdPWY5t1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454324105/3lw5kmMO-.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZdPWY5t1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454324105/3lw5kmMO-.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Professional and beautiful font manager and font organizer app, helps preview, sync, install and organize fonts over iCloud, Dropbox. All-in-one Font Manager for business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flowkit"&gt;
  &lt;/a&gt;
  &lt;a href="https://useflowkit.com"&gt;Flowkit&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h_K8118s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454439881/x847v5i1t.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h_K8118s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454439881/x847v5i1t.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;User flows right inside your favorite design tool. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#landbook"&gt;
  &lt;/a&gt;
  &lt;a href="https://land-book.com"&gt;Landbook&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4qJGqV9_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454468760/IA0wYeQlU.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4qJGqV9_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454468760/IA0wYeQlU.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Design gallery with the best and most carefully collected websites. We help creatives find inspiration &amp;amp; motivation to do rad stuff.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#colorsinspo"&gt;
  &lt;/a&gt;
  &lt;a href="https://colorsinspo.com"&gt;Colorsinspo&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nul2CAZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454634203/MXqKanBTHu.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nul2CAZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454634203/MXqKanBTHu.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Colorsinspo is all in one resource to find everything about colors with extreme ease. Also, you will get Freebies, Inspirations, Color Tools, Gradients and thousands of trendy hand-picked color palettes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#maze"&gt;
  &lt;/a&gt;
  &lt;a href="https://maze.design"&gt;Maze&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hs_WW0XS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454607504/SZvukG4y7.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hs_WW0XS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454607504/SZvukG4y7.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Get user feedback with Maze's remote testing platform. Power your product and marketing team with quantifiable insights you can act on, instantly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#saaspages"&gt;
  &lt;/a&gt;
  &lt;a href="https://saaspages.xyz/"&gt;SaaSPages&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Q4vbMXT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454763690/MWOO97osl.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Q4vbMXT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454763690/MWOO97osl.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A collection of the best landing pages with a focus on copywriting and design.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#foodies-food"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.foodiesfeed.com/"&gt;Foodies Food&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PeK8fgGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627456305630/URCS8I2ZH.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PeK8fgGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627456305630/URCS8I2ZH.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find food images uploaded by Food Bloggers. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#removalai"&gt;
  &lt;/a&gt;
  &lt;a href="https://removal.ai"&gt;RemovalAI&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DKSKChsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455161262/0NgDe7Yzi.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DKSKChsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455161262/0NgDe7Yzi.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remove Image Background Free Using Artificial Intelligence &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#snapshots"&gt;
  &lt;/a&gt;
  &lt;a href="http://snappy-app.com/"&gt;Snapshots&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r-OM5Vgj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455266385/KLq8lFJTQ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-OM5Vgj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455266385/KLq8lFJTQ.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Snapshots, the smart way.&lt;/p&gt;

&lt;p&gt;Your day-to-day App to instantly work and collaborate on snapshots. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#streamline-emojis"&gt;
  &lt;/a&gt;
  &lt;a href="https://app.streamlinehq.com/emojis/freebies-freemojis"&gt;Streamline Emojis&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BOXoeOpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455002333/3pch8vltm.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BOXoeOpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455002333/3pch8vltm.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A cute vector emoji set that you can use for free in your applications, websites or publications. Use the vectors for free but you must credit us with a link.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#morguefile"&gt;
  &lt;/a&gt;
  &lt;a href="https://morguefile.com"&gt;MorgueFile&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u5Xmj23J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455486690/1CHSK6gFJ3.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u5Xmj23J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455486690/1CHSK6gFJ3.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free images for creatives, by creatives. A post production file, over 400,000 free stock photos for commercial use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-old-stock"&gt;
  &lt;/a&gt;
  &lt;a href="https://nos.twnsnd.co/"&gt;New Old Stock&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uwNiHT8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455049642/pRUO0F_MP.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uwNiHT8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455049642/pRUO0F_MP.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vintage photos from the public archives.&lt;br&gt;
Free of known copyright restrictions.&lt;br&gt;
Recapturing History.&lt;/p&gt;




&lt;p&gt;Best of luck utilizing these free assets on your future visual communication projects!&lt;/p&gt;

&lt;p&gt;Mainly we would give the credits to the people making these resources and we're very proud promiting them all on our channels. If you are looking to add your amazing resource into this list just comment down below, we'll help you.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
      <category>resources</category>
    </item>
  </channel>
</rss>
