<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Learning Python-Basic course: Day 7, Exercises and coding challenges‚öîÔ∏è</title>
      <author>Aatmaj</author>
      <pubDate>Wed, 30 Jun 2021 12:02:33 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-basic-course-day-7-exercises-and-coding-challenges-2l2b</link>
      <guid>https://dev.to/aatmaj/learning-python-basic-course-day-7-exercises-and-coding-challenges-2l2b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#welcome-todays-agenda-is-solving-more-interesting-questions-intricate-patterns-and-mindblowing-sequences"&gt;
  &lt;/a&gt;
  Welcome üñêÔ∏è Today's agenda is solving more interesting questions! ‚ù§Ô∏è intricate patterns and mind-blowing sequences ‚ú®
&lt;/h2&gt;




&lt;p&gt;Let us now today solve some more questions üòÄ on while loops and for loops. üòÅ We will look at 2-3 sample questions followed by exercises and a coding challenge ‚öîÔ∏è.&lt;/p&gt;

&lt;p&gt;Sample questions-&lt;/p&gt;

&lt;p&gt;1) Write a program to print Fibonacci numbers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'0,1,'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;","&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Simultaneous assignment of values&lt;/strong&gt;&lt;br&gt;
Note the second last line. This is the Python syntax for simultaneous assignment. This is equivalent to using a temp variable like-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This python shortcut comes very very handy while swapping two numbers to&lt;/p&gt;

&lt;p&gt;2) Write a program to display times table from 1-10&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"="&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OUTPUT-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1 * 1 = 1
1 * 2 = 2
1 * 3 = 3
1 * 4 = 4
1 * 5 = 5
1 * 6 = 6
1 * 7 = 7
1 * 8 = 8
1 * 9 = 9
1 * 10 = 10

2 * 1 = 2
2 * 2 = 4
2 * 3 = 6
2 * 4 = 8
2 * 5 = 10
2 * 6 = 12
2 * 7 = 14
2 * 8 = 16
2 * 9 = 18
2 * 10 = 20
.
.
.
. for numbers upto 10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What such a small amount of code can do in seconds took us years to learn...ü§©&lt;/p&gt;

&lt;p&gt;Exercises-&lt;/p&gt;

&lt;p&gt;1)- Modify the factorial program we did in day 4 to error check for zero and negative numbers.(using if-else) &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python/blob/15c67abac0cfe0a98dca8aca04feff544f2cc379/Basic/Day%207/Exercise%20solutions/Exercise%201.py"&gt;Answer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2)Write a program to give the following output&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1
121
12321
1234321
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3) Write a program to display &lt;a href="https://www.britannica.com/science/perfect-number#:~:text=Perfect%20number%2C%20a%20positive%20integer,28%2C%20496%2C%20and%208%2C128."&gt;perfect numbers&lt;/a&gt; from a range entered by a user (include 0).&lt;/p&gt;

&lt;p&gt;Coding challenges-‚öîÔ∏è&lt;br&gt;
1) Write a program to display terms of this infinite pattern until 50.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1, 2,2,3,3, 4,4,4,5,5,5,6,6,6, 7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,.....
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Comment your answers below. Let's see who can solve tis one. üó°Ô∏èüõ°Ô∏è Beware, it is harder than it seems....üòâ&lt;/p&gt;

&lt;p&gt;Answer to this question will be given in tomorrow's session. ü§û So stay tuned by following me for updates üëç. Please like and comment below üòä&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>–¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–µ–±-—Å–∞–π—Ç–∞
</title>
      <author>–î–º–∏—Ç—Ä–∏–π</author>
      <pubDate>Wed, 30 Jun 2021 11:58:13 +0000</pubDate>
      <link>https://dev.to/devpwa/-5e2o</link>
      <guid>https://dev.to/devpwa/-5e2o</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7sh2vQiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625053385451/tkAT4yi5Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7sh2vQiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625053385451/tkAT4yi5Q.png" alt="–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –æ–Ω–ª–∞–π–Ω —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å–∞–π—Ç–∞"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%D1%82%D0%B5%D1%81%D1%82-%D1%81%D0%BA%D0%BE%D1%80%D0%BE%D1%81%D1%82%D0%B8-%D0%B2%D0%B5%D0%B1%D1%81%D0%B0%D0%B9%D1%82%D0%B0"&gt;
  &lt;/a&gt;
  –¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–µ–±-—Å–∞–π—Ç–∞
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;–°–∫–æ—Ä–æ—Å—Ç—å —Å–∞–π—Ç–∞&lt;/strong&gt; –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ—à–∞—é—â–∏–º —Ñ–∞–∫—Ç–æ—Ä–æ–º –¥–ª—è –µ–≥–æ —É—Å–ø–µ—Ö–∞. –ë–æ–ª–µ–µ –±—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤–µ–±-—Å–∞–π—Ç–æ–≤ –º–æ–∂–µ—Ç –≤—ã–∏–≥—Ä–∞—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä—è –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–º—É —Ä–µ–π—Ç–∏–Ω–≥—É SEO, –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º –∫–æ–Ω–≤–µ—Ä—Å–∏–∏, –±–æ–ª–µ–µ –Ω–∏–∑–∫–∏–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º –æ—Ç–∫–∞–∑–æ–≤ –∏ –ª—É—á—à–µ–º—É –æ–±—â–µ–º—É –æ–ø—ã—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏ –í–∞–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è &lt;em&gt;—Å–∫–æ—Ä–æ—Å—Ç–∏ —Å–∞–π—Ç–∞&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://tools.keycdn.com/speed"&gt;Website Speed Test&lt;/a&gt;: —Ç–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π  &lt;a href="https://www.keycdn.com/"&gt;KeyCDN&lt;/a&gt; , –∫–æ—Ç–æ—Ä—ã–π –≤–∫–ª—é—á–∞–µ—Ç —Ä–∞–∑–±–∏–≤–∫—É –≤–æ–¥–æ–ø–∞–¥–∞ –∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–∞–π—Ç–∞.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;** &lt;a href="https://developers.google.com/speed/pagespeed/insights/"&gt;Google PageSpeed Insights&lt;/a&gt;**: PageSpeed Insights –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∞ –∑–∞—Ç–µ–º –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –µ–µ —É—Å–∫–æ—Ä–µ–Ω–∏—é.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developers.google.com/web/tools/chrome-devtools/?hl=en"&gt;Google Chrome DevTools&lt;/a&gt;: –Ω–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—Ç–ª–∞–¥–∫–∏, –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –≤ Google Chrome.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.dotcom-tools.com/website-speed-test.aspx"&gt;Dotcom-Tools&lt;/a&gt;: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–∞—Ö –∏–∑ 25 –º–µ—Å—Ç –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.webpagetest.org/"&gt;WebPageTest&lt;/a&gt;: –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–µ–±-—Å–∞–π—Ç–∞ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–∞–ª—å–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã (IE –∏ Chrome) –∏ —Å —Ä–µ–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–º.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://tools.pingdom.com/fpt/"&gt;Pingdom&lt;/a&gt;: –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –µ–µ –∏ –Ω–∞–π–¥–∏—Ç–µ —É–∑–∫–∏–µ –º–µ—Å—Ç–∞.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://gtmetrix.com/"&gt;GTmetrix&lt;/a&gt;: –¥–∞–µ—Ç –≤–∞–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ —Ç–æ–º, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –≤–∞—à —Å–∞–π—Ç, –∏ –¥–∞–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –µ–≥–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>devops</category>
      <category>tutorial</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>5 must have extensions when working with SharePoint framework (SPfx)</title>
      <author>Eli H. Schei</author>
      <pubDate>Wed, 30 Jun 2021 11:20:53 +0000</pubDate>
      <link>https://dev.to/elischei/5-must-have-extensions-when-working-with-sharepoint-framework-spfx-5ag8</link>
      <guid>https://dev.to/elischei/5-must-have-extensions-when-working-with-sharepoint-framework-spfx-5ag8</guid>
      <description>&lt;p&gt;I have&lt;a href="https://dev.to/elischei/my-top-5-favorite-vscode-extensions-203d" title="My top 5 favorite VSCode extensions" rel="noreferrer noopener"&gt; previosly written a blogpost about my favorite extensions for VSCode&lt;/a&gt;. Today I want to share my favorite SPfx-specific extensions and tools. If you know about some extension, tool or package that should be on this list let me know! &lt;/p&gt;

&lt;h2&gt;1. &lt;a href="https://github.com/s-KaiNet/spfx-fast-serve" rel="noreferrer noopener" title="https://github.com/s-KaiNet/spfx-fast-serve"&gt;SPfx fast-serve &lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Do you feel like it takes forever to serve your project on the local server? And that the hot reaload is not exactly hot? Then you should try SPfx fast serve! &lt;a href="https://www.linkedin.com/pulse/enjoy-sharepoint-framework-development-denis-molodtsov/" rel="noreferrer noopener" title="https://www.linkedin.com/pulse/enjoy-sharepoint-framework-development-denis-molodtsov/"&gt;This article describes it in more detail and also covers the setup&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;2. &lt;a href="https://marketplace.visualstudio.com/items?itemName=eliostruyf.spfx-snippets" rel="noreferrer noopener" title="https://marketplace.visualstudio.com/items?itemName=eliostruyf.spfx-snippets"&gt;SPfx snippets &lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A nice little collection of snippets so you don't have to write everything from scratch. &lt;/p&gt;

&lt;h2&gt;3. &lt;a href="https://marketplace.visualstudio.com/items?itemName=eliostruyf.spfx-debug" rel="noreferrer noopener" title="https://marketplace.visualstudio.com/items?itemName=eliostruyf.spfx-debug"&gt;SPfx debug extension&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;For easier debugging. This is by the same creator as SPfx snippets, Elio Struyf ( &lt;a class="mentioned-user" href="https://dev.to/estruyf"&gt;@estruyf&lt;/a&gt;
 ) , &lt;a href="https://marketplace.visualstudio.com/publishers/eliostruyf" rel="noreferrer noopener" title="https://marketplace.visualstudio.com/publishers/eliostruyf"&gt;you should check out all of his extensions for SPfx and MS graph&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;4. &lt;a href="https://marketplace.visualstudio.com/items?itemName=RencoreGmbH.vscode-spfx-deploy-package" rel="noreferrer noopener" title="https://marketplace.visualstudio.com/items?itemName=RencoreGmbH.vscode-spfx-deploy-package"&gt;Rencore Deploy packages extension&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;I usally prefer to &lt;a href="https://elischei.com/deploy-your-spfx-solution-using-pnp-powershell/" rel="noreferrer noopener" title="How to deploy your SPfx solution using PnP powershell"&gt;deploy my spfx apps using pnp powershell,&lt;/a&gt; but if you want to do it directly from VSCode this extension is for you. &lt;/p&gt;

&lt;h2&gt;5. &lt;a href="https://dev.to/elischei/how-to-use-node-version-manager-nvm-for-windows-to-handle-different-node-versions-5a35" rel="noreferrer noopener" title="https://elischei.com/how-to-use-nvm-for-windows/"&gt;Use NVM to switch between node versions&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you work with multiple apps that have different node dependencies Node Version Manager (NVM) is a must. I have previously &lt;a href="https://dev.to/elischei/how-to-use-node-version-manager-nvm-for-windows-to-handle-different-node-versions-5a35" rel="noreferrer noopener" title="How to use node version manager (nvm for windows) to handle different node-versions"&gt;written a blogpost on how to setup and use NVM (for windows)&lt;/a&gt;. &lt;/p&gt;




&lt;p&gt;Did you find this article usefull?¬†&lt;a href="https://twitter.com/acupof_dev" rel="noreferrer noopener"&gt;Follow me on twitter&lt;/a&gt;¬†to be notified when I publish something new!&lt;/p&gt;

&lt;p&gt;Also, if you have any feedback or questions, please let me know in the comments below.¬†:) &lt;/p&gt;

&lt;p&gt;Thank you for reading, and happy coding!&lt;/p&gt;

&lt;p&gt;/Eli&lt;/p&gt;

</description>
      <category>spfx</category>
      <category>extensions</category>
      <category>vscode</category>
    </item>
    <item>
      <title>Automating your Web Profile using React JS</title>
      <author>Praveen Kumar</author>
      <pubDate>Wed, 30 Jun 2021 11:16:42 +0000</pubDate>
      <link>https://dev.to/praveenscience/automating-your-web-profile-using-react-js-38k2</link>
      <guid>https://dev.to/praveenscience/automating-your-web-profile-using-react-js-38k2</guid>
      <description>&lt;p&gt;As a Lazy Developer, I used to feel that we‚Äôre writing too much code, but getting only peanuts in terms of output. Why not we change this by automating a lot of things? Welcome to the world of scripting &amp;amp; automating based on data. üî•&lt;/p&gt;

&lt;p&gt;Today, we‚Äôre going to look at how we can automate a Personal Portfolio data. The first thing is that we need to capture the contents of the person, then we need to use some mapping techniques to create HTML &amp;amp; CSS out of it. ‚öô&lt;/p&gt;

&lt;p&gt;To do this, we‚Äôre going to create a React JS based User Interface and this is going to generate a JSON data based on the forms that we fill in. This JSON data will be used to convert the data into a beautiful website that you can flaunt! üòÅ&lt;/p&gt;




&lt;p&gt;Haven‚Äôt you got much time to spend? ‚è∞ No worries, check out this one-minute trailer here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/6FNWuWY76vY"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AVMrN79Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/282kvqhl.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or, if you‚Äôre interested in the full workshop, the primer of the series, check this out. Wait for more, BTW! üî•&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rb.gy/tnmysh"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AVMrN79Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/282kvqhl.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>UI/UX Tips for Frontend Developers (Part 1)</title>
      <author>Huy Ta Quoc</author>
      <pubDate>Wed, 30 Jun 2021 10:57:55 +0000</pubDate>
      <link>https://dev.to/huytaquoc/ui-ux-tips-for-frontend-developers-part-1-1l8l</link>
      <guid>https://dev.to/huytaquoc/ui-ux-tips-for-frontend-developers-part-1-1l8l</guid>
      <description>&lt;p&gt;&lt;em&gt;This is Part 1 in the series called "UI/UX for Frontend Developers". A new article will be published every few weeks.&lt;/em&gt;&lt;br&gt;
&lt;em&gt;In each part, I will talk about a &lt;strong&gt;general topic&lt;/strong&gt;, some UI/UX tips about an &lt;strong&gt;element&lt;/strong&gt;, and a practical &lt;strong&gt;UI/UX pattern&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this part, I will share with you tips about color, buttons and the auto-save pattern. Let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#general-topic-color"&gt;
  &lt;/a&gt;
  General Topic: Color
&lt;/h2&gt;

&lt;p&gt;Color itself is a broad topic that deserves several detailed articles. It will be broken down into many aspects to be more digestible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-color-system"&gt;
  &lt;/a&gt;
  The color system
&lt;/h3&gt;

&lt;p&gt;Every application should have its own defined color system. The most common structure of a color system nowadays is usually as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;The primary color&lt;/strong&gt;: The color that speaks your brand&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The secondary/accent color&lt;/strong&gt;: The complementary color to the primary color&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Other colors for states&lt;/strong&gt;: Red-ish (Error), Green-ish (Success), Yellow-ish (Warning)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The primary text color&lt;/strong&gt;: Often black-ish&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The secondary text color&lt;/strong&gt;: Often lighter than the primary text color&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Notes&lt;/em&gt;: In practice, there might be more elements to the structure of a color system, depending on the needs of the application.&lt;/p&gt;

&lt;p&gt;There are also extremely useful tools to help you build the color system (e.g. they let you know which colors are complementary to which):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adobe Color: &lt;a href="https://color.adobe.com"&gt;https://color.adobe.com&lt;/a&gt; (this one also lets you build the whole color system from a colored logo you already have)&lt;/li&gt;
&lt;li&gt;Color Scheme Designer: &lt;a href="http://colorschemedesigner.com/csd-3.5"&gt;http://colorschemedesigner.com/csd-3.5&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Coolors: &lt;a href="https://coolors.co/generate"&gt;https://coolors.co/generate&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#color-branding"&gt;
  &lt;/a&gt;
  Color branding
&lt;/h3&gt;

&lt;p&gt;Suppose you are going to build an application of some sort, you might be wondering what color you should pick for it. Basically, you are free to choose what color you like. However, having a guideline might be better than none, so I'll give you one:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#red"&gt;
  &lt;/a&gt;
  Red
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Characteristics: Power, Excitement, Hunger, Passion&lt;/li&gt;
&lt;li&gt;Commonly seen types of applications: Food, Entertainment&lt;/li&gt;
&lt;li&gt;Brand examples: Coca-cola, KFC, Youtube, Netflix, Pinterest, Nintendo, MSI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lHdOhydr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rl6mcmfllvs820e06j4c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lHdOhydr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rl6mcmfllvs820e06j4c.png" alt="Red Brands"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#green"&gt;
  &lt;/a&gt;
  Green
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Characteristics: Health, Relief, Growth, Freshness, Eco-friendliness&lt;/li&gt;
&lt;li&gt;Commonly seen types of applications: Health, Environment, Stress relief, Education&lt;/li&gt;
&lt;li&gt;Brand examples: Starbucks, Spotify, Heineken, Tropicana, Grab, Duolingo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Oe22DCNX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4h4l4hniyxc15q0vcxe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oe22DCNX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4h4l4hniyxc15q0vcxe.png" alt="Green Brands"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#blue"&gt;
  &lt;/a&gt;
  Blue
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Characteristics: Reliabity, Trust, Loyalty, Calm, Peace, Security&lt;/li&gt;
&lt;li&gt;Commonly seen types of applications: Social networks, Banking, Money-related, Business, Education&lt;/li&gt;
&lt;li&gt;Brand examples: Facebook, LinkedIn, Quizlet, Paypal, Skype, HP, Intel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9OLoF0VK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtydyv2r4ehs81p5ajms.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9OLoF0VK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtydyv2r4ehs81p5ajms.png" alt="Blue Brands"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#yellow"&gt;
  &lt;/a&gt;
  Yellow
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Characteristics: Optimism, Positivity, Energy, Warmth, Youthfulness, Creativity&lt;/li&gt;
&lt;li&gt;Commonly seen types of applications: Food, Shipping/Delivery&lt;/li&gt;
&lt;li&gt;Brand examples: McDonalds, Cheetos, Lay's, DHL, Snapchat, IMDb&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4PTGwLY_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woovzq4rr7wiibr04px8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4PTGwLY_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woovzq4rr7wiibr04px8.png" alt="Yellow Brands"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#orange"&gt;
  &lt;/a&gt;
  Orange
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Characteristics: Motivation, Cheerfulness, Creativity, Dynamic&lt;/li&gt;
&lt;li&gt;Commonly seen types of applications: Sound, Music, Audio-related&lt;/li&gt;
&lt;li&gt;Brand examples: Soundcloud, Audible, Audacity, VLC, Blogger, Ubuntu, Fanta&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H_BhcaZE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljwtikops9p04jdu3jiz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H_BhcaZE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljwtikops9p04jdu3jiz.png" alt="Orange Brands"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#purple"&gt;
  &lt;/a&gt;
  Purple
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Characteristics: Feminine, Beauty, Luxury, Romance, Loyalty&lt;/li&gt;
&lt;li&gt;Commonly seen types of applications: Beauty, Women/Girls, Dating, Romance&lt;/li&gt;
&lt;li&gt;Brand examples: Twitch, Yahoo, Instagram, Hily, Meetme, Hallmark, Taco Bell&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UmrVsyAS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qhtxpz95zifd7zddvvy6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UmrVsyAS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qhtxpz95zifd7zddvvy6.png" alt="Purple Brands"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#brown"&gt;
  &lt;/a&gt;
  Brown
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Characteristics: Protection, Durability, Seriousness, Down to earth&lt;/li&gt;
&lt;li&gt;Commonly seen types of applications: Natural products (esp. coffee &amp;amp; chocolate), Leather products&lt;/li&gt;
&lt;li&gt;Brand examples: Nespresso, M&amp;amp;M's, Hershey's, Dreyer's, Ups, Cracker Barrel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m1A0aSjA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qzlcjby3qndycxp72pa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m1A0aSjA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qzlcjby3qndycxp72pa.png" alt="Brown Brands"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pink"&gt;
  &lt;/a&gt;
  Pink
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Characteristics: Love, Feminine, Beauty, Sweetness&lt;/li&gt;
&lt;li&gt;Commonly seen types of applications: Beauty, Women/Girls, Dating, Romance&lt;/li&gt;
&lt;li&gt;Brand examples: Tinder, OkCupid, Airbnb, LG, BeautyPlus, Hello Kitty, Barbie&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ujiu5Zyy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdtxfs6whscgq5oxjv7p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ujiu5Zyy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdtxfs6whscgq5oxjv7p.png" alt="Pink Brands"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#black"&gt;
  &lt;/a&gt;
  Black
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Characteristics: Power, Luxury, Seriousness, Elegance&lt;/li&gt;
&lt;li&gt;Commonly seen types of applications: News, Luxury products&lt;/li&gt;
&lt;li&gt;Brand examples: Apple, Gucci, Adidas, Chanel, Nike, The New York Times, Daily.dev, DEV.to, Medium&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HG4Xpevq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5y9mzk0qq6f4r8avl5e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HG4Xpevq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5y9mzk0qq6f4r8avl5e.png" alt="Black Brands"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#element-button"&gt;
  &lt;/a&gt;
  Element: Button
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#types-of-buttons"&gt;
  &lt;/a&gt;
  Types of buttons
&lt;/h3&gt;

&lt;p&gt;There are 3 main types of buttons: Primary buttons, Secondary buttons, and Text buttons.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gig8TsKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lpnr1sc5j8qyhfzy96iv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gig8TsKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lpnr1sc5j8qyhfzy96iv.png" alt="Types of Buttons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Based on the level of emphasis of each action, you should use the appropriate type of button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T_kXCXeK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3e713sgndyabzy145jn7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T_kXCXeK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3e713sgndyabzy145jn7.png" alt="Dos and Don'ts #1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#button-states"&gt;
  &lt;/a&gt;
  Button states
&lt;/h3&gt;

&lt;p&gt;Each button should have these states:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Enabled: The normal state of the button&lt;/li&gt;
&lt;li&gt;Disabled: The disabled state of the button&lt;/li&gt;
&lt;li&gt;Hover: The state when the button is hovered by a cursor&lt;/li&gt;
&lt;li&gt;Focused: The state when the button is focused&lt;/li&gt;
&lt;li&gt;Pressed (optional): The state when the button is pressed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HwkCOmyB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2zg89lysbe7z4fjwgn7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HwkCOmyB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2zg89lysbe7z4fjwgn7.png" alt="Button states"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uiux-pattern-autosave"&gt;
  &lt;/a&gt;
  UI/UX Pattern: Auto-save
&lt;/h2&gt;

&lt;p&gt;Let's say you are building a page to configure settings for a user. You will probably have the tendency to design a form and then place the "Cancel" and "Save" buttons at the end of it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--soYh4zGL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4r21zp8tg2fnjlxh0ov5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--soYh4zGL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4r21zp8tg2fnjlxh0ov5.png" alt="Settings page #1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now when the user changes anything, he/she will have to remember to press the "Save" button before leaving. There shouldn't be any problems until you have a lot of fields and the "Save" button is way at the bottom and out of the current viewport. Then, the user will likely not notice the presence of the "Save" button and forget to press it. DEV.to itself encounters such a problem:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--64FaKme5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bkozej8lwp8kccj3u81m.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--64FaKme5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bkozej8lwp8kccj3u81m.PNG" alt="DEV.to Settings page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In such cases where the changes are unimportant and non-breaking, you can ditch the "Save" button and whenever a change is made, it is saved immediately (with a notification).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bZOQLGnO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j58mxw510wxn3rait4wv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bZOQLGnO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j58mxw510wxn3rait4wv.png" alt="Settings page #2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A lot of applications nowadays are applying this "auto-save" pattern for a better user experience. For example, Google Calendar:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OMWDVMAI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfzwa919bvgb7v9z7hg4.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OMWDVMAI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfzwa919bvgb7v9z7hg4.PNG" alt="Google Calendar Settings Page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This is the end for &lt;strong&gt;UI/UX Tips for Frontend Developers (Part 1)&lt;/strong&gt;. Do not hesitate to leave a comment if you have some feedback. I will try to publish Part 2 next week, and I'll be more motivated to do so if you guys react to this article to show that it's useful.&lt;/p&gt;

&lt;p&gt;Thank you so much ‚ù§Ô∏è.&lt;/p&gt;

</description>
      <category>design</category>
      <category>frontend</category>
      <category>ux</category>
      <category>webdev</category>
    </item>
    <item>
      <title>We Helped 42 Developers Get $772.441 in Salary Raises and Promotions, Here Is What We Learned</title>
      <author>Dragos Nedelcu</author>
      <pubDate>Wed, 30 Jun 2021 10:32:57 +0000</pubDate>
      <link>https://dev.to/dragosnedelcu/we-helped-42-developers-get-772-441-in-salary-raises-and-promotions-here-is-what-we-learned-2h10</link>
      <guid>https://dev.to/dragosnedelcu/we-helped-42-developers-get-772-441-in-salary-raises-and-promotions-here-is-what-we-learned-2h10</guid>
      <description>&lt;p&gt;&lt;em&gt;It doesn't matter if you never went beyond building simple apps, have no degree in Computer Science or can barely remember the last time you touched an algorithm. You can use these simple secrets to escape the junior/mid-level dev minefield, unstuck your career and instantly pump up your salary.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;In the last 12 months CodeWithDragos has helped 40+ ambitious developers earn &lt;strong&gt;over $772.441 worth in promotions and pay raises&lt;/strong&gt; from new positions - in the backend and the frontend - &lt;strong&gt;all across Europe, from Berlin to London.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Our mentees work for international tech companies around the world -  Twilio, GetYourGuide, Bitwala and a few other dozen internationally renowned companies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In the process, we have learned that technical mastery, that is, the proper understanding of software development is the secret to getting access to the best jobs and making on average 30% more.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here are a few of the ways CodeWithDragos uses to help our clients build insanely successful software careers and become industry leaders. &lt;/p&gt;

&lt;p&gt;If you are an ambitious coder, programmer or software developer, many of them will surely benefit you as well. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-what-really-makes-you-get-ahead-as-a-developer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. What really makes you get ahead as a developer&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Programmers must know how to program. Nor how to tweet, not how to read from Stackoverflow, but how to code. Software Development is a highly technical field, and knowledge is power.&lt;/p&gt;

&lt;p&gt;Knowledge of the fundamentals, knowledge of your specialization (frontend, backend) and general knowledge of software development. Regardless of the technology, regardless of the country, the fastest way to get ahead is technical expertise. &lt;/p&gt;

&lt;p&gt;From Anindita De in the UK to Akua in Berlin, the one most effective thing particularly when trying to get out of the junior/mid-level rank was building a strong technical foundation. That means between others getting the basic right: API Design, Cloud and Testing are like the boring people at the party that actually pay for their tickets. Make sure you befriend them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-you-can-switch-jobs-but-not-salaries"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. You can switch jobs, but not salaries&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;With recruiters hitting your inbox just because your job title is Software Developer, it might be tempting to jump boats quickly. But, job-hooping without drastically improving your skills, is sacrificing long term career growth for quick money. &lt;/p&gt;

&lt;p&gt;What‚Äôs more, the salary increase we saw when switching jobs fast was almost negligible if we take into account the cost of job switching(notice period + probation + time to next promotion). &lt;/p&gt;

&lt;p&gt;As a rule of thumb unless the pay increase is between 25% to 30% it does not pay off to switch jobs unless you find yourself in a critical situation. Instant gratification in software development is a recipe for failure, not success. If you want it now, you will most likely never have it. Long term success comes from strategy and focus, not randomly jumping around. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-the-most-common-mistakes-made-by-beginners"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. The most common mistakes made by beginners&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Probably the biggest mistake we see developers make, especially the rookie ones are trying to learn everything. Developers are addicted to the latest fizzy fuzzy framework just out of the open-source furnace.&lt;/p&gt;

&lt;p&gt;This addiction is perpetuated by sites like Udemy, where you can buy a course a dime. If I had one penny for each Udemy course I bought... But, starting 15 different courses is taking 15 different steps in 15 different directions. &lt;/p&gt;

&lt;p&gt;In reality, focus pays off. In our experience, developers that stick to things and understand the fundamentals well, come up even stronger when dealing with new frameworks, as they become more adaptable to change.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-you-should-code-for-money-not-for-passion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. You should code for money, not for passion&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;What did you just say? There is a lot of shaming of developers that sound driven by money, I know. Either by peers or companies, they interview for. Well, screw that. &lt;/p&gt;

&lt;p&gt;There is no shaming on late night deployments, long hours, nonexistent pay raises, and free beer and soda that only make you sick. I am not telling you to be greedy, but never feel guilty when it comes to negotiating for your worth. Or leaving a company because you want to make more so you can move into that dream house or buy the latest gadgets. &lt;/p&gt;

&lt;p&gt;No, it is not going to be easy. To negotiate well, you need to be in a position of power. To be in a position of power, you need to be in demand. To be in demand you need to‚Ä¶ If you read this article with absolute focus, not like that last Udemy course you skipped through, then you will already know the answer to that. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-monkey-see-monkey-do-monkey-fails-code-challenge"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Monkey see monkey do, monkey fails code challenge&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;With sensational headlines such as ‚Äúfrom dog walker to software engineer in 12 weeks‚Äù, we are at a point in the industry where everyone that binge watches JavaScript for beginners on Youtube calls themselves an expert.&lt;/p&gt;

&lt;p&gt;The ‚Äúmonkey see monkey do‚Äù culture popularized by the ‚Äúfree‚Äù courses (Youtube is not free, is a time-sucking vampire ) and mediocrity is running high. Yet, barely seeing things does not translate to expertise. You can watch Game Of Thrones as much as you want, does not mean you will learn how to govern a country(or your village).&lt;/p&gt;

&lt;p&gt;In other words, just because you theoretically know about something, doesn't mean you can apply it when building software or in a technical interview. The list of buzzwords listed on your CV is not an indicator of ability. In the real world, monkey must know why things happen, so monkey can actually write code to fix it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-exactly-how-to-plan-your-technical-growth"&gt;
  &lt;/a&gt;
  &lt;strong&gt;6. Exactly how to plan your technical growth&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The phrase we recall the most from our interviews with more than 250 developers that applied to our program was ‚ÄúI lack a plan‚Äù. What‚Äôs worse, many developers we talked to, delegated this responsibility entirely to their company. &lt;/p&gt;

&lt;p&gt;But your interest as a software developer is not always your employer‚Äôs interest. Yet, developers that had a plan even before joining our program, achieve their goals 45% faster than their less organized counterparts.&lt;/p&gt;

&lt;p&gt;So how can you come up with a plan for yourself? I could write a PhD about this topic. For now, you can keep it simple, look into the future let‚Äôs say 12 months from now. Reverse engineer what you would like to achieve and boil it down to the specifics. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-opensource-bragging-rights-and-working-for-free-or-for-status"&gt;
  &lt;/a&gt;
  &lt;strong&gt;7. Open-source bragging rights and working for free (or for status)&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Against all popular belief, a GitHub profile, contributions to open source or social media followers are almost irrelevant when it comes to getting paid properly for your skills.&lt;/p&gt;

&lt;p&gt;We actually see a negative correlation between the time you spend on social media and a developer‚Äôs salary. And though open source works in some cases(there are always exceptions), it is mostly with outliers.&lt;/p&gt;

&lt;p&gt;The most highly paid developers we worked with were solving deep dark problems buried in fizzy requirements and legacy code. Think about it. What is easier, deciphering decades-old code, aligning with non-tech people all under tight deadlines or hacking the weekend fixing some GitHub issue?&lt;/p&gt;

&lt;p&gt;Fixing dirty, nasty code pays off, and it pays off generously. Once again, using your coding skills to solve real problems in the real world away from the noisy crowd is what will get you the salary you deserve.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-how-to-get-paid-what-you-deserve-and-even-more"&gt;
  &lt;/a&gt;
  &lt;strong&gt;8. How to get paid what you deserve (and even more)&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;In software development, you make the most money not by writing a blog, not by making youtube tutorials about the same 5 libraries everyone knows, not by tweeting, and not by refurbishing some boilerplate and calling it open source.&lt;/p&gt;

&lt;p&gt;You make the most money writing good freaking software. Tadaaa. Quite a surprise huh? Now take a look in the mirror and ask yourself, in the last month how much time did you invest in learning how to write better software? Social media does not count. Surfing the web does not count.&lt;/p&gt;

&lt;p&gt;Just like a basketball player if you want to get good with the ball. It is time on court that matters. Make writing software the main thing. Because it is the main thing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-a-technical-tool-kit-to-keep-you-out-of-trouble"&gt;
  &lt;/a&gt;
  &lt;strong&gt;9. A technical ‚Äútool kit‚Äù to keep you out of trouble&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;What did you have for breakfast 17 days ago? What was that critical issue in the sprint 6 months ago? You might be able to answer these questions, but by all means, they aren't easy (unless you always have the same thing for breakfast, which you actually should.). Human memory fails all the time.&lt;/p&gt;

&lt;p&gt;This is why using predefined recipes when faced with a technical challenge is betting on you remembering that damn breakfast. You don‚Äôt need to memorize 1000 data structures, problems, or algorithms. What you need is a process. Just like the mechanic uses a physical tool kit to fix hundreds of different cars, you should use one, a mental one.&lt;/p&gt;

&lt;p&gt;At CodeWithDragos we dived deep into the ocean of tutorials and articles and we could not find any that could work in the messy real world of technical interviews. So we went ahead and built one for our customers. It is simple, it is sexy, it has 5 steps and most importantly, it works. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-why-startups-are-the-worst-place-to-start-as-a-developer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;10. Why startups are the worst place to start as a developer&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Spaghetti code, long nights, lack of structure and growth, no senior people around you to mentor you. If you are looking to start your developer career on the pole position you might want to stay away from the ‚Äònext big thing‚Äô that will probably never happen.&lt;/p&gt;

&lt;p&gt;Leaving aside some select places and all the media glorification of startups, the reality is they are pretty bad places to get started in software. Young inexperienced founders selling the best thing since sliced bread is a very nice story for newspapers. &lt;/p&gt;

&lt;p&gt;In reality, the developer had to spend long and lonely nights building what the ‚Äòhustlers‚Äô promised. Not so sexy anymore, right? &lt;/p&gt;

&lt;p&gt;All the software developers we worked with preferred established companies as a starting point. The more experienced the developer, the more they demanded working for companies with mature engineering cultures.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-they-say-they-hire-for-potential-but-hire-for-ability-instead"&gt;
  &lt;/a&gt;
  &lt;strong&gt;11. They say they hire for potential but hire for ability instead&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Managers don‚Äôt want to take any additional risk. There is already a lot of risk in building software. Why bet success on a fresh newbie? Ever wondered where the ‚Äò3 years experienced junior‚Äô job offers come from? Now, it is easy to blame them.&lt;/p&gt;

&lt;p&gt;But, imagine you are a manager with a tight deadline. Would you hire yourself? I bet you would think about it, at least twice. A good attitude is nice to have, skills are a must. So you better pass their finger bleeding tech challenge. &lt;/p&gt;

&lt;p&gt;Don‚Äôt join the complainers, work on your skills. You will still get rejected, ghosted and ignored. Yet each test will make you a better dev. At CodeWithDragos we observed it takes around 3 to 5 code challenges for the average developer to get up to speed.&lt;/p&gt;

&lt;p&gt;The only way for you to approach these challenges without your heart plunging out of your chest is by having a process. This is why CodeWithDragos has developed a 6 steps method that enables any developer to overperform when faced with such a challenge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-why-the-community-got-it-all-wrong"&gt;
  &lt;/a&gt;
  &lt;strong&gt;12. Why the ‚Äòcommunity' got it all wrong&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Go ahead and google ‚Äúbest books for software developers‚Äù. You will find everything, from clean code to design patterns. With so much focus on the theoretical aspect of software development, the software community forgot something.&lt;/p&gt;

&lt;p&gt;Even if we program computers, we are still human. Most software development books dive deep into the theoretical aspects of being a developer. In our work we found out mindset, motivation, discipline and planning are as important for long term success. Clean code, clean architecture and working software are by-products of discipline, consistency and hard work. &lt;/p&gt;

&lt;p&gt;Widely neglected, developers forget that high performance in their applications comes from the high performance of their bodies and brains. Remember, the quality of your code is as high as the quality of your thinking.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-a-secret-trick-to-sell-yourself-even-if-you-are-just-another-introvert"&gt;
  &lt;/a&gt;
  &lt;strong&gt;13. A secret trick to sell yourself (even if you are just another introvert)&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Unless your coding skills help someone solve painful problems, you will be just a hobbyist or an artist at best. Nothing wrong with that, but if you want to feed yourself with something more than hackathon pizzas you better find someone with big problems and big pockets (don‚Äôt forget the pockets please).&lt;/p&gt;

&lt;p&gt;Remember the people you can help the most are not on Twitter, GitHub or Stackoverflow. They are out in the real world, having real problems. To our surprise and not so, the most efficient way to land high paying opportunities for the developers we worked with was to centre all efforts on a highly optimized CV and LinkedIn profile.&lt;/p&gt;

&lt;p&gt;One of our mentees keeps getting 5 to 7 calls a week even 3 months after landing a highly paid senior position. What are their secrets? Too many to count.&lt;/p&gt;

&lt;p&gt;If I were to give you only one precious hint, treat your CV and Linkedin profile with the precision of a surgeon. Besides your coding skills, they are your most important assets, even down the road when you are past the mid/senior level.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#14-what-you-must-never-miss-in-your-dev-cv"&gt;
  &lt;/a&gt;
  &lt;strong&gt;14. What you must never miss in your dev CV&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;After personally writing more than 40 CVs that passed the insane checks at top tech companies I can tell you might be doing it all wrong. Most developers do their CV the same way they would cook soup. Add some things, and then add some more until they feel it is about right. &lt;/p&gt;

&lt;p&gt;In the process, they forget the only thing that matters, the key to a good dev CV. That is relevancy. If your CV is awesome but is not relevant, it will be awesomely ignored. Being relevant means doing the necessary research and focusing on what you know best. Merely stating what you have been doing in your last job is not enough.&lt;/p&gt;

&lt;p&gt;Dig deeper, add numbers, be explicit and don‚Äôt be afraid to compliment yourself. Keep colours, formatting and fancy glitter out. Opt for simplicity and attention to detail. Afterwards, proofread it like crazy. You don‚Äôt get a second chance to make a great first impression.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#15-success-has-no-flavour"&gt;
  &lt;/a&gt;
  &lt;strong&gt;15. Success has no flavour&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;You want to know what our most successful mentees do that allows them to excel and consistently land the best opportunities out there? I was curious. Actually, I was damn curious. The top 10% of the software developers we worked with got salary increases as big as 35%. &lt;/p&gt;

&lt;p&gt;And guess what, they all had a nasty thing in common. Yes, regardless of their domain (frontend, backend) they all had a technology-agnostic understanding of software development. That means understanding things beyond technologies, frameworks and languages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#16-the-ultimate-weapon-for-the-code-interview"&gt;
  &lt;/a&gt;
  &lt;strong&gt;16. The Ultimate Weapon For The Code Interview&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;With the quality of the interviews as good as the quality of JS answers on Stack overflow, if you are spending more than a few hours on a code challenge you are already starting on the wrong foot.&lt;/p&gt;

&lt;p&gt;The truth is the tech lead or senior developer that you will send the assignment to will spend around 3 minutes reviewing your work, and given the lack of guidelines on what exactly they understand by ‚Äúclean code‚Äù, you are playing a guessing game.&lt;/p&gt;

&lt;p&gt;We got the game to a whole new level by building a highly structured process and eliminating inefficiency (such as writing/coding thighs again and again). This increased effectiveness in some cases by a factor of 10. &lt;/p&gt;

&lt;p&gt;Tech interviews are broken, don‚Äôt hate the player, hate the game.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#17-how-to-predict-the-future-your-future"&gt;
  &lt;/a&gt;
  &lt;strong&gt;17. How to predict the future, your future&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Every day as a developer you are making a decision. A decision about what you should learn next. You go out there in the wild, check social media, check google and maybe ask your friends. You then decide to learn something.&lt;/p&gt;

&lt;p&gt;But, this sophisticated type of herd thinking is not bringing you the results you want. Why? Simple. Anonymous benefactors on Google, Stackoverflow and your dear friends don‚Äôt know what you are good at and what you struggle with.&lt;/p&gt;

&lt;p&gt;So how can they give you a proper direction? At best, you will get a random recommendation or a solution built for the masses. And that's the last thing you want in order to excel.&lt;/p&gt;

&lt;p&gt;To predict what you should learn next, you must look into the past, your past. You must spend time sharpening that axe. For example, learning Kubernetes when you are still shaky in JavaScript will only aggravate your gaps.&lt;/p&gt;

&lt;p&gt;First, you must cover the basics. Instead of scrolling online and looking at what is the hottest thing out there, you should first look at your own skills and understand what is the next best spot to improve. To predict the future, look into the past.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#18-success-is-replicable"&gt;
  &lt;/a&gt;
  &lt;strong&gt;18. Success is replicable&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;At CodeWithDragos we found out that core principles that made developers we worked with so insanely successful can be applied to anyone. So far we applied this system together with 40+ software developers all over the world. An example: one of the developers that recently joined the program, reached his target position and salary in the 4th week of the program.&lt;/p&gt;

&lt;p&gt;And his background was not even 100% related to traditional web development. Our Software Elite System‚Ñ¢ built by veterans in the field of software development and battle-tested 12 months incorporates all the principles mentioned above to help you as an amphibious developer with the ultimate weapon to success in this highly competitive field.&lt;/p&gt;

&lt;p&gt;It brings sophistication through simplicity and helps you build long-lasting confidence in your technical skills as well as mastery of the craft of coding. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#19-what-to-do-when-you-dont-feel-like-coding"&gt;
  &lt;/a&gt;
  &lt;strong&gt;19. What to do when you don‚Äôt feel like coding&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs start by breaking taboos. Even the best developers out there, the little Zuckembergs, the wizards have times when they just don‚Äôt feel like coding. I won‚Äôt say, I feel you. Take a break. Don‚Äôt forget, if you are still in the junior/mid-level rank, you have a long way to go until you get the chance to get a break. Right now I have to be honest, you can‚Äôt really afford one.&lt;/p&gt;

&lt;p&gt;Plus, the sooner you are in the journey and the more you stop, the more you start doubting the whole thing and think, oh this crazy journey that might not even be for you. So what should you do when you don‚Äôt feel like it anymore, but have to do it anyway?&lt;/p&gt;

&lt;p&gt;Let me share a little trick from an old cat that has been at the coding game for a while now. When you don‚Äôt feel like coding you need to keep pushing. But not until you break down in front of your code editor. You need to push for let‚Äôs say one more hour.&lt;/p&gt;

&lt;p&gt;What the greats know is that sometimes your brain is playing tricks on you. And sometimes that hour will be the most productive thing you ever did(sometimes that hour can create an outstanding piece of code or an article like this one). &lt;/p&gt;

&lt;p&gt;If after one hour you still feel like the screen is melting your eyes, then close the damn laptop and go outside.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-proposition-to-you"&gt;
  &lt;/a&gt;
  My proposition to you
&lt;/h2&gt;

&lt;p&gt;In the last months, I have built a whole team of specialized software training experts. We burned the midnight oil, we talked to other dev friends, we talked to their bosses.&lt;/p&gt;

&lt;p&gt;We gained years of experience in the process, but I can‚Äôt write it all here. This is why I recorded a little video where I go much more in-depth on how the system works. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-can-watch-it-here-for-free"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/3w76Mar"&gt;&lt;strong&gt;You can watch it here for free.&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;In it you will learn: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Biggest Mistake Most Software Developers Are Making When It Comes To Their Technical Growth and Earning More The&lt;/li&gt;
&lt;li&gt;Three Things That Highly Paid Programmers Use To Build Extreme Confidence In Their Technical Skills&lt;/li&gt;
&lt;li&gt;The Proven ‚Äú4-Step-System‚Äù That Will Help You And Put Your Dev Career On Autopilot And How You Can Use It Right Now&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#click-here-now-to-watch-the-free-video"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/3w76Mar"&gt;&lt;strong&gt;Click here now to watch the free video!&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Best of success!üí™&lt;br&gt;
Dragos Nedelcu&lt;/p&gt;

&lt;p&gt;&lt;em&gt;P.S. Like many others you might crave unfiltered advice about what it really takes to build long-lasting confidence in your technical skills, become an expert developer and make more money. If you want to feed your brain, then I invite you to follow me on &lt;a href="https://www.linkedin.com/in/dragosnedelcu/"&gt;LinkedIn&lt;/a&gt; or &lt;a href="https://twitter.com/dragosgn"&gt;Twitter&lt;/a&gt; :) I will make sure to keep delivering you fresh pieces of wisdom straight from the trenches of software development. I will also make you get off your but and take action from time to time.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to build a chat app that looks like WhatsApp with the TalkJS API</title>
      <author>Aswin Rajeev</author>
      <pubDate>Wed, 30 Jun 2021 10:31:27 +0000</pubDate>
      <link>https://dev.to/talkjs/building-a-whatsapp-clone-with-talkjs-chat-api-cdf</link>
      <guid>https://dev.to/talkjs/building-a-whatsapp-clone-with-talkjs-chat-api-cdf</guid>
      <description>&lt;p&gt;Today, we'll show you how to create a chat UI similar to WhatsApp using the &lt;a href="https://talkjs.com/"&gt;TalkJS Chat API&lt;/a&gt;. We'll start with the TalkJS Default Theme and customize it by using the &lt;a href="https://talkjs.com/resources/announcing-themesv2/"&gt;TalkJS Themes&lt;/a&gt;. Here is the current look of the TalkJS Inbox with the default style. First, we'll list all changes that we need to make for it to look more like WhatsApp. Once that is done, we will see how these changes can be done in the Theme Editor on TalkJS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iws8TcNB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghcxcn2z21e1n6mrfig4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iws8TcNB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghcxcn2z21e1n6mrfig4.gif" alt="TalkJS Inbox Default Theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-to-do"&gt;
  &lt;/a&gt;
  Things to do
&lt;/h2&gt;

&lt;p&gt;For this article, we‚Äôll have a checklist of the things we want to do and then we‚Äôll tackle each of them one by one.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Change the chat header color to green (#009688)&lt;/li&gt;
&lt;li&gt;Change the user message color to #CFE9BA and the other person‚Äôs message to white (#FFFFFF)&lt;/li&gt;
&lt;li&gt;Change the chat background color to #E5DDD5&lt;/li&gt;
&lt;li&gt;Remove the user‚Äôs avatar from within the chatbox&lt;/li&gt;
&lt;li&gt;Change the style of the message body to be more of a rounded rectangle with a slight box-shadow. Also increased the font-weight a little to match that of WhatsApp‚Äôs chat.&lt;/li&gt;
&lt;li&gt;Change the highlight colors to the traditional green in WhatsApp (#009688). Change the text color of the active highlighted item to white&lt;/li&gt;
&lt;li&gt;Remove the background from the message input field&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once we‚Äôre done with all of the above, the inbox should look something like this. As you can see, it is almost as good as a regular WhatsApp chat. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OJ0hzRS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r6pkk75xycwh12oaxge6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OJ0hzRS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r6pkk75xycwh12oaxge6.gif" alt="TalkJS Inbox - WhatsApp Theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-talkjs-theme-editor"&gt;
  &lt;/a&gt;
  The TalkJS Theme Editor
&lt;/h2&gt;

&lt;p&gt;If you have previous experience with frontend web development, you must be familiar with stylesheets. With TalkJS, we have a styling dashboard where you can edit a limited set of fields (for now) to play around with the TalkJS Chat theme. This is very useful even if your experience is limited because it comes as a combination of text fields and stylesheets.&lt;/p&gt;

&lt;p&gt;To apply a theme, we are going to have a role called ‚Äòdefault‚Äô in the ‚ÄòRoles‚Äô section of the TalkJS dashboard. Once we have the role set up, you can scroll down to see a section called ‚ÄòUI Theme‚Äô. Currently, it will be in the default theme. After we set up a new theme in the Theme Editor, it will come up in the list of themes and we can simply select it to apply it to our Inbox. It also allows you to edit the themes live and reload the page to view the changes directly. Now let‚Äôs start by editing the styles for the Inbox.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usermessage"&gt;
  &lt;/a&gt;
  UserMessage
&lt;/h2&gt;

&lt;p&gt;Click on ‚ÄòCreate new theme‚Äô in the Theme Editor section and set a new name for your theme. The first thing that we need to do is remove the avatars from the chat. WhatsApp doesn‚Äôt show the avatars on every message, but only at the top. For this, we need to do the following. Set the showAvatars property to false on line number 54 and delete lines 58 to 62.&lt;/p&gt;

&lt;p&gt;We will first edit the message-row class to decrease the distance between two consecutive messages. Edit the margin-bottom and margin-top attributes and set them to the following values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.message-row&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;/* Align the avatar and the message centrally, but if the message's height
       is greater than the avatar we will align it to the top
       -- See Avatar.template for how this is achieved */&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we will edit the message class, for both the persons, the one who initiated the chat and the one who they‚Äôre talking to.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.message&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;-moz-fit-content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fit-content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;0.5px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.13&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This class is for the general chat message. We also need to change some properties of the chat message that is initiated by the current user. This one has a different color, so we need to add that property to the following class. All the other lines in here can be deleted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.by-me&lt;/span&gt; &lt;span class="nc"&gt;.message&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#cfe9ba&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once these changes are done, you will see that the chat messages are starting to look more like that from WhatsApp.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chatheader"&gt;
  &lt;/a&gt;
  ChatHeader
&lt;/h2&gt;

&lt;p&gt;We need to change only one field over here and that is the background-color. Change it to the following value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#009688&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-shrink&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give the chat header the distinctive green color that we have on WhatsApp.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#avatar"&gt;
  &lt;/a&gt;
  Avatar
&lt;/h2&gt;

&lt;p&gt;Remove the properties for border-style, border-width, and border-color. This should remove the white border for the user avatars on the chat header.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#layout"&gt;
  &lt;/a&gt;
  Layout
&lt;/h2&gt;

&lt;p&gt;Click on the layout section at the left side menu. This provides an easy-to-use interface for some of the components which are either not configurable in the CSS or sometimes override the CSS styles. Click on the Global sub-section and change the font-family to "Segoe UI", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif. Now, open up the Chatbox sub-section and set the backgroundColor to #E5DDD5. Next, open the Inbox feed panel sub-section and set backgroundColor to #FFF (white).&lt;/p&gt;

&lt;p&gt;For the message field sub-section, we need to change two properties. First, set the borderRadius to 4rem and then the color to #000 (black). In the highlights subsection change the backgroundColor to #009688 and color to #FFF (white). Open up the panel footers section and change the backgroundColor to transparent. Lastly, in the notification toggle section, change the borderColor to #009688.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--36MPNP08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ue8xs0evy4ncm1kw6dkw.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--36MPNP08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ue8xs0evy4ncm1kw6dkw.JPG" alt="TalkJS Inbox - WhatsApp Theme Final"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you‚Äôve followed all of that correctly, you should have a chat inbox that looks like this, except for the messages obviously. Even the Desktop Notifications toggle has the color scheme used in WhatsApp. If you change the Inbox style of the TalkJS chat to a Chatbox with this theme, it would look similar to the mobile UI of WhatsApp (It‚Äôs worth mentioning that you can deploy a TalkJS chat in your mobile app). You don‚Äôt need to make any additional styling changes. If you want to reduce the width, just head over to the Chatbox section in the layout menu and change the maxWidth to a value that you like. We have set it to 320px below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HM_ay4PZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwj4ym58a5zo3dqr8y99.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HM_ay4PZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwj4ym58a5zo3dqr8y99.JPG" alt="TalkJS Chatbox WhatsApp Theme Mobile"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You see how easy it was to theme our chat UI to look like WhatsApp. What‚Äôs more interesting is the fact that we never really did a lot of coding to achieve this. The Theme Editor in TalkJS allows users to come up with new themes or edit the existing ones through a very intuitive interface using form based input. The changes are saved automatically and you can see the changes immediately.&lt;/p&gt;

</description>
      <category>css</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Mask and unmask a password input</title>
      <author>Ridhwana Khan</author>
      <pubDate>Wed, 30 Jun 2021 10:09:49 +0000</pubDate>
      <link>https://dev.to/ridhwana/mask-and-unmask-a-password-input-3lf3</link>
      <guid>https://dev.to/ridhwana/mask-and-unmask-a-password-input-3lf3</guid>
      <description>&lt;p&gt;I recently worked on a feature to be able to mask and unmask a password using some vanilla javascript, and I thought I'd share how I did this.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2SxP825c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/2786819/123863212-96b0fc80-d929-11eb-92ed-7f70e27a1c85.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2SxP825c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/2786819/123863212-96b0fc80-d929-11eb-92ed-7f70e27a1c85.gif" alt="Password Mask"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to jump ahead and just see the code without the walkthrough, you can view the code on &lt;a href="https://codepen.io/Ridhwana/pen/vYmBrbx"&gt;Codepen&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1:
&lt;/h1&gt;

&lt;p&gt;THE HTML: &lt;/p&gt;

&lt;p&gt;Let's put some HTML together for a password field. In most instances that will form as part of a &lt;code&gt;form&lt;/code&gt; but in this case I'm just going to go ahead and only show the &lt;code&gt;div&lt;/code&gt;  for the password.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Password&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"password-input-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"eye-container js-password-visibility-toggle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"js-eye"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"22"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"18"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 22 18"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M11 0c5.392 0 9.878 3.88 10.819 9-.94 5.12-5.427 9-10.82 9C5.609 18 1.123 14.12.182 9 1.12 3.88 5.608 0 11 0zm0 16a9.005 9.005 0 0 0 8.777-7A9.005 9.005 0 0 0 2.223 9 9.005 9.005 0 0 0 11 16zm0-2.5a4.5 4.5 0 1 1 0-9 4.5 4.5 0 0 1 0 9zm0-2a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"#64707D"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"js-eye-off hidden"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"22"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"22"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 22 22"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M16.882 18.297A10.95 10.95 0 0 1 11 20C5.608 20 1.122 16.12.18 11a10.982 10.982 0 0 1 3.34-6.066L.393 1.808 1.807.393l19.799 19.8-1.415 1.414-3.31-3.31zM4.935 6.35A8.965 8.965 0 0 0 2.223 11a9.006 9.006 0 0 0 13.2 5.838l-2.027-2.028A4.5 4.5 0 0 1 7.19 8.604L4.935 6.35zm6.979 6.978-3.242-3.242a2.5 2.5 0 0 0 3.24 3.241l.002.001zm7.893 2.264-1.431-1.43a8.936 8.936 0 0 0 1.4-3.162A9.006 9.006 0 0 0 8.553 4.338L6.974 2.76C8.22 2.27 9.58 2 11 2c5.392 0 9.878 3.88 10.819 9a10.95 10.95 0 0 1-2.012 4.592zm-9.084-9.084a4.5 4.5 0 0 1 4.769 4.77l-4.77-4.77z"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"#64707D"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;  
    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"js-password"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The  main element to take note of is the &lt;code&gt;password-input-container&lt;/code&gt;. It contains two elements: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;eye-container&lt;/code&gt; with two spans that each contain an SVG (an &lt;code&gt;eye&lt;/code&gt; and an &lt;code&gt;eye-off&lt;/code&gt; SVG). The &lt;code&gt;eye-off&lt;/code&gt; SVG will be hidden by default because the password is masked in its default state.&lt;/li&gt;
&lt;li&gt;An input field with type &lt;code&gt;password&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I tend to still follow &lt;a href="https://csswizardry.com/2015/03/more-transparent-ui-code-with-namespaces/"&gt;BEM Notation&lt;/a&gt; for any classnames that I write. Hence, you will see that some classnames have a JavaScript namespace, and are therefore prepended with &lt;code&gt;js-&lt;/code&gt; . This is a verbose indicator that this piece of the DOM has some behaviour acting upon it, and that JavaScript binds onto it to provide that behaviour. Hence, it reduces the risk of someone editing or removing the classname mistakenly without realizing that some javascript code depends on it. &lt;/p&gt;

&lt;p&gt;Take note of the &lt;code&gt;js-&lt;/code&gt; prepended classnames as this will allow us to bind the correct masking and unmasking behaviour in the JavaScript code. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2:
&lt;/h1&gt;

&lt;p&gt;THE JAVASCRIPT&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eyeIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-eye&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eyeOffIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-eye-off&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;passwordField&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;visibilityToggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-password-visibility-toggle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;visibilityToggle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;togglePasswordMask&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;togglePasswordMask&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;togglePasswordType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;toggleEyeIcons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;togglePasswordType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;passwordType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;visible&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;passwordField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;passwordType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;toggleEyeIcons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;eyeOffIcon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;eyeIcon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;visible&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's walkthrough the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;visibilityToggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-password-visibility-toggle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;visibilityToggle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;togglePasswordMask&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We first search the DOM for the classname &lt;code&gt;js-password-visibility-toggle&lt;/code&gt;. &lt;code&gt;js-password-visibility-toggle&lt;/code&gt; is the container that contains the &lt;code&gt;eye&lt;/code&gt; icons (one hidden and one not). &lt;/p&gt;

&lt;p&gt;We then use add &lt;code&gt;addEventListener&lt;/code&gt; to listen for a  &lt;code&gt;click&lt;/code&gt; on the element. When the user clicks on the element the function &lt;code&gt;togglePasswordMask&lt;/code&gt; will be called.&lt;/p&gt;

&lt;p&gt;The reason we do not add event listeners on the individual SVG &lt;code&gt;span&lt;/code&gt; is because then we'll need to add two eventListeners to the DOM (one for the &lt;code&gt;eye&lt;/code&gt; and another for the &lt;code&gt;eye-off&lt;/code&gt;) and each of the callbacks will be doing something similar. Instead, we allow the trigger on the container and use a "sort of state" variable to figure out whether we're masking or unmasking.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;togglePasswordMask&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;togglePasswordType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;toggleEyeIcons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first time that we load the form the password is not visible, hence we set &lt;code&gt;visible&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; initially. &lt;/p&gt;

&lt;p&gt;Each time we click on the &lt;code&gt;eye&lt;/code&gt; icon, we toggle visible to negate its current value using &lt;code&gt;visible = !visible&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When we click we want &lt;/p&gt;

&lt;p&gt;a) the password to be revealed, i.e. &lt;code&gt;togglePasswordType&lt;/code&gt;, and &lt;/p&gt;

&lt;p&gt;b) the icon we clicked on to change - i.e. &lt;code&gt;toggleEyeIcons&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;passwordField&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;togglePasswordType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;passwordType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;visible&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;passwordField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;passwordType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;togglePasswordType&lt;/code&gt; simply sets the input type to &lt;code&gt;text&lt;/code&gt; or &lt;code&gt;password&lt;/code&gt;  depending if we want to mask or unmask the password.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eyeIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-eye&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eyeOffIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-eye-off&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;toggleEyeIcons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;eyeOffIcon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;eyeIcon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;visible&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;toggleEyeIcons&lt;/code&gt; add and remove the &lt;code&gt;hidden&lt;/code&gt; class name depending on whether the password is visible or not.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/lD76yTC5zxZPG/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/lD76yTC5zxZPG/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That wraps it up for the code, I hope that was useful and easy to follow. Feel free to drop comments or questions below. üëáüèΩ&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>Reporting Functions for Your Application ‚Äì Build or Buy?</title>
      <author>Pius Richter</author>
      <pubDate>Wed, 30 Jun 2021 09:58:41 +0000</pubDate>
      <link>https://dev.to/combit/reporting-functions-for-your-application-build-or-buy-3h4o</link>
      <guid>https://dev.to/combit/reporting-functions-for-your-application-build-or-buy-3h4o</guid>
      <description>&lt;p&gt;The build-or-buy-question can easily be translated with DIY or let somebody else do it for you? And this question essentially appears quite often in everyday life when it comes to other things. Should I do the repair myself? Do I manage financial stuff or vacation planing on my own? And of course the answer always depends on what kind of character you are and whether you have time enough or willingness to deal with the topic or not. &lt;/p&gt;

&lt;p&gt;Often, however, the answer is not immediately clear and you need to look at the more specific pros and cons. This also applies to the topic in this post: &lt;strong&gt;Reporting functions for your application&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Are you planning to develop an application with integrated reporting functionalities? Or maybe implement it in an already existing application? No matter what the situation is, the basic question remains the same: &lt;strong&gt;do you want to put sweat, blood and tears into your own programming?&lt;/strong&gt; Or would it be the better idea to take advantage of a ready to use reporting tool? We put together &lt;strong&gt;9 benefits&lt;/strong&gt;, which speak for a professional solution, and which we often hear from our users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Easy Designing&lt;/strong&gt;&lt;br&gt;
Reports, charts, invoices, labels, forms or lists ‚Äì using a reporting tool means covering all those demands with a single strike. Also, you do not have to provide these reports and templates yourself. Just forward the &lt;strong&gt;&lt;a href="https://www.combit.com/report-designer/"&gt;Report Designer&lt;/a&gt;&lt;/strong&gt; to your customers as an integral part of your application. Drag &amp;amp; Drop functionalities, design schemes, various wizards, a wide range of objects like tables, charts, graphics, formatted text, barcodes and much more make it a breeze for you and your end users to create and design their own layouts and results, tailored to their individual wishes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Visualizing: To Each Their Own&lt;/strong&gt;&lt;br&gt;
The more end users you confince of your application, the more diverse the wishes and requirements for new ways of reporting. Relying on your own programming efforts means to invest a lot of time into customizations. A reporting tool, on the other hand, already provides a &lt;strong&gt;wide range of charts, gauges, maps and shapefiles&lt;/strong&gt; as a standard starting point. More sophisticated components also offer Gantt charts, treemaps and waterfall charts. Score even more points by going beyond your end users‚Äô expectations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Extended Reports With Interactive Functions&lt;/strong&gt;&lt;br&gt;
Even when you‚Äôre dealing with larger amounts of data, your reports need to stay easy to read and structured. In order to include as much data as possible without getting lost, reporting tools offer a range of interactive functionalities. Beside &lt;strong&gt;drilldowns&lt;/strong&gt; and expandable regions, there‚Äôs also the option to sort your data, or to filter after certain parameters. For more information about these functions, we recommend our blog post &lt;a href="https://blog.combit.net/en/blog/development/april-2020/interactive-reports-with-list-label/"&gt;Interactive Reports with List &amp;amp; Label&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n_vVxoTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/950ltg9m7q5tbjysc2m0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n_vVxoTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/950ltg9m7q5tbjysc2m0.jpg" alt="Interactive Reporting Functions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. The Comfort of WYSIWYG&lt;/strong&gt;&lt;br&gt;
Another advantage for choosing a reporting tool is the &lt;strong&gt;Designer preview&lt;/strong&gt; function. It makes your reporting fast, easy and efficient. Just one click generates your report, filled with real time data, but as a preview before the final output. If that is not enough, it gets even more convenient for you with the option to export in any format without fiddling around with conversion tasks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Always Up-To-Date&lt;/strong&gt;&lt;br&gt;
Nowadays, not only frameworks and programming languages are moving forward with lightning speed. Developing your own reporting functionalities means always staying on top of things in order to provide a state of the art product. This does not only apply to software development itself, but also to keeping up with interface compatibility and conformity with ever-changing legal conditions. Counting on a reporting tool though means to lean back and benefit from the manufacturer‚Äôs progression instead. No need to chase down the increasing technical requirements of software development yourself.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Easy Integration in Applications&lt;/strong&gt;&lt;br&gt;
Probably one of the most important reasons to decide on a reporting tool: many developers already wrapped their heads around integrating a certain component in an existing software architecture, without the need to change or modify this structure itself. The solutions to do so are multiple and extremely flexible. As for example, List &amp;amp; Label can be used in all major &lt;strong&gt;development environments&lt;/strong&gt; (such as Microsoft Visual Studio and Embarcadero RAD Studio), &lt;strong&gt;languages&lt;/strong&gt; (including C#, VB.NET, C++, Java and Delphi) as well as &lt;strong&gt;frameworks&lt;/strong&gt; (like .NET Framework, ASP.NET/ASP.NET MVC and .NET Core/ASP.NET Core).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bkik331Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hx0f69a8xld00fg20mo2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bkik331Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hx0f69a8xld00fg20mo2.jpg" alt="Embedded Reporting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Data Sources&lt;/strong&gt;&lt;br&gt;
Connecting a reporting tool to existing data sources is another important feature. As a rule, reporting tools always provide a huge &lt;strong&gt;variety of data providers&lt;/strong&gt;, which connect easily to your own data sources ‚Äì often just by using a simple wizard, or with a few lines of code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Save Time and Hit the Market&lt;/strong&gt;&lt;br&gt;
Why invent anything that has been invented already? Think about writing countless lines of source code and consider the risk of mistakes ‚Äì why not save yourself the nerves by picking an existing tool instead? &lt;strong&gt;You gain precious time to focus on your core competence and tasks&lt;/strong&gt;. With a professional tool, it‚Äôs a breeze to realize even very complex reports in a heartbeat. In the end, you will save a lot of development time, which means you enter the market way faster and leave competition behind. The numerous functionalities allow you to efficiently react to customers‚Äô requirements and deal with multiple tasks right away. In case of questions or concerns, the manufacturer provides support and assistance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Clearly Calculated Costs&lt;/strong&gt;&lt;br&gt;
Some reporting solutions do include runtime licenses without charging additional costs. The redistribution of functionalities to end users is included, and there is no charge for additional features. Therefore the &lt;strong&gt;pricing structure is simple and transparent&lt;/strong&gt; ‚Äì and gives you full control in regards to your costs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CONCLUSION&lt;/strong&gt;&lt;br&gt;
As a summary, you, as a software developer, will clearly benefit from picking a reporting tool: simple implementation and connection, less effort for maintenance services, a modern and always optimized interface as well as an incomparable range of functionalities. All these aspects guarantee a highly anticipated product for your customer.&lt;/p&gt;

&lt;p&gt;If you agree with the conclusion, you might be interested in our guide &lt;a href="https://www.combit.com/guidelines-reporting-tool/"&gt;8 Steps to Find the Right Reporting Tool&lt;/a&gt; or in our reporting solution &lt;a href="https://www.combit.com/"&gt;List &amp;amp; Label&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>webdev</category>
      <category>programming</category>
      <category>dotnet</category>
    </item>
    <item>
      <title>Anomaly Detection With CloudWatch</title>
      <author>Harinder Seera üá≠üá≤</author>
      <pubDate>Wed, 30 Jun 2021 09:52:26 +0000</pubDate>
      <link>https://dev.to/aws-builders/anomaly-detection-with-cloudwatch-m9b</link>
      <guid>https://dev.to/aws-builders/anomaly-detection-with-cloudwatch-m9b</guid>
      <description>&lt;p&gt;As a performance engineer, I work closely with the Ops teams to proactively identify any production performance bottlenecks before they negatively impact the user experience. We employ a variety of monitoring and alerting techniques to help us with this process.&lt;/p&gt;

&lt;p&gt;AWS CloudWatch is one of the monitoring tools we utilise. Recently, I was pleasantly surprised to see AWS anomaly detection functionality in CloudWatch. It's a fantastic addition to the CloudWatch features. It brings the capabilities of anomaly detection closer to the other tools like Splunk, AppDynamics, and SumoLogic, to mention a few. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-an-anomaly"&gt;
  &lt;/a&gt;
  What is an Anomaly?
&lt;/h3&gt;

&lt;p&gt;An anomaly is also called an Outlier. An outlier is a value or point or an object attribute that exhibits an abnormal behaviour in a particular or examined context compared to the rest of the observations. &lt;/p&gt;

&lt;p&gt;In a separate post, I will go into more detail on the outliers. For this post, we will focus on CloudWatch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-anomaly-detection"&gt;
  &lt;/a&gt;
  What is Anomaly detection?
&lt;/h3&gt;

&lt;p&gt;Anomaly detection is the process of discovering values, occurrences, or observations that differ considerably from the majority of the data and raise suspicions. A variety of algorithms are available to assist in anomaly detection. K-nearest neighbour, Local Outlier Factor (LOF), and K-means are a few such examples. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-set-anomaly-detection-using-cloudwatch"&gt;
  &lt;/a&gt;
  How to set Anomaly detection using CloudWatch?
&lt;/h3&gt;

&lt;p&gt;CloudWatch anomaly detection uses statistical and machine learning algorithms. These algorithms continuously evaluate system and application data, establish normal baselines, and surface anomalies With minimal human participation.&lt;/p&gt;

&lt;p&gt;The algorithms are trained using two weeks of metric data. Even if a metric doesn't have a lot of data, you can still enable anomaly detection on it.&lt;/p&gt;

&lt;p&gt;In the graph, the projected range of values is shown by a grey band. If the metrics actual value exceeds or drops from this band, it is shown in red. It's algorithms way of saying that this value is a potential anomaly.&lt;/p&gt;

&lt;p&gt;To enable anomaly detection, go to the CloudWatch dashboard, pick anomaly detection from the math expressions menu, and then apply calculate band to a specific metric. As shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cQ6SazOq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15i16n5dhddqfa2buwcr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cQ6SazOq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15i16n5dhddqfa2buwcr.png" alt="setup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below are some of the examples from the &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html#CloudWatch_Anomaly_Detection_Algorithm"&gt;AWS documentation&lt;/a&gt;. For more information on this topic, refer to this &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html#CloudWatch_Anomaly_Detection_Algorithm"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ytzJib5e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3ehaj0zhjgud7twk56q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ytzJib5e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3ehaj0zhjgud7twk56q.png" alt="example 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oklKeKQS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8v058ijw47j96kptvk5v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oklKeKQS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8v058ijw47j96kptvk5v.png" alt="example 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow the alert setup method to create an anomalous alert for a metric. Select the "Anomaly detection" condition rather than the "Static" threshold criterion and one of the three alarm conditions. As seen in the illustration below. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QC3yYzwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mek8rh0z9ssx4l13ga6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QC3yYzwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mek8rh0z9ssx4l13ga6.png" alt="alert setup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can choose to exclude specific time periods from being used to train the model when you enable anomaly detection on a metric. This way, you may keep deployments and other uncommon occurrences out of model training, resulting in the most accurate model possible. &lt;/p&gt;

&lt;p&gt;Once I've integrated it in our test and production environments, I'll report back on my findings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Using anomaly detection models for alarms incurs charges on your AWS account.&lt;/p&gt;

&lt;p&gt;If you want to give it a try, refer this &lt;a href="https://aws.amazon.com/blogs/mt/how-to-set-up-cloudwatch-anomaly-detection-to-set-dynamic-alarms-automate-actions-and-drive-online-sales/"&gt;AWS post&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;If you enjoyed this article feel free to share on social media üôÇ&lt;/p&gt;

&lt;p&gt;Say Hello on: &lt;a href="https://www.linkedin.com/in/hpseera/"&gt;Linkedin&lt;/a&gt; | &lt;a href="https://twitter.com/harinderseera"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github repo: &lt;a href="https://github.com/hseera"&gt;hseera&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>performance</category>
      <category>cloud</category>
      <category>analytics</category>
    </item>
    <item>
      <title>How to navigate and switch components with BrowserRouter</title>
      <author>Sunny</author>
      <pubDate>Wed, 30 Jun 2021 09:41:08 +0000</pubDate>
      <link>https://dev.to/eladossa/how-to-navigate-and-switch-components-with-browserrouter-3k14</link>
      <guid>https://dev.to/eladossa/how-to-navigate-and-switch-components-with-browserrouter-3k14</guid>
      <description>&lt;p&gt;I want to switch between components after the user entered the requested info. &lt;br&gt;
&lt;br&gt; Components that will be shown to user by this order:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;{MobileNum } Enter mobile number&lt;/li&gt;
&lt;li&gt;{IdNumber } ID number&lt;/li&gt;
&lt;li&gt;{CreatePassword } Create Password&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When all these steps are completed the browser will switch to the home page.&lt;br&gt;
The user must &lt;strong&gt;not be able&lt;/strong&gt; to move between pages until he filled each request.&lt;/p&gt;

&lt;p&gt;Without using &lt;code&gt;*React Router*&lt;/code&gt; I used to switch only two components with a conditional rendering  &lt;/p&gt;

&lt;p&gt;Now I definitely want a better way with &lt;code&gt;BrowserRouter&lt;/code&gt; as if I had 3-4 components inside &lt;code&gt;Login&lt;/code&gt;.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { Component } from 'react';
import {
  BrowserRouter as Router,
  Redirect,
  Route,
  Switch,
} from 'react-router-dom';
import MobileNum from './MobileNum.jsx';
import IdentNumber from './IdNum.jsx';
import CreatePassword from './createPassword .jsx';

class Login extends Component {
  constructor(props) {
    super(props);
  }

  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;Router&amp;gt;
          &amp;lt;Switch&amp;gt;
            &amp;lt;Route path='/'  component={MobileNum} /&amp;gt;                                                
            &amp;lt;Route path='/'  component={IdNum} /&amp;gt;
            &amp;lt;Route path='/'  component={CreatePassword } /&amp;gt;
          &amp;lt;/Switch&amp;gt;
        &amp;lt;/Router&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}

export default Login;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;I searched the web in &lt;em&gt;reactrouter.com&lt;/em&gt; and many others as here for a clean solution but found no answer.&lt;br&gt;
&lt;br&gt; &lt;strong&gt;Any Idea what's the best way to do it ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>question</category>
      <category>browserrouter</category>
      <category>navigation</category>
    </item>
    <item>
      <title>Micro APIs for everyday use</title>
      <author>Asim Aslam</author>
      <pubDate>Wed, 30 Jun 2021 09:38:11 +0000</pubDate>
      <link>https://dev.to/micro/micro-apis-for-everyday-use-2f48</link>
      <guid>https://dev.to/micro/micro-apis-for-everyday-use-2f48</guid>
      <description>&lt;p&gt;Hey all,&lt;/p&gt;

&lt;p&gt;Today we‚Äôre excited to announce our new &lt;a href="https://m3o.com"&gt;Micro API&lt;/a&gt; cloud platform, now in beta. Simple, fast and affordable APIs for everyday use. &lt;a href="https://m3o.com"&gt;Signup for free&lt;/a&gt; (no credit card needed) and get $5 of free credit to get started.&lt;/p&gt;


&lt;center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cMJkAIPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.m3o.com/assets/images/landing-page.png"&gt;&lt;br&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2&gt;
  &lt;a href="#api-building-blocks"&gt;
  &lt;/a&gt;
  API building blocks
&lt;/h2&gt;

&lt;p&gt;Micro has evolved from an open source framework to a full blown API platform, one that continues to focus on the developer experience first and foremost. The majority of our users are building APIs for end public consumption but having to rebuild many of the building blocks they need wherever they go.&lt;/p&gt;

&lt;p&gt;We wanted to solve that problem by providing a set of programmable building block services as simple APIs for public consumption from anywhere in the world, all in one place.&lt;/p&gt;

&lt;p&gt;Some of the APIs we‚Äôre offering are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://m3o.com/cache"&gt;Cache - Ephemeral key-value storage&lt;/a&gt; - &lt;br&gt;
Store any data up to 1mb for fast key based lookup. Set TTLs to expire entries so you don‚Äôt have to remember to delete them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://m3o.com/db"&gt;DB - Simple database service&lt;/a&gt; - &lt;br&gt;
Use CRUD via an API and leave the SQL behind. A really dead simple database service which provides JSON document storage.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://m3o.com/crypto"&gt;Crypto - Cryptocurrency prices and quotes&lt;/a&gt; - &lt;br&gt;
Stay up to date with bitcoin, ethereum, dogecoin and other prices. Track them in real time and build any sort of visualisation on top.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://m3o.com/image"&gt;Image - Upload, resize and crop images&lt;/a&gt; - &lt;br&gt;
Upload images, resize on the fly and serve them via a CDN all without having to do anything more than curling our API.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://m3o.com/otp"&gt;OTP - One time password generation&lt;/a&gt; - &lt;br&gt;
Throwaway the passwords and use one time token generation to login or authenticate users. Simple OTP generation and validation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://m3o.com/routing"&gt;Routing - Turn by turn directions and etas&lt;/a&gt; - &lt;br&gt;
A vastly cheaper Google Maps API alternative powered by OSRM. We‚Äôll give you turn by turn routing directions and etas using OpenStreetMap data.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#third-party-apis"&gt;
  &lt;/a&gt;
  Third Party APIs
&lt;/h2&gt;

&lt;p&gt;Additionally we‚Äôve partnered with third party API providers such as &lt;a href="https://finage.co.uk/"&gt;Finage&lt;/a&gt;, &lt;a href="https://www.exchangerate-api.com/"&gt;ExchangeRate-API&lt;/a&gt; and the &lt;a href="https://www.weatherapi.com/"&gt;WeatherAPI&lt;/a&gt; to bring more functionality to the platform like &lt;a href="https://m3o.com/currency"&gt;Currency&lt;/a&gt; conversion, &lt;a href="https://m3o.com/stock"&gt;Stock&lt;/a&gt; prices and &lt;a href="https://m3o.com/weather"&gt;Weather&lt;/a&gt; forecasts, so you can access everything you need with just one account and one API key, all in one place. We‚Äôre adding more and more third party API providers everyday so keep your eyes peeled!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#taming-complexity"&gt;
  &lt;/a&gt;
  Taming Complexity
&lt;/h2&gt;

&lt;p&gt;AWS is the cloud giant in the sky we've all come to know as the definition of API building blocks but over time it's complexity has also grown, making it &lt;br&gt;
more and more difficult to work with as a developer. We see this, we feel this and we know there needs to be a change.&lt;/p&gt;

&lt;p&gt;Micro attempts to remove the marketing spiel, cloud complexity and bottomless billing by doing the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;API docs and usage are always just one click away&lt;/li&gt;
&lt;li&gt;Billing is Top-Up only. Only use the credit in your account&lt;/li&gt;
&lt;li&gt;Everything can be accessed via Curl or any simple HTTP library&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's some of what we're talking about.&lt;/p&gt;

&lt;p&gt;API docs provide examples and usage along with the pricing clearly next to the endpoint&lt;/p&gt;


&lt;center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lcAVgKcP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.m3o.com/assets/images/api-doc.png"&gt;&lt;br&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;

&lt;p&gt;Test out the API right there in the UI&lt;/p&gt;


&lt;center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hg61eZMU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.m3o.com/assets/images/query-page.png"&gt;&lt;br&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;

&lt;p&gt;We'll add $5 free credit to your account to start but just top-up with however much you need&lt;/p&gt;


&lt;center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--amwoA-ai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.m3o.com/assets/images/billing-page.png"&gt;&lt;br&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;

&lt;p&gt;Then just head to the token page to create yourself a well scoped token for external use&lt;/p&gt;


&lt;center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Tcn5AAz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.m3o.com/assets/images/token-page.png"&gt;&lt;br&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;

&lt;p&gt;And finally. Curl it from anywhere!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl "https://api.m3o.com/v1/id/Generate" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $MICRO_API_TOKEN" \
  -d '{"type": "snowflake"}'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h2&gt;

&lt;p&gt;Hopefully you buy into what we're talking about and the need for something new in the API space. If you like what you‚Äôre hearing, &lt;a href="https://m3o.com"&gt;Signup for Free&lt;/a&gt; or send us some &lt;a href="//mailto:contact@m3o.com"&gt;feedback&lt;/a&gt;. Reach out on &lt;a href="https://slack.m3o.com"&gt;slack&lt;/a&gt; or &lt;a href="https://twitter.com/m3oservices"&gt;twitter&lt;/a&gt; if you have any questions.&lt;/p&gt;

</description>
      <category>micro</category>
      <category>api</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
