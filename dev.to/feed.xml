<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>First Attempt at Intersection Observer</title>
      <author>Yuan-Hsi Lee</author>
      <pubDate>Mon, 12 Apr 2021 01:15:16 +0000</pubDate>
      <link>https://dev.to/yuanleemidori/first-attempt-at-intersection-observer-129i</link>
      <guid>https://dev.to/yuanleemidori/first-attempt-at-intersection-observer-129i</guid>
      <description>&lt;p&gt;Thanks to Pedro, I learned a cool API this week and applied it in our favorite project &lt;a href="https://github.com/Seneca-CDOT/telescope"&gt;telescope&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was assigned an issue to accomplish the new banner design, which is to &lt;a href="https://github.com/Seneca-CDOT/telescope/issues/2041"&gt;make the navbar appear only when the user scroll to the timeline&lt;/a&gt;. In other word, the navbar should not be showed in the banner, but, it should be showed when the first post is at the top of the screen.&lt;/p&gt;

&lt;p&gt;To accomplish this feature, I need to track the element in the current screen. The API that Pedro introduced to me is &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"&gt;Intersection Observer&lt;/a&gt;. The basic idea of this API is to &lt;strong&gt;observe&lt;/strong&gt; the element in the viewport. The function &lt;code&gt;isIntersecting()&lt;/code&gt; tells you if the element that you're observing is still in the viewport. It doesn't have to 100% in the screen or 100% out of the screen, the observed percentage can be configured as well.&lt;/p&gt;

&lt;p&gt;Therefore, since our goal is to show the navbar when the user scrolls to the timeline, and the first post is at the top of the screen. In other word, the navbar should be showed when the banner is totally gone. We put the observer to our banner.&lt;/p&gt;

&lt;p&gt;In &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2094"&gt;this PR&lt;/a&gt;, I move &lt;code&gt;&amp;lt;navbar&amp;gt;&lt;/code&gt; into &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;, so that I can separate it from the &lt;code&gt;&amp;lt;Banner&amp;gt;&lt;/code&gt;. Moreover, to add props for &lt;code&gt;&amp;lt;Banner&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;navbar&amp;gt;&lt;/code&gt; in order to share the result of intersection observer. After moving the position of navbar, I also need to add navbar to about page and search page, because all pages used to share the navbar when it was in the banner header. The other changes that needed to make is the CSS styling of navbar in about page. In about page, &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; uses a certain color from our palettes. Once we move navbar to about page, the navbar will be applied with these color because navbar icons all have &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; in their links. By adding another styling setting to &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;, the color can be overridden. I'm still thinking if there is a better way to do so, since the original styling for navbar should not be overridden, and the solution should not be overridden to correct.&lt;/p&gt;

&lt;p&gt;It was an amazing experience to work with something new. Thanks to Pedro and Dave's help and suggestion in this PR! The initial thought was actually using React context. However, it &lt;em&gt;is&lt;/em&gt; too complicated to use, and since we only need to share the state with one component, we can do it without using context. But, I'm definitely gonna check out more practices of React context.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>ui</category>
      <category>intersectionobserver</category>
    </item>
    <item>
      <title>Node.js and Firebase: Generating Email Verification Link</title>
      <author>Francisco  Inoque</author>
      <pubDate>Sun, 11 Apr 2021 22:43:56 +0000</pubDate>
      <link>https://dev.to/frantchessico/node-js-and-firebase-generating-email-verification-link-1ci8</link>
      <guid>https://dev.to/frantchessico/node-js-and-firebase-generating-email-verification-link-1ci8</guid>
      <description>&lt;h3&gt;
  &lt;a href="#hi-guys"&gt;
  &lt;/a&gt;
  Hi guys,
&lt;/h3&gt;

&lt;p&gt;In this &lt;strong&gt;API&lt;/strong&gt; I will explain how to generate a link to verify email from using &lt;strong&gt;firebase-admin&lt;/strong&gt; and send this link to the user using &lt;strong&gt;nodemailer&lt;/strong&gt;. Let's start now.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1 let's create the email-verification folder, inside the folder we will open the terminal and run the following commands:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;yarn init -y&lt;/code&gt; To start a Nodejs project.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yarn add firebase-admin express nodemail&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yarn add nodemon typescript -D&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/frantchessico/generating-link-to-verify-email-with-firebase-admin"&gt;To configure typescript please visit the project repository&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2 Second, let's create a firebase.ts file&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;admin&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;firebase-admin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;




&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;serviceAccount&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./service&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initializeApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;credential&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credential&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;serviceAccount&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;databaseURL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DATABASEURL&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;





  &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;adminAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;3 Third, we will create the sendEmail.service.ts file which is the body of the message that will be sent to the user:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;nodemailer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nodemailer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;adminAuth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../config/firebase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;transporter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nodemailer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTransport&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Your hsot&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3333&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;emailVerification&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Francisco&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;



        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;adminAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;generateEmailVerificationLink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;emailLink&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;adminAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUserByEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;





                &lt;span class="k"&gt;await&lt;/span&gt;  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;transporter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendMail&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                  &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Francisco Inoque &amp;lt;accounts@franciscoinoque.tech&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="na"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Email Verification&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="na"&gt;html&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, to verify your email please, &amp;lt;a href="&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;emailLink&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt; click here &amp;lt;/a&amp;gt;`&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;

                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;success_msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;please check in your inbox, we sent verification email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

            &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;


    &lt;span class="p"&gt;}&lt;/span&gt;



&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Fourth, let's create the router.ts file:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;emailVerification&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../services/emailVerification.service&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/send-email-verification&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;emailVerification&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;And finally we're going to create the server.ts file:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./routes/router&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;



&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;



&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;3033&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server is running on http://localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#thanks-please-clone-the-full-repository-here-and-give-me-a-star"&gt;
  &lt;/a&gt;
  Thanks, please clone the full repository &lt;a href="https://github.com/frantchessico/generating-link-to-verify-email-with-firebase-admin"&gt;here&lt;/a&gt; and give me a star
&lt;/h1&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>firebase</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Show your style on your Github Readme!</title>
      <author>Ellaine Tolentino</author>
      <pubDate>Sun, 11 Apr 2021 21:45:35 +0000</pubDate>
      <link>https://dev.to/tolentinoel/show-your-style-on-your-github-readme-2129</link>
      <guid>https://dev.to/tolentinoel/show-your-style-on-your-github-readme-2129</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hey-yall"&gt;
  &lt;/a&gt;
  Hey y'all!
&lt;/h1&gt;

&lt;p&gt;If you came across this blog it maybe is a sign to update your GitHub repo and put more of your own coolness to it! &lt;br&gt;
&lt;a href="https://i.giphy.com/media/xTiTngBQncyTMceuXK/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/xTiTngBQncyTMceuXK/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Something I discovered recently is that you can style your repo using many things on a markdown file and display it like a landing page on your Github! I love personalizing things I own and this is a great way to show some character on your repo!&lt;/p&gt;

&lt;p&gt;So let's go and I'll show you what elements I used to make mine!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First up..&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-your-repo"&gt;
  &lt;/a&gt;
  Create your repo
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Go to your Github account and create a new repository.&lt;/li&gt;
&lt;li&gt;Name the new repo under your username. (&lt;em&gt;It comes out something like username/username.&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;A note will pop up just like in the photo below that'll let you know you had it right! (&lt;em&gt;In my case, I had a warning since I already made mines.&lt;/em&gt;)
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6uqv0gec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pczsrkdjb93skzlzjz4p.png" alt="Create your repo under your Github username"&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#add-icons-amp-stats"&gt;
  &lt;/a&gt;
  Add Icons &amp;amp; Stats
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;Anurag Hazra's Github&lt;/a&gt; - definitely a good source if you want to apply some Github stats and display your top languages used to any visitor of your page. You can customize size, color and also offers a compact version of each. &lt;/p&gt;

&lt;p&gt;I chose to display my top languages and Github stats in Merko theme. The line of code I added looks like this..&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;![Ellaine's github stats](https://github-readme-stats.vercel.app/api?username=tolentinoel&amp;amp;theme=merko&amp;amp;layout=compact)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Here's what it looks like in day mode.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_WqnKXyX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhvzfmnej9iam2256lam.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_WqnKXyX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhvzfmnej9iam2256lam.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And in dark mode..&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--erYDVY4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ytjnvrewbkg9ogyuziry.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--erYDVY4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ytjnvrewbkg9ogyuziry.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#add-emojis-amp-badges"&gt;
  &lt;/a&gt;
  Add Emojis &amp;amp; Badges
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md"&gt;Emoji Github&lt;/a&gt; - Great resource for a ton of emojis you can put on your markdowns!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md#table-of-contents"&gt;Badges or Shields&lt;/a&gt; - You can definitely use this reference to display your social media &amp;amp; top languages used or your tech stack. See these example badges below!&lt;br&gt;
&lt;a href="https://github.com/tolentinoel"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1oOob1BO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/GitHub-100000%3Fstyle%3Dfor-the-badge%26logo%3Dgithub%26logoColor%3Dviolet"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ellainet/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--imBRhTaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/LinkedIn-0077B5%3Fstyle%3Dfor-the-badge%26logo%3Dlinkedin%26logoColor%3Dwhite"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#photos"&gt;
  &lt;/a&gt;
  Photos
&lt;/h2&gt;

&lt;p&gt;I haven't really attached a photo on a markdown until recently doing it to my Github repo! Just like on HTML, your code in attaching a photo can look like this;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;img src='images/Github_banner.png' alt="banner"&amp;gt;&amp;lt;/img&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result would look like this;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d_CvYf5e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fzluwbbqjyaj7u86o7q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d_CvYf5e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fzluwbbqjyaj7u86o7q.png" alt="Ellaine's Github page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Closer look at the banner&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ye6i3zL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vb12dvutumkrl18jjw15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ye6i3zL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vb12dvutumkrl18jjw15.png" alt="Banner made from Canva"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I made the banner design using &lt;a href="https://www.canva.com/"&gt;Canva!&lt;/a&gt; with a LinkedIn banner template.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Last but not least, and probably my favorite..&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#gif-banners"&gt;
  &lt;/a&gt;
  Gif banners
&lt;/h2&gt;

&lt;p&gt;YES!! I actually just tried if putting a gif would work, and it did! Just refer it to your code like an image! I also used Canva to design the animation on this gif.&lt;/p&gt;

&lt;p&gt;In code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;img src='[relative path]' alt=""&amp;gt;&amp;lt;/img&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Closer look at the gif&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ER0QWbWP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8poooh7vsctzgstw6ent.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ER0QWbWP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8poooh7vsctzgstw6ent.gif" alt='Gif that says Mabuhay welcome to my page"'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hnet.com/video-to-gif/"&gt;Hnet video to gif&lt;/a&gt; - also a good way to convert your video clips into a gif!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://giphy.com/"&gt;Giphy&lt;/a&gt; - Another great resource for gifs or creating your own!&lt;/p&gt;

&lt;p&gt;So that's about all the things I used to upgrade my Github readme profile! I hope it helped you guys put more of your own style on your Github profile and also find ways to vamp up your markdowns!&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

</description>
      <category>github</category>
      <category>codenewbie</category>
      <category>markdown</category>
    </item>
    <item>
      <title>20 tools &amp; resources for getting the right color for your project</title>
      <author>Nicolas Jeremias</author>
      <pubDate>Sun, 11 Apr 2021 21:43:10 +0000</pubDate>
      <link>https://dev.to/niconj/20-tools-resources-for-getting-the-right-color-for-your-project-2cio</link>
      <guid>https://dev.to/niconj/20-tools-resources-for-getting-the-right-color-for-your-project-2cio</guid>
      <description>&lt;p&gt;It all started with me thinking: "I need to revamp my website and add some color urgently!". &lt;/p&gt;

&lt;p&gt;That took me into browsing different sites looking for a nice color combination that would reflect myself in. &lt;/p&gt;

&lt;p&gt;But since I'm a huge procrastinator I ended up listing tools and websites to get the colors instead of actually picking some for my site.&lt;/p&gt;

&lt;p&gt;Here are all the sites I've visited and played a little with in my, procrastinated, journey of finding some colors for myself:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hexcolor"&gt;
  &lt;/a&gt;
  &lt;a href="https://hexcolor.co/palette-generator"&gt;Hexcolor&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://hexcolor.co/palette-generator"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---1Vs41-D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mwd7qpoi8fkdzxhxz96.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pick a color, extract colors from an image, generate beautiful gradients and palettes using this free and complete web tool.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#happy-hues"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.happyhues.co"&gt;Happy Hues&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.happyhues.co"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--odozpbMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hk8vkkf2dxugl855rtu5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A curated list of beautiful pallets displayed as you change them.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#piggment"&gt;
  &lt;/a&gt;
  &lt;a href="https://piggment.co"&gt;Piggment&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://piggment.co"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSWA1yg9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvhshm0h74b1djo88zj4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create your own gradient or pick one from a pre-built extensive list of nice samples.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#coolors"&gt;
  &lt;/a&gt;
  &lt;a href="https://coolors.co"&gt;Coolors&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://coolors.co"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J1TtPof8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x34732xcdrsmzikm9x6i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A beautiful palette generator, very versatile and with the option of testing how different types of colorblind people would see them.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#colorbox"&gt;
  &lt;/a&gt;
  &lt;a href="https://colorbox.dev"&gt;Colorbox&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://colorbox.dev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Sxti6cK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uo7on37pxgj4amo5dee2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create shades and tints quickly and in a very customizable way.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#picular"&gt;
  &lt;/a&gt;
  &lt;a href="https://picular.co"&gt;Picular&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://picular.co"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T2BCr47C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c9a97w8v5shr6iil9int.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just type the name of what you want to get a color from and Picular will give you back a list of colors matching your search!&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#trianglify"&gt;
  &lt;/a&gt;
  &lt;a href="https://trianglify.io"&gt;Trianglify&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://trianglify.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KF4zoapw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqi0so97wpuwt3h8pbx2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, you got me, this one is not necessary under the "color" category, but think these are just mesmerising and wanted to share them.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#cssgradient"&gt;
  &lt;/a&gt;
  &lt;a href="https://cssgradient.io"&gt;Cssgradient&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cssgradient.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oLfIC9G---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ugceclg389m90u51rhog.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Generate your gradient with this friendly and straight to the point tool.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#colorsinspo"&gt;
  &lt;/a&gt;
  &lt;a href="https://colorsinspo.com"&gt;Colorsinspo&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://colorsinspo.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t2aKPI6V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqn6anvunnmh1pk882y5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A full suite of tools, pickers, palettes and also tutorials about color related topics.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#mycolor-space"&gt;
  &lt;/a&gt;
  &lt;a href="https://mycolor.space"&gt;Mycolor Space&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mycolor.space"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OouW8sS8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jghi13se6ru48fanp1zu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Swiftly create a full palette, and several related palettes, from a single color of your choosing.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#colorable"&gt;
  &lt;/a&gt;
  &lt;a href="https://colorable.jxnblk.com"&gt;Colorable&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://colorable.jxnblk.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G4vZSnZx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spxatk8go84pu9j2h74s.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check if your background and font color contrast correctly with this simple but extremely powerful tool. &lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#css-peeper"&gt;
  &lt;/a&gt;
  &lt;a href="https://csspeeper.com"&gt;CSS Peeper&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://csspeeper.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jlH3QqlN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ds5q139pg0r81rx0weem.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you want to extract the colors and inspect the html elements from a site? Then this extension is all you need.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#calcolor"&gt;
  &lt;/a&gt;
  &lt;a href="https://calcolor.co/blend"&gt;Calcolor&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://calcolor.co/blend"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--djqrYxYy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/neltwn4g687b21whosjr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Explore the different shades between 2 colors of your choosing.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#gradient-animator"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.gradient-animator.com"&gt;Gradient Animator&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.gradient-animator.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ah8CO9ST--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odrhznurwnk5j9bjucd1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Generate a gradient css animation in no time with this site.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#adobe-color"&gt;
  &lt;/a&gt;
  &lt;a href="https://color.adobe.com/create/color-wheel"&gt;Adobe Color&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://color.adobe.com/create/color-wheel"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KUhyA2w8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kpxnzj04lyoxdd5ywo98.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Explore trends and create your own color palettes with this extremely and easy to use chromatic wheel by Adobe (they also have a chromatic-simon-says if you feel up to the challenge).&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#css-matic"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.cssmatic.com"&gt;CSS Matic&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.cssmatic.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fK0v4y0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zk6j3ehcz1gc0k5afpuz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Not only you’ll get a gradient generator, but also you can play around with a very helpful Border Radius and Box Shadow sandbox.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#muzli-colors"&gt;
  &lt;/a&gt;
  &lt;a href="https://colors.muz.li"&gt;Muzli Colors&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://colors.muz.li"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JVZhOndM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kkfgc427ue97qkzhpfvy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pick a color and several palettes will be generated for you.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#make-tints-and-shades"&gt;
  &lt;/a&gt;
  &lt;a href="https://maketintsandshades.com"&gt;Make Tints and Shades&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://maketintsandshades.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nfuLw0q7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofll6fmvpvth0txve9ck.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Get your tints and shades based on one, or several, base colors.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#shadowlord"&gt;
  &lt;/a&gt;
  &lt;a href="https://noeldelgado.github.io/shadowlord/#89467d"&gt;Shadowlord&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://noeldelgado.github.io/shadowlord/#89467d"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xqv4T4ug--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13mwfdvp738k7brl606z.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dynamic and straight to the point tints &amp;amp; shades generator.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#mdigi-tools"&gt;
  &lt;/a&gt;
  &lt;a href="https://mdigi.tools/color/"&gt;Mdigi Tools&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdigi.tools/color/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f1F2Gv5L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y651ocvl5in7632wuvaw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A full suite, not only with several color tools, but also with dev, design and writing tools among others.&lt;/p&gt;




&lt;p&gt;I hope them help you finding the best color combination for your project!&lt;/p&gt;

</description>
      <category>color</category>
      <category>css</category>
      <category>palette</category>
      <category>design</category>
    </item>
    <item>
      <title>How to transform any SPA/PWA web application into mobile app with CapacitorJs ??</title>
      <author>BELHARRADI JAMAL</author>
      <pubDate>Sun, 11 Apr 2021 20:53:14 +0000</pubDate>
      <link>https://dev.to/jamalroger/how-to-transform-any-spa-pwa-web-application-into-mobile-app-with-capacitorjs-kaj</link>
      <guid>https://dev.to/jamalroger/how-to-transform-any-spa-pwa-web-application-into-mobile-app-with-capacitorjs-kaj</guid>
      <description>&lt;p&gt;Hi all,web development become more powerful, web now is more easy we can build complex application with technology like Angular, VueJs and react those technology can build &lt;code&gt;SPA/PWA&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What is &lt;code&gt;SPA/PWA/Capacitorjs??&lt;/code&gt; &lt;code&gt;SPA&lt;/code&gt; is short of "single page application"  is web application that can run in one page in the browser , the app don't need refresh to post or fetch data, we ajax nested of refreshing.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;PWA&lt;/code&gt; is a &lt;code&gt;SPA&lt;/code&gt; with capacity of work offline with "service worker" that cache asset file(js,css) in the browser means no need to download asset file from http server in the second request.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;CapacitorJs&lt;/code&gt; is a cross-platform native runtime for web apps, means can transform web application into mobile app and run it in &lt;code&gt;os&lt;/code&gt;, it take SPA/PWA and run it on a &lt;code&gt;WebView&lt;/code&gt; in native application this native application can run anywhere in any os mobile like android and ios.&lt;/p&gt;

&lt;p&gt;let take a example  with a &lt;code&gt;VueJs&lt;/code&gt; app&lt;br&gt;
we suppose that you have already had a &lt;code&gt;Vuejs&lt;/code&gt; app&lt;br&gt;
if you don't now how to create a vue app please read this article &lt;a href="https://dev.to/josesrodriguez610/vuejs-starting-a-new-project-ke1"&gt;Get started with Vuejs&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#the-structure-of-vue-projet-is-like-this"&gt;
  &lt;/a&gt;
  The structure of Vue projet is like  this
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a6-5PgEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bku4lc4zzvx9rp673mzo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a6-5PgEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bku4lc4zzvx9rp673mzo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;when you build your vuejs app you will find dist that contains  of entrypoint of your &lt;code&gt;SPA&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LHXMIrt---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/879yod14nvi5m5e5469g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LHXMIrt---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/879yod14nvi5m5e5469g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
if you open index.html in the browser  will run your app,&lt;br&gt;
&lt;code&gt;note&lt;/code&gt; "verify the the path of assets in index.html"&lt;/p&gt;

&lt;p&gt;Now let add &lt;code&gt;CapacitorJs&lt;/code&gt; to our vue app.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#installing-capacitorjs"&gt;
  &lt;/a&gt;
  Installing capacitorjs
&lt;/h1&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; @capacitor/core @capacitor/cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#init-app-for-capacitorjs"&gt;
  &lt;/a&gt;
  Init app for CapacitorJs
&lt;/h1&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx cap init 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;this command should ask about your name  of your app,ID,...&lt;br&gt;
and will generate capacitor.config.json for Capacitorjs config  should be like that&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"appId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"com.app.app"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"appName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"app"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"bundledWebRuntime"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"npmClient"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npm"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"webDir"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"www"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"plugins"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"SplashScreen"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"launchShowDuration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"cordova"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we will edit the value of attribute &lt;code&gt;webDir&lt;/code&gt;  from &lt;code&gt;www&lt;/code&gt; into &lt;code&gt;dist&lt;/code&gt; because Vuejs  build your app into dist folder &lt;/p&gt;

&lt;p&gt;now should will be like that&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"appId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"com.app.app"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"appName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"app"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"bundledWebRuntime"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"npmClient"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npm"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"webDir"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"dist"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"plugins"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"SplashScreen"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"launchShowDuration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"cordova"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now will should add platform can be android,ios or electron.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#let-start-with-android"&gt;
  &lt;/a&gt;
  Let start with android
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx cap add android
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That should create android folder in your root folder&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tKnQ-QNH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88et2mh188usc945po5g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tKnQ-QNH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88et2mh188usc945po5g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let sync our web app with the android app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx cap sync
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;by run this command will copy the dist folder to android app&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TOz-mVXj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prjx0up32fe0ud48rxki.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TOz-mVXj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prjx0up32fe0ud48rxki.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now our app is ready to run in android by open &lt;code&gt;android&lt;/code&gt; folder&lt;code&gt;in&lt;/code&gt;android studio`` and build our apk.&lt;/p&gt;

&lt;p&gt;you can find the source code here &lt;a href="https://github.com/jamalroger/vue-capacitorjs-example"&gt;vue-capacitorjs-example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sorry for my bad English, Thanks you for reading.&lt;/p&gt;

</description>
      <category>spa</category>
      <category>vue</category>
      <category>react</category>
      <category>capacitojs</category>
    </item>
    <item>
      <title>Aprende eloquent con ejemplos!!!</title>
      <author>Johan Tovar</author>
      <pubDate>Sun, 11 Apr 2021 20:52:46 +0000</pubDate>
      <link>https://dev.to/johanso/aprende-eloquent-con-ejemplos-2ld7</link>
      <guid>https://dev.to/johanso/aprende-eloquent-con-ejemplos-2ld7</guid>
      <description>&lt;p&gt;&lt;em&gt;Una serie de artículos basados e inspirados en el curso &lt;a href="https://eloquentbyexample.com/"&gt;EloquentbyExample&lt;/a&gt; del desarrollador Jeff Madsen(&lt;a class="comment-mentioned-user" href="https://dev.to/codebyjeff"&gt;@codebyjeff&lt;/a&gt;
), dirigidos a ilustrar el uso de eloquent, famoso ORM usado por laravel para la interacción con bases de datos.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Bienvenidos a este nuevo proyecto que inicio con muchas ganas y entusiasmo, siempre he querido retribuir de alguna manera el conocimiento que he adquirido en la red, a través de publicaciones, cursos, tutoriales y un sin fin de material que, con el ánimo solo de compartir, transmitir y nutrir a la comunidad de desarrolladores, muchos de sus integrantes han elaborado de manera desinteresada, por lo que me siento orgulloso hoy día de unirme a ellos con este pequeño pero importante aporte.&lt;/p&gt;

&lt;p&gt;Antes de entrar de lleno con el contenido que pretendo desarrollar a lo largo de esta serie de publicaciones, quiero dar un agradecimiento y un reconocimiento a Jeff Madsen, por haberme permitido tomar su curso &lt;a href="https://eloquentbyexample.com/"&gt;EloquentbyExample&lt;/a&gt; como base para la elaboración del contenido de este proyecto, pues fue este curso el detonante que necesité para atreverme a dar este paso. Gracias Jeff!!!&lt;/p&gt;

&lt;p&gt;Pues bien, hechos los respectivos agradecimientos y las aclaraciones pertinentes, entremos en materia y demos comienzo a este pequeño curso.&lt;/p&gt;

&lt;p&gt;Empecemos por dar un poco de contexto, diciendo que tenemos una aplicación para un centro veterinario en el que necesitamos registrar todos los caninos que ingresan, para esto, nuestro jefe nos ha indicado agregar un módulo "dogs" (aunque el curso es una adaptación al español, es mejor mantener las buenas prácticas de codificar en inglés), por lo que tendremos que configurar la base de datos y dejar todo listo para lo que se construirá más adelante. Debemos comenzar por crear la tabla de una manera que se pueda agregar fácilmente a los servidores locales y compartidos de los otros desarrolladores, así como al modelo eloquent.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Nota: Laravel viene con una configuración para la base de datos ya predefinida que no debería darte problemas, sin embargo te dejo el enlace por si necesitas hacer alguna configuración adicional &lt;a href="https://laravel.com/docs/8.x/database#configuration"&gt;Database: Getting Started - Laravel&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#migraciones"&gt;
  &lt;/a&gt;
  Migraciones:
&lt;/h2&gt;

&lt;p&gt;El primer paso que debemos dar en laravel para crear nuestra tabla es crear una migración, para lo cual ejecutaremos un simple comando en nuestra consola: &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan make:migration create_dogs_table
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Simple ¿verdad?. Este sencillo comando nos genera un archivo en la ruta &lt;em&gt;/database/migrations&lt;/em&gt;, si vamos ahí encontraremos un total de cuatro archivos, tres de ellos ya vienen con laravel por defecto, el cuarto es el archivo que hemos creado.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--He_KkWlA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2oh1j6392tfrpstqvfq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--He_KkWlA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2oh1j6392tfrpstqvfq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Así de fácil hemos creado nuestra primera migración, pasemos ahora a abrir el archivo, veremos que en realidad trae muy poco, apenas un par de funciones, &lt;code&gt;up()&lt;/code&gt; y &lt;code&gt;down()&lt;/code&gt;, totalmente vacías, y si revisamos nuestra base de datos, no tenemos nada!!!&lt;/p&gt;

&lt;p&gt;Hasta ahora lo único que hemos hecho es crear un archivo de “andamiaje básico” para contener la información que se convertirá en una declaración &lt;code&gt;CREATE TABLE&lt;/code&gt;, con un comando separado pero similar, llamado &lt;code&gt;migrate&lt;/code&gt;. Ahora bien, cuando los desarrolladores comenzamos a trabajar con migraciones, no tenemos una noción clara sobre estas diferencias, por lo que terminamos "arreglando" un montón de cosas manualmente, haciendo un total desastre.&lt;/p&gt;

&lt;p&gt;Es importante que tengamos claro que este archivo mantendrá nuestra información de creación de tablas, por lo que podemos hacer los cambios que queramos, incluso borrarlos, sin consecuencias, mientras no ejecutemos el comando real &lt;code&gt;php artisan migrate&lt;/code&gt;, encargado de recorrer todos los archivos &lt;em&gt;migrations&lt;/em&gt; y crear así nuestras tablas.&lt;/p&gt;

&lt;p&gt;Entendido lo anterior, vamos ahora a crear nuestra migración como es debido, así que, eliminemos el archivo para que podamos hacer una mejor versión y ejecutemos el siguiente comando:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;migration&lt;/span&gt; &lt;span class="n"&gt;create_dogs_table&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dogs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Si te fijas hemos agregado &lt;code&gt;--create=dogs&lt;/code&gt;, ahora en nuestro archivo, encontraremos que se han agregado algunas líneas más de código, aportan utilidad a las funciones &lt;code&gt;up()&lt;/code&gt; y &lt;code&gt;down()&lt;/code&gt;. En la primera de estas creamos nuestra tabla, con la segunda revertimos la instrucción anterior. Agreguemos entonces un campo a nuestra migración, de tal manera que nuestro archivo se verá así:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nf"&gt;up&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;Schema&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'dogs'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Blueprint&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;id&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;       &lt;/span&gt; &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;timestamps&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="err"&gt;    &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nf"&gt;down&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;Schema&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;dropIfExists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'dogs'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ejecutemos ahora el comando &lt;code&gt;php artisan migrate&lt;/code&gt;, y busquemos ahora en nuestra base de datos, encontraremos que se han creado las tablas correspondientes.&lt;/p&gt;

&lt;p&gt;Hasta ahora no hemos ahondado en el tema de las migraciones, pues el desarrollo completo de este particular escapa del ámbito de lo que se pretende plasmar en el curso, pero si quieres profundizar más sobre el tema te invito a revisar &lt;a href="https://laravel.com/docs/8.x/migrations"&gt;la documentación de laravel&lt;/a&gt;, quizás en otra oportunidad haga una serie dedicada solo al tema de las migraciones, pero, por lo pronto, quedémonos con lo explicado y veamos algunas cosas importantes antes de pasar a la siguiente tarea.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Borrar el archivo migration no afecta nuestra tabla de manera directa, por ende, no implica que se borre nuestra tabla.&lt;/li&gt;
&lt;li&gt;Al crear el archivo migration puedes asignarle cualquier nombre al flag &lt;code&gt;--create&lt;/code&gt;, pero es una convención establecida (y recomendada) que se escriba en minúscula y en plural (salvo algunas excepciones como tablas pivote).&lt;/li&gt;
&lt;li&gt;Se recomienda el uso de &lt;code&gt;php artisan migrate:rollback&lt;/code&gt; si necesitas devolver una ejecución previa de &lt;code&gt;migrate&lt;/code&gt;. También puedes usar &lt;code&gt;php artisan migrate:refresh&lt;/code&gt; para reiniciar tu base de datos.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#seeders"&gt;
  &lt;/a&gt;
  Seeders
&lt;/h2&gt;

&lt;p&gt;Pasemos ahora a nuestra siguiente tarea, necesitamos trabajar con datos limpios y sin duplicados, pues esto facilitará, entre otros aspectos, a la detección de errores.&lt;/p&gt;

&lt;p&gt;La respuesta a esto es &lt;strong&gt;Seeders&lt;/strong&gt; - un conjunto especial de clases que nos permiten rellenar nuestra base de datos una y otra vez con los mismos datos exactos.&lt;/p&gt;

&lt;p&gt;Vamos a aprender en la próxima entrega cómo hacer algunos sembradores realmente poderosos para producir grandes datos de desarrollo y pruebas, pero hoy ya se está haciendo un poco largo, así que vamos a presentar la idea. Un "&lt;strong&gt;Seeders&lt;/strong&gt;" es simplemente una clase que rellena la base de datos con su información respectiva. Lo bueno de ellos es que puedes usar una instrucción de línea de comandos simple para actualizar los datos, por lo que después de haber estado trabajando durante un tiempo puedes limpiarlo y empezar de nuevo. También te permite evitar nombres como "&lt;em&gt;assdffggggg&lt;/em&gt;" y otros datos sucios que pueden causar algún bug.&lt;/p&gt;

&lt;p&gt;Vayamos a la línea de comandos y escribamos:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;artisan&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;seeder&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nc"&gt;DogsTableSeeder&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Este comando creará un archivo en &lt;code&gt;/database/seeders&lt;/code&gt;, vamos ahí y abramos el archivo, veremos una clase muy simple con un único método llamado &lt;code&gt;run()&lt;/code&gt;. No hay nada mágico en esta clase, es realmente poco más que un envoltorio alrededor de una clase de comando de consola, hecho específicamente para ayudar con esta tarea en particular. Vamos a comprobarlo  nosotros mismos añadiendo lo siguiente:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Sembrando datos!'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;y luego de vuelta a la línea de comandos:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;artisan&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;DogsTableSeeder&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Está llamando desde la facade &lt;code&gt;DB&lt;/code&gt;, pero no hay ninguna interacción real de la base de datos aquí. Vamos a poblar la tabla ahora con un par de perros:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="err"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;        &lt;/span&gt;&lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'dogs'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Joe'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="err"&gt;        &lt;/span&gt;&lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'dogs'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Jock'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="err"&gt;        &lt;/span&gt;&lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'dogs'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Jackie'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="err"&gt;        &lt;/span&gt;&lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'dogs'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Jane'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="err"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ahora ejecutemos de nuevo &lt;code&gt;php artisan db:seed --class=DogsTableSeeder&lt;/code&gt;, verás que nuestra tabla tendrá cuatro caninos dentro de sus registros.&lt;/p&gt;

&lt;p&gt;Si nos fijamos bien, trabajando de esta manera podremos eliminar, agregar y/o editar nuestros perros mientras trabajamos, y luego con un simple comando restablecerlos a un estado inicial, sin embargo, hay algunas mejoras que podemos hacerle a este código, una de ellas es que, de la forma que lo hemos planteado, debemos ser nosotros quienes elegimos los nombres, algo que se hace fácil si solo son unos pocos registros, pero, si nos toca hacerlo con unos 500 perros la tarea no se hace tan divertida ¿cierto?.&lt;/p&gt;

&lt;p&gt;Por otra parte imaginemos ¿qué pasaría si tenemos otra lógica que queremos que suceda en el tiempo de creación del registro de perros?. Aquí estamos insertando directamente el nombre en la tabla, pero realmente queremos usar el ORM eloquent que viene con Laravel, al fin y al cabo es lo que vinimos a aprender, pues bien, en la próxima entrega veremos ésta y otras mejoras que de seguro harán nuestro trabajo más fácil, por ahora te invito a que le eches un ojo a la &lt;a href="https://laravel.com/docs/8.x/seeding"&gt;documentación oficial sobre los seeders&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Quédate atento a la próxima entrega, si tienes alguna duda puedes contactarme en mi cuenta de twitter &lt;a href="https://twitter.com/JohanTovar"&gt;@JohanTovar&lt;/a&gt; o déjala en los comentarios. Hasta entonces y que tengas un feliz y exitoso día.&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>tutorial</category>
      <category>eloquent</category>
    </item>
    <item>
      <title>WSL2, Docker, GUI</title>
      <author>Bruno Zani</author>
      <pubDate>Sun, 11 Apr 2021 20:45:11 +0000</pubDate>
      <link>https://dev.to/bzani/wsl2-docker-gui-3o0j</link>
      <guid>https://dev.to/bzani/wsl2-docker-gui-3o0j</guid>
      <description>&lt;h1&gt;
  &lt;a href="#wsl-and-wsl2"&gt;
  &lt;/a&gt;
  WSL and WSL2
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Make sure that&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You have Windows 10 version 1903 or higher, with Build 18362 or higher. If not, update it.

&lt;ul&gt;
&lt;li&gt;Check it by using &lt;code&gt;Win+R&lt;/code&gt;, command &lt;code&gt;winver&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Virtualization is enabled inside of your computer's BIOS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Enable WSL on Windows 10&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Execute the commands below, using PowerShell on Admin mode:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Open your PowerShell once again and try typing &lt;code&gt;wsl&lt;/code&gt;, and if doesn't work, restart your machine&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Upgrade to WSL2&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Download and install the WSL2 kernel to update&lt;br&gt;
&lt;a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi"&gt;https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set the WSL default version to 2, via Powershell:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wsl --set-default-version 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;(in case of error, ignore it this time)&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#linux-distro"&gt;
  &lt;/a&gt;
  Linux Distro
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Install the Ubuntu distro&lt;/strong&gt; (or any other you like)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open your Microsoft Store, search for the Ubuntu App, select the &lt;code&gt;Ubuntu&lt;/code&gt; app (which is the latest) and install it&lt;/li&gt;
&lt;li&gt;After installed, configure your root user and password&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Upgrade WSL version for Ubuntu&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;List your distro using &lt;code&gt;wsl --list&lt;/code&gt;, via Powershell&lt;/li&gt;
&lt;li&gt;Set your distro to WSL version 2
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wsl --set-version &amp;lt;distro_name&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Etc&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Access your WSL "space" on Windows through: (&lt;code&gt;Win+R&lt;/code&gt; or explorer)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;\\wsl$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Find your Windows "space" on Linux:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/mnt/c/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Find your WSL "disk" on Windows: 

&lt;ul&gt;
&lt;li&gt;in the case of Ubuntu, we have something like this:
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\Users\&amp;lt;User&amp;gt;\AppData\Local\Packages\CanonicalGroupLimited.Ubuntu...\LocalState
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Backup your WSL state:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wsl --export &amp;lt;distro&amp;gt; &amp;lt;output_file&amp;gt;                        # export
wsl --import &amp;lt;distro&amp;gt; &amp;lt;installation_location&amp;gt; &amp;lt;input_file&amp;gt; # import
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;or even, create a backup of the WSL "disk" file (previous item)&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;WSL2 uses almost all your machines resources, by default: 

&lt;ul&gt;
&lt;li&gt;Disk and CPU &lt;/li&gt;
&lt;li&gt;80% of your available RAM &lt;/li&gt;
&lt;li&gt;25% of your available memory for Swap &lt;/li&gt;
&lt;li&gt;You can set up limits, by creating a config file (example): 
C:\Users&amp;lt;User&amp;gt;.wslconfig &amp;gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[wsl2] 
options=metadata,umask=22,fmask=11 
memory=8GB 
processors=4 
swap=2GB 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Your custom configs are applied after a WSL restart:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wsl --shutdown
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#windows-terminal"&gt;
  &lt;/a&gt;
  Windows Terminal
&lt;/h1&gt;

&lt;p&gt;Windows Terminal is a new feature from Microsoft, improving your experience with terminals in Windows.&lt;/p&gt;

&lt;p&gt;Install via Microsoft Store, by searching for &lt;code&gt;Windows Terminal&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;With Windows Terminal you can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;have multiple terminals opened in separate tabs (instances)&lt;/li&gt;
&lt;li&gt;different terminals running along (Ubuntu, git bash, Powershell, etc)&lt;/li&gt;
&lt;li&gt;customize by applying themes, configuring colors and shortcuts, etc
&lt;a href="https://docs.microsoft.com/pt-br/windows/terminal/customize-settings/startup"&gt;https://docs.microsoft.com/pt-br/windows/terminal/customize-settings/startup&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;change file &lt;code&gt;settings.json&lt;/code&gt; by hitting &lt;code&gt;Ctrl+,&lt;/code&gt; on Windows Terminal&lt;/li&gt;
&lt;li&gt;or open file from default dir:
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\Users\&amp;lt;User&amp;gt;\AppData\Local\Packages\Microsoft.WindowsTerminal...\LocalState\settings.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;you can change e.g. your Linux starting directory and default shell, when opening Windows Terminal:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"defaultProfile": "{xxxxx-xxxx-xxxx-xxxx}",
...
{ 
    "guid": "{xxxxx-xxxx-xxxx-xxxx}",
    "name": "Ubuntu-18.04", 
    "startingDirectory" : "//wsl$/Ubuntu-20.04/home/&amp;lt;ubuntu_user&amp;gt;", 
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  Docker
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;3 ways to use Docker on Windows&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Docker Toolbox &lt;em&gt;- bad&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Uses Oracle VirtualBox &lt;/li&gt;
&lt;li&gt;Very bad performance &lt;/li&gt;
&lt;li&gt;Difficult setup and usage &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Docker Desktop com Hyper-V &lt;em&gt;- better&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Uses Microsoft Hyper-V instead of VirtualBox &lt;/li&gt;
&lt;li&gt;Requires Windows 10 PRO &lt;/li&gt;
&lt;li&gt;Better performance but a heavy consumer of host resources &lt;/li&gt;
&lt;li&gt;Docker will drop support in the future, as announced &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Docker Desktop com WSL2 &lt;em&gt;- &lt;strong&gt;recommended *&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Uses Microsoft Virtual Machine Platform &lt;/li&gt;
&lt;li&gt;Integrates with WSL2 and its distros &lt;/li&gt;
&lt;li&gt;Better performance and consumes less resources &lt;/li&gt;
&lt;li&gt;Usage as running on Linux natively&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*&lt;strong&gt;Download and install Docker Desktop&lt;/strong&gt;&lt;br&gt;
    &lt;a href="https://hub.docker.com/editions/community/docker-ce-desktop-windows"&gt;https://hub.docker.com/editions/community/docker-ce-desktop-windows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enable Docker on WSL2 distro&lt;/strong&gt;&lt;br&gt;
    - Docker Desktop &amp;gt; Settings &amp;gt; Resources &amp;gt; WSL Integration &lt;br&gt;
        &amp;gt; Enable integration with additional distros &amp;gt; Check distro&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Play with docker on WSL&lt;/strong&gt;&lt;br&gt;
    - Open WSL and hit &lt;code&gt;docker ps&lt;/code&gt; or try out &lt;code&gt;docker run hello-world&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#wsl-linux-gui"&gt;
  &lt;/a&gt;
  WSL Linux GUI
&lt;/h1&gt;

&lt;p&gt;A way to run Linux apps using WSL "builtin GUIs" is on the way, as one of the WSL improvements of Microsoft's roadmap.&lt;/p&gt;

&lt;p&gt;While it still unavailable, we can still install a GUI and use RDP (Remote desktop manager), to access the Linux VM.&lt;/p&gt;

&lt;p&gt;First of all, update and upgrade your Linux:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt -y upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install (or overwrite) X-RDP:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get purge xrdp
sudo apt install -y xrdp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install a GUI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt install -y xfce4 # check 'gdm3' option
sudo apt install -y xfce4-goodies
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;XFCE is a lightweight GUI for testing purposes&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Create a backup, config access, improve RDP session quality and define session:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo cp /etc/xrdp/xrdp.ini /etc/xrdp/xrdp.ini.bak
sudo sed -i 's/3389/3390/g' /etc/xrdp/xrdp.ini
sudo sed -i 's/max_bpp=32/#max_bpp=32\nmax_bpp=128/g' /etc/xrdp/xrdp.ini
sudo sed -i 's/xserverbpp=24/#xserverbpp=24\nxserverbpp=128/g' /etc/xrdp/xrdp.ini
echo xfce4-session &amp;gt; ~/.xsession
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Edit XRDP startup script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo nano /etc/xrdp/startwm.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Comment these last lines:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# test -x /etc/X11/Xsession &amp;amp;&amp;amp; exec /etc/X11/Xsession 
# exec /bin/sh /etc/X11/Xsession 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add these lines:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# xfce
startxfce4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start RDP session:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo /etc/init.d/xrdp start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Access it from your Windows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Execute command &lt;code&gt;mstsc&lt;/code&gt; (&lt;code&gt;Win+R&lt;/code&gt;)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;localhost:3390
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#dev-projects"&gt;
  &lt;/a&gt;
  Dev Projects
&lt;/h1&gt;

&lt;p&gt;In my case, I moved all my project sources and repositories to WSL.&lt;/p&gt;

&lt;p&gt;There are many softwares that already works integrated with WSL:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;like VS Code for example, there are add-ons to work "remotely" with your projects in WSL&lt;/li&gt;
&lt;li&gt;though I don't use IntelliJ, I've seen some videos and tutorials about doing it with WSL&lt;/li&gt;
&lt;li&gt;on the other hand, there may be softwares that are more complex to integrate with WSL (or even don't)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;NODE&lt;/strong&gt;&lt;br&gt;
In my case, I uninstalled everything from my host and installed Nvm on WSL&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ECLIPSE&lt;/strong&gt;&lt;br&gt;
In this case, I couldn't create my workspace in WSL, so I kept it in my host computer.&lt;br&gt;
I kept also maven installed in my host machine, and installed it also on WSL, but pointing dependencies to my host &lt;code&gt;.m2/repository&lt;/code&gt;&lt;br&gt;
However, I migrated my git repositories to WSL, and I'm opening it on my host workspace.&lt;br&gt;
As I'm starting now using WSL, certainly I'm missing a better way to do it, I wonder, keeping both separate should not be the right way to do it, right?&lt;br&gt;
If you can help me out, just drop me a line below. Also, I'll keep it updated as long I improve my dev workspace along with WSL.&lt;/p&gt;

&lt;p&gt;See ya.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10#manual-installation-steps"&gt;https://docs.microsoft.com/en-us/windows/wsl/install-win10#manual-installation-steps&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/codeedu/wsl2-docker-quickstart"&gt;https://github.com/codeedu/wsl2-docker-quickstart&lt;/a&gt; (pt-br)&lt;br&gt;
&lt;a href="https://github.com/davidbombal/wsl2/blob/main/ubuntu_gui_youtube"&gt;https://github.com/davidbombal/wsl2/blob/main/ubuntu_gui_youtube&lt;/a&gt;&lt;/p&gt;

</description>
      <category>wsl2</category>
      <category>docker</category>
      <category>wslgui</category>
      <category>windows</category>
    </item>
    <item>
      <title>Deploying a SvelteKit app to Netlify</title>
      <author>Dana Woodman</author>
      <pubDate>Sun, 11 Apr 2021 20:29:13 +0000</pubDate>
      <link>https://dev.to/danawoodman/deploying-a-sveltekit-app-to-netlify-5dc3</link>
      <guid>https://dev.to/danawoodman/deploying-a-sveltekit-app-to-netlify-5dc3</guid>
      <description>&lt;p&gt;Want to deploy your SvelteKit app to Netlify? Well, you're in luck because it's actually quite easy!&lt;/p&gt;

&lt;p&gt;Let's jump right in 👇&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#1-create-your-sveltekit-project"&gt;
  &lt;/a&gt;
  1. Create your SvelteKit project
&lt;/h1&gt;

&lt;p&gt;First, obviously you'll need a SvelteKit project. If you don't have one yet, setup is super simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init svelte@next my-app
&lt;span class="nb"&gt;cd &lt;/span&gt;my-app
npm i
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you can run &lt;code&gt;npm run dev&lt;/code&gt; to play 👯‍♀️ with your new app.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#2-create-raw-netlifytoml-endraw-"&gt;
  &lt;/a&gt;
  2. Create &lt;code&gt;netlify.toml&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;You'll need to let Netlify know where the SvelteKit build will be located (&lt;code&gt;/build&lt;/code&gt;) and where the serverless functions will live (&lt;code&gt;/functions&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;In the root of your project, create a &lt;code&gt;netlify.toml&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="nn"&gt;[build]&lt;/span&gt;
  &lt;span class="py"&gt;command&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"npm run build"&lt;/span&gt;
  &lt;span class="py"&gt;publish&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"build/"&lt;/span&gt;
  &lt;span class="py"&gt;functions&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"functions/"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#3-use-the-netlify-adapter"&gt;
  &lt;/a&gt;
  3. Use the Netlify adapter
&lt;/h1&gt;

&lt;p&gt;Now you'll want to install the &lt;a href="https://www.npmjs.com/package/@sveltejs/adapter-netlify"&gt;@sveltejs/adapter-netlify adapter&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-D&lt;/span&gt; @sveltejs/adapter-netlify@next
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your &lt;code&gt;svelte.config.cjs&lt;/code&gt; file, change &lt;code&gt;adapter-node&lt;/code&gt; to &lt;code&gt;adapter-netlify&lt;/code&gt;, like so (diff):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;const sveltePreprocess = require('svelte-preprocess')
&lt;/span&gt;&lt;span class="gd"&gt;-const node = require('@sveltejs/adapter-node')
&lt;/span&gt;&lt;span class="gi"&gt;+const netlify = require('@sveltejs/adapter-netlify')
&lt;/span&gt;&lt;span class="p"&gt;const pkg = require('./package.json')
&lt;/span&gt;
/** @type {import('@sveltejs/kit').Config} */
&lt;span class="p"&gt;module.exports = {
&lt;/span&gt;  // Consult https://github.com/sveltejs/svelte-preprocess
  // for more information about preprocessors
  preprocess: sveltePreprocess(),
  kit: {
    // By default, `npm run build` will create a standard Node app.
    // You can create optimized builds for different platforms by
    // specifying a different adapter
&lt;span class="gd"&gt;-    adapter: node(),
&lt;/span&gt;&lt;span class="gi"&gt;+    adapter: netlify(),
&lt;/span&gt;
    // hydrate the &amp;lt;div id="svelte"&amp;gt; element in src/app.html
    target: '#svelte',

    vite: {
      ssr: {
        noExternal: Object.keys(pkg.dependencies || {}),
      },
    },
  },
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you have everything you need to deploy your Netlify site!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#4-deploy-on-netlify"&gt;
  &lt;/a&gt;
  4. Deploy on Netlify
&lt;/h1&gt;

&lt;p&gt;Now all you need to do is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a Github repo&lt;/li&gt;
&lt;li&gt;Push your code to it&lt;/li&gt;
&lt;li&gt;Add the new repo to Netlify (e.g. the "New site from Git" button)

&lt;ul&gt;
&lt;li&gt;Accept the default options&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Wait for it to build and after about a minute, you should have a SvelteKit app on Netlify! 🎉&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now you can add routes to your SvelteKit app and they will be served by Netlify's global serverless infrastructure 🛰&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it!
&lt;/h1&gt;

&lt;p&gt;Deploying SvelteKit to Netlify (or Vercel) is quite simple and gives you a global CDN and serverless function out the gate!&lt;/p&gt;

&lt;p&gt;Hope this was helpful! 🍻&lt;/p&gt;

&lt;p&gt;If you want to check out the source code, &lt;a href="https://github.com/danawoodman/netlify-sveltekit"&gt;see the Github repo here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Follow me on &lt;a href="https://dev.to/danawoodman"&gt;Dev.to&lt;/a&gt;, &lt;a href="https://twitter.com/DanaWoodman"&gt;Twitter&lt;/a&gt; and &lt;a href="https://github.com/danawoodman"&gt;Github&lt;/a&gt; for more web dev and startup related content&lt;/em&gt; 🤓&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>sveltekit</category>
      <category>netlify</category>
      <category>webdev</category>
    </item>
    <item>
      <title>SlateJS: Adding Images and Links</title>
      <author>Karl Castillo</author>
      <pubDate>Sun, 11 Apr 2021 20:25:21 +0000</pubDate>
      <link>https://dev.to/koralarts/slatejs-adding-images-and-links-2g93</link>
      <guid>https://dev.to/koralarts/slatejs-adding-images-and-links-2g93</guid>
      <description>&lt;p&gt;In the previous, we talked about setting up a simple SlateJS text editor. Now, we're going to add two new features to our text editor -- inserting an image and link.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#toolbar"&gt;
  &lt;/a&gt;
  Toolbar
&lt;/h1&gt;

&lt;p&gt;For us to start adding rich text functionality, we'll need to create a toolbar component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useSlateStatic&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;slate-react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Toolbar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;editor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSlateStatic&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleInsertImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Enter an Image URL&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// For simplicity&lt;/span&gt;
    &lt;span class="nx"&gt;insertImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// will be implemented later&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleInsertLink&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Enter a URL&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// For simplicity&lt;/span&gt;
    &lt;span class="nx"&gt;insertLink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// will be implemented later&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"toolbar"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleInsertImage&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Image&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleInsertLink&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Link&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Important things to note here are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;useSlateStatic&lt;/code&gt;: gives us an instance of our Editor which won't cause a re-render,&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;insertImage&lt;/code&gt;: a helper function that will insert an image into our Editor&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;insertLink&lt;/code&gt;: a helper function that will insert a link into our Editor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can then use this component as a child of our &lt;code&gt;Slate&lt;/code&gt; component. We do this so we can use &lt;code&gt;useSlateStatic&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Editor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Slate&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Toolbar&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      ...
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Slate&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#-raw-insertimage-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;insertImage&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;Our &lt;code&gt;insertImage&lt;/code&gt; function will handle how we'll insert images into our Editor. We'll have to set some rules.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If the Editor isn't focused, we'll add the image at the end of the Editor.&lt;/li&gt;
&lt;li&gt;If the Editor is focused on an empty Node or void Node (eg. image node), we'll replace the empty Node node with the image.&lt;/li&gt;
&lt;li&gt;If the Editor is focused on a non-empty Node, we'll add the image after the Node.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;insertImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;selection&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createImageNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Image&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;ReactEditor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="nx"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;parentNode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;parentPath&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Editor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isVoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parentNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parentNode&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Insert the new image node after the void node or a node with content&lt;/span&gt;
      &lt;span class="nx"&gt;Transforms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;at&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parentPath&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="na"&gt;select&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// If the node is empty, replace it instead&lt;/span&gt;
      &lt;span class="nx"&gt;Transforms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;at&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;parentPath&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;Transforms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;at&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;parentPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;select&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Insert the new image node at the bottom of the Editor when selection&lt;/span&gt;
    &lt;span class="c1"&gt;// is falsey&lt;/span&gt;
    &lt;span class="nx"&gt;Transforms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;select&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#-raw-insertlink-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;insertLink&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;Now that we're able to insert images, let's add functionality to insert links. Similar to the images, we need to set rules.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If the Editor isn't focused, insert the new link inside of a paragraph at the end of the Editor.&lt;/li&gt;
&lt;li&gt;If the Editor is focused on a void node (eg. image node), insert the new link inside of a paragraph below the void node.&lt;/li&gt;
&lt;li&gt;If the Editor is focused inside of a Paragraph, insert the new link at the selected spot.&lt;/li&gt;
&lt;li&gt;If a range of text is highlighted, convert the highlighted text into a link.&lt;/li&gt;
&lt;li&gt;If the selected text consists of a link, remove the link and follow Rule #3 and #4.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createLinkNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;removeLink&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;opts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Transforms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unwrapNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;match&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;Editor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEditor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;Element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;insertLink&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;selection&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createLinkNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;New Link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;ReactEditor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="nx"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;parentNode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;parentPath&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Editor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Remove the Link node if we're inserting a new link node inside of another&lt;/span&gt;
    &lt;span class="c1"&gt;// link.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parentNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;removeLink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isVoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parentNode&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Insert the new link after the void node&lt;/span&gt;
      &lt;span class="nx"&gt;Transforms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createParagraphNode&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;at&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parentPath&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="na"&gt;select&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Range&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isCollapsed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Insert the new link in our last known location&lt;/span&gt;
      &lt;span class="nx"&gt;Transforms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;select&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Wrap the currently selected range of text into a Link&lt;/span&gt;
      &lt;span class="nx"&gt;Transforms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wrapNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;split&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="c1"&gt;// Remove the highlight and move the cursor to the end of the highlight&lt;/span&gt;
      &lt;span class="nx"&gt;Transforms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collapse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;edge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;end&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Insert the new link node at the bottom of the Editor when selection&lt;/span&gt;
    &lt;span class="c1"&gt;// is falsey&lt;/span&gt;
    &lt;span class="nx"&gt;Transforms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createParagraphNode&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;]));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#custom-type-raw-link-endraw-"&gt;
  &lt;/a&gt;
  Custom Type &lt;code&gt;Link&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;Now that we're able to insert links, let's make sure we're able to render a Link correctly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;attributes&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can then update our &lt;code&gt;renderElement&lt;/code&gt; function to include the new Link type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;renderElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;image&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Image&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Paragraph&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#link-popup"&gt;
  &lt;/a&gt;
  Link Popup
&lt;/h2&gt;

&lt;p&gt;Since we can't really tell what URL the link has, we can create a simple popup whenever we focus on a link. We can do that by updating our &lt;code&gt;Link&lt;/code&gt; component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;editor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSlateStatic&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;selected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSelected&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;focused&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useFocused&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"element-link"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;attributes&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;selected&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;focused&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"popup"&lt;/span&gt; &lt;span class="na"&gt;contentEditable&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"noreferrer"&lt;/span&gt; &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;FontAwesomeIcon&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;faExternalLinkAlt&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;removeLink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;FontAwesomeIcon&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;faUnlink&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;With our rich text taking shape, we're starting to see the power of Slate and how you have the power to implement the way you want to.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h1&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/35inm"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>slate</category>
      <category>react</category>
      <category>javascript</category>
      <category>slatejs</category>
    </item>
    <item>
      <title>My first month as a Developer</title>
      <author>Vardana Bhanot</author>
      <pubDate>Sun, 11 Apr 2021 20:15:46 +0000</pubDate>
      <link>https://dev.to/vardanabhanot/my-first-month-as-a-developer-4805</link>
      <guid>https://dev.to/vardanabhanot/my-first-month-as-a-developer-4805</guid>
      <description>&lt;p&gt;So a little about me, I joined a company as a software developer a month back and it's my first job, in which I am  mostly working on PHP and JavaScript specifically jQuery.&lt;/p&gt;

&lt;p&gt;So most of the things I am gonna mention here are the once I learnt after writting a lot of jQuery speghetti. &lt;/p&gt;

&lt;p&gt;So as I started working on a new feature I was given a new file, so I was just trying to make things work in the front-end and ended up thinking that I will structure these things after I make up things work. So after the things were done and I had to add something new and after adding the new thing everything broke.&lt;br&gt;
And then I realised how difficult it was to read the code I had written.&lt;br&gt;
I was having difficult time reading my own code.&lt;br&gt;
So here I am gonna tell you things I learnt after getting I that situation.&lt;/p&gt;

&lt;p&gt;And all the code example are in &lt;strong&gt;&lt;em&gt;PHP&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#1divide-the-code-into-functions"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1.Divide the code into functions:&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;A single function should just do a single thing&lt;/em&gt;, and structure your code from the start, as it will make it easy for you to debug the code as well as for someone who might have to make changes to your code in future.&lt;br&gt;
Making your function do just one thing makes it more readable and modular so you can reuse it anywhere you want.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#2try-not-to-nest-ifelse-much-and-return-early"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.Try not to nest if-else much and return early&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Nesting if else too much make it difficult to read &lt;br&gt;
for example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad Practice&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function is_winters($month){
   if(!empty($month)){
      if(is_string($month)){
         if($month == 'january'){
             return true;
         }
         else if($month == 'december'){
             return true;
         }
         else if($month == 'november'){
             return true;
         }
      }else{
            return false;
      }
   }else{
      return false;
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good Practice&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function is_winters($month){
    if(empty($month)){
       return false;
    }
    $winter_months = ['november', 'december', 'january'];
return in_array(strtolower($month), $winter_months, true);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3avoid-using-for-loops"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.Avoid using for loops&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Here I am talking about the basic for loops like &lt;br&gt;
&lt;code&gt;for($i=0; $i&amp;lt; $num; $i++){}&lt;/code&gt;&lt;br&gt;
using foreach loops make the code more readable and reduces the need to map the variable in mind in for loops.&lt;br&gt;
for example we have an array of &lt;code&gt;$userProfiles=[...somedata];&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;using old school for loop&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for($i=0; $i&amp;lt;count($userProfiles); $i++){
    print_r($userProfiles[$i]['user_name'];
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;using foreach(or any other equivalent form in your language)&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;foreach($userProfiles as $userProfile){
    print_r($userProfile['user_name']);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you might agree or disagree with me but this helped me, and you surely sometimes need the old school for loop or even while loops but it depends on what you are dealing with.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4dont-make-unneeded-long-descriptive-variable-name"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4.Don't make unneeded long descriptive variable name&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;I did this a lot trying to make good descriptive variable names but I ended up making them long.&lt;br&gt;
like &lt;code&gt;$user_profile_color;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad Practice&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class UserProfile{
    $user_profile_color;
    $user_profile_picture;
    $user_profile_settings;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good Practice&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class UserProfile{
    $profile_color;
    $profile_picture;
    $settings;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#5think-before-you-write"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.Think before you write&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Just jumping on to write is not a wise thing to do, it's good to sit back for a while and think about how to do things, how to structure the function, which conditional to use , which loop to use, these small decisions help a lot.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;These where the few things that I learnt and helped me write more readable code. Its not that I have mastered the art of writing clean code but if I look a month back I am surely better at writing programs which are more readable.&lt;br&gt;
I knew most of these points before I ended up writing the code still I ended up writing messy code, but after I had faced how a messy code can make your life a hell, I am trying my best to keep things clean.&lt;/p&gt;

&lt;p&gt;I would love to know if you have suggestions on how to write better code.&lt;/p&gt;

&lt;p&gt;I hope you have an amazing day.&lt;/p&gt;

</description>
      <category>php</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Disabling Viewport Zoom on iOS 14 Web Browsers</title>
      <author>jasperreddin</author>
      <pubDate>Sun, 11 Apr 2021 20:13:52 +0000</pubDate>
      <link>https://dev.to/jasperreddin/disabling-viewport-zoom-on-ios-14-web-browsers-l13</link>
      <guid>https://dev.to/jasperreddin/disabling-viewport-zoom-on-ios-14-web-browsers-l13</guid>
      <description>&lt;p&gt;I recently answered a question on Discord on how to disable double-tap to zoom on iOS browsers. I looked this problem up on Google, and most people said to use the viewport meta tag. Except that was four years ago and it seems that Safari no longer respects those tags. &lt;/p&gt;

&lt;p&gt;Many are using Javascript to solve this, but that could be unreliable in many ways.&lt;/p&gt;

&lt;p&gt;But now, since Safari 13, there is a way to disable viewport zooming.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;touch-action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pan-y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What the &lt;code&gt;touch-action&lt;/code&gt; property does is it disables all touch events going to the selected element(s) except for the value specified. So by setting the property to &lt;code&gt;pan-y&lt;/code&gt; for the whole body, we're only letting the user pan up and down, no matter where they initiate the touch. Any other touch events, whether it be a double tap, a pinch, or even a pan left or right, will be ignored. &lt;/p&gt;

&lt;p&gt;You can read more about the &lt;code&gt;touch-action&lt;/code&gt; CSS property &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action"&gt;here&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you need to allow the user to pan both up or down &lt;em&gt;and&lt;/em&gt; left or right, you can add &lt;code&gt;pan-x&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;touch-action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pan-y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pan-x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;If you have just &lt;code&gt;pan-y&lt;/code&gt; turned on in your body selector, and you have smaller viewports inside your document where there will be horizontal scrolling, you can override the property value in the child element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.childViewPortElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;scroll&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="err"&gt;...&lt;/span&gt;
  &lt;span class="py"&gt;touch-action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pan-y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pan-x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#fair-warning"&gt;
  &lt;/a&gt;
  Fair Warning
&lt;/h2&gt;

&lt;p&gt;In my testing I found out that on iOS, viewport zoom is fully disabled when the &lt;code&gt;touch-action&lt;/code&gt; property is restricted like this. This applies even to automatic zooms that the browser performs, such as when the user taps on a text box with a font size smaller than 16px. &lt;/p&gt;

&lt;p&gt;However, if even one element in the body has &lt;code&gt;touch-action&lt;/code&gt; set to &lt;code&gt;pinch-zoom&lt;/code&gt; or &lt;code&gt;manipulation&lt;/code&gt; the browser will perform automatic zooms when tapping on small text boxes.&lt;/p&gt;

&lt;p&gt;So be mindful of that, if you do have to enable manipulation or pinch-zoom events.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>ios</category>
    </item>
    <item>
      <title>Improve performance by deleting laravel log file via Routes. (Artisan &amp; exec)</title>
      <author>DON EJEH</author>
      <pubDate>Sun, 11 Apr 2021 20:13:39 +0000</pubDate>
      <link>https://dev.to/donejeh/improve-performance-by-deleting-laravel-log-file-via-routes-artisan-exec-1pe6</link>
      <guid>https://dev.to/donejeh/improve-performance-by-deleting-laravel-log-file-via-routes-artisan-exec-1pe6</guid>
      <description>&lt;p&gt;Laravel log file helps we developers in so many ways such logging of data and more importantly is that all errors generated by our web application are be logged in our laravel log file which is located at &lt;strong&gt;storage\logs\laravel.log&lt;/strong&gt;, this error generated by our web app can make log file size rapidly increasing to like 30GB in size 😲 according to this post =&amp;gt; &lt;a href="https://community.librenms.org/t/laravel-log-file-size-rapidly-increasing/7232"&gt;Laravel log file size rapidly increasing&lt;/a&gt;, this can be a bottle neck problem to some simple Laravel application out there that is been hosted in a small web shared hosting site with limit disk space. Instead of using &lt;strong&gt;ssh or filezilla&lt;/strong&gt; to delete this log file manually over and over, here i will show you how to do that with via route i.e when you goto &lt;strong&gt;&lt;a href="http://www.yoursite.come/clear"&gt;www.yoursite.come/clear&lt;/a&gt; or &lt;a href="http://www.yoursite.come/delete"&gt;www.yoursite.come/delete&lt;/a&gt;&lt;/strong&gt; that log file will be deleted and your server will have a breathing space. 👽 &lt;/p&gt;

&lt;p&gt;Let get started either by using existing project or creating new project this will still work.&lt;/p&gt;

&lt;p&gt;Goto your web.php file and paste this&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Route::get('/clear', function() {&lt;br&gt;
    exec('rm -f ' . storage_path('logs/&lt;em&gt;.log'));&lt;br&gt;
    exec('rm -f ' . base_path('&lt;/em&gt;.log'));&lt;br&gt;
    return "Log file deleted";&lt;br&gt;
});&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To run the Above route goto &lt;strong&gt;&lt;a href="http://www.yoursite.com/clear"&gt;www.yoursite.com/clear&lt;/a&gt;&lt;/strong&gt; and hit enter, BOOM it delete all the log file in &lt;strong&gt;storage_path or base_path.&lt;/strong&gt; So also you can change this to any location you log file is kept. 😁&lt;/p&gt;

&lt;p&gt;For bonus let me show you a simple way to run Artisan inside route (web.php or api.php) on live production with using terminal. WIth this Artisan command you can optimize your laravel web app.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Route::get('/cl', function() {&lt;br&gt;
    Artisan::call('config:cache');&lt;br&gt;
    Artisan::call('cache:clear');&lt;br&gt;
    Artisan::call('config:clear');&lt;br&gt;
    Artisan::call('view:clear');&lt;br&gt;
    Artisan::call('route:clear');&lt;br&gt;
    exec('rm -f ' . storage_path('logs/&lt;em&gt;.log'));&lt;br&gt;
    exec('rm -f ' . base_path('&lt;/em&gt;.log'));&lt;br&gt;
    return "Cache is cleared";&lt;br&gt;
})-&amp;gt;name('clear.cache');&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Above command helps you to Improve Laravel Performance by removing Config caching, Routes caching and view caching for better loading of your web app. 😜&lt;/p&gt;

&lt;p&gt;Post Motivation &lt;br&gt;
&lt;a href="https://laracasts.com/discuss/channels/laravel/my-laravellog-size-is-31-gb#:~:text=log%20size%20is%2031%20GB,-Hello%20everyone%2C%20I"&gt;My laravel.log size is 31 GB&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;For more tutorial share , comment and if any question or suggest drop it.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>artisan</category>
    </item>
  </channel>
</rss>
