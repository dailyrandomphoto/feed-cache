<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>$10M to optimize Kubernetes: CAST AI raises Series A and extends support to top 3 cloud providers</title>
      <author>CAST AI</author>
      <pubDate>Tue, 12 Oct 2021 14:17:00 +0000</pubDate>
      <link>https://dev.to/castai/10m-to-optimize-kubernetes-cast-ai-raises-series-a-and-extends-support-to-top-3-cloud-providers-52dj</link>
      <guid>https://dev.to/castai/10m-to-optimize-kubernetes-cast-ai-raises-series-a-and-extends-support-to-top-3-cloud-providers-52dj</guid>
      <description>&lt;p&gt;To deliver on our promise of fully automated cloud cost optimization for Kubernetes, we &lt;strong&gt;raised $10 million in a Series A round &lt;/strong&gt;led by the San Francisco-based &lt;a href="https://www.cotacapital.com/"&gt;Cota Capital&lt;/a&gt;, with &lt;a href="https://www.samsungnext.com/"&gt;Samsung Next&lt;/a&gt; and other investors participating.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Managing cloud deployments effectively to control costs has become a priority for organizations of all sizes, &lt;/p&gt;
&lt;cite&gt; Bobby Yazdani, Cota Capital founder, and partner&lt;/cite&gt;
&lt;/blockquote&gt;

&lt;p&gt;"We are excited to partner with the CAST AI team, as we believe in the company’s ability to address cloud-native optimization challenges," he added.&lt;/p&gt;

&lt;p&gt;And there's more news we'd like to share. CAST AI platform now supports all three major cloud service providers: Amazon Web Services, Google Cloud Platform, and Microsoft Azure.&lt;/p&gt;

&lt;h2&gt;Cloud cost management industry is ripe for disruption&lt;/h2&gt;

&lt;p&gt;In 2020 alone, companies around the world spent $17 billion of unnecessary cloud expenses due to inefficient tool selection and the inability to intelligently scale capacity to match the changing application requirements. &lt;/p&gt;

&lt;p&gt;Our platform solves this problem by using AI and machine learning to save our clients between 60% and 90% of total annual cloud expenditures for businesses in industries such as e-commerce, adtech, fintech, data analytics, cybersecurity, and SaaS application delivery. &lt;/p&gt;

&lt;p&gt;The new funding round will accelerate our product development initiatives in this direction.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We are thrilled to have Cota Capital lead our Series A round. As we continue on our mission to utilize artificial intelligence for optimizing cloud deployments, we will use the additional funds to further accelerate development and delivery of our platform and provide real and measurable value to our customers.&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;Yuri Frayman, CAST AI co-founder and CEO&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;



&lt;p&gt;"The adoption of Kubernetes continues to grow as containers and microservice architecture become the defacto standard to serve modern applications at scale," said Raymond Liao, Managing Director, Samsung Next. "Our team is thrilled to participate in CAST AI's latest round, as the company advances its quest to make Infrastructure as a Service (IaaS) more efficient and on budget."&lt;/p&gt;

&lt;h2&gt;Towards autonomous Kubernetes&lt;/h2&gt;

&lt;p&gt;Our approach revolves around optimizing and autonomously managing Kubernetes for any cloud service. By connecting existing clusters to our platform with a single click, our users get a free instant savings report and instantly find cost-saving opportunities. CAST AI analyzes and learns more about the company's cloud environment to identify the resources required for maximum performance.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;With CAST AI, our applications are using a more efficient combination of cloud services, and we have already reduced our annualized cloud costs by millions of dollars. &lt;/p&gt;
&lt;cite&gt;Mark Weiler, SVP Engineering at Branch.io&lt;/cite&gt;
&lt;/blockquote&gt;

&lt;p&gt;The core value of CAST AI lies in complete automation that allows users to define their own optimization settings to handle low-level optimizations without any extra work for DevOps engineers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Curious to see optimization for your cloud in action? Join us at KubeCon &amp;amp; CloudNativeCon North America from October 13th through October 16th, 2021! &lt;a href="https://kubecon-cloudnativecon-na.com/virtual-exhibitor/?v0326b739525aaf6a5900c153ea6485e67109462e8db159b156161fc07c7e3d8016769932b4c0398e64b5ea52edb3d1c5=BF5652C502BBD106EFFEE4BD82C0EA0B6A6407578F8E39CF161E2FA105DC764D0466954DD8D33A026C364D8C16D58221" rel="noreferrer noopener"&gt;Visit our booth virtually&lt;/a&gt; or in-person if you’re attending the event.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>news</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Full Stack E-Commerce App (+8 hours free tutorial)</title>
      <author>Safak</author>
      <pubDate>Tue, 12 Oct 2021 14:11:38 +0000</pubDate>
      <link>https://dev.to/safak/full-stack-e-commerce-app-8-hours-free-tutorial-10pb</link>
      <guid>https://dev.to/safak/full-stack-e-commerce-app-8-hours-free-tutorial-10pb</guid>
      <description>&lt;p&gt;Hi, I'm Safak. I am a full-stack web developer and I'm sharing open source web projects on my YouTube channel. I want to share my +8 hours "MERN Stack E-Commerce App with an Admin Dashboard" tutorial for free. You can reach the playlist from &lt;a href="https://www.youtube.com/watch?v=c1xTDSIXit8&amp;amp;list=PLj-4DlPRT48mxPG8TAXOH4qqQ1ijuERO4"&gt;here&lt;/a&gt;. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-technologies-are-used"&gt;
  &lt;/a&gt;
  What technologies are used?
&lt;/h2&gt;

&lt;h6&gt;
  &lt;a href="#backend-server-nodejs-express-framework-jwt"&gt;
  &lt;/a&gt;
  Backend Server: Node.js Express Framework, JWT
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#database-mongodb"&gt;
  &lt;/a&gt;
  Database: MongoDB
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#payment-method-stripe-api"&gt;
  &lt;/a&gt;
  Payment Method: Stripe API
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#frontend-framework-reactjs-with-hooks"&gt;
  &lt;/a&gt;
  Front-End Framework: React.js with hooks
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#ui-library-styled-components"&gt;
  &lt;/a&gt;
  UI library: Styled Components
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#state-management-library-redux"&gt;
  &lt;/a&gt;
  State Management Library: Redux
&lt;/h6&gt;




&lt;h2&gt;
  &lt;a href="#design-part-of-the-ecommerce-app"&gt;
  &lt;/a&gt;
  Design Part of the E-Commerce App
&lt;/h2&gt;

&lt;p&gt;In this section, we are going to design an e-commerce app using React.js functional components, hooks and Styled Components. For now, we are going to be using a dummy data to display products but in the last part we'll fetch all data from MongoDb using a Rest API&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/c1xTDSIXit8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backend-part-of-the-ecommerce-app"&gt;
  &lt;/a&gt;
  Back-End Part of the E-Commerce App
&lt;/h2&gt;

&lt;p&gt;In this section, we are going to create a Rest API using Express server with MongoDB connection and create necessary models and routes in order to handle CRUD operations. We'll provide the security using JWT and authenticate and authorize users. And also you'll see how easy to get payment using Stripe API&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stripe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STRIPE_KEY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/payment&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charges&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tokenId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;usd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stripeErr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;stripeRes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stripeErr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stripeErr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stripeRes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/rMiRZ1iRC0A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mern-stack-part-of-the-ecommerce-app"&gt;
  &lt;/a&gt;
  MERN Stack Part of the E-Commerce App
&lt;/h2&gt;

&lt;p&gt;In this section, we are going to combine the API with the UI Design and make our application dynamic. We'll fetch data and make POST requests using &lt;strong&gt;axios&lt;/strong&gt;. And also we'll be covering &lt;strong&gt;Redux Toolkit&lt;/strong&gt; in depth.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createSlice&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@reduxjs/toolkit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;productSlice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSlice&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;product&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;products&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
    &lt;span class="na"&gt;isFetching&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;reducers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//GET ALL&lt;/span&gt;
    &lt;span class="na"&gt;getProductStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isFetching&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;getProductSuccess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isFetching&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="c1"&gt;//DELETE&lt;/span&gt;
    &lt;span class="na"&gt;deleteProductStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isFetching&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;deleteProductSuccess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isFetching&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="c1"&gt;//UPDATE&lt;/span&gt;
    &lt;span class="na"&gt;updateProductStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isFetching&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;updateProductSuccess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isFetching&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="c1"&gt;//ADD&lt;/span&gt;
    &lt;span class="na"&gt;addProductStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isFetching&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;addProductSuccess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isFetching&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;failure&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isFetching&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/y66RgYMAgSo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope it was useful. If you want to learn more about web development and practice with real-world projects, you can check out my channel and other posts.&lt;/p&gt;

&lt;p&gt;📺 &lt;a href="https://dev.to/safak/full-stack-netflix-app-7-hours-free-tutorial-1o6l"&gt;Full Stack Netflix App (+7 Hours free tutorial)&lt;/a&gt;&lt;br&gt;
🧑‍🤝‍🧑 &lt;a href="https://dev.to/safak/social-media-app-using-mern-stack-4ic6"&gt;Full Stack Social Media App (+7 Hours free tutorial)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔥 &lt;a href="https://www.youtube.com/c/lamadev"&gt;Lama Dev YouTube Channel&lt;/a&gt;&lt;br&gt;
⚡️ &lt;a href="https://www.facebook.com/groups/lamadev"&gt;Lama Dev Facebook&lt;/a&gt;&lt;br&gt;
👾 &lt;a href="https://github.com/safak/youtube/tree/mern-ecommerce-app"&gt;Source Code&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>node</category>
    </item>
    <item>
      <title>How To Implement Heatmap In Tables Using Directives In Angular</title>
      <author>Adithya Sreyaj</author>
      <pubDate>Tue, 12 Oct 2021 14:11:37 +0000</pubDate>
      <link>https://dev.to/angular/how-to-implement-heatmap-in-tables-using-directives-in-angular-2f60</link>
      <guid>https://dev.to/angular/how-to-implement-heatmap-in-tables-using-directives-in-angular-2f60</guid>
      <description>&lt;p&gt;Let's see how easy it is to add heatmaps to tables in Angular using Directives. We'll go for a really simple and elegant solution to have separate heatmap colors to different columns in the table.&lt;/p&gt;

&lt;p&gt;As I always say, Directives are a really powerful feature of Angular. It can be used as an elegant solution to implement a lot of cool functionalities. You can clearly see why the directive approach makes more sense when you reach the end of the post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#heatmaps-in-table"&gt;
  &lt;/a&gt;
  Heatmaps in table
&lt;/h2&gt;

&lt;p&gt;Even though it's not that often we see heatmaps in tables, but heatmaps can really add some value in terms of visualization. It would make sense in data sets where there is some kind of comparison or range.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uxiMR6oa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q835doonjic4o3cloq85.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uxiMR6oa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q835doonjic4o3cloq85.png" alt="Table with Heatmap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-directives"&gt;
  &lt;/a&gt;
  Why Directives?
&lt;/h2&gt;

&lt;p&gt;If you have this question in mind, here are some reasons which justify why creating a directive for implementing this feature will make sense.&lt;br&gt;
The logic can be completely moved outside of the component, making it simpler and leaner. If the logic is separated from the component, that means it's more reusable.&lt;br&gt;
When something is built in a re-usable manner, it will be easy to scale and maintain.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#heatmap-logic"&gt;
  &lt;/a&gt;
  Heatmap Logic
&lt;/h2&gt;

&lt;p&gt;For implementing this functionality let's look at what exactly needs to be done here. So basically, heatmaps give the user idea of the magnitude of something by variation in color or hue.&lt;/p&gt;

&lt;p&gt;So If we have a set of numbers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here based on the value we can manipulate the intensity of a color. Meaning &lt;code&gt;1&lt;/code&gt; will be the lightest shade of the color and &lt;code&gt;10&lt;/code&gt; will be the color itself. So we just need to map the values to the intensity of the colors here. We can also have the opposite condition as well.&lt;/p&gt;

&lt;p&gt;There are different ways to implement this. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-using-alpha-channel"&gt;
  &lt;/a&gt;
  1. Using Alpha Channel
&lt;/h3&gt;

&lt;p&gt;We can easily implement heatmaps using &lt;strong&gt;RGBA&lt;/strong&gt; or &lt;strong&gt;HSLA&lt;/strong&gt; by just changing the alpha channel meaning the transparency of the color.&lt;/p&gt;

&lt;p&gt;I am not going with this approach as we are also trying to generate accessible text colors based on the background color. This will ensure the text will remain readable for all the color stops.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-using-hsl-color-expression"&gt;
  &lt;/a&gt;
  2. Using HSL Color Expression
&lt;/h3&gt;

&lt;p&gt;Here I am gonna be using HSL color expression to easily get the right color for each value by manipulating the &lt;code&gt;L (Lightness)&lt;/code&gt; parameter. &lt;br&gt;
&lt;strong&gt;HSL&lt;/strong&gt; is a really good way to express colors and manipulating the colors is very easy with it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HSL&lt;/strong&gt; stands for &lt;code&gt;Hue&lt;/code&gt; &lt;code&gt;Saturation&lt;/code&gt; &lt;code&gt;Lightness&lt;/code&gt; and it can also have an &lt;code&gt;Alpha&lt;/code&gt; channel with &lt;strong&gt;HSLA&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So the idea here is to find the &lt;code&gt;Lightness&lt;/code&gt; factor for each value. Here's how we can do it.&lt;/p&gt;

&lt;p&gt;So here the original color value is first parsed to HSLA:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hsla(234, 77%, 46%, 1)&lt;/code&gt; --&amp;gt; &lt;code&gt;Lightness = 46%&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We have the min possible value for Lightness ie 0.46. So the highest value will have a lightness of &lt;code&gt;46%&lt;/code&gt; and for other values, it will be higher. When lightness increases it moves nearer to &lt;code&gt;White&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here is the formula:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#1b2dd0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;parseHSLA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;-- [234, 0.77,0.46,1]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;highestValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;maxLightness&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;-- 1 - 0.46 = 0.54&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lightness&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;maxLightness&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;highestValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// 1 --&amp;gt; 1 - (1 * 0.54 / 10) = (1 - 0.05) ~ 95% &lt;/span&gt;
&lt;span class="c1"&gt;// 5 --&amp;gt; 1 - (5 * 0.46 / 10) = (1 - 0.23) ~ 77%&lt;/span&gt;
&lt;span class="c1"&gt;// 10 -&amp;gt; 1 - (10 * 0.54 / 10) = (1 - 0.54) ~ 46%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here 10 will be the lowest number and hence we need a very light color so 95% will make it very light.&lt;br&gt;
Lightness % as it increases makes the color whiter.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dhmN8_to--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0nmoynd38w87o48epet.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dhmN8_to--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0nmoynd38w87o48epet.png" alt="Lightness Palette"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So now we have the logic in place, let's start with the directives!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-heatmap-directives"&gt;
  &lt;/a&gt;
  Creating Heatmap Directives
&lt;/h2&gt;

&lt;p&gt;So I mentioned "Directives" (plural) as we will be creating multiple directives for this functionality. To be specific 3 of them. Out of the 3, two of them are just for tagging the element and setting some metadata:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Heatmap Table&lt;/li&gt;
&lt;li&gt;Heatmap Column&lt;/li&gt;
&lt;li&gt;Heatmap Cell&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is how we will use the directives in the template:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;table&lt;/span&gt; &lt;span class="na"&gt;heatMapTable&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Company&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Manager&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&lt;/span&gt; &lt;span class="na"&gt;[heatMapColumn]=&lt;/span&gt;&lt;span class="s"&gt;"options.employees"&lt;/span&gt;  &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"employees"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Employees
    &lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&lt;/span&gt; &lt;span class="na"&gt;[heatMapColumn]=&lt;/span&gt;&lt;span class="s"&gt;"options.contractors"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"contractors"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Contractors
    &lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ng-container&lt;/span&gt; &lt;span class="na"&gt;*ngFor=&lt;/span&gt;&lt;span class="s"&gt;"let item of data"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{{ item.company }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{{ item?.manager }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&lt;/span&gt; &lt;span class="na"&gt;[heatMapCell]=&lt;/span&gt;&lt;span class="s"&gt;"item.employees"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"employees"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         {{ item?.employees }}
      &lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&lt;/span&gt; &lt;span class="na"&gt;[heatMapCell]=&lt;/span&gt;&lt;span class="s"&gt;"item.contractors"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"contractors"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        {{ item?.contractors }}
      &lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ng-container&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#heatmap-cell-directive"&gt;
  &lt;/a&gt;
  Heatmap Cell Directive
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Directive&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;[heatMapCell]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HeatmapCellDirective&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;heatMapCell&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;heatMap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;colId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ElementRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have an input to pass the value into the directive and also accept the id of the column to which the cell belongs in the table. We inject the &lt;code&gt;ElementRef&lt;/code&gt; so that we can manipulate the element later.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heatmap-column-directive"&gt;
  &lt;/a&gt;
  Heatmap Column Directive
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Directive&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;[heatMapColumn]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HeatmapColumnDirective&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;colId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;heatMapColumn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we can pass options for styling like the color etc and also the id of the column.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heatmap-table-directive"&gt;
  &lt;/a&gt;
  Heatmap Table Directive
&lt;/h3&gt;

&lt;p&gt;This is the main directive where all the work is done. This directive is placed on the table. And the other directives are placed on the column and the cells.&lt;/p&gt;

&lt;p&gt;Here we can see how we can access child directives from the parent directive using &lt;a href="https://angular.io/api/core/ContentChildren#description"&gt;ContentChildren&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Directive&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;[heatMapTable]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HeatmapTableDirective&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;AfterViewInit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;ContentChildren&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HeatmapCellDirective&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;descendants&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="nx"&gt;heatMapCells&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;QueryList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HeatmapCellDirective&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;-- Get all the cells&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;ContentChildren&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HeatmapColumnDirective&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;descendants&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="nx"&gt;heatMapColumns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;QueryList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HeatmapColumnDirective&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;-- Get all the columns&lt;/span&gt;

  &lt;span class="nx"&gt;highestValues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="nl"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HeatmapCellDirective&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="nl"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HeatmapColumnDirective&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;

  &lt;span class="nx"&gt;ngAfterViewInit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cells&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;heatMapCells&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toArray&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;heatMapColumns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toArray&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setOptions&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculateHighestValues&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;applyHeatMap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;setOptions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;colId&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;calculateHighestValues&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt; &lt;span class="nx"&gt;colId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;heatMap&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;highestValues&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;colId&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;highestValues&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;colId&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;heatMap&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;highestValues&lt;/span&gt;&lt;span class="p"&gt;?.[&lt;/span&gt;&lt;span class="nx"&gt;colId&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;highestValues&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;colId&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;heatMap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;applyHeatMap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;bgColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;colId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;heatMap&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bgColor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nativeElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;bgColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nativeElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;getColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;textColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;bgColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;parseToHsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;maxLightness&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;percentage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;maxLightness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;highestValues&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lightness&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;bgColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;lightness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;textColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readableColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bgColor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;bgColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;textColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let me break down the code.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#get-access-to-the-cells-and-columns"&gt;
  &lt;/a&gt;
  Get access to the cells and columns
&lt;/h4&gt;

&lt;p&gt;We get access to the cells to which the heatmap needs to be applied:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;ContentChildren&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HeatmapCellDirective&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;descendants&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="nx"&gt;heatMapCells&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;QueryList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HeatmapCellDirective&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This &lt;code&gt;heatMapCells&lt;/code&gt; variable will have the list of &lt;code&gt;td&lt;/code&gt; to which the &lt;code&gt;heatMapCell&lt;/code&gt; was applied. Make sure to set &lt;code&gt;{ descendants: true }&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Note: If true include all descendants of the element. If false then only query direct children of the element.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#save-the-options-for-each-column"&gt;
  &lt;/a&gt;
  Save the options for each column
&lt;/h4&gt;

&lt;p&gt;We can save the options provided for each column in an object. Currently, we are only configuring the color, but this object can be used for all kinds of different options for customizing the heatmap for each column.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;employees&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#000fff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;contractors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#309c39&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#calculate-the-highest-value-for-each-column"&gt;
  &lt;/a&gt;
  Calculate the Highest Value for each column
&lt;/h4&gt;

&lt;p&gt;We can now calculate the highest value for each column and save it in an object with the &lt;code&gt;colId&lt;/code&gt; as the key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;highestValues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;employees&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1239&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;contractors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;453&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#applying-the-heatmap-styles"&gt;
  &lt;/a&gt;
  Applying the Heatmap styles
&lt;/h4&gt;

&lt;p&gt;We can now loop through the cells and then apply &lt;code&gt;backgroundColor&lt;/code&gt; and &lt;code&gt;color&lt;/code&gt; to the cell. Since we have injected the &lt;code&gt;ElementRef&lt;/code&gt; in the cell, we can use the &lt;code&gt;el&lt;/code&gt; property to modify styles:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nativeElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have a helper function which finds the color for each cell based on the logic we have discussed above:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;getColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;textColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;bgColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;parseToHsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;maxLightness&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;percentage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;maxLightness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;highestValues&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lightness&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;bgColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;lightness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;textColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readableColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bgColor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;bgColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;textColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The color manipulation is done using a super simple library &lt;code&gt;color2k&lt;/code&gt; which provides a lot of utilities to mess with colors.&lt;/p&gt;

&lt;p&gt;We have used something called &lt;code&gt;readableColor()&lt;/code&gt; which returns black or white for best contrast depending on the luminosity of the given color. This will make our heatmap more accessible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo-and-code"&gt;
  &lt;/a&gt;
  Demo and Code
&lt;/h2&gt;

&lt;p&gt;&lt;iframe src="https://stackblitz.com/edit/angular-ivy-ohdjff?embed=1&amp;amp;view=preview&amp;amp;" width="100%" height="500"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stackblitz.com/edit/angular-ivy-ohdjff?file=src/app/heatmap.directive.ts"&gt;Stackblitz Link&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;As you can see, there is not much code in the component. All the logic is beautifully handled inside the directive. The only complex stuff going on in the directive is finding the colors. Everything else is straightforward.&lt;/p&gt;

&lt;p&gt;This is a very basic implementation and not perfect too. To make it better, we might have to add some validation and error handling as well. Also, this can be extended by providing more options like Ascending/Descending heatmaps, color ranges, positive and negative heatmaps, and more.&lt;/p&gt;

&lt;p&gt;The whole idea of the blog post is to showcase how a directive can be used for implementing this feature.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  Connect with me
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/AdiSreyaj"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adisreyaj"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/adithyasreyaj/"&gt;Linkedin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://compito.adi.so"&gt;Compito&lt;/a&gt; - Open source project management app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.buymeacoffee.com/adisreyaj"&gt;Buy Me a Pizza&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do add your thoughts in the comments section.&lt;br&gt;
Stay Safe ❤️&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>angular</category>
      <category>typescript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Hacktoberfest ASCII Art</title>
      <author>Adrino Rosario</author>
      <pubDate>Tue, 12 Oct 2021 14:04:18 +0000</pubDate>
      <link>https://dev.to/adrinorosario/hacktoberfest-ascii-art-1cbp</link>
      <guid>https://dev.to/adrinorosario/hacktoberfest-ascii-art-1cbp</guid>
      <description>&lt;p&gt;ASCII art is intriguing and wonderful, yet feels sophisticated to create, especially by writing code. But it's not. &lt;/p&gt;

&lt;p&gt;Here is an open-source ASCII Art Generator project written in Python3 that can help you in understanding ASCII Art. You can find it at: &lt;a href="https://github.com/adrinorosario/ASCII_Art"&gt;https://github.com/adrinorosario/ASCII_Art&lt;/a&gt; . Do contribute to it if you find it helpful and star it on GitHub.&lt;/p&gt;

&lt;p&gt;ASCII art or keyboard art is a copy-pasteable digital age art form. It's about making text pictures with text symbols. Basically, the computer identifies each pixel in an image or images and then fills them with a character (example- $), based on various factors like density of pixels, color, etc.&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>python</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>Continuous integration and delivery (CI/CD) using AWS CDK Pipelines with Bitbucket </title>
      <author>Mohammed Ismaeel</author>
      <pubDate>Tue, 12 Oct 2021 13:40:07 +0000</pubDate>
      <link>https://dev.to/aws-builders/continuous-integration-and-delivery-ci-cd-using-aws-cdk-pipelines-with-bitbucket-4hc3</link>
      <guid>https://dev.to/aws-builders/continuous-integration-and-delivery-ci-cd-using-aws-cdk-pipelines-with-bitbucket-4hc3</guid>
      <description>&lt;p&gt;When starting a new project the first problem we face is planning our infrastructure. In this post I'm giving a simple example of how we can create an automated pipeline using AWS CDK and Bitbucket repository. Before diving into Prerequisites and Steps.&lt;br&gt;
let me first unravel the title of this post: “Continuous integration and delivery with AWS CDK Pipelines”&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#continuous-delivery"&gt;
  &lt;/a&gt;
  Continuous Delivery
&lt;/h2&gt;

&lt;p&gt;I will assume you already have heard about the term Continuous Delivery and there is many definitions out there but the simplest is CD is a set of tools and processes that helps DevOps teams to ship higher quality software, faster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-cdk-vs-the-world"&gt;
  &lt;/a&gt;
  AWS CDK vs the world
&lt;/h2&gt;

&lt;p&gt;The official definition for AWS CDK is an open source software development framework to define your cloud application resources (Infrastructure) using familiar programming languages (&lt;code&gt;TypeScript, JavaScript, Python, Java and C#&lt;/code&gt;).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-cdk-vs-the-world"&gt;
  &lt;/a&gt;
  Why CDk vs the world?
&lt;/h4&gt;

&lt;p&gt;Basically we can compare the CDK with Serverless framework, AWS SAM, and Terraform. All these frameworks are used to develop, test and deploy your project, I will not go in all details and differences between them! &lt;br&gt;
The main benefits of using AWS CDK are: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to use, because we will use the same programing language we use in our project, CDK can be integrated in your IDE, and you don't need to learn Yml or Terraform. &lt;/li&gt;
&lt;li&gt;Component reusability and sharing, just like any other software library&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details check this &lt;a href="https://dev.to/tastefulelk/serverless-framework-vs-sam-vs-aws-cdk-1g9g"&gt;post&lt;/a&gt; by my friend &lt;a href="https://dev.to/tastefulelk"&gt;Sebastian Bille&lt;/a&gt;&lt;br&gt;
And another good &lt;a href="https://acloudguru.com/blog/engineering/cloudformation-terraform-or-cdk-guide-to-iac-on-aws"&gt;post&lt;/a&gt; from &lt;a href="https://acloudguru.com/"&gt;A Cloud Guru&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-codebuild-vs-bitbucket-pipelines"&gt;
  &lt;/a&gt;
  AWS CodeBuild vs Bitbucket Pipelines
&lt;/h2&gt;

&lt;p&gt;I had a job interview recently, and as a part of the interview process I had to do some code test. They asked to create a pipeline using AWS CodeBuild with Bitbucket? My first reaction was why you want to use CodeBuild instead of Bitbucket Pipelines? &lt;br&gt;
The answer I got wasn't satisficing, The main differences I found after some search are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integration with AWS services&lt;/li&gt;
&lt;li&gt;Price, Bitbucket Pipelines offer product package options than AWS offers pay-as-you-go&lt;/li&gt;
&lt;li&gt;Authentication with AWS, CodeBuild has IAM Role integration which gives temporary AWS credentials&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to find out more about this topic please check the following articles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@rokaso/ci-tools-comparison-codebuild-vs-bitbucket-pipelines-vs-jenkins-47f3d25ff984"&gt;CI Tools comparison: CodeBuild vs Bitbucket Pipelines vs Jenkins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://knapsackpro.com/ci_comparisons/aws-codebuild/vs/bitbucket-pipelines"&gt;AWS CodeBuild vs Bitbucket Pipelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h1&gt;

&lt;p&gt;The focus of this post will be on creating pipelines-as-code, so for demonstration purposes we will create and deploy a simple react-app&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;NodeJS install latest Nodejs version &lt;/li&gt;
&lt;li&gt;npm or yarn should be installed globally &lt;/li&gt;
&lt;li&gt;AWS CDK install with &lt;code&gt;npm install -g aws-cdk&lt;/code&gt; or &lt;code&gt;yarn global add aws-cdk&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;AWS CLI&lt;/li&gt;
&lt;li&gt;AWS Account&lt;/li&gt;
&lt;li&gt;Bitbucket Account&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-create-bitbucket-repo"&gt;
  &lt;/a&gt;
  1. Create Bitbucket repo
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create a public or private repository in &lt;a href="https://bitbucket.org/repo/create"&gt;Bitbucket&lt;/a&gt; and name it myapp&lt;/li&gt;
&lt;li&gt;Clone Bitbucket repo to your machine&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-creating-reactapp"&gt;
  &lt;/a&gt;
  2. Creating react-app
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create a simple react-app in the same directory of your 
Bitbucket repository
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app my-app
&lt;span class="nb"&gt;cd &lt;/span&gt;my-app
yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Commit react-app code to Bitbucket &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-configure-aws-cli"&gt;
  &lt;/a&gt;
  3. Configure AWS CLI
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Generate an &lt;code&gt;Access Key&lt;/code&gt; and &lt;code&gt;Secret Access Key&lt;/code&gt; for your AWS account.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"…"&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"…"&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;AWS_SESSION_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"…"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-create-infrastructure-folder"&gt;
  &lt;/a&gt;
  4. Create infrastructure folder
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create a new folder outside the &lt;code&gt;src&lt;/code&gt; folder and name it infra&lt;/li&gt;
&lt;li&gt;Navigate to the infra folder&lt;/li&gt;
&lt;li&gt;Init the CDK project
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  cdk init myApp &lt;span class="nt"&gt;--language&lt;/span&gt; typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#5-deploy-infrastructure"&gt;
  &lt;/a&gt;
  5. Deploy infrastructure
&lt;/h4&gt;

&lt;p&gt;Before the deployment we need to update &lt;code&gt;infr.ts&lt;/code&gt; under  &lt;code&gt;/lib&lt;/code&gt; start by: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add the following dependencies
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;CDK&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-cdk/core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;CodeBuild&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-cdk/aws-codebuild&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;CodePipeline&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-cdk/aws-codepipeline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;CodePipelineAction&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-cdk/aws-codepipeline-actions&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;S3&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-cdk/aws-s3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create pipeline and pipeline artifacts
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
    &lt;span class="c1"&gt;// AWS CodeBuild artifacts&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;outputSources&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CodePipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Artifact&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;outputWebsite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CodePipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Artifact&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// AWS CodePipeline pipeline&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CodePipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Pipeline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;pipelineName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;MyWebsite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;restartExecutionOnUpdate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add checkout stage in this stage we will clone sources from bitbucket repository
we will need to create a &lt;code&gt;connectionArn&lt;/code&gt; in this step please follow the documentation in &lt;a href="https://docs.aws.amazon.com/dtconsole/latest/userguide/connections-create-bitbucket.html"&gt;Create a connection to Bitbucket&lt;/a&gt; to get your &lt;code&gt;connectionArn&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// AWS CodePipeline stage to clone sources from bitbucket repository&lt;/span&gt;
    &lt;span class="nx"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addStage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;stageName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Source&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CodePipelineAction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CodeStarConnectionsSourceAction&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;actionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Checkout&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;repository owner name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;repository name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;outputSources&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;branch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;master&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="c1"&gt;// the branch you deploy from&lt;/span&gt;
          &lt;span class="na"&gt;connectionArn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                  &lt;span class="c1"&gt;//Paste the generated `connectionArn` here &lt;/span&gt;

        &lt;span class="p"&gt;}),&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add Build stage to build our website, we will add a simple &lt;code&gt;./infra/lib/pipeline.yml&lt;/code&gt; file to run CodeBuild project
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;version: 0.2

phases:
  &lt;span class="nb"&gt;install&lt;/span&gt;:
    runtime-versions:
      nodejs: 12
    commands:
      - yarn &lt;span class="nb"&gt;install
  &lt;/span&gt;build:
    commands:
      - yarn build

artifacts:
  base-directory: ./build
  files:
    - &lt;span class="s1"&gt;'**/*'&lt;/span&gt;

cache:
  paths:
    - &lt;span class="s1"&gt;'./node_modules/**/*'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="c1"&gt;// AWS CodePipeline stage to build website and CDK resources&lt;/span&gt;
    &lt;span class="nx"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addStage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;stageName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="c1"&gt;// AWS CodePipeline action to run CodeBuild project&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CodePipelineAction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CodeBuildAction&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;actionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Website&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;project&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CodeBuild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PipelineProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BuildWebsite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;projectName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;MyWebsite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;buildSpec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;CodeBuild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;BuildSpec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromSourceFilename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./infra/lib/build.yml&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;}),&lt;/span&gt;
          &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;outputSources&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;outputWebsite&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;}),&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The last stage will be adding deployment stage, we want to deploy the react-app to S3 bucket, and every time we make a new changes it will be deployed the S3 bucket
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="c1"&gt;// Amazon S3 bucket to store website&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bucketWebsite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Files&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;websiteIndexDocument&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;index.html&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;websiteErrorDocument&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error.html&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;publicReadAccess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="c1"&gt;// AWS CodePipeline stage to deploy website and CDK resources&lt;/span&gt;
    &lt;span class="nx"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addStage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;stageName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Deploy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="c1"&gt;// AWS CodePipeline action to deploy website to S3&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CodePipelineAction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;S3DeployAction&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;actionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Website&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;outputWebsite&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;bucketWebsite&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}),&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/cdk/"&gt;AWS Cloud Development Kit&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.dasithsblog.com/blog/easily_deploying_cloud_infrastructure_via_CDK/"&gt;Easily deploying infrastructure as code via AWS CDK&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h1&gt;

&lt;p&gt;You can do almost the same thing using GitHub actions, you will need create a new connection check this &lt;a href="https://docs.aws.amazon.com/dtconsole/latest/userguide/connection&amp;lt;br&amp;gt;%0As-create-github.html"&gt;Create a connection to GitHub&lt;/a&gt;&lt;br&gt;
We can create deferent pipelines for deferent stages like Dev, QA, Prod &lt;br&gt;
The link to my Bitbucket repository is &lt;a href="https://bitbucket.org/mohammmedismaeel/aws-cdk-pipeline/src/master/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please let me know in the comments if this post was helpful and what I can do better next time!&lt;/p&gt;

&lt;p&gt;Please follow me on Twitter at &lt;a href="https://twitter.com/The_Al_Sanad"&gt;@The_Al_Sanad&lt;/a&gt; where I Will frequently write about serverless, devOps!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>react</category>
      <category>devops</category>
      <category>typescript</category>
    </item>
    <item>
      <title>4C - The Cool Community of Content Creators</title>
      <author>Francesco Ciulla</author>
      <pubDate>Tue, 12 Oct 2021 13:08:26 +0000</pubDate>
      <link>https://dev.to/francescoxx/4c-the-cool-community-of-content-creators-1oee</link>
      <guid>https://dev.to/francescoxx/4c-the-cool-community-of-content-creators-1oee</guid>
      <description>&lt;p&gt;What do the 4C community members think of the 4C community itself?&lt;br&gt;
Let's ask them.&lt;/p&gt;

&lt;p&gt;Join the community: &lt;a href="https://discord.com/invite/TcmA2kbJeA"&gt;https://discord.com/invite/TcmA2kbJeA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://discord.com/invite/TcmA2kbJeA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ysqRgoz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634041616139/LIxgbJOci.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vikkybliz"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/Vikkybliz"&gt;Vikkybliz&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;4C is a group for content creators. If you don’t know how to start or you have even started, 4C is a place to interact with other content creators, share tips and tricks, and just chart. The earlier you join the better &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ayush-agarwal"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/ayushdev_24"&gt;Ayush Agarwal&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you are into content creation and ever felt lonely and unmotivated, You must be a part of 4C. We help each other out , learn lots of new things. And the best part is that we connect weekly where we can share or discuss anything we want. Hope to see you in our community soon.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sophyia"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/sophiairoegbu_"&gt;Sophyia&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Hi Francesco, I'm Sophia Iroegbu. &lt;br&gt;
The community is beautiful and helpful. I have been more confident about tech and tech writing and the community and its members helped me achieve that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#merkim"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/KimMerdi"&gt;Merkim&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The 4C community has been an amazing place so far. Having that opportunity to get knowledge from other content creators has been helpful to me. With open-minded people inside the community, everyone gets additional knowledge from others. I would highly recommend this community!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#suraj-kumar-agarwal"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/AgarwalSurajk"&gt;Suraj Kumar Agarwal&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The 4C group helped me to reach excellent community members and to learn and explore how groups work together.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yash-prakash"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/csandyash"&gt;Yash Prakash&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Despite my short time in this community, I’m very impressed by the number of good resources and helpful people there are here. I’m very excited to learn from them as I grow as a developer. The exchange of ideas so far looks and feels very coordinated, and led by my favorite devs from Twitter and YouTube, so I find it very encouraging to learn and give back to the community as well.&lt;/p&gt;

&lt;p&gt;Thanks so much! 😁&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ramya-chinnadurai"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/code_rams"&gt;Ramya Chinnadurai&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;4C is a really cool community, and the members here are really friendly. I could see the tremendous support for the hacktoberfest challenge and interactive guidance to solve PRs. I love the &lt;code&gt;count-to-10k&lt;/code&gt; channel, it’s really cool and funny. I would add the number whenever I visit this channel and there are a lot more fantastic additional channels here to explore.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#siddharth-shyniben"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/SiddharthShyn"&gt;Siddharth Shyniben&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Even though I’ve only been here for a short time, I can already see the benefits of joining 4C; the viewership and genuine interactions have improved a lot on my blog.&lt;/p&gt;

&lt;p&gt;This is not the only benefit of joining 4C: There are a lot of other things to do. From useful stuff like collaborating, resources, finding work, hacktoberfest to just fun things like a counting channel and off-topic chat.&lt;/p&gt;

&lt;p&gt;If you feel the content you create doesn’t reach anyone, 4C can be a great way to motivate you and spread your content. And if you do reach others, 4C can still help you ;)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#avneesh-agarwal"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/avneesh0612"&gt;Avneesh Agarwal&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;4C is a great community for us content creators. We discuss ideas on what and how to create content. We also have a weekly call where we talk about the latest events like hacktoberfest! I have been loving the 4C community so far.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#meenakshi"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/SankarMeenakshi"&gt;Meenakshi &lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The 4C community is very supportive and a great platform for collaboration on various activities. It is an exciting space to see developers both new and established lift each other up. I am glad to be a part of this community. It adds great value to anyone who joins.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arjun"&gt;
  &lt;/a&gt;
  Arjun
&lt;/h3&gt;

&lt;p&gt;4C has been a great community for me. I have been meeting a lot of new developers, designers, content creators and like-minded people. I have also learned how to work with a team. The people here are super-patient and extremely talented. We discuss topics and events like Hacktoberfest and help each other with their problems. I’ve been loving it and if you join you’ll love it too.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#muthu-annamalai-venkatachalam"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/muthuannamalai_"&gt;Muthu Annamalai Venkatachalam&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;4C is everything anyone could ever wish for in a community. Wonderful, supportive, exciting, and a lot to like. The best thing that ever happened to me. All in all, it's a great opportunity to develop your skills, form connections with people in different fields of the community, and give back to the community. Slide into the server and get ready to ride a roller coaster of learning opportunities! I'll always be grateful to this community and will keep contributing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#savvas-stephanides"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/SavvasStephnds"&gt;Savvas Stephanides&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;As someone who loves sharing knowledge through blog posts and articles, the tips and inspiration I’ve found from the 4C community have been more than invaluable. I am so thankful this community exists!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#eddy-vinck"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/EddyVinckk"&gt;Eddy Vinck&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;I love what you're doing with the 4C community, Francesco! Keep it up!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kaarthik"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/MDvlpr"&gt;Kaarthik&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;A good community needs to be filled with people who really want to help and grow together. You can expect this from the 4C community. They're very supportive when it comes to helping people create content.&lt;/p&gt;

&lt;p&gt;I feel like 4C community motto: We water you, You water us, Let's grow together.&lt;br&gt;
I’ve been loving it and if you join you’ll love it too :) &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#haseeb-udeen"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/HaseebUdeen"&gt;Haseeb Udeen&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;4C is a great community of content creators. It keeps me motivated. Every new day when I look at the 4C community, it makes me do something extra to work for my self-branding other than the regular job. The job is fine but it’s not freedom; freedom is working for your own self, not for some giant company. And here at 4C, I get to work for myself and other contributors of the open-source world; and this leads to lasting happiness and cool life where you are not under anyone's pressure.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sunrit"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/JanaSunrise"&gt;Sunrit &lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;4C is not only a great community for content creators but everyone. Wonderful and incredible community, supportive people, and all the events are superb! Loving all the things that take place, and all the support and love between people, It’s truly amazing. An exciting place to learn, collaborate with people, get to know and connect with people, and a lot more. It’s something more than amazing. Keep up the great work, Proud to be a part of it!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#anish-de"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/AnishDe12020"&gt;Anish De&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;4C is a great community for anyone who creates content, be it blog posts or be it videos. It is a great place to learn a lot from a very friendly community and also grow from sharing quality content which someone else might find useful. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#palash"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/palashv2"&gt;Palash&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;4C Community is the best place for Cool Content Creators. Thanks to  Francesco for all the hard work and dedication to building this awesome community! Keep it up!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pratham"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/PrasoonPratham"&gt;Pratham&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;I love the effort and care put into making the 4c community, can’t wait to see where this goes next!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wale-adetona"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/waleadetonahq"&gt;Wale Adetona&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The 4C Community is a place to be for anyone looking to connect with the best and like-minds in the tech industry. You won't regret joining, mark my words. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vasanth-srivatsa"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/vsnthdev"&gt;Vasanth Srivatsa&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The 4C Community is really diverse &amp;amp; inclusive. The opportunities are really great, you just need to get involved.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sumudu-siriwardana"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/sumusiriwardana"&gt;Sumudu Siriwardana&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;4C is the best community for content creators! I’ve been here for a short time, but I can see the effort and contribution that everyone put in for this community. It’s a great place to learn, collaborate, and share your knowledge with other creators like you. And also we have so much fun here as well. I managed to get into a group call with everyone once and it was fun and productive at the same time. I would love to appreciate Francesco’s effort on building up this community! And if you are looking for a supportive community, this is the place for you, come and join us! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prathamesh-shanbhag"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/Prathamesh_117"&gt;Prathamesh Shanbhag&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Content Creation is hard, especially doing it by yourself &amp;amp; so the community 4C has been such a huge relief &amp;amp; help because now I have people who relate to my situation plus they help me out &amp;amp; I help them out in situations when we need help. Kudos to Francesco for creating such an amazing &amp;amp; collaborative community for content creators!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vivian-plasencia"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/ViviPlasenciaC"&gt;Vivian Plasencia&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;I'm glad to be a part of the 4C community. It's very supportive and welcoming.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://discord.com/invite/TcmA2kbJeA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ysqRgoz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634041616139/LIxgbJOci.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Join the community: &lt;a href="https://discord.com/invite/TcmA2kbJeA"&gt;https://discord.com/invite/TcmA2kbJeA&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>codenewbie</category>
      <category>productivity</category>
      <category>beginners</category>
    </item>
    <item>
      <title>APIs 101 Using Postman </title>
      <author>Maniprakash123-creator</author>
      <pubDate>Tue, 12 Oct 2021 13:00:48 +0000</pubDate>
      <link>https://dev.to/maniprakash123creator/apis-101-using-postman-4ek7</link>
      <guid>https://dev.to/maniprakash123creator/apis-101-using-postman-4ek7</guid>
      <description>&lt;p&gt;7 th of October 2021 I have attended "APIs 101 Using Postman" workshop organised by the Postman Student Experts &lt;a class="mentioned-user" href="https://dev.to/zeoshark"&gt;@zeoshark&lt;/a&gt;
 and Swastik Mishra from ITER SOA virtually on YouTube live. It was a great experience overall and I learn about Postman APIs. Workshop covered basic request methods that are GET, POST ,PUT and DELETE along with data retrieval in JSON format. All these methods were explained in fun manner with examples in which ever member can create their IDs and posts their fun jokes individually.&lt;br&gt;
Overall it was an overwhelming experience to attend this learning along with fun. Kudos to the Postman Student Experts &lt;a class="mentioned-user" href="https://dev.to/zeoshark"&gt;@zeoshark&lt;/a&gt;
 and Swastik Mishra.&lt;br&gt;
Thank you  for the opportunity &lt;a class="mentioned-user" href="https://dev.to/zeoshark"&gt;@zeoshark&lt;/a&gt;
 and @Swastik Mishra .....&lt;br&gt;
Waiting for swags eagerly 😍🤩&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Automatically organize imports</title>
      <author>Tony Hicks</author>
      <pubDate>Tue, 12 Oct 2021 13:00:40 +0000</pubDate>
      <link>https://dev.to/tonyhicks20/automatically-organize-imports-dmj</link>
      <guid>https://dev.to/tonyhicks20/automatically-organize-imports-dmj</guid>
      <description>&lt;p&gt;While refactoring your javascript/typescript code it's easy to remove things but forget to get rid of the unused imports.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hHymgPer--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfb04yf67dur21b7gotn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hHymgPer--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfb04yf67dur21b7gotn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In VSCode, you can easily remove these with the shortcut : Shift + Alt + O. &lt;br&gt;
This is sometimes easy to forget to do though, and wouldn't it be better if there was some way to do this automatically every time you save? &lt;/p&gt;

&lt;p&gt;In VSCode, go to File -&amp;gt; Preferences -&amp;gt; Settings and click on the icon in the top right hand corner to open up the settings in JSON.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--icIjwqpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9eab8h2071qde0goq7z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--icIjwqpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9eab8h2071qde0goq7z.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add the following json:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"editor.codeActionsOnSave": {
    "source.organizeImports": true
},
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So that it looks something like the following: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NhBbTEzo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ojdjwjz7fs2svtz6nnkp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NhBbTEzo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ojdjwjz7fs2svtz6nnkp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Et voilà! &lt;br&gt;
Your imports will now be organized every time you save a file. &lt;br&gt;
Enjoy :-)&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>tip</category>
    </item>
    <item>
      <title>The Importance of Representation</title>
      <author>Josefine Schfr</author>
      <pubDate>Tue, 12 Oct 2021 12:59:38 +0000</pubDate>
      <link>https://dev.to/s2engineers/the-importance-of-representation-1i22</link>
      <guid>https://dev.to/s2engineers/the-importance-of-representation-1i22</guid>
      <description>&lt;p&gt;Today, on &lt;strong&gt;Ada Lovelace Day&lt;/strong&gt;, we are celebrating women in STEM - and while we have come a  &lt;del&gt;far&lt;/del&gt; well ... a way since Ada wrote the first ever computer program in 1843, there is still a lot to do.  &lt;/p&gt;

&lt;p&gt;Lately, I have been reminded of the importance of representation quite a lot. We keep discussing why less women sign up to study computer science, why we have fewer applicants from non-male developers and why it’s apparently “so difficult to diversify staff” (imagine me rolling my eyes here). &lt;strong&gt;Yet we fail to accommodate the few folks that were brave enough to join this industry.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;I’m tired of explaining why we need equal pay, equal recognition, equal opportunities &amp;amp; challenges - and I can only imagine how those who have been part of this battle much, much longer are feeling. Or why are not willing to continue the fight. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I love the support among women and other underrepresented groups in the tech community.&lt;/strong&gt; It’s one of the reasons I got in and am still here. But it can’t be all we got - we need representation. We need people who look and think like us at the top. In the middle. In all the damn places. And &lt;strong&gt;we need allies.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Take today as a reminder to value all the great women in tech - to celebrate Ada Lovelace and all that came after her and are yet to come. &lt;strong&gt;Make sure they know.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GdAcDrT---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/http://1.bp.blogspot.com/-dtZsgEkZLIs/VAGRofvh-mI/AAAAAAAALCI/owNqmsalzXE/s1600/Amazing-Women-of-History_AdaLovelaceGIF8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GdAcDrT---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/http://1.bp.blogspot.com/-dtZsgEkZLIs/VAGRofvh-mI/AAAAAAAALCI/owNqmsalzXE/s1600/Amazing-Women-of-History_AdaLovelaceGIF8.gif" alt="Ada Lovelace Gif"&gt;&lt;/a&gt;&lt;br&gt;
Artwork by the &lt;a href="http://amazingwomenofhistory.blogspot.com/2014/08/ada-lovelace-free-artwork-links.html"&gt;Amazing Women of History&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are not sure how, here is a &lt;a href="https://rapidapi.com/blog/seven-ways-to-celebrate-ada-lovelace-day/"&gt;list of seven ways to celebrate Ada Lovelace Day&lt;/a&gt;, &lt;strong&gt;including a list of videos to binge, tips on where you can donate to support women in STEM and a little guidance on how to diversify / audit your Twitter feed.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What great achievements by women in this industry are you celebrating today? Happy Ada Lovelace Day, let’s make it count!💜&lt;/p&gt;

</description>
      <category>womenintech</category>
      <category>adalovelace</category>
      <category>codeiscolorful</category>
    </item>
    <item>
      <title>Avoiding the Reason 92% of SaaS Companies Fail</title>
      <author>Jeffrey Fate</author>
      <pubDate>Tue, 12 Oct 2021 12:50:57 +0000</pubDate>
      <link>https://dev.to/jeffreyfate/avoiding-the-reason-92-of-saas-companies-fail-5el</link>
      <guid>https://dev.to/jeffreyfate/avoiding-the-reason-92-of-saas-companies-fail-5el</guid>
      <description>&lt;p&gt;&lt;em&gt;The questions I'm answering as the first step in building a SaaS in 2021.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The employee to business owner transition is awkward and uncomfortable. Worse is making that transition and failing due to the primary downfall of SaaS companies: lack of product market fit.&lt;/p&gt;

&lt;p&gt;Obvious problem? Yes. Obvious solution? Not really.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#questions-im-asking-to-find-product-market-fit"&gt;
  &lt;/a&gt;
  Questions I'm asking to find product market fit
&lt;/h2&gt;

&lt;p&gt;Creating software as an employee is the ONLY part, but now that is just the easy part. The hard part is answering these questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Who am I helping?&lt;/li&gt;
&lt;li&gt;What do they need?&lt;/li&gt;
&lt;li&gt;What are they willing to pay for?&lt;/li&gt;
&lt;li&gt;Is there competition?&lt;/li&gt;
&lt;li&gt;How can I attract people?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#who-am-i-helping"&gt;
  &lt;/a&gt;
  Who am I helping?
&lt;/h2&gt;

&lt;p&gt;I've struggled with this for a long time now. My first try at business was in the summer of 2020. I found my first 3 clients in a couple of weeks because I hustled. I helped each of them toward a goal. I was a health coach and the business didn't fit my personality. Building a customized, healthy lifestyle is incredibly important, but I really love working with other developers.&lt;/p&gt;

&lt;p&gt;Developers have lots to do with limited time. Work. Learning. A personal life. Parenthood. I must be able to help devs who are burned out, looking for the next level, or trying to get better at life.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-they-need"&gt;
  &lt;/a&gt;
  What do they need?
&lt;/h2&gt;

&lt;p&gt;Ok, this one is harder. Actually, this is probably the hardest question (combined with the next one). I think I know what developers need because I am one.&lt;/p&gt;

&lt;p&gt;Shortcuts.&lt;/p&gt;

&lt;p&gt;All developers need shortcuts of one type or another. Really, this is developer experience. Maybe not the way some people think about it, but that's what it is. What shortcuts do they need most? That leads us to...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-they-willing-to-pay-for"&gt;
  &lt;/a&gt;
  What are they willing to pay for?
&lt;/h2&gt;

&lt;p&gt;TODO.&lt;/p&gt;

&lt;p&gt;Seriously, I don't know what most developers will pay for. The only thing I have to go with is a shortcut to get the correct time zone. This came from a recent episode of The Art of Product, straight from Derrick Reimer's mouth:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pca.st/l5bhzmz4#t=32m41s"&gt;187: Wait, There Are How Many Time Zones?! - The Art of Product&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm not taking this idea too seriously. I think of it as a small bet, an experiment, and a way to get my feet wet building a SaaS business. Will someone pay for a quicker, easier, better way to find the correct time zone? I'll build the MVP and find out.&lt;/p&gt;

&lt;p&gt;All the content I've consumed on the topic says I should validate the idea better. But, I'm biasing toward action and speed over accuracy on this one. Maybe I'll find that was the wrong path and correct for it next time. Experiment and learn.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-there-competition"&gt;
  &lt;/a&gt;
  Is there competition?
&lt;/h2&gt;

&lt;p&gt;Yes.&lt;/p&gt;

&lt;p&gt;There's &lt;a href="https://dev.timeanddate.com/time/pricing"&gt;timeanddate.com&lt;/a&gt; and &lt;a href="http://worldtimeapi.org/"&gt;worldtimeapi.org&lt;/a&gt; and of course &lt;a href="https://developers.google.com/maps/documentation/timezone/overview"&gt;Google&lt;/a&gt;. People must need this problem solved. The key is finding a way to be different enough and add some value that none of the other services have.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-i-attract-people"&gt;
  &lt;/a&gt;
  How can I attract people?
&lt;/h2&gt;

&lt;p&gt;I have a few ideas about this. Demonstrating the utter rediculousness of time zones is one path. For example, the way time zones are always changing and how it makes development harder. Take this example:&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KzFs2I5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FAv7UPuVEAA87S9.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--sS_bPZiK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1369555721033904131/SkcVjCe3_normal.jpg" alt="Maz Jovanovich profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Maz Jovanovich
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @maz_jovanovich
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      PSA: As of today, Australia has 5 time zones once again. Apologies in advance to our overseas friends trying to make sense of this temporal anarchy. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      04:47 AM - 03 Oct 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1444524436548296705" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1444524436548296705" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1444524436548296705" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
Do developers really want to take an extra day or two to add logic for the correct time in Brisbane on January 15th, and also Melbourne, and every other location in all of Australia? Every location in all of the world?

&lt;p&gt;Probably not.&lt;/p&gt;

&lt;p&gt;If I can make this explanation funny and entertaining as well as persuasive, I think it will make many people realize how crazy it is to reinvent the time zone wheel. Why not pay for a shortcut?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-next"&gt;
  &lt;/a&gt;
  What next?
&lt;/h2&gt;

&lt;p&gt;Find some developers to interview. I really need to get some answers to what developers will pay for. The best way to do this is one-on-one interviews. Perhaps nobody wants a time zone solution. Maybe there is a different common problem that I can help solve. Time to get to work.&lt;/p&gt;

&lt;p&gt;What did I miss? I'm new at this, so please leave comments to plug holes in my strategy. Feedback always appreciated!&lt;/p&gt;

</description>
      <category>saas</category>
      <category>startup</category>
    </item>
    <item>
      <title>The Thing Is: On Awesomeness and Motivation</title>
      <author>Bernd Wechner</author>
      <pubDate>Tue, 12 Oct 2021 12:37:18 +0000</pubDate>
      <link>https://dev.to/thumbone/the-thing-is-on-awesomeness-and-motivation-2i0j</link>
      <guid>https://dev.to/thumbone/the-thing-is-on-awesomeness-and-motivation-2i0j</guid>
      <description>&lt;p&gt;Have you ever gone &lt;a href="https://www.dictionary.com/e/slang/rabbit-hole/"&gt;down a rabbit hole&lt;/a&gt; of research and development trying to solve one small little, seemingly insignificant problem, that just &lt;a href="https://www.phrases.org.uk/meanings/get-your-goat.html"&gt;gets your goat &lt;/a&gt;? And while chasing it down this rabbit hole you, you look furtively over your shoulder wondering if anyone is noticing, because if they do, you know they will question you priorities if not your sanity? And yet, it rewards you immensely with learning and adventure which is like  a trail of breadcrumbs that drew you down that hole, to the end ...?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s1W33a8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mjtivqdw2dzqvuxmdhg3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s1W33a8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mjtivqdw2dzqvuxmdhg3.jpg" alt="Down the Rabbit Hole"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well I certainly did last month, and it took me on a journey of learning and development way out of proportion to the magnitude of the problem I set out out solve. And of course as I noted on &lt;a href="https://dev.to/allthecode"&gt;Simon Barker&lt;/a&gt;'s recent post &lt;a href="https://dev.to/allthecode/i-bet-you-don-t-keep-a-developer-journal-3-reasons-you-should-4kn3"&gt;&lt;em&gt;I Bet You Don't Keep A Developer Journal: 3 Reasons You Should&lt;/em&gt;&lt;/a&gt; I keep a journal of what I've learned mostly using the awesome note-keeping tool &lt;a href="https://joplinapp.org/"&gt;Joplin&lt;/a&gt; and this one blew out to over 10,000 words and touched on a good many Javascript themes. So I thought it worth sharing - why keep those 10,000 words to myself 😊.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KX1YJTL_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtx05bw4i83jbf0gqte8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KX1YJTL_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtx05bw4i83jbf0gqte8.png" alt="Joplin Notetaking App"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#on-awesomeness"&gt;
  &lt;/a&gt;
  On Awesomeness
&lt;/h2&gt;

&lt;p&gt;The experience reminded me of &lt;a href="https://dev.to/jenicarvalho"&gt;Jeniffer Carvalho&lt;/a&gt;'s recent post &lt;a href="https://dev.to/jenicarvalho/am-i-a-good-dev-ai8"&gt;&lt;em&gt;Am I a good dev?&lt;/em&gt;&lt;/a&gt; in which she discusses awesomeness from a distinctly bleak anxiety-coloured perspective. Her premise there was apparently that &lt;em&gt;awesome&lt;/em&gt; is measured somehow (just) by skills, experience, talent, creativity, achievements etc. etc. all the things that someone else, perforce (unless we are at the top of a particular heap) does better. From which she concludes that we are (probably) not awesome, and that is OK. &lt;/p&gt;

&lt;p&gt;My &lt;a href="https://dev.to/thumbone/comment/1h7k5"&gt;response to that&lt;/a&gt; was essentially that awesomeness can of course be measured that way but also by another ... one that I find far more useful not least when I am recruiting or conversely pitching myself in an interview. And from it I conclude much rather that it is not OK to settle for less than awesome, but that awesome is within our reach, mine, hers, and yours. That  is of course contingent upon what we consider awesome.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aPKB9Hbr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ua0chrjs57yaakf5l286.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aPKB9Hbr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ua0chrjs57yaakf5l286.jpg" alt="Everything is Awesome"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And &lt;em&gt;awesome&lt;/em&gt; to me has never been (just, or even necessarily) over-achieving productivity, performance and skill. Much rather, awesome, to me, and I suggest more usefully to you and anyone else, is related to self awareness and a desire to grow. Awesome is not someone who knows lots and lots, but who knows what they know and what the don't; someone who is self aware, and not hubris laden and arrogant, but radiantly comfortable with their current skill set and not overselling it or underselling it, not afraid of its paucity and not smug in its abundance. Awesome is someone who exhibits a desire to grow, to learn, curiosity and drive to gather skills, who is self driven, is motivated to and knows how, to learn what they need to learn. Not least in an age where learning has never been more accessible and within reach nor more consistently required as the world around us changes more rapidly than ever before.&lt;/p&gt;

&lt;p&gt;Which touches on the theme of motivation and drive. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#on-motivation"&gt;
  &lt;/a&gt;
  On Motivation
&lt;/h2&gt;

&lt;p&gt;To me, "awesome" relates to a driven motivation to learn, to grow and to perform, and to do good, to contribute and to add, however little to the welfare of others and the betterment of ones community, and society.&lt;/p&gt;

&lt;p&gt;Which takes us back to that rabbit hole I described and that furtive, guilty glance over the shoulder, the desire for some quiet time, alone time away from the judging eyes of reason, and prudence for example. They eyes that a boss, a project manager, or a business manager cast upon us. That will argue, you are way over-investing in this little problem, let it rest, we don't need that fixed, we have much &lt;a href="https://idioms.thefreedictionary.com/bigger+fish+to+fry"&gt;bigger fish to fry&lt;/a&gt;, &lt;a href="https://upload.wikimedia.org/wikipedia/commons/4/48/Drop_that_bone_and_get_the_ham_You_are_just_working_dogs.png"&gt;drop that bone&lt;/a&gt;!.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TIsuCk----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/trxtj9acc5dqz330cuva.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TIsuCk----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/trxtj9acc5dqz330cuva.jpg" alt="Dog with bone"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The bait of self development, of learning more for future projects, is strong and if no-one's there to chide us, the hours disappear and after too many days, a small little problem is fixed - but so much was learned on the way.&lt;/p&gt;

&lt;p&gt;I had just such a problem this month. It was to do with a  copy button on a website that copies an HTML element to the clipboard, which wasn't working perfectly and then a small change to CSS triggered a break and I wanted it fixed. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v1iOlCaO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lorkpjkzayl46rudvtoq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v1iOlCaO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lorkpjkzayl46rudvtoq.jpg" alt="Copy to Clipboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The fix touched on many themes, not least this one (of motivation and a desire to do good, to be awesome and sheepish concern that my time was actually much better used on more important problems) but also at least these:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How to copy an HTML element to the clipboard&lt;/li&gt;
&lt;li&gt;How to package styles with that copy&lt;/li&gt;
&lt;li&gt;How to inline styles client side&lt;/li&gt;
&lt;li&gt;Scheduling expensive operations&lt;/li&gt;
&lt;li&gt;Maintaining a responsive web page during expensive operations&lt;/li&gt;
&lt;li&gt;Monitoring expensive operations&lt;/li&gt;
&lt;li&gt;Cancelling expensive operations&lt;/li&gt;
&lt;li&gt;Restarting expensive operations&lt;/li&gt;
&lt;li&gt;Triggering expensive operations&lt;/li&gt;
&lt;li&gt;Inspecting the system clipboard&lt;/li&gt;
&lt;li&gt;Encapsulating code in a class&lt;/li&gt;
&lt;li&gt;Losing &lt;code&gt;this&lt;/code&gt; and finding it again&lt;/li&gt;
&lt;li&gt;Asynchronous JavaScript and Promises&lt;/li&gt;
&lt;li&gt;The JavaScript event loop, micro and macro!&lt;/li&gt;
&lt;li&gt;Diagnosing strange failures&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#on-the-power-of-story"&gt;
  &lt;/a&gt;
  On the power of story
&lt;/h2&gt;

&lt;p&gt;Precisely because such a small little job, took me on a tour of so many themes, and offers so much learning scope, I can't help but feel that this small problem provides an excellent entry theme for a series that walks through these learnings ... a tutorial if you will, not on a given tool or technology, but on a group of related tools and technologies and over-archingly the process of self driven learning to solve a small problem.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LhsUAF36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r41tuwmrchbmsen4yoqz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LhsUAF36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r41tuwmrchbmsen4yoqz.png" alt="How storytelling affects the brain"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That is reinforced by my passion for story. For most of our evolution as a species the primary mode of teaching and learning was through story, and it remains a very powerful feature of our lives. In fact &lt;a href="https://bigthink.com/experts-corner/decisions-are-emotional-not-logical-the-neuroscience-behind-decision-making"&gt;modern research&lt;/a&gt; is clear that we are not as rational as we like to think, that most of our decisions, and for that matter retention of information is tied to our emotional nature, with post-hoc rationalisation lending a comforting illusion of reasonableness. We rationalise, as it happens, mostly to justify our positions rather than to derive them. &lt;/p&gt;

&lt;p&gt;To wit, I will tell a story ... from my abundant notes. Paraphrased, I will transcribe, piece by piece in a series to follow.&lt;/p&gt;

&lt;p&gt;The result is a JavaScript class &lt;code&gt;Copy_With_Style&lt;/code&gt; with under 1000 lines, that can manage a copy button that copies any HTML element of your choosing to the clipboard, in a way that can be pasted into any other application (and retain its styles truly and completely if desired, or statically in a form that can be emailed).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Copy_With_Style&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Lots of goodness herein&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will be introduced in this series (and duly on Github). I hope I can get one chapter every week at least if not more. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Footnote:&lt;/strong&gt; Of course we can and do reason. And we can find solutions to problems and create wonderful things through reasoning as well. But our reasoning is best supported by structure, records, and feedback - to wrest control from our emotions. And this story is one precisely of the blend, of an emotional drive to fix this niggling little problem and learn what I can, against a structured approach to discover, learning and testing.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UxxSmJvi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuu97a7nn48jscvk84tk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UxxSmJvi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuu97a7nn48jscvk84tk.gif" alt="I learned a lot"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>motivation</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Free React Admin Dashboard with Recharts Template</title>
      <author>Kishan Sheth</author>
      <pubDate>Tue, 12 Oct 2021 12:33:23 +0000</pubDate>
      <link>https://dev.to/koolkishan/free-react-admin-dashboard-with-recharts-template-87k</link>
      <guid>https://dev.to/koolkishan/free-react-admin-dashboard-with-recharts-template-87k</guid>
      <description>&lt;h2&gt;
  &lt;a href="#you-can-get-the-template-from-the-link-proivided-in-the-description-of-the-video"&gt;
  &lt;/a&gt;
  You can get the template from the link proivided in the description of the video.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#technologies-used-"&gt;
  &lt;/a&gt;
  Technologies Used :-
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;REACT&lt;/li&gt;
&lt;li&gt;SASS&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#libraries-and-assets-used-"&gt;
  &lt;/a&gt;
  Libraries and Assets Used :-
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Node Sass&lt;/li&gt;
&lt;li&gt;React Icons&lt;/li&gt;
&lt;li&gt;Recharts&lt;/li&gt;
&lt;li&gt;Google Fonts&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#to-learn-how-to-create-this-template-watch-the-complete-video-you-can-get-the-template-for-free-from-the-link-provided-in-the-description-of-the-video"&gt;
  &lt;/a&gt;
  To learn how to create this template watch the complete video. You can get the template for free from the link provided in the description of the video.
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/S3PpDpEeer8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#please-do-like-the-video-and-subscribe-to-the-channel-it-helps-and-motivates-me-to-create-more-content-like-this"&gt;
  &lt;/a&gt;
  Please do like the video and subscribe to the channel. It helps and motivates me to create more content like this.
&lt;/h2&gt;

</description>
      <category>html</category>
      <category>react</category>
      <category>css</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
