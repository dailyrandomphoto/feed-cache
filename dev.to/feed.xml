<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Tornado : ASYNC Framework for Python</title>
      <author>Bek Brace</author>
      <pubDate>Tue, 27 Jul 2021 12:30:32 +0000</pubDate>
      <link>https://dev.to/bekbrace/tornado-async-framework-for-python-2c5g</link>
      <guid>https://dev.to/bekbrace/tornado-async-framework-for-python-2c5g</guid>
      <description>&lt;p&gt;Tornado is a Python open source framework, but also an asynchronous networking library, and it was originally developed for a company called FriendFeed, which was acquired by Facebook recently in 2009. To understand Tornado we need to know what is it good for.&lt;/p&gt;

&lt;p&gt;Make sure to check out my last video on tornado Framework &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-gJ21qzpieA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Tornado is ideal for building apps asking for high performance and several thousand concurrent users; it can handle 10K connections at once, in addition to that it's non-blocking network IO. Asynchronous programming was introduced to python since python 3.5 when the asyncio library was introduced.&lt;/p&gt;

&lt;p&gt;Before anything, you need to know that Asynchronous programming, more specifically async syntax makes you code faster to execute.&lt;/p&gt;

&lt;p&gt;Async is a way of Concurrent ProgrammingAsync is one way of doing concurrent programming, which means doing many things at once or achieving multiple tasks at once.&lt;/p&gt;

&lt;p&gt;How does Python achieve multiple tasks at once ?&lt;/p&gt;

&lt;p&gt;1 OS makes multi-sharing and multi-tasking happen: One way is to run multiple terminal instances and run your server, and all of them will work concurrently in the same time; and your operating system takes care of sharing your CPU resources among those terminal instances.&lt;/p&gt;

&lt;p&gt;2 Another way of achieving multiple tasks at once is by using threads. A thread is a line of execution for several instructions which means that they all share access to common resources, and here the operating system intervens to share your CPU with these threads&lt;/p&gt;

&lt;p&gt;3 The last way is asynchronous programming which what Tornado does, even though the opperating system will not have any role here, yet we'll be able to achieve multiple things at once with asynchronous programming&lt;/p&gt;

&lt;p&gt;Drop your comment or contact me on: &lt;a href="mailto:info@bekbrace.com"&gt;info@bekbrace.com&lt;/a&gt;&lt;br&gt;
Github page: &lt;a href="https://github.com/BekBrace%E2%80%8B"&gt;https://github.com/BekBrace​&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading and watching &lt;br&gt;
Until next time - Peace out, &lt;br&gt;
Bek&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>devops</category>
    </item>
    <item>
      <title>Luos new feature: manage Pipe type and command.</title>
      <author>Emanuel Allely</author>
      <pubDate>Tue, 27 Jul 2021 12:22:39 +0000</pubDate>
      <link>https://dev.to/emanuel_allely/luos-new-feature-manage-pipe-type-and-command-15cg</link>
      <guid>https://dev.to/emanuel_allely/luos-new-feature-manage-pipe-type-and-command-15cg</guid>
      <description>&lt;h3&gt;
  &lt;a href="#new-feature-in-the-130-manage-pipe-type-and-command"&gt;
  &lt;/a&gt;
  🆕 New feature in the 1.3.0: Manage Pipe type and command
&lt;/h3&gt;

&lt;p&gt;The Gate in a &lt;a href="https://www.luos.io"&gt;Luos&lt;/a&gt; environment is something tremendously important and used to check or control a Luos &lt;strong&gt;network&lt;/strong&gt;, and (teaser...) it will be even more important for the next revision! 😉&lt;/p&gt;

&lt;p&gt;Basically, its task is to share the entire machine capabilities to the outer world by translating Luos things into a standard format easy to use with standard software languages such as &lt;strong&gt;Python&lt;/strong&gt;, &lt;strong&gt;Javascript&lt;/strong&gt;, &lt;strong&gt;Ruby&lt;/strong&gt;, &lt;strong&gt;C++&lt;/strong&gt;, etc.&lt;/p&gt;

&lt;p&gt;On the previous version of the Gate example, you needed to modify the code to adapt it to your project's specificities, and it was an arduous task. Then we decided to make it simple and portable for you.&lt;/p&gt;

&lt;p&gt;We split it into 2 parts, the main Gate App and a Driver: &lt;/p&gt;

&lt;p&gt;Now the Gate is an App. Meaning it doesn't have any code related to hardware. It's a basic ANSI C that you can compile directly for any &lt;strong&gt;MCU&lt;/strong&gt; or &lt;strong&gt;CPU&lt;/strong&gt; without any additional configuration! This way, you can easily add it to your setup.&lt;/p&gt;

&lt;p&gt;We also added a build option allowing you to select the output format managed by the Gate or create your own easily. For now, we have 2 &lt;strong&gt;JSON&lt;/strong&gt; options, the one we use on the previous version (cJSON), and a new one (TinyJSON) that doesn't make any dynamic allocation.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Pipe&lt;/strong&gt; is the &lt;strong&gt;driver&lt;/strong&gt; part: This Driver allows sending or receiving data from the outer world and converting those data to the Luos side. A Pipe can be &lt;strong&gt;USB&lt;/strong&gt;, &lt;strong&gt;serial&lt;/strong&gt;, &lt;strong&gt;Wifi&lt;/strong&gt;, &lt;strong&gt;Bluetooth&lt;/strong&gt;, an &lt;strong&gt;SD card&lt;/strong&gt;, or anything allowing to send and receive information to/from another machine.&lt;/p&gt;

&lt;p&gt;This new type of driver can be used for different purposes, and the Gate App needs it to exchange information and share its output format.&lt;/p&gt;

&lt;p&gt;As a Gate user, you will only have to adapt this Pipe driver to your needs. The Gate will deal with it.&lt;/p&gt;

&lt;p&gt;More details about this can be found in the &lt;a href="https://docs.luos.io/pages/embedded/tools/gate.html"&gt;Gate&lt;/a&gt; section of our documentation.&lt;/p&gt;

</description>
      <category>embedded</category>
      <category>opensource</category>
      <category>release</category>
      <category>luos</category>
    </item>
    <item>
      <title>It’s hard to get job offers at tech companies right out of school. What's going on?</title>
      <author>Walt Schlender</author>
      <pubDate>Tue, 27 Jul 2021 12:19:13 +0000</pubDate>
      <link>https://dev.to/schlende/it-s-hard-to-get-job-offers-at-tech-companies-right-out-of-school-what-s-going-on-23jf</link>
      <guid>https://dev.to/schlende/it-s-hard-to-get-job-offers-at-tech-companies-right-out-of-school-what-s-going-on-23jf</guid>
      <description>&lt;p&gt;I used to work in engineering and data science at a tech recruiting company. &lt;/p&gt;

&lt;p&gt;We had a hard time placing new grads. &lt;/p&gt;

&lt;p&gt;In this article I want to describe what tech hiring is like. If you’re just starting your career I hope this article can help you come up with a strategy to stand out from the competition and get the job you want.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--If367ZhS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvmjyl0esi3kp7kghzln.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--If367ZhS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvmjyl0esi3kp7kghzln.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-hard-for-new-grads-to-get-their-first-job"&gt;
  &lt;/a&gt;
  It's hard for new grads to get their first job
&lt;/h2&gt;

&lt;p&gt;According to data I've seen, candidates who get a lot of job offers have a mix of &lt;strong&gt;experience&lt;/strong&gt; (preferably from a famous company or school), &lt;strong&gt;the right skillset&lt;/strong&gt; and &lt;strong&gt;the right salary expectations&lt;/strong&gt;. In that order.&lt;/p&gt;

&lt;p&gt;Experience is particularly important. &lt;/p&gt;

&lt;p&gt;The data I've seen suggests that there's a 3 year career-start dead zone -- you may be an amazing engineer but during those first years you'll have to knock on a lot of doors to get your interviews.&lt;/p&gt;

&lt;p&gt;In an industry "short on talent" where companies happily pay head-hunting firms $20,000 for introductions, why do new engineers struggle to even set up brief meetings?&lt;/p&gt;

&lt;p&gt;A lot of new engineers are talented, passionate and filled with potential. They're less expensive and fairly abundant.&lt;/p&gt;

&lt;p&gt;You'd think companies would be taking advantage of this talent pool but many of them aren't.&lt;/p&gt;

&lt;p&gt;What's going on?&lt;/p&gt;

&lt;p&gt;I believe that companies are being careful. Making ANY hire is expensive. A bad hire can be catastrophic. &lt;/p&gt;

&lt;p&gt;Let me describe what the interview process is like from the employer side.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-interviewing-work-inside-companies"&gt;
  &lt;/a&gt;
  How does interviewing work inside companies?
&lt;/h3&gt;

&lt;p&gt;In most companies finding candidates is the job of the HR / recruiting department or external recruiters.&lt;/p&gt;

&lt;p&gt;Companies have limited resources so out of the 12 applications they get for a position they'll only likely screen a couple.&lt;/p&gt;

&lt;p&gt;A basic code screen requires ~2 hours from an engineer whose salary after taxes and benefits runs about $100 / hr. Time spent interviewing is time NOT spent coding. When you factor in time for context switching and getting lunch an interview takes about half of an engineers' day.&lt;/p&gt;

&lt;p&gt;Recruiters usually don't have engineering backgrounds themselves but they're the ones who take the first look at your resume. They tend to work by keying in on keywords. &lt;/p&gt;

&lt;p&gt;Because of this a resume focused on 'Rust', or 'Clojure' skills will get weeded out. While an engineer looking at this resume would see "rockstar coder with an interest in functional languages", a recruiter only sees "not a node engineer".&lt;/p&gt;

&lt;p&gt;A company usually spends one to two full days interviewing a candidate.&lt;/p&gt;

&lt;p&gt;The process is elaborate because the stakes are high. While rejecting a candidate is painful, hiring the wrong candidate is disastrous.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BRU165Cw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mngwf22thxo8o0tx8ym1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BRU165Cw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mngwf22thxo8o0tx8ym1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hiring-the-wrong-person-is-really-bad"&gt;
  &lt;/a&gt;
  Hiring the wrong person is really bad
&lt;/h2&gt;

&lt;p&gt;The hiring process itself is expensive but the real costs come after the hire.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#closing-costs"&gt;
  &lt;/a&gt;
  Closing costs
&lt;/h3&gt;

&lt;p&gt;The company spends a pile of money before the new hire even walks in the door.&lt;/p&gt;

&lt;p&gt;If a recruiting firm sourced the candidate the company has to pay a finders fee - typically ~20000$ (15% - 20% of a first years’ salary). &lt;/p&gt;

&lt;p&gt;Then there are all the costs associated with hiring. Payroll, IT, etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rampup"&gt;
  &lt;/a&gt;
  Ramp-up
&lt;/h3&gt;

&lt;p&gt;Like most jobs, it takes a while for a new employee to become valuable. With engineers I've it takes about 3 months.&lt;/p&gt;

&lt;p&gt;During this time the engineer needs a lot of hand holding.&lt;/p&gt;

&lt;p&gt;An experienced engineer will need help with the quirks of a company's system, but a new engineer will need help with system setup and basics.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-quality"&gt;
  &lt;/a&gt;
  Code quality
&lt;/h3&gt;

&lt;p&gt;A newer engineer also requires more babysitting.&lt;/p&gt;

&lt;p&gt;They may not have mastered architectural patterns. They may not have experience with testing and code reviews.&lt;/p&gt;

&lt;p&gt;The company is exposing itself to a lot of risk if code ships with bugs or the codebase gets crufty.&lt;/p&gt;

&lt;p&gt;Older engineers write bad code too but if they worked for Apple the odds are that they have fewer holes in their coding skills -- or at least that's how the thinking goes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nobody-likes-firing-people-so-hiring-mistakes-dont-get-fixed"&gt;
  &lt;/a&gt;
  Nobody likes firing people + so hiring mistakes don't get fixed
&lt;/h3&gt;

&lt;p&gt;It's easy to hire someone it's really really hard to fire them.&lt;/p&gt;

&lt;p&gt;There have been a few times in my career where I worked with someone who obviously should have gotten fired. &lt;/p&gt;

&lt;p&gt;One person was showing up to work drunk and trying to write code. Another really took advantage of the 'unlimited vacation' policy by basically never showing up to work.&lt;/p&gt;

&lt;p&gt;In each case it took months for the management to finally admit that a mistake had been made.&lt;/p&gt;

&lt;p&gt;Firing someone after investing team time and resources sucks.&lt;/p&gt;

&lt;p&gt;If a person has a strong track record the likelihood you'll have to undo your hiring mistake drops.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#newer-engineers-are-up-against-a-lot-but-we-all-got-started-somehow"&gt;
  &lt;/a&gt;
  Newer engineers are up against a lot... but we all got started somehow
&lt;/h2&gt;

&lt;p&gt;I don't want to leave you with the idea that getting work in tech is impossible. Lots of people have broken into the industry even without CS-degrees.&lt;/p&gt;

&lt;p&gt;I know this because this was actually my path.&lt;/p&gt;

&lt;p&gt;When I graduated I had a lot of coding skills but my degree was in economics.&lt;/p&gt;

&lt;p&gt;My own story involved building up a portfolio by doing small-time contracts for clients with small budgets. I then used that portfolio to get bigger more prestigious clients.&lt;/p&gt;

&lt;p&gt;Over the years I have learned that getting hired takes strategy based on a realistic assessment of your strengths and weaknesses.&lt;/p&gt;

&lt;p&gt;Not all 'employers' are the same.&lt;/p&gt;

&lt;p&gt;Some companies are in high demand. Everybody wants to work with them so they're inundated with resumes from rockstars. Other companies need people but don't know how to find them. They'll hire the first good engineer who walks through their door.&lt;/p&gt;

&lt;p&gt;Little changes in a resume (like emphasizing your Node skills over your older .Net skills when applying to newer companies, or changing the market you're searching for a job in) are the difference between 20 job offers in a week and crickets.&lt;/p&gt;

&lt;p&gt;A little bit of thought about strategy can really help.&lt;/p&gt;

&lt;p&gt;I thought it would be useful to end this article with some strategy recommendations. &lt;/p&gt;

&lt;p&gt;I hope some of these approaches are helpful to you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#strategies-for-getting-in-the-door-when-you-have-no-work-history"&gt;
  &lt;/a&gt;
  Strategies for getting in the door when you have no work history
&lt;/h2&gt;

&lt;p&gt;To begin with, set realistic expectations - expect the hunt can be hard.&lt;/p&gt;

&lt;p&gt;If you're sending out lots of resumes and not hearing back know that this happens to lots of candidates -- it's fairly normal so don't lose hope. All it takes is one company to say yes to hiring to get things rolling. &lt;/p&gt;

&lt;p&gt;Sending out resumes can work but in my experience it's better to see if you can bypass HR by talking directly to an engineering manager.&lt;/p&gt;

&lt;p&gt;The best way I know of to do this is to attend tech-focused meetups and events. Search for ruby or node or whatever tech meetups and go to the events. After the event employers get up and see if anyone is looking for work. Talk about some of the stuff you've done or things you're passionate about and you'll likely get invited to come in for an interview.&lt;/p&gt;

&lt;p&gt;Another strategy you can use is to work with an employer in a contract (often contract-to-hire) role. &lt;/p&gt;

&lt;p&gt;As we talked about earlier, the big things that are keeping the employer from working with you are cost and risk. If an employer doesn't have to actually commit to hiring someone full time they're way more likely to take a chance on someone with a bit less experience.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ngEk_6aY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9cg7nwp7x77rx8ja1xj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ngEk_6aY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9cg7nwp7x77rx8ja1xj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find contract work at events, on contract-centric work sites like Upwork. Smaller companies in particular like to work with contractors. This is how I got started and I highly recommend this approach.&lt;/p&gt;

&lt;p&gt;Sometimes you really DO want a role in a hard-to-get-into (popular) big tech company and when that’s the case you need to make your resume stand out. &lt;/p&gt;

&lt;p&gt;As someone who can't rely on work history to get in the door, you’ll need something else to make your resume stand out. &lt;/p&gt;

&lt;p&gt;Some things that you can do ~&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#niche-get-specific-about-who-you-want-to-work-for-and-bring-more-to-the-table-than-just-programming-skills"&gt;
  &lt;/a&gt;
  Niche ~ get specific about who you want to work for and bring more to the table than just programming skills.
&lt;/h4&gt;

&lt;p&gt;Most candidates are telling employers, ‘you need Java? I have Java’ but the employer really actually needs ‘Java’ to solve educational or fashion or recruiting problems…&lt;/p&gt;

&lt;p&gt;If you can bring a passion for the space along with the skills you have a much greater chance of getting an interview.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#demonstrate-work-the-employer-is-looking-for-a-portfolio-with-relevant-projects-is-pretty-awesome-here"&gt;
  &lt;/a&gt;
  Demonstrate work the employer is looking for ~ a portfolio with relevant projects is pretty awesome here.
&lt;/h4&gt;

&lt;p&gt;One hack I've seen done is to give yourself a homework assignment. Research a company you'd like to work for and put together a mini project (as if they had hired you). Send the project to them as part of your application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GMAjrQbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pio7h5lhmcvi6cpkuna3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GMAjrQbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pio7h5lhmcvi6cpkuna3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#demonstrate-high-quality-engineering-skills"&gt;
  &lt;/a&gt;
  Demonstrate high quality engineering skills.
&lt;/h4&gt;

&lt;p&gt;Most new grads are missing professional engineering experience. They don't know about testing of version control workflows. They have nothing a potential employer can look at. &lt;/p&gt;

&lt;p&gt;The solution? Work on open source projects, go to hack-a-thons, get involved in the engineering community.&lt;/p&gt;

&lt;p&gt;All of these things can help you get interviews... once you get interviews all you have to do is pass them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tinyurl.com/ccarticle01"&gt;If you're interested in learning about passing coding interviews I put together a 50 minute Skillshare course about coding interview techniques. It's free for dev.to readers until August 30th. Check it out.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iL-NGani--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ceyx0gpp62vrf25h8jau.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iL-NGani--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ceyx0gpp62vrf25h8jau.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope this article has been useful for you and that you have some new ideas for strategies you can use in your job hunt. Good luck and may you find exactly the work you’re looking for.&lt;/p&gt;

</description>
      <category>jobs</category>
      <category>interviewing</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Don't get burned by email</title>
      <author>Ondrej Musil</author>
      <pubDate>Tue, 27 Jul 2021 12:13:38 +0000</pubDate>
      <link>https://dev.to/superface/don-t-get-burned-by-email-6c4</link>
      <guid>https://dev.to/superface/don-t-get-burned-by-email-6c4</guid>
      <description>&lt;p&gt;When we noticed &lt;a href="https://twitter.com/garybernhardt/status/1390461076974735363"&gt;Gary Bernhardt's tweet&lt;/a&gt; about the major outage of &lt;a href="https://status.sendgrid.com/incidents/bj70jkn55zv8"&gt;SendGrid services&lt;/a&gt; we realized, we could get burned as well and looked at how &lt;a href="https://superface.ai/"&gt;Superface&lt;/a&gt; could help.&lt;/p&gt;

&lt;p&gt;This tutorial will help you to send transactional emails with the maximum reliability using &lt;a href="https://www.notion.so/Don-t-get-burned-by-email-7d7b68c7c6b047ffb0e2dca78d142deb"&gt;Superface OneSDK&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By the end of the tutorial, you’ll have an email integration that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;automatically fails over and recovers between multiple email providers using circuit breaker pattern&lt;/li&gt;
&lt;li&gt;gives you clear insights into your email usage across all providers&lt;/li&gt;
&lt;li&gt;notifies you when things go wrong and actively suggests improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#providers-and-setup"&gt;
  &lt;/a&gt;
  Providers and setup
&lt;/h2&gt;

&lt;p&gt;The simplest step you can do to improve your application is to use two providers with failover.&lt;/p&gt;

&lt;p&gt;For the purpose of this tutorial, we will use &lt;a href="http://example.com/"&gt;example.com&lt;/a&gt; as a sender domain and &lt;a href="//mailto:hello@example.com"&gt;hello@example.com&lt;/a&gt; as a sender email address. We’ll configure SendGrid to be the primary and Postmark the secondary email provider. Feel free to use your own domains &amp;amp; providers of choice (although currently only Sendgrid, Postmark, Mailgun &amp;amp; Mailchimp are supported).&lt;/p&gt;

&lt;p&gt;You need to do two things, to be able to send emails:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Verify domain or configure single email address&lt;/li&gt;
&lt;li&gt;Get API Key to access provider APIs&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;SendGrid&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://docs.sendgrid.com/ui/account-and-settings/how-to-set-up-domain-authentication"&gt;How to verify domain&lt;br&gt;
How to get&lt;/a&gt; &lt;a href="https://docs.sendgrid.com/ui/account-and-settings/api-keys"&gt;API Key&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Postmark&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://postmarkapp.com/support/article/1046-how-do-i-verify-a-domain"&gt;How to verify domain&lt;/a&gt;&lt;br&gt;
&lt;a href="https://postmarkapp.com/videos/an-introduction-to-postmark-servers"&gt;How to get API Key&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mailchimp&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://mailchimp.com/developer/transactional/docs/authentication-delivery/#authentication"&gt;How to verify domain&lt;/a&gt;&lt;br&gt;
&lt;a href="https://mailchimp.com/developer/transactional/guides/quick-start/#generate-your-api-key"&gt;How to get API Key&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mailgun&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://documentation.mailgun.com/en/latest/user_manual.html#verifying-your-domain"&gt;How to verify domain&lt;/a&gt;&lt;br&gt;
&lt;a href="https://documentation.mailgun.com/en/latest/api-intro.html#base-url"&gt;How to get API Key&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The last step is to &lt;a href="https://superface.ai/create-account?invitation=resilient_email"&gt;Create Superface account&lt;/a&gt;. It will give you access to details about &lt;a href="http://superface.ai/communication/send-email"&gt;send-email&lt;/a&gt; capability, and to your project monitoring, which we will use later.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#use-onesdk-in-your-application"&gt;
  &lt;/a&gt;
  Use OneSDK in your application
&lt;/h2&gt;

&lt;p&gt;You can use any of your NodeJS projects or simply clone our &lt;a href="https://github.com/superfaceai/resilient-email-tutorial"&gt;tutorial repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you use our tutorial repository, get started with installing dependencies and start the application,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Install dependencies&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="c"&gt;# Start application&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;, you should see&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lb425ZOg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iashx6zm3ntm2yxq5tle.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lb425ZOg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iashx6zm3ntm2yxq5tle.png" alt="Running App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-sendemail-capability-and-configure-providers"&gt;
  &lt;/a&gt;
  Add send-email capability and configure providers
&lt;/h3&gt;

&lt;p&gt;The easiest way to add use cases is to use &lt;a href="https://www.notion.so/Don-t-get-burned-by-email-7d7b68c7c6b047ffb0e2dca78d142deb"&gt;Superface CLI&lt;/a&gt;. Its interactive install will guide you through the setup, and will automatically install OneSDK that does the hard work of integrating for you. &lt;/p&gt;

&lt;p&gt;The goal is to have two providers (SendGrid and Postmark) with failover and configure &lt;code&gt;SendEmail&lt;/code&gt; usecase to use &lt;a href="https://en.wikipedia.org/wiki/Circuit_breaker_design_pattern"&gt;circuit-breaker&lt;/a&gt; as failover policy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npx @superfaceai/cli &lt;span class="nb"&gt;install &lt;/span&gt;communication/send-email &lt;span class="nt"&gt;-i&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After finishing the interactive install, you should see a new folder called &lt;code&gt;superface&lt;/code&gt;. It is a place where all configuration and metadata for OneSDK lives. Also, &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;package-lock.json&lt;/code&gt; will be updated because CLI added &lt;code&gt;@superfaceai/one-sdk&lt;/code&gt; as a new dependency.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#send-email"&gt;
  &lt;/a&gt;
  Send email
&lt;/h3&gt;

&lt;p&gt;Now it is time to send emails. It should be implemented in &lt;code&gt;routes/index.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;First you need to import &lt;code&gt;SuperfaceClient&lt;/code&gt; from &lt;code&gt;@superfaceai/one-sdk&lt;/code&gt; package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;SuperfaceClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@superfaceai/one-sdk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The email will be sent when POST request is received &lt;em&gt;(Look for TODO: Implement Send Hello email comment).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Replace the comment and next line with following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create OneSDK instance&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SuperfaceClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Load installed profile&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;profile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getProfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;communication/send-email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Use the profile to SendEmail&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUseCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SendEmail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;perform&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello@example.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Superface Resilient Email Tutorial&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; from Superface Tutorial`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Get and show data&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Send Email Failed: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Uups..&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#try-it"&gt;
  &lt;/a&gt;
  Try it
&lt;/h2&gt;

&lt;p&gt;Now it is time to run it and try if it works.&lt;/p&gt;

&lt;p&gt;Start application with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;, fill in your email address, and hit &lt;code&gt;Send Hello&lt;/code&gt;, you should get the message-id as result and receive the email.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0y9FZwdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mom0psz7xyxq2spu87pe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0y9FZwdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mom0psz7xyxq2spu87pe.png" alt="Send with SendGrid"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-failover"&gt;
  &lt;/a&gt;
  Testing failover
&lt;/h3&gt;

&lt;p&gt;Now let's check how failover works.&lt;/p&gt;

&lt;p&gt;You don't want to wait for the next outage, to see if failover works. To emulate the unavailability of SendGrid API, you can point &lt;a href="http://api.sendgrid.com"&gt;api.sendgrid.com&lt;/a&gt; to &lt;a href="http://localhost"&gt;localhost&lt;/a&gt; in &lt;code&gt;/etc/hosts&lt;/code&gt;. If you configured a different primary provider, use its respective API base URL.&lt;/p&gt;

&lt;p&gt;For unix systems open &lt;code&gt;/etc/hosts&lt;/code&gt; with sudo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;nano /etc/hosts
Password:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and enter this line at the end&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;127.0.0.1 api.sendgrid.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;result should be similar to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;##
# Host Database
#
# localhost is used to configure the loopback interface
# when the system is booting.  Do not change this entry.
##
127.0.0.1   localhost
255.255.255.255 broadcasthost
::1             localhost

127.0.0.1 api.sendgrid.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now go back to running the application and send a hello to yourself again&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6LhWSG2w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98qhddi8jr43i083s8yz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6LhWSG2w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98qhddi8jr43i083s8yz.png" alt="Send with Postmark"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It looks the same as before, but there is a small change. The message-id has a different structure. And it is because the email was sent with Postmark instead of unavailable SendGrid.&lt;/p&gt;

&lt;p&gt;You can also try how OneSDK will recover, by removing &lt;a href="http://api.sendgrid.com"&gt;api.sendgrid.com&lt;/a&gt; entry added to &lt;code&gt;/etc/hosts&lt;/code&gt;. It must be at least 30 seconds from failover to secondary, to get tried primary provider again.et&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dashboard"&gt;
  &lt;/a&gt;
  Dashboard
&lt;/h2&gt;

&lt;p&gt;If you configured OneSDK with SDK Token, you should also receive an email notification about failover. It contains information such as when the failover happened and the reason.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6CN6sCuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69b309s63zxc7kpyqjqq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6CN6sCuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69b309s63zxc7kpyqjqq.png" alt="Failover email notification"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you check the &lt;a href="https://superface.ai/dashboard"&gt;dashboard&lt;/a&gt;, you can see what profiles and providers your application is using, the number of performs, and when the last failover happened.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1AKE2wQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2m318kpuv7ogwkit1d4c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1AKE2wQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2m318kpuv7ogwkit1d4c.png" alt="Project insights"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Emails are important in applications we build, without them users are not able to sign in, or worse customers will not receive bought train tickets. Here is how you can make it super resilient with the least effort. &lt;/p&gt;

&lt;p&gt;The best part? You can get this level of resiliency and ease of use for any use case out there! Check out &lt;a href="https://superface.ai"&gt;Superface&lt;/a&gt; and &lt;a href="https://superface.ai/how-it-works"&gt;how it works&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Introduction  to Data Structures and Algorithms With Python.</title>
      <author>Mwenda Harun Mbaabu</author>
      <pubDate>Tue, 27 Jul 2021 12:06:23 +0000</pubDate>
      <link>https://dev.to/grayhat/introduction-to-data-structures-and-algorithms-with-python-4ih1</link>
      <guid>https://dev.to/grayhat/introduction-to-data-structures-and-algorithms-with-python-4ih1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LX569D-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j03t2nbck1fi876sb5p9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LX569D-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j03t2nbck1fi876sb5p9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data structures and algorithms in Python are two of the most fundamental concepts in computer science. They are indispensable tools for any programmer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data structures&lt;/strong&gt; in Python deal with the organization and storage of data in the memory while a program is processing it. On the other hand, &lt;strong&gt;Python algorithms&lt;/strong&gt; refer to the detailed set of instructions that helps in the processing of data for a specific purpose.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BWp8ubs2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81uqaonjqubtfgz9uhlk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BWp8ubs2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81uqaonjqubtfgz9uhlk.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Data structure organises the storage in computers so that we can easily access and change data. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stacks&lt;/strong&gt; and &lt;strong&gt;Queues&lt;/strong&gt; are the earliest data structure defined in computer science. A simple Python list can act as a queue and stack, also we can implement stack and queue using classes and functions and today we will be looking at the two approaches.&lt;/p&gt;

&lt;p&gt;A queue follows &lt;strong&gt;FIFO&lt;/strong&gt; rule (First In First Out) and used in programming for sorting. It is common for stacks and queues to be implemented with an array or linked list. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-stack"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1). Stack.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;A Stack is a data structure that follows the LIFO(Last In First Out) principle. To implement a stack, we need two simple operations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;push : It adds an element to the top of the stack.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cq4rY2DT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqv0ku87eud2g0py03xu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cq4rY2DT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqv0ku87eud2g0py03xu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pop : It removes an element from the top of the stack. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j5CkG_BM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qrryymva4g7w2id2vdz0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j5CkG_BM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qrryymva4g7w2id2vdz0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Operations:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adding - It adds the items in the stack and increases the stack size. The addition takes place at the top of the stack.&lt;/li&gt;
&lt;li&gt;Deletion - It consists of two conditions, first, if no element is present in the stack, then underflow occurs in the stack, and second, if a stack contains some elements, then the topmost element gets removed. It reduces the stack size.&lt;/li&gt;
&lt;li&gt;Traversing - It involves visiting each element of the stack.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Characteristics:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Insertion order of the stack is preserved.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Useful for parsing the operations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Duplicacy is allowed.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Implementation of stack using Python list.
&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Android"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Java"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"C++"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;['Python', 'C', 'Android', 'Java', 'C++']
C++
['Python', 'C', 'Android', 'Java']
Java
['Python', 'C', 'Android']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-queue"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2). Queue&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;A &lt;strong&gt;Queue&lt;/strong&gt; follows the &lt;strong&gt;First-in-First-Out&lt;/strong&gt; (FIFO) principle. It is opened from both the ends hence we can easily add elements to the back and can remove elements from the front.&lt;/p&gt;

&lt;p&gt;To implement a queue, we need two simple operations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;enqueue - It adds an element to the end of the queue.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bWg7Axde--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7624o5n0ama3mgz0287.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bWg7Axde--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7624o5n0ama3mgz0287.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dequeue - It removes the element from the beginning of the queue.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hv2aeHU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fje69x3di16t91m13f8s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hv2aeHU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fje69x3di16t91m13f8s.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Operations on Queue&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Addition&lt;/strong&gt; - It adds the element in a queue and takes place at the rear end, i.e., at the back of the queue.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Deletion&lt;/strong&gt; - It consists of two conditions - If no element is present in the queue, Underflow occurs in the queue, or if a stack contains some elements then element present at the front gets deleted.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Traversing&lt;/strong&gt; - It involves to visit each element of the queue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Characteristics:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Insertion order of the queue is preserved.&lt;/li&gt;
&lt;li&gt;Duplicacy is allowed.&lt;/li&gt;
&lt;li&gt;Useful for parsing CPU task operations.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;queue&lt;/span&gt;   
&lt;span class="c1"&gt;# Queue is created as an object 'L'  
&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Queue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   

&lt;span class="c1"&gt;# Data is inserted in 'L' at the end using put()   
&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="c1"&gt;# get() takes data from   
# from the head    
# of the Queue   
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;9
6
7
4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#use-case"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Use Case:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1). Stack.&lt;/strong&gt;&lt;br&gt;
Imagine you're a software engineer working on a brand new word processor. You're tasked with creating an undo feature - allowing users to backtrack their actions till the beginning of the session.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;stack&lt;/strong&gt; is an ideal fit for this scenario. We can record every action the user takes by pushing it to the stack. When the user wants to undo an action they'll pop it from the stack.&lt;br&gt;
We can quickly simulate the feature like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;document_actions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# The first enters the title of the document
&lt;/span&gt;&lt;span class="n"&gt;document_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'action: enter; text_id: 1; text: This is my favourite document'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Next they center the text
&lt;/span&gt;&lt;span class="n"&gt;document_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'action: format; text_id: 1; alignment: center'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# As with most writers, the user is unhappy with the first draft and undoes the center alignment
&lt;/span&gt;&lt;span class="n"&gt;document_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# The title is better on the left with bold font
&lt;/span&gt;&lt;span class="n"&gt;document_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'action: format; text_id: 1; style: bold'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2). Queues.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Queues have widespread uses in programming as well. Think of games like &lt;strong&gt;Street Fighter&lt;/strong&gt; or &lt;strong&gt;Super Smash Brothers.&lt;/strong&gt; Players in those games can perform special moves by pressing a combination of buttons. These button combinations can be stored in a queue.&lt;/p&gt;

&lt;p&gt;Now imagine that you're a software engineer working on a new fighting game. In your game, every time a button is pressed, an input event is fired. A tester noticed that if buttons are pressed too quickly the game only processes the first one and special moves won't work!&lt;/p&gt;

&lt;p&gt;You can fix that with a queue. We can enqueue all input events as they come in. &lt;br&gt;
This way it doesn't matter if input events come with little time between them, they'll all be stored and available for processing. When we're processing the moves we can dequeue them. &lt;br&gt;
A special move can be worked out like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;input_queue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Queue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# The player wants to get the upper hand so pressing the right combination of buttons quickly
&lt;/span&gt;&lt;span class="n"&gt;input_queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'DOWN'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;input_queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'RIGHT'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;input_queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'B'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Now we can process each item in the queue by dequeueing them
&lt;/span&gt;&lt;span class="n"&gt;key_pressed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input_queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dequeue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# 'DOWN'
&lt;/span&gt;
&lt;span class="c1"&gt;# We'll probably change our player position
&lt;/span&gt;&lt;span class="n"&gt;key_pressed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input_queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dequeue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# 'RIGHT'
&lt;/span&gt;
&lt;span class="c1"&gt;# We'll change the player's position again and keep track of a potential special move to perform
&lt;/span&gt;&lt;span class="n"&gt;key_pressed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input_queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dequeue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# 'B'
&lt;/span&gt;
&lt;span class="c1"&gt;# This can do the act, but the game's logic will know to do the special move
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;More examples to use:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://colab.research.google.com/drive/1UyEZZeS0DhxFPRCnVa2UaXgxCmEHtpbr?usp=sharing"&gt;Stack data structure in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://colab.research.google.com/drive/1QURyou0CxfcQrpOv7ZRTHSmfz7_TbKv3?usp=sharing"&gt;Queue data structure in Python&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;If you find some errors in the article or have an addition or some inputs please feel free to leave a feed back or comment or DM me on &lt;a href="https://twitter.com/HarunMbaabu"&gt;twitter&lt;/a&gt;, &lt;a href="https://twitter.com/HarunMbaabu"&gt;https://twitter.com/HarunMbaabu&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Stacks and queues are simple data structures that allow us to store and retrieve data sequentially. In a stack, the last item we enter is the first to come out. In a queue, the first item we enter is the first come out.&lt;/p&gt;

&lt;p&gt;We can add items to a stack using the push operation and retrieve items using the pop operation. With queues, we add items using the enqueue operation and retrieve items using the dequeue operation.&lt;/p&gt;

&lt;p&gt;In Python, we can implement stacks and queues just by using the built-in List data structure. Python also has the deque library which can efficiently provide stack and queue operations in one object. Finally, we've made our stack and queue classes for tighter control of our data.&lt;/p&gt;

&lt;p&gt;There are many real-world use cases for stacks and queues, understanding them allows us to solve many data storage problems in an easy and effective manner.&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>python</category>
      <category>datascience</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Artificial Intelligence Project for Beginners</title>
      <author>Jack </author>
      <pubDate>Tue, 27 Jul 2021 11:55:57 +0000</pubDate>
      <link>https://dev.to/codingninjaz/artificial-intelligence-project-for-beginners-3ed9</link>
      <guid>https://dev.to/codingninjaz/artificial-intelligence-project-for-beginners-3ed9</guid>
      <description>&lt;p&gt;&lt;span&gt;In this guide, we’ll be walking through 8 fun machine learning projects for beginners. Projects are some of the best investments of your time. You’ll enjoy learning, stay motivated, and make faster progress.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You see, no amount of theory can replace hands-on practice. Textbooks and lessons can lull you into a false belief of mastery because the material is there in front of you. But once you try to apply it, you might find that it’s harder than it looks.&lt;/p&gt;
&lt;p&gt;Projects help you improve your applied ML skills quickly while giving you the chance to explore an interesting topic.&lt;/p&gt;
&lt;p&gt;Plus, you can add projects into your portfolio, making it easier to land a job, find cool career opportunities, and even negotiate a higher salary.&lt;/p&gt;
&lt;p&gt;Here are 8 fun machine learning projects for beginners. You can complete any of them in a single weekend, or expand them into longer projects if you enjoy them.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Please Visit Originally Published To read More&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;b&gt;Originally Published&lt;/b&gt;: &lt;/span&gt;&lt;b&gt;&lt;a href="https://bit.ly/3zEccM7"&gt;&lt;span&gt;AI project for beginners&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;





</description>
    </item>
    <item>
      <title>AI Project For Beginners</title>
      <author>Bikaah324</author>
      <pubDate>Tue, 27 Jul 2021 11:34:17 +0000</pubDate>
      <link>https://dev.to/coderzways/ai-project-for-beginners-2gd2</link>
      <guid>https://dev.to/coderzways/ai-project-for-beginners-2gd2</guid>
      <description>&lt;p&gt;&lt;span&gt;In this guide, we’ll be walking through 8 fun machine learning projects for beginners. Projects are some of the best investments of your time. You’ll enjoy learning, stay motivated, and make faster progress.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You see, no amount of theory can replace hands-on practice. Textbooks and lessons can lull you into a false belief of mastery because the material is there in front of you. But once you try to apply it, you might find that it’s harder than it looks.&lt;/p&gt;
&lt;p&gt;Projects help you improve your applied ML skills quickly while giving you the chance to explore an interesting topic.&lt;/p&gt;
&lt;p&gt;Plus, you can add projects into your portfolio, making it easier to land a job, find cool career opportunities, and even negotiate a higher salary.&lt;/p&gt;
&lt;p&gt;Here are 8 fun machine learning projects for beginners. You can complete any of them in a single weekend, or expand them into longer projects if you enjoy them.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Please Visit Originally Published To read More&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;b&gt;Originally Published&lt;/b&gt;: &lt;/span&gt;&lt;b&gt;&lt;a href="https://bit.ly/3zEccM7"&gt;&lt;span&gt;AI project for beginners&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;





</description>
    </item>
    <item>
      <title>10 Must-Have IntelliJ Plugins to Improve Your Productivity</title>
      <author>Alex Omeyer</author>
      <pubDate>Tue, 27 Jul 2021 11:28:48 +0000</pubDate>
      <link>https://dev.to/alexomeyer/10-must-have-intellij-plugins-to-improve-your-productivity-2pjg</link>
      <guid>https://dev.to/alexomeyer/10-must-have-intellij-plugins-to-improve-your-productivity-2pjg</guid>
      <description>&lt;p&gt;Many of you loved my list with the &lt;strong&gt;&lt;a href="https://dev.to/alexomeyer/10-must-have-vs-code-extensions-to-improve-your-productivity-4goe"&gt;10 Must-Have VS Code Extensions to boost developer productivity&lt;/a&gt;&lt;/strong&gt; so I asked devs who use IntelliJ IDEA: what are your favourite plugins to ship quality code fast? Here are 10 plugins many of you have mentioned:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-wakatime"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://plugins.jetbrains.com/plugin/7425-wakatime"&gt;WakaTime&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;WakaTime allows you to see metrics, insights, and time tracking automatically generated from your programming activity.&lt;/p&gt;

&lt;p&gt;You will learn exactly how long you spend coding as it automatically tracks when you start and stop typing, with detailed metrics for projects, file, branch, commit/PR, feature, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5GKZNH9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctyq8nook6mtitp71osq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5GKZNH9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctyq8nook6mtitp71osq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-stepsize"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://bit.ly/3gZ6OeF"&gt;Stepsize&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Shameless plug - Stepsize is the best extension to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bookmark code, create TODOs and report technical debt directly from the editor&lt;/li&gt;
&lt;li&gt;Collaborate with your teammates on maintenance and refactoring work&lt;/li&gt;
&lt;li&gt;Prioritise technical issues during your sprint planning&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C6ZQ3IiH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h80d5anw22wa0vtkrqhd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C6ZQ3IiH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h80d5anw22wa0vtkrqhd.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-key-promoter-x"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://plugins.jetbrains.com/plugin/9792-key-promoter-x"&gt;Key Promoter X&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Key Promoter X helps you to learn essential shortcuts while you are working. When you use the mouse on a button inside the IDE, the Key Promoter X shows you the keyboard shortcut that you should have used instead. &lt;/p&gt;

&lt;p&gt;This provides an easy way to learn how to replace tedious mouse work with keyboard keys and helps to transition to a faster, mouse free development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSHkDUze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6q6lb6dtcvu7hieaxo4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSHkDUze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6q6lb6dtcvu7hieaxo4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-zio-for-intellij"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://plugins.jetbrains.com/plugin/13820-zio-for-intellij"&gt;ZIO for IntelliJ&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;ZIO will give you suggestions, refactorings, and other enhancements for Scala's ZIO ecosystem.&lt;br&gt;
The plugin enhances the ZIO library with features, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Refactorings and suggestions&lt;/li&gt;
&lt;li&gt;Support for zio-macros (e.g. @accessible)&lt;/li&gt;
&lt;li&gt;Integrated test runner&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xNzLPgp9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84a77qyqrfhi4u6h7apa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xNzLPgp9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84a77qyqrfhi4u6h7apa.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-protobuf"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://plugins.jetbrains.com/plugin/16422-protobuf"&gt;Protobuf&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;IntelliJ-based IDEs Protobuf Language Plugin provides Protobuf language support. Protobuf help with syntax highlighting, importing files from library and SDK, navigation, finding usage, code folding, semantic analysis, quick documentation, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jq5GfgQj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vv7je0ejmhkrdmux2vov.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jq5GfgQj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vv7je0ejmhkrdmux2vov.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-sonarlint"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://plugins.jetbrains.com/plugin/7973-sonarlint"&gt;SonarLint&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;SonarLint lets you fix coding issues before they exist: like a spell checker, SonarLint highlights Bugs and Security Vulnerabilities as you write code, with clear remediation guidance so you can fix them before the code is even committed. SonarLint in VS Code supports analysis of JavaScript, TypeScript, Python, Java, HTML &amp;amp; PHP code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--asfXtxpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqyzyfpjljnahvkarcgt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--asfXtxpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqyzyfpjljnahvkarcgt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-eslint"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://plugins.jetbrains.com/plugin/7494-eslint"&gt;ESLint&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;ESLint IntelliJ integration supports displaying eslint warnings as IntelliJ inspections, helps making quick fixes for several rules, support for custom eslint rules, and eslint config annotation and completion.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dSo13Bgp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlx4cpy1q80tusl7zpm6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dSo13Bgp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlx4cpy1q80tusl7zpm6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-prettier"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://plugins.jetbrains.com/plugin/10456-prettier"&gt;Prettier&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Prettier extension helps code look better and be more consistent. It enforces a consistent style by parsing your code and reprinting it with its own rules that take the maximum line length into account, wrapping code when necessary. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sNcGtlN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wp4qrs28x3la8oyjdow.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sNcGtlN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wp4qrs28x3la8oyjdow.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-quokka"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://plugins.jetbrains.com/plugin/9667-quokka"&gt;Quokka&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Quokka.js is a developer productivity tool for rapid JavaScript / TypeScript prototyping. Runtime values are updated and displayed in your IDE next to your code, as you type. It makes prototyping, learning, and testing JavaScript / TypeScript much faster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mRziI-Kz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1emy913laveox58r7yn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mRziI-Kz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1emy913laveox58r7yn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-acejump"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://plugins.jetbrains.com/plugin/7086-acejump"&gt;AceJump&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;AceJump allows you to quickly navigate the caret to any position visible in the editor. Simply hit "ctrl+;", type a character, then type the matching character to Ace Jump. If no matches can be found on-screen, AceJump will scroll to the next match it can find.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kjkd7vKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxc79r3ccqvc6zp3fz6i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kjkd7vKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxc79r3ccqvc6zp3fz6i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>intellij</category>
      <category>refactorit</category>
      <category>javascript</category>
      <category>tooling</category>
    </item>
    <item>
      <title>How the Resilience Score Algorithm works in Litmus!</title>
      <author>Sayan Mondal</author>
      <pubDate>Tue, 27 Jul 2021 11:04:34 +0000</pubDate>
      <link>https://dev.to/litmus-chaos/how-the-resilience-score-algorithm-works-in-litmus-1d22</link>
      <guid>https://dev.to/litmus-chaos/how-the-resilience-score-algorithm-works-in-litmus-1d22</guid>
      <description>&lt;p&gt;What really is Resilience? For practitioners, psychologists, etc, Resilience is the process of adapting well in the face of adversity, trauma, tragedy, threats, or significant sources of stress, for an SRE or Chaos Engineering however Resilience can be defined as the ability of a system to fail gracefully in the face of—and eventually recover from—disruptive events.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e8Y4GxOy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--EzkG1_qr--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://litmuschaos.io/static/0a11d0492777dc77ca7c7d008877ce5a/78692/cloud-native-way.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8Y4GxOy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--EzkG1_qr--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://litmuschaos.io/static/0a11d0492777dc77ca7c7d008877ce5a/78692/cloud-native-way.webp" alt="Litmus"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Litmus&lt;/strong&gt; is a &lt;strong&gt;Cross-Cloud Chaos Orchestration&lt;/strong&gt; framework for practising chaos engineering in cloud-native environments. Litmus provides a chaos operator, a large set of chaos experiments on its &lt;a href="http://hub.litmuschaos.io/"&gt;hub&lt;/a&gt;, detailed &lt;a href="https://litmusdocs-beta.netlify.app/docs/introduction/"&gt;documentation&lt;/a&gt;, and a friendly &lt;a href="https://kubernetes.slack.com/?redir=%2Fmessages%2FCNXNB0ZTN"&gt;community&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Find the video format of this blog here:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/OuB3dS05DHU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this blog, we'll deep dive into how the Resilience Score is calculated for your Workflows in Litmus and also understand the concept of Weights.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pSbby3BL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mj9tei9qi59uzhnh3hc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pSbby3BL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mj9tei9qi59uzhnh3hc.png" alt="Weights"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weights-in-litmus"&gt;
  &lt;/a&gt;
  Weights in Litmus
&lt;/h2&gt;

&lt;p&gt;You might have often seen the term weightage pop up quite a few times when you construct your Workflows in Litmus. Typically attached to Resilience, these weights have an important role to play to determine the appropriate Resilience score for your use case.&lt;/p&gt;

&lt;p&gt;Giving a weightage to your experiment is a way of signifying/attaching the importance/priority of that experiment in your workflow. The higher the weight, the more importance it holds.&lt;/p&gt;

&lt;p&gt;For instance, consider this example where you have two Chaos Experiments, &lt;strong&gt;Pod Delete&lt;/strong&gt; and &lt;strong&gt;Pod Network Loss&lt;/strong&gt; in your workflow. Imagine you have a use case where you cannot bear having a network loss but an eviction of a pod does not really bother you that much because you are confident that the pod would re-spawn back up, but you still want to test for pod eviction as a part of your Chaos Test Suite. &lt;/p&gt;

&lt;p&gt;In such a scenario, the Pod Delete Chaos Experiment doesn't hold much of an importance for you but on the other hand, Pod Network Loss does.&lt;/p&gt;

&lt;p&gt;The weight priority is generally divided into three sections:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;0-3&lt;/strong&gt;: Low Priority&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;4-6&lt;/strong&gt;: Medium Priority&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;7-10&lt;/strong&gt;: High Priority&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore considering your scenario, you would want to assign &lt;strong&gt;Pod Delete&lt;/strong&gt; with a &lt;strong&gt;Low Priority&lt;/strong&gt; weightage, whereas, &lt;strong&gt;Pod Network Loss&lt;/strong&gt; would be in the &lt;strong&gt;High Priority&lt;/strong&gt; category.&lt;/p&gt;

&lt;p&gt;Now that we know &lt;em&gt;why&lt;/em&gt; we set the weights the way we do! As we progress further in the blog, we'd also get to know how they actually come into play to determine the Resilience Score.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y6_pf7H3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hu5776an22ne4yuqrqjb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y6_pf7H3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hu5776an22ne4yuqrqjb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resilience-score"&gt;
  &lt;/a&gt;
  Resilience Score
&lt;/h2&gt;

&lt;p&gt;A Resilience Score is the measure of how resilient your workflow is considering all the chaos experiments and their individual result points. This calculation takes into account the individual experiment weights (from a range of 1-10) which are relative to each other.&lt;/p&gt;

&lt;p&gt;Once a weight has been assigned to the experiment, we look for the &lt;strong&gt;Probe Success Percentage&lt;/strong&gt; for that experiment itself (Post Chaos) and calculate the &lt;strong&gt;total resilience result&lt;/strong&gt; for that experiment as a &lt;em&gt;multiplication&lt;/em&gt; of the &lt;em&gt;weight given&lt;/em&gt; and the &lt;em&gt;probe success percentage&lt;/em&gt; returned after the Chaos Run.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Total Resilience for one single experiment = (Weight Given to that experiment * Probe Success Percentage)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If an experiment doesn't have a probe in it, the probe success percentage returned can either be 0 or 100 based on the experiment verdict. If the experiment passed then it returns 100 else 0.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Final Resilience Score is calculated by dividing the total test result by the sum of all the weights of all the experiments combined in a single workflow.&lt;/p&gt;

&lt;p&gt;Let's take our above scenario again, considering we have given a weightage of 2 to Pod Delete and 10 for Pod Network Loss, this is how the Resilience Calculation would look like.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BqlCQgq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4rny7uzy2wn6yoafyfb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BqlCQgq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4rny7uzy2wn6yoafyfb.png" alt="Resilience Calculation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Considering Probe Success Percentage is 100&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is why weights play such an important role in your use case specific Resilience Calculation. For the scenario mentioned above, even if Pod Delete would have failed for whichever reason, your Resilience Score would only drop down by a few numbers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Resilience Score = Total Test Result / Weight Sum 
                 = (0 * 100) + (10 * 100) / 12                  
                 = 1000 / 12 
                 = 83.33%
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However if they both were of the same weights, lets say 10. Then your Resilience Score would drop to 50% straight.&lt;/p&gt;

&lt;p&gt;With that I hope you are now an expert of weights, and would use them wisely. With great power comes great responsibility.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's all folks 👨‍🏫, Thank you for reading it till the end. I hope you had a productive time learning about Litmus and how you can construct your workflows with more confidence now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wnj4uCa1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Ftse1.mm.bing.net%252Fth%253Fid%253DOIP.NiUNEyoX9bHslroFaIqmEAAAAA%2526pid%253DApi%26f%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wnj4uCa1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Ftse1.mm.bing.net%252Fth%253Fid%253DOIP.NiUNEyoX9bHslroFaIqmEAAAAA%2526pid%253DApi%26f%3D1" alt="Thanks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Contribute to LitmusChaos and share your feedback on &lt;a href="https://github.com/litmuschaos/litmus"&gt;Github&lt;/a&gt;. If you like LitmusChaos, become one of the many stargazers &lt;a href="https://github.com/litmuschaos/litmus/stargazers"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Join the LitmusChaos slack community following these simple steps!&lt;/p&gt;

&lt;p&gt;Step 1: Join the Kubernetes slack using the following link: &lt;a href="https://slack.k8s.io/"&gt;https://slack.k8s.io/&lt;/a&gt;&lt;br&gt;
Step 2: Join the #litmus channel on the Kubernetes slack or use this link after joining the Kubernetes slack: &lt;a href="https://slack.litmuschaos.io/"&gt;https://slack.litmuschaos.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looking forward to having you in our community and learning together!&lt;/p&gt;

</description>
      <category>litmuschaos</category>
      <category>cloudnative</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>10+ Live chat tools like Intercom, Drift, Zendesk, Tawk.io, etc. compared with Chatwoot.</title>
      <author>Joshua Poddoku</author>
      <pubDate>Tue, 27 Jul 2021 10:49:34 +0000</pubDate>
      <link>https://dev.to/joshuapoddoku/10-live-chat-tools-like-intercom-drift-zendesk-tawk-io-etc-compared-with-chatwoot-3igm</link>
      <guid>https://dev.to/joshuapoddoku/10-live-chat-tools-like-intercom-drift-zendesk-tawk-io-etc-compared-with-chatwoot-3igm</guid>
      <description>&lt;p&gt;In the era of increasing digital products, chat apps have become bloated with features and complexities.&lt;/p&gt;

&lt;p&gt;A lot of features are missing, and problems are unsolved in many live chat applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-are-a-few-existing-problems-in-the-current-live-chat-support-systems"&gt;
  &lt;/a&gt;
  Here are a few existing problems in the current live chat support systems:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Losing active Internet connection&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Attack by other spammers&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Maintaining conversation history&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Instant replies are uncommon&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Breakdown of current ticket flow&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Very difficult to integrate the API into different internal systems&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Third-party app failures (Slack, Zendesk, internal server errors)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Limited and unextendible features&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And many other issues are challenging to handle, and the developers have to put extra effort into fixing the live chat support. It is all about establishing a great connection and impression among the users and the communities, even though your product can be great and effective.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A simple and all-in-one live chat support system - &lt;a href="//chatwoot.com"&gt;Chatwoot&lt;/a&gt;, an openspurce alternative, can resolve all the problems, and it is &lt;/strong&gt;open-source*&lt;em&gt; and **extendible&lt;/em&gt;* for all your business needs. The &lt;a href="https://github.com/chatwoot/chatwoot"&gt;community version&lt;/a&gt; is absolutely free.&lt;br&gt;
**&lt;/p&gt;

&lt;p&gt;Instant messaging and complete open-source codebase access ease even modifying the system according to the business needs and automating the workflow for faster monitoring and management.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iMno5cIN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626703514856/JsN-W-qCT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iMno5cIN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626703514856/JsN-W-qCT.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every visitor is busy, they seek an instant real-conversation rather than revisiting the whole website. Chatwoot's auto agent assignment feature is the solution to get out of the bot-ly conversations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The chat widget can also be easily customized to product brand colors.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Considering only these few features earlier, it was complicated to handle all these tasks manually, and the company had to invest extra assets to fix the live chat support and ticketing systems.&lt;/p&gt;

&lt;p&gt;Elegant UI helps the whole team to adapt quickly and to track visitors and their queries from multiple products in a single app. Online chats are sometimes unclear, and all bots cannot identify the intents and become very unreal and irrelevant. Later, if the user tries to find the social handles of any company (like Whatsapp, Facebook, Twitter, E-mail, etc.), it already frustrates and delays the ticket resolution. Chatwoot has easy integration with any third-party social media and acts as a workplace to manage customers anytime. Let's look at the comparisons below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bot-vs-agent"&gt;
  &lt;/a&gt;
  Bot vs. Agent
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R-lKGhfm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626703651625/_EBasSa7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R-lKGhfm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626703651625/_EBasSa7w.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;&lt;a href="https://99firms.com/blog/live-chat-statistics/"&gt;https://99firms.com/blog/live-chat-statistics/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Current broken live chat system&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bots are increasing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Complex pricing plans&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Difficult to manage internal customer support teams&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Manual agent assignment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;100% extension is not supported&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Extra focus is required&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No mobile apps for such systems&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Extra learning is required&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Limited integration with third-party apps&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#comparing-with-other-products"&gt;
  &lt;/a&gt;
  Comparing with other products
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#1-intercom-vs-chatwoot"&gt;
  &lt;/a&gt;
  1) Intercom vs. Chatwoot
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.intercom.com/"&gt;Intercom&lt;/a&gt; is a popular product in the market. But I'm going to closely give a walkthrough of what can be done better using Chatwoot.&lt;/p&gt;

&lt;p&gt;The starter pack of Intercom has no customizations, custom bot support, neither any conversational management tools. &lt;em&gt;For example, Agent's inactivity cannot be traced.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kf7oIkwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704112592/Xqf98h7Jw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kf7oIkwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704112592/Xqf98h7Jw7.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.chatwoot.com/"&gt;Chatwoot&lt;/a&gt; has unlimited conversations, and Hacker Plan (for developers) costs $0 forever up to 2 agents, and this includes integration with the Twilio SMS channel, which is not provided in Intercom. This plan also enables auto-assignment, note-taking, and other &lt;a href="https://www.chatwoot.com/"&gt;great features&lt;/a&gt; to help any team have a productive workday.&lt;/p&gt;

&lt;p&gt;All the plans below have the feature to track agents and their activity and availability, unlike Intercom.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_XRMx--C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704325575/gYml1r5PD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_XRMx--C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704325575/gYml1r5PD.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-zendesk-vs-chatwoot"&gt;
  &lt;/a&gt;
  2) Zendesk vs. Chatwoot
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.zendesk.com/"&gt;Zendesk&lt;/a&gt; is an award winner but not customizable for smaller budgets; additional enterprise plans touch up to $215/month; on the other hand, Chatwoot provides developer-friendly benefits with the open-source - for good.&lt;/p&gt;

&lt;p&gt;Here's the comparison with the actual features. Zendesk has limited pre-built apps and integrations with complexities of choices and business agreements. Chatwoot has a great low-level structure to solve your high-level needs for your businesses, accessible to developers and non-developers in your company.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jb2BRJsH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704654974/l5bhnOCN-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jb2BRJsH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704654974/l5bhnOCN-.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h6Pr9tyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704928540/wA1dvL0lu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h6Pr9tyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704928540/wA1dvL0lu.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chatwoot is breaking down the complexity of every live chat service into more straightforward language and utility, making it easy to adapt and use without any second thought. Support Team plan (in Zendesk) is equivalent to Startups (Chatwoot) in terms of cost but doesn't have business support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Affordable plans start at chatwoot&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Business support at $19, whereas Zendesk has complicated business support&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Labeling conversations and easy history handling&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Two agents at $0, while Zendesk has only one agent for $19/month&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Custom widgets as per brand requirements&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bloated features are simply accessed in Chatwoot&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Training is not required&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No trial, get a $0 plan&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#solution-with-chatwoot"&gt;
  &lt;/a&gt;
  Solution with Chatwoot
&lt;/h1&gt;

&lt;p&gt;"Business" is not a static term; things here change very fast and often. We don't know who will become Elon Musk overnight.&lt;/p&gt;

&lt;p&gt;According to a report by Hubspot, the customer satisfaction rate is 92% higher for those who use live chat services.&lt;/p&gt;

&lt;p&gt;If you're the decision-maker in your company to choose the best service, you need to be aware of the trends, user behavior, developer accessibility and put some extra effort into learning these products. It will definitely consume time.&lt;/p&gt;

&lt;p&gt;The reason why Chatwoot's Founding members came with this idea was to solve the pain points in the entire product team in order to maintain easy workflow and to maximize Customer Ticket Management.&lt;/p&gt;

&lt;p&gt;On the other side, customer behavior changes dynamically, but you need to stick to one plan at a time. Especially for startups, when the revenue has just begun, it can be a considerable loss when there is an extra business need.&lt;/p&gt;

&lt;p&gt;Instead of switching to different plans and products, Chatwoot is the solution for every hassle.&lt;/p&gt;

&lt;p&gt;The product team can understand marketing by involving in the timely updating of their Chatwoot software by considering the changing demands of the users, and there can be a strong connection between Marketers and Developers. And provide solutions to the end-customers Instantly and Independently.&lt;/p&gt;

&lt;p&gt;Read the complete blog &lt;a href="https://aviyel.com/post/379/10-live-chat-tools-like-intercom-drift-zendesk-tawk-io-and-livechat-compared-with-chatwoot"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>linux</category>
      <category>cloud</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Merging a pdf using Javascript</title>
      <author>Kumaran KM</author>
      <pubDate>Tue, 27 Jul 2021 10:43:40 +0000</pubDate>
      <link>https://dev.to/kumarankm4/merging-a-pdf-using-javascript-48c9</link>
      <guid>https://dev.to/kumarankm4/merging-a-pdf-using-javascript-48c9</guid>
      <description>&lt;p&gt;Have you heard about pdflib library, you didn't so here is the documentation page for you.&lt;/p&gt;

&lt;h3&gt;Pdflib package&lt;/h3&gt;

&lt;p&gt;Pdflib Package&lt;/p&gt;

&lt;p&gt;So here what I have done, First I have installed the package and Add this package to json file as usual. Then I have imported that package on code, Then I have used catch syntax to check for errors.&lt;/p&gt;

&lt;p&gt;Then we need to load the pdf that we need to merge with the help of the load method inside the asynchronous function. If you want to get pdf as a user input then you can try multer package, but for now, I don't need it. I will provide a documentation link for multer package below.&lt;/p&gt;

&lt;p&gt;Multer package&lt;/p&gt;

&lt;p&gt;Then, then with create() method, I have created a new empty document. And then I have added the first pdf file into that document with the help of copyPages() method. Once I have copied the first pdf, then I will concatenate the second pdf with the same copypage method. Then the pdf will get merged into that new document, and now it's time for naming a file. With the help of writeFileSync() I have synced the file and named it with .pdf extension. So here what the output looks like.&lt;/p&gt;

&lt;p&gt;After merging&lt;br&gt;
Alt Text&lt;/p&gt;

&lt;p&gt;Thanks for taking the time to read my blog.&lt;br&gt;
Happy coding :)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>npm</category>
    </item>
    <item>
      <title>IT platform dedicated for Hospital and Clinics management</title>
      <author>Giản Hải Nam</author>
      <pubDate>Tue, 27 Jul 2021 10:30:35 +0000</pubDate>
      <link>https://dev.to/megafoxz/it-platform-dedicated-for-hospital-and-clinics-management-2bi7</link>
      <guid>https://dev.to/megafoxz/it-platform-dedicated-for-hospital-and-clinics-management-2bi7</guid>
      <description>&lt;p&gt;✔️ Patient Admission System (PAS)&lt;br&gt;
✔️ Eletronic Medical Record (EMR)&lt;br&gt;
✔️ Human Resource Management (Admin)&lt;br&gt;
⚡ AI Analysis for Fundus and Dry Eye (Beta)&lt;br&gt;
Detail : &lt;a href="https://github.com/nichealpham/his-composer"&gt;https://github.com/nichealpham/his-composer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vue</category>
      <category>dotnet</category>
    </item>
  </channel>
</rss>
