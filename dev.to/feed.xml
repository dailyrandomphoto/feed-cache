<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Review of Ubuntu after 4 months of daily usage </title>
      <author>krishna kakade</author>
      <pubDate>Sat, 05 Jun 2021 11:11:14 +0000</pubDate>
      <link>https://dev.to/krishnakakade/review-of-ubuntu-after-4-months-of-daily-usage-3815</link>
      <guid>https://dev.to/krishnakakade/review-of-ubuntu-after-4-months-of-daily-usage-3815</guid>
      <description>&lt;p&gt;hello all In this article &lt;br&gt;
I will explain of experience of ubuntu after 4 months of daily heavy usage.&lt;br&gt;
Firstly this my first-time regular usage of ubuntu firstly I am a windows guy but I have tried ubuntu a couple of times but not heavy regular usage so in this article I will pros and cons of ubuntu and also the problems I face and how I solved those things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Overall UI(User Experience) review&lt;/strong&gt; &lt;br&gt;
Transitioning to ubuntu after using windows more than 3 years of regular usage firstly I am excited for the change new ecosystem I didn't find any flaws or complications in UI of Ubuntu 20.04 infact Ubuntu feels like Mac OS to me that is kind of cool thing now question arises what if there is UI freeze kind of thing &lt;br&gt;
&lt;strong&gt;how I am tackling with UI issues&lt;/strong&gt;&lt;br&gt;
In case of windows my laptop is used to show 100% disk usage and because of that my laptop used to freeze daily so then I have to do restart again and again and I having pretty much good hardware 16gigs of RAM 2 TB hdd but I don't have ssd:( Now in case of Ubuntu as a primary operating system it's been four months now hardly my UI doc and overall UI freezed less than 5 times and if that happens like user interface not responding then simple fix for that is &lt;strong&gt;ALT +F2&lt;/strong&gt; and just type &lt;strong&gt;r&lt;/strong&gt; in that box and it's done issue solved üí™üòÑüëå sounds cool right but it feels better than sounds cool üòä so no major issues with UI everything works fine. &lt;br&gt;
&lt;strong&gt;So-called command syndrome&lt;/strong&gt;&lt;br&gt;
Most developers/users think ubuntu is hard to use no that is the myth of the group of folks because as we need to install apps/programs in ubuntu manually but there thousand of resources available on the internet like if need to install vscode or lmms there is installation command guide available for that. so installing and removing the program is not big task.&lt;br&gt;
and all development thing works fine and no worries with that every App that developer need that is available in linux.&lt;br&gt;
Problems for that i didn't got good solution for &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;react native installation doesn't work&lt;/li&gt;
&lt;li&gt;some times music breaks not always once in while.
*&lt;em&gt;Only thing i miss in this OS is playing games i tried epic games through lutris but didn't worked that is only sad other thing smooth like butter *&lt;/em&gt;
That's it for this one .
thank you for reading :)
Should you switch to linux 
&lt;img src="https://i.giphy.com/media/JoPrI0tpxDhX7f7iPl/giphy.gif" alt="gify"&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>Create Your Dogecoin Market Ticker in React</title>
      <author>Devendra Sri</author>
      <pubDate>Sat, 05 Jun 2021 10:15:01 +0000</pubDate>
      <link>https://dev.to/devendrasri1/create-your-dogecoin-market-ticker-in-react-3j3</link>
      <guid>https://dev.to/devendrasri1/create-your-dogecoin-market-ticker-in-react-3j3</guid>
      <description>&lt;p&gt;Initiatives &amp;amp; Projects. They are adored by all. Especially those that help us solidify the fundamentals and learn something new. Dogecoin has been trending over the last week, so why not create something related to it?&lt;/p&gt;

&lt;p&gt;In this project, we will create a simple Dogecoin price ticker, which will be a web app that will fetch the lowest price of the day, the highest price of the day, and the most recently traded price via an API and will be updated every 10 seconds. You will learn how to set up a React project, build components, props, state, and the most commonly used React hooks such as &lt;strong&gt;&lt;em&gt;l24&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;h24&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
Ticker API:&lt;br&gt;
&lt;a href="https://api.buyucoin.com/ticker/v1.0/liveData?symbol=USDT-BTC"&gt;https://api.buyucoin.com/ticker/v1.0/liveData?symbol=USDT-BTC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developing a React Project&lt;/strong&gt;&lt;br&gt;
The first step is to create a React project for ourselves. We'll use Create React App for this, which will allow us to focus on our code rather than worrying about setting up the build tools. You'll need NodeJS v8.10 or higher, as well as NPM version 5.6 or higher.&lt;/p&gt;

&lt;p&gt;Open your terminal and type the following command in the directory of your choice:&lt;br&gt;
npx is a package runner included with npm. The preceding command may take 5-10 minutes to complete, so grab a cup of coffee and unwind!&lt;/p&gt;

&lt;p&gt;Let's move on to the project directory now. You could use the file explorer or the following terminal command to accomplish this: &lt;a href="https://www.buyucoin.com/buy-dogecoin-india"&gt;dogecoin&lt;/a&gt; ticker cd Now, open the project folder in your preferred text editor, and we'll begin with the initial setup in the following section. Run npm start in the project folder on your terminal to start the development server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Initial Configuration&lt;/strong&gt;&lt;br&gt;
After we start our development server with npm start, navigate to localhost:3000 in your browser and you'll see something like this.&lt;/p&gt;

&lt;p&gt;This is the default homepage generated by Create React App. Since we don't require anything similar, let's begin by deleting unnecessary files and configuring the project to meet our needs.&lt;/p&gt;

&lt;p&gt;Our index.html file, which will be rendered by our browser, is located in the public folder. Open it up and begin by removing any unwanted comments and changing the webpage's title. You can also change the description meta tag and add your own. When you're finished, your index.html.&lt;/p&gt;

&lt;p&gt;You can also changed the favicon and logo images, which you can download here, to add a more personal touch to our website.&lt;/p&gt;

&lt;p&gt;Let's go to the src folder now. Most of the files here, such as App.test.js, logo.svg, reportWebVitals.js, and setupTests.js, can be removed. You may have noticed that when you save, our development server throws an error indicating that it failed to compile. We need to fix the imports as well because we deleted the above files. Check out this commit to see the details of the additions and deletions. &lt;/p&gt;

&lt;p&gt;We replaced all of the existing content generated by Create React App with a div containing a h1 with the text 'Dogecoin Ticker.' I've also changed the function to an arrow function, but this isn't required. This function returns some JSX that React renders. It is referred to as a component because it can be used in multiple places throughout our project.&lt;/p&gt;

</description>
      <category>react</category>
      <category>ticker</category>
      <category>data</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to Clone/Download A GitHub Repository</title>
      <author>Sanjay Singh Rajpoot</author>
      <pubDate>Sat, 05 Jun 2021 10:02:45 +0000</pubDate>
      <link>https://dev.to/sanjaysinghrajpoot/how-to-clone-download-a-github-repository-3npp</link>
      <guid>https://dev.to/sanjaysinghrajpoot/how-to-clone-download-a-github-repository-3npp</guid>
      <description>&lt;p&gt;GitHub has one of the largest collection of repositories in the world. From small websites to big complex software, everything is here. To get the code on your local there is no direct method you have to clone the repository to your local machine. There are 2 ways how you could do this first one is using Command-line and the other one is using the command-line. For beginners, I would suggest you use GitHub Desktop as this method is simple to use and you won‚Äôt get stuck in it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-commandline"&gt;
  &lt;/a&gt;
  Using Command-line
&lt;/h2&gt;

&lt;p&gt;To clone a repository using Command-Line you have to first install git version control then only you will be able to clone the repo.&lt;/p&gt;

&lt;p&gt;1.On Github, navigate to the repository page which you want to clone/download.&lt;br&gt;
2.Above the list of files, you will see a green button click  Code.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LNX4i5bW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5s65vmd0666vf3wstp02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LNX4i5bW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5s65vmd0666vf3wstp02.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.To clone the repository using HTTPS, under ‚ÄúClone with HTTPS‚Äù, click. To clone/download the repository using an SSH key, including a certificate issued by your organization‚Äôs SSH certificate authority, click Use SSH, then click. To clone a repository using GitHub CLI, click Use GitHub CLI, then click.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EGhOEd7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrtndmreop4gqo4mjdzn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EGhOEd7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrtndmreop4gqo4mjdzn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.The clipboard icon for copying the URL to clone a repository&lt;/p&gt;

&lt;p&gt;5.Open Terminal&lt;br&gt;
6.Change the current working directory to the location where you want the cloned directory.&lt;br&gt;
7.Type git clone, and then paste the URL you copied earlier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;8.Press Enter to create your local clone.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY
&amp;gt; Cloning into `Spoon-Knife`...
&amp;gt; remote: Counting objects: 10, done.
&amp;gt; remote: Compressing objects: 100% (8/8), done.
&amp;gt; remove: Total 10 (delta 1), reused 10 (delta 1)
&amp;gt; Unpacking objects: 100% (10/10), done.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#method-2-using-github-desktop"&gt;
  &lt;/a&gt;
  Method 2 ‚Äì Using GitHub Desktop
&lt;/h2&gt;

&lt;p&gt;1.Go to GitHub.com, navigate to the main page of the repository.&lt;/p&gt;

&lt;p&gt;2.Above all the code you will find a Code button in green colour click it to open a small tab.&lt;br&gt;
"Code" button&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hmIj_nMC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vz1rdpfoego2my6q9qt5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hmIj_nMC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vz1rdpfoego2my6q9qt5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.Click on GitHub desktop to clone and open the repository with GitHub Desktop.&lt;br&gt;
"Open with GitHub Desktop" button&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kOBrkqTs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aad0zx2drumlqm7yc0wc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kOBrkqTs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aad0zx2drumlqm7yc0wc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.Follow the prompts in GitHub Desktop to complete the clone.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;With this, you will have a folder created on your local machine with git initiated in it. Now any changes that you make in that folder can be committed easily to GitHub again.&lt;/p&gt;

&lt;p&gt;In this document we took a deep look at git clone. The most important takeaways are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;git clone is used to create a copy of a target repo&lt;/li&gt;
&lt;li&gt;The target repo can be local or remote&lt;/li&gt;
&lt;li&gt;Git supports a few network protocols to connect to remote repos&lt;/li&gt;
&lt;li&gt;There are many different configuration options available that change the content of the clone&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you face any problem with the above steps, just comment below. Read my blogs at sanjaysinghrajpoot.me &lt;/p&gt;

</description>
      <category>github</category>
      <category>githunt</category>
      <category>git</category>
    </item>
    <item>
      <title>Solution: Maximum Performance of a Team</title>
      <author>seanpgallivan</author>
      <pubDate>Sat, 05 Jun 2021 10:01:26 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-maximum-performance-of-a-team-244n</link>
      <guid>https://dev.to/seanpgallivan/solution-maximum-performance-of-a-team-244n</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/maximum-performance-of-a-team/discuss/1252316"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-1383-hard-maximum-performance-of-a-team"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/maximum-performance-of-a-team/"&gt;Leetcode Problem #1383 (&lt;em&gt;Hard&lt;/em&gt;): Maximum Performance of a Team&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You are given two integers &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;k&lt;/code&gt; and two integer arrays &lt;code&gt;speed&lt;/code&gt; and &lt;code&gt;efficiency&lt;/code&gt; both of length &lt;code&gt;n&lt;/code&gt;. There are &lt;code&gt;n&lt;/code&gt; engineers numbered from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;n&lt;/code&gt;. &lt;code&gt;speed[i]&lt;/code&gt; and &lt;code&gt;efficiency[i]&lt;/code&gt; represent the speed and efficiency of the &lt;code&gt;i&lt;/code&gt;th engineer respectively.&lt;/p&gt;

&lt;p&gt;Choose &lt;strong&gt;at most&lt;/strong&gt; &lt;code&gt;k&lt;/code&gt; different engineers out of the &lt;code&gt;n&lt;/code&gt; engineers to form a team with the maximum &lt;strong&gt;performance&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The performance of a team is the sum of their engineers' speeds multiplied by the minimum efficiency among their engineers.&lt;/p&gt;

&lt;p&gt;Return the maximum performance of this team. Since the answer can be a huge number, return it &lt;strong&gt;modulo&lt;/strong&gt; &lt;code&gt;10^9 + 7&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;We have the maximum performance of the team by selecting engineer 2 (with speed=10 and efficiency=4) and engineer 5 (with speed=5 and efficiency=7). That is, performance = (10 + 5) * min(4, 7) = 60.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;68&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;This is the same example as the first but k = 3. We can select engineer 1, engineer 2 and engineer 5 to get the maximum performance of the team. That is, performance = (2 + 10 + 5) * min(5, 4, 7) = 68.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= &amp;lt;= k &amp;lt;= n &amp;lt;= 10^5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;speed.length == n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;efficiency.length == n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= speed[i] &amp;lt;= 10^5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= efficiency[i] &amp;lt;= 10^8&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The trick to this problem, like many best product of &lt;strong&gt;x&lt;/strong&gt; and &lt;strong&gt;y&lt;/strong&gt; problems, is to find a way to iterate through one of the values in order, then evaluate the other value for each combination and take the &lt;strong&gt;best&lt;/strong&gt; result. If we sort the engineers by &lt;strong&gt;efficiency&lt;/strong&gt;, we can iterate downward through the engineers while evaluating the combined speed (&lt;strong&gt;totalSpeed&lt;/strong&gt;) of the ideal group.&lt;/p&gt;

&lt;p&gt;Since the index numbers between &lt;strong&gt;speed&lt;/strong&gt; and &lt;strong&gt;efficiency&lt;/strong&gt; correspond to each other, we shouldn't just sort &lt;strong&gt;efficiency&lt;/strong&gt;, however. Instead, we can create another array of arrays (&lt;strong&gt;ord&lt;/strong&gt;) with both stats combined into one array, then sort it based on the efficiency.&lt;/p&gt;

&lt;p&gt;As we iterate through the engineers in &lt;strong&gt;ord&lt;/strong&gt; order and add them to the available pool, we know that all the engineers so far are at or higher than &lt;strong&gt;minEff&lt;/strong&gt;, so we're free to only choose the &lt;strong&gt;k&lt;/strong&gt; fastest engineers for our group. To keep track of the sorted order of speeds of the engineers in our available pool, we can use a &lt;strong&gt;min priority queue&lt;/strong&gt; (&lt;strong&gt;sppq&lt;/strong&gt;) or &lt;strong&gt;min heap&lt;/strong&gt; (&lt;strong&gt;spheap&lt;/strong&gt;) structure. This way, we can eliminate the slowest engineer from our pool every time we add an engineer over the &lt;strong&gt;k&lt;/strong&gt; limit. At each stop, we should also find the product of &lt;strong&gt;totalSpeed&lt;/strong&gt; and the current minimum efficiency and update the &lt;strong&gt;best&lt;/strong&gt; result if necessary.&lt;/p&gt;

&lt;p&gt;It's important to note that the instructions say "at most" &lt;strong&gt;k&lt;/strong&gt; engineers, so we should start keeping track of &lt;strong&gt;best&lt;/strong&gt; right away. Also, we should remember to &lt;strong&gt;modulo 1e9+7&lt;/strong&gt; before we &lt;strong&gt;return best&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N * log(N))&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of &lt;strong&gt;speed&lt;/strong&gt; or &lt;strong&gt;efficiency&lt;/strong&gt;, for the sorting of &lt;strong&gt;ord&lt;/strong&gt; and for the priority queue / heap&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(N)&lt;/strong&gt; for &lt;strong&gt;ord&lt;/strong&gt; and &lt;strong&gt;sppq&lt;/strong&gt; / &lt;strong&gt;spheap&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;The Javascript code would be even faster with a custom &lt;strong&gt;heap&lt;/strong&gt; implementation. The &lt;strong&gt;MinPriorityQueue()&lt;/strong&gt; npm is easier to use, but not as efficient.&lt;/p&gt;

&lt;p&gt;Javascript is faster by passing only the index reference into the priority queue, rather than combining both stats into an array before storage.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;maxPerformance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sppq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MinPriorityQueue&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="nx"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;eng&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;eng&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;BigInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;eng&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;BigInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;eng&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dequeue&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;BigInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;eng&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000000007&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;maxPerformance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;ord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;spheap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;eff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;heappush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spheap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spheap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;heappop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spheap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;eff&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000000007&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;maxPerformance&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;efficiency&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;ord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
            &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;efficiency&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]};&lt;/span&gt;
        &lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;compare&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]));&lt;/span&gt;
        &lt;span class="nc"&gt;PriorityQueue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sppq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;PriorityQueue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spd&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;poll&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000000007&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;maxPerformance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]});&lt;/span&gt;
        &lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rbegin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rend&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;priority_queue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;spd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000000007&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Python development environment in a Docker container</title>
      <author>Mike</author>
      <pubDate>Sat, 05 Jun 2021 09:46:24 +0000</pubDate>
      <link>https://dev.to/mikecase/python-development-environment-in-a-docker-container-4hg8</link>
      <guid>https://dev.to/mikecase/python-development-environment-in-a-docker-container-4hg8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#purpose"&gt;
  &lt;/a&gt;
  Purpose
&lt;/h2&gt;

&lt;p&gt;Create and setup a python development environment inside of docker in 5 minutes. (Also more or less a journal to myself of how to do this)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-to-know"&gt;
  &lt;/a&gt;
  What to know
&lt;/h2&gt;

&lt;p&gt;You will need to understand virtual environments with python. I will place the commands that are needed for setting up the virtual environment but will not expand upon them. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-need"&gt;
  &lt;/a&gt;
  What you need
&lt;/h2&gt;

&lt;p&gt;Python 3.8 is the version I'll be using in this tutorial.&lt;br&gt;
Python modules you will need are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;fastapi&lt;/li&gt;
&lt;li&gt;hypercorn&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;a few files will need to be created.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;main.py&lt;/li&gt;
&lt;li&gt;Dockerfile&lt;/li&gt;
&lt;li&gt;.dockerignore&lt;/li&gt;
&lt;li&gt;docker-compose.yml&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following commands will install and create the files you need.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;main.py Dockerfile .dockerignore docker-compose.yml
pip &lt;span class="nb"&gt;install &lt;/span&gt;fastapi hypercorn
pip freeze &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-files"&gt;
  &lt;/a&gt;
  The files
&lt;/h2&gt;

&lt;p&gt;Now to modify the files you just created. Lets start with the fastapi application. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-raw-mainpy-endraw-"&gt;
  &lt;/a&gt;
  in &lt;code&gt;main.py&lt;/code&gt;:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'key'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'value'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code sets up a very basic fastapi application. &lt;br&gt;
First you import FastAPI from fastapi&lt;br&gt;
next you instantiate the app.&lt;br&gt;
then you decorate your index with &lt;code&gt;@app.get('/')&lt;/code&gt;&lt;br&gt;
and finally you return a dictionary. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#next-in-raw-dockerfile-endraw-"&gt;
  &lt;/a&gt;
  Next in &lt;code&gt;Dockerfile&lt;/code&gt;:
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; python:3.8-slim&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app/&lt;/span&gt;
&lt;span class="k"&gt;ADD&lt;/span&gt;&lt;span class="s"&gt; requirements.txt /app/&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt

&lt;span class="k"&gt;ADD&lt;/span&gt;&lt;span class="s"&gt; . /app/&lt;/span&gt;

&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8005&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["hypercorn", "main:app", "--bind", "0.0.0.0:8000", "--reload"]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The above file creates a configuration for docker. It pulls a base image from the dockerhub. This uses &lt;code&gt;python:3.8-slim&lt;/code&gt; as the base image. Next we set our Work Directory to &lt;code&gt;/app/&lt;/code&gt; in the container. &lt;br&gt;
after that we add only our &lt;code&gt;requirements.txt&lt;/code&gt; to that app directory. then we can run pip install inside the container to install our app requirements, and setup our environment inside the container. After that we add the rest of our app to our &lt;code&gt;/app/&lt;/code&gt; directory on the container expose the port we want to be able to connect to this on and run hypercorn which was installed when we did &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#now-for-raw-dockerignore-endraw-"&gt;
  &lt;/a&gt;
  Now for &lt;code&gt;.dockerignore&lt;/code&gt;:
&lt;/h2&gt;

&lt;p&gt;you don't have a need to include your .venv folder because you will be creating a virtual environment in the container. &lt;/p&gt;

&lt;p&gt;Also you don't need the pycache directories on the container(waste of space).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.venv/
__pycache__/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#now-for-raw-dockercomposeyml-endraw-"&gt;
  &lt;/a&gt;
  Now for &lt;code&gt;docker-compose.yml&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;which will put it all together for us. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note:
&lt;/h2&gt;

&lt;p&gt;if you copy and paste and have issues with the .yml file you may need to check and see if the indentations are spaces or tabs. If they are tabs they will need to be converted to spaces. &lt;br&gt;
It's a yaml thing..&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3.8'&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;api&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fastapiapp:latest&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;8005:8000&lt;/span&gt;
        &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bind&lt;/span&gt;
              &lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
              &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/app/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ok this is the last file. This file holds the container build/config instructions. It will also in this instance build the image for us. It will read the Dockerfile in the current working directory and build and app called &lt;code&gt;fastapiapp&lt;/code&gt; with the tag &lt;code&gt;latest&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To run it all and see some progress, you should now be able to run &lt;code&gt;docker-compose buid &amp;amp;&amp;amp; docker-compose up -d&lt;/code&gt; and it should build and bring up your docker development environment. The first time it runs it may take a minute or to to come up, but after that it should be utilizing the build cache in docker to only rebuild/add the code that you modified. It will be accessable from &lt;a href="http://127.0.0.1:8005"&gt;127.0.0.1:8005&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I chose port 8005 because I have containers running on the previous 5 ports. You can use in the Dockerfile and docker-compose.yml file what ever port you'd like. The mapping of the ports is &lt;code&gt;hostport:containerport&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Bind mount volumes are used in this instance to allow you to modify the code in the current directory and it should also update in the container at the same time. The only time you will need to make a build is when/if you add new python modules. Because they will need to be recompiled and installed into the container. So also remember to run another &lt;code&gt;pip freeze &amp;gt; requirements.txt&lt;/code&gt; if you install new modules. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A couple of helper scripts to make the process easier. &lt;br&gt;
&lt;code&gt;build.sh&lt;/code&gt;&lt;br&gt;
with the contents of:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nt"&gt;--pull&lt;/span&gt; &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="s2"&gt;"Dockerfile"&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; fastapiapp:latest &lt;span class="s2"&gt;"."&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;And a script for running the container in &lt;code&gt;up.sh&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="s2"&gt;"docker-compose.yml"&lt;/span&gt; up &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;--build&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#things-to-check-when-it-all-goes-wrong"&gt;
  &lt;/a&gt;
  Things to check when it all goes wrong.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Is port 8005 open on your firewall at least for the local connection? &lt;/li&gt;
&lt;li&gt;Is the container running? &lt;/li&gt;
&lt;li&gt;- &lt;code&gt;docker ps&lt;/code&gt; the image name should be &lt;code&gt;fastapiapp:latest&lt;/code&gt; if it is listed without running &lt;code&gt;docker ps -a&lt;/code&gt; then it is running.&lt;/li&gt;
&lt;li&gt;If it's not running you need to check the logs &lt;code&gt;docker logs -f container_name&lt;/code&gt; generally you can see the issue pretty clearly. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#github-repo"&gt;
  &lt;/a&gt;
  github repo
&lt;/h2&gt;

&lt;p&gt;All of the above mentioned files will be in a &lt;a href="https://github.com/MikeCase/fastapi-docker"&gt;repository&lt;/a&gt; on my github.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>python</category>
      <category>fastapi</category>
      <category>docker</category>
    </item>
    <item>
      <title>Top 5 Reasons Why Ethereum Is Best Crypto for Investment</title>
      <author>saurabh</author>
      <pubDate>Sat, 05 Jun 2021 09:40:06 +0000</pubDate>
      <link>https://dev.to/saurabh88510696/top-5-reasons-why-ethereum-is-best-crypto-for-investment-275o</link>
      <guid>https://dev.to/saurabh88510696/top-5-reasons-why-ethereum-is-best-crypto-for-investment-275o</guid>
      <description>&lt;p&gt;Ethereum empowered the blockchain‚Äôs adoption that transcended beyond the exchange of value via Bitcoin by deploying decentralized solutions in process management.&lt;/p&gt;

&lt;p&gt;Whether it was to mitigate complex documentation in the maritime sector or making the supply chain future proof, smart-contracts powered by Ethereum Network have made operations simpler for businesses. One could well say the cliche ‚Äú good going Ethereum,‚Äù but was that enough? Perhaps, the potent of the Ethereum Network was yet to be explored that  DeFi or Decentralized Financing powered by Dapps brought it to the public after all. &lt;/p&gt;

&lt;p&gt;That said, a 400% to 2000% jump in Etherum rates that started with $1 in 2015 shouldn‚Äôt surprise you now. If you are new to the cryptocurrency space, it is the right time to buy Ethereum in India since the DeFi market is exploding post the release of over 200 successful projects. Here are five good reasons to visit cryptocurrency exchange in India and invest in Ethereum or ETH. Let‚Äôs deep dive without any further ado! &lt;/p&gt;

&lt;p&gt;Why Active and Passive Investors Must Consider Ethereum for Their Investment Portfolio in 2020?&lt;/p&gt;


&lt;h2&gt;A Potential Super World Computer&lt;/h2&gt; 

&lt;p&gt;Smart-contracts, if anyone asks why?  You can show them how Dapps have empowered the DeFi projects by bringing finance close to everyone without regulations using smart-contracts. The Dapps working on a secure Ethereum Network empower a host of functions from securing ownership and copyrights in ERC-777 Smart-Contracts to minting tokens powered by ERC-20 standards to acting like automated market makers. Using the Ethereum Network, a trustless, decentralized ecosystem can be established, which can help you to own properties, stocks, and valuables in other countries without going through a slew of compliances and regulations. The only requirement is a mobile phone and Internet connection to perform various operations from validating, listing to transferring value across the world. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Theory of Tokenization&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;At present, roughly 40 million people are aware of blockchain, its use cases in the form of digital assets. But in approximately five years down the line, blockchain is expected to grow at a CAGR or Compounded Annual Growth Rate of 67.3%, becoming a US$39.7 billion economy from US$3 billion at present. That being said, the theory of tokenization will be dominant, all-pervasive, and result-driven.&lt;br&gt;
 Even the World Economic Forum has vouched for blockchain technology where almost 10% of the Global GDP will be stored on DLT or Decentralized Ledger Technology. As a result, it is not far-fetched anticipation that tokenization  of everything will simplify operations and prevent economic loss.  Whether it is saving the rights of artists, bringing transparency in real-estate, or verifying education certificates, land records, or luxurious goods, everything will move towards blockchanization or the theory of tokenization. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Uncensored App Demand&lt;/b&gt; &lt;/p&gt;

&lt;p&gt;Most social media platforms and other forums are under the influence of the government or private players  to run their own agenda and hide things that do not fulfill their greater good. This doesn‚Äôt just happen at a macro level like countries but even by corporates to hide their public shaming issues. In countries like China, where most of the information has to pass through government filter, the deep inroads of decentralized ledger technology will help the public usher in the age of getting the right to be informed always.&lt;/p&gt;

&lt;p&gt;A lot of misconducts like sexual violence in college, university bad records are not made available to the public, blockchain platform powered by the Ethereum Network will pave the way for a trustless and censorless environment, where people will have the right to know everything and that can happen only when everything is stored in a trustless, decentralized ledger system, the best part is no one can shut it down to fulfill their own agenda. Therefore, individuals can extract necessary data as and when required to influence critical rationale to eliminate false agendas or bad influences tailored to serve vile purposes. While buying Ethereum from any cryptocurrency exchange in India, you will bolster the scope of further scalability of the network to grow and thrive, in the process, incentivizing you for your investments. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;A Greater Scope for Innovation&lt;/b&gt; &lt;/p&gt;

&lt;p&gt;Almost 1 billion people across the world are unbanked or face challenges to wire themselves to the banking network, their key obstacles: Regulations and stricter policies. Ethereum has almost brought a storm with the DeFi projects where anyone can participate in the banking system which is completely decentralized and get benefits of consistent return from the same. The same goes for registering art or minting tokens for value exchange. &lt;br&gt;
The scope has been broadening with the passage of time and the launch of Ethereum 2.0 which will further open the scope for innovation. Smart-contracts have completely simplified lending, borrowing, collateralization, derivative-trading, and other functions.  With the demand for  DeFi projects rising exponentially where the market cap rose from US$1 billion in April 2020 to US$15 billion in September, a span of just 5 months, it is hard to deny that more innovations likely in the future will drive the demand for the network and push the value of ETH in the near future to the sky. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Diversification of Application&lt;/b&gt; &lt;/p&gt;

&lt;p&gt;Bitcoin just remained as a currency for exchange, but Ethereum has gone past that via smart-contracts. With the power of smart-contracts, people have changed the question from ‚Äúis it on the blockchain‚Äù to ‚Äúwhy it is not on the blockchain.‚Äù That said, the scope for blockchain integration in various sectors has increased manifolds allowing better chances of the technology to evolve from early adoption to majority dominance. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Conclusion&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Ethereum‚Äôs persistent growth has brought economic incentivization to the community and with threats from alternative networks like Polkadot and Avalance, often hailed as ‚ÄúETH killers‚Äù, this supercomputing network is expected to bring greater advancements, innovations, and scalability solutions to support and strengthen investment for the near future. Hence, buying Ethereum in India wouldn‚Äôt be a bad choice after all. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;read more to&lt;/b&gt; &lt;a href="https://www.pcexmember.in/buy-ethereum-online-india"&gt;Buy Ethereum in India&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ethereum</category>
      <category>blockchain</category>
      <category>cryptocurrencyinvestment</category>
    </item>
    <item>
      <title>Find Largest and Smallest Element in an Array</title>
      <author>Mayank Pathak</author>
      <pubDate>Sat, 05 Jun 2021 09:09:02 +0000</pubDate>
      <link>https://dev.to/mayankpathak/find-largest-and-smallest-element-in-an-array-53fj</link>
      <guid>https://dev.to/mayankpathak/find-largest-and-smallest-element-in-an-array-53fj</guid>
      <description>&lt;p&gt;Hello guysüëã, In this post we gonna check another most basic but most important programming problem in which we have to &lt;strong&gt;find the Largest and Smallest Element in an Array&lt;/strong&gt;. This problem‚ùì I solved when I was practicing‚úç for the concept Array and thoughtü§î that it will be useful if I share this problem with all those who are currently learning and practicing the Codingüë®‚Äçüíª.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-description"&gt;
  &lt;/a&gt;
  Problem Description
&lt;/h3&gt;

&lt;p&gt;Write a program to find the largest and smallest element in an array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample input:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;6&lt;/p&gt;

&lt;p&gt;20 25 100 95 45 5&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The largest element in the array is : 100&lt;/p&gt;

&lt;p&gt;The smallest element in the array is : 5&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pKgXfcEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1pjq1bcfw6h3aycpzdt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pKgXfcEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1pjq1bcfw6h3aycpzdt.png" alt="Largest and Smallest Element in an Array"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#procedure-to-follow-to-get-the-required-sets-of-result"&gt;
  &lt;/a&gt;
  Procedure to follow to get the required sets of result
&lt;/h3&gt;


&lt;ol&gt;

&lt;li&gt;Declare the required variables.&lt;/li&gt;


&lt;li&gt;Take the inputs form the user keyboard.&lt;/li&gt;


&lt;li&gt;Assign the max and to the initial or first element of the array.&lt;/li&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;              i.e., max = min = a[0]
&lt;/code&gt;&lt;/pre&gt;



&lt;li&gt;If there is only one element present in the array then the loop did not execute and max, min hold the only present value in the array, thus that element becomes the both maximum and minimum.&lt;/li&gt;


&lt;li&gt;If array has more than one element, than loop executes and if any element found bigger than the previously assigned value, then that element becomes the largest.&lt;/li&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;             i.e.,  if (a[i] &amp;gt; max )  then max = a[i]
&lt;/code&gt;&lt;/pre&gt;



&lt;li&gt;Similarly, if any element found smaller than the previously assigned value, than that element becomes the smallest.&lt;/li&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;               i.e.,  if (a[i] &amp;lt; min )  then min = a[i]
&lt;/code&gt;&lt;/pre&gt;



&lt;li&gt;At last maximum and minimum elements are displayed as per the result output.&lt;/li&gt;
&lt;h3&gt;
  &lt;a href="#now-lets-come-to-the-coding-part-of-the-problem"&gt;
  &lt;/a&gt;
  Now let's come to the codingüë®‚Äçüíª part of the problem
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h4&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
/*Code is written in C++ language*/
  #include &amp;lt;iostream&amp;gt;
  using namespace std;
  int main() {
    int n,min,max;
    cin&amp;gt;&amp;gt;n;
    int arr[n];
    for(int i=0;i&amp;lt;n;i++)
    {
        cin&amp;gt;&amp;gt;arr[i];
    }
    min=max=arr[0];
    for(int i=0;i&amp;lt;n;i++)
    {
        if(arr[i]&amp;lt;min)
        {
            min=arr[i];
        }
        if(arr[i]&amp;gt;max)
        {
            max=arr[i];
        }
     }
    cout&amp;lt;&amp;lt;"The largest element in the array is : "&amp;lt;&amp;lt;max;
    cout&amp;lt;&amp;lt;endl;
    cout&amp;lt;&amp;lt;"The smallest element in the array is : "&amp;lt;&amp;lt;min;
    return 0;
  }

&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;The same set of code is compiled on the online compiler to provide the outputs as per the condition asked in the problem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input test&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
6
20 25 100 95 45 5

&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;&lt;strong&gt;Output test&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
The largest element in the array is : 100
The smallest element in the array is : 5

&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;Hence with the required set of problem and its explaination we came across to know one of the important programming problem in Array and we can make the concept array strong with practicing such kinds of problem as much as we can.&lt;/p&gt;

&lt;p&gt;Hope with this you learned and acquired some basic knowledge and help you somewhat.&lt;/p&gt;

&lt;p&gt;Drop a Love‚ù§ if you likedüëç this post, then share ü§ùthis with your friends and if anything is confusing or incorrect then let me know in the comment section.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#i-would-love-to-connect-with-you-all-twitter-linkedin"&gt;
  &lt;/a&gt;
  I would love to connect with you all &lt;a href="//twitter.com/mayankp4513"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/mayank-pathak4513/"&gt;LinkedIn&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;If you find the post useful then consider &lt;strong&gt;&lt;a href="https://www.buymeacoffee.com/mayankpathak"&gt;Buying me a coffee&lt;/a&gt;‚òï&lt;/strong&gt;&lt;br&gt;
   &lt;a href="https://www.buymeacoffee.com/mayankpathak"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks from my side, this is Mayank, keep learning and exploring !!&lt;/p&gt;

&lt;p&gt;Meet you in the next article......till than see yaü§ö&lt;/p&gt;


&lt;/ol&gt;

</description>
      <category>codenewbie</category>
      <category>cpp</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Are you too old/young to learn programming?</title>
      <author>Saifullah Usmani</author>
      <pubDate>Sat, 05 Jun 2021 08:48:21 +0000</pubDate>
      <link>https://dev.to/saifullahusmani/are-you-too-old-young-to-learn-programming-4eha</link>
      <guid>https://dev.to/saifullahusmani/are-you-too-old-young-to-learn-programming-4eha</guid>
      <description>&lt;p&gt;Hi, my name is Saifullah Usmani. I am a Passionate Programmer and a Graphic Designer. I have been programming since I was 13. I have learned a lot over the years and I want to provide that experience and knowledge to the world.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This article is going to be very close to reality. I am not gonna motivate you like everyone else but I will tell you the truth. And then the choice is yours.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you are young:&lt;/strong&gt;&lt;br&gt;
If you are young like 13-26 (or more but you don't have any liabilities yet and you have time) then there is no need to ask this question at all. You can learn programming without any problem because this is the age where you have no liabilities and have time to learn anything. But you need to have passion to learn programming. If you don't have any passion towards programming then I suggest you to discover your passion and work on that. Don't get into programming for the sake of money or bright future. Because a job where you don't have any interest but good money is like a choice you choose with the price of your happiness and freedom which is not worth it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you are old:&lt;/strong&gt;&lt;br&gt;
If you are old like 50+. Then there are probably two reason you want to learn programming and that is more money or passion.&lt;br&gt;
If programming was your passion but you weren't able to get into it for any reason then I recommend you to go for it But be on the safe side if you have a family which is totally dependent on you and you don't have anyone to look after your family for financial needs like your children(or your children are young). If you want to get into programming for &lt;strong&gt;more money&lt;/strong&gt; then you must not go for it. You must not leave your job or any source of income but just learn programming in your free time. Because money attracts but it is not loyal(you will lose interest very soon) so don't switch immediately.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-reason-you-are-thinking-of-this-question"&gt;
  &lt;/a&gt;
  What is the reason you are thinking of this question?
&lt;/h2&gt;

&lt;p&gt;There are very few and similar reasons I found in people that keep them away from learning programming:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Fear of not being able to do it&lt;/li&gt;
&lt;li&gt;Time&lt;/li&gt;
&lt;li&gt;Job&lt;/li&gt;
&lt;li&gt;Lack of support&lt;/li&gt;
&lt;li&gt;Not enough resources&lt;/li&gt;
&lt;li&gt;Random misconceptions&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are the common reason that give birth to questions like: am I too old/young to learn programming, is programming for me, can I do programming, should I do programming, will I be a good programmer etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fear-of-not-being-able-to-do-it"&gt;
  &lt;/a&gt;
  Fear of not being able to do it:
&lt;/h2&gt;

&lt;p&gt;This fear is commonly spread by people who are not programmer but they do have misconceptions about programmers and programming. &lt;br&gt;
That is why whenever you discuss your idea of becoming a programmer with them they tell you a misconceptions like old people tell you a unreal horror story.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fear #1: Mathematics:&lt;/strong&gt;&lt;br&gt;
This is the most common one. Math is not used in programming so often. It is only used in fields where data is important like Machine Learning(ML), Artificial Intelligence(AI), Data Science or Robotics. So if you are not into any of those fields then knowing Mathematics is not a requirement at all other than just being able to use measurements for creating layouts(like px, mm, cm etc) and you are good to go.&lt;br&gt;
Now if you are interested in those fields of programming where Mathematics is a requirement then first learn a programming language for that specific field(Different Programming Languages are used for different purposes). After you have learned a Programming Language you will be able to narrow down to what you have to learn from a whole sea of the knowledge of Mathematics(You don't have to worry about Mathematics right now).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fear #2: You Need To Be A Genius:&lt;/strong&gt;&lt;br&gt;
Well my IQ is average. So that means no one has to be a genius to do coding. The type of coding you see in movies is also fake.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fear #3: I don't have a degree in Computer Science:&lt;/strong&gt;&lt;br&gt;
That is actually a valid argument to make. But in today's modern world tech companies are hiring people based on their skills not education. Also there are different options to earn from programming other than just jobs. You can start an online SAAS business or do freelancing or more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fear #4: You need a high tech system and resources:&lt;/strong&gt;&lt;br&gt;
Actually no. For programming you don't need a high tech system. You can even code on windows XP. But it also depends on the type of project you are working on. You have to do some research for that on your own because it cannot be written in a blog post as it is different for everyone.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fear #5: There are so many languages:&lt;/strong&gt;&lt;br&gt;
Yes it is true that there are hundreds of programming languages, tools and frameworks. But you don't have to learn all of them. You choose a Tech Stack and use that to build your projects.&lt;br&gt;
I have created a blog post for "&lt;a href="https://dev.to/saifullahusmani/complete-web-development-roadmap-122m"&gt;Complete Web Development Roadmap.&lt;/a&gt;" there you can see the collection of popular Tech Stacks for doing web development related work.&lt;/p&gt;

&lt;p&gt;There a lot of other fears, I can write thousands of words on them(But I don't want to waste your time, so let's continue) remember fear doesn't exist in reality. You can be a programmer if you want to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time"&gt;
  &lt;/a&gt;
  Time:
&lt;/h2&gt;

&lt;p&gt;This is the most common issue, how much time it will take, it will take so much time, I don't have enough time, is it worth it etc.&lt;/p&gt;

&lt;p&gt;Well this is a valid reason, but a valid reason for people who are doing a job or running a business. If you are a student or have no liability or spent more than 5 hours a day on social media then you are just being lazy and making excuses. If you have any passion or interest in programming then open up YouTube and start learning. &lt;/p&gt;

&lt;p&gt;Now the real problem is for people who are doing jobs. You need extra time. One thing you can do is if you are passionate about it then you can spend all of your time after office at home on programming. Learn this skill and start earning money with it via freelancing or by building online SAAS businesses so you can leave your job.&lt;/p&gt;

&lt;p&gt;Other thing is that you use your money wisely, build assets, make your passive income more than your expenses so you become financially stable and rich then you will have a lot of time to follow your passion or learn programming(I am being serious, read a book called "Rich Dad Poor Dad" and learn financial literacy.).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#job"&gt;
  &lt;/a&gt;
  Job:
&lt;/h2&gt;

&lt;p&gt;You are already doing a job and cannot leave it. But you have passion about programing so I advice you not to leave your job but try to learn programming in your free time and earn money from it via freelancing or building SAAS businesses. And then when you are satisfied with the income you are getting from programming then leave your job.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lack-of-support"&gt;
  &lt;/a&gt;
  Lack of support:
&lt;/h2&gt;

&lt;p&gt;Well that is actually a real thing, even your family won't support you especially in India, Pakistan earning money from computers is like a foolish concept and considered luck if someone actually earn money from it and considered as a non safe income stream.&lt;br&gt;
So no one will support you(sometime people do support as well), that is true but if you are passionate about it you can prove them that you are right in your decision. I don't mean arguing or misbehaving with your parents or family it is bad. I mean to say that achieve something from it and when your family will realize that this field have some scope and you are going in the right direction then they will support you too. Your parents only wants you to be one the safe side in the long run that is why they stop you from any adventure because they have seen the world. You have to satisfy them with your achievements that you are doing the right thing. It is hard but it is do-able.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#not-enough-resources"&gt;
  &lt;/a&gt;
  Not enough resources:
&lt;/h2&gt;

&lt;p&gt;You don't need a high tech computer as I mentioned above but you do need to have a computer or laptop to do proper coding. How can a solder fight without a sword. You need the sword otherwise you will fail. So earn money and buy a computer(it is a useless advice but it is the solution). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#random-misconception"&gt;
  &lt;/a&gt;
  Random misconception:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;misconception #1: Free courses are not good, buy paid courses:&lt;/strong&gt;&lt;br&gt;
People generally don't spend money on the things they are not sure about. And a fear of getting wrong information from free courses make them buy paid courses and they don't have or don't want to spend money on these courses so they never learn.&lt;br&gt;
The truth is YouTube is the only best thing to learn programming. I learned programming totally free on YouTube. And you will get the same content from paid courses but just with a name of a brand. I am not saying paid courses are bad I am just saying that the programming language is same it will not change so it doesn't matter from where you learn it. &lt;em&gt;You don't get paid for syntax(programming language code) you get paid for building logic&lt;/em&gt;. So start learning as soon as possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;misconception #2: Girls Don't/Can't Code:&lt;/strong&gt;&lt;br&gt;
Short answer, They do code. And they can Code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;misconception #3: Being Nerd:&lt;/strong&gt;&lt;br&gt;
This is another misconception about programmers that they are the nerds and they are very dull at social interactions and are boring and of dry personality. It is not true.&lt;br&gt;
Although many programmers are of quiet personality.&lt;br&gt;
&lt;em&gt;(I think that is because of the type of work they do. Using your brain constantly makes you intelligent, and when you know more you generally don't speak more. You see why apps and websites are so addictive because programmers know humans very well. They are quiet because they already know what you guys are thinking or talking about.(My personal thought))&lt;/em&gt;.&lt;br&gt;
But that doesn't mean they are like that all the time. In order to know or judge someone you must conversate with them.&lt;br&gt;
Think of programmer friends you have*(If none then you are also believing in an information that you can not even prove right or wrong with any reference.)* are they quiet all the time, if yes then how you became friendsüòÅ.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;misconception #4: Programming is not for kids:&lt;/strong&gt;&lt;br&gt;
Actually no, there are programming languages especially designed for kids(i.e scratch). Kids are also taught programming in many schools. Kids at the age of 8 can start learning coding and programming basics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;misconception #5: Boring Life:&lt;/strong&gt;&lt;br&gt;
Life of programmers is boring, dry and dull. They don't meet with people, they don't hangout, they don't have friends, their life only revolve around computers. Well that is actually not true at all. I don't know what to say more other than just &lt;strong&gt;NO&lt;/strong&gt; to every misconceptionüòÅ, that is why they are called misconceptions. You can google "Misconceptions about programmers" to know more misconceptions you might have about programmers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Your feedback is welcome!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-me"&gt;
  &lt;/a&gt;
  Follow me:
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Follow me here:&lt;/em&gt; &lt;a href="https://dev.to/saifullahusmani"&gt;https://dev.to/saifullahusmani&lt;/a&gt;&lt;br&gt;
&lt;em&gt;YouTube:&lt;/em&gt; &lt;a href="http://bit.ly/saifullahusmani"&gt;http://bit.ly/saifullahusmani&lt;/a&gt; (Programming Tutorials Coming Soon).&lt;br&gt;
&lt;em&gt;Discord:&lt;/em&gt; &lt;a href="https://discord.gg/AKyvy8Y"&gt;https://discord.gg/AKyvy8Y&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Facebook&lt;/em&gt;: &lt;a href="https://www.facebook.com/SaifullahUsmani693"&gt;https://www.facebook.com/SaifullahUsmani693&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>guide</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to stay motivated and focused as a developer? </title>
      <author>HARSH VATS</author>
      <pubDate>Sat, 05 Jun 2021 08:33:58 +0000</pubDate>
      <link>https://dev.to/harshvats2000/how-to-stay-motivated-and-focused-as-a-developer-37a</link>
      <guid>https://dev.to/harshvats2000/how-to-stay-motivated-and-focused-as-a-developer-37a</guid>
      <description>&lt;p&gt;The only way to stay motivated is to be around people who are doing something great daily. You can't stay motivated if you are around people who are doing the same stuff daily.&lt;/p&gt;

&lt;p&gt;Before learning to stay motivated, learn to not get demotivated. Things like your side projects can also demotivate you, trust me.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-avoid-getting-demotivated"&gt;
  &lt;/a&gt;
  How to avoid getting demotivated?
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#1-if-you-are-not-able-to-figure-out-something-even-after-spending-hours-on-it-then-call-it-off-for-that-day"&gt;
  &lt;/a&gt;
  1. If you are not able to figure out something, even after spending hours on it, then call it off for that day.
&lt;/h3&gt;

&lt;p&gt;At first, you might think that how can you find the solution to a problem if you wouldn't spend more time on it, but that's not always the case. I'm saying it by experience that sometimes, you need to keep your mind off the problem. Start fresh the next day, with a different perspective towards the problem, and you might find a solution within minutes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-if-someone-tells-you-that-you-are-in-the-wrong-direction-dont-just-listen-to-them-blindly"&gt;
  &lt;/a&gt;
  2. If someone tells you that you are in the wrong direction, don't just listen to them blindly.
&lt;/h3&gt;

&lt;p&gt;There will be several people who'll tell you to follow a different path to achieve the same target like becoming a web developer. There can be infinite ways to achieve the same thing and most people don't understand that. Don't make yourself uncomfortable with what they say. Instead, just keep going if you feel like you are making progress. You can't lie to yourself, you know whether you are making progress or not. If yes then keep going, if not, then take some time to reconsider.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-never-feel-guilty-about-time-wasted"&gt;
  &lt;/a&gt;
  3. Never feel guilty about time wasted.
&lt;/h3&gt;

&lt;p&gt;It happens to me many times. I play mobile games a lot(just one specifically called shadow fight arena). Sometimes, I think about it that I played that game for 2 hours last day, the precious time which I could've used to learn something or spend some time refactoring my old code. This generates a feeling of guilt and we don't feel like anything. Another day goes by doing nothing.&lt;/p&gt;

&lt;p&gt;I'm slowly trying to get out of this by inculcating a thought that playing a game should make me happy and relaxed Instead of filling me with guilt.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-dont-let-your-college-marks-decide-what-you-can-do"&gt;
  &lt;/a&gt;
  4. Don't let your college marks decide what you can do.
&lt;/h3&gt;

&lt;p&gt;I'll be honest here. I'm a below 6 pointer student who wants to learn more and more about how the web works. I want to learn how things work at a basic level. I don't just know React.js, I know what they do under the hood (almost and still learning). &lt;/p&gt;

&lt;p&gt;You can't call yourself a web lover if you don't know how DNS works.&lt;/p&gt;

&lt;p&gt;That's what I'm talking about, don't let my last sentence demotivate you. If you don't know how DNS works then learn it. This should be the attitude. If you don't have time right now, then make notes of what you need to learn and when. You will find yourself filled with motivation. You won't have time for the boring stuff.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-stay-motivated"&gt;
  &lt;/a&gt;
  How to stay motivated?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-read-online-articlesblogs-and-watch-tutorials"&gt;
  &lt;/a&gt;
  1. Read online articles/blogs and watch tutorials.
&lt;/h3&gt;

&lt;p&gt;You need to join a community of developers around you. The best part of being a developer is to have the freedom of creating anything that could reach millions of users overnight. But obviously, that requires a lot of skills other than being a developer. But at least you can think start building things on your own.&lt;/p&gt;

&lt;p&gt;You do know that Mark Zuckerberg made Facebook in his hostel room right?&lt;/p&gt;

&lt;p&gt;Well, I'm not saying go out there and make another Facebook, but there's a lot of other things that you can try. Remember one thing, you can't make it perfect just on the first try.&lt;/p&gt;

&lt;p&gt;If you knew success was a certainty, what would you attempt to do?&lt;/p&gt;

&lt;p&gt;That's the beauty of life. So keep trying and keep building stuff.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-whatever-you-build-make-sure-you-can-show-that-to-anyone"&gt;
  &lt;/a&gt;
  2. Whatever you build, make sure you can show that to anyone.
&lt;/h3&gt;

&lt;p&gt;A negative feeling can arise if you built something and now you cannot show that to someone. Keep your projects on the git and also showcase them on platforms like LinkedIn, in your blogs, on your website.&lt;/p&gt;

&lt;p&gt;Also, make sure that the project you are showing is complete, otherwise, it'll leave a negative impact. You'll see that these things can boost your confidence. Don't make anything public until you are happy with that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-always-spend-time-on-your-old-written-code"&gt;
  &lt;/a&gt;
  3. Always spend time on your old written code.
&lt;/h3&gt;

&lt;p&gt;This might not sound that effective but it works for me. Instead of wasting time just sitting idle, I like to spend some time refactoring my personal projects, add new features, or bug fixing.&lt;/p&gt;

&lt;p&gt;I am also making it a habit to spend some time on open source projects instead of just working on mine, that'll make me a really good developer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-humans-are-social-animal-are-you-human"&gt;
  &lt;/a&gt;
  4. Humans are social animal (Are you human?)
&lt;/h3&gt;

&lt;p&gt;Don't feel like you can do much by ditching friends and utilizing that time to code. You are a social animal, enjoy your life dude and keep exploring things.&lt;/p&gt;

&lt;p&gt;That's it for today. Have a good day devs. Let me know in the comments what else we can do to stay motivated and focused on our goal.&lt;/p&gt;

&lt;p&gt;Keep exploring things...&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>explainlikeimfive</category>
    </item>
    <item>
      <title>Normalization in Deep learning</title>
      <author>AI Pool</author>
      <pubDate>Sat, 05 Jun 2021 08:21:02 +0000</pubDate>
      <link>https://dev.to/aipool3/normalization-in-deep-learning-4m73</link>
      <guid>https://dev.to/aipool3/normalization-in-deep-learning-4m73</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;Deep learning is an exciting field in Artificial intelligence, it is at the forefront of the most innovative and exciting fields such as computer vision, reinforcement learning, and natural language processing. Deep learning has a complex architecture, which comes with some problems. These deep neural networks have tons of layers, which are difficult to train because they are responsive to the learning algorithm's initial random weights and configuration.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9rbc2t3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://files.ai-pool.com/a/bc86348d9d3a3ecdceeb6cfa89b13b6f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9rbc2t3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://files.ai-pool.com/a/bc86348d9d3a3ecdceeb6cfa89b13b6f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The input layer may have certain features which dominate the process, due to having high numerical values. This can create a bias in the network because only those features contribute to the outcome of the training. For example, imagine feature one having values between 1 and 5, and feature two having values between &lt;strong&gt;100&lt;/strong&gt; and &lt;strong&gt;10000&lt;/strong&gt;. During training, due to the difference in scale of both features, feature two would dominate the network and only that feature would have a contribution to the outcome of the model.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#batch-normalization"&gt;
  &lt;/a&gt;
  Batch Normalization
&lt;/h3&gt;

&lt;p&gt;Batch normalization is the most common form of normalization in deep learning. It scales the inputs to a layer to a common value for every mini-batch during the training of deep neural networks. This stabilizes the learning process and significantly reduces the number of epochs required to train deep networks, enabling the network to train faster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eukh7RWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://files.ai-pool.com/a/8446673bcaeb050168ff1666aff18bdd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eukh7RWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://files.ai-pool.com/a/8446673bcaeb050168ff1666aff18bdd.png" alt="BN"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The way batch normalization works are by calculating the mean and variance of every feature in the mini-batch, then the mean is subtracted and each feature is divided by the standard deviation of the mini-batch.&lt;/p&gt;

&lt;p&gt;You can find more in the following article &lt;a href="https://ai-pool.com/a/s/normalization-in-deep-learning"&gt;Normalization in Deep learning&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-resources"&gt;
  &lt;/a&gt;
  Other Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ai-pool.com/a/s/optimization-methods"&gt;Optimization Methods, Gradient Descent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ai-pool.com/a/s/diving-into-object-detection-basics"&gt;Diving into Object Detection Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ai-pool.com/a/s/understanding-of-support-vector-machine--svm"&gt;Understanding of Support Vector Machine (SVM)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ai-pool.com/a/s/introduction-of-fast-fourier-transformation--fft"&gt;Introduction of Fast Fourier Transformation (FFT)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aipool</category>
      <category>ai</category>
      <category>machinelearning</category>
      <category>normalization</category>
    </item>
    <item>
      <title>Color psychology in web design</title>
      <author>Eleftheria Batsou</author>
      <pubDate>Sat, 05 Jun 2021 08:10:27 +0000</pubDate>
      <link>https://dev.to/eleftheriabatsou/color-psychology-in-web-design-bk2</link>
      <guid>https://dev.to/eleftheriabatsou/color-psychology-in-web-design-bk2</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The goal of this article is to help you choose the right colors for your website.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Color usually depends on our personal experiences and preferences but there are also some universal signals. Choosing the right color can be a very challenging task. Individual differences can vary based on gender, age and culture. In a study titled ‚ÄúImpact of color on marketing‚Äù researchers found that up to 90% of snap judgments made about products can be based on color alone.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Here is a quick guide to help you pick the ‚Äúright‚Äù color based on psychology.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%F0%9F%8F%B3-white"&gt;
  &lt;/a&gt;
  üè≥ WHITE
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RZ6SELJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622831835436/Mrpyl4aEt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RZ6SELJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622831835436/Mrpyl4aEt.png" alt="white.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Hygiene, sterility, clarity, purity, cleanness, simplicity, sophistication, efficiency.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Sterility, coldness, barriers, unfriendliness, elitism.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-grey"&gt;
  &lt;/a&gt;
  „Ä∞ GREY
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PLQ4pFGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622831880092/lSEzMg0ya.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PLQ4pFGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622831880092/lSEzMg0ya.png" alt="grey.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Psychological neutrality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Lack of confidence, dampness, depression, hibernation, lack of energy.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#black"&gt;
  &lt;/a&gt;
  ‚ö´ BLACK
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U3Dh2oAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832059214/DLcQTzG_O.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3Dh2oAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832059214/DLcQTzG_O.png" alt="bhlack.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Sophistication, glamour, security, emotional safety, efficiency, substance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Oppression, coldness, menace, heaviness.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#yellow"&gt;
  &lt;/a&gt;
  üü® YELLOW
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---V5WIvY8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832122390/QOxe_jV0e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---V5WIvY8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832122390/QOxe_jV0e.png" alt="yellow.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Optimism, confidence, self-esteem, extraversion, emotional strength, friendliness, creativity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Irrationality, fear, emotional fragility, depression, anxiety, suicide.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#orange"&gt;
  &lt;/a&gt;
  üçä ORANGE
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vdHxXMiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832184583/YmUs6bAsq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vdHxXMiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832184583/YmUs6bAsq.png" alt="orange.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Physical comfort, food, warmth, security, sensuality, passion, abundance, fun.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Deprivation, frustration, frivolity, immaturity.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#brown"&gt;
  &lt;/a&gt;
  ü§é BROWN
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mlfDzO16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832212923/wq9zTwvvx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mlfDzO16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832212923/wq9zTwvvx.png" alt="brown.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Seriousness, warmth, Nature, earthiness, reliability, support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Lack of humor, heaviness, lack of sophistication.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pink"&gt;
  &lt;/a&gt;
  üê∑ PINK
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rfPVXSEz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832342114/HMy4pPtfj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rfPVXSEz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832342114/HMy4pPtfj.png" alt="pink.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Physical tranquillity, nurture, warmth, femininity, love, sexuality, survival of the species.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Inhibition, emotional claustrophobia, emasculation, physical weakness.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#red"&gt;
  &lt;/a&gt;
  üçí RED
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UdrTXblI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832352873/ZXLBt3FI6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UdrTXblI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832352873/ZXLBt3FI6.png" alt="red.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Physical courage, strength, warmth, energy, basic survival, ‚Äòfight or flight‚Äô, stimulation, masculinity, excitement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Defiance, aggression, visual impact, strain.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%E2%99%BE-violet"&gt;
  &lt;/a&gt;
  ‚ôæ VIOLET
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L6ZHCxMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832453686/mKPfQo64b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L6ZHCxMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832453686/mKPfQo64b.png" alt="violet.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Spiritual awareness, containment, vision, luxury, authenticity, truth, quality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Introversion, decadence, suppression, inferiority.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#green"&gt;
  &lt;/a&gt;
  üçè GREEN
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hYatm0rX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832469489/JDshGpl3j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hYatm0rX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832469489/JDshGpl3j.png" alt="green.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Harmony, balance, refreshment, universal love, rest, restoration, reassurance, environmental awareness, equilibrium, peace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Boredom, stagnation, blandness, reservation.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#blue"&gt;
  &lt;/a&gt;
  üìò BLUE
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OjajbWkM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832482590/v2308LSpB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OjajbWkM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832482590/v2308LSpB.png" alt="blue.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Intelligence, communication, trust, efficiency, serenity, duty, logic, coolness, reflection, calm.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Coldness, aloofness, lack of emotion, unfriendliness.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Choosing an appropriate color combination in the design process is considered one of the most important (yet often overlooked) elements in creating a successful website.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#quick-tips"&gt;
  &lt;/a&gt;
  Quick tips
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Focus on the target audience&lt;/li&gt;
&lt;li&gt;Be mindful of the background color as well as the font color&lt;/li&gt;
&lt;li&gt;Color chooser tools can be very helpful&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=yj2Akhmx2oU"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hNhU-CC3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/yj2Akhmx2oU/0.jpg" alt="IMAGE ALT TEXT HERE"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Don‚Äôt use too many colors, usually 2‚Äì4 are enough&lt;/li&gt;
&lt;li&gt;Get some inspiration and make some research before your final decision&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=569Q2r0Z-5w"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DPE9imSW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/569Q2r0Z-5w/0.jpg" alt="IMAGE ALT TEXT HERE"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#to-sum-up"&gt;
  &lt;/a&gt;
  To sum up
&lt;/h1&gt;

&lt;p&gt;Every color has its purpose. Choose your colors wisely. If you are not sure how to pick the right one or the right combination to be afraid to ask a specialist to help you. Make your own research too. Check your competitors.&lt;/p&gt;




&lt;p&gt;üëãHello, I'm Eleftheria, a developer, public speaker, and chocolate lover.&lt;/p&gt;

&lt;p&gt;ü•∞If you liked this post please share.&lt;/p&gt;

&lt;p&gt;üç©Would you care about buying me a coffee? You can do it &lt;a href="https://www.buymeacoffee.com/elef/"&gt;here&lt;/a&gt; but If you can't that's ok too!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.paypal.com/paypalme/eleftheriabatsou"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7QXiTcCu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616336641314/ycZgZ44G3.gif" alt="cofGif.gif"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;üôèIt would be nice to subscribe to my &lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; channel. It‚Äôs free and it helps to create more content.&lt;/p&gt;

&lt;p&gt;üåà&lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; | &lt;a href="https://codepen.io/EleftheriaBatsou"&gt;Codepen&lt;/a&gt; | &lt;a href="https://github.com/EleftheriaBatsou"&gt;GitHub&lt;/a&gt; | &lt;a href="https://twitter.com/BatsouElef"&gt;Twitter&lt;/a&gt; | &lt;a href="http://eleftheriabatsou.com/"&gt;Site&lt;/a&gt; | &lt;a href="https://www.instagram.com/elef_in_tech"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>design</category>
      <category>color</category>
      <category>brand</category>
      <category>uidesign</category>
    </item>
    <item>
      <title>Object Oriented Programming with TypeScript</title>
      <author>Kevin Odongo</author>
      <pubDate>Sat, 05 Jun 2021 07:39:53 +0000</pubDate>
      <link>https://dev.to/kevin_odongo35/object-oriented-programming-with-typescript-574o</link>
      <guid>https://dev.to/kevin_odongo35/object-oriented-programming-with-typescript-574o</guid>
      <description>&lt;p&gt;Hey Dev's&lt;/p&gt;

&lt;p&gt;How has been your week? I hope everyone had a great week. In todays tutorial let us go through Object Oriented Programming (OOP). &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Object Oriented programming (OOP) is a programming paradigm that relies on the concept of classes and objects. It is used to structure a software program into simple, reusable pieces of code blueprints (usually called classes), which are used to create individual instances of objects&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Object programming is well-suited for programs that are large, complex and actively updated or maintained.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Object class represents one of JavaScript's data types. It is used to store various keyed collections and more complex entities. Objects can be created using the Object() constructor or the object initializer / literal syntax.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Below is an example of an object class. In this example we have defined a Person with some attributes and a method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// person class&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="c1"&gt;// default&lt;/span&gt;
   &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="c1"&gt;// default &lt;/span&gt;

   &lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// to create a new instance of a class&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Kevin Odongo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// This should render Kevin Odongo 36&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#benefits-of-object-oriented-programming"&gt;
  &lt;/a&gt;
  Benefits of Object Oriented Programming
&lt;/h4&gt;

&lt;p&gt;Some of the benefits of Object Oriented Programming are as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Easier debuging&lt;/li&gt;
&lt;li&gt;Reuse of code through inheritance&lt;/li&gt;
&lt;li&gt;Flexibility through polymorphism&lt;/li&gt;
&lt;li&gt;Effective problem solving&lt;/li&gt;
&lt;li&gt;Project decoupling (Separate project into groups)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y9cOB5A8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u177p2snys0g9dd40xyn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y9cOB5A8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u177p2snys0g9dd40xyn.jpg" alt="Make this day great"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#principles-of-object-oriented-programming"&gt;
  &lt;/a&gt;
  Principles of Object Oriented Programming
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#encapsulation"&gt;
  &lt;/a&gt;
  Encapsulation.
&lt;/h3&gt;

&lt;p&gt;The implementation and state of each object are privately held inside a defined boundary, or class. Other objects do not have access to this class or the authority to make changes but are only able to call a list of public functions, or methods. This characteristic of data hiding provides greater program security and avoids unintended data corruption.&lt;/p&gt;

&lt;p&gt;Take a look at this example. In the example we have defined two object classes and created an instance of each. So in layman term encapsulation principle states that the new instance of &lt;strong&gt;motor1&lt;/strong&gt; cannot access the attributes of &lt;strong&gt;person1&lt;/strong&gt;. If you try you should get such a warning.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Property 'age' does not exist on type 'Motor'&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// person object&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
   &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// motor vehicle object&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Motor&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;make&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
  &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
  &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// create a new instance of each&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;motor1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Motor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;// warning Property 'age' does not exist on type 'Motor'&lt;/span&gt;
&lt;span class="nx"&gt;motor1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#abstraction"&gt;
  &lt;/a&gt;
  Abstraction.
&lt;/h3&gt;

&lt;p&gt;Objects only reveal internal mechanisms that are relevant for the use of other objects, hiding any unnecessary implementation code. This concept helps developers more easily make changes and additions over time.&lt;/p&gt;

&lt;p&gt;This is quite powerful in development and TypeScript provides us several ways of manupulating member visibilty in a class object.&lt;/p&gt;

&lt;p&gt;Let us see how this work. In this example we have added public in all the Person attributes. By default all attributes are always public but for readability it is good practice to add it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// person class object&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
   &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;

   &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use the following to control attribute visibilities:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Public&lt;/li&gt;
&lt;li&gt;Protected&lt;/li&gt;
&lt;li&gt;Private&lt;/li&gt;
&lt;li&gt;Static&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Further we can use &lt;strong&gt;readonly&lt;/strong&gt; which will prevents assignments to the field outside of the constructor.&lt;/p&gt;

&lt;p&gt;Let us take another example to further understand this concept.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// class person&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
   &lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
   &lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;department&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;

   &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;
      &lt;span class="c1"&gt;// logic get department&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userDepartment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(.....)&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userDepartment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;department&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;userDepartment&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`Employee name: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, Department: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;department&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the example above if we try to create a new instance of Person without providing credentials we are going to get a warning and it wont compile. The first thing we should notice is credentials visibility is &lt;strong&gt;private readonly&lt;/strong&gt; meaning it can only be updated within the constructor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// warining An argument for 'value' was not provided.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;// this will succeed&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;123456&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One more thing we should not is all our attributes are private and cannot be accessed outside the class object. Take note that we can only access public objects outside the class object.&lt;/p&gt;

&lt;p&gt;Try this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// this will succeed&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;123456&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="c1"&gt;// this will automatically list for you all the properties accessible and you will NOTE all the private attributes cannot be accessed outside the class object.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#inheritance"&gt;
  &lt;/a&gt;
  Inheritance.
&lt;/h3&gt;

&lt;p&gt;Relationships and subclasses between objects can be assigned, allowing developers to reuse a common logic while still maintaining a unique hierarchy. This property of OOP forces a more thorough data analysis, reduces development time and ensures a higher level of accuracy.&lt;/p&gt;

&lt;p&gt;Take a look at this example. You will NOTE that by extending the TeslaCompnany we have inherited all the public attributes and can call them when we create a new instance of TeslaEmployee. This can allow us have a base class and reuse the base class in different subsclasses.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// class company &lt;/span&gt;
&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Department&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Employee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
   &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;TeslaCompany&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Admin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
      &lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;departments&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Department&lt;/span&gt;&lt;span class="p"&gt;)[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
      &lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;employees&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;)[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

      &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cred&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cred&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="nx"&gt;addDepartment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Department&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;departments&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;departments&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="nx"&gt;addEmployee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;employees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;employees&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;TeslaEmployee&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;TeslaCompany&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;new_employee&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Employee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_employee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;

      &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newTeslaEmployee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TeslaEmployee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;123456&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;newTeslaEmployee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Kevin Odongo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nx"&gt;newTeslaEmployee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addDepartment&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Finance&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nx"&gt;newTeslaEmployee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEmployee&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Kevin Odongo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newTeslaEmployee&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#polymorphism"&gt;
  &lt;/a&gt;
  Polymorphism.
&lt;/h3&gt;

&lt;p&gt;Objects can take on more than one form depending on the context. The program will determine which meaning or usage is necessary for each execution of that object, cutting down the need to duplicate code.&lt;/p&gt;

&lt;p&gt;Let us understand this by going through an example. We will notice that the Person object is extended by two different subsclasses and take different context when each a new instance of each subsclass is created.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// class Person&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
   &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;basketballPlayer&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
       &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;
       &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;BasketBall Player&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`User name: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; Role: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;golfPlayer&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
       &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;
       &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Golf Player&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`User name: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; Role: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;basketballPlayer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;golfPlayer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Kevin Odongo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;person2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Kevin Odongo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LAqH8IvU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1qlwrye1cn0ojejqqvm2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LAqH8IvU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1qlwrye1cn0ojejqqvm2.jpg" alt="Celebration"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations for the patience we have gone through the principles of Object Oriented Programming with examples to help us understand each concept. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#summary-explanation"&gt;
  &lt;/a&gt;
  Summary explanation
&lt;/h4&gt;

&lt;p&gt;Encapsulation - Class objects are in a specific boundary. For example citizens in a country. They are all living within a specific boundary can governed by its laws.&lt;/p&gt;

&lt;p&gt;Abstraction - Class objects can only share public properties and hide private properties. This creates a great way of controlling its behaviour.&lt;/p&gt;

&lt;p&gt;Inheritance - We can inherit other classes and extend all there public properties. &lt;/p&gt;

&lt;p&gt;Polymorphism - Objects can take various behaviour depending on the context.&lt;/p&gt;

&lt;p&gt;Instead of using classes we can also use functions. Take the person class object we have been using through the example we can define it as follows:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#option-1"&gt;
  &lt;/a&gt;
  Option 1
&lt;/h3&gt;

&lt;p&gt;In this option to access Person object we do not need to create a new instance of the Person object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// person object&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
        &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;

        &lt;span class="na"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;

        &lt;span class="na"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`Hello this is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;})()&lt;/span&gt;
&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kevin Odongo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#option-2"&gt;
  &lt;/a&gt;
  Option 2
&lt;/h3&gt;

&lt;p&gt;In this example you will note we are using this to access the attributes of user within the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// person object&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userProfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;

        &lt;span class="na"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;

        &lt;span class="na"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;

        &lt;span class="na"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`Hello this is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;userProfile&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kevin Odongo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let me stop there we digest this and pick it from here in our next tutorial. I hope this will help someone better understand Object Oriented Programming with TypeScript. &lt;/p&gt;

&lt;p&gt;Have a blessed week ahead of you!&lt;/p&gt;

&lt;p&gt;Bye.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>typescript</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
