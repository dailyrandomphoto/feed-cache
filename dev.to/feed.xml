<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Create a Marquee in HTML/CSS!</title>
      <author>Ustariz Enzo</author>
      <pubDate>Sun, 19 Dec 2021 08:51:03 +0000</pubDate>
      <link>https://dev.to/ziratsu/how-to-create-a-marquee-in-htmlcss-2m68</link>
      <guid>https://dev.to/ziratsu/how-to-create-a-marquee-in-htmlcss-2m68</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Learn how to create a &lt;em&gt;marquee in HTML/CSS&lt;/em&gt; only in less than a minute!&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/TEUPVZVX4Mg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-html-structure"&gt;
  &lt;/a&gt;
  1. The HTML structure.
&lt;/h2&gt;

&lt;p&gt;Create a basic HTML structure with a container and then a "p" with some text inside:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"marquee-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"marquee"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        LONDON - PARIS - SYDNEY - TOKYO - NEW YORK - BERLIN - ROME
    &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-style-the-page"&gt;
  &lt;/a&gt;
  2. Style the page.
&lt;/h2&gt;

&lt;p&gt;Start by styling the container by making sure its overflow is hidden:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.marquee-container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#25284c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then style the text however you want, but most importantly create an animation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.marquee&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;24px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;marquee&lt;/span&gt; &lt;span class="m"&gt;3.5s&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* notice the infinite */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add a pseudo element ::after with the exact same text as the one in the "p" :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.marquee&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"LONDON - PARIS - SYDNEY - TOKYO - NEW YORK - BERLIN - ROME"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-create-the-animation"&gt;
  &lt;/a&gt;
  3. Create the animation.
&lt;/h2&gt;

&lt;p&gt;Now create the animation itself:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;marquee&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will make the div containing the text go to the left, you can put 50% if you want to animate it to the right.&lt;/p&gt;

&lt;p&gt;After 50% of the width it will reset to the beginning of the animation without a flinch, thus starting the animation again and again.&lt;/p&gt;

&lt;p&gt;This, indeed, can only work if we are using the same text in the p tag and the after.&lt;/p&gt;

&lt;p&gt;There you go, you've now created a nice smooth marquee!&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>It's the most insecure code in the world</title>
      <author>Anders Björkland</author>
      <pubDate>Sun, 19 Dec 2021 08:33:05 +0000</pubDate>
      <link>https://dev.to/andersbjorkland/its-the-most-insecure-code-in-the-world-1anb</link>
      <guid>https://dev.to/andersbjorkland/its-the-most-insecure-code-in-the-world-1anb</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Just the Gist&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
A not uncommon criticism of PHP is that it lacks in security. The sad part is, we can't argue against it. It's too broad of a criticism which can be leveraged against most languages, as most have some way a secret can be leaked. Modern PHP and modern coding practices exists to mitigate this. But today, we are going to take a look at one very basic security flaw example, and a way we could mitigate it. It's what could happen if we don't run a web server but still have our php-files public.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Say that we have an &lt;code&gt;index.php&lt;/code&gt; located in a public-folder. This file is protecting the identity of the secret santa until Christmas Day. It may look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 

&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SECRET_SANTA'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Olaf ⛄"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;The Secret Santa is a secret!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;You have to wait until Christmas Day to know who it is.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

    &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 

    &lt;span class="nv"&gt;$today&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"now"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$christmas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"2021-12-25"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$today&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nv"&gt;$christmas&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;p&amp;gt;The Secret Santa is "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="no"&gt;SECRET_SANTA&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"!&amp;lt;/p&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;p&amp;gt;The Secret Santa is still a secret.&amp;lt;/p&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As long as we have a web server service active (such as Apache), this will be interpreted correctly and we would have the following output:&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rx4hqgYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0f8ku1k3rvbzmskknbxz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rx4hqgYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0f8ku1k3rvbzmskknbxz.png" alt="The website display that the secret santa is still a secret." width="452" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But what would happen if the service was down and we had visitors to the website? Instead of parsing the PHP file and rendering the correct output, we would serve the file as simple text. All our code would be visible and any one could see that it's Olaf! 😱&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0YJOrW9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1u665j2xs5wtbsgyd2u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0YJOrW9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1u665j2xs5wtbsgyd2u.png" alt="The website display all the code and any one can see that Olaf is the secret santa." width="537" height="436"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So how could we protect ourselves from this happening? We could move our secrets out of the public folder (or the web-root) and into a folder that is not accessible by visitors. Say that we have the following structure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/
  |-- public-folder
  |   |-- index.php
  |   
  |-- private-folder
      |-- SecretSanta.php
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our visitors would be unable to see the contents of the &lt;code&gt;SecretSanta.php&lt;/code&gt; file, but they would be able to see the &lt;code&gt;index.php&lt;/code&gt; file. So here's how we could do this.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;SecretSanta.php&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SecretSanta&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="no"&gt;SECRET_SANTA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Olaf ⛄'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getSecretSanta&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"now"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"2021-12-25"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;SECRET_SANTA&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This class declares a constant with the identity of the Secret Santa. It's private so no other file has access to it. We must use the static function &lt;code&gt;getSecretSanta()&lt;/code&gt; to access the secret santa. This function will return the secret santa if it's on or after Christmas Day, otherwise it will return &lt;code&gt;false&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Going back to the &lt;code&gt;index.php&lt;/code&gt; file, we can now get the secret santa by calling the static function on the class (&lt;code&gt;SecretSanta::getSecretSanta()&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 

&lt;span class="k"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'../private/SecretSanta.php'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;The Secret Santa is a secret!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;You have to wait until Christmas Day to know who it is.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

    &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;SecretSanta&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;getSecretSanta&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;p&amp;gt;The Secret Santa is "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nc"&gt;SecretSanta&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;getSecretSanta&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"!&amp;lt;/p&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;p&amp;gt;The Secret Santa is still a secret.&amp;lt;/p&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We would still get the same output as before when the web server service is running, but now we can see that the secret santa is not visible to the public if the service is down. This is but one example of how it may be a good idea to have your application logic and secrets outside of the public folder. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is so much more to keep track of when it comes to security. This article hasn't covered even a fraction of it. And many of the issues are not specific to PHP. There are Cross Origin Resource Forgery (CSRF) attacks, SQL Injection, Cross Site Scripting (XSS), and many more. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-about-you"&gt;
  &lt;/a&gt;
  What about you?
&lt;/h2&gt;

&lt;p&gt;Perhaps you have some good insight into good security practices within the PHP ecosystem, please share! Have you encountered projects with bad security? What are your best security recommendations to web developers building their first couple of PHP projects? Comment below and let us know what you think ✍&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;PHP Manual on Security: &lt;a href="https://www.php.net/manual/en/security.php"&gt;https://www.php.net/manual/en/security.php&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Zend on how to handle security risks: &lt;a href="https://www.zend.com/blog/managing-security-risks-php-engine-and-web-applications"&gt;https://www.zend.com/blog/managing-security-risks-php-engine-and-web-applications&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>php</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Linux - Find in Multiple Folders and Delete Files Within</title>
      <author>Eyal Lapid</author>
      <pubDate>Sun, 19 Dec 2021 08:05:07 +0000</pubDate>
      <link>https://dev.to/elpddev/find-in-multiple-folders-and-delete-files-within-4keb</link>
      <guid>https://dev.to/elpddev/find-in-multiple-folders-and-delete-files-within-4keb</guid>
      <description>&lt;p&gt;This is a worknote.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scenario"&gt;
  &lt;/a&gt;
  Scenario
&lt;/h2&gt;

&lt;p&gt;In a Javascript monorepo, there was a need to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;delete all dist folders files, not the folders themselfs&lt;/li&gt;
&lt;li&gt;but without touching the .gitignore in the folders&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;find ./packages &lt;span class="nt"&gt;-name&lt;/span&gt; &lt;span class="s2"&gt;"dist"&lt;/span&gt; &lt;span class="nt"&gt;-type&lt;/span&gt; d&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;for &lt;/span&gt;i &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$dir&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do &lt;/span&gt;find &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="nt"&gt;-type&lt;/span&gt; f &lt;span class="se"&gt;\(&lt;/span&gt; &lt;span class="nt"&gt;-iname&lt;/span&gt; &lt;span class="s2"&gt;"*"&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nt"&gt;-iname&lt;/span&gt; &lt;span class="s2"&gt;".gitignore"&lt;/span&gt; &lt;span class="se"&gt;\)&lt;/span&gt; &lt;span class="nt"&gt;-exec&lt;/span&gt; &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; +&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Find all &lt;code&gt;dist&lt;/code&gt; folders in the monorepo&lt;/li&gt;
&lt;li&gt;Iterate over the folders set and collect all files within them, excluding .gitignore&lt;/li&gt;
&lt;li&gt;Delete all sets of found files.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#solution-walkthrough"&gt;
  &lt;/a&gt;
  Solution Walkthrough
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#find-all-folders-with-specific-name"&gt;
  &lt;/a&gt;
  Find all folders with specific name
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;find ./packages &lt;span class="nt"&gt;-name&lt;/span&gt; &lt;span class="s2"&gt;"dist"&lt;/span&gt; &lt;span class="nt"&gt;-type&lt;/span&gt; d
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;find&lt;/code&gt; - &lt;a href="https://man7.org/linux/man-pages/man1/find.1.html"&gt;find&lt;/a&gt; - find files. Allow filtering.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;./packages&lt;/code&gt; - target root folder to start the search from.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-name "dist"&lt;/code&gt; - filter only object with the name "dist".&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-type d&lt;/code&gt; - filter only object with type of directory.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#execute-bash-expression"&gt;
  &lt;/a&gt;
  Execute Bash Expression
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://tldp.org/LDP/abs/html/commandsub.html"&gt;Exectute&lt;/a&gt; an expression in bash and put the results in a local variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#find-all-relevant-files-in-a-fo-raw-er"&gt;
  &lt;/a&gt;
  Find all relevant files in a fo`er
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
find $i -type f \( -iname "*" ! -iname ".gitignore" \)&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$i&lt;/code&gt; - Variabe containing the folder name from the &lt;code&gt;for&lt;/code&gt; iteration.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-type f&lt;/code&gt; - filter object only of type of &lt;code&gt;file&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-iname&lt;/code&gt; - From the docs: Like &lt;code&gt;-name&lt;/code&gt;, but the match is case insensitive.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;!&lt;/code&gt; - From the docs: &lt;code&gt;!&lt;/code&gt; expr True if expr is false.  This character will also usually need protection from interpretation by the shell.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\(&lt;/code&gt; - From the docs: ( expr ) Force precedence.  Since parentheses are special to the shell, you will normally need to quote them.  Many of the examples in this manual page use backslashes for this purpose: &lt;code&gt;\(...\)' instead of &lt;/code&gt;(...)`&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;for &lt;/span&gt;i &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$dir&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do &lt;/span&gt;find &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="nt"&gt;-type&lt;/span&gt; f &lt;span class="se"&gt;\(&lt;/span&gt; &lt;span class="nt"&gt;-iname&lt;/span&gt; &lt;span class="s2"&gt;"*"&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nt"&gt;-iname&lt;/span&gt; &lt;span class="s2"&gt;".gitignore"&lt;/span&gt; &lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#run-through-folders-set-and-execute-find-on-them"&gt;
  &lt;/a&gt;
  Run through folders set and execute find on them
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;for &lt;/span&gt;i &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$dir&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do &lt;/span&gt;find &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;for&lt;/code&gt; - &lt;a href="https://www.gnu.org/software/bash/manual/html_node/Looping-Constructs.html"&gt;for loop&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$i&lt;/code&gt; - iteration variable&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#execute-delete-on-found-set"&gt;
  &lt;/a&gt;
  Execute delete on found set
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;find $i -exec rm {} +
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;-exec&lt;/code&gt; - From the docs: Execute command; true if 0 status is returned.  All following arguments to find are taken to be arguments to the command until an argument consisting of `;' is encountered.&lt;/p&gt;

&lt;p&gt;The string `{}' is replaced by the current file name being processed everywhere it occurs in the arguments to the command, not just in arguments where it is alone, as in some versions of find.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>bash</category>
      <category>worknote</category>
    </item>
    <item>
      <title>CouchDB clients in Javascript</title>
      <author>Jordan Soo Yen Yih</author>
      <pubDate>Sun, 19 Dec 2021 07:42:11 +0000</pubDate>
      <link>https://dev.to/yenyih/couchdb-clients-in-javascript-25d9</link>
      <guid>https://dev.to/yenyih/couchdb-clients-in-javascript-25d9</guid>
      <description>&lt;p&gt;&lt;a href="https://couchdb.apache.org/"&gt;Apache CouchDB&lt;/a&gt; is an open source NoSQL document database that collects and stores data in JSON-based document formats. Since CouchDB makes use of HTTP protocol, therefore we can use any HTTP client to connect with CouchDB. However, there are some existing CouchDB client libraries that are very easy and convenience to use. Below I would like to share 3 libraries that I frequent use to connect with CouchDB.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-nano"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://github.com/apache/couchdb-nano"&gt;Nano&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Offical Apache CouchDB library for Node.js.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save nano
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#connect-to-couchdb-server"&gt;
  &lt;/a&gt;
  Connect to CouchDB server
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const nano = require('nano')('http://localhost:5984');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-new-database"&gt;
  &lt;/a&gt;
  Create a new database
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nano.db.create('blogs');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#use-an-existing-database"&gt;
  &lt;/a&gt;
  Use an existing database
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const blogs = nano.db.use('blogs');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it, easy peasy.😎 Now we can perform some queries with &lt;code&gt;blogs&lt;/code&gt;. &lt;code&gt;nano&lt;/code&gt; underlying is making HTTP API calls to CouchDB service. Such operations are asynchronous, we can use either &lt;code&gt;Promises&lt;/code&gt; or &lt;code&gt;Callbacks&lt;/code&gt; to receive the asynchronous data back from the library.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#promises"&gt;
  &lt;/a&gt;
  Promises
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blogs.get('post-A').then(response =&amp;gt; {
  // succeeded
  console.info(response);
}).catch(err =&amp;gt; {
  // failed
  console.error(err)
})
});

// OR

try {
  const response = await blogs.get('post-A')
  // succeeded
  console.log(response)
} catch (e) {
  // failed
  console.error(e)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#callbacks"&gt;
  &lt;/a&gt;
  Callbacks
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blogs.get('post-A', (err, data) =&amp;gt; {
  // errors are in 'err' &amp;amp; response is in 'data'
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nano even supports stream which mean we can proxy the whatever requests from CouchDB to the end user.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blogs.listAsStream()
  .on('error', (e) =&amp;gt; console.error('error', e))
  .pipe(process.stdout)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Easy to use.&lt;/li&gt;
&lt;li&gt;CouchDB API compatible.&lt;/li&gt;
&lt;li&gt;Supports Stream.&lt;/li&gt;
&lt;li&gt;The vast majority of library calls return native Promises.&lt;/li&gt;
&lt;li&gt;Detailed TypeScript definitions are built in.&lt;/li&gt;
&lt;li&gt;Easy to debug as errors are proxied directly from CouchDB: if you know CouchDB you already know &lt;code&gt;nano&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Cannot use in browser. Only Nodejs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-pouchdb"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://pouchdb.com/"&gt;PouchDB&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;An open-source JavaScript database inspired by Apache CouchDB that is designed to run well within the browser. However, PouchDB also runs in Node.js and can be used as a direct interface to CouchDB-compatible servers. The API works the same in every environment, so you can spend less time worrying about browser differences, and more time writing clean, consistent code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// For browser
npm install pouchdb-browser

// For Node
npm install pouchdb-node
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;PouchDB supports custom builds, meaning you can pick and choose the features of PouchDB that you want to use, potentially resulting in smaller bundle sizes and faster build times. Both &lt;code&gt;pouchdb-browser&lt;/code&gt; and &lt;code&gt;pouchdb-node&lt;/code&gt; contains the replication, HTTP, and map/reduce plugins. I personally prefer pick and choose the features of PouchDB I want instead of using &lt;code&gt;pouchdb-browser&lt;/code&gt; or &lt;code&gt;pouchdb-node&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const PouchDB = require('pouchdb-core')
  .plugin(require('pouchdb-adapter-http'))
  .plugin(require('pouchdb-mapreduce'))
  .plugin(require('pouchdb-replication'));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#connect-to-a-couchdb-database"&gt;
  &lt;/a&gt;
  Connect to a CouchDB database
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const blogs = new PouchDB('http://localhost:5984/blogs');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-new-database"&gt;
  &lt;/a&gt;
  Create a new database
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const blogs = new PouchDB('blogs');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#query"&gt;
  &lt;/a&gt;
  Query
&lt;/h3&gt;

&lt;p&gt;PouchDB also supports &lt;code&gt;Promises&lt;/code&gt; and &lt;code&gt;Callbacks&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blogs.get('post-A').then(doc =&amp;gt; {
  // handle doc
}).catch(err =&amp;gt; {
  console.log(err);
});

// OR

try {
  const doc = await blogs.get('post-A');
} catch (err) {
  console.log(err);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blogs.get('post-A', function(err, doc) {
  if (err) { return console.log(err); }
  // handle doc
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Easy to learn &amp;amp; use.&lt;/li&gt;
&lt;li&gt;Works in all modern browsers and Nodejs.&lt;/li&gt;
&lt;li&gt;Lightweight&lt;/li&gt;
&lt;li&gt;Support Offline&lt;/li&gt;
&lt;li&gt;Support Custom Builds / Plugins&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Not fully support CouchDB API, one of the example is you cannot use CouchDB's &lt;code&gt;update function&lt;/code&gt; via PouchDB.&lt;/li&gt;
&lt;li&gt;Official library doesn't come with Stream. However, since PouchDB supports custom builds, you still can do stream with external PouchDB projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;There is a a list of known plugins, tools and projects can be used with PouchDB. You can find it &lt;a href="https://pouchdb.com/external.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#3-axios"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://github.com/axios/axios"&gt;Axios&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you are a javascript developer, you should probably already know about axios. It is a Promise based HTTP client for the browser and node.js.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#connect-to-couchdb-server"&gt;
  &lt;/a&gt;
  Connect to CouchDB server
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const couchdb = axios.create({
  baseURL: 'http://localhost:5984',
  timeout: 1000,
  headers: { 'X-Custom-Header': 'foobar'}
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-new-database"&gt;
  &lt;/a&gt;
  Create a new database
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;couchdb.put('/blogs').then(response =&amp;gt; {
  // succeeded
}).catch(err =&amp;gt; {
  // failed
});

// OR

try {
  const response = await couchdb.put('/blogs');
  console.info(response.data);
} catch (err) {
  console.error(err);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#query"&gt;
  &lt;/a&gt;
  Query
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;couchdb.get('/blogs/post-A').then(response =&amp;gt; {
  console.info(response.data);
}).catch(err =&amp;gt; {
  console.error(err);
});

// OR

try {
  const response = await couchdb.get('/blogs/post-A');
  console.info(response.data);
} catch (err) {
  console.error(err);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Works in all modern browsers and Nodejs.&lt;/li&gt;
&lt;li&gt;Supports the Promise API&lt;/li&gt;
&lt;li&gt;Intercept request and response&lt;/li&gt;
&lt;li&gt;Transform request and response data&lt;/li&gt;
&lt;li&gt;Cancel requests&lt;/li&gt;
&lt;li&gt;Automatic transforms for JSON data&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Codes are not as clean/minimal as PouchDB. In order to achieve minimal of code with axios, you will need to spend extra time to build your own factory functions on top of axios.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for Reading.
&lt;/h2&gt;

&lt;p&gt;If you know any other interesting libraries that play well with CouchDB, please leave comments below to share with me. Thank you.☺&lt;/p&gt;

</description>
      <category>database</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>React Admin Dashboard with Recharts</title>
      <author>Kishan Sheth</author>
      <pubDate>Sun, 19 Dec 2021 07:10:36 +0000</pubDate>
      <link>https://dev.to/koolkishan/react-admin-dashboard-with-recharts-jaa</link>
      <guid>https://dev.to/koolkishan/react-admin-dashboard-with-recharts-jaa</guid>
      <description>&lt;h2&gt;
  &lt;a href="#you-can-get-the-template-from-the-link-proivided-in-the-description-of-the-video"&gt;
  &lt;/a&gt;
  You can get the template from the link proivided in the description of the video.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#technologies-used-"&gt;
  &lt;/a&gt;
  Technologies Used :-
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;REACT&lt;/li&gt;
&lt;li&gt;SASS&lt;/li&gt;
&lt;li&gt;Styled Components&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#libraries-and-assets-used-"&gt;
  &lt;/a&gt;
  Libraries and Assets Used :-
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Styled Components&lt;/li&gt;
&lt;li&gt;React Icons&lt;/li&gt;
&lt;li&gt;Recharts&lt;/li&gt;
&lt;li&gt;Google Fonts&lt;/li&gt;
&lt;li&gt;ScrollReveal&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#to-learn-how-to-create-this-template-watch-the-complete-video-you-can-get-the-template-for-free-from-the-link-provided-in-the-description-of-the-video"&gt;
  &lt;/a&gt;
  To learn how to create this template watch the complete video. You can get the template for free from the link provided in the description of the video.
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NnyoDmvvGwI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#please-do-like-the-video-and-subscribe-to-the-channel-it-helps-and-motivates-me-to-create-more-content-like-this"&gt;
  &lt;/a&gt;
  Please do like the video and subscribe to the channel. It helps and motivates me to create more content like this.
&lt;/h2&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Best VS code Extensions for Web Development</title>
      <author>Mysterio</author>
      <pubDate>Sun, 19 Dec 2021 07:06:31 +0000</pubDate>
      <link>https://dev.to/shubhamtiwari909/best-vs-code-extensions-for-web-development-2lk3</link>
      <guid>https://dev.to/shubhamtiwari909/best-vs-code-extensions-for-web-development-2lk3</guid>
      <description>&lt;p&gt;Hello Guys today i am going to show you some VSCode Extension which helped me to boost my Productivity in Web Development(Specially frontend part as i am not familiar with backend).This post is for everyone including beginners.&lt;/p&gt;

&lt;p&gt;Lets get Started&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-html-snippets-"&gt;
  &lt;/a&gt;
  1. HTML Snippets -
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N5UkEFtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nozp8md8b7gx4884rq41.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N5UkEFtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nozp8md8b7gx4884rq41.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-"&gt;
  &lt;/a&gt;
  About -
&lt;/h3&gt;

&lt;p&gt;Type part of a snippet, press enter, and the snippet unfolds.&lt;/p&gt;

&lt;p&gt;Snippets named as the tag without braces&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;div --&amp;gt; &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
doc --&amp;gt; &amp;lt;!DOCTYPE html&amp;gt;
a --&amp;gt; &amp;lt;a href=""&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-intellisense-for-css-classnames-"&gt;
  &lt;/a&gt;
  2. Intellisense for CSS classnames -
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--krvE_pQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gi77c6v6ut72inhjvlu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--krvE_pQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gi77c6v6ut72inhjvlu.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-"&gt;
  &lt;/a&gt;
  About -
&lt;/h3&gt;

&lt;p&gt;This extension has autocomplete class name feature in html specially for Bootstrap class names if you re familiar with bootstrap then you know about the bootstrap classes and styling components with bootstrap class names.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-emmet-live-"&gt;
  &lt;/a&gt;
  3. Emmet Live -
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_JPSNyHG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/doqktrpnf4jm4e6y3wcn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_JPSNyHG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/doqktrpnf4jm4e6y3wcn.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-"&gt;
  &lt;/a&gt;
  About -
&lt;/h3&gt;

&lt;p&gt;Open the command palette (F1 on Windows) and look for the command 'Emmet Live'. Hit enter and input your HTML Emmet abbreviation.&lt;br&gt;
This helps to write HTML Code fastly and also saves time.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-javascript-booster-"&gt;
  &lt;/a&gt;
  4. Javascript Booster -
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DShfSkYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjwfejhu66esd21kgbkm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DShfSkYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjwfejhu66esd21kgbkm.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#about-"&gt;
  &lt;/a&gt;
  About -
&lt;/h3&gt;

&lt;p&gt;This one i love it as it is very helpful while writing Javascript.&lt;br&gt;
This VS Code extension provides various code actions (quick fixes) when editing code in JavaScript (or TypeScript/Flow). Just note the light bulb at the left and press it to learn how you can transform the code under the cursor.&lt;br&gt;
You can convert normal function to arrow function with a click of button and vice versa and it has many features like that.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#5-bootstrap-4-"&gt;
  &lt;/a&gt;
  5. Bootstrap 4 -
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tyCO89k_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3akdlwmd827gkg7tb03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tyCO89k_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3akdlwmd827gkg7tb03.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#about-"&gt;
  &lt;/a&gt;
  About -
&lt;/h3&gt;

&lt;p&gt;Visual studio code plugin containing Bootstrap 4, Font awesome 4 &amp;amp; Font Awesome 5 Free &amp;amp; Pro snippets. This plugin works in both in the stable &amp;amp; the insiders build.&lt;br&gt;
This one is for bootstrap and it has many snippets to write bootstrap code&lt;/p&gt;

&lt;p&gt;Example -&lt;br&gt;
b4-$ and press enter , it will create a bootstrap master template which has bootstrap cdn files and all necessary tags to use bootstrap.&lt;br&gt;
You can also create forms, cards, buttons , etc with simple one line snippets.&lt;br&gt;
Check out this extention to see all the snippets of bootstrap.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#6-live-server-"&gt;
  &lt;/a&gt;
  6. Live Server -
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tK6CAKg0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/35xem1owgrekwi8h68ly.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tK6CAKg0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/35xem1owgrekwi8h68ly.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#about-"&gt;
  &lt;/a&gt;
  About -
&lt;/h3&gt;

&lt;p&gt;Launch a development local Server with live reload feature for static &amp;amp; dynamic pages.&lt;br&gt;
It can update the web page everytime you do changes to the code and you dont have to refresh the page again and again to see the updates you have done to the page.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#7-es7-reactredux"&gt;
  &lt;/a&gt;
  7. ES7 / React/Redux....-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1yVUo1fc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qphpwj85or76i1sa6khi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1yVUo1fc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qphpwj85or76i1sa6khi.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#about-"&gt;
  &lt;/a&gt;
  About -
&lt;/h3&gt;

&lt;p&gt;Simple extensions for React, Redux and Graphql in JS/TS with ES7 syntax&lt;br&gt;
If you are a react developer , then you should check this extension. It has many snippets for autocomplete the codes&lt;br&gt;
For example -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;rfce&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;hit&lt;/span&gt; &lt;span class="nx"&gt;enter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will generate a react functional component template.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-vscodestyledcomponents"&gt;
  &lt;/a&gt;
  8. Vscode-styled-components-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V0dBuvps--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kuc45f9k3nvznyak9hno.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V0dBuvps--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kuc45f9k3nvznyak9hno.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-"&gt;
  &lt;/a&gt;
  About -
&lt;/h3&gt;

&lt;p&gt;If you use styled-components to style your components in react , then this one is best for you as it autocomplete the css code written in js file.So, check this one definitely.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-bracketpaircolorizer-"&gt;
  &lt;/a&gt;
  9. Bracket-Pair-Colorizer -
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WpqlQhid--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4h6bb4sqeo9r2msn8wl0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WpqlQhid--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4h6bb4sqeo9r2msn8wl0.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-"&gt;
  &lt;/a&gt;
  About -
&lt;/h3&gt;

&lt;p&gt;A customizable extension for colorizing matching brackets&lt;br&gt;
It is just a simple extension which colors the brackets with different colors , so that you can easily identify the block of codes like which code block have which opening and closing brackets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-lorem-ipsum-"&gt;
  &lt;/a&gt;
  10. Lorem Ipsum -
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8RwsyQWd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/th6oab8eva2tliqkoggq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8RwsyQWd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/th6oab8eva2tliqkoggq.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-"&gt;
  &lt;/a&gt;
  About -
&lt;/h3&gt;

&lt;p&gt;Generates and inserts lorem ipsum text&lt;br&gt;
It is a simple extension which generates dummy text to use in your web pages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-you-know-about-any-other-cool-extension-of-vscode-then-feel-free-to-mention-it-in-the-comment-section"&gt;
  &lt;/a&gt;
  If you know about any other cool extension of vscode , then feel free to mention it in the comment section.
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading-this-post-and-if-you-find-any-mistake-or-wants-to-give-any-suggestion-then-please-mention-it-in-the-comment-section"&gt;
  &lt;/a&gt;
  THANK YOU FOR READING THIS POST AND IF YOU FIND ANY MISTAKE OR WANTS TO GIVE ANY SUGGESTION THEN PLEASE MENTION IT IN THE COMMENT SECTION.
&lt;/h2&gt;

</description>
      <category>vscode</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How I Created a Crowdfunding Platform with Web3 &amp; Micro-Frontends</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 19 Dec 2021 06:32:06 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/how-i-created-a-crowdfunding-platform-with-web3-micro-frontends-3pb2</link>
      <guid>https://dev.to/ruppysuppy/how-i-created-a-crowdfunding-platform-with-web3-micro-frontends-3pb2</guid>
      <description>&lt;p&gt;Over the past few months, I was learning about &lt;strong&gt;Micro-Frontend&lt;/strong&gt; &amp;amp; &lt;strong&gt;Web3 Technologies&lt;/strong&gt;. As the best way to learn is to &lt;em&gt;try things hands-on&lt;/em&gt;, so I built up a small side-project to test out my understanding of the topics.&lt;/p&gt;

&lt;p&gt;The aim of the project was to create a &lt;strong&gt;Crowdfunding&lt;/strong&gt; Platform based on the &lt;strong&gt;Ethereum Blockchain&lt;/strong&gt; utilizing &lt;strong&gt;Micro-Frontend Architecture&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can dive into the source code here&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ruppysuppy"&gt;
        ruppysuppy
      &lt;/a&gt; / &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund"&gt;
        Crypto-Crowdfund
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🤑💰 Crowdfunding Platform backed by Ethereum Blockchain to bring your creative projects to life
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;And the website here: &lt;a href="https://crypto-crowdfund.web.app/"&gt;https://crypto-crowdfund.web.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You need a &lt;strong&gt;&lt;a href="https://metamask.io/"&gt;MetaMask&lt;/a&gt; Wallet&lt;/strong&gt; to interact with the blockchain&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#smart-contract"&gt;
  &lt;/a&gt;
  Smart Contract
&lt;/h1&gt;

&lt;p&gt;You can interact with &lt;strong&gt;Ethereum Blockchain&lt;/strong&gt; using &lt;strong&gt;Smart Contracts&lt;/strong&gt;, so let's create one as per our requirement. The &lt;strong&gt;Contracts&lt;/strong&gt; used in the project is available &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/blob/main/packages/smart-contract/contracts/Campaign.sol"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Making changes to a deployed &lt;strong&gt;Smart Contracts&lt;/strong&gt; is not possible, and you have to &lt;em&gt;re-deploy&lt;/em&gt; the contract, which costs &lt;strong&gt;Ethereum coins&lt;/strong&gt; as &lt;strong&gt;Gas Fee&lt;/strong&gt;. So it is essential that you &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/tree/main/packages/smart-contract/test"&gt;extensively test&lt;/a&gt; the contract before deploying&lt;/p&gt;

&lt;p&gt;Since storing data in the &lt;strong&gt;Smart Contracts&lt;/strong&gt; incur &lt;strong&gt;Gas Fee&lt;/strong&gt; too, only the essential data, such as the &lt;strong&gt;Campaign Manager&lt;/strong&gt;, the &lt;strong&gt;Votes for a Transaction Request&lt;/strong&gt;, etc are stored on the &lt;strong&gt;Blockchain&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#potential-improvements"&gt;
  &lt;/a&gt;
  Potential Improvements
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Split the &lt;strong&gt;Campaign Factory&lt;/strong&gt; and the &lt;strong&gt;Campaign&lt;/strong&gt; into separate files containing only the given &lt;strong&gt;Smart Contract&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Add the &lt;strong&gt;Manager functionality&lt;/strong&gt; as a separate &lt;strong&gt;Smart Contract&lt;/strong&gt; and add it to the &lt;strong&gt;Campaign&lt;/strong&gt; using inheritance&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#microfrontend"&gt;
  &lt;/a&gt;
  Micro-Frontend
&lt;/h1&gt;

&lt;p&gt;With the &lt;strong&gt;Smart Contract&lt;/strong&gt; out of the way, let's focus on the &lt;strong&gt;Micro-Frontend&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VCvhYbjg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ja1v7dql1s8ilsps3w9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VCvhYbjg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ja1v7dql1s8ilsps3w9.gif" alt="Let's Focus" width="498" height="498"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Micro-Frontend architecture&lt;/strong&gt; is a design approach in which a Frontend app is decomposed into &lt;strong&gt;individual, independent “micro-apps”&lt;/strong&gt; working &lt;em&gt;loosely together&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Was &lt;strong&gt;Micro-Frontend Architecture&lt;/strong&gt; essential for this project?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The answer to that is a definite &lt;strong&gt;NO&lt;/strong&gt;. Then why did I use it? &lt;em&gt;Just to put what I learned to practice&lt;/em&gt;. &lt;strong&gt;Micro-Frontend Architecture&lt;/strong&gt; is useful only when working with &lt;em&gt;large teams&lt;/em&gt;, &lt;em&gt;where the role of each team is to work on only a small sub-section of the project&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Micro-Frontend&lt;/strong&gt; was implemented using &lt;strong&gt;Webpack's Module Federation Plugin&lt;/strong&gt;. If you want to learn how to implement &lt;strong&gt;Micro-Frontends&lt;/strong&gt; from scratch, you are highly encouraged to check out &lt;a href="https://dev.to/ruppysuppy/micro-frontends-the-next-gen-way-to-build-web-apps-16da"&gt;this article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Webpack&lt;/strong&gt; config for each of the sub-apps and the container follow the same method. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make a &lt;code&gt;common config&lt;/code&gt; file with the shared &lt;strong&gt;config&lt;/strong&gt; for &lt;strong&gt;dev&lt;/strong&gt; &amp;amp; &lt;strong&gt;prod&lt;/strong&gt; build, for example:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// imports ...&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// all shared config ...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a &lt;code&gt;dev config&lt;/code&gt; and merge it with the &lt;code&gt;common config&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;webpack-merge&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// other imports ...&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;devConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// all development config ...&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;commonConfig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;devConfig&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally make a &lt;code&gt;prod config&lt;/code&gt; and merge it with the &lt;code&gt;common config&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;webpack-merge&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// other imports ...&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prodConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// all production config ...&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;commonConfig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prodConfig&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can check out all the configuration files &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/search?l=JavaScript&amp;amp;q=webpack"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; In the project all the &lt;strong&gt;sub-apps&lt;/strong&gt; use &lt;strong&gt;React&lt;/strong&gt;, but you can very well use any other &lt;em&gt;library&lt;/em&gt; or &lt;em&gt;framework&lt;/em&gt; in any of them&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#marketing"&gt;
  &lt;/a&gt;
  Marketing
&lt;/h2&gt;

&lt;p&gt;Let's start with the simplest &lt;strong&gt;sub-app&lt;/strong&gt;, the &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/tree/main/packages/marketing"&gt;Marketing sub-app&lt;/a&gt; is only responsible for rendering the &lt;em&gt;home&lt;/em&gt;, &lt;em&gt;about&lt;/em&gt;, &lt;em&gt;faq&lt;/em&gt;, &lt;em&gt;terms-and-conditions&lt;/em&gt;, &lt;em&gt;privacy-policy&lt;/em&gt;, and &lt;em&gt;disclaimer&lt;/em&gt; pages, and doesn't have much functionality apart from this.&lt;/p&gt;

&lt;p&gt;Just as the &lt;strong&gt;Micro-Frontend sub-apps&lt;/strong&gt; should only expose generic functions to avoid &lt;em&gt;library&lt;/em&gt; or &lt;em&gt;framework&lt;/em&gt; dependency between &lt;strong&gt;sub-apps&lt;/strong&gt; and the &lt;strong&gt;container&lt;/strong&gt;, the &lt;strong&gt;Marketing sub-apps&lt;/strong&gt; exposes a &lt;code&gt;mount&lt;/code&gt; function which takes simple objects as &lt;em&gt;params&lt;/em&gt;. It has the following signature:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Mount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;mountPoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;defaultHistory&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;History&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;MemoryHistory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;initialPath&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;isAuthenticated&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;HOME&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;ABOUT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;FAQ&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;TERMS_AND_CONDITIONS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;PRIVACY_POLICY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;DISCLAIMER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;CAMPAIGNS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;SIGN_IN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nl"&gt;onNavigate&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;onParentNavigate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Using the &lt;code&gt;mount&lt;/code&gt; function, the container can mount the &lt;strong&gt;sub-app&lt;/strong&gt; as per requirement. &lt;code&gt;defaultHistory&lt;/code&gt;, &lt;code&gt;onNavigate&lt;/code&gt; and &lt;code&gt;onParentNavigate&lt;/code&gt; are used to keep both the container and the &lt;strong&gt;sub-app&lt;/strong&gt; in sync and avoid some nasty bugs.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#auth"&gt;
  &lt;/a&gt;
  Auth
&lt;/h2&gt;

&lt;p&gt;Next up is the &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/tree/main/packages/auth"&gt;Auth sub-app&lt;/a&gt;. It uses &lt;strong&gt;Firebase&lt;/strong&gt; authentication to &lt;strong&gt;sign-in&lt;/strong&gt; and &lt;strong&gt;sign-up&lt;/strong&gt; users and grants them the required permissions. &lt;/p&gt;

&lt;p&gt;It works similarly as the &lt;strong&gt;Marketing sub-app&lt;/strong&gt;, by exposing the &lt;code&gt;mount&lt;/code&gt; function with a similar set of &lt;em&gt;params&lt;/em&gt; and handling the &lt;em&gt;sign-in&lt;/em&gt; and &lt;em&gt;sign-up&lt;/em&gt; pages &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#potential-improvements"&gt;
  &lt;/a&gt;
  Potential Improvements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use a method to &lt;strong&gt;sign-in&lt;/strong&gt; only using the &lt;a href="https://metamask.io/"&gt;MetaMask&lt;/a&gt; account, removing the need to &lt;strong&gt;sign-in&lt;/strong&gt; in two places to get full access to the application&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#blockchain"&gt;
  &lt;/a&gt;
  Blockchain
&lt;/h2&gt;

&lt;p&gt;Finally, we are at the most difficult to understand &lt;strong&gt;sub-app&lt;/strong&gt; of all, the &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/tree/main/packages/blockchain"&gt;Blockchain sub-app&lt;/a&gt; is the meat of the project, enabling users to interact with the &lt;strong&gt;backend&lt;/strong&gt; &amp;amp; the &lt;strong&gt;blockchain&lt;/strong&gt; (to interact with the &lt;strong&gt;blockchain&lt;/strong&gt;, you need a &lt;a href="https://metamask.io/"&gt;MetaMask&lt;/a&gt; extension on your browser). &lt;/p&gt;

&lt;p&gt;It handles the &lt;em&gt;account&lt;/em&gt;, &lt;em&gt;campaign&lt;/em&gt;, &lt;em&gt;campaigns&lt;/em&gt; and &lt;em&gt;create-campaign&lt;/em&gt; pages.&lt;/p&gt;

&lt;p&gt;As mentioned previously, &lt;em&gt;only the essential data is stored on the contracts&lt;/em&gt;, saving the rest on &lt;strong&gt;Cloud Firestore&lt;/strong&gt;. The data from the campaigns are fetched from the addresses residing on the &lt;strong&gt;Blockchain&lt;/strong&gt;, and then data from &lt;strong&gt;Firestore&lt;/strong&gt; is merged to generate the complete data for a given &lt;strong&gt;Campaign&lt;/strong&gt;. Only the creator of the &lt;strong&gt;Campaign&lt;/strong&gt; can modify the data on &lt;strong&gt;Firestore&lt;/strong&gt; or create &lt;strong&gt;Transaction Request&lt;/strong&gt; to spend the available funds, which the Contributors can approve.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#potential-improvements"&gt;
  &lt;/a&gt;
  Potential Improvements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Using &lt;em&gt;image uploads&lt;/em&gt; in place of &lt;em&gt;add url to image&lt;/em&gt; for both the cover image and the user profile picture (skipped it as the main focus was on integrating &lt;strong&gt;web3&lt;/strong&gt; &amp;amp; &lt;strong&gt;micro-frontend&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#container"&gt;
  &lt;/a&gt;
  Container
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/tree/main/packages/container"&gt;Container&lt;/a&gt; is responsible for &lt;em&gt;condensing all the &lt;strong&gt;sub-apps&lt;/strong&gt; into a single application&lt;/em&gt; and &lt;em&gt;controlling what is displayed on the screen&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#potential-improvements"&gt;
  &lt;/a&gt;
  Potential Improvements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Improvised &lt;strong&gt;UI/UX&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h1&gt;

&lt;p&gt;It's finally over...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N_zznmOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qmw8ndm93q9ytu13kfh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N_zznmOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qmw8ndm93q9ytu13kfh.gif" alt="Relief" width="498" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article presented a &lt;em&gt;brief overview&lt;/em&gt; of the project, you can always dive into the &lt;strong&gt;source code&lt;/strong&gt; and &lt;em&gt;check out the project line by line&lt;/em&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ruppysuppy"&gt;
        ruppysuppy
      &lt;/a&gt; / &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund"&gt;
        Crypto-Crowdfund
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🤑💰 Crowdfunding Platform backed by Ethereum Blockchain to bring your creative projects to life
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Happy Developing!&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Need a &lt;strong&gt;Top Rated Front-End Development Freelancer&lt;/strong&gt; to chop away your development woes? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Personal Website&lt;/a&gt; and &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to connect? Reach out to me on &lt;a href="https://www.linkedin.com/in/tapajyoti-bose/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a &lt;strong&gt;Digital Nomad&lt;/strong&gt; in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for &lt;strong&gt;Weekly new Tidbits&lt;/strong&gt; on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are a few commonly asked questions I get. So, I hope this &lt;strong&gt;FAQ&lt;/strong&gt; section solves your issues.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Front-End Web Dev?&lt;/strong&gt;&lt;br&gt;
Look into the following articles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/front-end-developer-roadmap-zero-to-hero-4pkf"&gt;Front End Development Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p"&gt;Front End Project Ideas&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you mentor me?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Sorry, I am already under a lot of workload and would not have the time to mentor anyone.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you like to collaborate on our site?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
As mentioned in the &lt;em&gt;previous question&lt;/em&gt;, I am in a time crunch, so I would have to pass on such opportunities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>webdev</category>
      <category>typescript</category>
      <category>webpack</category>
      <category>web3</category>
    </item>
    <item>
      <title>How to install tarball (.tar) files in linux</title>
      <author>Arbitrary</author>
      <pubDate>Sun, 19 Dec 2021 06:04:10 +0000</pubDate>
      <link>https://dev.to/arbitrary/how-to-install-tarball-tar-files-in-linux-33aa</link>
      <guid>https://dev.to/arbitrary/how-to-install-tarball-tar-files-in-linux-33aa</guid>
      <description>&lt;p&gt;Does it happen to you that you that whenever you want to install a piece of software you're give either a &lt;code&gt;.deb&lt;/code&gt; file or a &lt;code&gt;.tar&lt;/code&gt; file. Installing &lt;code&gt;.deb&lt;/code&gt; files is easy, it's just like how you do in windows, but &lt;code&gt;.tar&lt;/code&gt; files are a pain specially for beginners. &lt;br&gt;
In this simple tutorial we'll learn how to download and install &lt;code&gt;.tar&lt;/code&gt; file. I'll use Ubuntu but it should work in most Linux distros. I'll install *&lt;em&gt;waterfox web browser *&lt;/em&gt; but the process is similar for all the tarball (.tar) installation files.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  tldr;
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;download the tar file&lt;/li&gt;
&lt;li&gt;extract it to some location&lt;/li&gt;
&lt;li&gt;create a desktop entry for running the application&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#detailed-method"&gt;
  &lt;/a&gt;
  Detailed method
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#step-1-download-the-raw-tar-endraw-file-and-then-move-it-to-the-directory-where-you-want-to-install-it"&gt;
  &lt;/a&gt;
  Step 1 :download the &lt;code&gt;.tar&lt;/code&gt; file and then move it to the directory where you want to install it.
&lt;/h3&gt;

&lt;p&gt;After downloading the file open the terminal in current directory to move the file to &lt;code&gt;/opt&lt;/code&gt; directory using the following command.&lt;br&gt;
you can change the filename and target directory accordingly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo mv  waterfox-G4.0.5.en-US.linux-x86_64.tar.bz2 /opt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2-extract-the-raw-tar-endraw-file"&gt;
  &lt;/a&gt;
  Step 2: Extract the &lt;code&gt;.tar&lt;/code&gt; file
&lt;/h3&gt;

&lt;p&gt;first goto the directory where you moved the &lt;code&gt;.tar&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd /opt/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To extract the &lt;code&gt;.tar&lt;/code&gt; file present in the current directory to use the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo tar xjf waterfox-G4.0.5.en-US.linux-x86_64.tar.bz2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you can replace the &lt;code&gt;.tar&lt;/code&gt; filename i.e. &lt;code&gt;waterfox-G4.0.5.en-US.linux-x86_64.tar.bz2&lt;/code&gt; as per your filename.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-create-desktop-entry-with-appropriate-permissions"&gt;
  &lt;/a&gt;
  Step 3: Create desktop entry with appropriate permissions
&lt;/h3&gt;

&lt;p&gt;make yourself owner of the extracted repository&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo chown -R $USER /opt/waterfox
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a desktop entry so that you don't need to come to this directory to launch the application. &lt;br&gt;
run the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gedit ~/.local/share/applications/waterfox.desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;it'll open gedit text editor where you need to insert the specifications of the desktop entry.&lt;br&gt;
paste the following in the editor and save.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Desktop Entry]
Name=Waterfox
Exec=/opt/waterfox/waterfox %u
Terminal=false
Icon=/opt/waterfox/browser/chrome/icons/default/default128.png
Type=Application
Categories=Application;Network;X-Developer;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, change the various parameters and paths according to your setup.&lt;/p&gt;

&lt;p&gt;Desktop entry has many parameters but only a few are required but you should add at least these. You can read more at &lt;a href="https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-0.9.3.html"&gt;Desktop Entry Standard&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally you need to make your desktop entry executable using the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chmod +x ~/.local/share/applications/waterfox.desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you can change the name of desktop entry accordingly.&lt;/p&gt;

&lt;p&gt;finally you can remove the &lt;code&gt;.tar&lt;/code&gt; file using the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo rm -rf waterfox*.tar.bz2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>linux</category>
      <category>ubuntu</category>
      <category>tutorial</category>
      <category>tar</category>
    </item>
    <item>
      <title>Reusability In React!</title>
      <author>Mohammed Farmaan.</author>
      <pubDate>Sun, 19 Dec 2021 05:50:09 +0000</pubDate>
      <link>https://dev.to/zxcodes/reusability-in-react-2o4n</link>
      <guid>https://dev.to/zxcodes/reusability-in-react-2o4n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-reusability"&gt;
  &lt;/a&gt;
  What is reusability?
&lt;/h2&gt;

&lt;p&gt;Code that allows itself to be reused for different purposes without having to re-write different code for the same purpose is reusability.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-reusability-at-all"&gt;
  &lt;/a&gt;
  Why reusability at  all?
&lt;/h2&gt;

&lt;p&gt;Well, I had the same question when I started learning React. Why do we even need Reusable components when we can straight up write some more code and create another component, right? Well, this goes against many ways. One of them being &lt;strong&gt;DRY&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Do not repeat yourself&lt;/em&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One of the key principles of Software Development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fun fact:&lt;/strong&gt; When I Started React, I used to write every other component just like plain html without reusing the code anywhere at all. ( Only until I learned this ).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-reusability-be-achieved"&gt;
  &lt;/a&gt;
  How can reusability be achieved?
&lt;/h2&gt;

&lt;p&gt;Well there are many ways to achieve reusability. It just depends the type of code that you're writing. In this article I'm gonna show how you can build &lt;strong&gt;Reusable Button Component&lt;/strong&gt; in React which you can reuse anywhere in your React projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1:
&lt;/h2&gt;

&lt;p&gt;Start with the idea: To have buttons as components without reusability you'd do something like this in your project: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;DownloadButton.js&lt;/li&gt;
&lt;li&gt;CancelButton.js&lt;/li&gt;
&lt;li&gt;ShareButton.js and ...so on.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I guess you can already sense the problem here. Can't you? Well if you can't, here it is: &lt;strong&gt;Multiple files with similar/duplicate code for the same type of component. (Button).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Which means more complex and annoying file structure to maintain as the project grows.&lt;/p&gt;

&lt;p&gt;So how can we solve this?&lt;/p&gt;

&lt;p&gt;Well, make a component which can give you the result that you want with the data that's given to it. Let's do it.&lt;/p&gt;

&lt;p&gt;Create a React project. I've used CRA here:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;create-react-app reusable-components&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Dependencies&lt;/strong&gt;: react-icons (npm i react-icons)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2:
&lt;/h2&gt;

&lt;p&gt;Create a component called Button.js or with a name that you prefer.&lt;/p&gt;

&lt;p&gt;Place the following code in it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;buttons&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;generatedButtons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;textColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;buttonRadius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;receivedStyles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;textColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;borderRadius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;buttonRadius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;defaultStyles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;alignItems&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.6em 1.2em&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1em&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.9em&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;receivedStyles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;defaultStyles&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
        &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;icon&lt;/span&gt;
            &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;receivedStyles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;defaultStyles&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;receivedStyles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;defaultStyles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1em 1.5em&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;icon&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Icon&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.3em&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.5em&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;generatedButtons&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The logic in above code is quite simple. We just map a &lt;strong&gt;Two Dimensional Array&lt;/strong&gt; containing individual array data which maps to a different button. And with a bit of conditional rendering, we display them differently based on the data they're given.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use"&gt;
  &lt;/a&gt;
  How to use?
&lt;/h2&gt;

&lt;p&gt;It's quite simple too.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;IoMdDoneAll&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;DoneIcon&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-icons/io&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;FaCloudDownloadAlt&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;CloudDownloadIcon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;FaShareAlt&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;ShareIcon&lt;/span&gt;&lt;span class="p"&gt;,}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-icons/fa&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MdCancel&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;CancelIcon&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-icons/md&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100vh&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;alignItems&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#242424&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt; &lt;span class="na"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
           &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;DoneIcon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Done&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#fff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#570C99&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;6px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;clicked: Done button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
           &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;cloudDownloadIcon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Download&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#fff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#009DAE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;clicked: Download button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
           &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;CancelIcon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cancel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#fff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#FF0000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;clicked: Cancel button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
           &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ShareIcon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Share&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#fff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#516BEB&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;clicked: Share button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="na"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finally-the-result"&gt;
  &lt;/a&gt;
  Finally, the result!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9CKyvsVa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmp7abgdpgfymlov1n37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9CKyvsVa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmp7abgdpgfymlov1n37.png" alt="Result" width="880" height="197"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See how different buttons render? And all this from a single component? Well that's the magic of reusable code.&lt;/p&gt;

&lt;p&gt;And their callbacks work perfectly too!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--komRs6VG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6l92ie13xnq8bj3ymzh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--komRs6VG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6l92ie13xnq8bj3ymzh.png" alt="Console" width="505" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The end.
&lt;/h2&gt;

&lt;p&gt;Hope you've learned something new. Thanks for reading. Happy coding!❤️&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>showdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Connect Server with Express Engine- EJS Work as a Frontend</title>
      <author>Deepak</author>
      <pubDate>Sun, 19 Dec 2021 05:05:01 +0000</pubDate>
      <link>https://dev.to/deepakjaiswal/connect-server-with-express-engine-ejs-work-as-a-frontend-5do9</link>
      <guid>https://dev.to/deepakjaiswal/connect-server-with-express-engine-ejs-work-as-a-frontend-5do9</guid>
      <description>&lt;p&gt;many of user does not understand how we create our data to frontend in react so this article help for you.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;first we install&lt;/p&gt;

&lt;p&gt;npm install ejs&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;then set some cofigurations in your project&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;first make folder views
&lt;code&gt;app.set('view engine','ejs');&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#indexejs"&gt;
  &lt;/a&gt;
  index.ejs
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
`&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Express Engine&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;%= heading  %&amp;gt; 
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in our index.js we simple render the page index.ejs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;`app.get('/',(req,res)=&amp;gt;{

   res.render('index.ejs',{heading:"first Page"});
})`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;EJS work as a component based like in react &lt;/p&gt;

&lt;p&gt;simply use include file&lt;/p&gt;

&lt;p&gt;&lt;code&gt;include('header.ejs')&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;some developers are think ejs is tough for us but don&lt;code&gt;t worry about this is a simple like you work on html but some operation map array of content then use it like you use php as server .&lt;br&gt;
&lt;/code&gt;&amp;lt;% array.forEach(item=&amp;gt;{}) %&amp;gt;`&lt;/p&gt;

&lt;p&gt;we can do everything using ejs.&lt;/p&gt;

</description>
      <category>node</category>
      <category>express</category>
      <category>ejs</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Dockerfile for Go</title>
      <author>Young Yoshie</author>
      <pubDate>Sun, 19 Dec 2021 04:46:17 +0000</pubDate>
      <link>https://dev.to/youngyoshie/dockerfile-for-go-4jjp</link>
      <guid>https://dev.to/youngyoshie/dockerfile-for-go-4jjp</guid>
      <description>&lt;p&gt;Each time I start a new Go project, I repeat many steps.&lt;br&gt;
Like set up &lt;code&gt;.gitignore&lt;/code&gt;, CI configs, Dockerfile, ...&lt;/p&gt;

&lt;p&gt;So I decide to have a baseline Dockerfile like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; golang:1.18beta1-bullseye as builder&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /build&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; go.mod .&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; go.sum .&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; vendor .&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nv"&gt;CGO_ENABLED&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0 &lt;span class="nv"&gt;GOOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;linux &lt;span class="nv"&gt;GOARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;amd64 &lt;span class="nv"&gt;GOAMD64&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;v3 go build &lt;span class="nt"&gt;-o&lt;/span&gt; ./app main.go

&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; gcr.io/distroless/base-debian11&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --from=builder /build/app /app&lt;/span&gt;

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; ["/app"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I use &lt;a href="https://docs.docker.com/develop/develop-images/multistage-build/"&gt;multi-stage build&lt;/a&gt; to keep my image size small.&lt;br&gt;
First stage is &lt;a href="https://hub.docker.com/_/golang"&gt;Go official image&lt;/a&gt;,&lt;br&gt;
second stage is &lt;a href="https://github.com/GoogleContainerTools/distroless"&gt;Distroless&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Before Distroless, I use &lt;a href="https://hub.docker.com/_/alpine"&gt;Alpine official image&lt;/a&gt;,&lt;br&gt;
There is a whole discussion on the Internet to choose which is the best base image for Go.&lt;br&gt;
After reading some blogs, I discover Distroless as a small and secure base image.&lt;br&gt;
So I stick with it for a while.&lt;/p&gt;

&lt;p&gt;Also, remember to match Distroless Debian version with Go official image Debian version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; golang:1.18beta1-bullseye as builder&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is Go image I use as a build stage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /build&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; go.mod .&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; go.sum .&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; vendor .&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I use &lt;code&gt;/build&lt;/code&gt; to emphasize that I am building something in that directory.&lt;/p&gt;

&lt;p&gt;The 4 &lt;code&gt;COPY&lt;/code&gt; lines are familiar if you use Go enough.&lt;br&gt;
First is &lt;code&gt;go.mod&lt;/code&gt; and &lt;code&gt;go.sum&lt;/code&gt; because it defines Go modules.&lt;br&gt;
The second is &lt;code&gt;vendor&lt;/code&gt; because I use it a lot, this is not necessary but I use it because I don't want each time I build Dockerfile, I need to redownload Go modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nv"&gt;CGO_ENABLED&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0 &lt;span class="nv"&gt;GOOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;linux &lt;span class="nv"&gt;GOARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;amd64 &lt;span class="nv"&gt;GOAMD64&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;v3 go build &lt;span class="nt"&gt;-o&lt;/span&gt; ./app main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is where I build Go program.&lt;br&gt;
&lt;code&gt;CGO_ENABLED=0&lt;/code&gt; because I don't want to mess with C libraries.&lt;br&gt;
&lt;code&gt;GOOS=linux GOARCH=amd64&lt;/code&gt; is easy to explain, Linux with x86-64.&lt;br&gt;
&lt;code&gt;GOAMD64=v3&lt;/code&gt; is new since &lt;a href="https://tip.golang.org/doc/go1.18#amd64"&gt;Go 1.18&lt;/a&gt;,&lt;br&gt;
I use v3 because I read about AMD64 version in &lt;a href="https://gitlab.archlinux.org/archlinux/rfcs/-/blob/master/rfcs/0002-march.rst"&gt;Arch Linux rfcs&lt;/a&gt;. TLDR's newer computers are already x86-64-v3.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; gcr.io/distroless/base-debian11&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --from=builder /build/app /app&lt;/span&gt;

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; ["/app"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, I copy &lt;code&gt;app&lt;/code&gt; to Distroless base image.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>go</category>
      <category>docker</category>
    </item>
    <item>
      <title>How much increment should I expect after 1yr in startup? </title>
      <author>Shubham Kumar</author>
      <pubDate>Sun, 19 Dec 2021 03:51:55 +0000</pubDate>
      <link>https://dev.to/shubham2270/how-much-increment-should-i-expect-after-1yr-in-startup-3olh</link>
      <guid>https://dev.to/shubham2270/how-much-increment-should-i-expect-after-1yr-in-startup-3olh</guid>
      <description>&lt;p&gt;I have overall 2yrs of experience as frontend dev I'm about to finish 1yr in my current startup company. How much percent increment should I expect in my monthly pay?&lt;/p&gt;

</description>
      <category>help</category>
      <category>career</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
