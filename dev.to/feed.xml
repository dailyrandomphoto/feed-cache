<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>C# conversions: Implicit VS Explicit</title>
      <author>Dotnetsafer</author>
      <pubDate>Mon, 29 Nov 2021 09:19:59 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/c-conversions-implicit-vs-explicit-41g4</link>
      <guid>https://dev.to/dotnetsafer/c-conversions-implicit-vs-explicit-41g4</guid>
      <description>&lt;p&gt;After many years programming in .&lt;em&gt;NET&lt;/em&gt;, you may have already realized that the framework allows us, in a &lt;strong&gt;very simple way&lt;/strong&gt;, to make conversions between different types of data.&lt;/p&gt;

&lt;p&gt;Conversions can be of 2 types 👇&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Implicit Conversions&lt;/li&gt;
&lt;li&gt;Explicit Conversions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Implicit conversions&lt;/strong&gt; are for which it is not necessary to indicate the conversion in parentheses &lt;strong&gt;(…)&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code we assign a variable of type &lt;strong&gt;double&lt;/strong&gt; a value of type int:&lt;/p&gt;

&lt;p&gt;But the compiler doesn’t tell us anything and lets us continue working as if nothing had happened. This is known as an &lt;strong&gt;implicit conversion&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Instead, if we do the following 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;10.0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The compiler will give us an error indicating that an &lt;strong&gt;implicit conversion&lt;/strong&gt; from double to int cannot be done, and tells us to use an &lt;strong&gt;explicit conversion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There is no mystery about it, simply this problem can be fixed by putting &lt;strong&gt;(int)&lt;/strong&gt; in front of &lt;strong&gt;10.0&lt;/strong&gt; 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;10.0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Placing the type of data to which we want to convert it in parentheses is called explicit conversion. What this means is that with this syntax we are explicitly indicating to the compiler that we want to convert one type of data into a different one.&lt;/p&gt;

&lt;p&gt;At this point you could perfectly tell me that this would also work 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Apparently it does the same as if we don’t put &lt;strong&gt;(double)&lt;/strong&gt; in front of it.&lt;/p&gt;

&lt;p&gt;So… where is the difference? 🤔&lt;/p&gt;

&lt;p&gt;The only difference between implicit and explicit conversions has to do with whether or not there is a risk of that information being lost.&lt;/p&gt;

&lt;p&gt;If we go to the first case (without parentheses), it is an &lt;strong&gt;implicit conversion&lt;/strong&gt;. The value of the litetal int does not matter as if we write &lt;strong&gt;double&lt;/strong&gt; since there will be no risk of losing the information as it is a type of greater capacity.&lt;/p&gt;

&lt;p&gt;On the contrary, if we go to the second case, we are forced to do an explicit conversion. This works because a &lt;strong&gt;double&lt;/strong&gt; object can contain values ​​that a smaller capacity int type cannot represent.&lt;/p&gt;

&lt;p&gt;Let’s take an example 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;10.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;An integer type cannot contain decimals, so it will truncate &lt;strong&gt;10.5&lt;/strong&gt; to &lt;strong&gt;10&lt;/strong&gt;, thus losing information.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#how-we-can-create-our-own-conversions"&gt;
  &lt;/a&gt;
  How we can create our own conversions
&lt;/h3&gt;

&lt;p&gt;Usually the conversions of the &lt;em&gt;Framework&lt;/em&gt; are more than enough for the needs that arise. However, there may be many cases where it would be more useful to define our own implicit and explicit conversions. The .&lt;em&gt;NET&lt;/em&gt; platform provides us with an easy way to do it.&lt;/p&gt;

&lt;p&gt;To create a conversion between two types, we simply have to write the corresponding operator, either implicit or explicit.&lt;/p&gt;

&lt;p&gt;We are going to create an imaginary scenario in which we have to manage the &lt;strong&gt;temperatures&lt;/strong&gt; so that the &lt;strong&gt;degrees&lt;/strong&gt; can change between &lt;em&gt;Celsius&lt;/em&gt; and &lt;em&gt;Fahrenheit&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let’s create the code 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Temperature&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;Degrees&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Celsius&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Temperature&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Celsius&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;Grados&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Fahrenheit&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Temperature&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Fahrenheit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Grados&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;  
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now with this code we have the possibility of writing methods so that we do the conversion between them, and which we call each time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Temperature&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;Degrees&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Celsius&lt;/span&gt; &lt;span class="nf"&gt;ToCelsius&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Celsius&lt;/span&gt;&lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="m"&gt;5.0f&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;9.0f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Degrees&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="m"&gt;32&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Fahrenheit&lt;/span&gt; &lt;span class="nf"&gt;ToFahrenheit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Fahrenheit&lt;/span&gt;&lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="m"&gt;9.0f&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;5.0f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Degrees&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="m"&gt;32&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;Celsius&lt;/span&gt; &lt;span class="n"&gt;cel&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Celsius&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Fahrenheit&lt;/span&gt; &lt;span class="n"&gt;far&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToFahrenheit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;Celsius&lt;/span&gt; &lt;span class="n"&gt;cel2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;far&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToCelsius&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This works, but we will have to call the corresponding method each time and this makes the code very messy.&lt;/p&gt;

&lt;p&gt;If we want to do an &lt;strong&gt;implicit conversion&lt;/strong&gt;, we simply have to define a static operator with the static &lt;strong&gt;implicit operator&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We go back to our example 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Temperature&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;Degrees&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Celsius&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Temperature&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Celsius&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Grados&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;implicit&lt;/span&gt; &lt;span class="k"&gt;operator&lt;/span&gt; &lt;span class="nf"&gt;Fahrenheit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Celsius&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Fahrenheit&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="m"&gt;9.0f&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;5.0f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Degrees&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="m"&gt;32&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Fahrenheit&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Temperature&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Fahrenheit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;Grados&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;implicit&lt;/span&gt; &lt;span class="k"&gt;operator&lt;/span&gt; &lt;span class="nf"&gt;Celsius&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Fahrenheit&lt;/span&gt; &lt;span class="n"&gt;fahr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Celsius&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="m"&gt;5.0f&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;9.0f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fahr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Degrees&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="m"&gt;32&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;Celsius&lt;/span&gt; &lt;span class="n"&gt;cel&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Celsius&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Fahrenheit&lt;/span&gt; &lt;span class="n"&gt;far&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Celsius&lt;/span&gt; &lt;span class="n"&gt;cel2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;far&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see that to each class we add an &lt;strong&gt;implicit conversion&lt;/strong&gt; operator for the other related class, and after that, we just implicitly perform the conversions.&lt;/p&gt;

&lt;p&gt;What we gain from this is a much cleaner code that meets the conditions for &lt;strong&gt;implicit conversions&lt;/strong&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#if-we-want-to-do-it-differently"&gt;
  &lt;/a&gt;
  If we want to do it differently… 🤔
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Let’s imagine that we have an application that has to manage the teachers and students of a school.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let’s see it better 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Pupil&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Class&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;IdsCourse&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Teacher&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;IdContract&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If at some point a student becomes a teacher or vice versa, we will need to use a conversion to reuse the data. As in this case, we are going to lose information since the different classes do not handle the same information.&lt;/p&gt;

&lt;p&gt;Therefore the conversion will have to be &lt;strong&gt;explicit&lt;/strong&gt; 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Pupil&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;IdsCourse&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;explicit&lt;/span&gt; &lt;span class="k"&gt;operator&lt;/span&gt; &lt;span class="nf"&gt;Teacher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Pupil&lt;/span&gt; &lt;span class="n"&gt;alum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Teacher&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Class&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IdContract&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Teacher&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Class&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;IdContract&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;explicit&lt;/span&gt; &lt;span class="k"&gt;operator&lt;/span&gt; &lt;span class="nf"&gt;Pupil&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Teacher&lt;/span&gt; &lt;span class="n"&gt;prof&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Pupil&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prof&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Class&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prof&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IdsCourse&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;Teacher&lt;/span&gt; &lt;span class="n"&gt;teacher&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Teacher&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Juan"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Class&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Programming"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IdContract&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="n"&gt;Pupil&lt;/span&gt; &lt;span class="n"&gt;student&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Pupil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;teacher&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Teacher&lt;/span&gt; &lt;span class="n"&gt;teacher2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Teacher&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;student&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#conclution"&gt;
  &lt;/a&gt;
  ✅ Conclution:
&lt;/h3&gt;

&lt;p&gt;Marking a conversion as &lt;strong&gt;implicit&lt;/strong&gt; or &lt;strong&gt;explicit&lt;/strong&gt; must strictly meet the criteria of whether there is a risk of information loss. It may be the case that today you consider the loss of information that occurs to be negligible, but that at some point it is not.&lt;/p&gt;

&lt;p&gt;If you have marked the conversion as &lt;strong&gt;implicit&lt;/strong&gt;, anyone who uses it directly assumes that &lt;strong&gt;there is no information loss&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If there is later and the failure is in that conversion, it can be a big headache, even more so if the code is part of a library and the person who uses it cannot see the code, so always think about it before defining the conversion. 🤗&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>programming</category>
      <category>netcore</category>
    </item>
    <item>
      <title>Amazon launches AWS RoboRunner to support robotics apps &amp; much more</title>
      <author>Adit Modi</author>
      <pubDate>Mon, 29 Nov 2021 09:10:48 +0000</pubDate>
      <link>https://dev.to/cloudtech/amazon-launches-aws-roborunner-to-support-robotics-apps-much-more-50li</link>
      <guid>https://dev.to/cloudtech/amazon-launches-aws-roborunner-to-support-robotics-apps-much-more-50li</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;At a keynote during its &lt;strong&gt;Amazon Web Services (AWS) re:Invent 2021 conference today&lt;/strong&gt;, Amazon launched &lt;strong&gt;AWS IoT RoboRunner&lt;/strong&gt;, a new robotics service designed to make it easier for enterprises to build and deploy apps that enable fleets of robots to work together. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Alongside &lt;strong&gt;IoT RoboRunner&lt;/strong&gt;, Amazon announced the &lt;strong&gt;AWS Robotics Startup Accelerator&lt;/strong&gt;, an incubator program in collaboration with nonprofit &lt;strong&gt;MassRobotics&lt;/strong&gt; to tackle challenges in automation, robotics, and industrial internet of things (IoT) technologies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As pandemics drive digital transformation, enterprises are accelerating the adoption of robotics and, more broadly, automation. recently report Automation World companies have found that most of the companies that have adopted robotics over the past year have adopted it to reduce labor costs, increase capacity, and overcome the shortage of available workers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;According to the same survey, &lt;strong&gt;44.9%&lt;/strong&gt; of companies now consider robots in assembly and manufacturing facilities to be an integral part of their day-to-day operations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon — a large investor in robotics itself — wasn’t shy about its intention to win most of the robotics software market. is expected It is worth more than &lt;strong&gt;$ 7.52 billion by 2022&lt;/strong&gt;. In 2018, the company announced AWS RoboMaker, A product that assists developers in deploying robot applications with AI and machine learning capabilities. And Amazon earlier this year Rolled out SageMaker Reinforcement learning Kubeflow components, a toolkit that supports RoboMaker services for tuning robotics workflows.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#iot-roborunner"&gt;
  &lt;/a&gt;
  IoT RoboRunner
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9N-41za6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwrww3zfl2fupke1goq1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9N-41za6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwrww3zfl2fupke1goq1.png" alt="Image description" width="880" height="486"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Currently previewing IoT RoboRunner is built on technology already used in Amazon Warehouse for robotics management. This allows AWS customers to connect robots to existing automation software and combine each type of data to coordinate the work of the entire operation. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fleet robot Standardize data types such as facilities, locations, and robot task data in the central repository.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the goal of IoT RoboRunner is to simplify the process of building a robot group management app. As companies become more and more dependent on robotics to automate their operations, they are choosing different types of robots, making it more difficult to organize robots efficiently. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Each robot vendor and work management system has its own, often incompatible control software, data formats, and data repositories. Also, as new robots are added to the fleet, they will need to be programmed to connect the control software to the workflow management system and program the logic of the management app.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Developers can use &lt;strong&gt;IoT RoboRunner&lt;/strong&gt; to access the data needed to build robot management apps and leverage pre-built software libraries to create apps for tasks such as work assignments. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In addition to this, you can use IoT RoboRunner to deliver metrics and KPIs to the management dashboard via the API.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With AWS IoT RoboRunner, robot developers no longer have to manage their robots in silos, and centralized management can more effectively automate tasks across the facility.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS IoT RoboRunner lets you connect your robots and work management systems, thereby enabling you to orchestrate work across your operation through a single system view.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#aws-robotics-startup-accelerator"&gt;
  &lt;/a&gt;
  AWS Robotics Startup Accelerator
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aPtXYUXM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hsc4j1x1ygjg1e0w9t0y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aPtXYUXM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hsc4j1x1ygjg1e0w9t0y.png" alt="Image description" width="880" height="498"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon also announced the &lt;strong&gt;Robotics Startup Accelerator&lt;/strong&gt;. The company says it will foster robotics by providing resources to develop, prototype, test, and commercialize products and services.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The AWS Robotics Startup Accelerator delivered by MassRobotics aims to help robotics startups adopt and use AWS to boost their robotics development, as well as get hands-on support from industry and AWS experts to rapidly scale their business.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As the trend towards automation continues, robotics start-ups, especially industrial robotics, are attracting the attention of venture capitalists. From March 2020 to March 2021, venture companies invested $ 6.3 billion in robotics companies, an increase of about 50% from March 2019 to March 2020. according to To the data from PitchBook. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the long run, investment in robotics has more than quintupled over the past five years, rising from $ 1 billion in 2015 to $ 5.4 billion in 2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The accelerator is a &lt;strong&gt;four-week technical, business, and mentorship opportunity&lt;/strong&gt; open to robotics hardware and software startups from around the globe. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Startups accepted into the four-week program will consult with AWS and MassRobotics industry experts on business models and with AWS robotics experts for help overcoming technological blockers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Program benefits for startups include hands-on training about AWS solutions for robotics and up to $10,000 in promotional credits for use of AWS IoT, Robotics, and ML services to help guide them forward. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Participants will gain additional knowledge through mentoring from &lt;strong&gt;robotics domain experts&lt;/strong&gt; and &lt;strong&gt;technical subject matter experts&lt;/strong&gt;. To get ready for life after the accelerator, startups will also get business development and investment guidance from MassRobotics, and co-marketing opportunities with AWS via blogs and case studies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Startups interested in applying to be part of the program can learn more &lt;a href="https://awsroboticsstartupaccelerator.splashthat.com/"&gt;here&lt;/a&gt;. Applications close on Sunday, January 16, 2022.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Let me know your thoughts in the comment section about the new aws services and accelerator program 👇&lt;br&gt;
And if you haven't yet, make sure to follow me on below handles:&lt;/p&gt;

&lt;p&gt;👋 &lt;strong&gt;connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🤓 &lt;strong&gt;connect with me on &lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🐱‍💻 &lt;strong&gt;follow me on &lt;a href="https://github.com/AditModi"&gt;github&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
✍️ &lt;strong&gt;Do Checkout &lt;a href="https://aditmodi.hashnode.dev"&gt;my blogs&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Like, share and follow me 🚀 for more content.&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__497987"&gt;
  
    .ltag__user__id__497987 .follow-action-button {
      background-color: #000000 !important;
      color: #fa6c00 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/aditmodi" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYJrtrA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mUzXbt1U--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497987/edde8513-7308-4a4d-9592-2be160d074d2.png" alt="aditmodi image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/aditmodi"&gt;Adit Modi&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/aditmodi"&gt;Cloud Engineer | AWS Community Builder | 8x AWS Certified | 3x Azure Certified | Author of Cloud Tech , DailyDevOps &amp;amp; BigDataJournal | DEV moderator&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;





&lt;p&gt;👨‍💻 &lt;strong&gt;Join our &lt;a href="https://join.slack.com/t/cloudtechcommunity/shared_invite/zt-wptacj2f-Eu4PPvq6WEkBTHg7PR2ncA"&gt;Cloud Tech Slack Community&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
👋 &lt;strong&gt;Follow us on &lt;a href="https://www.linkedin.com/company/cloud-techs"&gt;Linkedin&lt;/a&gt; / &lt;a href="https://twitter.com/AboutCloudTech"&gt;Twitter&lt;/a&gt; for latest news&lt;/strong&gt; &lt;br&gt;
💻 &lt;strong&gt;Take a Look at our &lt;a href="https://github.com/My-Machine-Learning-Projects-2020"&gt;Github Repos&lt;/a&gt; to know more about our projects&lt;/strong&gt; &lt;br&gt;
✍️ &lt;strong&gt;Our &lt;a href="https://cloudtech.hashnode.dev"&gt;Website&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Feature update: Feed</title>
      <author>Amy Lin</author>
      <pubDate>Mon, 29 Nov 2021 08:27:35 +0000</pubDate>
      <link>https://dev.to/devteam/feature-update-feed-3go5</link>
      <guid>https://dev.to/devteam/feature-update-feed-3go5</guid>
      <description>&lt;p&gt;Hello, wonderful DEV community!&lt;/p&gt;

&lt;p&gt;My name is Amy, and I’m a product manager here at Forem. I started my journey here this past August so if we haven’t interacted on DEV before, it’s great to meet you!&lt;/p&gt;

&lt;p&gt;Today, I wanted to share an update about a topic that impacts anyone who regularly visits and/or writes on DEV – our home feed and the algorithm behind it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#addressing-some-important-concerns"&gt;
  &lt;/a&gt;
  Addressing some important concerns
&lt;/h2&gt;

&lt;p&gt;We have heard our community's frustrations about our feed. Some examples include your feed not reflecting tag preferences, too many listicles, and more recent posts rather than relevant posts. We have come across posts by community members exploring how to improve their experience of the feed with a handful of unofficial workarounds.&lt;/p&gt;

&lt;p&gt;While the ingenuity of our community doesn't surprise us (and in fact, delights us), we don't think you should have to find "hacks" in order to make this space work as you expect.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#our-commitment-on-continuous-improvement"&gt;
  &lt;/a&gt;
  Our commitment on continuous improvement
&lt;/h2&gt;

&lt;p&gt;We strive to make DEV an enjoyable place for our members. However, this is not always easy. To solve these problems effectively, we first need to know what might contribute to these problems. As some of you probably already know, our feed algorithm is complex. It is often difficult for &lt;strong&gt;us&lt;/strong&gt;, as core team members at Forem, to digest what is going on in it. This challenge makes it difficult for the community to chime in, as it hasn’t been clear what factors are diminishing our feed’s quality. As technology evolves over time naturally, we need to untangle and refactor different layers of decision making in our software so as to pinpoint the underlying root cause(s).&lt;/p&gt;

&lt;p&gt;We are committed to making a great feed experience while being transparent in how we work. The first step is for us to shed light on how our algorithm works to ensure that the code base is accessible and readable for our community. This post, the changes to our feed algorithm, plus all the great &lt;a href="https://github.com/forem/forem/pull/15240"&gt;refactoring&lt;/a&gt; &lt;a href="https://github.com/forem/forem/pull/15180"&gt;work&lt;/a&gt; going into it by &lt;a href="https://dev.to/jeremyf"&gt;Jeremy&lt;/a&gt; are our first baby steps towards this commitment. We also renamed the name of the default sorting on your feed &lt;a href="https://github.com/forem/forem/pull/15435"&gt;from “Feed” to “Relevant”&lt;/a&gt; for clarity. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-peek-at-how-the-dev-feed-works"&gt;
  &lt;/a&gt;
  A peek at how the DEV feed works
&lt;/h2&gt;

&lt;p&gt;Without further ado, here is a high-level summary of how our feed algorithm works.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;When deciding which posts should be in your home feed, four things come into play:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The freshness of a post (how new is a post?)&lt;/li&gt;
&lt;li&gt;The relevance of a post (relevance as in, do you follow any of the tags on this post? Do you follow the author?)&lt;/li&gt;
&lt;li&gt;The popularity of a post (how many comments have been left? How many reactions have been given?)&lt;/li&gt;
&lt;li&gt;Moderator feedback for a post (has this post been reported?)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;After a series of calculations based on the above, we will then assign a “score” to each post. Then, the posts with the highest scores are delivered to your feed. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#possible-causes-of-devs-feed-algorithm-quality-issues"&gt;
  &lt;/a&gt;
  Possible causes of DEV’s feed algorithm quality issues
&lt;/h2&gt;

&lt;p&gt;After some investigation, &lt;strong&gt;we realized we are unintentionally giving reactions too much weight when calculating the aforementioned score of a post. It manifests itself in the following ways:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;It’s really easy to game the algorithm by farming reactions&lt;/li&gt;
&lt;li&gt;Sometimes too many irrelevant posts show up in feed because they have gotten lots of reactions&lt;/li&gt;
&lt;li&gt;As a consequence, there are too many irrelevant posts to a point that you don’t feel like your feed is relevant to you anymore&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-we-have-changed-so-far"&gt;
  &lt;/a&gt;
  What we have changed so far
&lt;/h2&gt;

&lt;p&gt;We are launching an &lt;a href="https://github.com/forem/forem/pull/15240"&gt;A/B test&lt;/a&gt; in our algorithm, with the treatment of suppressing the effect of reactions in calculation. We will start with 20% of our users, and observe the performance to decide whether it is ready to be rolled out to more users – or if it requires some tweaks. &lt;/p&gt;

&lt;p&gt;We also have identified several other opportunities to improve the algorithm, and we see this as an iterative effort. In other words, you’ll be hearing from me again with more updates and information about our feed as we work on improving it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-you-think"&gt;
  &lt;/a&gt;
  What do you think?
&lt;/h2&gt;

&lt;p&gt;We would love to hear your thoughts on anything mentioned above. Do you think our fixes will address the issues you have encountered on your home feed? Are there other problems you are experiencing with the feed? Let me know in the comments below!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Finally, on behalf of the entire Forem team, I want to thank you not only for being a member of DEV, but also for being active and vocal with your frustrations and the changes you’d like to see here. We appreciate your patience and commitment to being stewards of this community.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>meta</category>
      <category>product</category>
      <category>ux</category>
      <category>changelog</category>
    </item>
    <item>
      <title>Use GIT REBASE instead of GIT MERGE</title>
      <author>ThePylot</author>
      <pubDate>Mon, 29 Nov 2021 08:20:49 +0000</pubDate>
      <link>https://dev.to/thepylot/use-git-rebase-instead-of-git-merge-3c1c</link>
      <guid>https://dev.to/thepylot/use-git-rebase-instead-of-git-merge-3c1c</guid>
      <description>&lt;p&gt;&lt;a href="https://www.thepylot.dev/use-git-rebase-instead-of-git-merge-2/"&gt;In this quick post&lt;/a&gt;, I want to show how to use git rebase to keep your commit path clean and maintainable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-raw-git-rebase-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;git rebase&lt;/code&gt;?
&lt;/h2&gt;

&lt;p&gt;It behaves like merging by applying all changes from the target branch but not creating an extra commit for that where it keeps the commit log clean and readable. Simply, it takes your new commits at puts them at the very top of commit log.&lt;/p&gt;

&lt;p&gt;Let's assume that you're implementing a new feature by creating a new branch from the master. Meanwhile, you're co-workers also working on other features and some of them already merged their PRs to master branch. &lt;/p&gt;

&lt;p&gt;At this point, your branch will be no longer up-to-date with master so you need to apply those changes before attempting to create any pull request.&lt;/p&gt;

&lt;p&gt;Usually, there're two options for such cases:&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;git merge&lt;/code&gt;&lt;br&gt;
Using &lt;code&gt;git rebase&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's say you decide to use &lt;code&gt;git merge&lt;/code&gt; to apply changes from &lt;code&gt;master&lt;/code&gt; where it will create an extra commit for each merging. Imagine how messy the git log will be if we continuously use merging to keep our branch up-to-date. It also makes hard to track real commits since the majority of them will be created automatically by merging.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#example-scenario"&gt;
  &lt;/a&gt;
  Example scenario
&lt;/h2&gt;

&lt;p&gt;Assume that we want to rebase with the &lt;code&gt;master&lt;/code&gt; branch to apply most recent changes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git rebase master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If there will be any conflicts while rebasing, then you have to resolve them and also adding changes once you finished:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add -u
git rebase --continue
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case you decided to abort the process:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git rebase --abort
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once rebasing finished, you will able to see new changes in your branch.&lt;/p&gt;

&lt;p&gt;I prefer to avoid git merge at all except in PRs where it have to merge with master by creating a commit about it. So, when analyzing git log it will be much easier to understand purpose of commits.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#video-explanation"&gt;
  &lt;/a&gt;
  Video Explanation
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/laKgInNOie4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
    </item>
    <item>
      <title>Feature update: Markdown toolbar</title>
      <author>Amy Lin</author>
      <pubDate>Mon, 29 Nov 2021 08:16:43 +0000</pubDate>
      <link>https://dev.to/devteam/feature-update-markdown-toolbar-2lma</link>
      <guid>https://dev.to/devteam/feature-update-markdown-toolbar-2lma</guid>
      <description>&lt;p&gt;Hello, DEV community!&lt;/p&gt;

&lt;p&gt;Today, I have a quick (but exciting!) update for those of you who write on DEV. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#we-now-have-a-markdown-toolbar-in-our-editor"&gt;
  &lt;/a&gt;
  We now have a markdown toolbar in our editor!
&lt;/h2&gt;

&lt;p&gt;We have always prided ourselves on minimalistic and concise design. When possible, we keep things simple and straightforward. Our editor is tricky, though. While we have gotten consistent feedback that our community appreciates the simplicity, we have also gotten requests for more instruction and guidance when writing, especially around markdown formatting syntaxes. Though the majority of our community members are familiar with markdown syntaxes, we certainly don’t want those who are not familiar with them feeling uncomfortable and unwelcome to share their experience on DEV. &lt;/p&gt;

&lt;p&gt;To improve this, we are adding a little human touch to the editor with the introduction of the markdown toolbar. We believe the toolbar should give writers &lt;em&gt;just enough&lt;/em&gt;  guidance to have an enriched writing experience without formatting getting in the way of the writing itself. In other words, we aim to remove the distractions you may encounter, so you can focus on writing. (Hint: we also have something exciting planned around &lt;a href="https://github.com/forem/forem/issues/15099"&gt;simplifying liquid tags&lt;/a&gt; ✨)&lt;/p&gt;

&lt;p&gt;We are also aware that our community enjoys learning about how our features come together. If that is your cup of tea, stay tuned! Our own wonderful &lt;a href="https://dev.to/s_aitchison"&gt;Suzanne&lt;/a&gt; (Frontend Software Engineer @ Forem) will be sharing her experience developing the Toolbar. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#have-you-written-a-post-yet"&gt;
  &lt;/a&gt;
  Have you written a post yet?
&lt;/h2&gt;

&lt;p&gt;Have you written a post since this update? Have you noticed the Toolbar? How do you like it? Are you a Toolbar user or do you prefer to type out syntaxes? If you haven’t used the Toolbar yet, I encourage you to check it out and let us know what you think! &lt;/p&gt;

&lt;p&gt;If you have &lt;em&gt;never&lt;/em&gt; written a post on DEV, consider this your personal invitation from me to start! Check out &lt;a href="https://dev.to/andrewbaisden/100-blog-topic-ideas-for-your-next-article-no-more-writers-block-2e0j"&gt;these ideas&lt;/a&gt; for your first DEV post from community member &lt;a class="mentioned-user" href="https://dev.to/andrewbaisden"&gt;@andrewbaisden&lt;/a&gt;
 for your first DEV post.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cover image screenshot by &lt;a href="https://dev.to/s_aitchison"&gt;Suzanne Aitchison&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>meta</category>
      <category>product</category>
      <category>ux</category>
      <category>changelog</category>
    </item>
    <item>
      <title>Running Serverless Applications on Kubernetes with Knative</title>
      <author>Peter Mbanugo</author>
      <pubDate>Mon, 29 Nov 2021 08:06:05 +0000</pubDate>
      <link>https://dev.to/pmbanugo/running-serverless-applications-on-kubernetes-with-knative-bef</link>
      <guid>https://dev.to/pmbanugo/running-serverless-applications-on-kubernetes-with-knative-bef</guid>
      <description>&lt;p&gt;Kubernetes provides a set of primitives to run resilient, distributed applications. It takes care of scaling and automatic failover for your application and it provides deployment patterns and APIs that allow you to automate resource management and provision new workloads.&lt;/p&gt;

&lt;p&gt;One of the main challenges that developers face is how to focus more on the details of the code rather than the infrastructure where that code runs. For that, serverless is one of the leading architectural paradigms to address this challenge. There are various platforms that allow you to run serverless applications either deployed as single functions or running inside containers, such as AWS Lambda, AWS Fargate, and Azure Functions. These managed platforms come with some drawbacks like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Vendor lock-in&lt;/li&gt;
&lt;li&gt;Constraint in the size of the application binary/artifacts&lt;/li&gt;
&lt;li&gt;Cold start performance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You could be in a situation where you're only allowed to run applications within a private data center, or you may be using Kubernetes but you'd like to harness the benefits of serverless. There are different open-source platforms, such as Knative and OpenFaaS, that use Kubernetes to abstract the infrastructure from the developer, allowing you to deploy and manage your applications using serverless architecture and patterns. Using any of those platforms takes away the problems mentioned in the previous paragraph.&lt;/p&gt;

&lt;p&gt;This article will show you how to deploy and manage serverless applications using Knative and Kubernetes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#serverless-landscape"&gt;
  &lt;/a&gt;
  Serverless Landscape
&lt;/h2&gt;

&lt;p&gt;Serverless computing is a development model that allows you to build and run applications without having to manage servers. It describes a model where a cloud provider handles the routine work of provisioning, maintaining, and scaling the server infrastructure, while the developers can simply package and upload their code for deployment. Serverless apps can automatically scale up and down as needed, without any extra configuration by the developer.&lt;/p&gt;

&lt;p&gt;As stated in a &lt;a href="https://github.com/cncf/wg-serverless/tree/master/whitepapers/serverless-overview"&gt;white paper&lt;/a&gt; by the CNCF serverless working group, there are two primary serverless personas:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Developer&lt;/strong&gt;: Writes code for and benefits from the serverless platform that provides them with the point of view that there are no servers and that their code is always running.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Provider&lt;/strong&gt;: Deploys the serverless platform for an external or internal customer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &lt;em&gt;provider&lt;/em&gt; needs to manage servers (or containers) and will have some cost for running the platform, even when idle. A self-hosted system can still be considered serverless: Typically, one team acts as the provider and another as the developer.&lt;/p&gt;

&lt;p&gt;In the Kubernetes landscape, there are various ways to run serverless apps. It can be through managed serverless platforms like IBM Cloud Code and Google Cloud Run, or open-source alternatives that you can self-host, such as OpenFaaS and Knative.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction-to-knative"&gt;
  &lt;/a&gt;
  Introduction to Knative
&lt;/h2&gt;

&lt;p&gt;Knative is a set of Kubernetes components that provides serverless capabilities. It provides an event-driven platform that can be used to deploy and run applications and services that can auto-scale based on demand, with out-of-the-box support for monitoring, automatic renewal of TLS certificates, and more.&lt;/p&gt;

&lt;p&gt;Knative is used by a lot of companies. In fact, it powers the Google Cloud Run platform, IBM Cloud Code Engine, and Scaleway serverless functions.&lt;/p&gt;

&lt;p&gt;The basic deployment unit for Knative is a container that can receive incoming traffic. You give it a container image to run and Knative handles every other component needed to run and scale the application. The deployment and management of the containerized app is handled by one of the core components of Knative, called Knative Serving. Knative Serving is the component in Knative that manages the deployment and rollout of stateless services, plus its networking and autoscaling requirements.&lt;/p&gt;

&lt;p&gt;The other core component of Knative is called Knative Eventing. This component provides an abstract way to consume &lt;strong&gt;Cloud Events&lt;/strong&gt; from internal and external sources without writing extra code for different event sources. This article focuses on Knative Serving but you will learn about how to use and configure Knative Eventing for different use-cases in a future article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#development-set-up"&gt;
  &lt;/a&gt;
  Development Set Up
&lt;/h2&gt;

&lt;p&gt;In order to install Knative and deploy your application, you'll need a Kubernetes cluster and the following tools installed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;kubectl, the Kubernetes command-line tool&lt;/li&gt;
&lt;li&gt;kn CLI, the CLI for managing Knative application and configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#installing-docker"&gt;
  &lt;/a&gt;
  Installing Docker
&lt;/h3&gt;

&lt;p&gt;To install Docker, go to the URL &lt;a href="https://docs.docker.com/get-docker"&gt;docs.docker.com/get-docker&lt;/a&gt; and download the appropriate binary for your OS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-kubectl"&gt;
  &lt;/a&gt;
  Installing kubectl
&lt;/h3&gt;

&lt;p&gt;The Kubernetes command-line tool &lt;em&gt;kubectl&lt;/em&gt; allows you to run commands against Kubernetes clusters. Docker Desktop installs kubectl for you, so if you followed the previous section in installing Docker Desktop, you should already have kubectl installed and you can skip this step. If you don't have kubectl installed, follow the instructions below to install it.&lt;/p&gt;

&lt;p&gt;If you're on Linux or macOS, you can install kubectl using Homebrew by running the command &lt;code&gt;brew install kubectl&lt;/code&gt;. Ensure that the version you installed is up to date by running the command &lt;code&gt;kubectl version --client&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you're on Windows, run the command &lt;code&gt;curl -LO https://dl.k8s.io/release/v1.21.0/bin/windows/amd64/kubectl.exe&lt;/code&gt; to install kubectl, and then add the binary to your PATH. Ensure that the version you installed is up to date by running the command &lt;code&gt;kubectl version --client&lt;/code&gt;. You should have version 1.20.x or v1.21.x because in a future section, you're going to create a server cluster with Kubernetes version 1.21.x.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-kn-cli"&gt;
  &lt;/a&gt;
  Installing kn CLI
&lt;/h3&gt;

&lt;p&gt;The kn CLI provides a quick and easy interface for creating Knative resources, such as services and event sources, without the need to create or modify YAML files directly. kn also simplifies completion of otherwise complex procedures, such as autoscaling and traffic splitting.&lt;/p&gt;

&lt;p&gt;To install kn on macOS or Linux, run the command &lt;code&gt;brew install kn&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To install kn on Windows, download and install a stable binary from &lt;a href="https://mirror.openshift.com/pub/openshift-v4/clients/serverless/latest"&gt;https://mirror.openshift.com/pub/openshift-v4/clients/serverless/latest&lt;/a&gt;. Afterward, add the binary to the system PATH.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-kubernetes-cluster"&gt;
  &lt;/a&gt;
  Creating a Kubernetes Cluster
&lt;/h2&gt;

&lt;p&gt;You need a Kubernetes cluster to run Knative. For this article, you're going to work with a local Kubernetes cluster running on Docker. You should have Docker Desktop installed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-cluster-with-docker-desktop"&gt;
  &lt;/a&gt;
  Create a Cluster with Docker Desktop
&lt;/h3&gt;

&lt;p&gt;Docker Desktop includes a standalone Kubernetes server and client. This is a single-node cluster that runs within a Docker container on your local system and should be used only for local testing.&lt;/p&gt;

&lt;p&gt;To enable Kubernetes support and install a standalone instance of Kubernetes running as a Docker container, go to &lt;strong&gt;Preferences &amp;gt; Kubernetes&lt;/strong&gt; and then click &lt;strong&gt;Enable Kubernetes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Apply &amp;amp; Restart&lt;/strong&gt; to save the settings and then click Install to confirm, as shown in the image below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--maZyvpGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codemag.com/Article/Image/2109081/image1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--maZyvpGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codemag.com/Article/Image/2109081/image1.png" alt="Figure 1: Enable Kubernetes on Docker Desktop" width="880" height="507"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This instantiates the images required to run the Kubernetes server as containers.&lt;/p&gt;

&lt;p&gt;The status of Kubernetes shows in the Docker menu and the context points to &lt;strong&gt;docker-desktop&lt;/strong&gt;, as shown in the image below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jRbSMNaV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codemag.com/Article/Image/2109081/image2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jRbSMNaV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codemag.com/Article/Image/2109081/image2.png" alt="Figure 2 : kube context" width="387" height="377"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alternatively-create-a-cluster-with-kind"&gt;
  &lt;/a&gt;
  Alternatively, Create a Cluster with Kind
&lt;/h3&gt;

&lt;p&gt;You can also create a cluster using kind, a tool for running local Kubernetes clusters using Docker container nodes. If you have kind installed, you can run the following command to create your kind cluster and set the kubectl context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -sL https://raw.githubusercontent.com/csantanapr/knative-kind/master/01-kind.sh | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#install-knative-serving"&gt;
  &lt;/a&gt;
  Install Knative Serving
&lt;/h2&gt;

&lt;p&gt;Knative Serving manages service deployments, revisions, networking, and scaling. The Knative Serving component exposes your service via an HTTP URL and has safe defaults for its configurations.&lt;/p&gt;

&lt;p&gt;For kind users, follow these instructions to install Knative Serving:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run the command &lt;code&gt;curl -sL https://raw.githubusercontent.com/csantanapr/knative-kind/master/02-serving.sh | sh&lt;/code&gt; to install Knative Serving.&lt;/li&gt;
&lt;li&gt;When that's done, run the command &lt;code&gt;curl -sL https://raw.githubusercontent.com/csantanapr/knative-kind/master/02-kourier.sh | sh&lt;/code&gt; to install and configure Kourier.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For Docker Desktop users, run the command &lt;code&gt;curl -sL https://raw.githubusercontent.com/csantanapr/knative-docker-desktop/main/demo.sh | sh&lt;/code&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-your-first-application"&gt;
  &lt;/a&gt;
  Deploying Your First Application
&lt;/h2&gt;

&lt;p&gt;Next, you'll deploy a basic Hello World application so that you can learn how to deploy and configure an application on Knative. You can deploy an application using a YAML file and the kubectl command, or using the kn command and passing the right options. For this article, I'll be using the kn command. The sample container image you'll use is hosted on &lt;a href="https://gcr.io/knative-samples/helloworld-go"&gt;gcr.io/knative-samples/helloworld-go&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To deploy an application, you use the &lt;code&gt;kn service create&lt;/code&gt; command, and you need to specify the name of the application and the container image to use.&lt;/p&gt;

&lt;p&gt;Run the following command to create a service called &lt;code&gt;hello&lt;/code&gt; using the image &lt;a href="https://gcr.io/knative-samples/helloworld-go"&gt;https://gcr.io/knative-samples/helloworld-go&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kn service create hello &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--image&lt;/span&gt; gcr.io/knative-samples/helloworld-go &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--port&lt;/span&gt; 8080 &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--revision-name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;world
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The command creates and starts a new service using the specified image and port. An environment variable is set using the &lt;code&gt;--env&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;The revision name is set to &lt;code&gt;world&lt;/code&gt; using the &lt;code&gt;--revision-name&lt;/code&gt; option. Knative uses revisions to maintain the history of each change to a service. Each time a service is updated, a new revision is created and promoted as the current version of the application. This feature allows you to roll back to previous version of the service when needed. Specifying a name for the revision allows you to easily identify them.&lt;/p&gt;

&lt;p&gt;When the service is created and ready, you should get the following output printed in the console.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Service hello created to latest revision 'hello-world'
is available at URL: http://hello.default.127.0.0.1.nip.io
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Confirm that the application is running by running the command &lt;code&gt;curl http://hello.default.127.0.0.1.nip.io&lt;/code&gt;. You should get the output &lt;strong&gt;Hello World!&lt;/strong&gt; printed in the console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#update-the-service"&gt;
  &lt;/a&gt;
  Update the Service
&lt;/h3&gt;

&lt;p&gt;Suppose you want to update the service; you can use the &lt;code&gt;kn service update&lt;/code&gt; command to make any changes to the service. Each change creates a new revision, and directs all traffic to the new revision once it's started and is healthy.&lt;/p&gt;

&lt;p&gt;Update the TARGET environment variable by running the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kn service update hello &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--env&lt;/span&gt; &lt;span class="nv"&gt;TARGET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Coder &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--revision-name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;coder
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should get the following output when the command has completed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Service 'hello' updated to latest revision
'hello-coder' is available at
URL: http://hello.default.127.0.0.1.nip.io
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the curl command again and you should get &lt;strong&gt;Hello Coder!&lt;/strong&gt; printed out.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~ curl http://hello.default.127.0.0.1.nip.io
~ Hello Coder!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#traffic-splitting-and-revisions"&gt;
  &lt;/a&gt;
  Traffic Splitting and Revisions
&lt;/h2&gt;

&lt;p&gt;Knative Revision is similar to a version control tag or label and it's immutable. Every Knative Revision has a corresponding Kubernetes Deployment associated with it; it allows the application to be rolled back to any of the previous revisions. You can see the list of available revisions by running the command &lt;code&gt;kn revisions list&lt;/code&gt;. This should print out a list of available revisions for every service, with information on how much traffic each revision gets, as shown in the image below. By default, each new revision gets routed 100% of traffic when created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AuOGb3UY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codemag.com/Article/Image/2109081/image5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AuOGb3UY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codemag.com/Article/Image/2109081/image5.png" alt="Figure 5 : Revision list" width="880" height="107"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With revisions, you may wish to deploy applications using common deployment patterns such as Canary or blue-green. You need to have more than one revision of a service in order to use these patterns. The &lt;em&gt;hello&lt;/em&gt; service you deployed in the previous section already have two revisions named &lt;strong&gt;hello-world&lt;/strong&gt; and &lt;strong&gt;hello-coder&lt;/strong&gt; respectively. You can split traffic 50% for each revision using the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kn service update hello &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--traffic&lt;/span&gt; hello-world&lt;span class="o"&gt;=&lt;/span&gt;50 &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--traffic&lt;/span&gt; hello-coder&lt;span class="o"&gt;=&lt;/span&gt;50
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the &lt;code&gt;curl http://hello.default.127.0.0.1.nip.io&lt;/code&gt; command a few times to see that you get &lt;strong&gt;Hello World!&lt;/strong&gt; sometimes, and &lt;strong&gt;Hello Coder!&lt;/strong&gt; other times.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dbT9fRwN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codemag.com/Article/Image/2109081/image6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dbT9fRwN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codemag.com/Article/Image/2109081/image6.png" alt="Figure 6 : Traffic Splitting" width="880" height="387"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#autoscaling-services"&gt;
  &lt;/a&gt;
  Autoscaling Services
&lt;/h2&gt;

&lt;p&gt;One of the benefits of serverless is the ability to scale up and down to meet demand. When there's no traffic coming in, it should scale down, and when it peaks, it should scale up to meet demand. Knative scales out the pods for a Knative Service based on inbound HTTP traffic. After a period of idleness (by default, 60 seconds), Knative terminates all of the pods for that service. In other words, it scales down to zero. This autoscaling capability of Knative is managed by &lt;strong&gt;Knative Horizontal Pod Autoscaler&lt;/strong&gt; in conjunction with the &lt;strong&gt;Horizontal Pod Autoscaler&lt;/strong&gt; built into Kubernetes.&lt;/p&gt;

&lt;p&gt;If you've not accessed the hello service for more than one minute, the pods should have already been terminated. Running the command &lt;code&gt;kubectl get pod -l serving.knative.dev/service=hello -w&lt;/code&gt; should show you an empty result. To see the autoscaling in action, open the service URL in the browser and check back to see the pods started and responding to the request. You should get an output similar to what's shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wqubFnew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codemag.com/Article/Image/2109081/image7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wqubFnew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codemag.com/Article/Image/2109081/image7.png" alt="Scaling Up" width="880" height="340"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Scaling Up&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s9R36_kF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codemag.com/Article/Image/2109081/image8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s9R36_kF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codemag.com/Article/Image/2109081/image8.png" alt="Scaling Down" width="880" height="205"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Scaling Down&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There you have the awesome autoscaling capability of serverless.&lt;/p&gt;

&lt;p&gt;If you have an application that is badly affected by the coldstart performance, and you'd like to keep at least one instance of the application running, you can do so by running the command &lt;code&gt;kn service update &amp;lt;SERVICE_NAME&amp;gt; --scale-min &amp;lt;VALUE&amp;gt;&lt;/code&gt;. For example, to keep at least one instance of the hello service running at all times, you can use the command &lt;code&gt;kn service update hello --scale-min 1&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's Next?
&lt;/h2&gt;

&lt;p&gt;Kubernetes has become a standard tool for managing container workloads. A lot of companies rely on it to build and scale cloud native applications, and it powers many of the products and services you use today. Although companies are adopting Kubernetes and reaping some benefits, developers aren't interested in the low-level details of Kubernetes and therefore want to focus on their code without worrying about the infrastructure bits of running the application.&lt;/p&gt;

&lt;p&gt;Knative provides a set of tools and CLI that developers can use to deploy their code and have Knative manage the infrastructure requirement of the application. In this article, you saw how to install the Knative Serving component and deploy services to run on it. You also learned how to deploy services and manage their configuration using the kn CLI. If you want to learn more about how to use the kn CLI, check out this free cheat sheet I made at &lt;a href="http://cheatsheet.pmbanugo.me/knative-serving"&gt;cheatsheet.pmbanugo.me/knative-serving&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a future article, I'll show you how to work with Knative Eventing and how your application can respond to Cloud Events in and out of your cluster.&lt;/p&gt;

&lt;p&gt;In the meantime, you can get my book &lt;a href="https://books.pmbanugo.me/serverless-app-platform"&gt;How to build a serverless app platform on Kubernetes&lt;/a&gt;. It will teach you how to build a platform to deploy and manage web apps and services using Cloud Native technologies. You will learn about serverless, Knative, Tekton, GitHub Apps, Cloud Native Buildpacks, and more!&lt;/p&gt;

&lt;p&gt;Get your copy at &lt;a href="https://books.pmbanugo.me/serverless-app-platform"&gt;books.pmbanugo.me/serverless-app-platform&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Originally published on &lt;a href="https://www.codemag.com/article/2109081"&gt;Code Magazine&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>serverless</category>
      <category>cloudnative</category>
      <category>kubernetes</category>
      <category>cloud</category>
    </item>
    <item>
      <title>CAST AI is officially SOC 2 Type II compliant</title>
      <author>CAST AI</author>
      <pubDate>Mon, 29 Nov 2021 08:00:14 +0000</pubDate>
      <link>https://dev.to/castai/cast-ai-is-officially-soc-2-type-ii-compliant-3oa3</link>
      <guid>https://dev.to/castai/cast-ai-is-officially-soc-2-type-ii-compliant-3oa3</guid>
      <description>&lt;p&gt;We mean it when we say that security is at the heart of CAST AI. &lt;/p&gt;

&lt;p&gt;Several of our founders previously built a company that specialized in application security and attack mitigation. Leon Kuperman, our CTO, previously worked at Oracle as the VP of Security Products.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;As part of our continued commitment to deliver the most secure environment for our clients, we're pleased to report that &lt;strong&gt;CAST AI has passed the independent SOC 2 Type II examination&lt;/strong&gt; that attests to the high level of our privacy and security policies and processes. &lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;Why is SOC 2 Type II important?&lt;/h2&gt;

&lt;p&gt;SOC 2 Type II refers to a specific type and degree of SOC (Service Organization Control) report. SOC is a system of standards from the American Institute of Certified Public Accountants (AICPA) used to assess a company’s data security policies and their effectiveness. &lt;/p&gt;

&lt;p&gt;Under the SOC umbrella, SOC 2 Type II represents the most thorough and difficult-to-achieve compliance. It’s one of the most trusted and sought-after third-party security verifications.&lt;/p&gt;

&lt;h2&gt;What does the SOC 2 Type II examination take into account?&lt;/h2&gt;

&lt;p&gt;SOC 2 Type II examine the security, confidentiality, and availability in an organization using five key principles of trust established by the AICPA:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Protections against unauthorized access that defines the security of a vendor's system.&lt;/li&gt;
&lt;li&gt;The completeness, validity, timeliness, accuracy, and authorization of a vendor's system's processing.&lt;/li&gt;
&lt;li&gt;The availability of a vendor's system for operation and usage as specified in the customer agreement.&lt;/li&gt;
&lt;li&gt;The confidentiality of the information the vendor processes and keeps, and how that confidentiality is safeguarded.&lt;/li&gt;
&lt;li&gt;The privacy of the personal information the vendor collects, holds, uses, discloses, and disposes of.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To qualify for the SOC 2 Type II report, we developed strict security procedures following these principles. We then engaged an accredited independent auditor to assess their quality and monitor our adherence to these procedures over the period of 4 four months (June-October 2021). &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The result was a detailed report showing that we consistently live up to our security promises. It confirmed that &lt;strong&gt;CAST AI meets all the service commitments and system requirements&lt;/strong&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Our commitment to providing a secure solution to our customers doesn’t end here. We’re already ISO27001-certified and are constantly improving our security practices to make our product fully protected against all kinds of threats.&lt;/p&gt;

&lt;h2&gt;Was SOC 2 holding you back from trying out CAST AI?&lt;/h2&gt;

&lt;p&gt;Book a demo call today with the assurance that CAST AI is compatible with your security practices.&lt;/p&gt;



&lt;h2&gt;Learn more about security in CAST AI&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;To learn more about our approach to security, check out this &lt;a href="https://cast.ai/blog/a-quick-guide-to-data-and-security-in-cast-ai/"&gt;guide to security and privacy in CAST AI&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Here’s a detailed look into how CAST AI works when analyzing and optimizing cloud infrastructure: &lt;a href="https://cast.ai/blog/how-does-the-read-only-cast-ai-agent-work-and-what-data-can-it-read/"&gt;How does the read-only CAST AI agent work and what data can it read?&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>news</category>
      <category>cloud</category>
      <category>kubernetes</category>
    </item>
    <item>
      <title>Create your own NFT collection on Ethereum w/Solidity</title>
      <author>Eda</author>
      <pubDate>Mon, 29 Nov 2021 07:46:29 +0000</pubDate>
      <link>https://dev.to/edatweets_/create-your-own-nft-collection-on-ethereum-wsolidity-1ai5</link>
      <guid>https://dev.to/edatweets_/create-your-own-nft-collection-on-ethereum-wsolidity-1ai5</guid>
      <description>&lt;p&gt;My Twitter feed has tons of avatar profile pictures, articles are coming out daily showcasing some large NFT sales, and people are earning money with their in-game creatures... &lt;/p&gt;

&lt;p&gt;I guess this means it's time to go down the NFT rabbit hole. So let's get to it!&lt;/p&gt;

&lt;p&gt;This article &lt;strong&gt;introduces NFT's&lt;/strong&gt; and guides you through &lt;strong&gt;creating your NFT collection on Ethereum using solidity&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Creating your collection sounds complicated; I thought the same. Frankly, I would have never imagined creating an NFT collection, let alone try to explain it in a 10min article, if it weren't for  &lt;a href="https://buildspace.so/"&gt;buildspace&lt;/a&gt; . Buildspace is a platform for developers to learn about web3 by creating projects. I signed up for my first project and was amazed at what I was able to build. Check it out  &lt;a href="https://twitter.com/edatweets_/status/1447299670796029957"&gt;here&lt;/a&gt;. In this post, we will follow the project from buildspace "Mint your own NFT collection and ship a Web3 app to show them off."&lt;/p&gt;

&lt;p&gt;So bare with me; it's just the new terminology that makes things complicated.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#cant-you-just-take-a-screenshot"&gt;
  &lt;/a&gt;
  Can't you just take a screenshot?
&lt;/h2&gt;

&lt;p&gt;It seems like a lot of people ask this question. I know for one that my friends and family do. By the end of this section, we'll have an answer 😉&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nft"&gt;
  &lt;/a&gt;
  NFT
&lt;/h3&gt;

&lt;p&gt;Firstly, NFT stands for Non-Fungible Token.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Non-fungible: Fungibility indicates that a good can be interchanged (a word I googled many times). Non-fungible refers to goods that have unique properties and can not be changed with one another. For example, bitcoin is a fungible asset. If we each have a bitcoin and send them to each other, in the end, we'll have the same thing. On the other hand, a house is non-fungible. If we decide to switch homes, we'll end up with something different. &lt;/li&gt;
&lt;li&gt;Token: In short, blockchain is a shared and immutable ledger, and a token is a digital asset living on top of the blockchain. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;NFT's are &lt;strong&gt;unique digital assets on the blockchain&lt;/strong&gt;. They are each one of a kind; this allows for tracking the ownership.&lt;/p&gt;

&lt;p&gt;Today, most NFT's are on the Ethereum blockchain. However, we are also seeing many projects coming out on Solana and Avalanche.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-what-really-are-nfts"&gt;
  &lt;/a&gt;
  But what really are NFT's?
&lt;/h3&gt;

&lt;p&gt;The sky is the limit. Any digital asset can theoretically be an NFT. The most popular are Collectibles and Art.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Collectibles&lt;/strong&gt;, as the name indicates, are a collection of assets in the format of an NFT. Think of these as Pokemon cards or even penny collections. NFT collectibles have the same logic, except they are in the digital world.&lt;/p&gt;

&lt;p&gt;The earliest NFT was a collectibles project called  &lt;a href="https://www.cryptokitties.co/"&gt;CryptoKitties&lt;/a&gt; . It came out as a game centered around breeding cats. Each kitty (which is an nft) is unique, and you can breed kitties to create new ones.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4YYd9Ph8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635355372129/D7w1lXJ7N.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4YYd9Ph8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635355372129/D7w1lXJ7N.jpeg" alt="1_Mw8ZN07nisyUMS0fiR5KOw.jpeg" width="880" height="335"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another example of a collectible NFT project is &lt;a href="https://www.larvalabs.com/cryptopunks"&gt;CryptoPunks&lt;/a&gt;. There are 10,000 crypto punks with different attributes such as a beanie, big beard, purple hair etc. The characteristics change for each punk, making each a unique CryptoPunks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ldacJWe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635354476266/77jBf5p44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ldacJWe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635354476266/77jBf5p44.png" alt="Screen Shot 2021-10-27 at 20.06.02.png" width="880" height="141"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Art&lt;/strong&gt; is self-explanatory. Artists have the chance to create their work on the blockchain and can directly reach their buyers. This process removes the many middlemen in between by directly connecting the buyer and the creator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--43RQkwjk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635354256092/EeSV1-0bY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--43RQkwjk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635354256092/EeSV1-0bY.png" alt="Screen Shot 2021-10-27 at 20.03.49.png" width="880" height="379"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other use cases for NFT's include &lt;strong&gt;domain names, gaming, music, ticketing...&lt;/strong&gt; (There can be many more applications which we have not even discovered yet.)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#smart-contracts-amp-transactions"&gt;
  &lt;/a&gt;
  Smart Contracts &amp;amp; Transactions
&lt;/h3&gt;

&lt;p&gt;NFT's are created by running the code on the smart contract. This process is also called "minting."&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://ethereum.org/en/developers/docs/standards/tokens/erc-721/"&gt;ERC-721&lt;/a&gt;  is a standard type of smart contract that creates fungible tokens on Ethereum&lt;/strong&gt;. The way each token is globally unique is with the tokenId field. Therefore, for every smart contract that creates an NFT, the &lt;strong&gt;smart contract and the tokenId pair is different&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Once you mint an NFT, you will be able to see it in your crypto wallet. You can then use secondary markets to buy/sell NFT's. Today,  &lt;a href="https://opensea.io/"&gt;OpenSea&lt;/a&gt;  is the most popular secondary market.&lt;/p&gt;

&lt;p&gt;One thing to note is that every transaction on the blockchain has a cost. So when you want to mint, buy or sell an NFT, you need to pay the price called &lt;strong&gt;&lt;a href="https://ethereum.org/en/developers/docs/gas/"&gt;gas fee&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Gas is the measure of the unit to denote the cost for a transaction. Accordingly, gas fees are the fees that are paid to the network to process the transactions.&lt;/p&gt;

&lt;p&gt;On the Ethereum blockchain, gas fees are paid in ETH and denoted in gwei (10-9 ETH). Due to the high demand for the Ethereum network, gas fee's are pretty high. Especially when there is a popular NFT project drop, and you could end up paying 100 dollars just for the transaction. Make sure to check the &lt;a href="https://etherscan.io/gastracker"&gt;gas tracker&lt;/a&gt; before making transactions. &lt;/p&gt;

&lt;p&gt;High gas fees are an issue which the Ethereum team and other scaling solutions are working on. High gas fees explain why many projects are coming out on the other blockchains. &lt;/p&gt;

&lt;p&gt;🙌 Going back to our screenshot question. The main value proposition of an NFT is &lt;strong&gt;trackable and transparent ownership&lt;/strong&gt;. The owner can prove that they own an NFT. If an NFT gets transferred, the transaction is recorded on the blockchain. It's basically a new way to transfer digital arts or even any asset. So, just like taking a photo of the Mona Lisa is not the same thing as owning the piece. Likewise, taking a screenshot of an NFT is not the same as being listed as the owner on a transparent and immutable ledger.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-create-your-own-nft-collection"&gt;
  &lt;/a&gt;
  How to create your own NFT collection?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#project-tools"&gt;
  &lt;/a&gt;
  Project Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://metamask.io/"&gt;Metamask Wallet&lt;/a&gt;: crypto wallet. &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dashboard.alchemyapi.io/"&gt;Alchemy&lt;/a&gt;: ethereum developer platform. We will be using the Alchemy API to interact with Alchemy's Ethereum infrastructure.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://hardhat.org/"&gt;Hardhat&lt;/a&gt;: ethereum development environment. It comes as an npm package.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://github.com/OpenZeppelin/openzeppelin-contracts"&gt;OpenZepplin Contracts&lt;/a&gt;: library for secure smart contract implementations. We will be using the ERC271 libary standard. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;p&gt;(It's the same setup from my  &lt;a href="https://eda.hashnode.dev/create-your-own-cryptocurrency-token"&gt;previous post&lt;/a&gt;, here is a checklist to review the items.)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Choose your IDE and get the "solidity extension."&lt;/li&gt;
&lt;li&gt;Create an account on  &lt;a href="https://metamask.io/"&gt;metamask&lt;/a&gt;  and switch to the rinkeby test network. &lt;/li&gt;
&lt;li&gt;Get your  &lt;a href="https://alchemy.com/?r=63afe97f6fd780ac"&gt;Alchemy API key&lt;/a&gt; .&lt;/li&gt;
&lt;li&gt;Get  &lt;a href="https://nodejs.org/en/"&gt;node.js&lt;/a&gt;  to use hardhat.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#create-your-nft-collection"&gt;
  &lt;/a&gt;
  Create your NFT collection
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a project folder and head over to its directory. Install hardhat.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir eda-nft-collection
cd eda-nft-collection
npm init -y
npm install --save-dev hardhat
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your project directory &lt;strong&gt;create a hardhat project&lt;/strong&gt; by &lt;br&gt;
running &lt;code&gt;npx hardhat.&lt;/code&gt; The setup wizard will direct, you can &lt;br&gt;
click enter throughout the setup wizard and keep the default &lt;br&gt;
options.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npx hardhat
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the command to install the &lt;a href="https://github.com/OpenZeppelin/openzeppelin-contracts"&gt;OpenZepplin &lt;br&gt;
implementation&lt;/a&gt; for &lt;br&gt;
smart contracts. It has the &lt;strong&gt;ERC-721 token&lt;/strong&gt; standard which &lt;br&gt;
we will extend from.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @openzeppelin/contracts
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Under the 'Contracts' folder create a new solidity &lt;br&gt;
file(file extension is .sol). This will be the file for our &lt;br&gt;
ERC-721 token. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Below you can see a sample &lt;strong&gt;ERC-721 token smart contract&lt;/strong&gt; extended from OpenZepplin. I have added some comments to explain what's going on in the code. Copy and paste it onto your own solidity file.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.9; // tells the solidity version to    the complier

// get the OpenZeppelin Contracts, we will use to creat our own
import "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol";
import "@openzeppelin/contracts/utils/Counters.sol";

import "hardhat/console.sol"; // built in hardhat local environment 

contract EdaNFTCollection is ERC721URIStorage {

  // keep count of the tokenId
  using Counters for Counters.Counter; // keep track of the token id's
  Counters.Counter private _tokenIds;

  uint256 public constant maxSupply = 2; // set the max supply of NFT's for your collection

  constructor() ERC721 ("edaNFTCollection", "EDA") { // construct your token, needs name and symbol
    console.log("An NFT has been minted to %s", msg.sender);
}

  function createEdaNFT() public { //function to create nfts

    uint256 newItemId = _tokenIds.current(); // get the tokenId

    require(newItemId &amp;lt; maxSupply); // check if the total supply has been reached 

    _safeMint(msg.sender, newItemId); // mint the nft from the sender account 

    _setTokenURI(newItemId, "https://jsonkeeper.com/b/2KQZ"); // add the contents to the nft 
    // the content of this nft is on the url above. This means that the nft is an off-chain nft
    // if the server with the content changes then the image in the url changes 

    _tokenIds.increment(); // increment the token, so when the next person calls the function it will be the next token in line 

    console.log("NFT ID %s has been minted", newItemId); 

   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We need to take our contract from our local machine and put it onto the Rinkeby Test Network. For this, simply create a &lt;strong&gt;deploy.js&lt;/strong&gt; file under the 'Scripts' folder. Copy and paste the content below onto your file.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const main = async () =&amp;gt; {

    const nftContractFactory = await hre.ethers.getContractFactory('EdaNFTCollection'); // get the contract 
    const nftContract = await nftContractFactory.deploy(); // deploy --&amp;gt; convert to computer language
    await nftContract.deployed(); // wait for it to deploy
    console.log("Contract deployed to:", nftContract.address);

    let txn = await nftContract.createEdaNFT() // mint the nft 
    await txn.wait() // wait for the mint

    txn = await nftContract.createEdaNFT() // mint another nft (we set 2 as the max supply, can't mint more)
    await txn.wait() // wait for the mint

  };

  const runMain = async () =&amp;gt; {
    try {
      await main();
      process.exit(0);
    } catch (error) {
      console.log(error);
      process.exit(1);
    }
  };
  runMain();
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get your &lt;em&gt;Alchemy API key&lt;/em&gt;, it is needed to talk to the Rinkeby Test Network from our contract. Add your API key to the &lt;strong&gt;hardhat.config.json&lt;/strong&gt; (see code snippet under step-8)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add your &lt;em&gt;metamask private key&lt;/em&gt; to &lt;strong&gt;hardhat.config.json&lt;/strong&gt;. You can get this by clicking Account Details --&amp;gt; Export Private Key from your Metamask extension.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;require('@nomiclabs/hardhat-waffle');

module.exports = {
  solidity: '0.8.9', // make sure the version matches the one in smart contract file 
  networks: {
    rinkeby: {
      url: ' ', // rinkeby key 
      accounts: [' '], // metamask privte key- DO NOT SHARE THIS!! It has access to all your accounts
    },
  },
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run the command below to deploy the contract to the Rinkeby Test Network.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; npx hardhat run scripts/deploy.js --network rinkeby
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything is working, it should deploy the contract and print out the contract address to the terminal. &lt;/p&gt;

&lt;p&gt;Head over to &lt;a href="https://rinkeby.etherscan.io/"&gt;Etherscan&lt;/a&gt; for the Rinkeby Test Network. Etherscan shows all the transactions and the contracts on Ethereum. When you search for your contract address, you should be able to see the contract details and associated transactions. &lt;/p&gt;

&lt;p&gt;Go to your account on &lt;a href="https://testnets.opensea.io/account"&gt;Rinkeby Opensea&lt;/a&gt; to view the NFT's you just minted.&lt;/p&gt;

&lt;p&gt;🎉 There we go! Now we have created an NFT collection on the Ethereum blockchain using the solidity programming language. &lt;/p&gt;

&lt;p&gt;Make sure to checkout  &lt;a href="https://buildspace.so/"&gt;Buildspace&lt;/a&gt; for more projects and sign up for the NFT Collection if you haven't already. You get to build a frontend for your nfts and even make on-chain nft's in the project!&lt;/p&gt;




&lt;p&gt;On a final note, the NFT industry is very new. There are a lot of speculations going on, and with little to no regulation, it can be intimating. However, I find NFT's very exciting because, before NFT's, decentralized finance was the primary industry for blockchain. Now we have a completely new application for blockchain technology. So let's see how the space will evolve.&lt;/p&gt;

&lt;p&gt;Thanks for reading my article. If you have any questions drop them below and connect with me from  &lt;a href="https://twitter.com/edatweets_"&gt;Twitter&lt;/a&gt;, I'd love to hear from you! &lt;/p&gt;

</description>
      <category>web3</category>
      <category>solidity</category>
      <category>ethereum</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Typewriter effect CSS</title>
      <author>Chris Bongers</author>
      <pubDate>Mon, 29 Nov 2021 07:13:34 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/typewriter-effect-css-4d2l</link>
      <guid>https://dev.to/dailydevtips1/typewriter-effect-css-4d2l</guid>
      <description>&lt;p&gt;In this article, we'll be creating a typewriter effect in CSS!&lt;br&gt;
We won't be needing any JavaScript to achieve this effect and the result will look like this:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rebelchris/embed/GRvzjYL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Alright, let's get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-html"&gt;
  &lt;/a&gt;
  Setting up the HTML
&lt;/h2&gt;

&lt;p&gt;As for the HTML, we don't really need much. We just want a paragraph or text element that we can manipulate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Beetlejuice, Beetlejuice, Beetlejuice!&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then let's quickly add some basic styling so the text is centred:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;place-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now we can add some basic styling to make the text stand out a bit more.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Courier New"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By now, it should look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jMwTpxpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637216446187/DPv1J7y_g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jMwTpxpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637216446187/DPv1J7y_g.png" alt="Styled typewriter in CSS" width="809" height="114"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-blinking-type-caret"&gt;
  &lt;/a&gt;
  Adding the blinking type caret
&lt;/h2&gt;

&lt;p&gt;Let's start by adding the blinking type caret at the end.&lt;br&gt;
This type of caret indicates a typewriter effect in most applications; I'll be using the one from iAWriter, which is a blue one.&lt;/p&gt;

&lt;p&gt;We can achieve this blinking caret by leveraging the right border of the p element like so.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;border-right&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;15&lt;/span&gt;&lt;span class="nt"&gt;em&lt;/span&gt; &lt;span class="nt"&gt;solid&lt;/span&gt; &lt;span class="err"&gt;#18&lt;/span&gt;&lt;span class="nt"&gt;BDEC&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To animate this, let's create a blink animation that will run forever.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;animation&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;blink&lt;/span&gt; &lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt; &lt;span class="nt"&gt;steps&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;infinite&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This blink animation will be super simple as it only needs to change the border-color to be transparent halfway.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="nb"&gt;blink&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By adding the 1 step in the animation, we create the quick blink effect instead of a slow fade.&lt;/p&gt;

&lt;p&gt;Resulting in the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l73Zc-eR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637217127932/WJ9IrvPaF.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l73Zc-eR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637217127932/WJ9IrvPaF.gif" alt="Caret type effect CSS" width="282" height="110"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-typing-effect"&gt;
  &lt;/a&gt;
  The typing effect
&lt;/h2&gt;

&lt;p&gt;Now it's time for the actual typing effect.&lt;/p&gt;

&lt;p&gt;We first want to make the &lt;code&gt;p&lt;/code&gt; tag have 0 width and not wrap to other lines or show the overflow.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;overflow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;white-space&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;nowrap&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we want to add the animation. Since we already have an animation in place, we can use a &lt;code&gt;,&lt;/code&gt; to separate the two.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;animation&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;typing&lt;/span&gt; &lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt; &lt;span class="nt"&gt;steps&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;38&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt; &lt;span class="err"&gt;1&lt;/span&gt; &lt;span class="nt"&gt;normal&lt;/span&gt; &lt;span class="nt"&gt;both&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;blink&lt;/span&gt; &lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt; &lt;span class="nt"&gt;steps&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;infinite&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I used 38 steps as there would be 38 characters in my paragraph.&lt;/p&gt;

&lt;p&gt;Let's have a look at how this typing animation should look.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;typing&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;from&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yep, that's it, a simple 0 to 100% width animation.&lt;br&gt;
And it will give us this cool typewriter effect we are looking for.&lt;/p&gt;

&lt;p&gt;To make your animation fit your text and font, you might have to play around with the animation settings.&lt;/p&gt;

&lt;p&gt;Try playing around with the duration (&lt;code&gt;4s&lt;/code&gt;) and the steps to make it work best for you.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed this article and learned something new.&lt;br&gt;
Do share your creations with me on Twitter! 👀⌨️&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
    </item>
    <item>
      <title>The feat of JavaScript 🤤</title>
      <author>Manu Martinez</author>
      <pubDate>Mon, 29 Nov 2021 07:03:25 +0000</pubDate>
      <link>https://dev.to/whitehatdevv/the-feat-of-javascript-532g</link>
      <guid>https://dev.to/whitehatdevv/the-feat-of-javascript-532g</guid>
      <description>&lt;p&gt;Yes, you have read that, &lt;strong&gt;JS&lt;/strong&gt; is one of the most powerful programming language, the first language, with a &lt;em&gt;slow learning curve&lt;/em&gt;, that allows you to be a full stack developer. &lt;/p&gt;

&lt;p&gt;Like you have been reading in my last post, you know JS is an interpreted language, so it makes JS run faster than other similar languages, you do not worry about speed, it's a highly advantages of using JS in your projects. I know 🤓, &lt;em&gt;all that shine is not gold&lt;/em&gt;, but what is that?&lt;/p&gt;

&lt;p&gt;JS has a petty strong problem with data typed, it's dynamic, so it's mean that types are assigned during execution time, it will give you a lot of problems. I'm sure you have heart talking about &lt;code&gt;undefined&lt;/code&gt;, but what is that? &lt;br&gt;
Please, look at the following code example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myVar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myVar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you run this code you will get an &lt;code&gt;undefined&lt;/code&gt; response, it's mean that var has been declared but it never received any value, it's &lt;strong&gt;allocated&lt;/strong&gt; in memory but &lt;strong&gt;empty&lt;/strong&gt;. I'm sure, if you have coded in JS before, you know what does it mean, it give us a lot of &lt;strong&gt;headaches&lt;/strong&gt;. Every time you forgot to assign any value you will get undefined and your code will never work fine. Nevertheless, how can you check that?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myVar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myVar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Yes my var has a value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My var is undefined&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's a clear example where you can see how to check if a value is undefined, don't worry 🥸 about the syntax and the meaning of each sentence, &lt;strong&gt;you will learn in the the following posts&lt;/strong&gt;. Then, I mean it's a clear disadvantage of JS, but not at all. If you are a learner who is starting coding with JS such your first programming language you will love it, you won't need to think about types, however, if you have coded before you will hate it because you won't be able to avoid this errors without using &lt;code&gt;typeof&lt;/code&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-i-transform-js-into-a-static-typed-language"&gt;
  &lt;/a&gt;
  How can I transform JS into a &lt;em&gt;static&lt;/em&gt; typed language?
&lt;/h2&gt;

&lt;p&gt;I am glad to meet you &lt;em&gt;TypeScript&lt;/em&gt;, it's JS static typed. TS is a language that compiles into JS, it's give to JS a lot of power and extra functionalities. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.typescriptlang.org"&gt;Learn more about TypeScript&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;I will teach you how to use all the power of TypeScript when you are a &lt;em&gt;mastermind&lt;/em&gt; 🤨 in JS. As I said before TS solves a lot of problem and transform JS into a real &lt;strong&gt;high level&lt;/strong&gt; language. Sincerely, when I used TS, I loved it, I change all my code to works with TS, giving to my applications a lot of extra functionalities but it not all, it gave to my applications a lot of extra security, due to static data typed, I could remove all &lt;code&gt;typeof&lt;/code&gt; checking, making my code &lt;strong&gt;cleaner and faster&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;But please, focus on learn all about JS, it's equal to &lt;strong&gt;TS&lt;/strong&gt;. With JS/TS you will be able to be a &lt;strong&gt;Full-Stack&lt;/strong&gt; developer, creating real web applications that change people lifestyles. I will teach you whatever you need to create &lt;strong&gt;webApps&lt;/strong&gt; 😌.&lt;/p&gt;

&lt;p&gt;This all for today, I really want to make my blog grow, if you like this post please share with your friends. I will glad to you &lt;strong&gt;if you leave some comments&lt;/strong&gt;. In the following post we will start learning JS syntax and making our first approaches to &lt;em&gt;coding with JS&lt;/em&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>typescript</category>
      <category>programming</category>
    </item>
    <item>
      <title>tsParticles 1.37.5 Released</title>
      <author>Matteo Bruni</author>
      <pubDate>Mon, 29 Nov 2021 06:58:42 +0000</pubDate>
      <link>https://dev.to/matteobruni/tsparticles-1374-released-4nc8</link>
      <guid>https://dev.to/matteobruni/tsparticles-1374-released-4nc8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#tsparticles-1375-changelog"&gt;
  &lt;/a&gt;
  tsParticles 1.37.5 Changelog
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#bug-fixes"&gt;
  &lt;/a&gt;
  Bug Fixes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Fixed issue with collisions, fixes #2586, fixes #2380&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#tsparticles-1374-changelog"&gt;
  &lt;/a&gt;
  tsParticles 1.37.4 Changelog
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#new-features"&gt;
  &lt;/a&gt;
  New features
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#bug-fixes"&gt;
  &lt;/a&gt;
  Bug Fixes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Fix for Safari &amp;lt;14&lt;/li&gt;
&lt;/ul&gt;





&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/matteobruni"&gt;
        matteobruni
      &lt;/a&gt; / &lt;a href="https://github.com/matteobruni/tsparticles"&gt;
        tsparticles
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      tsParticles - Easily create highly customizable particles animations and use them as animated backgrounds for your website. Ready to use components available for React.js, Vue.js (2.x and 3.x), Angular, Svelte, jQuery, Preact, Inferno, Solid, Riot and Web Components.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://particles.js.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/58f22f0a546d5d7f34b4668dc842ac91b3a4cf9a5de72346559b7d15b13e587e/68747470733a2f2f7061727469636c65732e6a732e6f72672f696d616765732f62616e6e6572322e706e67" alt="banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
tsParticles - TypeScript Particles&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;A lightweight TypeScript library for creating particles. Dependency free (*), browser ready and compatible with
React.js, Vue.js (2.x and 3.x), Angular, Svelte, jQuery, Preact, Inferno, Riot.js, Solid.js, and Web Components&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openbase.com/js/tsparticles?utm_source=embedded&amp;amp;utm_medium=badge&amp;amp;utm_campaign=rate-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/303db015a31c411aee869f57d55a44a53cd2f5380d0de5ee8abecb337a9452a6/68747470733a2f2f6261646765732e6f70656e626173652e636f6d2f6a732f726174696e672f74737061727469636c65732e737667" alt="Rate on Openbase"&gt;&lt;/a&gt; &lt;a href="https://www.jsdelivr.com/package/npm/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c64088d02effc095dd7386325d216ce6d6bd46513a88ed2274e0ec4e6d876cf/68747470733a2f2f646174612e6a7364656c6976722e636f6d2f76312f7061636b6167652f6e706d2f74737061727469636c65732f62616467653f7374796c653d726f756e646564" alt="jsDelivr"&gt;&lt;/a&gt; &lt;a href="https://cdnjs.com/libraries/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9e5a7a72f7cbc65eedd0e4d7431e4d4762c472ad4a66b6648a8e74c2b6be331/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f74737061727469636c6573" alt="Cdnjs"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e18baafcedd7efbbd13d6e2b1cf738c07ea898383c946e6e7b16400f813d70cb/68747470733a2f2f62616467652e667572792e696f2f6a732f74737061727469636c65732e737667" alt="npmjs"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc16ec38506bbab6f6b729850ad28fd94a5643f1633b4356647033c3aa3fe102/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f74737061727469636c6573" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://lerna.js.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3bc63f921dd60bac6d91aa900ef570c928b2aa4c2124ed23647e8fe9d2232853/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61696e7461696e6564253230776974682d6c65726e612d6363303066662e737667" alt="lerna"&gt;&lt;/a&gt; &lt;a href="https://www.codefactor.io/repository/github/matteobruni/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ce969771f1502f57861fe8ce7c787c209c50ef17c2e19f35cb1de0c960eba94a/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f6d617474656f6272756e692f74737061727469636c65732f6261646765" alt="CodeFactor"&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/manual/ar3s/tsparticles?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=matteobruni/tsparticles&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f96d4d0dccc9c7491f3ed07af70a808b0fd4d2e4d863a1f7bb9e51e10ae526e/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6239383361616633343631613463343862316532656563636531666631643734" alt="Codacy Badge"&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/matteobruni/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/daadb4894128d1e19b72d80236f5959f1f2b47f9fe081373f3246131f0189f6c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476974706f642d72656164792d2d746f2d2d636f64652d626c75653f6c6f676f3d676974706f64" alt="Gitpod Ready-to-Code"&gt;&lt;/a&gt; &lt;a href="https://repl.it/github/matteobruni/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/64adf1bd83058aa64f848245f74bef77cd7cc2a3f36343ac44d6d0c39cc41bc3/68747470733a2f2f7265706c2e69742f62616467652f6769746875622f6d617474656f6272756e692f74737061727469636c6573" alt="Run on Repl.it"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://join.slack.com/t/tsparticles/shared_invite/enQtOTcxNTQxNjQ4NzkxLWE2MTZhZWExMWRmOWI5MTMxNjczOGE1Yjk0MjViYjdkYTUzODM3OTc5MGQ5MjFlODc4MzE0N2Q1OWQxZDc1YzI" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ee2eed4d8159b570eef394a484f574d3bd038f6c64ad92ca0db286045486edcb/68747470733a2f2f7061727469636c65732e6a732e6f72672f696d616765732f736c61636b2e706e67" alt="Slack"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/hACwv45Hme" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7c4f4ed816c2b77d7c2e15df3876cafa1cf89a896afb04633a1b6e28a81c5036/68747470733a2f2f7061727469636c65732e6a732e6f72672f696d616765732f646973636f72642e706e67" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://t.me/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/309cad18f9a2090efdb147ac71064a969b826c3f4e9387f0a8d8e36e70133a80/68747470733a2f2f7061727469636c65732e6a732e6f72672f696d616765732f74656c656772616d2e706e67" alt="Telegram"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/tsparticles?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-tsparticles%22" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e86b7f51a0224618fe45aad99bff3e02ed8a5838691f244bf1df0e94454dafe2/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f66656174757265642e7376673f706f73745f69643d313836313133267468656d653d6c69676874" alt="tsParticles Product Hunt"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Do-you-want-to-use-it-on-your-website"&gt;Use for your website&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Library-installation"&gt;Library installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Official-components-for-some-of-the-most-used-frameworks"&gt;Official components for some of the most used frameworks&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Angular"&gt;Angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Inferno"&gt;Inferno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#jQuery"&gt;jQuery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Preact"&gt;Preact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#ReactJS"&gt;ReactJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Svelte"&gt;Svelte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#VueJS-2x"&gt;VueJS 2.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#VueJS-3x"&gt;VueJS 3.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#WordPress"&gt;WordPress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Templates-and-Resources"&gt;Templates and Resources&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Demo--Generator"&gt;Demo / Generator&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Characters-as-particles"&gt;Characters as particles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Mouse-hover-connections"&gt;Mouse hover connections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Polygon-mask"&gt;Polygon mask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Animated-stars"&gt;Animated stars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Nyan-cat-flying-on-scrolling-stars"&gt;Nyan cat flying on scrolling stars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Background-Mask-particles"&gt;Background Mask particles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/matteobruni/tsparticles#Migrating-from-Particlesjs"&gt;Migrating from Particles.js&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/matteobruni/tsparticles#PluginsCustomizations"&gt;Plugins/Customizations&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Do you want to use it on your website?&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Documentation and Development references &lt;a href="https://particles.js.org/docs/" rel="nofollow"&gt;here&lt;/a&gt; 📖&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This library is available on the two most popular CDNs and it's easy and ready to use, if you were using particles.js
it's even easier&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You'll find the
instructions &lt;a href="https://github.com/matteobruni/tsparticles/blob/main/README.md#library-installation"&gt;below&lt;/a&gt;, with all the
links you need, and &lt;em&gt;don't be scared by &lt;/em&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/matteobruni/tsparticles"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


</description>
      <category>showdev</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Crazy TLDs</title>
      <author>ManuTheCoder</author>
      <pubDate>Mon, 29 Nov 2021 06:41:24 +0000</pubDate>
      <link>https://dev.to/manuthecoder/crazy-tlds-32kl</link>
      <guid>https://dev.to/manuthecoder/crazy-tlds-32kl</guid>
      <description>&lt;p&gt;Check out these weird domain extensions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;.eurovision - No seriously. Imagine typing "google.eurovision"&lt;/li&gt;
&lt;li&gt;.genting&lt;/li&gt;
&lt;li&gt;.gent&lt;/li&gt;
&lt;li&gt;.george&lt;/li&gt;
&lt;li&gt;.sucks&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;.computer&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;.meme&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;.wtf&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;.online&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;.website&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;.dot - Yes, I know. &lt;em&gt;facepalm&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;.rehab&lt;/li&gt;
&lt;li&gt;.democrat&lt;/li&gt;
&lt;li&gt;.republican&lt;/li&gt;
&lt;li&gt;.ooo&lt;/li&gt;
&lt;li&gt;.goo&lt;/li&gt;
&lt;li&gt;.off&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And check out: &lt;a href="http://EE.EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE.EE"&gt;http://EE.EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE.EE&lt;/a&gt;&lt;br&gt;
and&lt;br&gt;
&lt;a href="http://3.141592653589793238462643383279502884197169399375105820974944592.com/"&gt;http://3.141592653589793238462643383279502884197169399375105820974944592.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you liked this post, make sure to hit the like button ❤️&lt;br&gt;
Follow me on GitHub: &lt;a href="https://github.com/manuthecoder"&gt;https://github.com/manuthecoder&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
    </item>
  </channel>
</rss>
