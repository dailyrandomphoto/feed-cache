<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Markdown Preview in Vim</title>
      <author>Rittik Dasgupta</author>
      <pubDate>Thu, 15 Apr 2021 11:53:53 +0000</pubDate>
      <link>https://dev.to/hrk2023/markdown-preview-in-vim-44bl</link>
      <guid>https://dev.to/hrk2023/markdown-preview-in-vim-44bl</guid>
      <description>&lt;p&gt;When we edit a markdown file in vim, we are not able to preview the markdown file simultaneously. I have also faced this situation, so I decided why not make one.&lt;/p&gt;

&lt;p&gt;To be able to preview a markdown, first, we need a &lt;code&gt;markdown parser&lt;/code&gt;.&lt;br&gt;
I got to know about &lt;a href="https://github.com/charmbracelet/glow"&gt;Glow&lt;/a&gt;, which renders markdown on the Command Line Interface(CLI).&lt;/p&gt;

&lt;p&gt;To install glow, you can follow the instructions given in the Github repo of &lt;a href="https://github.com/charmbracelet/glow"&gt;Glow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After installing Glow I added a few lines to my vimrc&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_3Kep_Z7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ktsv8vwvcf09im8efwvs.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_3Kep_Z7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ktsv8vwvcf09im8efwvs.PNG" alt="Vim Function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This function finds the path of the current file and adds it in the &lt;code&gt;.lastpreview.log&lt;/code&gt; file. After that &lt;code&gt;bel vert terminal&lt;/code&gt; command is executed, which opens up the terminal buffer in vim, side by side.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight viml"&gt;&lt;code&gt;nmap &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;F4&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;call&lt;/span&gt; PreviewerMarkdown&lt;span class="p"&gt;()&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;clear&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;glo $&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;cat&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt;/&lt;span class="p"&gt;.&lt;/span&gt;lastpreview&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="p"&gt;)&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, I made this custom mapping in vimrc. I bound my &lt;code&gt;F4&lt;/code&gt; key to the &lt;code&gt;PreviewerMarkdown()&lt;/code&gt;. After PreviewerMarkdown is executed the &lt;code&gt;clear&lt;/code&gt; command runs which clears the terminal buffer, and after this &lt;code&gt;glo&lt;/code&gt; command runs, which is basically an alias I made for &lt;code&gt;glow -s dark | less&lt;/code&gt;. The &lt;code&gt;glo&lt;/code&gt; command opens the file path present in the &lt;code&gt;lastpreview.log&lt;/code&gt; file with a &lt;code&gt;pager (here less)&lt;/code&gt; and a suitable color scheme, and boom our markdown preview is now ready to be used.&lt;/p&gt;

&lt;p&gt;There is room for adding more functionality to the &lt;code&gt;PreviewerMarkdown()&lt;/code&gt;, but for this post, I chose to keep only the core functionality.  &lt;/p&gt;

</description>
      <category>productivity</category>
      <category>vim</category>
      <category>markdown</category>
      <category>linux</category>
    </item>
    <item>
      <title>Iconic developers | part 2 ü§ìü¶Ñüö´</title>
      <author>Jasper de Jager</author>
      <pubDate>Thu, 15 Apr 2021 11:52:38 +0000</pubDate>
      <link>https://dev.to/jmdejager/iconic-developers-part-2-250j</link>
      <guid>https://dev.to/jmdejager/iconic-developers-part-2-250j</guid>
      <description>&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  ü§ìü¶Ñüö´
&lt;/h1&gt;

&lt;p&gt;Three more developer types! Thnx &lt;br&gt;
&lt;a class="mentioned-user" href="https://dev.to/annervisser"&gt;@annervisser&lt;/a&gt;
 and &lt;a class="mentioned-user" href="https://dev.to/keyboardsamurai"&gt;@keyboardsamurai&lt;/a&gt;
&lt;br&gt;
Please keep it going and make it even longer! üòÅ &lt;/p&gt;

&lt;p&gt;Leave your iconic developer type in the comments!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;## üíª [name]

#### Habitat

#### Best to ask for

#### Needs works on
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#the-perfectionist"&gt;
  &lt;/a&gt;
  ü§ì The perfectionist
&lt;/h2&gt;

&lt;p&gt;Spends their time making everything perfect, re-usable and beautiful. Sometimes forgets what they were actually supposed to be making.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#habitat"&gt;
  &lt;/a&gt;
  Habitat
&lt;/h4&gt;

&lt;p&gt;Can be seen staring at the same code file for hours. Usually has a perfect development environment with all the best tools.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#best-to-ask-for"&gt;
  &lt;/a&gt;
  Best to ask for
&lt;/h4&gt;

&lt;p&gt;Advice on how to clean up or generalize your code. Can also help you get the best development setup available.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#needs-works-on"&gt;
  &lt;/a&gt;
  Needs works on
&lt;/h4&gt;

&lt;p&gt;Keeping it simple and getting sh*t done.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-unicorn"&gt;
  &lt;/a&gt;
  ü¶Ñ The Unicorn
&lt;/h2&gt;

&lt;p&gt;Do they really exist? It is told that some of them are in possession of the very rare early bird medal ü•á&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#habitat"&gt;
  &lt;/a&gt;
  Habitat
&lt;/h4&gt;

&lt;p&gt;Rarely seen, some people seem to believe the unicorn developer hides somewhere on dev.to.. who knows&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#best-to-ask-for"&gt;
  &lt;/a&gt;
  Best to ask for
&lt;/h4&gt;

&lt;p&gt;Whatever, they are awesome all the way&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#needs-works-on"&gt;
  &lt;/a&gt;
  Needs works on
&lt;/h4&gt;

&lt;p&gt;Stage fright, please show yourself unicorn developers!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#doctor-no"&gt;
  &lt;/a&gt;
  üö´ Doctor no
&lt;/h2&gt;

&lt;p&gt;Doctor no, not the villain you'd expect.. They sometimes seem evil but really, they have a good heart!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#habitat"&gt;
  &lt;/a&gt;
  Habitat
&lt;/h4&gt;

&lt;p&gt;Are always sure there's a better way of doing things. If you come up with an idea they disagree by default and force their own view on the matter.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#best-to-ask-for"&gt;
  &lt;/a&gt;
  Best to ask for
&lt;/h4&gt;

&lt;p&gt;For getting different perspectives on the problem or if you need a good NO!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#needs-works-on"&gt;
  &lt;/a&gt;
  Needs works on
&lt;/h4&gt;

&lt;p&gt;Listening to others and try to collaborate.&lt;/p&gt;

</description>
      <category>development</category>
      <category>discuss</category>
      <category>webdev</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Sudoku Solver - Solve Any Sudoku Puzzle Instantly</title>
      <author>Dhruv Panchal</author>
      <pubDate>Thu, 15 Apr 2021 11:20:56 +0000</pubDate>
      <link>https://dev.to/dhhruv/sudoku-solver-solve-any-sudoku-puzzle-instantly-91h</link>
      <guid>https://dev.to/dhhruv/sudoku-solver-solve-any-sudoku-puzzle-instantly-91h</guid>
      <description>&lt;p&gt;&lt;strong&gt;Why solve Sudoku by hand, when you can write script to solve them for ya ?!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sudoku is one of the most popular logic-based number-placement puzzle game. The literal meaning of "Su-doku" in Japanese is "the number that is single".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The objective is to fill a nine-by-nine (9x9) grid with digits so that each row, column and 3x3 section contain number between 1 and 9, with each number used once and only once in each section. The Sudoku game players are provided with partially filled grid meant to be solved.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To solve sudoku one doesn't require the knowledge of mathematics but require the logic and reasoning. Solving Sudoku Puzzles daily helps with your brain. It improves the concentration and logical thinking. One can look for sudoku puzzles given in Newspapers or can play them online provided by many websites. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#about"&gt;
  &lt;/a&gt;
  About:
&lt;/h2&gt;

&lt;p&gt;This Script is a Sudoku Solver that solves almost any Sudoku Puzzle by visualizing through the Backtracking Algorithm which is made using the PyGame Library in Python. Ever tried but stucked on Sudoku Puzzles given in newspapers, magazines and online. You can use this script to get its solution instantly and move further.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dhhruv"&gt;
        dhhruv
      &lt;/a&gt; / &lt;a href="https://github.com/dhhruv/Sudoku-Solver"&gt;
        Sudoku-Solver
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üéØ A Sudoku Solver implemented using Python and PyGame Library by visualizing the Sudoku Board using Backtracking Algorithm.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#working"&gt;
  &lt;/a&gt;
  Working:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Every time this Script is executed, a Random Solvable board is created.&lt;/li&gt;
&lt;li&gt;  Now, the user can first try to attempt solving it by clicking on the cells and entering values manually. Check the Input Section for the same.&lt;/li&gt;
&lt;li&gt;  Once the the user finalizes that the inputted number is the correct entry, pressing the enter key will attempt to input the number onto the board. &lt;/li&gt;
&lt;li&gt;  Correct answers will be permanently displayed while incorrect answers will be removed. &lt;/li&gt;
&lt;li&gt;  Likewise, values can be removed by pressing on the backspace or delete keys.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DSaWMCzo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdf37yv1e3mcn0aat5ip.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DSaWMCzo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdf37yv1e3mcn0aat5ip.gif" alt="Entering Values"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  If at any point the player decides to solve the board, the Spacebar key can be pressed.&lt;/li&gt;
&lt;li&gt;  This will commence a visual which will demonstrate how the backtracking algorithm works and how it is being applied in order to solve the board.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MQrqxbiU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/afttou4aho4ok6s4ftt4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MQrqxbiU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/afttou4aho4ok6s4ftt4.gif" alt="Visualizer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Keys&lt;/th&gt;
&lt;th&gt;Actions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Left Click&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Selects the Box to enter a value into that cell.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Enter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Confirms the Value written on the board.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Backspace/Delete&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Deletes the value in that cell.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Space&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Solves the Board using the Algorithm.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;h&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Gives a Hint. Displays a random correct value on the board.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;p&gt;In order to run the Script, the require &lt;strong&gt;Python &amp;amp; PyGame&lt;/strong&gt; and you can install the requirements using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#execution"&gt;
  &lt;/a&gt;
  Execution:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Clone this repository using
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/dhhruv/Sudoku-Solver.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;br&gt;
Zip Download the Repository and Extract it's contents.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Now run the &lt;a href="https://github.com/dhhruv/Sudoku-Solver/blob/master/SudokuGUI.py"&gt;SudokuGUI&lt;/a&gt; file directly in your Terminal using
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python SudokuGUI.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 SudokuGUI.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can get more information about Sudoku Solver on: &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dhhruv"&gt;
        dhhruv
      &lt;/a&gt; / &lt;a href="https://github.com/dhhruv/Sudoku-Solver"&gt;
        Sudoku-Solver
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üéØ A Sudoku Solver implemented using Python and PyGame Library by visualizing the Sudoku Board using Backtracking Algorithm.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>python</category>
      <category>git</category>
    </item>
    <item>
      <title>Array Methods</title>
      <author>Etulan</author>
      <pubDate>Thu, 15 Apr 2021 10:50:35 +0000</pubDate>
      <link>https://dev.to/etulan/array-methods-4a2h</link>
      <guid>https://dev.to/etulan/array-methods-4a2h</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;An array is a special variable that can hold more than one value at the same time. That is, they are used in Javascript to store multiple values in one variable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As a programmer, you'll need to adjust/remove/add/replace/count etc elements in an array therefore you need to know the right method to use for any manipulation. There are different methods of manipulating an array and I will be showing some of them.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#concat"&gt;
  &lt;/a&gt;
  concat()
&lt;/h1&gt;

&lt;p&gt;This method is used to merge (concatenate) existing arrays. It returns the new array by combining previously declared array variables.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xWdgyNGz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/me4ly25y9tbbfjqte0xv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xWdgyNGz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/me4ly25y9tbbfjqte0xv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#splice"&gt;
  &lt;/a&gt;
  splice()
&lt;/h1&gt;

&lt;p&gt;This method changes the content of an array by adding and/or removing or replacing elements in an array.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7rVGO8O_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nc665gcmj65rvz9fqaza.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7rVGO8O_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nc665gcmj65rvz9fqaza.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#every"&gt;
  &lt;/a&gt;
  every()
&lt;/h1&gt;

&lt;p&gt;This method returns true or false if every element in the specified array satisfies a condition specified in the callback function. Returns false even if a single element does not satisfy the condition.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YptIgYh---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eh7gn3ycto1bihyff5rh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YptIgYh---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eh7gn3ycto1bihyff5rh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#filter"&gt;
  &lt;/a&gt;
  filter()
&lt;/h1&gt;

&lt;p&gt;This method returns a new array of all elements that satisfy a given condition.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QXYgcjen--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xfy8l3lmifo9eqmdetu8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QXYgcjen--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xfy8l3lmifo9eqmdetu8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#shift"&gt;
  &lt;/a&gt;
  shift()
&lt;/h1&gt;

&lt;p&gt;This method removes the first element of the array. Its return value is the removed element.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AUswEZJ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/is99escxqzjld8y9cmbn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AUswEZJ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/is99escxqzjld8y9cmbn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pop"&gt;
  &lt;/a&gt;
  pop()
&lt;/h1&gt;

&lt;p&gt;Unlike shift above, the pop() method removes the last element from an array and returns that element.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7daT2O83--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lc154rjrk20qli3wt47a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7daT2O83--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lc154rjrk20qli3wt47a.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other methods include but not limited to:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Methods&lt;/th&gt;
&lt;th&gt;Methods&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;forEach&lt;/td&gt;
&lt;td&gt;map()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;indexOf&lt;/td&gt;
&lt;td&gt;reverse()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;join()&lt;/td&gt;
&lt;td&gt;lastIndexOf()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fill()&lt;/td&gt;
&lt;td&gt;fine()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;unshift()&lt;/td&gt;
&lt;td&gt;toString()&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
    </item>
    <item>
      <title>Build a highly available Node.js application using Docker, NGINX and AWS ELB</title>
      <author>Sowmen Rahman</author>
      <pubDate>Thu, 15 Apr 2021 09:40:57 +0000</pubDate>
      <link>https://dev.to/sowmenappd/build-a-highly-available-node-js-application-using-docker-nginx-and-aws-elb-3cjp</link>
      <guid>https://dev.to/sowmenappd/build-a-highly-available-node-js-application-using-docker-nginx-and-aws-elb-3cjp</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-load-balancing"&gt;
  &lt;/a&gt;
  What is load balancing?
&lt;/h1&gt;

&lt;p&gt;Load balancing is a technique(algorithm) used to distribute incoming network traffic onto a group of servers. It provides a single entry point for all public users to a service hosted by a server. Production-grade servers are generally run behind load balancers because they can ‚Äú&lt;strong&gt;even-out&lt;/strong&gt;‚Äù the incoming load across the servers, thus preventing server overloads. Load balancers also provide a secondary functionality to the servers they are routing traffic to: they act as a &lt;strong&gt;reverse proxy&lt;/strong&gt;. A reverse proxy is like a middle-man between the group of servers and the users. All requests handled by the reverse-proxy are forwarded to the appropriate server based on the request conditions. The server then responds back with its data, which is then directed to the users from the reverse proxy. In this way, r-proxies keep the identity of servers anonymous alongside preventing access to the main servers where sensitive data like configuration files, tokens, secrets, etc. are stored.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YCG9IUwS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzrviivtuvpoestzuqdp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YCG9IUwS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzrviivtuvpoestzuqdp.png" alt="Load balancing diagram"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#nginx-and-aws-elb-as-load-balancers"&gt;
  &lt;/a&gt;
  NGINX and AWS ELB as load balancers
&lt;/h1&gt;

&lt;p&gt;NGINX is a fast and free open-source load balancer that can also act as a reverse proxy. On the other hand, ELB is a load-balancing service provide by Amazon AWS. ELB can further be of 3 main types: (1) ALB, (2) CLB and (3) NLB. A newer class of load-balancers called the gateway load-balancers have also been add into the family of cloud services AWS provides. The idea for this tutorial is to form a cascading multi load-balancer architecture that can provide a highly available Node.js server running on multiple ports.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note to users&lt;/strong&gt; : There are many ways of implementing infrastructure for Node.js applications on AWS, including ones that utilize AWS‚Äôs own ECS and ECR ecosystem for docker applications. However, this tutorial doesn‚Äôt focus on that, and aims to better understand the mechanism behind EC2 instances, load balancers and how they interact with docker over load-balanced and proxied ports.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;
  &lt;a href="#overview-of-the-architecture"&gt;
  &lt;/a&gt;
  Overview of the architecture
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EouNr-ih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0w57kfrno5e623m4gpi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EouNr-ih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0w57kfrno5e623m4gpi.png" alt="Architecture diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the architecture that we‚Äôre aiming for. Multi-level load balancers managed by AWS and NGINX which will help us maintain multiple ports on each EC2 instance for our node apps. The good thing about this architecture is that the 2 instances are in different availability zones (AZ1 and AZ2), as a result, even if one zone goes down, the other zone remains functional. And our application doesn‚Äôt crash.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#the-nodejs-app"&gt;
  &lt;/a&gt;
  The Node.js app
&lt;/h1&gt;

&lt;p&gt;For the sake of simplicity, we use a standard starter Express node app, which looks like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MD9SuGU8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx2df1qkaw3blim8vrwp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MD9SuGU8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx2df1qkaw3blim8vrwp.png" alt="index.js"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The ports are provided to the express app via the &lt;strong&gt;PORT&lt;/strong&gt; environment variable. We will feed these port values via Docker. This is a very simple task thanks to &lt;strong&gt;docker-compose&lt;/strong&gt;. There‚Äôs another environment variable &lt;strong&gt;SERVER_ID&lt;/strong&gt;, however don‚Äôt worry, as it‚Äôs only for demonstration purposes only. Once the whole setup is ready, the &lt;strong&gt;SERVER_ID&lt;/strong&gt; will let us know which server the load balancers are pulling the response from. This will help us to validate that our infrastructure configuration using the multi-level load-balancer/r-proxy is running the way it should be.&lt;/p&gt;

&lt;p&gt;These type of configurations are common in production pipelines. Generally the main app servers are placed in a VPC in such cases. One informational point about the load balancers is that, level 1 load balancers are often categorized as &lt;strong&gt;public-facing&lt;/strong&gt;, as they deal with the actual client requests, while those at level 2 are &lt;strong&gt;internal&lt;/strong&gt; load-balancers, whose job is to route requests between sources.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#launching-ec2-servers"&gt;
  &lt;/a&gt;
  Launching EC2 servers
&lt;/h1&gt;

&lt;p&gt;Log in to your AWS account and go to EC2 dashboard. We will be following these steps to setup new servers and get them ready for Docker:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;From the dashboard, click on &lt;strong&gt;Launch instances&lt;/strong&gt; at the top-right corner.&lt;/li&gt;
&lt;li&gt;From the quick start section, select &lt;strong&gt;Amazon Linux 2 AMI&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Choose instance type &lt;strong&gt;t2.micro&lt;/strong&gt; (you can avail the free tier on this instance type if its still available on your account). You may also choose any other type you like instead.&lt;/li&gt;
&lt;li&gt;For this demonstration only, we‚Äôll launch the 2 instances separately, since we want these two instances in different availability zones. In my case, the region is &lt;strong&gt;us-east-1&lt;/strong&gt;, so I selected the default subnet under &lt;strong&gt;us-east-1a&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Under &lt;strong&gt;User data&lt;/strong&gt; section, paste code from this script below. This will install the prerequisite software for running our node.js docker apps. &lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For &lt;strong&gt;Add Storage&lt;/strong&gt; and &lt;strong&gt;Add Tags&lt;/strong&gt; sections, keep the defaults and skip.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For &lt;strong&gt;Configure Security Group&lt;/strong&gt;, create a new security group with ports 22(SSH) and 80(HTTP) open. For IP range you may select &lt;strong&gt;Anywhere&lt;/strong&gt; or &lt;strong&gt;My IP*8. Since this is for testing only, you may choose either one. I went with **Anywhere&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click &lt;strong&gt;Review and Launch&lt;/strong&gt; and then &lt;strong&gt;Launch&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a new keypair to SSH into this instances. We will need this later to build the docker images for the app and the internal load balancer.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The first of the 2 instances have been launched now. Follow the same steps for launching the next instance, only changing the subnet to some other value than the previous one, and using the SSH keypair you created a while ago.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#containerizing-the-app-and-nginx-configuration"&gt;
  &lt;/a&gt;
  Containerizing the app and NGINX configuration
&lt;/h1&gt;

&lt;p&gt;For this tutorial, we will use this repo for the app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Link: https://github.com/sowmenappd/load_balanced_nodejs_app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will help us speed the process through. The hierarchical view of the repo is given below:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pcc_KTyi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/320/1%2Art2Qr3QlEdFtvHML7ekGsw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pcc_KTyi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/320/1%2Art2Qr3QlEdFtvHML7ekGsw.png" alt="Folder structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;app&lt;/strong&gt; folder contains the node server source code along with the Dockerfile. In the &lt;strong&gt;nginx&lt;/strong&gt; folder, there is a configuration file &lt;strong&gt;nginx.conf&lt;/strong&gt; that defines the upstream server port configuration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http{    
    upstream lb {        
        server 172.17.0.1:1000 weight=1;        
        server 172.17.0.1:2000 weight=1;        
        server 172.17.0.1:3000 weight=1;    
    }     
    server {        
        listen 80;        
        location / {            
            proxy_pass http://lb;        
        }    
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;e configuration files specifies that the main NGINX server should listen to port 80, the &lt;strong&gt;root location&lt;/strong&gt; ‚Äú/‚Äù will relay the request(proxy pass) to an upstream defined in this file named &lt;strong&gt;lb&lt;/strong&gt;. This is an upstream object that specifies how many servers will be included(these are the express servers that we mount via docker-compose, more on that in a later section), and what ports these servers will be internally running on, while the reverse proxy load balances the traffic from port 80.&lt;br&gt;
In our case, the upstream proxy will direct traffic to ports 1000, 2000, and 3000. These port numbers must match the internal PORT value that is sent to each express server instance as an env-var, which we will define in the docker-compose YAML file.&lt;br&gt;
For each of the launched instances, we do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SSH into the instance using created keypair&lt;/li&gt;
&lt;li&gt;Run the following terminal commands to build the app image from its Dockerfile
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/sowmenappd/load_balanced_nodejs_app.git
cd load_balanced_nodejs_app/app
docker build -t app .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Next build the nginx server docker image
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd ../nginx
docker build -t nginx-s .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;docker images&lt;/code&gt; and you should see something like this:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OttUX2NM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AFj36IiczX2Z9TXyTvS9yqw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OttUX2NM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AFj36IiczX2Z9TXyTvS9yqw.png" alt="Terminal output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For the second server, we need to change the docker-compose.yml file. The env-var &lt;strong&gt;SERVER_ID&lt;/strong&gt; should be changed to 2 for all apps (app1, app2, app3). This is definitely nothing to be concerned about, and no production server will ever have something like that. We‚Äôre doing this only for the sake of demonstration.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run the final commands:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd ..
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your isolated servers should now be running three process of the express app in the background. All we need now is to mount this system using the load-balancer AWS gives us, AWS ALB.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#mounting-the-system-with-aws-alb"&gt;
  &lt;/a&gt;
  Mounting the system with AWS ALB
&lt;/h1&gt;

&lt;p&gt;At this point, both the instances are ready for mounting. We are going to set up an application load balancer in AWS by following these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Navigate to &lt;strong&gt;EC2 Dashboard&lt;/strong&gt; and click on &lt;strong&gt;Target Groups&lt;/strong&gt;. Click &lt;strong&gt;Create target group&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Choose target type: &lt;strong&gt;Instances&lt;/strong&gt; and provide a valid target group name, and click &lt;strong&gt;Next&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Select the two running instances and click &lt;strong&gt;Include as pending below&lt;/strong&gt;, with the port as 80.&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Create target group&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Next, click on &lt;strong&gt;Load balancer&lt;/strong&gt; from the side menu (left).&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Create load balancer&lt;/strong&gt; and click &lt;strong&gt;Create&lt;/strong&gt; on Application Load Balancer card.&lt;/li&gt;
&lt;li&gt;In the next screen, select the availability zones you had chosen earlier while launching the instances, and proceed.&lt;/li&gt;
&lt;li&gt;Create a new security group with port 80 open to all IP range, and then click &lt;strong&gt;Next&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Existing target group&lt;/strong&gt;, and point it to the target group you created.&lt;/li&gt;
&lt;li&gt;Rest of the settings are fine, you can click on &lt;strong&gt;Create&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The load balancer should be up and running within minutes after registering the instances and getting health checks running. Now, we grab the DNS name of the load balancer from &lt;strong&gt;EC2 Dashboard &amp;gt; Load balancers&lt;/strong&gt;, copy the DNS name attribute of the load balancer.&lt;/p&gt;

&lt;p&gt;Paste the DNS name into the browser, and hit Enter. You will see that every time you refresh your browser page, the response sends back different PORT and SERVER_ID values. This validates the system because by default, NGINX and AWS load balancers use Round Robin algorithm for load balancing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aMAcl9oj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/700/1%2ASVhkmrpyS1dOAsJfXUj6-Q.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aMAcl9oj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/700/1%2ASVhkmrpyS1dOAsJfXUj6-Q.gif" alt="App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Our system is now guaranteed to be very highly available and able to withstand spiky and massive amount of traffic over prolonged durations of operation, given the multi-load balancer configuration we have deployed. As a follow up to this tutorial, I shall also post another article showing how to create and maintain a deployment pipeline that integrates with source control and deploys our changes to the servers upon commits to the GitHub repo.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/reference/builder/"&gt;Dockerfile reference | Docker Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/compose/compose-file/"&gt;Compose file | Docker Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/introduction.html"&gt;What is an Application Load Balancer? ‚Äî Elastic Load Balancing (amazon.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html"&gt;Target groups for your Application Load Balancers ‚Äî Elastic Load Balancing (amazon.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://faun.pub/basics-of-configuring-nginx-b38c78eb113"&gt;Basics of configuring NGINX. This article contains how to do the‚Ä¶ | by Nethmini Romina | FAUN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>docker</category>
      <category>nginx</category>
    </item>
    <item>
      <title>Things I Wished I Knew About DevOps Practices and Cloud Technologies When I Started my First Role in Tech</title>
      <author>Kim Diep</author>
      <pubDate>Thu, 15 Apr 2021 08:54:57 +0000</pubDate>
      <link>https://dev.to/thekimmykola/things-i-wished-i-knew-about-devops-practices-and-cloud-technologies-when-i-started-my-first-role-in-tech-160o</link>
      <guid>https://dev.to/thekimmykola/things-i-wished-i-knew-about-devops-practices-and-cloud-technologies-when-i-started-my-first-role-in-tech-160o</guid>
      <description>&lt;p&gt;It‚Äôs 2021 and I‚Äôm just over a month into my third role as a Software Engineer &amp;amp; Tech Coach. It‚Äôs been a whirlwind of a journey so far! Here‚Äôs some things I wished I knew about DevOps practices and cloud technologies when I started my first role in tech.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-role-wasnt-just-about-fullstack-software-engineering-in-c-but-also-involved-devops-practices-and-cloud-technologies"&gt;
  &lt;/a&gt;
  My role wasn‚Äôt just about full-stack Software Engineering in C#, but also involved DevOps practices and Cloud technologies
&lt;/h3&gt;

&lt;p&gt;During my career switch into tech, I thought that DevOps practices and Cloud technologies were utilised solely by DevOps Engineers and Cloud Engineers. I under appreciated how much of my role involved DevOps practices and Cloud.&lt;/p&gt;

&lt;p&gt;When I spoke to people in my network and especially those who have recently started their first roles in technology; it seemed like there was a mixed bag. Some people were not involved in DevOps and Cloud at all, though they mentioned some of their colleagues were. Others, like myself had more of a hybrid role and some people were doing DevOps and Cloud every single day!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-devops-in-a-nutshell"&gt;
  &lt;/a&gt;
  What is DevOps in a nutshell?
&lt;/h3&gt;

&lt;p&gt;AWS states, "DevOps is the combination of...philosophies, practices, and tools that increases an organisation's ability to deliver applications and services‚Ä¶". The infrastructure and process that sits behind software ensures a smoother experience for building code, testing it, shipping it out and monitoring it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devops-and-cloud-is-there-to-help-developers"&gt;
  &lt;/a&gt;
  DevOps and Cloud is there to help Developers
&lt;/h3&gt;

&lt;p&gt;Some Software Engineers would say that DevOps and Cloud is not part of their role, so why should they bother; they do have a point there. It‚Äôs a massive world, recently, product offerings like AWS Amplify for example, help those who major on the front-end and API domains build mobile/web apps quickly. However, there's value in learning some of the key concepts on how DevOps and cloud is helpful.&lt;/p&gt;

&lt;p&gt;In my first role in tech, I wanted to learn some fundamentals of DevOps and Cloud that would support me in my role as a C# Full-Stack Software Engineer.&lt;/p&gt;

&lt;p&gt;In my team at the time, one of the projects we were tasked with was re-writing a legacy Excel application into a .NET Core 3.1 C# web application (at the time of writing this post, it‚Äôs .NET 5). I really liked the way my team worked together on this, all the developers/testers, business analysts, our product owner and scrum master mobbed on this.&lt;/p&gt;

&lt;p&gt;Something popped into my head at the time: ‚ÄúWhy can‚Äôt we just build the web application and then just deploy it to production for the users, easy right? I can just click around on the Azure Portal and just manually make my resources there and then manually deploy.‚Äù&lt;/p&gt;

&lt;p&gt;Well, when we started mob programming on the cloud infrastructure process, I realised there was more to just ‚Äòmaking something work‚Äô.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automated-continuous-integration-amp-continuous-deployments-using-azure-repos-amp-pipelines"&gt;
  &lt;/a&gt;
  Automated Continuous Integration &amp;amp; Continuous Deployments Using Azure Repos &amp;amp; Pipelines
&lt;/h3&gt;

&lt;p&gt;One of the things that stuck with me was CI/CD (Continuous Integration / Continuous Deployment). According to the AWS DevOps &lt;a href="https://aws.amazon.com/blogs/devops/complete-ci-cd-with-aws-codecommit-aws-codebuild-aws-codedeploy-and-aws-codepipeline/#:~:text=An%20integral%20part%20of%20DevOps,from%20development%20to%20production%20environments."&gt;blog&lt;/a&gt;, ‚ÄúAn integral part of DevOps is adopting the culture of continuous integration and continuous delivery/deployment (CI/CD), where a commit or change to code passes through various automated stage gates, all the way from building and testing to deploying applications, from development to production environments.‚Äù&lt;/p&gt;

&lt;p&gt;I got to appreciate this by learning about git, git repositories on Azure repos, managing branches and creating pipelines to build and deploy our C# solution.&lt;/p&gt;

&lt;p&gt;During my learning process, I had a sneak peak at how different teams were utilising Azure Pipelines. At first I was hard-coding things in and this sort of worked, but then I found myself copying and pasting all the time. I then realised parameterisation was helpful to ensure I could supply different values for the same pipeline variables. This helped me as a developer and for other developers on my team because it meant we could replicate the same setup across the development environments, testing environments, pre-production and production environments of the pipeline. We could configure things to be switched ‚Äòon‚Äô and ‚Äòoff‚Äô through code.&lt;/p&gt;

&lt;p&gt;Separation of concerns was important here. We decided to go with an infrastructure pipeline and an app pipeline. If there were changes to the web application on a branch, CI/CD will automatically detect this and trigger a build and deploy onto the relevant environments using the relevant pipelines. Test suites would also run automatically too. Once the Pull Request (PR) for the branch has been approved and merged, the CI/CD pipeline will build and deploy to the environments. No more arduous manual deployments that we had to deal with for the original Excel application! Great!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#infrastructureascode"&gt;
  &lt;/a&gt;
  Infrastructure-as-Code
&lt;/h3&gt;

&lt;p&gt;During my first role, I realised that clicking around the settings on the Azure Portal to create and configure resources was helpful for me, but not helpful for others. It wasn‚Äôt repeatable. We had to think as a team how we can define the infrastructure and configure it using a better approach. This was where the Azure Resource Manager (ARM) templates came in handy. It enabled the definition of what infrastructure we wanted to make, how we wanted to make it and configure it.&lt;/p&gt;

&lt;p&gt;The ARM templates were useful as they could be version controlled through git as well; just like we would version control code. There were also helpful extensions on Visual Studio for structuring and validating these templates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Most importantly, it enabled a repeatable and testable process for our infrastructure.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#logging-amp-monitoring"&gt;
  &lt;/a&gt;
  Logging &amp;amp; Monitoring
&lt;/h3&gt;

&lt;p&gt;So why do we need logging &amp;amp; monitoring? Let me put it this way, when you release a new feature for your product, that's just the start. Just as a plane has a suite of telemetry to record readings from instruments; it is the same concept for software to ensure everything is operating as it should. Try to think where logging and monitoring makes sense for you.&lt;/p&gt;

&lt;p&gt;We used Azure Monitor to add observability into our applications, infrastructure and network.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h3&gt;

&lt;p&gt;This is just the surface of what DevOps and Cloud technologies can offer to developers, of course there are specialists who go a bit deeper into more concepts that those I've covered here. If you are working in tech, there is some benefit to learning some of the fundamentals about the infrastructure and process that sits behind software to ensure smoother experiences for building code, testing it, shipping it out and monitoring it.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>career</category>
      <category>learning</category>
      <category>cloud</category>
    </item>
    <item>
      <title>I made a VS Code theme!</title>
      <author>Virej Dasani</author>
      <pubDate>Thu, 15 Apr 2021 08:32:04 +0000</pubDate>
      <link>https://dev.to/virejdasani/i-made-a-vs-code-theme-1d5c</link>
      <guid>https://dev.to/virejdasani/i-made-a-vs-code-theme-1d5c</guid>
      <description>&lt;h3&gt;
  &lt;a href="#i-always-wanted-to-have-my-own-theme-for-my-favorite-code-editor-visual-studio-code-so-i-made-one"&gt;
  &lt;/a&gt;
  I always wanted to have my own theme for my favorite code editor, Visual Studio Code, so I made one!
&lt;/h3&gt;

&lt;h1&gt;
  &lt;a href="#meet-hydroxy"&gt;
  &lt;/a&gt;
  Meet &lt;a href="https://marketplace.visualstudio.com/items?itemName=VirejDasani.hydroxy"&gt;Hydroxy&lt;/a&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;It is a dark theme with an awesome color scheme&lt;/li&gt;
&lt;li&gt;It comes in two flavors to match your taste!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5iYXT11v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yk5jywjuh85wqe3ypcr0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5iYXT11v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yk5jywjuh85wqe3ypcr0.png" alt="Hydroxy Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hydroxy Original (above)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VZLNxkBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adkhm3rov2qdxdmxb35p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VZLNxkBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adkhm3rov2qdxdmxb35p.png" alt="Hydroxy Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hydroxy Alt Colors (above)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#-hydroxy-is-available-to-download-on-the-visual-studio-marketplace-or-directly-from-the-extensions-tab-inside-vs-code"&gt;
  &lt;/a&gt;
  - Hydroxy is available to download on the &lt;a href="https://marketplace.visualstudio.com/items?itemName=VirejDasani.hydroxy"&gt;Visual Studio marketplace&lt;/a&gt; or directly from the extensions tab inside VS Code.
&lt;/h3&gt;

&lt;p&gt;You can also check out &lt;a href="https://github.com/virejdasani/HydroxyTheme"&gt;Hydroxy on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heres-how-i-made-it"&gt;
  &lt;/a&gt;
  Here's how I made it
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I found &lt;a href="https://www.youtube.com/watch?v=QCqWzb-9Sy8"&gt;this&lt;/a&gt; YouTube video. It pretty much shows you step by step how you can make your own VS Code theme!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A rating on the &lt;a href="https://marketplace.visualstudio.com/items?itemName=VirejDasani.hydroxy"&gt;Visual Studio marketplace&lt;/a&gt;, a star on the &lt;a href="https://github.com/virejdasani/HydroxyTheme"&gt;GitHub repo&lt;/a&gt; and any feedback is highly appreciated!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check out some of my other projects and follow my socials from &lt;a href="https://virejdasani.github.io/virej/"&gt;my website&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vscode</category>
      <category>javascript</category>
      <category>hydroxy</category>
      <category>html</category>
    </item>
    <item>
      <title>SOA vs Microservices</title>
      <author>Priyanshi Sharma</author>
      <pubDate>Thu, 15 Apr 2021 08:20:36 +0000</pubDate>
      <link>https://dev.to/priyanshi_sharma/soa-vs-microservices-59m4</link>
      <guid>https://dev.to/priyanshi_sharma/soa-vs-microservices-59m4</guid>
      <description>&lt;p&gt;&lt;a href="https://www.decipherzone.com/blog-detail/soa-vs-microservices"&gt;SOA (Service oriented architecture) and Microservices&lt;/a&gt; are two different architectures for web application development. Service Oriented architecture focuses on reusing services and components throughout the web application to reduce the amount of effort to write code by reducing redundancy. The services are code and data integrations to build and execute a functionality; for example- syncing an email, validating a logged-in user with cookies, sending notifications. Whereas on the contrary microservices architecture focuses on high reliability and availability of the application even if redundancy in data resources and code has to be adapted. Every functionality in the web application is developed as a service that gets containerized and hosted on a separate server instance. Such an approach enhances the agility of web applications and it keeps on working even if some of the services fail.&lt;/p&gt;

&lt;p&gt;In &lt;a href="https://www.decipherzone.com/blog-detail/service-oriented-architecture"&gt;SOA&lt;/a&gt; the whole backend system application is divided into three parts i.e. controller, services and business logic. The whole backend system is hosted on a single server instance and the services in the backend system can communicate with each other directly, however to the external world (frontend and third-party apps) these services are made available via API calls. Whereas in microservices architecture these services are developed and deployed as separate applications on their own server instances. The communication between services is also done via APIs in a microservices architecture.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-soaservice-oriented-architecture"&gt;
  &lt;/a&gt;
  &lt;strong&gt;When to use SOA(Service Oriented Architecture)?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Service oriented architecture should be used whenever you are building a web application with the following aspirations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Whose users can bear the downtime?&lt;/li&gt;
&lt;li&gt; When a web application is required in comparatively less budget than highly resilient web apps. &lt;/li&gt;
&lt;li&gt; When the business owner wants to save server and device maintenance cost by migrating every enterprise application on the cloud. &lt;/li&gt;
&lt;li&gt; A large web application needs to be developed in a shorter time frame. &lt;/li&gt;
&lt;li&gt; When Single points of failure are tolerable. &lt;/li&gt;
&lt;li&gt; When Data redundancy is tolerable. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#advantages-and-benefits-of-soa-architecture"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.decipherzone.com/blog-detail/service-oriented-architecture"&gt;Advantages and Benefits of SOA architecture&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Since SOA focuses on reusing services throughout the web application so the speed of development is faster. &lt;/li&gt;
&lt;li&gt; Faster development speed consequences in less cost of web application development. &lt;/li&gt;
&lt;li&gt; The code written in SOA is easily readable and manageable. &lt;/li&gt;
&lt;li&gt; The deployment is easier in SOA because web applications are deployed only on a single server instance. &lt;/li&gt;
&lt;li&gt; The cost of servers to run web applications developed in SOA is very less. &lt;/li&gt;
&lt;li&gt; Businesses don‚Äôt need to provide support for multiple versions of an application because the rollout of new applications is done on a production server instance so it becomes available to everyone at the same time. &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-service-oriented-architecture"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Disadvantages of Service Oriented Architecture&lt;/strong&gt;
&lt;/h2&gt;

&lt;ol&gt; 
&lt;li&gt; The extreme reusability of data and services results in extreme dependability which often becomes a single point of failure for the whole web application.&lt;/li&gt;

&lt;li&gt; A Large server instance is required to host the web application which imposes hardware limitations such as data bus and network communication bandwidth. &lt;/li&gt;

&lt;li&gt; The deployment of such bulky web applications built over SOA takes a lot of time to deploy and stabilize the release. It‚Äôs the main reason why the deployment of such web applications is scheduled on weekends. &lt;/li&gt;

&lt;li&gt; The web application development in SOA becomes dependent on a single programming language or a framework. It often happens in the development process that an open-source functionality or a better implementation is available in another programming language but the development teams cannot consume it within their application. In such scenarios, the development teams also have to develop that functionality which consequently increases the development cost and time. &lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#why-microservices-architecture"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.decipherzone.com/blog-detail/why-microservices-architecture"&gt;Why microservices architecture?&lt;/a&gt;&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Microservices architecture works on the principle to decentralize everything within the web application. Microservices architecture offers high resilience and availability by adapting to the redundancy of server instances and data duplication. This redundancy and duplication reduce the cost efficiency of the web application development and deployment process. Since services are deployed as separate applications on their own server instances with backup containers ready to run in case there is a spike in service call requests, the failure threshold gets pushed up. The high availability of hardware resources enables applications to offer high resilience. The workload on applications being distributed over independent services enables high availability because the web application will not fail even if some of the services stop working. The cross-region replication protects the data from hazards and offers low latency.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-microservices-architecture"&gt;
  &lt;/a&gt;
  &lt;strong&gt;When to use microservices architecture?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Microservices architecture should be used whenever you are building a web application with the following aspirations:&lt;/p&gt;

&lt;ul&gt; 

&lt;li&gt; When zero downtime is desirable.  &lt;/li&gt;
&lt;li&gt; When web application development and deployment cost is less of a concern than high resilience and availability.  &lt;/li&gt;
&lt;li&gt; When single points of failure aren‚Äôt tolerable.  &lt;/li&gt;
&lt;li&gt; When you have ample time to develop a web application.  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-microservices-architecture"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.decipherzone.com/blog-detail/benefits-microservices-architecture"&gt;Benefits of Microservices Architecture&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Microservices architecture offers high availability, reliability, resilience and low latency(when application requests are redirected to the closest deployment server). &lt;/li&gt; 

&lt;li&gt; Applications are agile, nimble and easy to scale up. &lt;/li&gt;

&lt;li&gt; The web applications become programming language and framework independent as each and every service can be developed independently. &lt;/li&gt;

&lt;li&gt; The deployment process is smoother as it is done service by service so there is usually no web application downtime. &lt;/li&gt;

&lt;li&gt; The selection of server instances and cloud hosting plans is correlated to the use case and usage frequency of service hence, the dependability on a large server instance is eliminated. &lt;/li&gt;

&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-microservices-architecture"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.decipherzone.com/blog-detail/what-are-microservices"&gt;Disadvantages of microservices architecture&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; The development process is extremely time-consuming and tedious due to the complex structure and deployment is also of the same nature because new feature deployments have to be done service by service. &lt;/li&gt;

&lt;li&gt; Additional infrastructure to observe, monitor and secure the service deployments is required. &lt;/li&gt;

&lt;li&gt; The development and deployment are comparatively very high than the web applications developed over SOA. &lt;/li&gt;

&lt;li&gt; You have to hire developers with a comparatively bigger skillset. &lt;/li&gt;

&lt;/ol&gt;

&lt;p&gt;Source: &lt;a href="https://www.decipherzone.com/blog"&gt;Decipher&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>$200 of free AWS credits up for grabs üëÄ</title>
      <author>lee</author>
      <pubDate>Thu, 15 Apr 2021 08:19:26 +0000</pubDate>
      <link>https://dev.to/leewynne/200-of-free-aws-credits-up-for-grabs-4pj7</link>
      <guid>https://dev.to/leewynne/200-of-free-aws-credits-up-for-grabs-4pj7</guid>
      <description>&lt;p&gt;Hey Dev community, we are giving away $200 of free AWS credits over at &lt;a href="https://www.theelastic.guru/teamelasticguru/200-of-free-aws-credits-up-for-grabs-5hka"&gt;The Elastic Guru&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are an up and coming AWS community supported and powered by &lt;a href="https://www.forem.com/discover"&gt;Forem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is Karissa from AWS with a tweet about it:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nXTm5XQa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Ey93bB0VoAAglTp.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OUO2LW3n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1347321906198843392/_sNDLCJY_normal.jpg" alt="Karissa Wood profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Karissa Wood
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @karissa_wood_
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      üí∞Want to receive $200 in AWS credits? All you need to do is introduce yourself in the &lt;a href="https://twitter.com/theelasticguru"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/theelasticguru"&gt;@theelasticguru&lt;/a&gt; welcome thread and include the text &lt;a href="https://twitter.com/hashtag/freeAWScredits"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/freeAWScredits"&gt;#freeAWScredits&lt;/a&gt;. &lt;br&gt;&lt;br&gt;üëâOR share this post on Twitter with the hashtag &lt;a href="https://twitter.com/hashtag/freeAWScredits"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/freeAWScredits"&gt;#freeAWScredits&lt;/a&gt; and tag &lt;a href="https://twitter.com/theelasticguru"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/theelasticguru"&gt;@theelasticguru&lt;/a&gt;. ü•≥&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/awscommunity"&gt;#awscommunity&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/awsusergroups"&gt;#awsusergroups&lt;/a&gt; &lt;a href="https://t.co/DwkDBKu0cp"&gt;twitter.com/theelasticguru‚Ä¶&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:05 PM - 14 Apr 2021
    &lt;/div&gt;

      &lt;div class="ltag__twitter-tweet__quote"&gt;
        &lt;div class="ltag__twitter-tweet__quote__header"&gt;
          &lt;span class="ltag__twitter-tweet__quote__header__name"&gt;
            The Elastic Guru
          &lt;/span&gt;
          @theelasticguru
        &lt;/div&gt;
        $200 of free AWS credits up for grabs! üëÄ #theElasticGuru #awscommunity #awsheroes #awscloud #cloudcomputing #awstraining #awseducate #Kubernetes  https://t.co/s1lcPmRXfC
      &lt;/div&gt;

    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1382454923661516800" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1382454923661516800" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1382454923661516800" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Hope to see you there. Any social sharing of our giveaway would be much appreciated üòá&lt;/p&gt;

</description>
      <category>aws</category>
      <category>awsheroes</category>
    </item>
    <item>
      <title>Solution: Fibonacci Number</title>
      <author>seanpgallivan</author>
      <pubDate>Thu, 15 Apr 2021 08:13:58 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-fibonacci-number-32a</link>
      <guid>https://dev.to/seanpgallivan/solution-fibonacci-number-32a</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/fibonacci-number/discuss/1159381"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-509-easy-fibonacci-number"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/fibonacci-number/"&gt;Leetcode Problem #509 (&lt;em&gt;Easy&lt;/em&gt;): Fibonacci Number&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;strong&gt;Fibonacci numbers&lt;/strong&gt;, commonly denoted &lt;code&gt;F(n)&lt;/code&gt; form a sequence, called the &lt;strong&gt;Fibonacci sequence&lt;/strong&gt;, such that each number is the sum of the two preceding ones, starting from &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;. That is,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;F(0) = 0&lt;/code&gt;, &lt;code&gt;F(1) = 1&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;F(n) = F(n - 1) + F(n - 2)&lt;/code&gt;, for &lt;code&gt;n &amp;gt; 1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given &lt;code&gt;n&lt;/code&gt;, calculate &lt;code&gt;F(n)&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;n = 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;F(2) = F(1) + F(0) = 1 + 0 = 1.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;n = 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;F(3) = F(2) + F(1) = 1 + 1 = 2.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;n = 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;F(4) = F(3) + F(2) = 2 + 1 = 3.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;0 &amp;lt;= n &amp;lt;= 30&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The naive idea here would be to create an array of Fibonacci numbers by doing as the directions indicate: adding the two previous numbers together to find the next number.&lt;/p&gt;

&lt;p&gt;But we can find the answer here in &lt;strong&gt;O(1) space&lt;/strong&gt; by instead just keeping track of only the previous two numbers (&lt;strong&gt;a, b&lt;/strong&gt;) and rolling over the variable contents in a circular pattern.&lt;/p&gt;

&lt;p&gt;Since our rolling loop can only begin on the third number or later, we'll first have to deal with the early &lt;strong&gt;n&lt;/strong&gt;-value edge cases with a special &lt;strong&gt;return&lt;/strong&gt; statement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Update:&lt;/em&gt;&lt;/strong&gt; Apparently there's a mathematical formula for Fibonacci numbers: &lt;strong&gt;Binet's formula&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Binet's formula for the &lt;strong&gt;n&lt;/strong&gt;'th Fibonacci number:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sV-btww6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wikimedia.org/api/rest_v1/media/math/render/svg/57459135cb5773799fab490a49311b3725df94fd" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sV-btww6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wikimedia.org/api/rest_v1/media/math/render/svg/57459135cb5773799fab490a49311b3725df94fd" alt="Binet's Formula"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This formula can compute the solution in &lt;strong&gt;O(1) time&lt;/strong&gt; as well as &lt;strong&gt;O(1) space&lt;/strong&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;There are only minor differences betwen the code of all four languages.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-binets-formula"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Binet's formula:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;fib&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sqrt5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;sqrt5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;sqrt5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;sqrt5&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-on-iteration"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ O(N) iteration:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;fib&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-binets-formula"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Binet's formula:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;sqrt5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sqrt5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sqrt5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;sqrt5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-on-iteration"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ O(N) iteration:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-binets-formula"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Binet's formula:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;fib&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;sqrt5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sqrt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;)((&lt;/span&gt;&lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pow&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sqrt5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pow&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sqrt5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pow&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;sqrt5&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-on-iteration"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ O(N) iteration:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;fib&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-binets-formula"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Binet's formula:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;sqrt5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sqrt5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sqrt5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;sqrt5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-on-iteration"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ O(N) iteration:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Why you should make your site accessible</title>
      <author>kaspera</author>
      <pubDate>Thu, 15 Apr 2021 08:03:05 +0000</pubDate>
      <link>https://dev.to/kaspera/why-you-should-make-your-site-accessible-om6</link>
      <guid>https://dev.to/kaspera/why-you-should-make-your-site-accessible-om6</guid>
      <description>&lt;p&gt;When creating websites, it‚Äôs easy to think of all users as the same. You often forget that not all users can navigate a website with the same ease as oneself. That‚Äôs where accessibility comes into play.&lt;/p&gt;

&lt;p&gt;But what is accessibility? As Victor Tsaran, a Technology Program Manager at Google, who also happens to be blind, puts it:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúAccessibility is really about making sure that the content and the websites we create are useable to people with various impairments or abilities.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;- Victor Tsaran, Technology Program Manager at Google&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Your mind might automatically jump to a user who has difficulty using a regular keyboard, mouse, or touch screen. That can be one case, yes. But accessibility also covers all from users with ADHD, who has difficulty focusing, to a person trying to read a screen in direct sunlight.&lt;/p&gt;

&lt;p&gt;There are many categories when it comes to accessibility concerns, but the four main areas are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Vision (People with limited vision, low vision, or blindness).&lt;/li&gt;
&lt;li&gt;Motor/dexterity (People who have difficulty or can‚Äôt use a mouse / touch screen).&lt;/li&gt;
&lt;li&gt;Auditory (People who have difficulty hearing or are deaf).&lt;/li&gt;
&lt;li&gt;Cognitive (People with ADHD, dyslexia, autism, etc.).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You might already be out of breath thinking, ‚ÄúPew, isn‚Äôt that a lot of work for just a few people?‚Äù.&lt;/p&gt;

&lt;p&gt;Yes. However, all people should be able to access the web, which is why there are also laws &amp;amp; policies for this in place. You can view your country‚Äôs law or policy &lt;a href="https://www.w3.org/WAI/policies/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, this isn‚Äôt all stick and no carrot. The fruit of your labor also benefits users without any impairment or disability.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DBz1pdbF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2kxcvxewejhqm7xsvj3e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DBz1pdbF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2kxcvxewejhqm7xsvj3e.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What if told that making your site accessible benefits all users. Not only that, but it can also have a direct impact on your conversion rate and your SEO rankings.&lt;/p&gt;

&lt;p&gt;Sounds too good to be true? Let me explain.&lt;/p&gt;

&lt;p&gt;Say you‚Äôre optimizing your content for vision accessibility; what do you do? You make your content easier to digest by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Making sure you have a nice font size for your body text (E.g., 16px).&lt;/li&gt;
&lt;li&gt;Ensuring that the font is easy to read and is not disturbing (sorry, Comic Sans).&lt;/li&gt;
&lt;li&gt;Setting a good line-height (E.g., 150%).&lt;/li&gt;
&lt;li&gt;Leaving plenty of white space between paragraphs.&lt;/li&gt;
&lt;li&gt;Selecting the correct contrast for your text (light text on a light background is a no-go).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By optimizing your content, you will increase &lt;a href="https://backlinko.com/hub/seo/dwell-time"&gt;dwell time&lt;/a&gt; and reduce &lt;a href="https://backlinko.com/hub/seo/bounce-rate"&gt;bounce rate&lt;/a&gt; and &lt;a href="https://backlinko.com/hub/seo/pogosticking"&gt;pogo sticking&lt;/a&gt;, which all are part of &lt;a href="https://backlinko.com/google-ranking-factors"&gt;Google‚Äôs ranking factors&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Don‚Äôt think good typography matters? See if you can find an old website from the early 2000s. Back then, the font and font size of choice was 11px Verdana. Try reading this today, and you will properly be rubbing your eyes afterward.&lt;/p&gt;

&lt;p&gt;Speaking of old websites, remember when we couldn‚Äôt get enough animated gifs, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/marquee#examples"&gt;marquee-elements&lt;/a&gt;, and cheesy background images? Do you know why this trend eventually died? Because they were distracting. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7fbWspw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6rz8uytdnrdr321ao8o2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7fbWspw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6rz8uytdnrdr321ao8o2.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also claimed that making your website more accessible could directly impact your conversion rate. How?&lt;/p&gt;

&lt;p&gt;Well, the obvious answer is, of course, that the more users who can actually access and use your site, the more likely a conversion is to happen. But this isn‚Äôt what I had in mind. Let‚Äôs look at optimizing for cognitive accessibility.&lt;/p&gt;

&lt;p&gt;Cognitive accessibility covers many topics but generally speaking, it‚Äôs about minimizing distractions.&lt;/p&gt;

&lt;p&gt;To minimize distractions, you should find out what your page‚Äôs primary goal is and then remove unnecessary elements (‚Äúfluff‚Äù) that can distract the user from achieving this goal.&lt;/p&gt;

&lt;p&gt;To illustrate this, I‚Äôve created my very own eCommerce store, TacoTsunami.com, where I sell an organic all-in-one taco kit. &lt;/p&gt;

&lt;p&gt;My main goal? To sell my amazing taco kits! üåÆ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GtjAvMqd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8o2fwlho1rdh6clyjxe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GtjAvMqd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8o2fwlho1rdh6clyjxe.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here‚Äôs my current store. It‚Äôs not converting all that well. That‚Äôs because a lot is going on here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I want to sell my Taco kit (‚ÄúAdd to cart‚Äù-button).&lt;/li&gt;
&lt;li&gt;If they don‚Äôt want to buy now, I want them to at least save it for later (‚ÄúAdd to wishlist‚Äù-button).&lt;/li&gt;
&lt;li&gt;I want everyone to know about our new, awesome club! (‚ÄúCHECK OUT OUR NEW TACO CLUB!‚Äù-text)&lt;/li&gt;
&lt;li&gt;I want them to sign up for our free newsletter (‚ÄúSign up for our newsletter‚Äù-box)&lt;/li&gt;
&lt;li&gt;I also want them to like this product on Facebook so all their friends can see it! (The ‚ÄúLike‚Äù-button)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That‚Äôs five different ‚Äúcalls to action‚Äù ‚Äì on one single page! üò±&lt;/p&gt;

&lt;p&gt;It‚Äôs messy, and it distracts the users from our real goal ‚Äì to sell our awesome taco kit.&lt;/p&gt;

&lt;p&gt;Now let‚Äôs try to remove all the fluff like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B3ITBZZK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwr7s9gxlknrme2vbnvb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B3ITBZZK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwr7s9gxlknrme2vbnvb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There can‚Äôt be any doubt about what action we want the user to take. Removing distractions not only makes your site more accessible to people with cognitive impairments but also improves your conversion rate.&lt;/p&gt;

&lt;p&gt;As Victor puts it:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúImproving the experience for users with cognitive impairments makes it a so much better experience for everybody else.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;-Victor Tsaran, Technology Program Manager at Google&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Agreed, Victor üëç&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-alertdesk-to-keep-track-of-your-pages-accessibility"&gt;
  &lt;/a&gt;
  ‚ôø Use Alertdesk to keep track of your pages‚Äô accessibility
&lt;/h2&gt;

&lt;p&gt;Alertdesk automatically checks your pages‚Äô accessibility daily ‚Äì both from a Mobile and a Desktop perspective.&lt;/p&gt;

&lt;p&gt;Our accessibility reports help you to see what needs fixing on how to do it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.alertdesk.com/?utm_source=devto&amp;amp;utm_medium=organic&amp;amp;utm_campaign=article&amp;amp;utm_content=why-you-should-make-your-site-accessible"&gt;Start tracking your accessibility today with Alertdesk. Try us free for 14 days.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ux</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>development</category>
    </item>
    <item>
      <title>10 Signs of a good Ruby on Rails Developer</title>
      <author>Pramod Shinde</author>
      <pubDate>Thu, 15 Apr 2021 08:02:38 +0000</pubDate>
      <link>https://dev.to/pramodshinde7/10-signs-of-a-good-ruby-on-rails-developer-2nc4</link>
      <guid>https://dev.to/pramodshinde7/10-signs-of-a-good-ruby-on-rails-developer-2nc4</guid>
      <description>&lt;p&gt;I have been working as Ruby on Rails developer since last five years with Josh Software, I felt that I should write down my learnings about the best practices followed by the RoR developer. How I learned ‚Ä¶? of course to learn something you need to commit the mistakes, thats how we learn right?&lt;/p&gt;

&lt;p&gt;Let‚Äôs see, What all you should follow to be a ‚ÄòGood‚Äô Ruby on Rails developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-your-migrations-are-thoughtful-"&gt;
  &lt;/a&gt;
  1. Your migrations are ‚Äúthoughtful‚Äù ‚Ä¶
&lt;/h2&gt;

&lt;p&gt;Whenever you come across database table schema design do you think through all the aspects like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The table which is being designed where its going to be used? How much it might grow in terms of the data size? (Imagine the worst future of your design)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have I kept correct data types, defaults, constraints if any? Most of the times we really don‚Äôt need integer columns, We can use &lt;code&gt;smallint&lt;/code&gt; instead for smaller set of &lt;code&gt;integers&lt;/code&gt;, similarly &lt;code&gt;varchar(10)&lt;/code&gt; vs &lt;code&gt;varchar(255)&lt;/code&gt; vs &lt;code&gt;text&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have I added indexes wherever necessary? Thinking through What kind of the queries this table is going to handle?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;A special point&lt;/strong&gt;‚Ä¶Do you write multiple migrations for same table? if yes, it's a bad habit.&lt;/p&gt;

&lt;p&gt;Often we don‚Äôt think through all the points mentioned above and end up creating multiple migrations for same table which causes codebase to look scary.&lt;/p&gt;

&lt;p&gt;Instead you should use &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt; on the migration to fix or alter the table, change in the requirement is an exception to this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-you-always-follow-the-single-responsibility-principle"&gt;
  &lt;/a&gt;
  2. You always follow the single responsibility principle
&lt;/h2&gt;

&lt;p&gt;We all know a convention of ‚Äú&lt;strong&gt;&lt;em&gt;skinny controller and fat model&lt;/em&gt;&lt;/strong&gt;‚Äù, some of us already follow this but do we follow it wisely.&lt;/p&gt;

&lt;p&gt;We are living in the Rails 5 era, so Why overload models?&lt;/p&gt;

&lt;p&gt;Why not to follow ‚Äú&lt;strong&gt;&lt;em&gt;keep everything skinny move extra fat to concerns or service objects from the models&lt;/em&gt;&lt;/strong&gt;‚Äù, the classes in the codebase should be designed to handle single responsibility.&lt;/p&gt;

&lt;p&gt;I came across the following posts about how to organise controllers and using service objects in Rails.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="http://jeromedalbert.com/how-dhh-organizes-his-rails-controllers/"&gt;How DHH Organizes His Rails Controllers&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.netguru.co/blog/service-objects-in-rails-will-help"&gt;Service objects in Rails&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-you-write-test-cases-to-test-the-code"&gt;
  &lt;/a&gt;
  3. You write test cases to test the ‚Äúcode‚Äù
&lt;/h2&gt;

&lt;p&gt;I have seen many applications whose CI builds takes ages to finish, &lt;em&gt;What exactly they are testing&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;Your test cases should be testing the ‚Äúcode‚Äù not the machine performance, better test suits&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Share objects between different examples.&lt;/li&gt;
&lt;li&gt;Uses method stubs and avoid the repetitive calls to the methods.&lt;/li&gt;
&lt;li&gt;Don‚Äôt test same code twice, if you have sharable piece of code and used at multiple places then don‚Äôt write test cases in multiple places.&lt;/li&gt;
&lt;li&gt;Does not creates unnecessary test records, unknowingly many developers end up creating unnecessary test records.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If your are using gems like  &lt;a href="https://github.com/stympy/faker"&gt;faker&lt;/a&gt; ,  &lt;a href="https://github.com/thoughtbot/factory_bot_rails"&gt;factory_bot_rails&lt;/a&gt;  and &lt;a href="https://github.com/DatabaseCleaner/database_cleaner"&gt;database_cleaner&lt;/a&gt; to create and clean test records then creating unnecessary records can cost you time and speed.&lt;/p&gt;

&lt;p&gt;Simple example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  create_list(:user, 10)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Much better will be reduce the list size, if you are not doing anything special with 10 users.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  create_list(:user, 2)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-you-keep-production-environment-healthy"&gt;
  &lt;/a&gt;
  4. You keep production environment healthy
&lt;/h2&gt;

&lt;p&gt;If you are an engineer and reduce efforts of others, then you use the utilities of other engineers to reduce your efforts.&lt;/p&gt;

&lt;p&gt;A healthy Rails production environment always have&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://mmonit.com/monit/"&gt;Monit&lt;/a&gt;  ‚Äì Is everything up and running? if not get notified.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.systutorials.com/docs/linux/man/5-logrotate.conf/"&gt;logrotate&lt;/a&gt; ‚Äì rotates, compresses, and mails system logs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://crontab.guru/"&gt;crontabs&lt;/a&gt; with &lt;a href="https://github.com/javan/whenever"&gt;whenever&lt;/a&gt;, schedules work for you.&lt;/li&gt;
&lt;li&gt;Database backup scripts running in maintenance window.&lt;/li&gt;
&lt;li&gt;Exception notifiers like &lt;a href="https://sentry.io/welcome/"&gt;Sentry&lt;/a&gt; or &lt;a href="http://rollbar.com/"&gt;Rollbar&lt;/a&gt; or ‚Äòanything that suits you‚Äô.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-you-follow-basic-git-etiquettes"&gt;
  &lt;/a&gt;
  5. You follow basic git etiquettes
&lt;/h2&gt;

&lt;p&gt;If you are working in a team and using git then you follow the git etiquettes like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Don‚Äôt commit untracked files ‚Äì we often keep git untracked files like &lt;code&gt;something.swp&lt;/code&gt;, &lt;code&gt;backup.sql&lt;/code&gt;, ‚Äòschema.rb&lt;code&gt;or&lt;/code&gt;structure.sql backups&lt;code&gt;,&lt;/code&gt;some.test.script`, you should not commit such files.&lt;/li&gt;
&lt;li&gt;Branch naming ‚Äì naming something is always difficult but you have to do it, the feature branches should have sensible names, don‚Äôt use names like &lt;code&gt;something-wip&lt;/code&gt;, &lt;code&gt;somthing-test&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Delete the feature branches after merge ‚Äì no explanation required.&lt;/li&gt;
&lt;li&gt;Commit messages ‚Äì your commit messages must have &lt;code&gt;Github issue number&lt;/code&gt; or &lt;code&gt;any project management story number/link&lt;/code&gt;,  &lt;code&gt;brief description about feature/task&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#6-you-dont-ignore-readmemd"&gt;
  &lt;/a&gt;
  6. You don‚Äôt ignore README.md
&lt;/h2&gt;

&lt;p&gt;Remember you are not the only one who is going to work on particular application for your lifetime. Someone will takeover you and he should not waste his time in figuring out that how to setup things.&lt;/p&gt;

&lt;p&gt;Your application repository must have updated &lt;code&gt;README.md&lt;/code&gt; with detail steps about setting up an application for the first time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-secrets-are-really-secrets-for-you"&gt;
  &lt;/a&gt;
  7. Secrets are ‚Äúreally‚Äù secrets for you
&lt;/h2&gt;

&lt;p&gt;We often use credentials for database configs, secrets.yml, third party api‚Äôs like AWS, payment gateway, sentry etc.&lt;/p&gt;

&lt;p&gt;You should not commit such credentials/secrets/environment variables to the Github instead you keep them secure with gems like &lt;a href="https://github.com/bkeepers/dotenv"&gt;dotenv-rails&lt;/a&gt;, &lt;a href="https://github.com/laserlemon/figaro"&gt;figaro&lt;/a&gt; or simple dot files that are not committed to the repository.&lt;/p&gt;

&lt;p&gt;A sample file of such credentials should be committed and updated regularly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-you-do-code-reviews-and-discuss-feature-with-team"&gt;
  &lt;/a&gt;
  8. You do code reviews and discuss feature with team
&lt;/h2&gt;

&lt;p&gt;While working in a team you should get your feature reviewed from another team mate or before starting on any feature discuss it with the team thoroughly, advantages of the code reviews or feature discussion are you will come across many scenarios that are not thought of.&lt;/p&gt;

&lt;p&gt;If you are the only one who is working on a application then you must criticise your own code and cover all the scenarios in test cases.   &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-you-are-uptodate-and-keep-updating"&gt;
  &lt;/a&gt;
  9. You are up-to-date and keep updating
&lt;/h2&gt;

&lt;p&gt;In open source community we get frequent updates or releases for ruby, rails and gems, you must keep yourself aware and informed by subscribing to the repositories or mailing lists and update your application libraries.&lt;/p&gt;

&lt;p&gt;Also you should stay alert on security fixes about the production operating system, database so you can take necessary action on time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-need-not-to-say"&gt;
  &lt;/a&gt;
  10. Need not to say‚Ä¶
&lt;/h2&gt;

&lt;p&gt;You write clean and maintainable code and your codebase is&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Properly indented&lt;/li&gt;
&lt;li&gt;Only 80 columns wide&lt;/li&gt;
&lt;li&gt;Maintainable with smaller methods, less complexity ‚Äì To know more on this make a habit of using code analyzer like &lt;a href="https://github.com/bbatsov/rubocop"&gt;rubocop&lt;/a&gt;, &lt;a href="https://codeclimate.com/"&gt;Code Climate&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Codebase follows &lt;a href="https://github.com/bbatsov/ruby-style-guide"&gt;Ruby best practices and style guide&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Well there are many more points that can be included in this list but I feel these are the most important to fill in first into this list, If you find that I have missed anything more important then you can comment on this post.&lt;/p&gt;

&lt;p&gt;Thanks for the reading upto here, hope this will help you to become a ‚ÄòGood‚Äô developer.&lt;/p&gt;

&lt;p&gt;PS: I am moving out of wordpress this is a cross post. &lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
