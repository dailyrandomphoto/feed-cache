<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Tagged Template Literals - The Magic Behind Styled Components</title>
      <author>Dekel</author>
      <pubDate>Sun, 01 Aug 2021 08:11:48 +0000</pubDate>
      <link>https://dev.to/dekel/tagged-template-literals-the-magic-behind-styled-components-2f2c</link>
      <guid>https://dev.to/dekel/tagged-template-literals-the-magic-behind-styled-components-2f2c</guid>
      <description>&lt;h3&gt;
  &lt;a href="#intro-amp-background"&gt;
  &lt;/a&gt;
  Intro &amp;amp; Background
&lt;/h3&gt;

&lt;p&gt;If you have some experience with React, you probably came across &lt;a href="https://styled-components.com/"&gt;styled-components&lt;/a&gt;. In the last few years, the concept of css-in-js became more popular, and there are multiple libraries that are available for us to use. styled-components is one of them, but you can also find &lt;a href="https://emotion.sh/docs/styled"&gt;Emotion&lt;/a&gt;, &lt;a href="https://formidable.com/open-source/radium/"&gt;Radium&lt;/a&gt;, &lt;a href="https://cssinjs.org/"&gt;JSS&lt;/a&gt;, and more. In this post I'm &lt;strong&gt;not going&lt;/strong&gt; to cover the pros and cons of traditional stylesheet files vs. styled-components, and instead - I'm going to focus on tagged template literals - the "magic" that let us use the &lt;code&gt;styled-components&lt;/code&gt; syntax.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#styledcomponent-basics-a-quick-reminder"&gt;
  &lt;/a&gt;
  styled-component basics - a quick reminder
&lt;/h3&gt;

&lt;p&gt;Let's take the following simple syntax for example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
&lt;iframe src="https://codesandbox.io/embed/en9vg"&gt;
&lt;/iframe&gt;
&lt;br&gt;
The &lt;code&gt;StyledDiv&lt;/code&gt; in the example above is actually a React component that returns a &lt;code&gt;div&lt;/code&gt; block with the css of &lt;code&gt;color: red; font-weight: bold;&lt;/code&gt;.&lt;br&gt;
Well... kind of. Actually - it's a bit more complicated than that. The output of the above is a div with specific css class-names having the above css definitions inside:


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;br&gt;
Some of you are probably using this without giving it too much of a thought. If we take a closer look we can see the usage of the backtick (&lt;code&gt;`&lt;/code&gt;) right after the &lt;code&gt;styled.div&lt;/code&gt;.&lt;br&gt;
This syntax in Javascript is called &lt;strong&gt;Tagged Template Literals&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#template-literals"&gt;
  &lt;/a&gt;
  Template Literals
&lt;/h3&gt;

&lt;p&gt;Let's start with &lt;code&gt;Template Literals&lt;/code&gt;, and then move on to the more interesting concept.&lt;br&gt;
In javascript - template literals are strings that can contain expressions within them:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;As you can see from the example above - expressions can be variables, but are not limited to them:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We can use either variable or function inside a template literal, and the value that will be used is basically the string representation of the expression:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Now that we understand the power template literals - it's time to move on to tagged template literals - or just tagged templates.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tagged-templates-whats-the-fuzz"&gt;
  &lt;/a&gt;
  Tagged Templates - Whats the fuzz?
&lt;/h3&gt;

&lt;p&gt;With tagged templates, we have the power to parse the template literal ourselves using our own "home-made" function.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
Note that in the example above - the variable &lt;code&gt;strB&lt;/code&gt; contains the string &lt;code&gt;String A&lt;/code&gt; (and not &lt;code&gt;String B&lt;/code&gt; as you might expect).
&lt;h4&gt;
  &lt;a href="#lets-break-it-down"&gt;
  &lt;/a&gt;
  Let's break it down
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;The function &lt;code&gt;funcA&lt;/code&gt; returns the string &lt;code&gt;String A&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;By using the function &lt;code&gt;funcA&lt;/code&gt; as a tagged template - we completely ignored the string that was sent, and we just return something else.&lt;/li&gt;
&lt;li&gt;We can use it with an empty string, and the output will be the same.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Check it out:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#advanced-features"&gt;
  &lt;/a&gt;
  Advanced features
&lt;/h3&gt;

&lt;p&gt;The function we use in a tagged template can return everything that we want - we are not limited to only return strings:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Building tagged templates have an option to also accept variables that can be used:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The first argument is a special object, which behave as an array and provides access to all the "native strings" in the original string that was passed to the tag-template function (&lt;code&gt;strings[0]&lt;/code&gt;, &lt;code&gt;strings[1]&lt;/code&gt;, &lt;code&gt;strings[2]&lt;/code&gt;), alongside a &lt;code&gt;raw&lt;/code&gt; property, which allows you to access the original raw strings.&lt;/p&gt;

&lt;p&gt;The rest of the arguments are the expressions that we used inside the template literal.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-to-build-lets-start-with-something-basic"&gt;
  &lt;/a&gt;
  Time to build - let's start with something basic
&lt;/h3&gt;

&lt;p&gt;Now that we know a bit more about template literals it's time to move on to some more complex examples.&lt;br&gt;
We already know that template literals don't have to return strings, so how about creating a simple example of a tagged template that returns a react component with the relevant style?&lt;br&gt;
We will start by creating a simple div example to just wrap our text with some styling on it:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The tagged template is the following code:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
The full example is available here:&lt;br&gt;
&lt;iframe src="https://codesandbox.io/embed/oz3oo"&gt;
&lt;/iframe&gt;


&lt;blockquote&gt;
&lt;p&gt;Check out the helper functions (the &lt;code&gt;cssObjFromStr&lt;/code&gt;). we are going to focus on it in the next example.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#using-props-in-the-component"&gt;
  &lt;/a&gt;
  Using props in the component
&lt;/h3&gt;

&lt;p&gt;The basic example gave us a nice intro, but what about the component's props? We use them all the time in React, and losing them is not an option. Moving to the next example, we will add the option to also use props as part of our component that we would like to style:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We will use the &lt;code&gt;onClick&lt;/code&gt; prop on the div element.&lt;br&gt;
The full example is here:&lt;br&gt;
&lt;iframe src="https://codesandbox.io/embed/n6q3q"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-props-in-the-template"&gt;
  &lt;/a&gt;
  Using props in the template
&lt;/h3&gt;

&lt;p&gt;Props are not only relevant to the components, but also to the template itself. We want to use the props of the component inside the template itself - colors, elements behavior, and more.&lt;br&gt;
To do this we will need to pass the props from the &lt;code&gt;&amp;lt;Div...&amp;gt;&lt;/code&gt; to the &lt;code&gt;cssObjFromStr&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;But this is not enough.&lt;br&gt;
Let's assume that we use the &lt;code&gt;&amp;lt;Div&amp;gt;&lt;/code&gt; element with the property &lt;code&gt;textColor="blue"&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The issue we face here is that the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; component (inside the &lt;code&gt;cmp&lt;/code&gt;) will get the &lt;code&gt;textColor&lt;/code&gt; property, which is not a valid property of a &lt;code&gt;div&lt;/code&gt; element.&lt;br&gt;
A specific solution can be to extract the &lt;code&gt;textColor&lt;/code&gt; from the &lt;code&gt;props&lt;/code&gt;, and pass the rest of the properties down to the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Working example can be found here:&lt;br&gt;
&lt;iframe src="https://codesandbox.io/embed/eeeef"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The styled-components solution is a bit more elegant (and much more generic) - all props that start with &lt;code&gt;$&lt;/code&gt; are considered "private props" and will not pass down to the actual jsx component.&lt;br&gt;
We will use the same concept, but in our example, we will use the _ (underscore) to create private props.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Full working example can be found here:&lt;br&gt;
&lt;iframe src="https://codesandbox.io/embed/vjffb"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;


&lt;p&gt;The styled-component library contains much more than that, with the entire built-in HTML tags, wrapped-components, classes and inheritance (instead of inline-style), global themes and more, however styled-components is just an example of how to use the tagged template literals, which is eventually "just" a native javascript feature as of ECMAScript 2015 (also known as ES6).&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

Cover photo by &lt;a href="https://pixabay.com/users/geralt-9301/"&gt;Gerd Altmann @ pixabay&lt;/a&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>⚡ Speed-up your web with Blurhash</title>
      <author>Matej Bačo</author>
      <pubDate>Sun, 01 Aug 2021 08:11:22 +0000</pubDate>
      <link>https://dev.to/meldiron/speed-up-your-web-with-blurhash-3mi8</link>
      <guid>https://dev.to/meldiron/speed-up-your-web-with-blurhash-3mi8</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Alongside this article, I wrote a demo project made with Angular, TailwindCSS and Blurhash. You can check it out on &lt;a href="https://github.com/Meldiron/blurhash-angular-demo"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-is-blurhash"&gt;What is Blurhash?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#preparing-a-project"&gt;Preparing a project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#encoding-an-image"&gt;Encoding an image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#decoding-an-image"&gt;Decoding an image&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Since I started working on e-shops with hundreds of products on the website, I have been looking for strategies to optimise the UX.&lt;/p&gt;

&lt;p&gt;I started by adding &lt;strong&gt;loading animations&lt;/strong&gt;, but seeing the same rolling animation on ten places of a website is &lt;strong&gt;surely&lt;/strong&gt; not the solution:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Db5wj42O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdcjfwip87ge2eqrc9q8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Db5wj42O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdcjfwip87ge2eqrc9q8.gif" alt="CleanShot 2021-07-28 at 10.03.18"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then I found out you can use &lt;strong&gt;skeleton loaders&lt;/strong&gt; to fill empty spaces with nice-looking elements that represent actual data but are blank at the moment. You can see this approach on dev.to:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M-6owqLr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2yo0fmdtqoy0elwety6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M-6owqLr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2yo0fmdtqoy0elwety6.gif" alt="CleanShot 2021-07-28 at 10.04.27"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is all you need for most websites, but sadly, this wasn't enough for me. There was still a few seconds of loading time between when my data was loaded and when the images were rendered. I could already see the name and price of a product, but I didn't have pictures loaded yet. Due to this, whenever a new image got loaded, the content jumped. I tried to solve this by defining the size of an image and showing white space while the image was loading, but that made the website feel really boring.&lt;/p&gt;

&lt;p&gt;Finally, I met &lt;strong&gt;Blurhash&lt;/strong&gt; 🎉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-blurhash"&gt;
  &lt;/a&gt;
  What is Blurhash? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Blurhash is a tool that takes our 500kb image and generates a 30B hash that can be used to generate a blurred version of an image. You can easily store this hash as a text into your database and load it with every other text content such as article title or author name.&lt;/p&gt;

&lt;p&gt;This comes really handy when working with any images because you don't have to be creative about &lt;code&gt;What will I do while images are loading?&lt;/code&gt;. Instead of creating empty space, you simply take Blurhash of an image and show the blurred version while the image is loading.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--09gRKpgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05vw1yiv1t4i6dmthwmi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--09gRKpgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05vw1yiv1t4i6dmthwmi.png" alt="New Project (13)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preparing-a-project"&gt;
  &lt;/a&gt;
  Preparing a project &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;I started by creating an empty Angular project with TailwindCSS and Blurhash library installed.&lt;/p&gt;

&lt;p&gt;First, I defined my array of images. This simulated data that I would receive from an API so I can start working on the blurring algorithm:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Fastest car ever 💪&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://images.unsplash.com/photo-1627392689954-0a4d150687a7?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;amp;ixlib=rb-1.2.1&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=700&amp;amp;q=80&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Let's eat 🍉&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://images.unsplash.com/photo-1627308595127-d9acf19107ce?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;amp;ixlib=rb-1.2.1&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=675&amp;amp;q=80&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Who doesn't love dogs 🐶&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://images.unsplash.com/photo-1627366247844-b4b5df8854d8?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;amp;ixlib=rb-1.2.1&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=634&amp;amp;q=80&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;We love cats too 😻&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://images.unsplash.com/photo-1543852786-1cf6624b9987?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;amp;ixlib=rb-1.2.1&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=634&amp;amp;q=80&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After adding some basic HTML with Angular data binding, I was able to get the images rendered:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vLa7XDqC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufo4v6mq6fve18ybd4gx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vLa7XDqC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufo4v6mq6fve18ybd4gx.png" alt="CleanShot 2021-07-31 at 20.43.18"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To confirm what Blurhash can do in numbers, I decided to write a tiny script that loads the file size of our images and presented it in the HTML:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Calculate original image size&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fileSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;HEAD&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onreadystatechange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DONE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fileSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getResponseHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content-length&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fileSize&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;fileSize&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;originalSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fileSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bp4DGNy---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1nfwp273d7626wnsaqmm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bp4DGNy---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1nfwp273d7626wnsaqmm.png" alt="CleanShot 2021-07-31 at 20.45.32"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looks good to me; let's start using Blurhash! When working with Blurhash, you split the job into two parts: &lt;strong&gt;ENCODE&lt;/strong&gt; and &lt;strong&gt;DECODE&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#encoding-an-image"&gt;
  &lt;/a&gt;
  Encoding an image &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Before using the blur &lt;strong&gt;hash&lt;/strong&gt;, I need to have the &lt;strong&gt;hash&lt;/strong&gt;, right? Encode function of Blurhash library takes an array of pixels with their colour (&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas"&gt;Uint8ClampedArray&lt;/a&gt;) and returns a simple string that represents newly-created hash for our image. To provide the correct input to the function, I need to render our image inside a virtual canvas and extract data about the pixels in the canvas:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;generateBlurhash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imageUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;loadedImageObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HTMLImageElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;crossOrigin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onerror&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;imageUrl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;canvas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;loadedImageObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;loadedImageObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;drawImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loadedImageObject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imageData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;getImageData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;loadedImageObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;loadedImageObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;imageData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Could not render an image.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imageData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;imageData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;imageData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;loadedImageObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;loadedImageObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now I used this function to add &lt;code&gt;hash&lt;/code&gt; attribute to our array of images:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blurhashData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;generateBlurhash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;blurhashData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;blurhashData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;blurhashData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hmm, that wasn't too bad. Few lines of code and the hashing function is ready 💪 When preparing this project, I noticed that hashing is a pretty CPU-heavy method and takes almost 1 second to finish. It is up to you to decide whether you want to use the client's CPU or do the hashing on the server. Anyway, keep in mind, this only needs to be done when uploading an image, so you don't need to worry about extreme load on the backend.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#decoding-an-image"&gt;
  &lt;/a&gt;
  Decoding an image &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Once I had the hash of an image, I needed to do the exact opposite. I needed to convert our string input into image output.&lt;/p&gt;

&lt;p&gt;I started with a simple &lt;code&gt;decode&lt;/code&gt; function provided by Blurhash library. Alongside the image hash, I provided the expected width and height of hashed image:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blurhashPixels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This function returns a loooooooong array in which every four items represents the RGBA (red, green, blue, alpha) value of a pixel. You can imagine this as a 2D definition of our image.&lt;/p&gt;

&lt;p&gt;Although our 2D array od pixels is pretty useless to us, the canvas can easily convert it into an actual image if we tell it the width and height of our 2D array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blurhashCanvas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HTMLCanvasElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HTMLCanvasElement&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`blurhash_canvas_&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;imageLoopIndex&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;blurhashCanvas&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imageData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;createImageData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;imageData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blurhashPixels&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;putImageData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imageData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, I put everything together, hook it to an HTML template and add some delays so I can see what is going on. The result is stunning; check it out!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ckutMTji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ph6dec7woaudfbesh80j.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ckutMTji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ph6dec7woaudfbesh80j.gif" alt="CleanShot 2021-07-28 at 10.29.33"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are lost and unsure how some parts work together, please check out my &lt;a href="https://github.com/Meldiron/blurhash-angular-demo"&gt;Github project&lt;/a&gt; that contains the whole application I built alongside this article. Snippets in the article were taken from the project to quickly showcase the specific logic of Blurhash.&lt;/p&gt;




&lt;p&gt;That's it, for now ✨ If you are interested in cool new technologies, feel free to follow me, and you will be notified whenever a new post is published.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>ux</category>
    </item>
    <item>
      <title>Launched my first product🔥</title>
      <author>Parth Bhardwaj</author>
      <pubDate>Sun, 01 Aug 2021 07:32:05 +0000</pubDate>
      <link>https://dev.to/parth_codes/launched-my-first-product-59g4</link>
      <guid>https://dev.to/parth_codes/launched-my-first-product-59g4</guid>
      <description>&lt;p&gt;I have created my first ever Chrome extension called &lt;strong&gt;Page Pad&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I launched it on &lt;strong&gt;Product Hunt&lt;/strong&gt; few weeks ago and it was featured at &lt;strong&gt;#4&lt;/strong&gt; Product of the day!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pagepad.netlify.app"&gt;&lt;strong&gt;Page Pad&lt;/strong&gt;&lt;/a&gt; is a productivity tool for creating notes on any web page you visit. It allows you to edit and organize notes for a particular web page and also notifies if the user has already created notes for the current web page. Re-visit any web page where notes were created and all your notes will be present as it is from where it was left off!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pDERICRJcf8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;FEATURES:&lt;/p&gt;

&lt;p&gt;📝 Create notes for individual web pages.&lt;br&gt;
🔍 Refer to notes of all web pages of a website at once!&lt;br&gt;
🌟 Rich text editor&lt;br&gt;
✍🏽 Fully editable notes&lt;br&gt;
💾 Autosave feature&lt;br&gt;
⚡️ Works offline&lt;br&gt;
♿️ Keyboard accessible&lt;br&gt;
🌈 Custom themes&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/page-pad-make-quick-notes/igobdfagkcadgcfooegonbbeeggagakn?hl=en&amp;amp;authuser=0"&gt;Download the extension from here&lt;/a&gt; and any review or feedbacks are most welcomed!&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>chromeextension</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Why I Quit My Job at Amazon After 5 Years</title>
      <author>Jameson</author>
      <pubDate>Sun, 01 Aug 2021 06:27:28 +0000</pubDate>
      <link>https://dev.to/jameson/why-i-quit-my-job-at-amazon-after-5-years-3j2j</link>
      <guid>https://dev.to/jameson/why-i-quit-my-job-at-amazon-after-5-years-3j2j</guid>
      <description>&lt;p&gt;Exactly five years ago today, I first started as a Software Engineer at Amazon. Last Thursday, I gave my two weeks notice. Once the deed was done, I hopped on Twitter to announce the news in my typically matter-of-fact way:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--gR60gJFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1350547063365382144/K9N_Tn62_normal.jpg" alt="Jameson profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Jameson
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @softwarejameson
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I just quit my job at Amazon.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      19:49 PM - 29 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1420833860154232835" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1420833860154232835" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1420833860154232835" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;My next step was to go grab a celebratory ice cream. While out, I started getting notifications -- not just the "atta-boy!"s that I'd expected from a handful of my buds, but a &lt;em&gt;lot&lt;/em&gt; of notifications. There was something about that tweet that resonated for people. So far, the tweet has been seen 670,000 times.&lt;/p&gt;

&lt;p&gt;Most of the responses fall into one of two categories:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;"Congratulations!", or&lt;/li&gt;
&lt;li&gt;"But why?"&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'll try to answer that question.&lt;/p&gt;




&lt;p&gt;About a year before I started, the New York Times had run their scathing, now famous article: &lt;a href="https://www.nytimes.com/2015/08/16/technology/inside-amazon-wrestling-big-ideas-in-a-bruising-workplace.html"&gt;Inside Amazon: Wrestling Big Ideas in a Bruising Workplace&lt;/a&gt;. I had read it before I started, and I knew going in that I was in for a challenging experience. But, I was hungry to grow my career. I've never been afraid of hard work. And if work at Amazon got hard - hell, I'd just work harder.&lt;/p&gt;

&lt;p&gt;I joined amidst a death march towards the release of AWS' &lt;a href="https://aws.amazon.com/systems-manager/"&gt;Systems Manager&lt;/a&gt;. While our team of Engineers were working 10+ hour days, our manager slipped off on vacation for a few weeks. I remember his words when he came back: "Okay guys, it's time to really get to work." We just stared.&lt;/p&gt;

&lt;p&gt;But we did ship that service. And it was a &lt;em&gt;rush&lt;/em&gt;. Our work was all over the big tech news sites. Even our CTO Werner Vogels mentioned our work in his keynote address at AWS' annual re:Invent conference.&lt;/p&gt;

&lt;p&gt;Six months in, I realized I was headed down a dead-end road. If I ever wanted to make the coveted role of &lt;em&gt;Senior Engineer&lt;/em&gt;, I'd have to double down on the tech I knew best: mobile. As I began to research internal transfers, a great opportunity presented itself. The Alexa mobile apps didn't actually let you speak with Alexa yet. Yes, they needed someone to build &lt;em&gt;that&lt;/em&gt; feature. I jumped at the opportunity. I moved over to a high floor of Amazon's new "Day 1" Headquarters. It has a breathtaking panoramic view of the Puget Sound.&lt;/p&gt;




&lt;p&gt;Alexa is an enormous group, and operates on the single largest code base I've ever seen. There's precious little documentation, and hostile teams compete across the organization for gold and glory. This &lt;em&gt;was&lt;/em&gt; hard.&lt;/p&gt;

&lt;p&gt;But, I followed my original plan. I just worked harder. Fifty, sixty-hour weeks became the new norm. I always hit my deliverables. I envisioned and lead new initiatives. I made great friends. And yes, eventually, I became a Senior Engineer.&lt;/p&gt;

&lt;p&gt;But after two-and-a-half years, we had already accomplished a lot with that little app. Those long weeks were starting to catch up to me. My girlfriend grew bored of my always-working lifestyle and left. I now spent most days alone. I worked more. I was burning out.&lt;/p&gt;

&lt;p&gt;Eventually I had grown tired of commuting into downtown Seattle, working in the office all day, commuting home, and working at home until bedtime. So I started looking for my next move.&lt;/p&gt;




&lt;p&gt;The AWS Mobile team was hiring remote employees. Even better: they were open source. I remember being &lt;em&gt;excited&lt;/em&gt;. I could move out to Vashon island and finally start enjoying &lt;em&gt;my&lt;/em&gt; life. I'd get to lead the development of a flagship mobile product and I'd be an official, bonafide, open-source &lt;em&gt;dude&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Joining this team turned out to be one of my biggest mistakes to date.&lt;/p&gt;

&lt;p&gt;I knew that the organization had a history of underperforming products: AWS Mobile Hub, Amazon Pinpoint, Amazon Cognito Sync. In my hubris, I assumed that my hard work and leadership could change all of that.&lt;/p&gt;

&lt;p&gt;But there was an unforeseen obstacle. Three old buddies had tight control over the roadmap. They weren't open to input. Despite that I lead the org in contributions of code and code reviews, we didn't see eye-to-eye on direction. I tried to leave amicably, but I couldn't get out soon enough.&lt;/p&gt;

&lt;p&gt;After months of HR paperwork, the three did succeed in printing a really poor rating into Amazon's HR's system. Several other managers called afoul of it. With their support, I never had to do a &lt;em&gt;Performance Improvement Plan (PIP)&lt;/em&gt;, I was never on a &lt;em&gt;"Dev List,"&lt;/em&gt; - none of that. Due to what HR later admitted as "process irregularities," I was able to transfer to another team.&lt;/p&gt;

&lt;p&gt;Around this time, I was told by many: "yea, it isn't fair, but there's nothing that can be done about it." It was around this time that I lost my last bits of respect for the company.&lt;/p&gt;




&lt;p&gt;I spent the next four months working on a much better team in Amazon Go. This team had lots of other senior people that I could learn from. They were highly-educated professionals with many years of experience and great accomplishments at the company. The work-life-balance was much, much better.&lt;/p&gt;

&lt;p&gt;But still, every day -- every night, I thought about the injustice I'd seen. I thought about how &lt;em&gt;I&lt;/em&gt; had been treated at Amazon, after all my efforts. About how whimsical the Leadership Principles truly can be at times. I realized that justice would never arrive.&lt;/p&gt;

&lt;p&gt;My mind wandered to think of justice for &lt;em&gt;other&lt;/em&gt; people that Amazon touched -- people less privileged than I. Single mothers working in our warehouses to survive. Our immigrant workers who would be deported from the US if Amazon changed its fancy for them. The voice that these people could not have, that I could have.&lt;/p&gt;




&lt;p&gt;I am no mural purist. These were topics I successfully rationalized away over the years. For years, I had been in a moral holding pattern that enabled my own self fulfillment.&lt;/p&gt;

&lt;p&gt;"Is it okay that the warehouse workers have to pee in bottles?" Any decent person can tell you that it isn't. But, the CEO of our consumer business is awfully touchy about it.&lt;/p&gt;

&lt;p&gt;A number of times he's taken to Twitter to attack my favorite politician, unapologetic to the conditions of our workers who make peanuts against his multi-millions.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--H-KPox14--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1336773906128986112/nazCwPrP_normal.jpg" alt="Dave Clark profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Dave Clark
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @davehclark
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      1/3 I welcome &lt;a href="https://twitter.com/SenSanders"&gt;@SenSanders&lt;/a&gt; to Birmingham and appreciate his push for a progressive workplace. I often say we are the Bernie Sanders of employers, but that’s not quite right because we actually deliver a progressive workplace &lt;br&gt;&lt;a href="https://t.co/Fq8D6vyuh9"&gt;businessinsider.com/bernie-sanders…&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:38 PM - 24 Mar 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1374853182484963332" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1374853182484963332" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1374853182484963332" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Amazon went on to bust the unionization effort at Bessemer, Alabama. It was a cause that I had deeply wanted to see succeed. It was a dark day for America's working class when it did not.&lt;/p&gt;

&lt;p&gt;When I'd speak with my mother and father about these things, I could tell they were ashamed that I worked for Amazon. And I did feel ashamed, myself. They had invested a lot in me, and hoped that I'd be a real leader. And &lt;em&gt;this&lt;/em&gt; was the man they got for it? No.&lt;/p&gt;




&lt;p&gt;The final icing on the cake came when I got the talk about Amazon's "office-centric culture," and expectations around returning to Seattle.&lt;/p&gt;

&lt;p&gt;At first I was open to the idea of coming back to Seattle. But as I looked around at what Amazon had made of it, I realized I couldn't afford to live there anymore. And maybe I would never be able to live there as a working class person.&lt;/p&gt;

&lt;p&gt;I pushed back, and was told my comp would go down.&lt;/p&gt;




&lt;p&gt;As Jeff Bezos took a frivolous journey to space, Eastern Washington was in flames from climate change. The streets of Seattle are ever-more filled with homelessness as Jeff sits on a fat stack of $200,000,000,000.00 dollars. Where is the call to justice for Washington's burning land? And for the poor and working class people of our state? When will &lt;em&gt;they&lt;/em&gt; have a trip to space?&lt;/p&gt;

&lt;p&gt;And, of course: &lt;em&gt;what about me?&lt;/em&gt; When would &lt;em&gt;I&lt;/em&gt; ever be able to afford a small house within 30 minutes of work? I, who had worked so many 50-60 hour weeks? After so many years working: what had been the point of all that?&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Leadership&lt;/em&gt; and &lt;em&gt;principle&lt;/em&gt; are about standing up for the weakest members of our society. They are about standing up for your own employees. They require that we accept every person on earth to have the same inherent worth and dignity as Dave Clark and Jeff Bezos.&lt;/p&gt;

&lt;p&gt;Leadership and Principle mean leaving Amazon.&lt;/p&gt;

</description>
      <category>amazon</category>
      <category>seattle</category>
      <category>aws</category>
    </item>
    <item>
      <title>Cryptocurrency Regulations in Russia</title>
      <author>hoseinmoa</author>
      <pubDate>Sun, 01 Aug 2021 06:24:57 +0000</pubDate>
      <link>https://dev.to/hoseinmoa/cryptocurrency-regulations-in-russia-5eap</link>
      <guid>https://dev.to/hoseinmoa/cryptocurrency-regulations-in-russia-5eap</guid>
      <description>&lt;p&gt;General rules in Russia The Russian government has not taken a firm stand on digital currencies. Even Russian politicians have issued statements imposing a total ban on these currencies, which were later denied. On March 7, 2018, Russian President Vladimir Putin called to clarify the legal status of digital currencies in the country as soon as possible. Following this order, the bill was introduced and drafted by the government. However, its acceptance has not been officially announced yet. The bill welcomes the sale and purchase of digital currency in reputable exchange offices. It considers digital currency tools as digital financial assets traded only in the context of authorized exchange offices. Also, according to the bill, users of digital currency exchanges are required to comply with anti-money laundering laws and regulations related to counterterrorism. The purpose of the published document was to minimize the risks in digital currencies and prevent using these currencies as much as possible for criminal activities.&lt;br&gt;
 In 2017, several rumours about developing a national digital currency in Russia called "crypto ruble." Still, the Russian authorities later denied it, and the country currently has no official digital currency.&lt;br&gt;
On May 24, 2018, the Savings Bank of the Russian Federation (Sberbank) and the Central Bank of Russia announced their plans to implement a pilot ICO. On November 2, 2018, the chairman of the Russian State Committee on Financial Markets announced that it intends to launch a state-owned digital currency backed by the Russian ruble. Russia's Ministry of Economic (MinFin) believes that creating a digital currency backed by the Eurasian Economic Union (EAEU) will be inevitable due to US sanctions. One of the major Russian news media outlets, Rambler, reflected the views of the Russian Ministry of Economy on December 21, 2018. Russia's Deputy Economy Minister Alexei Moysev said that at the discretion of the Russian Ministry of Economy, there is an excellent opportunity by 2020 or 2021 to launch a digital currency supported by the Eurasian Economic Union (EAEU). The Eurasian Union was founded in 2014 and had five members: Belarus, Kazakhstan, Russia, Armenia and Kyrgyzstan. In Russia, the extraction of digital currencies is not prohibited under certain conditions.&lt;/p&gt;

&lt;p&gt;## The timing of digital currency legislation in Russia&lt;br&gt;
 In 2017 has prompted a flurry of news about the development of a national digital currency in Russia called the crypto-ruble but was later denied by Russian officials, who currently have no official digital currency. On March 7, 2018, Russian President Vladimir Putin called to clarify the legal status of digital currencies in the country as soon as possible. Following this order, the bill was introduced and drafted by the government. However, its acceptance has not been officially announced yet. On May 24, 2018, the Savings Bank of the Russian Federation (Sberbank) and the Central Bank of Russia announced their plans to implement a pilot ICO. On November 2, 2018, the chairman of the Russian State Committee on Financial Markets announced that it intends to launch a state-owned digital currency backed by the Russian ruble. On December 21, 2018, Russian Deputy Minister of Economy Alexei Movisyev stated that at the discretion of the Russian Ministry of Economy, there is an excellent opportunity by 2020 or 2021 to launch a digital currency supported by the Eurasian Economic Union (EAEU).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XCJdEgwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rpfkyjs1lr2wf1mdscv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XCJdEgwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rpfkyjs1lr2wf1mdscv.jpg" alt="crypto regulation in russia"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#definition-and-approach-of-the-government"&gt;
  &lt;/a&gt;
  Definition and approach of the government
&lt;/h2&gt;

&lt;p&gt;Russia is one of the countries with no clear and direct rules on digital currencies and their use. However, Chinese officials have repeatedly spoken of the need to use the Chinese bloc and even the supply of particular currency by the Chinese government. There are no unified rules for the Chinese bloc. The decision-making body in the field of financial systems in Russia is the Ministry of Economy. For several years now, the attention of this authority has been drawn to digital currencies, but so far, no serious decision has been made to legislate these currencies in Russia. Russia's central bank has warned of the dangers of digital currency exchanges and their links to fraud and money laundering. Many draft bills have also been prepared by the Duma, which is still awaiting approval. Therefore, it can be said that there is not much transparency in the legal aspects of digital currencies in Russia. The Russian government refers to digital currencies as "digital currencies" and is seriously pursuing legislation in ICOs, tokens, blockchain, and digital currencies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sales-rules"&gt;
  &lt;/a&gt;
  Sales rules
&lt;/h2&gt;

&lt;p&gt;Under Russian law, digital assets can only be exchanged for common currencies (rubles or other countries' currencies). To supply the tokens, the distributor must submit the necessary forms to the judicial authorities; Relevant documents must also be made available to the public upon completion of the tokens. The project's WhitePaper will also be made available to the public and legislators for review.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tax-collection"&gt;
  &lt;/a&gt;
  Tax collection
&lt;/h2&gt;

&lt;p&gt;There are no specific laws regarding the taxation of digital currencies in Russia, but the Russian government applies general tax laws. The tax will also be based on the value of digital currencies in Russian rubles and include income tax. The payer is also required to submit a statement of income to the relevant authorities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MFd56E6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jznim5owuftcfirk89fs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MFd56E6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jznim5owuftcfirk89fs.jpg" alt="cryptocurrency tax legislation in russia"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#antimoney-laundering-laws"&gt;
  &lt;/a&gt;
  Anti-money laundering laws
&lt;/h2&gt;

&lt;p&gt;The Russian government has previously warned its citizens against using digital currencies in money laundering. However, there are no laws for money laundering with digital currencies in this country.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-and-advertisement"&gt;
  &lt;/a&gt;
  Use and advertisement
&lt;/h2&gt;

&lt;p&gt;So far, we have seen several pilot programs by the Russian government in digital currencies and the development of blockchain technology in China. On the other hand, the government is closely monitoring the digital currency market. In 2015, we witnessed creating a particular working group by the Russian government to study China's blockchain technology aspects. In 2016, Qiwi, an electronic payment service provider, CIS and several private banks in Russia, worked with Chinese central banks on Chinese blockchain projects. Also, in 2017, the President of Russia ordered the government and the Central Bank of Russia, by creating the necessary legal mechanism and framework, to create space for the use of economic innovations based on the Chinese bloc. Plans have been put forward to apply China Blockchain technology in real estate, verification information and payment data.&lt;br&gt;
Maintain and obtain the necessary permits&lt;br&gt;
The draft bill submitted to the Russian parliament sets out specific rules for holding digital currencies. According to the bill, the maintenance of digital currencies is not limited and is based on user access to capital. Accordingly, a decentralized system must meet the following conditions: a) Verify that the individual and only the individual can access specific codes or assets. B) Make it possible for a person to access his information at any time and place. The bill also included a section entitled "Investment Platform." This section states An information system in the context of the Internet that uses information technology and technical capabilities to attract investors. Only institutions under the supervision of the Central Bank of Russia can create such platforms. This law restricts investors who have not obtained the necessary approvals; These restrictions are enacted under the Securities Act. The determining body will be in the competence of investors of the Central Bank of Russia.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mining"&gt;
  &lt;/a&gt;
  Mining
&lt;/h2&gt;

&lt;p&gt;Mining is referred to in the draft law as "ex-digital verification." According to this law, an extraction is an act in which records are digitally verified to obtain digital currencies as a reward. This digital verification must be following the rules of digital transactions. Mining activities will also include tax collection.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overseas-restrictions"&gt;
  &lt;/a&gt;
  Overseas restrictions
&lt;/h2&gt;

&lt;p&gt;There are currently no such restrictions in Russia.&lt;br&gt;
The need for reporting&lt;br&gt;
There is currently no need to report digital currency assets in Russia. Asset reporting laws are in place to combat money laundering and are based on money laundering laws. Still, it is not yet clear whether digital currencies are recognized as assets by the government.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>MongoDB aggregations are easy</title>
      <author>Omar Ahmed</author>
      <pubDate>Sun, 01 Aug 2021 06:01:15 +0000</pubDate>
      <link>https://dev.to/mrgeek/mongodb-aggregations-are-easy-1coo</link>
      <guid>https://dev.to/mrgeek/mongodb-aggregations-are-easy-1coo</guid>
      <description>&lt;p&gt;Building aggregation pipelines sometimes just seems so hard, especially when you're working with NoSQL database such as MongoDB, since there is no defined schema, and there are just so many nested fields&lt;/p&gt;

&lt;p&gt;Well in this article i'm not going to go deep into what aggregation query is, since i think  &lt;a href="https://docs.mongodb.com/manual/core/aggregation-pipeline/"&gt;MongoDB Docs&lt;/a&gt;  explained this perfectly, but instead i will go through a kind of seeming-complex aggregation query, which is you probably going to face if you're currently with MongoDB and i will use this example here to just show you how aggregation pipelines are just logically easy, and it's always depends on how you think while building it&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-example"&gt;
  &lt;/a&gt;
  The example
&lt;/h2&gt;

&lt;p&gt;Well for the sake of our example, let's consider that you have this silly &lt;code&gt;products&lt;/code&gt; collection which has these 2 documents:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "_id": {
    "$oid": "55c30ff62cfa09af198b465a"
  },
  "name": "Awesome Tshirt",
  "currency": "usd",
  "one_size": "xl",
  "variants": [
    {
      "type": "color",
      "base_sku": 132145,
      "items": [
        {
          "color": "Grey Melange",
          "price": 80,
          "sku": 1243252369
        },
        {
          "color": "Bottle Green",
          "price": 90,
          "sku": 1243252368
        },
        {
          "color": "Deep Charcoal Grey",
          "price": 80,
          "sku": 1243252376
        },
        {
          "color": "White",
          "price": 80,
          "sku": 1243252363
        },
        {
          "color": "Black",
          "price": 80,
          "sku": 1243252362
        }
      ]
    }
  ]
},
{
  "_id": {
    "$oid": "55c30ff62cfa09af198b465c"
  },
  "name": "Hacker Tshirt",
  "currency": "usd",
  "one_size": false,
  "variants": [
    {
      "type": "color",
      "base_sku": 132155,
      "items": [
        {
          "color": "Black",
          "price": 100,
          "sku": 87987963
        }
      ]
    },
    {
      "type": "size",
      "base_sku": 342434,
      "items": [
        {
          "size": "sm",
          "price": 100,
          "sku": 97896796
        },
        {
          "size": "xl",
          "price": 100,
          "sku": 43534534
        },
        {
          "size": "xxl",
          "price": 100,
          "sku": 76576532
        }
      ]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and now our goal is to get the price of all grey T-shirts, so since as you can see that each product has it's price vary based on the variant itself, so we have to get both from variants items &lt;code&gt;item&lt;/code&gt; object. Yes in this collection its so silly that somehow you have to choose of either having black T-shirt or XXl tshirt, but not both :D&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stage-1"&gt;
  &lt;/a&gt;
  Stage #1
&lt;/h2&gt;

&lt;p&gt;The very first step when you create a pipeline is to always &lt;code&gt;match&lt;/code&gt; your query, this to narrow down querying the whole collection to just a limited number of documents that match your criteria&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You always want to narrow down the number of documents you're searching within at the very beginning of the aggregation pipeline, this will lead to faster queries&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So let's do this, first we want to use only the documents that has &lt;code&gt;color&lt;/code&gt; variant, and it has also grey color inside it's variant items. So this is how we're translating this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    {
        '$match': {
            'variants': {
                '$elemMatch': {
                    'type': 'color', 
                    'items': {
                        '$elemMatch': {
                            'color': /grey/i
                        }
                    }
                }
            }
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://docs.mongodb.com/manual/reference/operator/query/elemMatch/"&gt;$elemMatch&lt;/a&gt; operator matches documents that contain an array field with at least one element that matches all the specified query criteria.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We're using $elemMatch here to find a variant of &lt;code&gt;type&lt;/code&gt; &lt;strong&gt;color&lt;/strong&gt; first, and then we're using it again to find an element of color that contains &lt;strong&gt;grey&lt;/strong&gt; and its case insensitive - notice the regex &lt;code&gt;/grey/i&lt;/code&gt; - &lt;/p&gt;

&lt;p&gt;So this was our first step, notice that only 1 item will be returned in this case that has ID &lt;code&gt;55c30ff62cfa09af198b465a&lt;/code&gt;, since it is the only one with variants of type color that has grey color&lt;/p&gt;

&lt;p&gt;Document &lt;code&gt;55c30ff62cfa09af198b465c&lt;/code&gt; it has variants of type color, but it has only black color&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stage-2"&gt;
  &lt;/a&gt;
  Stage #2
&lt;/h2&gt;

&lt;p&gt;Now we still need to query a nested object that is inside variants &lt;em&gt;(array)&lt;/em&gt; and also inside items &lt;em&gt;(array)&lt;/em&gt;, so its more like this &lt;code&gt;variants -&amp;gt; items -&amp;gt; {color, price}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This seems complicated, and since we're dealing with array of objects here, what could make it easier? .. to just deal with this array as an object instead, so we can just leverage the dot notation syntax in Mongo&lt;/p&gt;

&lt;p&gt;Well we can do that by just unwinding the array! simple as that, just flatten this array into objects by using &lt;code&gt;$unwind&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://docs.mongodb.com/manual/reference/operator/aggregation/unwind/"&gt;$unwind&lt;/a&gt; Deconstructs an array field from the input documents to output a document for each element&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;$unwind is so simple that the only required parameter to pass is &lt;code&gt;path&lt;/code&gt; which is the path of the array you want to flatten&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  {
    '$unwind': {
      'path': '$variants'
    }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice the dollar sign before &lt;code&gt;variants&lt;/code&gt;, we have to prefix the field name with it so Mongo can interpret it, it just tells Mongo to inject the actual value of &lt;code&gt;variants&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now by then we will have also 1 document still, since &lt;code&gt;variants&lt;/code&gt; array has only 1 element&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2YZHHNJt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wsi9okmw3je79gsi6f0z.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2YZHHNJt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wsi9okmw3je79gsi6f0z.jpeg" alt="Stage #2 output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice that &lt;code&gt;variants&lt;/code&gt; is now object instead of array&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stage-3"&gt;
  &lt;/a&gt;
  Stage #3
&lt;/h2&gt;

&lt;p&gt;Now what? we still need to query &lt;code&gt;variants.items&lt;/code&gt; elements which is the same case as variants before we unwind it. So i guess we will have to flatten &lt;code&gt;variants.items&lt;/code&gt; too, so next stage will be&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  {
    '$unwind': {
      'path': '$variants.items'
    }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice now that we can easily access &lt;code&gt;items&lt;/code&gt; with dot notation, since &lt;code&gt;variants&lt;/code&gt; is an object and not an array anymore, now these are the the new documents returned after this stage&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wKvWs684--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0o7lngz0t9p7plbeg55c.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wKvWs684--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0o7lngz0t9p7plbeg55c.jpeg" alt="Stage #3 output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;items&lt;/code&gt; is an object now with 1 document per &lt;code&gt;items&lt;/code&gt; element which is exactly what we need, but did you notice something strange?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stage-4"&gt;
  &lt;/a&gt;
  Stage #4
&lt;/h2&gt;

&lt;p&gt;Now we have documents with &lt;code&gt;items.color&lt;/code&gt; value that does not contains &lt;code&gt;grey&lt;/code&gt; we have Black, White, and Bottle Green as well, why is that?&lt;/p&gt;

&lt;p&gt;Well that would be because our first &lt;code&gt;$match&lt;/code&gt; stage was  only getting the documents that have items with grey color, having this does not necessary means that it will magically just filter other colors from &lt;code&gt;items&lt;/code&gt;, this our job to do now&lt;/p&gt;

&lt;p&gt;So now we will need to get only the documents that has &lt;code&gt;variants.items.color&lt;/code&gt; with greyish color, looks like another &lt;code&gt;$match&lt;/code&gt; query, right?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  {
    '$match': {
    'variants.type': 'color', 
    'variants.items.color': /grey/i
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is so simple now, here we're just saying, out of the result of stage 3 we just want the documents which has variants of type &lt;code&gt;color&lt;/code&gt; and any item that has &lt;code&gt;grey&lt;/code&gt; with case insensitive, that will return us these documents:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pcQZEO6b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bbf1xrqfihu8f1ic5vxv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pcQZEO6b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bbf1xrqfihu8f1ic5vxv.jpeg" alt="Stage #4 output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stage-5"&gt;
  &lt;/a&gt;
  Stage #5
&lt;/h2&gt;

&lt;p&gt;Now we have the documents, but we don't really care about all of these properties right? We only care about the color and the price&lt;/p&gt;

&lt;p&gt;So since we're having a couple levels of nesting here &lt;code&gt;variants -&amp;gt; items&lt;/code&gt; and we only care about &lt;code&gt;price&lt;/code&gt; and &lt;code&gt;color&lt;/code&gt; properties, then we need to focus/project these properties only and ignore any other stuff we don't need&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://docs.mongodb.com/manual/reference/operator/aggregation/project/"&gt;$project&lt;/a&gt; Passes along the documents with the requested fields to the next stage in the pipeline.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;$project is so simple also, you'll probably just need to know that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It takes field name as a key and 1 or 0 as value (1 to show, 0 to hide)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;_id&lt;/code&gt; is shown by default, unless you specify to hide it&lt;/li&gt;
&lt;li&gt;You have to specify at least 1 output field&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So our stage implementation will be simple as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  {
    '_id': 0,
    'color': '$variants.items.color',
    'price': '$variants.items.price'
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we passed &lt;code&gt;'_id': 0&lt;/code&gt; because we don't really care about the document ID - at least not in this example, normally you'll need it though - so we just hid it&lt;/p&gt;

&lt;p&gt;So now this will be the final result&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pIy-UHPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3eb5jdo9bae39xaio4xg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pIy-UHPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3eb5jdo9bae39xaio4xg.jpeg" alt="Stage #5 output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-aggregation-query"&gt;
  &lt;/a&gt;
  The aggregation query
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;db.getCollection('products').aggregate([
  {
    '$match': {
      'variants': {
        '$elemMatch': {
          'type': 'color', 
          'items': {
            '$elemMatch': {
              'color': new RegExp('grey', 'i')
            }
          }
        }
      }
    }
  },
  {
    '$unwind': {
      'path': '$variants'
    }
  },
  {
    '$unwind': {
      'path': '$variants.items'
    }
  },
  {
    '$match': {
      'variants.type': 'color', 
      'variants.items.color': new RegExp('grey', 'i')
    }
  },
  {
    $project:  {
      '_id': 0,
      'color': '$variants.items.color',
      'price': '$variants.items.price'
    }
  }
])
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final words
&lt;/h2&gt;

&lt;p&gt;As you can see it's pretty straight forward, and it's quite easy and seems quite logical too, building aggregation pipelines stages is just like actually talking to rubber duck while coding, instead this time you're just talking to Mongo shell &lt;/p&gt;

&lt;p&gt;This post was originally published on my blog &lt;a href="https://blog.mrg.sh/mongodb-aggregations-are-easy"&gt;blog.mrg.sh&lt;/a&gt;&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>node</category>
      <category>javascript</category>
      <category>database</category>
    </item>
    <item>
      <title>3 general 🚀 Productivity 🚀 tools  you should be using that you possibly haven't heard of ⁉</title>
      <author>InHuOfficial</author>
      <pubDate>Sun, 01 Aug 2021 05:29:58 +0000</pubDate>
      <link>https://dev.to/inhuofficial/3-general-productivity-tools-you-should-be-using-that-you-possibly-haven-t-heard-of-1h9j</link>
      <guid>https://dev.to/inhuofficial/3-general-productivity-tools-you-should-be-using-that-you-possibly-haven-t-heard-of-1h9j</guid>
      <description>&lt;p&gt;3 pieces of software &lt;strong&gt;that I use&lt;/strong&gt; that I am sure a lot of people haven't heard of, but should start using. If you have heard of them, do you use any (all) of them and how do you use them?&lt;/p&gt;

&lt;p&gt;Oh and this isn't a tutorial post on how to use them, just what they are and how they benefit me. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-cold-turkey"&gt;
  &lt;/a&gt;
  1. Cold Turkey.
&lt;/h2&gt;

&lt;p&gt;It blocks stuff. But not just websites, it blocks &lt;strong&gt;everything&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;But it does it on a schedule (so you can set block times for certain apps at one time, other apps at another time etc. and still enjoy the odd YouTube rabbit hole or 4 hours reading DEV articles in designated down time!)&lt;/p&gt;

&lt;p&gt;It will block websites, applications...and your computer...seriously!&lt;/p&gt;

&lt;p&gt;I use it to block certain sites during the day that I know will distract me...boring, loads of people do that!&lt;/p&gt;

&lt;p&gt;I also use it to block Outlook. Yes I only check my emails 3 times a day. &lt;/p&gt;

&lt;p&gt;No pinging every 5 minutes distracting me, just 3 times where I tackle stuff that needs doing. &lt;/p&gt;

&lt;p&gt;I know you are thinking this isn't possible due to X, Y and Z...trust me you can persuade people that email is not live chat! &lt;/p&gt;

&lt;p&gt;It has not caused me any issues in the 3 years I have done it. Cold Turkey stops me going back to the ping ping ping days!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-best-bit"&gt;
  &lt;/a&gt;
  The best bit
&lt;/h3&gt;

&lt;p&gt;But best of all, I use Cold Turkey to block my computer. &lt;/p&gt;

&lt;p&gt;It has a mode called "Frozen Turkey" that lets you lock yourself out of your computer at certain times of the day. &lt;/p&gt;

&lt;p&gt;Fair warning, if you get this wrong it can really cause headaches! However when you get it right it can be so good for sticking to a routine.&lt;/p&gt;

&lt;p&gt;For example, I wanted to make sure I eat at certain times of the day. So I just lock my computer for 15 minutes each time. &lt;/p&gt;

&lt;p&gt;Obviously I have to be careful that I don't schedule meetings that might run into these times (as you can imagine that would be unprofessional) but I have also become very good at saying no to meetings that don't fit my diary.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#managing-work-life-balance"&gt;
  &lt;/a&gt;
  Managing work life balance
&lt;/h3&gt;

&lt;p&gt;I also lock my PC at night when I need to. Sometimes I get into bad habits where I am working at 1am due to deadlines. &lt;/p&gt;

&lt;p&gt;It doesn't work as you then end up producing less the next day anyway (meaning you have to work to 1am again and the cycle continues...).&lt;/p&gt;

&lt;p&gt;When this happens I set a block up for the week, computer off at 10pm, can't access it until 530am. That way I ensure I have at least 7 hours where I CANNOT work...so I might as well sleep!&lt;/p&gt;

&lt;p&gt;It is a feature to be used with caution...I did once lock the computer for a day by mistake and had to spend an hour fiddling to undo the lock so I could work. &lt;/p&gt;

&lt;p&gt;But bar that one slip up (which you learn from!) it has been fine.&lt;/p&gt;

&lt;p&gt;Anyway - you should check it out &lt;a href="https://getcoldturkey.com/"&gt;https://getcoldturkey.com/&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Price:&lt;/strong&gt; £29.00 (GBP) now (lifetime usage), not sure whether that price changes based on Country but that is about $40 (USD). &lt;strong&gt;Worth every penny!&lt;/strong&gt; (Mac and Windows)&lt;/p&gt;

&lt;p&gt;They also offer "micro manager" - which does the same except you whitelist applications for a while and everything else gets blocked - so you can have focus sprints.&lt;/p&gt;

&lt;p&gt;They also offer "Writer" which blocks everything on your computer, blacks out all the screens (if you have more than one) and provides you with a very simple screen to write on. Oh and this one blocks you for an amount of time &lt;strong&gt;or&lt;/strong&gt; an amount of words. &lt;/p&gt;

&lt;p&gt;I don't tend to use the micro manager as I have my block list set pretty well but the writer occasionally gets used if I want to just &lt;a href="https://en.wikipedia.org/wiki/Free_writing"&gt;free-write&lt;/a&gt; to clear my head / work on an idea. &lt;/p&gt;

&lt;p&gt;Yet again, if I need to focus on writing something I have a different block list for Cold Turkey so I don't need the writer very often.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-rescue-time"&gt;
  &lt;/a&gt;
  2. Rescue Time
&lt;/h2&gt;

&lt;p&gt;There are loads of time tracking applications, this one works best for me.&lt;/p&gt;

&lt;p&gt;Why? Because it tracks things automatically and with a little bit of work it can provide some really interesting insights.&lt;/p&gt;

&lt;p&gt;They have a free version...don't bother there are better alternatives. The paid version...that is where the magic is.&lt;/p&gt;

&lt;p&gt;The difference is subtle, the free version tracks what applications you are using and when, the paid version tracks the applications and &lt;strong&gt;which document you are working on / using&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;With a little bit of manipulation and effort you can use it to tell you exactly how long you have spent on each project each day (they also have project tracking built in but it was a bit simplistic for my liking, it might work for you though!).&lt;/p&gt;

&lt;p&gt;It also lets you categorise time with fine detail. For example visiting dev.to and any page is considered leisure time (the way I have it set up). But if I am on dev.to/new or the URL ends in /edit I mark it as writing time (productive).&lt;/p&gt;

&lt;p&gt;They also added slack integration so you can update your status to show what you are working on automatically (don't worry it wont tell people when you are procrastinating and looking at non work stuff!).&lt;/p&gt;

&lt;p&gt;It is $78 (USD) for a year or $12 (USD) a month...save up and buy the year as it costs almost half as much that way!&lt;/p&gt;

&lt;p&gt;Go check it out as well - &lt;a href="https://www.rescuetime.com/why_premium"&gt;https://www.rescuetime.com/why_premium&lt;/a&gt; &lt;br&gt;
(works on everything, Linux, Mac, Windows, Android, iOS!)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-powertoys"&gt;
  &lt;/a&gt;
  3. PowerToys
&lt;/h2&gt;

&lt;p&gt;Yes I know...it sounds like a website for  industrial strength vibrators (just me? 🤣).&lt;/p&gt;

&lt;p&gt;But despite the unfortunate name it is a great piece of kit (for Windows).&lt;/p&gt;

&lt;p&gt;It is a set of utilities that Windows should really just ship with.&lt;/p&gt;

&lt;p&gt;You get a few features but the ones I use are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Colour picker&lt;/strong&gt; - Windows + Shift + C - A colour picker that works across everything and copies the result to the keyboard. It also shows you the current colour under the cursor as you move around as hex and RGB values.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Power Toys Run&lt;/strong&gt; - kind of like Mac Spotlight but worse, it lets you quickly access applications, documents etc. with Alt + Space. I use it occasionally but I find it too slow, your mileage may vary.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved file explorer previews&lt;/strong&gt; - preview SVGs and markdown - handy!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fancy Zones&lt;/strong&gt; - ✔ &lt;em&gt;This&lt;/em&gt; is why this is worth downloading. I have 6 screens and 2 of them are massive (not flexing, just to show how hard it is to manage monitors). &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0dv-wSeC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alduc45jcozk6wwid5h1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0dv-wSeC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alduc45jcozk6wwid5h1.jpg" alt="Home office - one 43 inch monitor horizontal as main, one 43 inch monitor in portrait at the side, two 21 inch monitors above main, 1 21 inch monitor to the left and a laptop to the right of everything. Microphone on moveable arm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I like to arrange my Windows in certain ways that you just can't do without patience on Windows (such as add 3 applications split horizontally one on top of the other on the right hand screen for monitoring applications etc.)! &lt;/p&gt;

&lt;p&gt;Fancy zones lets you add zones to your screens where you can drag and drop a window and they will fill that zone. &lt;/p&gt;

&lt;p&gt;Technically you can make a window fit into two zones or even 4 zones that are next to each other if you set the zones up correctly. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u-ZAz1fs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhjmsg2otaauy8uafnn9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u-ZAz1fs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhjmsg2otaauy8uafnn9.jpg" alt="fancy zones layout on my main monitor"&gt;&lt;/a&gt;My main monitor "fancy zones" layout. Where 4 zones intersect you can make an application fill all 4 zones&lt;/p&gt;

&lt;p&gt;The joy of just pressing Shift when dragging a window and having it take up exactly a third of the screen vertically, or a third horizontally etc. cannot be over stated.&lt;/p&gt;

&lt;p&gt;This one is free so even if you can't afford the other two right now you should definitely get this one if you have more than one screen or like to set your application layout a certain way (and use Windows)!&lt;/p&gt;

&lt;p&gt;Get it here -&amp;gt; &lt;a href="https://docs.microsoft.com/en-us/windows/powertoys/"&gt;https://docs.microsoft.com/en-us/windows/powertoys/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;I just wanted to share 3 applications I thought were useful you may not have heard of. &lt;/p&gt;

&lt;p&gt;Let me know if you end up using any of them (or already use them and how they help you) in the comments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#little-note-to-people-who-read-my-stuff"&gt;
  &lt;/a&gt;
  Little note to people who read my stuff
&lt;/h2&gt;

&lt;p&gt;If you are wondering why I would follow up on my 16,500 word monster post with something so simple and "low effort"...it is a little experiment...more on that in a bit 🤐!&lt;/p&gt;

&lt;p&gt;In case you missed that one and have an hour to kill:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/101-digital-accessibility-tips-and-tricks-4728" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;101 Digital Accessibility tips and tricks&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ Jul 30 ・ 68 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
  

</description>
      <category>productivity</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Learning Python Course- yearning for suggestions</title>
      <author>Aatmaj</author>
      <pubDate>Sun, 01 Aug 2021 05:16:30 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-course-yearning-for-suggestions-l35</link>
      <guid>https://dev.to/aatmaj/learning-python-course-yearning-for-suggestions-l35</guid>
      <description>&lt;p&gt;Hi guys, we have just completed the basic module of the &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python"&gt;Learning Python Course&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So in case you missed it out, [here]Put-link) is a short summary of the module.&lt;/p&gt;




&lt;p&gt;This post is made for discussions of any comments or doubts related to this course. &lt;/p&gt;

&lt;p&gt;I urge all to comment below👇 for any suggestions which I can incorporate in the next 👍 module.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>python</category>
      <category>tutorial</category>
      <category>learningpython</category>
    </item>
    <item>
      <title>🤩10 Websites to get free Developer Swags doing NOTHING</title>
      <author>coderwatchHQ</author>
      <pubDate>Sun, 01 Aug 2021 05:13:53 +0000</pubDate>
      <link>https://dev.to/coderwatch/10-websites-to-get-free-developer-swags-doing-nothing-1j47</link>
      <guid>https://dev.to/coderwatch/10-websites-to-get-free-developer-swags-doing-nothing-1j47</guid>
      <description>&lt;p&gt;Who doesn't loves free products and that too some Developer swag. What I personally think is that 90% of Developer never buy stickers for their laptop they just get it for free from somewhere. And it's true actually 🤣🤣. So here in this post I have got some website which will give you some developer swags for free or by just doing simple tasks. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#devrant"&gt;
  &lt;/a&gt;
  &lt;a href="https://devrant.com/free-stickers"&gt;DevRant&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ggxUobVu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://devrant.com/static/devrant/img/stickers-collection3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ggxUobVu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://devrant.com/static/devrant/img/stickers-collection3.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Swag: Squishy Ball&lt;/p&gt;

&lt;p&gt;Tasks to do: Post an awesome rant that gets over 750 ++'s&lt;/p&gt;

&lt;p&gt;After doing the tasks you just gotta mail to &lt;a href="mailto:stickers@devrant.io"&gt;stickers@devrant.io&lt;/a&gt; with:&lt;/p&gt;

&lt;p&gt;1) Your email address&lt;/p&gt;

&lt;p&gt;2) Your name and physical address &lt;/p&gt;

&lt;p&gt;Now Enjoy with the Squishy Ball&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#erxes"&gt;
  &lt;/a&gt;
  &lt;a href="https://erxes.io/hubspot-alternative-erxes-swag"&gt;Erxes&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E3lWHQEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627651912186/Fimuo7b_Z.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E3lWHQEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627651912186/Fimuo7b_Z.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Swag: Tshirt and Stickers&lt;/p&gt;

&lt;p&gt;Tasks to do: To make pull request to Erxes &lt;a href="https://github.com/erxes/erxes"&gt;repo&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kong"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Kong/kong/blob/master/CONTRIBUTING.md#contributor-t-shirt"&gt;Kong&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ghEUvobl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://konghq.com/wp-content/uploads/2018/04/100-contributor-t-shirt-1024x768.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ghEUvobl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://konghq.com/wp-content/uploads/2018/04/100-contributor-t-shirt-1024x768.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Swag: T-shirt &lt;/p&gt;

&lt;p&gt;Tasks to do: Gets 1 Pull Request accepted&lt;/p&gt;

&lt;p&gt;After your Pull Request gets accepted, then you gotta fill this form up (&lt;a href="https://goo.gl/forms/5w6mxLaE4tz2YM0L2"&gt;https://goo.gl/forms/5w6mxLaE4tz2YM0L2&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docusaurus"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/facebook/docusaurus/issues/1834"&gt;Docusaurus&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Flf_l4B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627651939427/D5C7vfT3R.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Flf_l4B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627651939427/D5C7vfT3R.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Swag: Stickers&lt;/p&gt;

&lt;p&gt;Tasks to do: Migrate your website to Docusaurus&lt;/p&gt;

&lt;p&gt;This is a task that requires at least a few hours of commitment (can be more, depending on the website) and it targeted at people who want to learn more about Docusaurus and Open Source.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#redwoodjs"&gt;
  &lt;/a&gt;
  &lt;a href="https://redwoodjs.com/stickers"&gt;RedWoodJS&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lbwpqZak--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627651961439/vk2E0iPto.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lbwpqZak--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627651961439/vk2E0iPto.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Swag: Stickers&lt;/p&gt;

&lt;p&gt;Tasks to do: &lt;code&gt;Nothing&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You just have to give your address and each week they pick upto 100 entries ad give out stockers, shipped to anywhere in the world for free. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alligator"&gt;
  &lt;/a&gt;
  &lt;a href="https://alligator.io"&gt;Alligator&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AH7VjGlR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627651997239/d53nB9en_.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AH7VjGlR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627651997239/d53nB9en_.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Swag: Cool Alligator Stickers&lt;/p&gt;

&lt;p&gt;Tasks to do: Write a Blog post&lt;/p&gt;

&lt;p&gt;Alligator.io is developing and they are searching for colleagues to think of some magnificent front-end advancement posts. &lt;/p&gt;

&lt;p&gt;Here are a portion of the subjects choices you can compose on: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Vue.js &lt;/li&gt;
&lt;li&gt;Angular &lt;/li&gt;
&lt;li&gt;Preact &lt;/li&gt;
&lt;li&gt;React &lt;/li&gt;
&lt;li&gt;React Native &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#jsbin"&gt;
  &lt;/a&gt;
  &lt;a href="https://jsbin.com/help/stickers/"&gt;JSBin&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aak4w-1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://help.jsbin.com/images/stickers.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aak4w-1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://help.jsbin.com/images/stickers.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Swag: Stickers&lt;/p&gt;

&lt;p&gt;Tasks to do: Nothing&lt;/p&gt;

&lt;p&gt;You’ll need to fill out the Google form with your name and address, and they will send you a few sticker on our next mail out. Google form link -&amp;gt; ( &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSeQ_PflKvabBLmdlHPOeBkD30aRs14yNGfvcaErpys_YSKXBA/viewform"&gt;https://docs.google.com/forms/d/e/1FAIpQLSeQ_PflKvabBLmdlHPOeBkD30aRs14yNGfvcaErpys_YSKXBA/viewform&lt;/a&gt; )&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ihp"&gt;
  &lt;/a&gt;
  &lt;a href="https://forms.gle/hEgV4E7RakQBaKgY9"&gt;IHP&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="" class="article-body-image-wrapper"&gt;&lt;img alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Swag: Stickers&lt;/p&gt;

&lt;p&gt;Tasks to do: Nothing&lt;/p&gt;

&lt;p&gt;The quickest method to construct type safe web applications. IHP is another included web structure enhanced for longterm efficiency and software engineer satisfaction&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#imgbot"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScpL5wT5dsFTXZou49p7_W7Y2sbMeqKulvDrwHQabecc4YF7w/viewform"&gt;ImgBOT&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VaWrUHQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627652065590/M8UDq04Fp.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VaWrUHQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627652065590/M8UDq04Fp.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Swag: Bot Stickers&lt;/p&gt;

&lt;p&gt;Tasks to do: To install there bot on your repo&lt;/p&gt;

&lt;p&gt;ImgBOT iS a Github app that optimizes your images. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dev-podcast-review"&gt;
  &lt;/a&gt;
  &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;Dev Podcast Review&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fu95_vJ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627652094802/d4kR3w7X9.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fu95_vJ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627652094802/d4kR3w7X9.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Swag: Stickers&lt;/p&gt;

&lt;p&gt;Tasks to do: To give review of DevDiscuss or Devnews on Apple Podcasts&lt;/p&gt;

&lt;p&gt;DevDiscuss is the unique podcast from DEV.to community, a worldwide local area of programming engineers, everything being equal, and experience levels. The show covers consuming themes that sway the day by day lives of developers and past, facilitated by Forem Co-Founders, Ben Halpern and Jess Lee.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gatsby"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.gatsbyjs.org/docs/contributor-swag/"&gt;Gatsby&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0K6rB9W9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.gatsbyjs.com/static/5212f3b07a7af895b9b607fde19e7479/df51d/gatsby-swag.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0K6rB9W9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.gatsbyjs.com/static/5212f3b07a7af895b9b607fde19e7479/df51d/gatsby-swag.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Swag: Swags from here (&lt;a href="https://store.gatsbyjs.org/"&gt;https://store.gatsbyjs.org/&lt;/a&gt;) depends on Tier. &lt;/p&gt;

&lt;p&gt;Tasks to do: everyone who contributes to Gatsby &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tier 1 swag includes most items $10 and under&lt;/li&gt;
&lt;li&gt;Tier 2 swag includes most items $26 and under&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Enjoy wearing your swag and flexing on Twitter and in the DEV Community. &lt;br&gt;
If you know any other websites giving free swag please add so in the comments. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>developer</category>
      <category>swag</category>
    </item>
    <item>
      <title>Advanced Guide for CSS Selectors </title>
      <author>pawan deore</author>
      <pubDate>Sun, 01 Aug 2021 04:56:55 +0000</pubDate>
      <link>https://dev.to/pawandeore/advanced-guide-for-css-selectors-4hhl</link>
      <guid>https://dev.to/pawandeore/advanced-guide-for-css-selectors-4hhl</guid>
      <description>&lt;p&gt;Okay so till now we generally used common CSS selectors like class, id, universal and element name&lt;/p&gt;

&lt;p&gt;in example that will be indicated like&lt;/p&gt;

&lt;p&gt;class  -&amp;gt;  .&lt;br&gt;
id    -&amp;gt;  #&lt;br&gt;
tagName  -&amp;gt;   tagName&lt;br&gt;
universal  -&amp;gt;   *&lt;br&gt;
attribute  -&amp;gt;  [attribute]&lt;/p&gt;

&lt;p&gt;Okay so today we will review some other selectors &lt;br&gt;
&lt;br&gt;&lt;br&gt;
1] Descendant combinator&lt;/p&gt;

&lt;p&gt;this thing is pretty dangerous i guess 😂 reason is if we assign some styles with this rule it will be big pain in a** let me explain&lt;/p&gt;

&lt;p&gt;div p {&lt;br&gt;
 color: red;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;it will apply styles to all p tag whether it is just below div or at any other level below div, sometimes it helps sometimes becomes trouble. meaning it will be applicable to &lt;/p&gt;

&lt;p&gt;div &amp;gt; h2 &amp;gt; p&lt;br&gt;
div &amp;gt; p&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
2] Child combinator&lt;/p&gt;

&lt;p&gt;this one is solution for the 1st one we saw its classes will be applicable to the exact child of the parent not to the every element under that parent. &lt;/p&gt;

&lt;p&gt;example&lt;/p&gt;

&lt;p&gt;div &amp;gt; p {&lt;br&gt;
 color: red;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;now color red only be applied for the elements which are direct child of div not to the every p element.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
3] General sibling combinator&lt;/p&gt;

&lt;p&gt;well this rule is useful in some critical times we struggle to style to next all elements below specific element, syntax is &lt;/p&gt;

&lt;p&gt;div ~ p {&lt;br&gt;
  color: red;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;this will apply color red to all p tags which are next to div tags&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
4] Adjacent sibling combinator&lt;/p&gt;

&lt;p&gt;well this rule is exactly like the previous but only difference here is styles will be applied ONLY to the next element i.e. adjacent element not to all elements below it.&lt;/p&gt;

&lt;p&gt;example syntax&lt;/p&gt;

&lt;p&gt;div + p {&lt;br&gt;
  color: red;&lt;br&gt;
}&lt;/p&gt;



&lt;p&gt;and that's it for this post i guess. if you love this post then follow me for more posts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/pawandeore"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rJvAnNew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-black.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>5 UX Tips to Become a Better Front End Developer</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 01 Aug 2021 04:42:34 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/5-ux-tips-to-become-a-better-front-end-developer-46if</link>
      <guid>https://dev.to/ruppysuppy/5-ux-tips-to-become-a-better-front-end-developer-46if</guid>
      <description>&lt;p&gt;Just on reading the title, you might think &lt;em&gt;Didn't you release an article on the same topic last week?&lt;/em&gt; Let's address that first. Using &lt;strong&gt;UX&lt;/strong&gt; and &lt;strong&gt;UI&lt;/strong&gt; interchangeably is a common mistake among many Designers. So, we must differentiate the two:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;User Interface&lt;/strong&gt; (&lt;strong&gt;UI&lt;/strong&gt;) refers to the space where interactions between humans and a product occur, whereas &lt;strong&gt;User Experience&lt;/strong&gt; (&lt;strong&gt;UX&lt;/strong&gt;) is an emotional outcome after interactions with a product.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eSEnmQgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5jac7rmdvsfdeh7k8v8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eSEnmQgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5jac7rmdvsfdeh7k8v8.jpg" alt="UI and UX"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, with that out of the way, let's move on to how we can deliver a mind-blowing (🤯) &lt;strong&gt;UX&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-use-a-polished-ui"&gt;
  &lt;/a&gt;
  1. Use a Polished &lt;strong&gt;UI&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;This goes without saying, &lt;strong&gt;UI&lt;/strong&gt; is an integral part of &lt;strong&gt;UX&lt;/strong&gt;. Without a polished &lt;strong&gt;UI&lt;/strong&gt;, you will never be able to deliver a &lt;strong&gt;UX&lt;/strong&gt; worth remembering.&lt;/p&gt;

&lt;p&gt;It is also a good idea to create a &lt;em&gt;wireframe&lt;/em&gt; or a &lt;em&gt;mockup&lt;/em&gt; using some tools like &lt;strong&gt;Figma&lt;/strong&gt; or &lt;strong&gt;Adobe XD&lt;/strong&gt; before you start developing the actual product as making changes to the &lt;em&gt;wireframe&lt;/em&gt; is much easier than making changes in the final product.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q-aXZFa6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlg3picqop07a88t96ni.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q-aXZFa6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlg3picqop07a88t96ni.jpg" alt="Mockup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can check out &lt;a href="https://dev.to/ruppysuppy/5-ui-tips-to-become-a-better-front-end-developer-1ae1"&gt;this article&lt;/a&gt; to take your &lt;strong&gt;UI&lt;/strong&gt; skills to the next level.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-use-microinteractions"&gt;
  &lt;/a&gt;
  2. Use &lt;strong&gt;Micro-interactions&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Micro-interactions&lt;/strong&gt; are one of the key ingredients of &lt;strong&gt;UX&lt;/strong&gt;. You might be wondering &lt;em&gt;What are these "&lt;strong&gt;Micro-interaction&lt;/strong&gt;" things?&lt;/em&gt;, well, let me enlighten you.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Micro-interactions&lt;/strong&gt; refers to the small and subtle changes in the &lt;strong&gt;UI&lt;/strong&gt;, triggered by some user action. Such as &lt;em&gt;click&lt;/em&gt;, &lt;em&gt;scroll&lt;/em&gt;, &lt;em&gt;hover&lt;/em&gt;, etc.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Without &lt;strong&gt;Micro-interactions&lt;/strong&gt;, the users will feel as if your site lacks something, even though they will be able to pinpoint the issue.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You need not use some super &lt;em&gt;fancy animations&lt;/em&gt;, only basic ones are good enough (but the &lt;em&gt;fancy animations&lt;/em&gt; does help in keeping the user engaged)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gwaNPUhh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kk9wlsooc1vkfmo1tag.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gwaNPUhh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kk9wlsooc1vkfmo1tag.gif" alt="Scroll Animation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-reduce-the-number-of-actions-to-accomplish-a-task"&gt;
  &lt;/a&gt;
  3. Reduce the number of actions to accomplish a task
&lt;/h1&gt;

&lt;p&gt;Day by day, the &lt;strong&gt;attention span&lt;/strong&gt; of humans is reducing to the point that even a goldfish has more &lt;strong&gt;attention span&lt;/strong&gt; than us. The &lt;em&gt;more actions&lt;/em&gt; a user has to perform to achieve his goal, the &lt;em&gt;less likely&lt;/em&gt; it is that he will follow through.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UyYLpVTD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fny82g6var0bh8eb2h9y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UyYLpVTD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fny82g6var0bh8eb2h9y.png" alt="Attention span over the years"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The solution? &lt;em&gt;Frequent actions&lt;/em&gt; should be large buttons, placed in easily reachable zones. Another method to minimize the user's effort is by opting for the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;no action&lt;/strong&gt; &amp;gt; &lt;strong&gt;scroll&lt;/strong&gt; &amp;gt; &lt;strong&gt;click&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In case you absolutely have to use &lt;strong&gt;clicks&lt;/strong&gt;, make sure you minimize the number of &lt;strong&gt;clicks&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-reduce-load-time"&gt;
  &lt;/a&gt;
  4. Reduce Load time
&lt;/h1&gt;

&lt;p&gt;Perception of the speed of the website is based on &lt;em&gt;load time&lt;/em&gt; and &lt;em&gt;smoothness of animations&lt;/em&gt;. What matters the most to users is that your website &lt;strong&gt;feels fast&lt;/strong&gt; (even if it is just their perception).&lt;/p&gt;

&lt;p&gt;As mentioned in the previous point about dwindling &lt;strong&gt;attention spans&lt;/strong&gt;, delays longer than a &lt;strong&gt;couple of seconds&lt;/strong&gt; will often make users leave the website, so make sure that your website loads fast.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can buy yourself a few more seconds&lt;/em&gt; by using &lt;em&gt;smooth&lt;/em&gt; and &lt;em&gt;captivating&lt;/em&gt; &lt;strong&gt;loading animations&lt;/strong&gt; like these: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YDXp9l-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/in87leaykiq6gr6o0kx4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YDXp9l-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/in87leaykiq6gr6o0kx4.gif" alt="Loading Animation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-intuitive"&gt;
  &lt;/a&gt;
  5. Intuitive
&lt;/h1&gt;

&lt;p&gt;Often new Designers, trying to separate themselves from the herd design &lt;em&gt;aesthetically pleasing&lt;/em&gt;, but &lt;em&gt;utterly confusing&lt;/em&gt; layouts which leave the users scratching their heads even to accomplish small tasks. Quite evidently, the &lt;strong&gt;user engagement&lt;/strong&gt; drops.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Nobody likes &lt;em&gt;people&lt;/em&gt; (&lt;em&gt;or websites&lt;/em&gt;) who make them feel stupid.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You should use &lt;em&gt;common website patterns and interfaces&lt;/em&gt; instead of making the users learn something new, as &lt;strong&gt;consistent&lt;/strong&gt; and &lt;strong&gt;easy-to-use&lt;/strong&gt; &lt;em&gt;interfaces&lt;/em&gt; help users concentrate on the content and navigate through it with ease.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Y0vbolg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ip00mkn0mdorm7dols8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Y0vbolg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ip00mkn0mdorm7dols8.jpg" alt="Intuitive layout"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Give yourself a &lt;strong&gt;pat on the back&lt;/strong&gt;; now you too can be a great &lt;strong&gt;UX&lt;/strong&gt; designer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--skFWOVr5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s864nh48x3xyji7md7kq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--skFWOVr5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s864nh48x3xyji7md7kq.gif" alt="Pat on the Back"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you will employ these concepts in your applications and make awe-inspiring websites :)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a Digital Nomad in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are a few commonly asked questions I get. So, I hope this &lt;strong&gt;FAQ&lt;/strong&gt; section solves your issues.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Front-End Web Dev?&lt;/strong&gt;&lt;br&gt;
First get the fundamentals of &lt;strong&gt;HTML&lt;/strong&gt;, &lt;strong&gt;CSS&lt;/strong&gt;, &lt;strong&gt;JS&lt;/strong&gt; down; Learn any &lt;em&gt;front-end framework/library&lt;/em&gt; (&lt;strong&gt;React&lt;/strong&gt;, &lt;strong&gt;Vue&lt;/strong&gt;, &lt;strong&gt;Angular&lt;/strong&gt;); Then keep making &lt;strong&gt;Projects&lt;/strong&gt; or make &lt;strong&gt;Open Source Contributions&lt;/strong&gt; to attain mastery.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relevant Article Links&lt;/strong&gt;&lt;br&gt;
    1. &lt;a href="https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p"&gt;Front End Project Ideas&lt;/a&gt;&lt;br&gt;
    2. &lt;a href="https://dev.to/ruppysuppy/zero-to-hero-get-started-with-open-source-10b7"&gt;Get Started With Open Source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you mentor me?&lt;/strong&gt;&lt;br&gt;
Sorry, I am already under a lot of workload and would not have the time to mentor anyone.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Connect to me on&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>ux</category>
      <category>ui</category>
      <category>webdesign</category>
    </item>
    <item>
      <title>Web Apps From Scratch: State Management</title>
      <author>Nicholas Mendez</author>
      <pubDate>Sun, 01 Aug 2021 03:55:23 +0000</pubDate>
      <link>https://dev.to/snickdx/web-apps-from-scratch-state-management-2h8c</link>
      <guid>https://dev.to/snickdx/web-apps-from-scratch-state-management-2h8c</guid>
      <description>&lt;h1&gt;
  &lt;a href="#handling-application-state"&gt;
  &lt;/a&gt;
  Handling Application State
&lt;/h1&gt;

&lt;p&gt;Dynamic web applications such as the one below typically need to reflect some data stored in a database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UKL1GJbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mscbtpzqtz14ika9pjt3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UKL1GJbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mscbtpzqtz14ika9pjt3.gif" alt="To Do (3)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This data is also referred to as the application state. Often the user would have controls to manipulate state in the browser's memory and must be synced with the database.&lt;/p&gt;

&lt;p&gt;State management is refers to how you go about syncing changes to state within the UI and the database.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-is-it-done"&gt;
  &lt;/a&gt;
  How is it done?
&lt;/h1&gt;

&lt;p&gt;Typically your framework of choice would provide some syntax or strategy for this. There are even entire libraries dedicated to state management such as redux or mobx. &lt;/p&gt;

&lt;p&gt;However, it's mostly about applying some structure to your code that allows the UI components of your app to easily trigger and react to changes in state. As such, this can indeed be achieved with vanilla JS.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-observable-pattern"&gt;
  &lt;/a&gt;
  The Observable Pattern
&lt;/h1&gt;

&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Observer_pattern"&gt;Observable Pattern&lt;/a&gt; belongs to a set of software engineering code recipes called &lt;a href="https://en.wikipedia.org/wiki/Software_design_pattern"&gt;design patterns&lt;/a&gt;. It turns out this issue of handling state changes is exactly the kind of thing observables were meant for.&lt;/p&gt;

&lt;p&gt;The Observable is a class that can allow other objects to subscribe to events that occur by the Observable. Many state management libraries actually follow this pattern.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_listeners&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;notify&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_listeners&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listener&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_value&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_listeners&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;notify&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above is a typical observable implementation. It just needs to track the components subscribed to it and publish events to the components.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#components"&gt;
  &lt;/a&gt;
  Components
&lt;/h1&gt;

&lt;p&gt;Next, we'll define a class that represent our UI components that need to react to events that happen in our web app. In this case our components are the list of todos that render under the search box and the blue box to the right that shows a summary.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k6_Urh6w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gokt1877czot62ln3wgk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6_Urh6w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gokt1877czot62ln3wgk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our components must react to changes in state ie when todos are created, deleted or updated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;//update the html of the component with the new state&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Components store their corresponding HTML element on the page, they also store what I call a template function. Template functions takes some data and returns a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"&gt;template literal&lt;/a&gt; html string containing the data sent to it. The template function is then called in the render method should the component's html need to be updated. This would make more sense in a bit.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#putting-it-together"&gt;
  &lt;/a&gt;
  Putting it Together
&lt;/h1&gt;

&lt;p&gt;In the main application, an observable todoObserver is created. This will store the todo's data and whenever the data changes this observer will broadcast it to any components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;     &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todoObserver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
     &lt;span class="c1"&gt;//initialized with empty array of todos&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we'll create our stats component, which is the blue box that shows the todo summary.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#stats&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="c1"&gt;//html element on page&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="c1"&gt;//template function&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numDone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numTodos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`
          &amp;lt;div class="row"&amp;gt;
            &amp;lt;div class="col s12 m6 offset-m3"&amp;gt;
              &amp;lt;div class="card-panel blue"&amp;gt;
                &amp;lt;p class="white-text"&amp;gt;
                  Num Todos: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;numTodos&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;
                &amp;lt;/p&amp;gt;

                &amp;lt;p class="white-text"&amp;gt;
                  Number Done: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;numDone&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;
                &amp;lt;/p&amp;gt;
              &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
      `&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice how the template function returns how the todo data should be displayed in the html.&lt;/p&gt;

&lt;p&gt;Then we let the stats component subscribe to the todoObserver. Essentially we are telling the stats what to do when the todoObserver has any updates to the todos. In this case we just want to re-render the stats component when the observer broadcasts new changes to the todos.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
  &lt;span class="nx"&gt;todoObserver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

    &lt;span class="nx"&gt;stats&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally any time changes are sent to the server we call getTodos() to send a request to the server and update the observer with the latest changes. When the todoObserver is updated, it would then broadcast those updates to the subscribed components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getTodos&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;todoObserver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sendRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/todo`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//send request to server to get updated todos&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This is a neat (some what verbose) way to setup state management in a web app. Components just need to subscribe to changes from a single object. You can see the full working example at this &lt;a href="https://replit.com/@Snickdx/state-2#app.js"&gt;REPL&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.jeremylikness.com/blog/client-side-javascript-databinding-without-a-framework/"&gt;Client side javascript databinding without a framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
