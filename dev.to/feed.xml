<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Expressando (Part 1): A real-time sign language detection system</title>
      <author>Pritam</author>
      <pubDate>Sat, 22 Jan 2022 17:31:10 +0000</pubDate>
      <link>https://dev.to/nitdgplug/expressando-part-1-a-real-time-sign-language-detection-system-2l15</link>
      <guid>https://dev.to/nitdgplug/expressando-part-1-a-real-time-sign-language-detection-system-2l15</guid>
      <description>&lt;p&gt;Expressando is a real-time sign language detection system made using &lt;strong&gt;OpenCV, Keras, Tensorflow and SciPy&lt;/strong&gt;. It is a beginner-friendly project, suitable for the enthusiasts in the field of Machine-Learning and Deep-Learning. The projects primarily aim to highlight the basic use of OpenCV in image processing manipulation, training of models with Keras using Tensorflow as backend, and finally, the detection of our customised sign-language after constructing a Convolutional Neural Network on it. So, without any further ado, let us begin with the tutorial:&lt;br&gt;
Expressando has been written in Python. So, before we start, you can have a quick recapitulation of the basics from the following resources, which will be beneficial for a better understanding of the concepts:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wiki.python.org/moin/BeginnersGuide/Programmers"&gt;Python Beginner's Guide&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.w3schools.com/python/"&gt;W3Schools&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.tutorialspoint.com/python/index.htm"&gt;Tutorials Point&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, make sure that you have Python installed on your system.&lt;br&gt;
In case, you do not have Python pre-installed, download the latest version of Python from &lt;a href="https://www.python.org/downloads/"&gt;here&lt;/a&gt;. You will also have to create a virtual environment for this project.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-a-virtual-environment"&gt;
  &lt;/a&gt;
  What is a 'Virtual Environment'?
&lt;/h2&gt;

&lt;p&gt;A virtual environment is an &lt;strong&gt;isolated Python-stimulated environment where a project's dependencies and packages are installed in a different directory from the other packages installed in the system's default Python path (known as the base environment) and other virtual environments&lt;/strong&gt;. It is synonymous to a 'container', where you have all your required dependencies installed and ready to be used in your project.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;For Linux/UNIX&lt;/strong&gt;&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; For creating virtual environments, you need a Python package called &lt;strong&gt;virtualenv&lt;/strong&gt;. To install virtualenv on your system, type the following command in your terminal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For Python version less than 3.0:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;virtualenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;For Python version 3.0 and above:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 &lt;span class="nb"&gt;install &lt;/span&gt;virtualenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, check whether 'virtualenv' has been installed successfully on your system. Type the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;virtualenv &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The following output will be displayed on successful installation. For example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;16.0.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Create a directory called "&lt;strong&gt;TDoC-2021&lt;/strong&gt;", where you will create and save your Python files. This is the main directory for the project. We will also create our virtual environment inside this created directory. &lt;/p&gt;

&lt;p&gt;Open your terminal at the desired directory and type:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;TDoC-2021
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;A folder called "&lt;strong&gt;TDoC-2021&lt;/strong&gt;" will be created at your desired directory. Now, let us create our virtual environment inside this directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For Python version less than 3.0:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;TDoC-2021
python &lt;span class="nt"&gt;-m&lt;/span&gt; venv &amp;lt;NAME_OF_THE_ENVIRONMENT&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;For Python version 3.0 and above:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;TDoC-2021
python3 &lt;span class="nt"&gt;-m&lt;/span&gt; venv &amp;lt;NAME_OF_THE_ENVIRONMENT&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here, substitute the &lt;strong&gt;&lt;/strong&gt; with a proper string, which you want to name the environment. For example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python3 &lt;span class="nt"&gt;-m&lt;/span&gt; venv &lt;span class="nb"&gt;env&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;It is preferable to name your environment as "&lt;strong&gt;env&lt;/strong&gt;" or "&lt;strong&gt;venv&lt;/strong&gt;", as these directories has already been included under "&lt;strong&gt;.gitignore&lt;/strong&gt;". Hence, you do not need to make any further changes in the gitignore file, while commiting your files in Github/Gitlab.&lt;br&gt;
Here we will be using "&lt;strong&gt;env&lt;/strong&gt;" as the name of our environment.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; After creating the virtual environment named "&lt;strong&gt;env&lt;/strong&gt;", you will notice that a directory called "&lt;strong&gt;env&lt;/strong&gt;" is created. This directory basically serves as your virtual environment. Now, let us activate our virtual environment by the following command.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;source&lt;/span&gt; &amp;lt;NAME_OF_THE_ENVIRONMENT&amp;gt;/bin/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In our case, we will be using the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;source env&lt;/span&gt;/bin/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You will be able to see the name of the environment in closed parantheses in your terminal, which will indicate that your virtual environmant has been activated.&lt;br&gt;
For example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;env&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; ┌─[ritabrata@ritabrata-VivoBook-ASUSLaptop-X409JB-X409JB]─[~/Desktop/TDoC-2021]
      └──╼ &lt;span class="err"&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Download the "&lt;strong&gt;requirements.txt&lt;/strong&gt;" from the given link: &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RitabrataDas343/Expressando-TDoC2021/main/requirements.txt"&gt;requirements.txt&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Copy the "&lt;strong&gt;requirements.txt&lt;/strong&gt;" file and store it under the directory "&lt;strong&gt;TDoC-2021&lt;/strong&gt;". You will have the following folder structure:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;├── TDoC-2021
|    ├── env       
|    ├── requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now type the following command in your Terminal window:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You will now have all the required dependencies and Python packages with their appropriate versions installed in your virtual environment named "&lt;strong&gt;env&lt;/strong&gt;". You can check whether the dependencies are installed according to the "requirements.txt" file by the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 list 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This command enlists all the installed dependencies installed in your encironment.&lt;/p&gt;

&lt;p&gt;You can also deactivate the environment, when it is not in use, by typing the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;deactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The virtual environment will be deactivated, and the name of the environment in closed paranthesis will cease to appear.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;For Windows&lt;/strong&gt;&lt;/em&gt;: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; For creating virtual environments, you need a Python package called &lt;strong&gt;virtualenv&lt;/strong&gt;. To install virtualenv on your system, type the following command in your &lt;strong&gt;Windows Powershell&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In case, you do not have Windows Powershell, you can download it from: &lt;strong&gt;&lt;a href="https://www.microsoft.com/en-in/download/details.aspx?id=42554&amp;amp;ranMID=46131&amp;amp;ranEAID=a1LgFw09t88&amp;amp;ranSiteID=a1LgFw09t88-.l4oqm.FvUCUi6UzmMU8qQ&amp;amp;epi=a1LgFw09t88-.l4oqm.FvUCUi6UzmMU8qQ&amp;amp;irgwc=1&amp;amp;OCID=AID2200057_aff_7806_1243925&amp;amp;tduid=%28ir__w0vmuhh3v0kf6hs2kgvlvbrdnu2xr9yt62nusoij00%29%287806%29%281243925%29%28a1LgFw09t88-.l4oqm.FvUCUi6UzmMU8qQ%29%28%29&amp;amp;irclickid=_w0vmuhh3v0kf6hs2kgvlvbrdnu2xr9yt62nusoij00"&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;virtualenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, check whether 'virtualenv' has been installed successfully on your system. Type the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;virtualenv &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The following output will be displayed on successful installation. For example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;virtualenv 16.0.2 from c:&lt;span class="se"&gt;\u&lt;/span&gt;sers&lt;span class="se"&gt;\a&lt;/span&gt;dministrator&lt;span class="se"&gt;\a&lt;/span&gt;ppdata&lt;span class="se"&gt;\l&lt;/span&gt;ocal&lt;span class="se"&gt;\p&lt;/span&gt;rograms&lt;span class="se"&gt;\p&lt;/span&gt;ython&lt;span class="se"&gt;\p&lt;/span&gt;ython39&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages&lt;span class="se"&gt;\v&lt;/span&gt;irtualenv&lt;span class="se"&gt;\_&lt;/span&gt;_init__.py 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Create a directory called "&lt;strong&gt;TDoC-2021&lt;/strong&gt;", where you will create and save your Python files. This is the main directory for the project. We will also create our virtual environment inside this created directory. &lt;/p&gt;

&lt;p&gt;Open your Powershell at the desired directory and type:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;TDoC-2021
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;A folder called "&lt;strong&gt;TDoC-2021&lt;/strong&gt;" will be created at your desired directory. Now, let us create our virtual environment inside this directory.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;TDoC-2021
python &lt;span class="nt"&gt;-m&lt;/span&gt; venv &amp;lt;NAME_OF_THE_ENVIRONMENT&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here, substitute the &lt;strong&gt;&lt;/strong&gt; with a proper string, which you want to name the environment. For example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python3 &lt;span class="nt"&gt;-m&lt;/span&gt; venv &lt;span class="nb"&gt;env&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;It is preferable to name your environment as "&lt;strong&gt;env&lt;/strong&gt;" or "&lt;strong&gt;venv&lt;/strong&gt;", as these directories has already been included under "&lt;strong&gt;.gitignore&lt;/strong&gt;". Hence, you do not need to make any further changes in the gitignore file, while commiting your files in Github/Gitlab.&lt;br&gt;
Here we will be using "&lt;strong&gt;env&lt;/strong&gt;" as the name of our environment.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; After creating the virtual environment named "&lt;strong&gt;env&lt;/strong&gt;", you will notice that a directory called "&lt;strong&gt;env&lt;/strong&gt;" is created. This directory basically serves as your virtual environment. Now, let us activate our virtual environment by the following command.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;.&lt;/span&gt; &amp;lt;NAME_OF_THE_ENVIRONMENT&amp;gt;/Scripts/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In our case, we will be using the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;env&lt;/span&gt;/Scripts/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You will be able to see the name of the environment in closed paranthesis in your terminal, which will indicate that your virtual environment has been activated.&lt;br&gt;
For example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;env&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; PS C:&lt;span class="se"&gt;\U&lt;/span&gt;sers&lt;span class="se"&gt;\A&lt;/span&gt;dministrator&lt;span class="se"&gt;\D&lt;/span&gt;esktop&lt;span class="se"&gt;\E&lt;/span&gt;xpressando-TDoC2021&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Download the "&lt;strong&gt;requirements.txt&lt;/strong&gt;" from the given link: &lt;strong&gt;&lt;a href="https://drive.google.com/file/d/1l1xqC7-Bbv3KosGItOUyzgmnjSSQKeIZ/view?usp=sharing"&gt;requirements.txt&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Copy the "&lt;strong&gt;requirements.txt&lt;/strong&gt;" file and store it under the directory "&lt;strong&gt;TDoC-2021&lt;/strong&gt;". You will have the following folder structure:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;├── TDoC-2021
|    ├── env       
|    ├── requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now type the following command in your Terminal window:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You will now have all the required dependencies and Python packages with their appropriate versions installed in your virtual environment named "&lt;strong&gt;env&lt;/strong&gt;". You can check whether the dependencies are installed according to the "requirements.txt" file by the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip list 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This command enlists all the installed dependencies installed in your environment.&lt;/p&gt;

&lt;p&gt;You can also deactivate the environment, when it is not in use, by typing the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;deactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The virtual environment will be deactivated, and the name of the environment in closed paranthesis will cease to appear.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#configuring-input-through-webcam-using-opencv"&gt;
  &lt;/a&gt;
  Configuring Input through Webcam using OpenCV
&lt;/h2&gt;

&lt;p&gt;After settinp up your virtual environment, it is time to configure your digital input. The first step of any image manipulation project starts with the configuration of digital image input using OpenCV. So let us first configure the basic webcam input. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Create a file named as "&lt;strong&gt;check.py&lt;/strong&gt;" inside the directory of "&lt;strong&gt;TDoC-2021&lt;/strong&gt;". As the name suggests, we are checking for the input through the webcam using the OpenCV library. Open the file in your code-editor/IDE. The folder structure would look like the following:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;├── TDoC-2021
|    ├── env    
|    ├── check.py
|    ├── requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; First, import OpenCV into the "&lt;strong&gt;check.py&lt;/strong&gt;" file. It can be accomplished by the following line of code:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;After importing cv2, we need to create a VideoCapture object, which will initiate the process to retrieve the input through the webcam.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;cap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VideoCapture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here, "cap" refers to the object that is created using OpenCV to capture the video. It basically returns the video from the first webcam on your computer.&lt;br&gt;
If you are using more than one webcam then the value "&lt;strong&gt;0&lt;/strong&gt;" indicates that the input will be configured through the first webcam of your computer. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For example, if you want to configure the input through your 2nd webcam, then you have to pass "1" instead of "0" as the parameter. In simple words, it means if you want to configure the input through the "&lt;strong&gt;n-th&lt;/strong&gt;" webcam, then you must pass "&lt;strong&gt;n-1&lt;/strong&gt;" as parameter to the VideoCapture method. &lt;br&gt;
&lt;strong&gt;Step 3:&lt;/strong&gt; This step involves rendering a while loop to stimulate asynchronous input through the webcam with the help of a suitable condition. In this step, we will be discussing the most common and important methods that are present in the OpenCV library, which are required for making basic projects and develop sound understanding about the various methods present in OpenCV and their uses. OpenCV is a house to a huge number of methods and functions, so we will be discussing only the important methods, which are necessary for beginners to understand. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Continue in the code-editor as follows:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isOpened&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The function &lt;strong&gt;cap.isOpened()&lt;/strong&gt; checks whether the VideoCapture object (here 'cap') is functional or not. This is done by usually checking the response from the webcam under consideration. This code initiates an infinite loop (to be broken later by a break statement), where we have "&lt;strong&gt;ret&lt;/strong&gt;" and "&lt;strong&gt;frame&lt;/strong&gt;" being defined as the cap.read(). Basically, &lt;strong&gt;ret&lt;/strong&gt; is a boolean regarding whether or not there was a return at all. On the other hand, &lt;strong&gt;frame&lt;/strong&gt; contains each frame that is being returned in the form of an image array vector.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is practised in order to avoid unnecessary IO errors. In case, no frame was returned, &lt;strong&gt;ret&lt;/strong&gt; will obtain &lt;strong&gt;False&lt;/strong&gt; as it's return value. Hence, instead of throwing an IO error, it will pass &lt;strong&gt;None&lt;/strong&gt; to the &lt;strong&gt;frame&lt;/strong&gt;.&lt;br&gt;
The next line of code introduces us to the method &lt;strong&gt;flip()&lt;/strong&gt;. This method inverts the frame taken into consideration, laterally. Using flip, the input will be similar to a mirror. It is beneficial as it eases the orientation of the webcam input.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"RGB Output"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;img1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;       
    &lt;span class="n"&gt;imCopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;gray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cvtColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COLOR_BGR2GRAY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;blur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GaussianBlur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In the next lines of code, we are introduced to few other methods in the OpenCV library. The method &lt;strong&gt;rectangle()&lt;/strong&gt; enables us to draw a rectangle of our desired shape on the frame taken into consideration.&lt;/p&gt;

&lt;p&gt;It has the following parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;img&lt;/strong&gt;: It is the frame taken into consideration on which the rectangle is to be drawn.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;(20, 20)&lt;/strong&gt;: It is the starting coordinates of rectangle. The coordinates are represented as tuples of two values, the X and Y coordinates respectively.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;(250, 250)&lt;/strong&gt;: It is the ending coordinates of rectangle. The coordinates are represented as tuples of two values similarly as the starting point.
Both the tuples indicate &lt;strong&gt;the right diagonal of the rectangle drawn.&lt;/strong&gt; If the x and y coordinates of the tuples are same, it will result in a &lt;strong&gt;square&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;(255, 0, 0)&lt;/strong&gt;: It is the color of border line of rectangle which is to be drawn, passed in the form of BGR index. BGR index comprises of &lt;strong&gt;Blue, Green and Red&lt;/strong&gt; colour values, which are used to define other colours as well. Each of the values ranges from &lt;strong&gt;0&lt;/strong&gt; to &lt;strong&gt;255&lt;/strong&gt;. Here, (255, 0, 0) denotes the blue colour. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;3&lt;/strong&gt;: It denotes the thickness of the rectangle border line in &lt;strong&gt;px&lt;/strong&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The method &lt;strong&gt;imshow()&lt;/strong&gt; shows the image in the form of an independent window. It has two parameters: The name of the window and the image to be displayed.&lt;br&gt;
Next, we extract the region covered by the rectangle in the form of a list of pixels named "img1". The extraction  We also make a copy of the extracted image and name the copy as "imCopy" using the &lt;strong&gt;copy()&lt;/strong&gt; function. &lt;/p&gt;

&lt;p&gt;Then we are introduced to the method "&lt;strong&gt;cvtColor()&lt;/strong&gt;". This method is used to convert the image into different color-spaces. There are more then hundreds of color-space filters available in OpenCV, but we will be using &lt;strong&gt;COLOR_BGR2GRAY&lt;/strong&gt; for now. This converts the image taken into consideration, in the form of BGR, and converts the entire image into grayscale. We name the grayscale image as &lt;strong&gt;gray&lt;/strong&gt;. &lt;/p&gt;

&lt;h1&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGZ6DSWt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76585827/137963065-a2560499-6bc6-405f-ac94-ca0bc9ae418b.PNG" width="880" height="393"&gt; &lt;/h1&gt;

&lt;p&gt;The left image is the original image, while the right image represents it's grayscale form.&lt;/p&gt;

&lt;p&gt;We will also use the &lt;strong&gt;GaussianBlur()&lt;/strong&gt; method here. It is an image-smoothening technique (also known as blurring) to reduce the amount of luminant noise in the image. We will stored the reduced image as &lt;strong&gt;blur&lt;/strong&gt;.  &lt;/p&gt;

&lt;h1&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lFVZ3UFf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76585827/137963285-f38f40d4-01ef-4e6e-a87c-4e5b938fb1c2.png" width="724" height="407"&gt; &lt;/h1&gt;

&lt;p&gt;The left image is the original image, while the right image represents it's blurred form.&lt;/p&gt;

&lt;p&gt;It has the following parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;gray&lt;/strong&gt;: It is the frame taken into consideration on which the method is to be applied.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;(5, 5)&lt;/strong&gt;: It is the gaussian Kernel size defined along the X and Y axes, passed in the form of a tuple.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;0&lt;/strong&gt;: It denotes the thickness of the rectangle border line in &lt;strong&gt;px&lt;/strong&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thresh1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;THRESH_BINARY_INV&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;THRESH_OTSU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;hand_resize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thresh1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Threshold"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thresh1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Thresholding&lt;/strong&gt; is a technique in OpenCV, which is the assignment of pixel values in relation to the threshold value provided. In thresholding, each pixel value is compared with the threshold value. It is one of the most common (and basic) segmentation techniques in computer vision and it allows us to separate the &lt;strong&gt;foreground (i.e., the objects that we are interested in)&lt;/strong&gt; from the &lt;strong&gt;background&lt;/strong&gt; of the image. A threshold is a value which has two regions on its either side i.e. below the threshold or above the threshold. If the pixel value is smaller than the threshold, it is set to 0, otherwise, it is set to a maximum value.&lt;/p&gt;

&lt;p&gt;Here, &lt;strong&gt;ret&lt;/strong&gt; performs the same function as before, while &lt;strong&gt;thresh1&lt;/strong&gt; contains our thresholded image. Then, we define a width and the height in the form of a tuple, before the initialisation of the &lt;strong&gt;cap&lt;/strong&gt; object.&lt;/p&gt;

&lt;p&gt;There are mainly three types of thresholding techniques:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Simple Threshold:&lt;/strong&gt; In this type of thresholding, we manually supply parameters to segment the image — this works extremely well in &lt;strong&gt;controlled lighting conditions&lt;/strong&gt; where we can ensure &lt;strong&gt;high contrast between the foreground and background&lt;/strong&gt; of the image. The parameters are discussed later.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Adaptive Threshold:&lt;/strong&gt; In this type of thresholding, instead of trying to threshold an image globally using a single value, it &lt;strong&gt;breaks the image down into smaller pieces&lt;/strong&gt;, and then thresholds each of these pieces separately and individually. It is better in &lt;strong&gt;limited lighting&lt;/strong&gt; conditions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;OTSU Threshold:&lt;/strong&gt; In Otsu Thresholding, &lt;strong&gt;the value of the threshold is not defined but is determined automatically. This works well when we are not sure of the lighting conditions.&lt;/strong&gt; This is an &lt;strong&gt;additive module&lt;/strong&gt;, i.e, it is applied in addition to Simple or Adaptive threshold and works well with &lt;strong&gt;grayscale&lt;/strong&gt; images.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The function &lt;strong&gt;threshold()&lt;/strong&gt; has the following parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;blur&lt;/strong&gt;: The input image array on which the blur effect is applied.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;10&lt;/strong&gt;: The value of Threshold below and above which pixel values will change accordingly.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;255&lt;/strong&gt;: The maximum value that can be assigned to a pixel, in general the intensity of a colour ranges from &lt;strong&gt;0 to 255&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU&lt;/strong&gt;: The type of thresholding that is applied to the image.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are other thresholding techniques as well: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;cv2.THRESH_BINARY&lt;/strong&gt;: If pixel intensity is greater than the set threshold, value is set to 255 (white), else it is set to  be at 0 (black). Here the brighter pixels are converted to black and darker pixels to white.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cv2.THRESH_BINARY_INV&lt;/strong&gt;: If pixel intensity is greater than the set threshold, value is set to 0(black), else it is set to be 255 (white). Here the brighter pixels are converted to white and darker pixels to black.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cv2.THRESH_TRUNC&lt;/strong&gt;: If pixel intensity value is greater than threshold, it is truncated to the mentioned threshold. The pixel values are set to be the same as the threshold. All other values remain the same.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cv2.THRESH_TOZERO&lt;/strong&gt;: Pixel intensity is set to 0, for all the pixels intensity less than the threshold value.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cv2.THRESH_TOZERO_INV&lt;/strong&gt;: Pixel intensity is set to 0, for all the pixels intensity greater than the threshold value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The thresholded image of the region under consideration is displayed using the &lt;strong&gt;imshow()&lt;/strong&gt; function.&lt;/p&gt;

&lt;p&gt;&amp;lt;&lt;/p&gt;
&lt;h1&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dxp39XG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76585827/137963402-4bfb58e2-f05d-442e-b3c3-fe3dbf3293d7.jpg" width="432" height="288"&gt; &lt;/h1&gt;

&lt;p&gt;The above are the examples of the thresholding modules.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;contours&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hierarchy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thresh1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RETR_TREE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CHAIN_APPROX_SIMPLE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imCopy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;contours&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Draw Contours'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imCopy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Contours are defined as the line joining all the points along the boundary of an image that are having the same intensity. Contours come handy in shape analysis, finding the size of the object of interest, and object detection.&lt;/strong&gt; It is defined by the minimum number of edges required to define the shape taken into consideration. This is done well with &lt;strong&gt;thresholded and grayscale images&lt;/strong&gt;. It is done by the function &lt;strong&gt;findContours().&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Normally we use the &lt;strong&gt;cv.findContours()&lt;/strong&gt; function to detect objects in an image. Sometimes, the objects are in different locations and in some cases, some shapes are inside other shapes just like nested figures or concentric figures. In this case, we call outer one as &lt;strong&gt;parent&lt;/strong&gt; and inner one as &lt;strong&gt;child&lt;/strong&gt;. This way, contours in an image has some relationship to each other. And we can specify how one contour is connected to each other, like, is it child of some other contour, or is it a parent etc. Representation of this relationship is called the &lt;strong&gt;Hierarchy&lt;/strong&gt;. &lt;/p&gt;

&lt;h1&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S2dtP5Qg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76585827/137963548-95870f41-5893-491a-b0f4-1a46a014f6c6.png" width="450" height="292"&gt;&lt;/h1&gt;

&lt;p&gt;The above picture represents the hierarchy of the contours. Contours that have the same integer have the same hierarchy.&lt;/p&gt;

&lt;p&gt;The function has the following parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;thresh1&lt;/strong&gt;: The input image array from which the contours are to be detected.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cv2.RETR_TREE&lt;/strong&gt;: This is known as the &lt;strong&gt;Contour Retrieval Method&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cv2.CHAIN_APPROX_SIMPLE&lt;/strong&gt;: This is known as the &lt;strong&gt;Contour Approximation Method&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Contour Retrieval Method&lt;/strong&gt; are of the following types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;cv2.CV_RETR_EXTERNAL&lt;/strong&gt;: It retrieves only the extreme outer contours. It sets hierarchy[i][2]=hierarchy[i][3]=-1 for all the contours. This gives "outer" contours, so if you have (say) one contour enclosing another (like concentric circles), only the outermost is given. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cv2.CV_RETR_LIST&lt;/strong&gt;: It retrieves all of the contours without establishing any hierarchical relationships. This is applied when the hierarchy and topology of the object cannot be determined from beforehand.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cv2.CV_RETR_CCOMP&lt;/strong&gt;: It retrieves all of the contours and organizes them into a two-level hierarchy. At the top level, there are external boundaries of the components. At the second level, there are boundaries of the holes. If there is another contour inside a hole of a connected component, it is still put at the top level. (ADVANCED)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cv2.CV_RETR_TREE&lt;/strong&gt;: It retrieves all of the contours and reconstructs a full hierarchy of nested contours. This full hierarchy is built and displayed. It establishes complete hierarchial relations and imagifies the contours.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Contour Approximation Method&lt;/strong&gt; are of the following types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;cv2.CHAIN_APPROX_NONE&lt;/strong&gt;: It stores all the points of the boundary of the shape under consideration. It requires a huge amount of memory to store each unit. It is efficient but highly reduces the speed of execution.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cv2.CHAIN_APPROX_SIMPLE&lt;/strong&gt;: It removes all redundant points and compresses the contour, thereby saving memory. It stores the key turning points of the shape under consideration and saves a lot of memory by reducing the number of points, hence increasing the speed of execution.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kCtwkdi4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76585827/137963685-dac31eb6-9167-487f-abda-2cfc71f33a52.png" width="560" height="420"&gt;&lt;/h1&gt;

&lt;p&gt;The examples of the approximation methods are shown as above.&lt;/p&gt;

&lt;p&gt;The function &lt;strong&gt;drawContours()&lt;/strong&gt; is used to draw the contours that have been traced, superimposed on the top of an image. In case, we do not want to display it over any image, the default is set to black.&lt;/p&gt;

&lt;p&gt;The function has the following parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;imCopy&lt;/strong&gt;: The input image array on which the contours are to be displayed.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;contours&lt;/strong&gt;: These refers to the 'contours' array that have been declared and initialised in the &lt;strong&gt;findContours()&lt;/strong&gt; function. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;-1&lt;/strong&gt;: It is the parameter to show all the contours in the 'contours' array. However, if you want to display a specific contour according to the hierarchy, pass the desired number as the parameter. For example, to get the 3rd contour, you have to pass &lt;strong&gt;2&lt;/strong&gt; as a parameter.
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;(0, 255, 0)&lt;/strong&gt;: It is the color of contour which is to be drawn, passed in the form of BGR index. Here, (0, 255, 0) denotes the green colour.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then we display the contours, superimposed on &lt;strong&gt;"imCopy"&lt;/strong&gt; image using the &lt;strong&gt;imshow()&lt;/strong&gt; function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; Now, after checking for the input, it is time to proceed for the termination of the while loop and close all the windows and close our Video Capture object.&lt;/p&gt;

&lt;p&gt;To exit the program on a specified keyboard interrupt, type the following code:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waitKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;

&lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;destroyAllWindows&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;The &lt;strong&gt;cv2.waitKey(10)&lt;/strong&gt; function returns -1 when no input is made whatsoever. As soon the event occurs (a Button is pressed, here 27 is the Unicode value for Escape Key), it returns a 32-bit integer. (ADVANCED)&lt;br&gt;
The &lt;strong&gt;0xFF&lt;/strong&gt; in this scenario is representing binary &lt;strong&gt;11111111&lt;/strong&gt;, a 8 bit binary, since we only require 8 bits to represent a character we AND waitKey(10) to 0xFF. As a result, an integer is obtained below 255. &lt;strong&gt;ord(char)&lt;/strong&gt; returns the ASCII value of the character which would be again maximum 255. (we often use 'q' as the keybinding to 'quit'). Hence by comparing the integer to the ord(char) value, we can check for a key pressed event and break the loop. The &lt;strong&gt;0xFF&lt;/strong&gt; is a hexidecimal input, known as &lt;strong&gt;bit mask.&lt;/strong&gt;(ADVANCED)&lt;br&gt;
32 is also the Unicode value for 'Non-breaking Space', made by the Space Bar.&lt;br&gt;
Now the loop breaks when the key is entered, and exits the control out of the loop.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The function &lt;strong&gt;cap.release()&lt;/strong&gt; closes the webcam input and prevents any resource errors. The function &lt;strong&gt;cv2.destroyAllWindows()&lt;/strong&gt; destroys all the opened windows rendered by the &lt;strong&gt;imshow()&lt;/strong&gt; functions and deallocates the memory used by the image vector arrays and frees them.&lt;/p&gt;



&lt;p&gt;Now your &lt;strong&gt;check.py&lt;/strong&gt; should look like the following.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;130&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VideoCapture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isOpened&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"RGB Output"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;img1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;       
    &lt;span class="n"&gt;imCopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;gray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cvtColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COLOR_BGR2GRAY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;blur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GaussianBlur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thresh1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;THRESH_BINARY_INV&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;THRESH_OTSU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;hand_resize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thresh1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Threshold"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thresh1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;contours&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hierarchy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thresh1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RETR_TREE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CHAIN_APPROX_SIMPLE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imCopy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;contours&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Draw Contours'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imCopy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waitKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
&lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;destroyAllWindows&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Run the code in your Powershell/terminal using&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python check.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;To take input for &lt;strong&gt;static images&lt;/strong&gt;, use the follwing code:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'abc.jpg'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;img2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Image"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;interrupt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waitKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;interrupt&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;destroyAllWindows&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Run the code in your Powershell/terminal using&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python check.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;&lt;strong&gt;ASSIGNMENT 1:&lt;/strong&gt; Use any 3 functions/modules in OpenCV, and commit the code in the official Expressando TDoC 2021 Repository.&lt;/p&gt;

&lt;p&gt;The Github repository where you all shall be pushing your codes on the respective projects assigned is ready.&lt;/p&gt;

&lt;p&gt;Link to the repo: &lt;a href="https://github.com/lugnitdgp/TDoC-Expressando"&gt;Github Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You are also asked to follow the tutorial video attached below which will clearly describe how you shall push your code specifically for the TDoC event. &lt;/p&gt;

&lt;p&gt;Link to the video: &lt;a href="https://youtu.be/PdYCtnmxWTM"&gt;TDoC Instruction Video&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is also an introductory video on basics of Git &amp;amp; Github so that you are well versed with the git system.&lt;/p&gt;

&lt;p&gt;Link to the video: &lt;a href="https://www.youtube.com/watch?v=p_MgO3Vyoqw&amp;amp;t=524s"&gt;Git and Github&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#checking-for-convexity-defects-in-the-camera-input"&gt;
  &lt;/a&gt;
  Checking for Convexity Defects in the Camera Input
&lt;/h2&gt;

&lt;p&gt;Since the initial input has been configured through the webcam input, it becomes important to understand the concepts of "defect" as a basic and fundamental method in the domain of detection. In this session, we are going to learn about defects and detect them in our digital video input.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Create a file named as &lt;strong&gt;'defects.py'&lt;/strong&gt; inside the directory of &lt;strong&gt;'TDoC-2021'&lt;/strong&gt;. As the name suggests, we are checking for the defects in images taken by webcam using the OpenCV library. Open the file your code-editor/IDE. The folder structure would look like the following:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;├── TDoC-2021
|     ├── &lt;span class="nb"&gt;env&lt;/span&gt;
|     ├── check.py
|     ├── defects.py
|     ├── requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; First import &lt;strong&gt;OpenCV&lt;/strong&gt;, &lt;strong&gt;NumPy (as np)&lt;/strong&gt;, and &lt;strong&gt;math&lt;/strong&gt; into the &lt;strong&gt;'defects.py'&lt;/strong&gt; file. Here, &lt;strong&gt;math&lt;/strong&gt; is present in the standard Python library, and it need not to be installed separately. It can be accomplished by the following line of code:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;After importing the packages, we need to create a VideoCapture object, which will initiate the process to retrieve the input through the webcam.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;cap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VideoCapture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; The next step involves rendering a while loop to stimulate asynchronous input through the webcam with the help of a suitable condition. In this step, we will be discussing the most common and important methods that are present in the OpenCV library, which are required for making basic projects and develop sound understanding about the various methods present in OpenCV and their uses. &lt;br&gt;
Continue in the code-editor as follows:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isOpened&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;crop_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Gesture'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;grey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cvtColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crop_img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COLOR_BGR2GRAY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;blurred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GaussianBlur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thresh1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blurred&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;127&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;THRESH_BINARY_INV&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;THRESH_OTSU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Binary Image'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thresh1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The above lines of the code is just a recap of what we did in Day 3. (REFER TO THE DOCUMENTATION OF DAY-3). Here, we initialise a while loop, which iterates as long as the webcam input returns a frame or &lt;strong&gt;cap.isOpened()&lt;/strong&gt; returns &lt;strong&gt;True&lt;/strong&gt; value. The &lt;strong&gt;cap.read()&lt;/strong&gt; takes the input of the image in the form of an image array vector. The &lt;strong&gt;flip()&lt;/strong&gt; function basically returns the inverted image of the frame taken into consideration. We define a region by means of the &lt;strong&gt;rectangle()&lt;/strong&gt; function, and then extract the region, naming it as &lt;strong&gt;crop_img&lt;/strong&gt;. It is shown by the name "&lt;strong&gt;Gesture&lt;/strong&gt;", using the function &lt;strong&gt;imshow()&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Then we apply the &lt;strong&gt;cvtColor()&lt;/strong&gt; function and convert the image into it's equivalent grayscale using &lt;strong&gt;cv2.COLOR_BGR2GRAY&lt;/strong&gt; method and name it as &lt;strong&gt;grey&lt;/strong&gt;. Next we declare the tuple &lt;strong&gt;value&lt;/strong&gt;, which contains the kernel standard deviation for x and y coordinates. This tuple is later used in the &lt;strong&gt;GaussianBlur()&lt;/strong&gt; function, where it is used as a parameter. The blurred is image is named as &lt;strong&gt;blurred.&lt;/strong&gt; Then we apply simple threshold using the modules &lt;strong&gt;cv2.THRESH_BINARY_INV&lt;/strong&gt; and &lt;strong&gt;cv2.THRESH_OTSU&lt;/strong&gt;, and naming the resultant image as &lt;strong&gt;thresh1&lt;/strong&gt;. It is shown by the name "&lt;strong&gt;Binary Image&lt;/strong&gt;", using the function &lt;strong&gt;imshow()&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;contours&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hierarchy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thresh1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RETR_TREE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CHAIN_APPROX_NONE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cnt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contours&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contourArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;boundingRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crop_img&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Next, we derive the contours from the threshold using &lt;strong&gt;cv2.RETR_TREE&lt;/strong&gt; as the retrieval method and &lt;strong&gt;cv2.CHAIN_APPROX_NONE&lt;/strong&gt; as the approximation method. We then, store the contours in the array named &lt;strong&gt;contours&lt;/strong&gt;, while the hierarchy order is stored in &lt;strong&gt;hierarchy&lt;/strong&gt;. We define a list called &lt;strong&gt;"cnt"&lt;/strong&gt;, which stores the &lt;strong&gt;external contour with the maximum area enclosed by it&lt;/strong&gt;. This refers to the area of the object, as it will have the maximum area under consideration. The function &lt;strong&gt;contourArea()&lt;/strong&gt; returns the area enclosed by the contour, and the &lt;strong&gt;max()&lt;/strong&gt; function returns the enclosed contour with the maximum area. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The key used here is: &lt;strong&gt;lambda&lt;/strong&gt;, which is a constant unit vector, used to determine the direction and order of the contours. (ADVANCED)&lt;br&gt;
Go through the following resources to know more about &lt;strong&gt;Thresholding&lt;/strong&gt; and &lt;strong&gt;Contours&lt;/strong&gt;:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://opencv24-python-tutorials.readthedocs.io/en/latest/py_tutorials/py_imgproc/py_thresholding/py_thresholding.html"&gt;Image Thresholding Tutorial&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://opencv24-python-tutorials.readthedocs.io/en/latest/py_tutorials/py_imgproc/py_contours/py_contours_hierarchy/py_contours_hierarchy.html"&gt;Contours and Hierarchy Tutorial&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;cv2.boundingRect()&lt;/strong&gt; is a function used to create an &lt;strong&gt;approximate rectangle of minimum area&lt;/strong&gt; which encloses the object/contour that is passed into the function as a parameter. This function’s primary use is to highlight the area of interest after obtaining the image’s outer shape, or the external contour. With proper markings, the users can easily highlight the desired aspect in an image. It ensures clear focus and better understanding of the operations. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cv2.boundingrect()&lt;/strong&gt; returns &lt;strong&gt;4 numeric values&lt;/strong&gt; when the contour is passed as an argument. These 4 values correspond to &lt;strong&gt;x, y, w, h&lt;/strong&gt; respectively. These values are more described as –&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;x&lt;/strong&gt; - X coordinate of the contour, closest to the origin (Top left of the window)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;y&lt;/strong&gt; - Y coordinate of the contour, closest to the origin (Top left of the window)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;w&lt;/strong&gt; - Width of the rectangle which will enclose the contour.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;h&lt;/strong&gt; - Height of the rectangle which will enclose the contour.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kelRaEJr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76585827/138156383-ea836bb9-4164-42ad-aabe-093cc9a7b28d.png" width="601" height="439"&gt;&lt;/h1&gt;

&lt;p&gt;The above shows the use of &lt;strong&gt;boundingrect()&lt;/strong&gt; function to enclose all the 3 shapes in the figure.&lt;/p&gt;

&lt;p&gt;Next we draw a rectangle using the &lt;strong&gt;rectangle()&lt;/strong&gt; function, with the coordinates from &lt;strong&gt;(x,y)&lt;/strong&gt; to &lt;strong&gt;(x+w,y+h)&lt;/strong&gt; as the diagonal over the &lt;strong&gt;crop_img.&lt;/strong&gt; This serves as an enclosure to the contours. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;hull&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convexHull&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;drawing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crop_img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uint8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;drawing&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;drawing&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="n"&gt;hull&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Contours'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;drawing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-convex-hull"&gt;
  &lt;/a&gt;
  What is a 'Convex Hull'?
&lt;/h2&gt;

&lt;p&gt;A Convex object is one with &lt;strong&gt;no interior angles greater than 180 degrees&lt;/strong&gt;. A shape that is not convex is called &lt;strong&gt;Non-Convex or Concave&lt;/strong&gt;. &lt;strong&gt;Hull&lt;/strong&gt; means the exterior or the shape of the object. Therefore, the &lt;strong&gt;Convex Hull of a shape&lt;/strong&gt; or a group of points is a tight fitting convex boundary around the points or the shape. Any deviation of the object from this hull can be considered as &lt;strong&gt;convexity defect&lt;/strong&gt;. &lt;/p&gt;

&lt;h1&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wMlJdEQs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76585827/138156744-963e35ea-5548-4a96-b829-e6c41adcf1f3.png" width="880" height="374"&gt;&lt;/h1&gt;

&lt;p&gt;This is an example of a convex hull.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-display-the-convex-hull-"&gt;
  &lt;/a&gt;
  How to display the Convex Hull ?
&lt;/h2&gt;

&lt;p&gt;OpenCV provides a function &lt;strong&gt;convexHull()&lt;/strong&gt; which stores all the points of the hull in the form of list/array of points, on passing &lt;strong&gt;cnt&lt;/strong&gt; as the contour array. &lt;br&gt;
The next line of the program makes use of a &lt;strong&gt;NumPy&lt;/strong&gt; array to store the &lt;strong&gt;crop_img&lt;/strong&gt;, and using the function &lt;strong&gt;np.zeroes()&lt;/strong&gt;, it converts the entire image to &lt;strong&gt;black&lt;/strong&gt;. &lt;br&gt;
Here, we have used black background to clearly visualise the contours. &lt;strong&gt;np.uint8&lt;/strong&gt; is an 8-bit unsigned integer basically, used to define the source of image.&lt;/p&gt;

&lt;p&gt;Then we use the &lt;strong&gt;drawContours()&lt;/strong&gt; function to draw the &lt;strong&gt;contour&lt;/strong&gt; and the &lt;strong&gt;hull&lt;/strong&gt; using &lt;strong&gt;green&lt;/strong&gt; and &lt;strong&gt;red&lt;/strong&gt; colours respectively, over the image "&lt;strong&gt;drawing&lt;/strong&gt;", which is the black coloured background of the same size as "&lt;strong&gt;crop_img&lt;/strong&gt;". Then we show the output under the name "&lt;strong&gt;Contours&lt;/strong&gt;", using the function &lt;strong&gt;imshow()&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Next, we have to detect the defects by making use of the &lt;strong&gt;Convex Hull&lt;/strong&gt;. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-are-convexity-defects"&gt;
  &lt;/a&gt;
  What are 'Convexity Defects'?
&lt;/h2&gt;

&lt;p&gt;Any deviation of the contour from its convex hull is known as the &lt;strong&gt;convexity defect&lt;/strong&gt;. &lt;br&gt;
OpenCV provides a function &lt;strong&gt;cv2.convexityDefects()&lt;/strong&gt; for finding the convexity defects of a contour. This takes as input, the contour and its corresponding hull indices and returns an array containing the convexity defects as output. &lt;/p&gt;

&lt;h1&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aOFAHf4I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76585827/138157245-829397c3-4990-4d7e-8b84-fd77a7aa19d6.png" width="624" height="438"&gt;&lt;/h1&gt;

&lt;p&gt;This figure shows the depiction of the hull, contours and the defect.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;hull&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convexHull&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;returnPoints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;defects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convexityDefects&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;hull&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We redeclare &lt;strong&gt;hull&lt;/strong&gt; with an extra parameter &lt;em&gt;&lt;strong&gt;returnpoints=False&lt;/strong&gt;&lt;/em&gt;. This will give us the indices of the contour points that make the hull. The function &lt;strong&gt;convexityDefects()&lt;/strong&gt; is used to find the defects directly by passing the contours array (cnt) and the hull. &lt;/p&gt;

&lt;p&gt;Convexity Defects returns an array where each row contains these values :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;start point&lt;/strong&gt; as 's'&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;end point&lt;/strong&gt; as 'e'&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;farthest point&lt;/strong&gt; as 'f'&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;approximate distance to farthest point&lt;/strong&gt; as 'd'&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; Now we use some mathematical expressions to determine the number of convexity defects in the hull, and count them accordingly.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;defects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
        &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defects&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;far&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;far&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;far&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;far&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;far&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;acos&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;count_defects&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crop_img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;far&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crop_img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here, &lt;strong&gt;defects&lt;/strong&gt; returns an array where each row contains these values &lt;strong&gt;[start point, end point, farthest point, approximate distance to farthest point] , i.e. (s,e,f,d)&lt;/strong&gt;. We segment and store each of them as a separate independent 2D array, with y-coordinate as 0. These arrays are later converted into a tuple of coordinates, and they are named as &lt;strong&gt;start&lt;/strong&gt;, &lt;strong&gt;end&lt;/strong&gt; and &lt;strong&gt;far&lt;/strong&gt;. Here, &lt;strong&gt;start&lt;/strong&gt; and &lt;strong&gt;end&lt;/strong&gt; points lie on the contour, whereas &lt;strong&gt;far&lt;/strong&gt; points lie on the hull. We, then use the basic distance formula to calculate the lengthd of &lt;strong&gt;a&lt;/strong&gt;, &lt;strong&gt;b&lt;/strong&gt; and &lt;strong&gt;c&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Now, this is Math time! Let’s understand the &lt;strong&gt;cosine theorem&lt;/strong&gt;.&lt;br&gt;
In trigonometry, the law of cosines relates the lengths of the sides of a triangle to the cosine of one of its angles. Using notation as in the given figure, the law of cosines states where &lt;strong&gt;gamma&lt;/strong&gt; denotes the angle contained between sides of lengths &lt;strong&gt;a&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; and opposite the side of length &lt;strong&gt;c&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FvoHSoN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/258/1%2AzWCg03itsV2E_EiNiXPDEQ.png" width="258" height="156"&gt;&lt;/h1&gt;

&lt;p&gt;The formula for the same is given below:&lt;/p&gt;

&lt;h1&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bSBFkGXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/331/1%2A65KdbkLNmdNrZmtwsQ05pQ.png" width="331" height="57"&gt;&lt;/h1&gt;

&lt;p&gt;By seeing this formula now we understand that if we have the parameters &lt;strong&gt;a&lt;/strong&gt;, &lt;strong&gt;b&lt;/strong&gt; and &lt;strong&gt;c&lt;/strong&gt;, then we can find &lt;strong&gt;gamma&lt;/strong&gt;, the angle between the sides &lt;strong&gt;a&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For finding gamma, the following formula is used:&lt;/p&gt;

&lt;h1&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xWEsny4X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/310/1%2Aer17-GcEg3K9dUmsODTi8w.png" width="310" height="93"&gt;&lt;/h1&gt;

&lt;p&gt;The pictorial depiction of the following would look like the following:&lt;/p&gt;

&lt;h1&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lL9IEjZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/318/1%2AMKShVvV1S-XUOqRJ5AbN-w.jpeg" width="318" height="426"&gt;&lt;/h1&gt;

&lt;p&gt;Now, gamma is always &lt;strong&gt;less than or equal to 90 degrees (maximum)&lt;/strong&gt;, So we can say: &lt;strong&gt;If gamma is less than 90 degree or pi/2, we consider it as a finger.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By this point, we can easily derive the three sides: &lt;strong&gt;a, b, c&lt;/strong&gt; (see CODE) and from the cosine theorem we can derive &lt;strong&gt;gamma&lt;/strong&gt; or &lt;strong&gt;angle between two fingers.&lt;/strong&gt; As you read earlier, if gamma is less than 90 degree we treated it as a finger. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We convert gamma into &lt;strong&gt;degrees&lt;/strong&gt; by multiplying with &lt;strong&gt;57&lt;/strong&gt;, as &lt;strong&gt;acos()&lt;/strong&gt; function returns the angle in &lt;strong&gt;radians&lt;/strong&gt;.&lt;br&gt;
We then check if the angle is less than or equal to 90 degrees, and if it is true, we increase the value of &lt;strong&gt;count_defects&lt;/strong&gt; by &lt;strong&gt;1&lt;/strong&gt;. The existence of an angle less than 90 denotes the presence of defects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After knowing gamma we just draw circle with radius &lt;strong&gt;1&lt;/strong&gt; in approximate distance to farthest points. The &lt;strong&gt;far&lt;/strong&gt; points are denoted by the line drawn by &lt;strong&gt;cv2.line()&lt;/strong&gt;. The circle drawn would not be uniform as the farthest points are not present in a straight line. Next, we display the number of defects using the function &lt;strong&gt;cv2.putText()&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The parameters of &lt;strong&gt;cv2.circle()&lt;/strong&gt; are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;img&lt;/strong&gt;: It is the image on which circle is to be drawn. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;far&lt;/strong&gt;: It is the center coordinates of circle. The coordinates are represented as tuples of two values i.e. (X coordinate value, Y coordinate value). &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;1&lt;/strong&gt;: It is the radius of circle. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[0,0,255]&lt;/strong&gt;: It is the color of border line of circle to be drawn in BGR index.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;-1&lt;/strong&gt;: It is the thickness of the circle border line in px. Thickness of -1 px will fill the circle shape by the specified color.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The parameters of &lt;strong&gt;cv2.line()&lt;/strong&gt; are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;crop_img&lt;/strong&gt;: It is the image on which line is to be drawn. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;start&lt;/strong&gt;: It is the starting coordinates of line. The coordinates are represented as tuples of two values i.e. (X coordinate value, Y coordinate value).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;end&lt;/strong&gt;: It is the ending coordinates of line. The coordinates are represented as tuples of two values i.e. (X coordinate value, Y coordinate value). &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[0,255,0]&lt;/strong&gt;: It is the color of border line of circle to be drawn in BGR index.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;2&lt;/strong&gt;: It is the thickness of the circle border line in px.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The parameters of &lt;strong&gt;cv2.putText()&lt;/strong&gt; are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;img&lt;/strong&gt;: It is the image on which text is to be drawn.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;"Number : 2"&lt;/strong&gt;: It is the text string to be drawn on the image.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;(50,450)&lt;/strong&gt;: It is the coordinates of the bottom-left corner of the text string in the image. The coordinates are represented as tuples of two values i.e. (X coordinate value, Y coordinate value).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cv2.FONT_HERSHEY_SIMPLEX&lt;/strong&gt;: It denotes the font type, used in OpenCV.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;1&lt;/strong&gt;: It is the fontScale factor that is multiplied by the font-specific base size.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;(255,255,255)&lt;/strong&gt;: It is the color of text string to be drawn in BGR. Here, the colour is white. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;1&lt;/strong&gt;: It is the thickness of the line in px.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;fonts&lt;/strong&gt; available in OpenCV are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FONT_HERSHEY_SIMPLEX&lt;/li&gt;
&lt;li&gt;FONT_HERSHEY_PLAIN&lt;/li&gt;
&lt;li&gt;FONT_HERSHEY_DUPLEX&lt;/li&gt;
&lt;li&gt;FONT_HERSHEY_COMPLEX&lt;/li&gt;
&lt;li&gt;FONT_HERSHEY_TRIPLEX&lt;/li&gt;
&lt;li&gt;FONT_HERSHEY_COMPLEX_SMALL&lt;/li&gt;
&lt;li&gt;FONT_HERSHEY_SCRIPT_SIMPLEX&lt;/li&gt;
&lt;li&gt;FONT_HERSHEY_SCRIPT_COMPLEX&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;If there are &lt;strong&gt;n&lt;/strong&gt; defects, then there exists &lt;strong&gt;n-1&lt;/strong&gt; fingers under detection.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;count_defects&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Number : 2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;count_defects&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Number : 3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;count_defects&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Number : 4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;count_defects&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Number : 5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;count_defects&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Number : 6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Number : 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Defects'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;crop_img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The number of defects will be displayed as follows, which will be rendered by the name of &lt;strong&gt;"Defects"&lt;/strong&gt;, using &lt;strong&gt;imshow()&lt;/strong&gt;:&lt;/p&gt;

&lt;h1&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FHcHqMgH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/318/1%2AXH_RIgJ0UglxkWxbeR7nXQ.jpeg" width="318" height="426"&gt;&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Step 8:&lt;/strong&gt; Now, after checking for the defects, it is time to proceed for the termination of the while loop and close all the windows and close our Video Capture object.&lt;/p&gt;

&lt;p&gt;To exit the program on a specified keyboard interrupt, type the following code:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waitKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;

&lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;destroyAllWindows&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now the loop breaks when the key is entered, and exits the control out of the loop.&lt;/p&gt;

&lt;p&gt;The function &lt;strong&gt;cap.release()&lt;/strong&gt; closes the webcam input and prevents any resource errors. The function &lt;strong&gt;cv2.destroyAllWindows()&lt;/strong&gt; destroys all the opened windows rendered by the &lt;strong&gt;imshow()&lt;/strong&gt; functions and deallocates the memory used by the image vector arrays and frees them.&lt;/p&gt;

&lt;p&gt;To know more about &lt;strong&gt;Convexity Defects&lt;/strong&gt;, go here: &lt;a href="https://theailearner.com/2020/11/09/convexity-defects-opencv/"&gt;Convexity Defects&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now your &lt;strong&gt;defects.py&lt;/strong&gt; should look like the following.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;
&lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VideoCapture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isOpened&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;crop_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Gesture'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;grey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cvtColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crop_img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COLOR_BGR2GRAY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;blurred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GaussianBlur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thresh1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blurred&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;127&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;THRESH_BINARY_INV&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;THRESH_OTSU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Binary Image'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thresh1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;contours&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hierarchy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thresh1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RETR_TREE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CHAIN_APPROX_NONE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cnt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contours&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contourArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;boundingRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crop_img&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;hull&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convexHull&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;drawing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crop_img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uint8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;drawing&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;drawing&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="n"&gt;hull&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Contours'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;drawing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;hull&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convexHull&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;returnPoints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;defects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convexityDefects&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;hull&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;count_defects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thresh1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;contours&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;defects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
        &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defects&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;far&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;far&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;far&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;far&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;far&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;acos&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;count_defects&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crop_img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;far&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crop_img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;count_defects&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Number : 2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;count_defects&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Number : 3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;count_defects&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Number : 4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;count_defects&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Number : 5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;count_defects&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Number : 6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Number : 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Defects'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;crop_img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waitKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;

&lt;span class="n"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;destroyAllWindows&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Run the code in your Powershell/terminal using&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python check.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;In the part 2 of this post, you will be learning about &lt;strong&gt;Collecting data through OpenCV, Demonstration of Data-Collection and TensorFlow, Convolutional Neural Networks (CNN)&lt;/strong&gt; any many more things. You will also learn about how live prediction works and all the things. Stay tuned for part 2!&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Project collaborators:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__601660"&gt;
  
    .ltag__user__id__601660 .follow-action-button {
      background-color: #004f70 !important;
      color: #fff7cc !important;
      border-color: #004f70 !important;
    }
  
    &lt;a href="/pritam2k" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sYINd2Pw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--k5-NDT2J--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/601660/fcc13aee-8cfe-4cc1-92c5-ef54f7cf2ac3.jpeg" alt="pritam2k image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/pritam2k"&gt;Pritam&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/pritam2k"&gt;Full-stack web developer || Network Security Admin of @editechstudio || Member of @nitdgplug || B.Tech. NIT Durgapur (2020-2024)&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class="ltag__user ltag__user__id__601613"&gt;
  
    .ltag__user__id__601613 .follow-action-button {
      background-color: #1ff4e6 !important;
      color: #000000 !important;
      border-color: #1ff4e6 !important;
    }
  
    &lt;a href="/ritabratadas343" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pwGj0EY2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vdOZIKYW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/601613/5a060c1f-483b-41fe-9649-27586bc13fd1.jpeg" alt="ritabratadas343 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/ritabratadas343"&gt;Ritabrata Das&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/ritabratadas343"&gt;Open-Source Fanatic || Full-Stack Developer || Graphic Designer || C.P. Enthusiast || CTF Player&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class="ltag__user ltag__user__id__601618"&gt;
  
    .ltag__user__id__601618 .follow-action-button {
      background-color: #000000 !important;
      color: #000000 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/amoolkk" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y48idop8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--bNPc9gm4--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/601618/f4bd7330-26a1-4caa-880f-b3787c3913b0.png" alt="amoolkk image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/amoolkk"&gt;Amool-kk&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/amoolkk"&gt;Full-stack web developer || Member of @nitdgplug || B.Tech. NIT Durgapur (2020-2024)&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;







&lt;center&gt;

&lt;p&gt;&lt;strong&gt;May the source be with you! 🐧❤️&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;


&lt;/center&gt;

</description>
      <category>machinelearning</category>
      <category>opencv</category>
      <category>tensorflow</category>
      <category>python</category>
    </item>
    <item>
      <title>Change Management in the Cloud | AWS White Paper Summary</title>
      <author>Adit Modi</author>
      <pubDate>Sat, 22 Jan 2022 17:25:33 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/change-management-in-the-cloud-aws-white-paper-summary-2o47</link>
      <guid>https://dev.to/awsmenacommunity/change-management-in-the-cloud-aws-white-paper-summary-2o47</guid>
      <description>&lt;p&gt;Like every business function, change management should act as an enabler for your organization to succeed. Just as every business has some kind of finance function to ensure that it optimizes spending, change management is essential for optimizing business risk. &lt;/p&gt;

&lt;p&gt;You will benefit from change management if you have migrated to the cloud, have a hybrid environment, or are born in the cloud. An effective change management process enables agility and reduces time to market. It ensures that resources deliver business value, reduces failed changes, and helps ensure delivery to business. &lt;/p&gt;

&lt;p&gt;An effective record of change should also act as one of your first troubleshooting references when an incident occurs.&lt;/p&gt;

&lt;p&gt;This paper discusses change management, the Cloud Adoption Framework, and the Well-Architected Framework in the context of applying governance to deploying changes to your Amazon Web Services (AWS) environment.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In a cloud computing environment, new IT resources are only a click away, which means you reduce the time to make those resources available to your developers from weeks to minutes. This results in a dramatic increase in agility for the organization, because the cost and time it takes to experiment and develop is significantly lower. Refer to Six Advantages of Cloud Computing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The more successful an organization is at increasing its agility in the cloud, the more difficult it can become to manage change. Stakeholders may have become accustomed to long release cycles using waterfall methodologies, and the transition to new ways of working that increase the frequency of releases can cause challenges. These challenges may result in increased stakeholder engagement, the introduction of unnecessary gates that hinder development progress, or unmanaged change.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make frequent, small, reversible changes. Design workloads to allow components to be updated regularly. Make changes in small increments that can be reversed if they fail (without affecting customers when possible). For more information, refer to the AWS Well-Architected Framework.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Making frequent, small, reversible changes are essential to achieve agility, and are aligned to AWS best practices and strategies for designing and operating a cloud workload. Deployment of new services, software, patches, and configuration changes can all be automated, and they should still be governed by a change process.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the cloud, you can enable this governance through policy and automation with a complete audit trail of the deployment steps. You can also preserve agility by “de-penalizing” the rollback of failed changes. In fact, to achieve agility, organizations must be willing to roll back changes that have adverse business consequences, and build the automation to make this happen.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Regular scheduled and unscheduled changes should flow through an unchanged pipeline that ensures all of your best practices are met before implementing a change in production. Different policies and procedures should exist for emergency changes, or changes that require manual processes during deployment.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#what-is-itil"&gt;
  &lt;/a&gt;
  What is ITIL?
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The framework managed by AXELOS Limited defines an internationally recognized, best practice approach to IT Service Management (ITSM). Although it builds on ISO/IEC 20000 which “provides a formal and universal standard for organizations seeking to have their Service Management capabilities audited and certified,” (ITIL Service Operation, AXELOS, 2011, page 5) ITIL goes one step further to propose operational processes to achieve the standard.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As defined by AXELOS, ITIL comprises five volumes that describe the ITSM lifecycle.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Table 1: ITIL volumes&lt;/strong&gt; &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ITIL volume&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Service strategy&lt;/td&gt;
&lt;td&gt;The service strategy stage of the ITIL service lifecycle is crucial for defining an IT service strategy that operates effectively within its business context.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Service design&lt;/td&gt;
&lt;td&gt;Through the service design stage of the service lifecycle, you can turn your strategy into a cost-effective plan that meets both current and future business needs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Service transition&lt;/td&gt;
&lt;td&gt;Best practice guidance on managing service change in a timely, cost-effective manner with minimal disruption to operations, customers, users, and the business.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Service operation&lt;/td&gt;
&lt;td&gt;Best practice guidance on efficiently and effectively delivering these services for the benefit of the business, customers and users.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Continual service improvement&lt;/td&gt;
&lt;td&gt;Best practice guidance on identifying and introducing a cycle of service management improvements, as well as a structured approach for assessing and measuring services.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#aws-cloud-adoption-framework"&gt;
  &lt;/a&gt;
  AWS Cloud Adoption Framework
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ITIL and AWS Cloud Adoption Framework (AWS CAF) are compatible. Like ITIL, AWS CAF organizes and describes all of the activities and processes involved in planning, creating, managing, and supporting modern IT services. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It offers practical guidance and comprehensive guidelines for establishing, developing, and running cloud-based IT capabilities. The AWS CAF organizes guidance into six areas of focus, called perspectives.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Table 2: AWS CAF perspectives&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Perspective&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Business&lt;/td&gt;
&lt;td&gt;Helps you move from separate strategies for business and IT to a business model that integrates IT strategy. Agile IT strategies are aligned to support your business outcomes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;People&lt;/td&gt;
&lt;td&gt;Helps Human Resources (HR) and personnel management prepare their teams for cloud adoption by updating staff skills and organizational processes to include cloud-based competencies.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Governance&lt;/td&gt;
&lt;td&gt;Integrates IT Governance and Organizational Governance. It provides guidance on identifying and implementing best practices for IT Governance, and on supporting business processes with technology.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Platform&lt;/td&gt;
&lt;td&gt;Helps you design, implement, and optimize the architecture of AWS technology based on business goals and objectives. It helps provide strategic guidance for the design, principles, tools, and policies you use.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Security&lt;/td&gt;
&lt;td&gt;Helps you structure the selection and implementation of controls. Following this guidance can make it easier to identify areas of non-compliance and plan ongoing security initiatives.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Operations&lt;/td&gt;
&lt;td&gt;Helps you to run, use, operate, and recover IT workloads to levels that meet the requirements of your business stakeholders.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;AWS CAF is an important supplement to enterprise ITSM frameworks used today because it provides enterprises with practical operational advice for implementing and operating ITSM in a cloud-based IT infrastructure. For more information, refer to the AWS Cloud Adoption Framework.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#change-management-in-itil"&gt;
  &lt;/a&gt;
  Change management in ITIL
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In ITIL, change management is part of Service Transition. That is, the transitioning of an update or something new from Service Design to Service Operation. Change management aims to standardize the process for the efficient handling of all changes. In terms of a system or process, efficiency means maximizing productivity while minimizing wasted effort or cost.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A service change is defined by ITIL as “the addition, modification or removal of authorized, planned or supported service or service component and its associated documentation.” (ITIL Service Transition, AXELOS, 2011, page 43)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Change management is defined as “the Process responsible for controlling the Lifecycle of all Changes. The primary objective of Change Management is to enable beneficial Changes to be made, with minimum disruption to IT Services.” (ITIL Service Transition, AXELOS, 2011, page 229)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Change management is not designed to minimize business risk; the process should ensure that “overall business risk is optimized.” (ITIL Service Transition, AXELOS, 2011, page 43)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Assessing risk from the business perspective can produce a correct course of action very different from that which would have been chosen from an IT perspective, especially within high-risk industries. (ITIL Service Transition, AXELOS, 2011, page 54)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Every change should deliver business value; the change management processes should be geared towards enabling that delivery. ITIL states a number of benefits for effective change management, including “reducing failed changes and therefore service disruption, defects and re-work” (ITIL Service Transition, AXELOS, 2011, page 44) and “delivering change promptly to meet business timescales". (ITIL Service Transition, AXELOS, 2011, page 44)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In any environment, a good change management process should enable the delivery of business value while protecting the business by balancing risk against business value. It should do so in a way that maximizes productivity and minimizes wasted effort or cost for all participants in the process.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#change-management-in-the-cloud"&gt;
  &lt;/a&gt;
  Change management in the cloud
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It's key to remember that all changes should be delivering business value and that change management should be focused on optimizing business risk in a way that maximizes productivity while minimizing wasted effort or cost. The AWS Cloud enables automation that optimizes this business risk by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Minimizing the possibility of human error,&lt;/li&gt;
&lt;li&gt;Enabling the creation of identical environments for predictable and testable outcomes to changes,&lt;/li&gt;
&lt;li&gt;Removing the requirement to submit changes to scale infrastructure to meet business demand, and&lt;/li&gt;
&lt;li&gt;Automatically recovering from failure and rolling back failed changes.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The benefits of automation can dramatically reduce the business risk associated with change and increase business agility, ultimately delivering more business value (which is what change is about).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The key concepts of change management remain the same in the AWS Cloud. Change delivers business value and it should be efficient. Agile methodologies and the automation capabilities of the AWS Cloud go hand in hand with the core principles of change management as they are also designed to deliver business value quickly and efficiently. There are some key areas that may require existing change processes to be modified to adapt to new methods of delivering change.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS Systems Manager Change Manager is an enterprise change management framework for requesting, approving, implementing, and reporting on operational changes to your application configuration and infrastructure. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;From a single delegated administrator account, if you use AWS Organizations, you can manage changes across multiple AWS accounts and across AWS Regions. Alternatively, using a local account, you can manage changes for a single AWS account. Use Change Manager for managing changes to both AWS resources and on-premises resources.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#configuration-items-in-the-cloud"&gt;
  &lt;/a&gt;
  Configuration items in the cloud
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For example, if an application suffers a fault in a traditional IT environment where application updates and operating system patches are installed or deployed on a server, an engineer may be tasked to investigate and either apply a fix or deploy a new server. Either of these tasks would at least require an emergency change, and could put the business at risk for a significant amount of time. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the AWS Cloud, you can use Auto Scaling groups to automate this process. Failures can be automatically detected using predefined health checks, and servers can be automatically replaced with exactly the same configuration. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This simple scenario shows the clear benefits of automation: human error is eliminated, configuration drift is eliminated, and business risk is minimized as the time to recover is dramatically reduced.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Auto Scaling groups can also be used to automatically provision additional resources to meet business demand. Again, in a traditional environment, the addition of servers may have required several business processes before approaching change management, and then a standard or normal change to implement the requirement. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the best case scenario, a lot of work was done to increase capacity; in the worst case scenario, the business was impacted and put at risk by all of the business processes required to introduce additional capacity, and it may not have been possible to meet the business demand in the timescales require.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With this example in mind, any manual approval steps required to recover from failure or scale capacity to meet business demand inherently introduce risk to the business. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A change is considered to be the addition, modification, replacement, or removal of a configuration item. When approval is required to make a change to a configuration item, existing change management processes may forbid these automated scenarios. This scenario is where it may help to redefine what items are considered to be configuration items.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the previous example, it is not the servers themselves that are the configuration items when they are in an Auto Scaling group, because they are transient and potentially non-configurable items. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Auto Scaling group and the image that is used to create the servers should be considered as the configuration items because they are the items that may put the business at risk if they are configured incorrectly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To manage configuration items In the AWS Cloud, AWS Config can be used to assess, audit and evaluate the configuration of AWS resources allowing you to continuously monitor and record AWS resource configurations. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With AWS Config, you can track the relationships among resources and review resource dependencies prior to making changes. Once a change occurs, you can quickly review the history of the resource's configuration and determine what the resource’s configuration looked like at any point in the past. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS Config provides you with information to assess how a change to a resource configuration would affect your other resources, which minimizes the impact of change-related incidents.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS CloudFormation change sets enable you to preview how proposed changes to a stack might affect your running resources; for example, to check whether your changes will delete or replace any critical resources. AWS CloudFormation makes the changes to your stack only after you decide to deploy the Change Set.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#automation"&gt;
  &lt;/a&gt;
  Automation
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Another key consideration is understanding the business risk when deploying in the AWS Cloud. Regardless of whether or not a deployment is an application, a patch, or a configuration change, an optimized cloud configuration can automate the deployment process through an unchanged pipeline. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This ensures repeatability and consistency across multiple environments, as well as enabling automation of software testing, compliance testing, security testing, and functional testing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Although this does not guarantee against a change having an adverse impact, it does allow risks to be reduced, and those automated processes should not be reconsidered for every change. It is the actual configuration change itself that should have the focus.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For example, if an automated security test is approved for deployment purposes, the security review during the change approval process can be dramatically reduced or even eliminated entirely in the appropriate circumstances. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Repeatability and consistency throughout the lifecycle of a workload and its deployment should reduce the burden on the examination of changes by the Change Approval Board. The focus should be on how changes are delivered (the pipeline) and the automation of tests that can reduce manual testing and scrutiny by the Board, both of which are prone to human error.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS CodePipeline automates your software release process, enabling you to rapidly release new features to your users. With CodePipeline, you can quickly iterate on feedback and get new features to your users faster. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Automating your build, test, and release process enables you to quickly and easily test each code change, and catch bugs while they are small and simple to fix. You can ensure the quality of your application or infrastructure code by running each change through your staging and release process.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;EC2 Image Builder significantly reduces the effort of keeping images up-to-date and secure by providing a simple graphical interface, built-in automation, and AWS-provided security settings. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With Image Builder, there are no manual steps for updating an image, nor do you have to build your own automation pipeline. Creating a golden image using EC2 Image Builder significantly reduces the risk of non-compliant images being used, as well as improving security, consistency and compliance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using AWS Systems Manager, you can automate operational tasks to help make your teams more efficient. With automated approval workflows and runbooks with rich text descriptions, you can reduce human error and simplify maintenance and deployment tasks on AWS resources. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can use predefined automation runbooks, or build your own to share for common operational tasks such as stopping and restarting an EC2 instance. Systems Manager also has built-in safety controls, enabling you to incrementally roll out new changes and automatically halt the roll-out if errors occur.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#remediation"&gt;
  &lt;/a&gt;
  Remediation
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Changes should not be approved without considering the consequences of a failure. “Ideally, there will be a back-out plan, which will restore the organization to its initial situation” (ITIL Service Transition, AXELOS, 2011, page 48).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The AWS Cloud enables back-out plans to be fully automated using repeatable processes. Not all changes are reversible and “remediation may require a revisiting of the change itself in the event of failure” (ITIL Service Transition, AXELOS, 2011, page 48).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deployments in the AWS Cloud that use an automated pipeline allow changes to be redeployed quickly and safely, minimizing risk and reducing business impact. In certain scenarios, it may not be possible to back-out changes or redeploy, in which case it might be that “it requires invoking the organization’s business continuity plan.” (ITIL Service Transition, AXELOS, 2011, page 48)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Even in the most severe cases, using continuous data protection in the cloud can enable sub-second recovery point objectives (RPOs), and recovery time objectives (RTOs) can be measured in minutes. Refer to CloudEndure Disaster Recovery for more information. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Crucially, where it’s not possible to back out changes, the AWS Cloud provides methods to significantly reduce business risk and impact of a failed change by making it quicker and easier to redeploy or invoke disaster recovery plans.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Modern deployment methods in the cloud allow for fast or instant rollback. For example, with blue/green deployments, you can make a change to a workload by deploying an identical copy (green) of the live environment (blue) with the configuration change. Users can then be switched to the new environment (green) while the old live environment (blue) remains available, but idle.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In this scenario, if a failure is discovered, users can be instantly redirected back to the blue environment, and the business impact is greatly reduced. It is also possible to combine this approach with a canary release that is easily enabled in the cloud. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With this approach, you can redirect a subset of users to the new deployment, assess its efficacy and gradually increase the number of users on the new deployment until all users are using the new deployment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There are other considerations when choosing a method of deployment, but the key for change management is the risk to the business of a change deployed in a manner like this is greatly reduced.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS CodeDeploy helps maximize your application availability during the software deployment process. It introduces changes incrementally and tracks application health according to configurable rules. Software deployments can easily be stopped and rolled back if there are errors.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS CloudFormation rollback triggers monitor the state of your application during stack creation and updating, and enable you to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For each rollback trigger you create, you specify the CloudWatch alarm that AWS CloudFormation should monitor. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS CloudFormation monitors the specified alarms during the stack create or update operation, and for the specified amount of time after all resources have been deployed. If any of the alarms goes to ALARM state during the stack operation or the monitoring period, AWS CloudFormation rolls back the entire stack operation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS AppConfig supports best practices by rolling out configuration changes instantly or gradually. The configuration change is monitored over a time period that customers define. If you configure alarms in Amazon CloudWatch, AWS AppConfig can automatically rollback configuration changes in the event that those alarms are triggered.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#adapting-change-management-to-the-cloud"&gt;
  &lt;/a&gt;
  Adapting change management to the cloud
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;There are two areas in which change process may need to be adapted. Because the risk and impact to the business of a failed change is greatly reduced, changes can be made more frequently and with more confidence in the rollback plan. As a result, the second area for consideration is the acceptance of rolling back changes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If failed changes have a much lower impact due to the speed and consistency of roll back, activating roll backs should be considered to be part of the normal process. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This is particularly true if it is possible to quickly remediate the issue and push it through the same automated pipelines to quickly deliver the original intended business value of the change.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With these considerations in mind, if automation, pipelines, and deployment methods are in place, it may be possible to reconsider the approach to standard changes. A standard change is where there is a defined trigger to initiate the change request. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In addition, in a standard change, actions are well known, documented, and proven; authority is given in advance (or pre-authorized); and the risk is usually low. If the appropriate automation, testing, and deployment strategies are put in place, it should result in a scenario where large, infrequent, and risky changes are transformed in to small, frequent, low risk changes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;By understanding the risk-reduction strategies that are enabled by the AWS Cloud, it should be possible and it may even be necessary to widen the scope of a standard change to include deployments that would have previously been considered as normal changes due to the risks associated with them in traditional IT environments.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As changes become more frequent due to agile methodologies and increased automation, there is a risk that change management becomes overburdened with normal changes which can lead to delaying changes due to bandwidth constraints or, important details are missed as changes are not properly scrutinized due to resource constraints. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Both of these scenarios introduce business risk which change management aims to optimize. In an environment of small, frequent changes, standard changes should become the new normal so proper scrutiny can be given to normal changes, optimizing business risk and enabling the delivery of business value.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A reduction in the size of a change reduces the risk of disruption. Smaller changes also mean that change can happen more frequently. By changing more frequently, the organizations capability of changing is improved. Increased capability of change leads, in turn, to lower risk of disruption (ITIL 4: High-Velocity IT, AXELOS, 2020, page 89).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can use deployment tools such as AWS CodePipeline, a continuous integration and continuous delivery service which define release process workflow. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CodePipeline can pull source code directly from a repository, run builds and unit tests in AWS CodeBuild and then deploy changes into staging or production environment using AWS CodeDeploy if build and test cases are successful. CodePipeline automates the entire release process which reduces manual errors, increasing agility and business value allowing you to optimize business risk.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#service-transition"&gt;
  &lt;/a&gt;
  Service transition
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;After a release has been approved via the change management process and all the appropriate project management, release, and deployment management steps have been followed, the release is deployed and enters into a process of service validation and testing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It's worth pausing here to determine the scope of service validation and testing within the AWS Cloud. This is best illustrated by understanding the AWS Shared Responsibility Model for security. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The validation and testing of a service should be limited to the areas in this diagram that are in scope for the customer. However, it is critical that operations have an operational understanding of any managed services before acceptance into service.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CIYzCcrx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5o3rv99cskvq4qx59wgu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CIYzCcrx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5o3rv99cskvq4qx59wgu.png" alt="Image description" width="880" height="482"&gt;&lt;/a&gt; &lt;br&gt;
&lt;strong&gt;Shared Responsibility Model&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;As previously stated, automation, integration, and deployment tools in the AWS Cloud allow the business to make small, frequent changes that reduce business risk and introduce business value at an increased rate. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The introduction of the cloud should not change the process of service validation and testing, but the rate of change will lead to an increased requirement for validation and testing that may require changes to the implementation of the process and the focus of the stakeholders.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Changes introduce business value. It is important that releases meet customer expectations and that IT operations teams are able to support this new added business value. The criteria for assessing this value in the cloud should not change from what already exists, but the organization must be prepared for the increase in releases and adapt the implementation of these processes by introducing automation to the processes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A new service requires consent from the customer that the new service meets agreed service level requirements. The current best practices of tracking your current service level objectives and tracking service level agreement (SLA) breaches still apply. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This can be done by a third-party monitoring service for external facing services. For internal services, this must be tracked with monitoring and metrics on the primary business function of the services. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Separate service level requirements may exist for different aspects of services, and additional dimensions may be required as metrics to indicate which aspect is being measured. Indeed, it is often this monitoring that drives an automated rollback, if it indicates that there is a trend towards violating an SLA.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Operations must be able to support a new release or service before it is made available to the customer. With the correct tooling, this process can be largely automated by automating the creation of documentation, provisioning automated runbooks and playbooks, and building predefined and automated patching plans. This process can be made even more robust by using the correct tooling to ensure that only pre-approved services are used.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The focus of a test manager should be to automate service acceptance testing as much as is possible. This is made easier in the cloud with a wide variety of tools that are available for both validation and testing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the AWS Cloud, Amazon CloudWatch provides you with data and actionable insights to monitor your applications running on AWS or on-premises, respond to system-wide performance changes and get a unified view of operational health. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can set alarms, visualize logs and metrics side by side, take automated actions, troubleshoot issues, and discover insights to keep your applications running smoothly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CloudWatch provides different features, including Dashboards, Synthetic monitoring, CloudWatch Application Insights, and ServiceLens, which can be used during and after Service Transition to ensure that actionable alarms are present to prevent or remediate against service degradation or failure.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Access to metrics, logs and dashboards to monitor the health of application helps teams to resolve problem faster, reducing business risk.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#reliability"&gt;
  &lt;/a&gt;
  Reliability
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Change implementation has a direct impact on the availability of workloads, and the ability to recover from logical disasters. There is detailed information in the AWS Well-Architected Framework Reliability Pillar whitepaper, specifically in the ‘Operational Considerations for Availability’ section. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Automation of change is foremost in maximizing availability. If you have any manual processes, you lose critical time awaiting those manual actions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use deployment patterns that reduce risk, such as blue-green or canary deployments. Ensure that there is comprehensive testing in pipelines, including load, performance under load, and resiliency testing. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Effective monitoring on the key performance indicators (KPIs) is a requirement, and automated rollback should be triggered if those KPIs indicate that thresholds are likely to be exceeded.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test disaster recovery thoroughly to ensure that recovery objectives are met. All backing up of data must be done through automation. Regularly restore and recover in order to ensure that your recovery process and procedures are valid.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;These considerations improve the reliability of workloads and decrease risk. Change management processes should reflect this reduction in risk and organizations should consider that because the “risk is usually low and always well understood,” (ITIL Service Transition, AXELOS, 2011, page 48) automated, frequent, small, and reversible changes can be processed as standard changes.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Automation, integration, and deployment tools in the cloud allow the business to make small, frequent changes that reduce business risk and introduce business value at an increased rate. Change processes should be adapted to reflect what is actually being changed; the increase in the amount of change and the reduced risk associated with these changes. For changes that do not take advantage of automation, consistency, or rollback, the change process should remain as is.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, it’s always worth considering the business impact and risk of not implementing a change or introducing delay, and remembering that the purpose of managing change is to optimize business risk.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/whitepapers/latest/change-management-in-the-cloud/change-management-in-the-cloud.html?did=wp_card&amp;amp;trk=wp_card"&gt;Original paper&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Enable feature-rich Logging for FastAPI on Google Cloud Logging</title>
      <author>Florian Flock</author>
      <pubDate>Sat, 22 Jan 2022 17:19:29 +0000</pubDate>
      <link>https://dev.to/floflock/enable-feature-rich-logging-for-fastapi-on-google-cloud-logging-j3i</link>
      <guid>https://dev.to/floflock/enable-feature-rich-logging-for-fastapi-on-google-cloud-logging-j3i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I recently evaluated some of the typical Python web frameworks for a small REST API project. Previously I worked with Flask, but something caught me to try another framework this time. To put it very briefly - this time, I decided to use &lt;a href="https://fastapi.tiangolo.com/"&gt;FastAPI&lt;/a&gt;, a modern and high-speed framework for use with REST APIs. FastAPI also has other advantages. For example, the documentation of the endpoints is already automatically generated in OpenAPI format and output as a Swagger interface. Smart!&lt;/p&gt;

&lt;p&gt;Since many services are already running in the Google Cloud, it was evident for this project to fall back on the hosting services of the Google Cloud. New framework and new infrastructure would feel overwhelming. &lt;/p&gt;

&lt;p&gt;My API project processes financial data, and accordingly, I wanted to make sure that the logging of activities is clean and traceable. Sometimes I need to reproduce step by step of the processors in order to understand where adaptions to the business logic is needed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-cloud-logging"&gt;
  &lt;/a&gt;
  Google Cloud Logging
&lt;/h2&gt;

&lt;p&gt;Google Cloud offers a product called &lt;a href="https://cloud.google.com/logging"&gt;Google Cloud Logging&lt;/a&gt; for logging and tracing. All log entries are collected centrally and retrieved using a custom query language.&lt;/p&gt;

&lt;p&gt;With most hosting options in the Google Cloud, the log entries are collected and processed via Fluentd. Google provides documentation for a JSON object on the optimal log entry.&lt;/p&gt;

&lt;p&gt;In addition, clients are provided for the most common programming languages that convert log entries into the format shown above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install google-cloud-logging
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the case of Python, the Django and Flask frameworks are natively supported by the client. When setting up the logging client, a query is made for these two frameworks, and, if necessary, the client is set up automatically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DPB2AAn1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0poldtydwdl9f6jv5ps6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DPB2AAn1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0poldtydwdl9f6jv5ps6.png" alt="Image description" width="880" height="685"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;FastAPI is currently not supported for the comfortable out-of-the-box logic, so I have modified the logging accordingly to ensure better traceability of the log entries.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enable-log-tracing"&gt;
  &lt;/a&gt;
  Enable Log Tracing
&lt;/h2&gt;

&lt;p&gt;The main focus was to include the so-called trace ID for each log entry. This ID enables the log entries to be linked to the respective request. The additional information makes it possible to trace which log requests created entry. It is particularly advantageous when the REST API is under heavy traffic, and I should reproduce errors or warnings. I know that there are tools like OpenTelemetry. But for most applications, in my view, this is over-engineering, especially for stand-alone applications (not in the context of a microservice architecture).&lt;/p&gt;

&lt;p&gt;However, if applications are hosted with the products App Engine, Cloud Functions or Cloud Run, the GCP proxy technology adds a special incoming request header:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;X-Cloud-Trace-Context: TRACE_ID/SPAN_ID;o=TRACE_TRUE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will use this header information to link the log entries together.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#file-structure"&gt;
  &lt;/a&gt;
  File Structure
&lt;/h3&gt;

&lt;p&gt;I decided to create a directory called cloud_logging. At this point it should be mentioned that it is deliberately not called logging only, as otherwise there may be complications with the build-in packages of the same name.&lt;/p&gt;

&lt;p&gt;The structure after setup of FastAPI and my logging adaptation looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;|-- Dockerfile
|-- cloud_logging
|   |-- __init__.py
|   |-- filter.py
|   |-- middleware.py
|   `-- setup.py
|-- main.py
|-- readme.md
`-- requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#middleware"&gt;
  &lt;/a&gt;
  Middleware
&lt;/h3&gt;

&lt;p&gt;Let's start with the middleware. This class implements the BaseHTTPMiddleware class provided by Starlette and is mainly used to provide additional logic for all incoming requests. Essentially, two important things are done here. Firstly, essential information about the request is written into a Python dictionary. Secondly, it checks whether the previously mentioned header is available.&lt;/p&gt;

&lt;p&gt;Both pieces of information are processed and written into context variables. We use these variables later in the filter.&lt;/p&gt;

&lt;p&gt;The finished middleware then looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;contextvars&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi.logger&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;starlette.middleware.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseHTTPMiddleware&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RequestResponseEndpoint&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;starlette.requests&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Request&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;starlette.responses&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;JSONResponse&lt;/span&gt;

&lt;span class="n"&gt;cloud_trace_context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contextvars&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ContextVar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'cloud_trace_context'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;http_request_context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contextvars&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ContextVar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'http_request_context'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;({}))&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LoggingMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseHTTPMiddleware&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;call_next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RequestResponseEndpoint&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;'x-cloud-trace-context'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;cloud_trace_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'x-cloud-trace-context'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="n"&gt;http_request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;'requestMethod'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;'requestUrl'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;'requestSize'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s"&gt;'remoteIp'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;'protocol'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;'referrer'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;http_request&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'referrer'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'referrer'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;'user-agent'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;http_request&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'userAgent'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'user-agent'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;http_request_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;http_request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;call_next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'Request failed: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;JSONResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;'message'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#logging-filter"&gt;
  &lt;/a&gt;
  Logging Filter
&lt;/h3&gt;

&lt;p&gt;After that, it is necessary to implement a logging filter. The following filter implements the CloudLoggingFilter provided in the Google Cloud Logging Library. We overwrite the filter method, which is called for each log entry. The main task of the filter is to store the information previously stored in the middleware according to the Google Cloud Logging format. The trace header still needs a little processing.&lt;/p&gt;

&lt;p&gt;The finished filter looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;google.cloud.logging_v2.handlers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CloudLoggingFilter&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;cloud_logging.middleware&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;http_request_context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cloud_trace_context&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;GoogleCloudLogFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CloudLoggingFilter&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LogRecord&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;http_request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;http_request_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;trace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cloud_trace_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;split_header&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;trace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"projects/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/traces/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;split_header&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;

        &lt;span class="n"&gt;header_suffix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;split_header&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;span_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;'^\w+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;header_suffix&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;

&lt;p&gt;Last but not least, we have to make sure that the Python logger executes the desired logic. For this purpose, I have written a setup method that can be called when the FastAPI application is started.&lt;/p&gt;

&lt;p&gt;Essentially, this connects the logger provided by Python to Google Cloud Logging and our filter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;google.cloud.logging&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;cloud_logging.filter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GoogleCloudLogFilter&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi.logger&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setup_logging&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cloud&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_default_handler&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLevel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GoogleCloudLogFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;handlers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLevel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#main-application"&gt;
  &lt;/a&gt;
  Main Application
&lt;/h2&gt;

&lt;p&gt;When starting the FastAPI application, it is still necessary to add the middleware and execute the setup method. I have decided to use Google Cloud Logging only in the production environment; locally, the standard logger is used.&lt;/p&gt;

&lt;p&gt;The main application could then look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi.logger&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pydantic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseSettings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;cloud_logging.middleware&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LoggingMiddleware&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;cloud_logging.setup&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup_logging&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Settings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseSettings&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'development'&lt;/span&gt;


&lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Settings&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'production'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;setup_logging&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_middleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LoggingMiddleware&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLevel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;root&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'DEBUG LOG'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'ERROR LOG'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'WARNING LOG'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'INFO LOG'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'message'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Hello World'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0PD2a4Ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jasoth3o2lzzr1y7es2s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0PD2a4Ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jasoth3o2lzzr1y7es2s.png" alt="Image description" width="880" height="412"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Clean log entries are one of the most important things for me when it comes to programming robust applications. Even though the process described here is not yet perfect, the log entries in the Google Cloud interface look great. And with the help of the trace, the log entries that belong together can now be analysed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2K-_9UN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7p5x1mb2na7e2aiddtx1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2K-_9UN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7p5x1mb2na7e2aiddtx1.png" alt="Image description" width="880" height="415"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Cover Photo by &lt;a href="https://unsplash.com/@cdr6934?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Chris Ried&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/python?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>googlecloud</category>
      <category>logging</category>
      <category>fastapi</category>
    </item>
    <item>
      <title>The price of free time: programmer’s guide to helping a Non-profit</title>
      <author>Artur Piszek</author>
      <pubDate>Sat, 22 Jan 2022 17:03:15 +0000</pubDate>
      <link>https://dev.to/artpi/the-price-of-free-time-programmers-guide-to-helping-a-non-profit-31a4</link>
      <guid>https://dev.to/artpi/the-price-of-free-time-programmers-guide-to-helping-a-non-profit-31a4</guid>
      <description>&lt;p&gt;Congratulations! You have decided to help out a Non-Profit. Full of energy, and good intentions, you have embarked on a journey to use your professional skills to help a cause.&lt;/p&gt;

&lt;p&gt;It’s a win-win: Surely, with a better website / CRM / tech, they will be able to help a few more people. You, on the other hand, will meet interesting folk, do something purposeful (as opposed to optimizing button colors at your day job), and learn a few things.&lt;/p&gt;

&lt;p&gt;Here is what you need to know to not go insane:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-benefits-of-helping-a-nonprofit"&gt;
  &lt;/a&gt;
  The benefits of helping a Non-profit
&lt;/h2&gt;

&lt;p&gt;You probably have personal reasons to help a Non-profit. Working on hard problems with friends is one of the most fulfilling things you can do with your life. If you are not working on a world-changing startup and you need a respite from the drudgery of corporate existence, a Non-Profit may be your best next bet – the purpose and mission are plentiful.&lt;/p&gt;

&lt;p&gt;Non-profits are also a great place to meet interesting, like-minded people. Working side-by-side you can make real friends and create deeper connections, than you would build by exchanging the latest plots of TV shows over coffee at work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-there-also-are-powerful-benefits-directly-translating-to-your-career"&gt;
  &lt;/a&gt;
  But there also are powerful benefits directly translating to your career.
&lt;/h3&gt;

&lt;p&gt;My entire programming journey started from helping a Non-profit – a scout team I was a part of. I made my first website in 1998, graduated to building one for dad’s business, and later launched a WordPress web agency. Now I work at WordPress.com, periodically reporting to the creator of WordPress himself. During that journey, I helped my high school, a local TEDx chapter, and a non-profit supporting remote work.&lt;/p&gt;

&lt;p&gt;Working on projects is the best way to learn – you get to experiment with real-world problems and you get to try out different approaches and fail; building that tacit knowledge that makes one an expert.&lt;/p&gt;

&lt;p&gt;Since you are not paid for your contributions, there is a shared understanding of what can be expected of you in a Non-Profit. You have a mandate to play a little, try out things your way, and goof off. To further boost learning, it feels more like play than work, encoding the knowledge much more effectively.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-traps"&gt;
  &lt;/a&gt;
  The traps
&lt;/h2&gt;

&lt;p&gt;As with everything in life, the downsides are directly correlated to the upsides. Yes, in a Non-Profit, you can be a bit unpredictable and inexperienced. It does not feel like work and you get a breather from a corporate feel of a professional workplace.&lt;/p&gt;

&lt;p&gt;But guess what – other people get to do that too. If you have just reserved a weekend to finish that signup page, and the people preparing the copy (texts) decided to be unprofessional – it suddenly becomes a problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-heros-thats-you-journey"&gt;
  &lt;/a&gt;
  The Hero’s (that’s you) Journey
&lt;/h2&gt;

&lt;p&gt;Let’s assume you volunteered to create a website for your favorite Non-profit. Don’t be surprised, if the whole process goes like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You start full of energy and ideas.&lt;/li&gt;
&lt;li&gt;The non-profit is eager to launch a new website because they have project X coming up.&lt;/li&gt;
&lt;li&gt;Project X is the most important thing, and the website (meaning you) is a blocker.&lt;/li&gt;
&lt;li&gt;You jump straight into work! You cannot be a blocker, right? You ramp up and are ready to implement the most important piece.&lt;/li&gt;
&lt;li&gt;The texts and promotional materials are not ready, despite previous promises.&lt;/li&gt;
&lt;li&gt;You try to work around these requirements – project X is most important, right?&lt;/li&gt;
&lt;li&gt;You get a call. It seems that the “About the Team” page is most important now.&lt;/li&gt;
&lt;li&gt;Let’s do a photoshoot for the Team!&lt;/li&gt;
&lt;li&gt;You still don’t have materials for project X, but you got 10 pages of UI corrections, including a bigger logo, different button colors, and some creative ideas about the slider.&lt;/li&gt;
&lt;li&gt;You start implementing those changes, still have no materials about project X.&lt;/li&gt;
&lt;li&gt;Wait, there are changes to the changes now. Can you revert to the old button color?&lt;/li&gt;
&lt;li&gt;Sometime, after a few weeks, we finally got the Project X page to work.
The placeholder photos you chose are still there.
“About the Team” page that got 3 meetings, photoshoot, and 12 hours of your time has gotten a total of 100 visitors this month.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#things-to-watch-out-in-a-nonprofit"&gt;
  &lt;/a&gt;
  Things to watch out in a Non-profit
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-price-of-free-time"&gt;
  &lt;/a&gt;
  The price of free time
&lt;/h3&gt;

&lt;p&gt;Professional environments have learned a long time ago, that time is money. If everybody is salaried, the easiest way to turn a profit is to stop wasting people’s time. The correlation is clear and obvious.&lt;/p&gt;

&lt;p&gt;I do realize that corporate environments waste mindblowing eons of their employees’ time. This is due to the scale. Big organisms being less nimble is a law of physics called inertia.&lt;/p&gt;

&lt;p&gt;Non-profits, however, have a peculiar relationship with money. They are called &lt;strong&gt;Non-Profits&lt;/strong&gt;. Duh! They get funded through donations, grants, and sometimes sales – but they are incentivized not to run a tight operation. Volunteers’ time is treated as free, so wastefulness is not controlled. It’s up to you to say no, which is hard because non-profits attract precisely the people least likely to defend their time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-everybody-elses-sidegig-too"&gt;
  &lt;/a&gt;
  It’s everybody else’s side-gig, too
&lt;/h2&gt;

&lt;p&gt;As I mentioned – you can learn, and experiment with new techniques and approaches. But other people do too. If your work depends on graphic design, don’t be surprised when the designer comes up with something out-of-the-box, which naturally will be harder for you to implement, than the run-of-the-mill website.&lt;/p&gt;

&lt;p&gt;Other people, like you, will cut corners. The designer has a family to feed, probably a day job and the thing called life. She can’t check every resolution, think about dimensions of headlines when you cram 100 characters in a title and give the proper attention to everything.&lt;/p&gt;

&lt;p&gt;Last, but not least – without salary, recognition becomes the currency. Don’t be surprised, that “about the team” is treated as the most important page on the entire website (even if the visitors don’t care) – this is the equity paid to volunteers. Being paid with recognition also drives some folk to seek more of that compensation – they will contribute to discussions, where they have not much expertise nor understanding. These are perfect bikeshedding conditions. Beware.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nonprofits-are-passiondriven"&gt;
  &lt;/a&gt;
  Non-profits are passion-driven
&lt;/h2&gt;

&lt;p&gt;Most non-profits have a mission to fix a particular problem in the world. Hunger, poor education, lack of equality, climate change – these are all areas society is failing at and non-profits are stepping in to help.&lt;/p&gt;

&lt;p&gt;Many people are driven to work on these problems because they feel strongly about putting up with the collective screwups of society. Non-profits tend to attract people who approach most of the problems with passion and purpose, with no patience for tedious reasoning.&lt;/p&gt;

&lt;p&gt;This leads to: &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passiondrivenprojectmanagement"&gt;
  &lt;/a&gt;
  Passion-driven-project-management
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Urgency is the sole method of prioritization. Things are made urgent to ensure their completion, not because they actually are time-sensitive.&lt;/li&gt;
&lt;li&gt;Since urgency=priority, the priorities are fluid over time.&lt;/li&gt;
&lt;li&gt;Yesterday’s priority is forgotten today because somebody who feels more strongly comes in with more passion.&lt;/li&gt;
&lt;li&gt;Flashy things are more important than fulfilling the initial purpose. If you are working on a website, prepare for multiple CTAs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#nonprofit-survival-techniques"&gt;
  &lt;/a&gt;
  Non-profit survival techniques
&lt;/h2&gt;

&lt;p&gt;These techniques helped me stay sane while working within a few organizations.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Find a senior member of the organization to “report to”. Ideally somebody with corporate experience, and some tenure inside the Non-Profit. You don’t want to report to a committee.&lt;/li&gt;
&lt;li&gt;Never agree to do anything ASAP. Chances are, that before you get to it – the original request will change or be forgotten. Save yourself the revert.
Bonus points for batching change requests into sprints.&lt;/li&gt;
&lt;li&gt;They will promise you texts, materials, and whatever else you’ll need. You WILL NOT get them on time. Plan accordingly.&lt;/li&gt;
&lt;li&gt;Record yourself changing stuff in the interface – this will be a good v1 for documentation so that everyone else can implement tiny changes themselves&lt;/li&gt;
&lt;li&gt;If you are creating a website – for goodness sake, use WordPress. It will save you from reinventing the wheel.

&lt;ul&gt;
&lt;li&gt;With WP, you have ready tutorials to send people to, so you don’t have to fix every typo yourself. Chances are, that other folks have WP experience too.&lt;/li&gt;
&lt;li&gt;The next person dealing with the system will know what to do with it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use a ready template, don’t work with an empty canvas.
Yes, it will be less original than a custom-made design, but you will be able to get off the ground and focus on what’s important – content and functionality. You have no idea how many tiny details come together to make a template work.
Implementing custom design without an hourly rate will lead to an endless back-and-forth on every detail. It costs them nothing to throw in another change.
The constraints of an existing template work in your favor.&lt;/li&gt;
&lt;li&gt;Every statement you hear will be over-hyped – it’s a function of passion-driven project management. You have to do the mental math of halving the emotional charge of all statements.&lt;/li&gt;
&lt;li&gt;Remember to have fun. Despite unreasonable requests, the people you are working with are probably quite awesome. Don’t forget that, and schedule some time to meet them as people – not vendors of website updates.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Working in a Non-Profit is a process of realizing that the corporate environment has its advantages and lessons to teach you as well.&lt;/p&gt;

&lt;p&gt;Coming to work on Monday to a well-oiled machine, where every cog (including you) is humming nicely, where the work flows seamlessly through the paths of well-established processes, where everything has its place is a refreshing experience. Of course, sometime around Wednesday you are sick of it all, yearning for the freedom and creativity you get to enjoy in your organization.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://piszek.com"&gt;This post was first published on Piszek.com. Check out my site where you can find more articles like this one.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>programming</category>
      <category>volunteering</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Utilizando a bolha dev ao seu favor na busca do seu primeiro emprego!</title>
      <author>Rodrigo "Pokemaobr" Cardoso</author>
      <pubDate>Sat, 22 Jan 2022 15:51:31 +0000</pubDate>
      <link>https://dev.to/pokemaobr/utilizando-a-bolha-dev-ao-seu-favor-na-busca-do-seu-primeiro-emprego-15cf</link>
      <guid>https://dev.to/pokemaobr/utilizando-a-bolha-dev-ao-seu-favor-na-busca-do-seu-primeiro-emprego-15cf</guid>
      <description>&lt;p&gt;Ultimamente, cada vez é mais comum pessoas iniciantes em desenvolvimento entrarem nas minhas lives, postarem no twitter, facebook, instagram, linkedin, em blogs ou sites de artigos perguntando sobre como iniciar na área, mais especificamente como conseguir o primeiro emprego na área. Muitas citam bootcamps ou faculdades como caminhos “seguros” para conseguir o primeiro emprego, já que uns “garantem” a empregabilidade no fim do ciclo de estudos, e outras dão a oportunidade de entrar como estagiário, facilitando a entrada na área e posteriormente um crescimento dentro dela, porém, o que eu vejo muito é algumas dessas pessoas às vezes decepcionadas, pois, depois de um período, na maioria das vezes não muito longo, se vêem perdidas, pois, estudaram uma stack &lt;strong&gt;(conjunto de linguagens frameworks, bibliotecas e outras ferramentas com o propósito de resolver um tipo de problema específico em desenvolvimento)&lt;/strong&gt; que até agora não sabem o real motivo do porquê, já que assistiram um vídeo no youtube falando que era a stack mais usada em 2022. E, obviamente que ouviram que TI é a área que mais emprega no momento, que não faltam vagas na área &lt;strong&gt;( o que é verdade e vamos explorar isso mais a frente )&lt;/strong&gt;, que tem pessoas entrando na área ganhando R$10.000, e outras coisas que fazem a área ser um atrativo para diversos tipos de pessoas.&lt;/p&gt;

&lt;p&gt;Isso realmente é uma coisa que me vem preocupando em relação ao desenvolvimento nos dias atuais. Eu não sou parâmetro para nada, mas, quando comecei a programar não existia o tanto de conteúdo sobre desenvolvimento que tem hoje, e talvez eu nunca imaginasse que teria tanto conteúdo como temos, mas, a gente tinha um estilo de aprendizagem diferente. Na época que eu comecei a estudar eu nem imaginava poder ganhar dinheiro com desenvolvimento, eu só achava divertido criar coisas e fazia isso usando código. A gente conhecia primeiro o problema e depois estudávamos como poderíamos resolvê-lo. Então, por exemplo, se eu tivesse que resolver um problema desenvolvendo algo que envolvesse coisas de desktop, a gente iria estudar sobre delphi, java, visual basic ou outra linguagem que pudesse resolver aquele tipo de problema, se eu tivesse que fazer um site, iria estudar HTML, CSS, javascript, PHP, ASP, Flash ou outra coisa que resolvesse soluções web. Hoje em dia, muitas pessoas saem estudando qualquer coisa sem nenhuma noção do sentido de estar estudando aquilo, só porque viram em algum lugar que era a tecnologia mais quente. Antigamente a gente sabia o problema e escolhia a ferramenta para trabalhar naquele problema. Hoje em dia a gente escolhe uma ferramenta e depois procura os problemas que aquela ferramenta resolve. É tipo aquela da pessoa carpinteira que está com um martelo na mão e sai dando martelada em tudo que se pareça com prego, já que é pra dar martelada que o martelo serve. Dito isso, o primeiro conselho que tenho para você que está começando na área!!! &lt;strong&gt;Entenda os problemas que a stack que você está estudando resolve.&lt;/strong&gt; Isso é muito importante até mesmo para uma primeira entrevista na área, e, embora tudo possa parecer prego em desenvolvimento, nem tudo é.&lt;/p&gt;

&lt;p&gt;Sei que você deve estar se perguntando: “Pokemão, você falou um monte de besteira e eu vim aqui para saber como conseguir o meu primeiro emprego”, calma que a gente chega lá! &lt;strong&gt;Como premissa irei aceitar que você é uma pessoa que já está estudando desenvolvimento a algum tempo, já fez alguns pequenos projetinhos para treinar e colocou no seu github e está buscando sua primeira vaga no mercado. Caso não tenha feito isso ainda, o faça.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O segundo conselho que tenho para você que está começando na área!!! &lt;strong&gt;Não tenha medo de não conhecer muito sobre o que você está estudando, as vagas de sandy/junior quem vai dizer se você tem preparação ou não para a vaga é a empresa para a qual você estiver aplicando para a vaga e não você. Você não sabe ainda nada sobre a área e não sabe validar seus conhecimentos, deixe que a empresa faça isso. Esse tipo de vaga é exatamente para você aprender!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Não discuta comigo agora, mas, a ferramenta que move a bolha dev é o &lt;a href="https://twitter.com"&gt;Twitter&lt;/a&gt;, tenha isso como uma verdade, como sou matemático, posso dizer que isso é um axioma (algo que não preciso provar para saber que é verdade, é a verdade e aceite como tal), as outras redes sociais são altamente superficiais quando falamos de compartilhamento de conteúdo dev e também da presença das pessoas dev que realmente podem fazer algo para você e até mesmo o lugar onde essas pessoas realmente podem fazer algo para você. Se você quer ser dev e não tem Twitter, mas tem Instagram, Tiktok, Facebook, Linkedin é bom rever as coisas. “Ah pokemão, mas sou low profile!”, beleza, então não tenha nenhuma rede social, mas, isso vai reduzir suas chances de ser encontrada pelas pessoas. Bem, o terceiro conselho que tenho para você que está começando na área!!! &lt;strong&gt;Crie um twitter (deixe sua caixa de mensagem aberta para qualquer pessoa poder mandar mensagem pra você). Crie também um LinkedIn (só pra você ter um currículo rápido), e também tenha um currículo nos moldes antigos (ainda pode ser útil). E acho que você já tem um Github, né?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sabe aquela pessoa que falou lá no vídeo que a stack que ela falou para você escolher era a mais utilizada em 2022? Siga ela no Twitter. Sabe toda aquela galera dev coach que você não para de consumir conteúdo? Siga no Twitter. Sabe aquele primo da sua colega que foi quem te convenceu a largar educação física e ir para a área de TI? Siga no Twitter. Siga quem você puder na área de tecnologia e que tem a ver com o que você está estudando. Siga no Twitter. Sabe esse &lt;a href="https://twitter.com/pokemaobr"&gt;@pokemaobr&lt;/a&gt; que está escrevendo aqui pra você? Siga no Twitter.  Siga o perfil &lt;a href="https://twitter.com/Viumavaga"&gt;@Viumavaga&lt;/a&gt;, o &lt;a href="https://twitter.com/TemVagaPraJunior"&gt;@TemVagaPraJunior&lt;/a&gt;, a &lt;a href="https://twitter.com/camelouu"&gt;@camelouu&lt;/a&gt;,(uma referência em recrutamento dev no Twitter), o &lt;a href="https://twitter.com/o_gabsferreira"&gt;o_gabsferreira&lt;/a&gt; (que todo mês cria uma lista de vagas) e outros perfis com vagas para quem está começando, algumas vagas legais filtradas aparecem por lá. &lt;strong&gt;( Só não esqueça que com o passar do tempo você vai ter que parar de seguir algumas pessoas para evitar tretas devs, mas, isso é assunto para outro artigo, no começo siga qualquer pessoa e depois você vai filtrando)&lt;/strong&gt;.  ---&amp;gt; Tem essa &lt;a href="https://twitter.com/pokemaobr/status/1397309480845651970"&gt;lista aqui&lt;/a&gt; um pouco desatualizada, mas, com muita mina sensacional que é dev e ajuda a comunidade e você pode seguir no twitter &lt;strong&gt;(vai clicando em mostrar respostas que tem gente pra caramba).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Outro axioma que posso colocar aqui. Diferente de muitas áreas que já atuei e que conheço pessoas que atuam, na área de desenvolvimento a maioria das pessoas estão dispostas a te ajudar sem querer nada em troca, algumas dessas pessoas ajudam somente pelo vislumbre de que isso faz a área crescer e a roda girar, ou, pois foram ajudadas no passado e por isso querem, ou qualquer outro motivo aleatório, por isso é um axioma. Algumas das pessoas que você seguir tem DM aberto (você pode mandar uma mensagem direta para a pessoa clicando no botão no perfil dela), conte a sua história para a pessoa e avise que se a pessoa ver alguma vaga que possa se encaixar com você para que te avise. Algumas pessoas vão te ignorar, mas, a grande maioria vai lembrar e quando receber uma vaga (recebemos vagas diariamente) vai te indicar. O quarto conselho que tenho para você que está começando na área!!! &lt;strong&gt;A vaga não vai cair do céu, no começo você tem que ir em busca dela.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Show, agora você já está no radar de algumas pessoas. Como dito lá no começo do artigo, tem realmente muita vaga na área de TI e seu trabalho agora é fazer com que as pessoas tragam essas vagas até você, com uma curadoria muito bem feita, já que em geral quem vai indicar as vagas para você são pessoas que trabalham nas empresas, o que facilita na hora de entrar (recomendações são sempre bem vindas e algumas pessoas até ganham por isso :) ) . &lt;strong&gt;Vamos então utilizar da força da bolha dev para isso.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Prepare então uma thread no twitter ( uma sequência de tweets onde um é resposta do outro fazendo uma linha de raciocínio ) onde você vai se apresentar, falar um pouco dos motivos que fizeram você querer entrar para a área de TI, falar sobre a stack que você tem estudado e o que você fez (cursos, bootcamps, faculdades e outras coisas relevantes), o que você procura e no final coloque seu linkedIn, github e algum e-mail ou outro contato de rede social, em formato de texto, não invente de colocar imagens. Poste em um dia de semana em horário comercial. E avise por DM àquelas pessoas lá que você seguiu e peça para que retweetem (se você tiver alguém que realmente te conhece, é melhor ainda, pois, fará a alavancagem ficar ainda melhor. &lt;strong&gt;“Ah pokemão, mas não conheço ninguém…” (tudo bem, a galera dev retweeta fotos de gatinho o dia todo, não vai cair a mão retweetar algo para ajudar alguém)&lt;/strong&gt;. Agora é esperar um pouco para a mágica acontecer. Você vai receber como resposta algumas vagas que se encaixam no seu perfil, com curadoria de pessoas que trabalham nas empresas, vai receber dicas de pessoas da área para ajudar você a conseguir o que quer. &lt;strong&gt;(Ignore respostas bosta que sempre aparecem)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Como disse anteriormente a vaga não vai cair do céu, você vai ter que aplicar nas vagas que te mandarem, fazer entrevistas, procurar outras vagas por fora, conversar com as pessoas que vierem falar contigo. Esse processo irá te abrir um leque maior de vagas para você aplicar, &lt;strong&gt;APLIQUE PARA TODAS&lt;/strong&gt;, mas milagres não acontecem, você tem que fazer a sua parte. E, se por acaso você não conseguir uma vaga, irá conhecer várias pessoas da área que podem te dar dicas valiosas para você conseguir o seu objetivo!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pokemão, mas se todo mundo que quiser vaga fizer isso?&lt;/strong&gt; Vai ser ótimo, o algoritmo do twitter é bem aleatório para isso e cada pessoa vai atingir uma parte da bolha dev e pessoas vão se conhecer e fará com que a rede de ajuda aumente muito.&lt;/p&gt;

&lt;p&gt;Algumas pessoas que conheço fizeram esse processo e deu super certo. Uma inclusive essa semana passada, ela conseguiu algumas entrevistas e 390 seguidores em algumas horas. Como muita gente fala “Quem não é visto não é lembrado”. &lt;/p&gt;

&lt;p&gt;Uma coisa que você deve estar se perguntando… &lt;strong&gt;“Pokemão, mas porque não fazer isso no LinkedIn?”&lt;/strong&gt;, pois lá seu post vai ser invadido por infinitas pessoas coach querendo te vender planos de carreira mirabolantes ou contando histórias de superação de alguém que acordou 10 minutos mais cedo para pegar ônibus. No twitter as pessoas são mais reais, não precisam mostrar nada para ninguém e ajudam realmente as pessoas sem esperar nada em troca.&lt;/p&gt;

&lt;p&gt;Desejo que esse artigo te ajude de alguma maneira. E, se você quiser mais dicas para buscar o seu primeiro emprego, dicas para a hora da entrevista e coisas do tipo, comenta aí o que você quer para eu poder criar mais conteúdo nesse sentido. &lt;/p&gt;

&lt;p&gt;Um grande abraço para você e vamos fortalecer a bolha dev!&lt;/p&gt;

&lt;p&gt;Rodrigo “Pokemaobr” Cardoso&lt;/p&gt;

&lt;p&gt;Caso você queira me ajudar a continuar criando conteúdo para devs, me ajude no &lt;a href="https://apoia.se/pokemaobr"&gt;apoia.se&lt;/a&gt; ou assista minhas lives na &lt;a href="https://twitch.tv/pokemaobr"&gt;twitch&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>braziliandevs</category>
      <category>jobs</category>
      <category>junior</category>
      <category>sandy</category>
    </item>
    <item>
      <title>Microsoft Azure Data Fundamentals Cheat Sheet</title>
      <author>Rishita Shaw</author>
      <pubDate>Sat, 22 Jan 2022 15:51:07 +0000</pubDate>
      <link>https://dev.to/theseregrets/microsoft-azure-data-fundamentals-cheat-sheet-36kp</link>
      <guid>https://dev.to/theseregrets/microsoft-azure-data-fundamentals-cheat-sheet-36kp</guid>
      <description>&lt;p&gt;&lt;em&gt;Written with the collaborative effort of &lt;a href="http://linkedin.com/in/theseregrets"&gt;Rishita Shaw&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/igotabadidea/"&gt;Kumar Rahul&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This a cheat sheet for Microsoft Certified Exam DP-900: Microsoft Azure Data Fundamentals. &lt;br&gt;
This is not enough for preparation but it's definitely enough for revision.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vakksx1T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxkcyp2b9w3kjnposbfv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vakksx1T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxkcyp2b9w3kjnposbfv.png" alt="Dp 900" width="600" height="600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#module-1explore-core-data-concepts"&gt;
  &lt;/a&gt;
  Module 1(Explore core data concepts)
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Data&lt;br&gt;
&lt;em&gt;Structured&lt;/em&gt;: relational databases (stored in SQL Server or Azure SQL Database)&lt;br&gt;
&lt;em&gt;Unstructured&lt;/em&gt;: audio and video files, and binary data files (BLOB)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Semistructured: key-value stores and graph databases(key-value database stores data as a single collection without structure or relation) (Azure cosmodb)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Access:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read-only (management team of large org)&lt;/li&gt;
&lt;li&gt;read/write (customers)&lt;/li&gt;
&lt;li&gt;Ownership (db admin, Data analysts and data managers)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;em&gt;Data processing:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Transactional (oltp): Splitting tables out into separate groups of columns like this is called normalization it can make querying more complex.&lt;/li&gt;
&lt;li&gt;Analytical (oatp): big picture view of the information held in a database&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Relational db&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Non relational db&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A transaction is a sequence of operations that are atomic. This means that either all operations in the sequence must be completed successfully, or if something goes wrong, all operations run so far in the sequence must be undone. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ACID (Atomicity, Consistency, Isolation, Durability) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Many systems implement relational consistency and isolation by applying locks to data when it is updated. The lock prevents another process from reading the data until the lock is released. The lock is only released when the transaction commits or rolls back.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Distributed db&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;eventual consistency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Analytical workloads&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Batch processing and streaming&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Batch processing adv and disadv: adv(large vol, scheduled run) - disadv (time delay, minor issues can stop the process)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Diff b/w streaming and batch: data scope, size, performance(latency), analysis&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#module-2explore-roles-and-responsibilities-in-the-world-of-data"&gt;
  &lt;/a&gt;
  Module 2(Explore roles and responsibilities in the world of data)
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Data job role&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Database Administrators&lt;/em&gt; (operational aspects of on-premises and cloud-based database) manage databases, assign permissions to users, implement policies, manage security, storing backup copies of data and restoring data in case of any failures.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Data Engineers&lt;/em&gt; work with data, applying data cleaning routines and ingestion, identifying business rules, and turning data into useful information.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Data Analysts&lt;/em&gt; explore and analyze data to create visualizations and charts to enable organizations to make informed decisions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;TASK AND RESPONSIBILITY&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Db admin:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install, upgrade, db server &amp;amp; tools&lt;/li&gt;
&lt;li&gt;Allocating, controlling, monitoring and modifying storage &lt;/li&gt;
&lt;li&gt;Enrolling users and security&lt;/li&gt;
&lt;li&gt;Backup, restore and archive&lt;/li&gt;
&lt;li&gt;Generate reports&lt;/li&gt;
&lt;li&gt;Tools: SQL Server Management Studio, pgadmin, mysql workbench, azure data studio&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;em&gt;Data eng&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Developing, constructing, testing, acquisition, examining, automating and maintaining db and data&lt;/li&gt;
&lt;li&gt;Deploying sophisticated analytics programs, machine learning, and statistical methods.&lt;/li&gt;
&lt;li&gt;improve data reliability, efficiency, and quality and research&lt;/li&gt;
&lt;li&gt;Tools: Microsoft SQL Server , Azure SQL Database,  Azure Databricks, and Azure HDInsight , cosmodb&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;em&gt;Data Analyst&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating charts and graphs, histograms, geographical maps&lt;/li&gt;
&lt;li&gt;Transforming, improving, and integrating data&lt;/li&gt;
&lt;li&gt;Finding hidden patterns using data and delivering info by creating rich graphical dashboards and reports&lt;/li&gt;
&lt;li&gt;Tools: excel, power bi&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#module-3describe-concepts-of-relational-data"&gt;
  &lt;/a&gt;
  Module 3(Describe concepts of relational data)
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Relational db:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You design a relational db by creating a data model.
&lt;/li&gt;
&lt;li&gt;The primary key indicates the column (or combination of columns) that uniquely identify each row&lt;/li&gt;
&lt;li&gt;Foreign Key  are reference, or link to, the primary key of another table, and are used to maintain the relationships between tables&lt;/li&gt;
&lt;li&gt;All data is tabular. Entities are modeled as tables, each instance of an entity is a row in the table, and each property is defined as a column.&lt;/li&gt;
&lt;li&gt;All rows in the same table have the same set of columns. A table can contain any number of rows.&lt;/li&gt;
&lt;li&gt;Supports sql&lt;/li&gt;
&lt;li&gt;suited for OLTP applications&lt;/li&gt;
&lt;li&gt;Index&lt;/li&gt;
&lt;li&gt;contains a copy of this data in a sorted order, with pointers to the corresponding rows in the table and can create many indexes&lt;/li&gt;
&lt;li&gt;consume additional storage space and additional work can slow down operations and incur charges&lt;/li&gt;
&lt;li&gt;A clustered index physically reorganizes a table by the index key&lt;/li&gt;
&lt;li&gt;View&lt;/li&gt;
&lt;li&gt;virtual table based on the result set of a query
&lt;strong&gt;on-premises hosting vs cloud&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Iaas&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;installing and configuring the software, patching, taking backups, and restoring data&lt;/li&gt;
&lt;li&gt; virtual machine in the cloud&lt;/li&gt;
&lt;li&gt;&lt;p&gt;best for migrations and applications requiring operating system-level access&lt;br&gt;
&lt;strong&gt;PaaS&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Does not expose the underlying operating system and hardware to your applications&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Azure automatically creates the necessary virtual machines, networks, and other devices for your requirement&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Quickly handles this scaling for you,&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#module-4-explore-concepts-of-nonrelational-data"&gt;
  &lt;/a&gt;
  Module 4 (Explore concepts of non-relational data)
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Non relational db:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;enable you to store data in a very flexible manner&lt;/li&gt;
&lt;li&gt;don't impose a schema on data rather focus on the data itself&lt;/li&gt;
&lt;li&gt;store the information for entities in collections or containers&lt;/li&gt;
&lt;li&gt;Each entity should have a unique key value and are usually stored in key-value order&lt;/li&gt;
&lt;li&gt; advanced non-relational systems support indexing (Azure Cosmos DB )&lt;/li&gt;
&lt;li&gt;Semi structured:&lt;/li&gt;
&lt;li&gt;data that contains fields defined on a per-entity basis&lt;/li&gt;
&lt;li&gt;Json, Avro, ORC, and Parquet&lt;/li&gt;
&lt;li&gt;Avro is a row-based format. Each record contains a header(json) that describes the structure of the data(binary) in the record. &lt;/li&gt;
&lt;li&gt;ORC (Optimized Row Columnar format) organizes data into columns, Hive supports SQL-like queries over unstructured data&lt;/li&gt;
&lt;li&gt;Parquet is another columnar data format (row group)&lt;/li&gt;
&lt;li&gt;Unstructured data:&lt;/li&gt;
&lt;li&gt;store video and audio data as block blobs in an Azure Storage account&lt;/li&gt;
&lt;li&gt;A block blob only supports basic read and write operations.&lt;/li&gt;
&lt;li&gt;No sql&lt;/li&gt;
&lt;li&gt;key-value stores: &lt;/li&gt;
&lt;li&gt;key uniquely identifies the item, and the value(opaque) holds the data for the item. &lt;/li&gt;
&lt;li&gt;read and write data very quickly&lt;/li&gt;
&lt;li&gt; excellent choice for data ingestion&lt;/li&gt;
&lt;li&gt;Azure Table storage, cosmo db&lt;/li&gt;
&lt;li&gt;document databases:&lt;/li&gt;
&lt;li&gt;each document has a unique ID, but the fields in the documents are transparent to the dbms&lt;/li&gt;
&lt;li&gt;XML, YAML, JSON, BSON format or plain text&lt;/li&gt;
&lt;li&gt;enables you to query and filter data by using the values in these fields.&lt;/li&gt;
&lt;li&gt;Some create the document key automatically and support indexing to facilitate fast lookup&lt;/li&gt;
&lt;li&gt;Azure Cosmos DB implements a document database approach in its Core (SQL) API.&lt;/li&gt;
&lt;li&gt;column family databases:&lt;/li&gt;
&lt;li&gt; ORC and Parquet files&lt;/li&gt;
&lt;li&gt;denormalized approach to structuring sparse data&lt;/li&gt;
&lt;li&gt;column family database as holding tabular data comprising rows and columns, but you can divide the columns into groups known as column-families&lt;/li&gt;
&lt;li&gt;Apache Cassandra. Azure Cosmos DB supports the column-family approach through the Cassandra API.&lt;/li&gt;
&lt;li&gt;graph databases:&lt;/li&gt;
&lt;li&gt;store entities, but focuses on the relationships between entities&lt;/li&gt;
&lt;li&gt;nodes (entities), and edge (relationships between nodes)&lt;/li&gt;
&lt;li&gt;efficiently perform queries &lt;/li&gt;
&lt;li&gt;Azure Cosmos DB supports graph databases using the Gremlin API&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#module-5-explore-concepts-of-data-analytics-"&gt;
  &lt;/a&gt;
  Module 5: Explore concepts of data analytics :
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Data ingestion &lt;/li&gt;
&lt;li&gt;    Data Processing
&lt;/li&gt;
&lt;li&gt;    ELT and ETL&lt;/li&gt;
&lt;li&gt;    SQL Server Integration Services.and Azure Data Factory: Azure Data Factory is a cloud-based data integration service that allows you to create data-driven workflows for orchestrating data movement and transforming data at scale.&lt;/li&gt;
&lt;li&gt;ETL processes that transform data visually with data flows, or by using compute services such as Azure HDInsight Hadoop, Azure Databricks, and Azure SQL Database.&lt;/li&gt;
&lt;li&gt;Reporting&lt;/li&gt;
&lt;li&gt;Business Intelligence (BI)
&lt;/li&gt;
&lt;li&gt;Benchmarking: Comparison with other companies in the same industry.&lt;/li&gt;
&lt;li&gt;Data Visualization&lt;/li&gt;
&lt;li&gt;Most famous tool in Azure is Power BI for data visualization: you can connect to multiple different sources of data, and combine them into a data model&lt;/li&gt;
&lt;li&gt;Bar and column chart &lt;/li&gt;
&lt;li&gt;Line chart &lt;/li&gt;
&lt;li&gt;Matrix &lt;/li&gt;
&lt;li&gt;Key influencer &lt;/li&gt;
&lt;li&gt;Tree map &lt;/li&gt;
&lt;li&gt;Scatter&lt;/li&gt;
&lt;li&gt;Filed map&lt;/li&gt;
&lt;li&gt;Data analytics:&lt;/li&gt;
&lt;li&gt;Descriptive : what happened . By developing KPIs (Key Performance Indicators), these strategies can help track the success or failure of key objectives&lt;/li&gt;
&lt;li&gt;Diagnostic :why happened &lt;/li&gt;
&lt;li&gt;Predictive : what will happen in the future using neural networks, decision trees, and regression.&lt;/li&gt;
&lt;li&gt;Prescriptive: what action should we take to achieve a goal &lt;/li&gt;
&lt;li&gt;Cognitive: Cognitive analytics helps you to learn what might happen if circumstances change, and how you might handle these situations.It uses several NLP (Natural Language Processing) concepts to make sense of previously untapped data sources, such as call center conversation logs and product reviews.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#module-6-explore-relational-data-services-in-azure"&gt;
  &lt;/a&gt;
  Module 6: Explore relational data services in Azure:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Data base &lt;/li&gt;
&lt;li&gt;Stored procedure: A stored procedure is a block of code that runs inside your database.&lt;/li&gt;
&lt;li&gt;A linked server is a connection from one database server to another. SQL Server can use linked servers to run queries on one server that can include data retrieved from other servers; these are known as distributed queries.&lt;/li&gt;
&lt;li&gt;IAAS: Infrastructure as a service e.g: azure virtual network &lt;/li&gt;
&lt;li&gt;PAAS: Platform-as-a-service e.g: Azure SQL Databases &lt;/li&gt;
&lt;li&gt;SAAS:Software-as-a-Service, e.g office 365&lt;/li&gt;
&lt;li&gt;Azure Data Services: Azure Data Services fall into the PaaS category. These services are a series of DBMSs managed by Microsoft in the cloud. Each data service takes care of the configuration, day-to-day management, software updates, and security of the databases that it hosts. All you do is create your databases under the control of the data service.&lt;/li&gt;
&lt;li&gt;Most famous database service is Azure SQL database&lt;/li&gt;
&lt;li&gt;Azure Database for sql server&lt;/li&gt;
&lt;li&gt;                     MariaDB server &lt;/li&gt;
&lt;li&gt;            Postgre SQL server &lt;/li&gt;
&lt;li&gt;Microsoft also provide services for non relational dbms such as cosmos DB&lt;/li&gt;
&lt;li&gt;Azure Data Services ensure that your databases are available for at least 99.99% of the time.&lt;/li&gt;
&lt;li&gt;There are cost associated with the running database in azure data services&lt;/li&gt;
&lt;li&gt;Can;t shutdown the database and restart it later. This services are always on &lt;/li&gt;
&lt;li&gt;SQL Server on Azure Virtual Machines: SQL Server on Virtual Machines enables you to use full versions of SQL Server in the Cloud without having to manage any on-premises hardware.SQL Server running on an Azure virtual machine effectively replicates the database running on real on-premises hardware. Migrating from the system running on-premises to an Azure virtual machine&lt;/li&gt;
&lt;li&gt;  lift-and-shift refers to the way in which you can move a database directly from an on-premises&lt;/li&gt;
&lt;li&gt;   server to an Azure virtual machine without requiring that you make any changes to it.&lt;/li&gt;
&lt;li&gt;A hybrid deployment is a system where part of the operation runs on-premises, and part in the cloud&lt;/li&gt;
&lt;li&gt;Azure SQL Database :Azure SQL Database is a PaaS offering from Microsoft. You create a managed database server in the cloud, and then deploy your databases on this server.&lt;/li&gt;
&lt;li&gt;Single Database &lt;/li&gt;
&lt;li&gt;Elastic Pool database :This option is similar to Single Database, except that by default multiple databases can share the same resources, such as memory, data storage space, and processing power through multiple-tenancy.&lt;/li&gt;
&lt;li&gt;Managed instance &lt;/li&gt;
&lt;li&gt;Azure SQL Database is often used for:&lt;/li&gt;
&lt;li&gt;Modern cloud applications that need to use the latest stable SQL Server features.&lt;/li&gt;
&lt;li&gt;Applications that require high availability.&lt;/li&gt;
&lt;li&gt;Systems with a variable load, that need the database server to scale up and down quickly.&lt;/li&gt;
&lt;li&gt;SQL Database helps secure your data by providing encryption. For data in motion, it uses Transport Layer Security. For data at rest, it uses Transparent Data Encryption. For data in use, it uses Always Encrypted.&lt;/li&gt;
&lt;li&gt;Azure SQL Database Managed Instance:&lt;/li&gt;
&lt;li&gt;You have complete control over this instance, much as you would for an on-premises server. The Managed instance service automates backups, software patching, database monitoring, and other general tasks, but you have full control over security and resource allocation for your databases.Managed instances depend on other Azure services such as Azure Storage for backups, Azure Event Hubs for telemetry, Azure Active Directory for authentication, Azure Key Vault for Transparent Data Encryption (TDE) and a couple of Azure platform services that provide security and supportability features. The managed instances make connections to these services.&lt;/li&gt;
&lt;li&gt;MySQL:&lt;/li&gt;
&lt;li&gt;MariaDB: compatibility with oracle database, One notable feature of MariaDB is its built-in support for temporal data. A table can hold several versions of data, enabling an application to query the data as it appeared at some point in the past.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-postgresql"&gt;
  &lt;/a&gt;
  - PostgreSQL
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Azure Database for MySQL:&lt;/li&gt;
&lt;li&gt;High availability features built-in.&lt;/li&gt;
&lt;li&gt;Predictable performance.&lt;/li&gt;
&lt;li&gt;Easy scaling that responds quickly to demand.&lt;/li&gt;
&lt;li&gt;Secure data, both at rest and in motion.&lt;/li&gt;
&lt;li&gt;Automatic backups and point-in-time restore for the last 35 days.&lt;/li&gt;
&lt;li&gt;Enterprise-level security and compliance with legislation.&lt;/li&gt;
&lt;li&gt;Azure Database for MariaDB:&lt;/li&gt;
&lt;li&gt;Built-in high availability with no additional cost.&lt;/li&gt;
&lt;li&gt;Predictable performance, using inclusive pay-as-you-go pricing.&lt;/li&gt;
&lt;li&gt;Scaling as needed within seconds.&lt;/li&gt;
&lt;li&gt;Secured protection of sensitive data at rest and in motion.&lt;/li&gt;
&lt;li&gt;Automatic backups and point-in-time-restore for up to 35 days.&lt;/li&gt;
&lt;li&gt;Enterprise-grade security and compliance.&lt;/li&gt;
&lt;li&gt;Azure Database for PostgreSQL: same property as azure database for my sql. &lt;/li&gt;
&lt;li&gt;Azure Database for PostgreSQL single-server: Each tier supports different numbers of CPUs, memory, and storage sizes&lt;/li&gt;
&lt;li&gt;Azure Database for PostgreSQL Hyperscale (Citus): Data is split across nodes&lt;/li&gt;
&lt;li&gt;Use Azure database migration service to migrate on premise Mysql, mariaDB or postgresql to a database running the corresponding data services in Azure&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#module-7-explore-provisioning-and-deployment-in-database-service-in-azure"&gt;
  &lt;/a&gt;
  Module 7: Explore provisioning and deployment in database service in azure:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;What is Provisioning? :&lt;/li&gt;
&lt;li&gt;Provisioning is the act of running a series of tasks that a service provider, such as Azure SQL Database, performs to create and configure a service.&lt;/li&gt;
&lt;li&gt;The act of increasing (or decreasing) the resources used by a service is called scaling.&lt;/li&gt;
&lt;li&gt;Tools to provision services:&lt;/li&gt;
&lt;li&gt;Azure portal: Display list of service specific pages before actual provisioning &lt;/li&gt;
&lt;li&gt;Azure command line interface(CLI): basic command prompt and powershell command we run on windows to automate service creation.&lt;/li&gt;
&lt;li&gt;Azure Powershell&lt;/li&gt;
&lt;li&gt;Azure Resource manager templates: describes the service (or services) that you want to deploy in a text file, in a format known as JSON&lt;/li&gt;
&lt;li&gt;Provisioning in Azure SQL database&lt;/li&gt;
&lt;li&gt;Provisioning PostgreSQL and MySQL:&lt;/li&gt;
&lt;li&gt;  Hyperscale option for postgreSQL supports:&lt;/li&gt;
&lt;li&gt;Horizontal Scaling &lt;/li&gt;
&lt;li&gt;Query parallelization&lt;/li&gt;
&lt;li&gt; Excellent support for multi-tenant applications,&lt;/li&gt;
&lt;li&gt; real time operational analytics, and &lt;/li&gt;
&lt;li&gt;high throughput transactional workloads&lt;/li&gt;
&lt;li&gt;Configuring relational data services&lt;/li&gt;
&lt;li&gt;Configure connectivity and firewall &lt;/li&gt;
&lt;li&gt;Configure connectivity to virtual networks and on-premises computers&lt;/li&gt;
&lt;li&gt;Azure SQL Database communicates over port 1433&lt;/li&gt;
&lt;li&gt;A firewall rule of 0.0.0.0 enables all Azure services to pass through the server-level firewall rule and attempt to connect to a single or pooled database through the server.
&lt;/li&gt;
&lt;li&gt;Configure connectivity from private endpoints.&lt;/li&gt;
&lt;li&gt;Configure Authentication &lt;/li&gt;
&lt;li&gt;Configure access control: who or what can access your resources &lt;/li&gt;
&lt;li&gt;Role assignment consist of three elements:&lt;/li&gt;
&lt;li&gt;Security principle&lt;/li&gt;
&lt;li&gt;Role definition: Collection of permission &lt;/li&gt;
&lt;li&gt;Owner &lt;/li&gt;
&lt;li&gt;Contributor &lt;/li&gt;
&lt;li&gt;Reader &lt;/li&gt;
&lt;li&gt;User access administrator &lt;/li&gt;
&lt;li&gt;Scope : lists set of resources that the access applies to &lt;/li&gt;
&lt;li&gt;You add role assignments to a resource in the Azure portal using the Access control (IAM) page&lt;/li&gt;
&lt;li&gt;Configure advance data security &lt;/li&gt;
&lt;li&gt;Configure Azure SQL Database&lt;/li&gt;
&lt;li&gt;An ACL(access control list) contains a list of resources, and the objects (users, computers, and applications) that are allowed to access those resources&lt;/li&gt;
&lt;li&gt;Connectivity from within Azure&lt;/li&gt;
&lt;li&gt;Connectivity from outside azure &lt;/li&gt;
&lt;li&gt;Configure DoS(Denial of Service) guard: DoSGuard actively tracks failed logins from IP addresses&lt;/li&gt;
&lt;li&gt;Configure Azure  Database for PostgreSQL: Connections to your Azure Database for PostgreSQL server communicate over port 5432&lt;/li&gt;
&lt;li&gt;Configure read replicas : replicate data from an Azure Database for PostgreSQL server to a read-only server&lt;/li&gt;
&lt;li&gt;Configure Azure  Database for MySQL&lt;/li&gt;
&lt;li&gt;Configure server parameter &lt;/li&gt;
&lt;li&gt;Configure read replicas: same as postgreSQL
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#module-8-query-relational-data-in-azure"&gt;
  &lt;/a&gt;
  Module 8: Query relational data in azure:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;SQL: structured query language&lt;/li&gt;
&lt;li&gt;Transact-SQL (T-SQL). This version of SQL is used by Microsoft SQL Server and Azure SQL Database.&lt;/li&gt;
&lt;li&gt;pgSQL. This is the dialect, with extensions implemented in PostgreSQL.&lt;/li&gt;
&lt;li&gt;PL/SQL. This is the dialect used by Oracle. PL/SQL stands for Procedural Language/SQL.&lt;/li&gt;
&lt;li&gt;Data Manipulation Language (DML): SELECT, INSERT, UPDATE, DELETE&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-data-definition-language-ddl-create-alter-drop-rename"&gt;
  &lt;/a&gt;
  - Data Definition Language (DDL):  CREATE, ALTER, DROP, RENAME
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Query relational data in Azure SQL Database&lt;/li&gt;
&lt;li&gt;Retrieve connection information for azure sql DB &lt;/li&gt;
&lt;li&gt;Use the azure portal to query a DB&lt;/li&gt;
&lt;li&gt;Use SQLCMD to query a database&lt;/li&gt;
&lt;li&gt;USe Azure data studio: Azure Data Studio is a graphical utility for creating and running SQL queries from your desktop&lt;/li&gt;
&lt;li&gt;SQL server management studio&lt;/li&gt;
&lt;li&gt;Use SQL Server Data Tools in Visual Studio&lt;/li&gt;
&lt;li&gt;Query relational data in Azure Database for PostgreSQL&lt;/li&gt;
&lt;li&gt;Retrieve connection information for Azure Database for PostgreSQL&lt;/li&gt;
&lt;li&gt;Use psql to query a database&lt;/li&gt;
&lt;li&gt;psql commands include:&lt;/li&gt;
&lt;li&gt;\l to list databases.&lt;/li&gt;
&lt;li&gt;\dt to list the tables in the current database.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-connect-to-postgresql-database-using-azure-data-studio"&gt;
  &lt;/a&gt;
  - Connect to PostgreSQL database using Azure Data Studio
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Query relational data in Azure Database for MySQL&lt;/li&gt;
&lt;li&gt;port : 3306&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#module-9-explore-nonrelational-data-offerings-in-azure"&gt;
  &lt;/a&gt;
  Module 9 (Explore non-relational data offerings in Azure)
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Azure Table Storage:&lt;/li&gt;
&lt;li&gt;items are referred to as rows(must have a key), and fields are known as columns&lt;/li&gt;
&lt;li&gt;store semi-structured data ( schemaless)&lt;/li&gt;
&lt;li&gt;Denormalized data&lt;/li&gt;
&lt;li&gt;splits a table into partitions. Partitioning is a mechanism for grouping related rows, based on a common property or partition key&lt;/li&gt;
&lt;li&gt;Partitions are independent from each other&lt;/li&gt;
&lt;li&gt; you can include the partition key in the search criteria&lt;/li&gt;
&lt;li&gt;Items in the same partition are stored in row key order.&lt;/li&gt;
&lt;li&gt;quickly perform Point queries that identify a single row, and Range queries that fetch a contiguous block of rows in a partition&lt;/li&gt;
&lt;li&gt;The columns in a table can hold numeric, string, or binary data up to 64 KB in size. A table can have up to 252 columns, apart from the partition and row keys. The maximum row size is 1 MB&lt;/li&gt;
&lt;li&gt;Adv&lt;/li&gt;
&lt;li&gt; no need to map and maintain the complex relationships&lt;/li&gt;
&lt;li&gt;Fast operations like insertion deletion query&lt;/li&gt;
&lt;li&gt;Simple to scale&lt;/li&gt;
&lt;li&gt;Storing TBs of structured data capable of serving web scale applications&lt;/li&gt;
&lt;li&gt;Storing datasets that don't require complex joins, foreign keys, or stored procedures&lt;/li&gt;
&lt;li&gt;Capturing event logging and performance monitoring data&lt;/li&gt;
&lt;li&gt;Disadv&lt;/li&gt;
&lt;li&gt;Consistency isn’t guaranteed&lt;/li&gt;
&lt;li&gt;no referential integrity&lt;/li&gt;
&lt;li&gt;difficult to filter and sort on non-key data&lt;/li&gt;
&lt;li&gt;The data for each table is replicated three times within an Azure region. For increased availability&lt;/li&gt;
&lt;li&gt;transparently switch to a working replica while the failed replica is recovered&lt;/li&gt;
&lt;li&gt;configure security and role-based access control&lt;/li&gt;
&lt;li&gt;Azure Blob storage&lt;/li&gt;
&lt;li&gt;unstructured data, or blobs&lt;/li&gt;
&lt;li&gt;you create blobs inside containers&lt;/li&gt;
&lt;li&gt;Block blobs. handled as a set of blocks. used to store discrete, large, binary objects that change infrequently.&lt;/li&gt;
&lt;li&gt;Page blobs. organized as a collection of fixed size 512-byte pages. support random read and write operations, used to implement virtual disk storage for virtual machines&lt;/li&gt;
&lt;li&gt;Append blobs. a block blob optimized to support append operations updating or deleting existing blocks isn't supported&lt;/li&gt;
&lt;li&gt;Acces tiers&lt;/li&gt;
&lt;li&gt;The Hot tier is accessed frequently. data is stored on high-performance media.&lt;/li&gt;
&lt;li&gt;The Cool tier. has lower performance, accessed infrequently.&lt;/li&gt;
&lt;li&gt;The Archive tier. provides the lowest storage cost, but with increased latency for historical data that mustn't be lost, but is required only rarely,  stored in an offline state&lt;/li&gt;
&lt;li&gt; A lifecycle management policy can automatically move a blob from Hot to Cool, and then to the Archive tier, as it ages and is used less frequently&lt;/li&gt;
&lt;li&gt;Serving images or documents directly to a browser&lt;/li&gt;
&lt;li&gt;Storing data for backup and restore, disaster recovery, and archiving, analysis and distributed access&lt;/li&gt;
&lt;li&gt;Versioning&lt;/li&gt;
&lt;li&gt;Soft delete&lt;/li&gt;
&lt;li&gt;Snapshots&lt;/li&gt;
&lt;li&gt;Change Feed&lt;/li&gt;
&lt;li&gt;Azure File storage&lt;/li&gt;
&lt;li&gt;Create and access files shares in the cloud&lt;/li&gt;
&lt;li&gt;exposes file shares using the Server Message Block 3.0 (SMB) protocol&lt;/li&gt;
&lt;li&gt;tools such as the AzCopy utility or azure portal&lt;/li&gt;
&lt;li&gt;Services: standard and premium (greater throughput)&lt;/li&gt;
&lt;li&gt;Migrate existing applications to the cloud (access data using file-based APIs)&lt;/li&gt;
&lt;li&gt;Share server data across on-premises and cloud(leverage the availability, durability, scalability, and geo redundancy built into the Azure storage platform)&lt;/li&gt;
&lt;li&gt;Integrate modern applications with Azure File Storage (rest api)&lt;/li&gt;
&lt;li&gt;Simplify hosting High Availability (HA) workload data&lt;/li&gt;
&lt;li&gt;Azure Cosmos DB&lt;/li&gt;
&lt;li&gt;multi-model NoSQL dbms&lt;/li&gt;
&lt;li&gt;manages data as a partitioned set of documents(collection of fields, identified by a key)&lt;/li&gt;
&lt;li&gt;use JSON&lt;/li&gt;
&lt;li&gt;provides APIs that enable you to access these documents&lt;/li&gt;
&lt;li&gt;SQL API. provides a SQL-like query language over documents&lt;/li&gt;
&lt;li&gt;Table API. use the Azure Table Storage API to store and retrieve documents&lt;/li&gt;
&lt;li&gt;MongoDB API enable a MongoDB application to run unchanged against a Cosmos DB database&lt;/li&gt;
&lt;li&gt;Cassandra API column family database management system provides a Cassandra-like programmatic interface for Cosmos DB&lt;/li&gt;
&lt;li&gt;Gremlin API. implements a graph database interface to Cosmos DB&lt;/li&gt;
&lt;li&gt;Unlike Azure Table storage, documents in a Cosmos DB partition aren't sorted by ID Instead, Cosmos DB maintains a separate index. This index contains not only the document IDs, but also tracks the value of every other field in each document&lt;/li&gt;
&lt;li&gt;all databases are replicated within a single region&lt;/li&gt;
&lt;li&gt;replication is transparent, and failover from a failed replica is automatic&lt;/li&gt;
&lt;li&gt;guarantees less than 10-ms latencies for both reads (indexed) and writes at the 99th percentile, all around the world&lt;/li&gt;
&lt;li&gt;all data in Cosmos DB is encrypted at rest and in motion&lt;/li&gt;
&lt;li&gt;Module 10 (Explore provisioning and deploying non-relational data services in Azure)&lt;/li&gt;
&lt;li&gt;provisioning non-relational data services&lt;/li&gt;
&lt;li&gt;Provisioning is the act of running a series of tasks that a service provider, it is opaque. Parameters initially set can be later modified.&lt;/li&gt;
&lt;li&gt;Tools&lt;/li&gt;
&lt;li&gt;The Azure portal&lt;/li&gt;
&lt;li&gt;The Azure command-line interface (CLI): run command using cloud shell&lt;/li&gt;
&lt;li&gt;Azure PowerShell&lt;/li&gt;
&lt;li&gt;Azure Resource Manager templates (deploy in json)&lt;/li&gt;
&lt;li&gt;Provision Azure Cosmos DB&lt;/li&gt;
&lt;li&gt;Azure CLI, Azure PowerShell, or an Azure Resource Manager template&lt;/li&gt;
&lt;li&gt;Databases and containers are the primary resource(storage space) consumers&lt;/li&gt;
&lt;li&gt;uses the concept of Request Units per second (RU/s) to manage the performance and cost of databases&lt;/li&gt;
&lt;li&gt;If you underprovision (by specifying too few RU/s), Cosmos DB will start throttling performance&lt;/li&gt;
&lt;li&gt;configuring non-relational data services&lt;/li&gt;
&lt;li&gt;You can connect to these services from an on-premises network, the internet, or from within an Azure virtual network&lt;/li&gt;
&lt;li&gt;Azure Private Endpoint is a network interface that connects you privately and securely to a service powered by Azure Private Link&lt;/li&gt;
&lt;li&gt;Private endpoint connections page for a service allows you to specify which private endpoints, if any, are permitted access to your service&lt;/li&gt;
&lt;li&gt;Azure Active Directory (Azure AD) provides superior security and ease of use over access key authorization&lt;/li&gt;
&lt;li&gt;Configure access control&lt;/li&gt;
&lt;li&gt;Azure role-based access control&lt;/li&gt;
&lt;li&gt;Allow one user to manage virtual machines in a subscription and another user to manage virtual networks.&lt;/li&gt;
&lt;li&gt;Allow a database administrator group to manage SQL databases in a subscription.&lt;/li&gt;
&lt;li&gt;Allow a user to manage all resources in a resource group, such as virtual machines, websites, and subnets.&lt;/li&gt;
&lt;li&gt;Allow an application to access all resources in a resource group.&lt;/li&gt;
&lt;li&gt;security principal is an object that represents a user, group, service, or managed identity that is requesting access to Azure resources.&lt;/li&gt;
&lt;li&gt;role definition, often abbreviated to role, is a collection of permissions&lt;/li&gt;
&lt;li&gt;Owner&lt;/li&gt;
&lt;li&gt;Contributor&lt;/li&gt;
&lt;li&gt;Reader&lt;/li&gt;
&lt;li&gt;User Access Administrator&lt;/li&gt;
&lt;li&gt;scope lists the set of resources that the access applies to&lt;/li&gt;
&lt;li&gt;Tools: Access control (IAM) &lt;/li&gt;
&lt;li&gt;Configure consistency in cosmo db&lt;/li&gt;
&lt;li&gt;Eventual. least consistent Changes won't be lost, they'll appear eventually changes could appear out of order. lowest latency and least consistency&lt;/li&gt;
&lt;li&gt;Consistent Prefix. ensures that changes will appear in order, although there may be a delay before they become visible&lt;/li&gt;
&lt;li&gt;Session. If an application makes a number of changes, they'll all be visible to that application, and in order&lt;/li&gt;
&lt;li&gt;Bounded Staleness. There's a lag between writing and then reading the updated data&lt;/li&gt;
&lt;li&gt;Strong: In this case, all writes are only visible to clients after the changes are confirmed as written successfully to all replicas&lt;/li&gt;
&lt;li&gt;Configure shared access signatures&lt;/li&gt;
&lt;li&gt;use shared access signatures (SAS) to grant limited rights to resources in an Azure storage account for a specified time period&lt;/li&gt;
&lt;li&gt;access resources such as blobs and files, without requiring that they're authenticated first&lt;/li&gt;
&lt;li&gt;Module 11(Manage non-relational data stores in Azure)&lt;/li&gt;
&lt;li&gt;data operations in Cosmos DB&lt;/li&gt;
&lt;li&gt;Data Explorer in the Azure portal to run ad-hoc queries&lt;/li&gt;
&lt;li&gt;Cosmos DB Data Migration tool to perform a bulk-load or transfer of data&lt;/li&gt;
&lt;li&gt; Azure Data Factory to import data from another source&lt;/li&gt;
&lt;li&gt;custom application that imports data using the Cosmos DB BulkExecutor library (make use of multiple concurrent threads to batch your data into chunks and load the chunks in parallel)&lt;/li&gt;
&lt;li&gt;Create your own application that uses the functions available through the Cosmos DB SQL API client library&lt;/li&gt;
&lt;li&gt;insufficient throughput capacity configured results in https error 429&lt;/li&gt;
&lt;li&gt;Query Azure Cosmos DB&lt;/li&gt;
&lt;li&gt;The Cosmos DB SQL API supports a dialect of SQL for querying documents using SELECT statements&lt;/li&gt;
&lt;li&gt;Manage Azure File storage&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#module-12-examine-components-of-a-modern-data-warehouse-"&gt;
  &lt;/a&gt;
  Module 12: Examine components of a Modern data warehouse :
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The process of combining all of the local data or gathering data from many different  sources within an organization  is known as data warehousing.&lt;/li&gt;
&lt;li&gt;The process of analyzing streaming data and data from the Internet is known as Big Data analytics. &lt;/li&gt;
&lt;li&gt;Azure Synapse Analytics combines data warehousing with Big Data analytics.&lt;/li&gt;
&lt;li&gt;online analytical processing (OLAP)&lt;/li&gt;
&lt;li&gt;Modern data Warehousing : It contains a mixture of relational and non relational data like media files, social media streams or internet of things.&lt;/li&gt;
&lt;li&gt;Tools we can use: Azure Data Factory, Azure Data Lake Storage, Azure Databricks, Azure Synapse Analytics, and Azure Analysis Services, power BI is used to analyze and visualize the data, generating reports and charts.&lt;/li&gt;
&lt;li&gt;gathers data from many different sources within an organization&lt;/li&gt;
&lt;li&gt; provide answers to complex queries, unlike a traditional relational database&lt;/li&gt;
&lt;li&gt;handle big data&lt;/li&gt;
&lt;li&gt;contain a mixture of relational and non-relational data, including files, social media streams, and Internet of Things (IoT) sensor data&lt;/li&gt;
&lt;li&gt;Combine batch and stream process: upto the second data and historical data are important for a company. Upto the second data is generated by steam process and historical data is generated by batch process.&lt;/li&gt;
&lt;li&gt;Azure Data factory: its a data integration service. Purpose of the azure data factory is to retrieve data from one or more data sources and to convert it into the format that you process.&lt;/li&gt;
&lt;li&gt;Work performed by azure data factory is defined as pipeline of operations &lt;/li&gt;
&lt;li&gt;Azure Data Lake storage:&lt;/li&gt;
&lt;li&gt; It's a repository for Large Quantities of Raw data. &lt;/li&gt;
&lt;li&gt;Data is fast load and processed because its raw &amp;amp; unprocessed.&lt;/li&gt;
&lt;li&gt;A data warehouse holds structured information but a data lake stores raw data.&lt;/li&gt;
&lt;li&gt;It's an extension of Azure Blob storage.It organizes files into directories and sub directories but blob storage only mimics a directory structure.&lt;/li&gt;
&lt;li&gt;It supports POSIX( Portable Opening system interface) and compatible with HDFS (Hadoop distributed file system)&lt;/li&gt;
&lt;li&gt;Azure DataBricks:&lt;/li&gt;
&lt;li&gt;Azure Databricks is an Apache Spark environment running on Azure to provide big data processing, streaming, and machine learning.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-azure-databricks-provides-a-graphical-user-interface-where-you-can-define-and-test-your-processing-step-by-step-before-submitting-it-as-a-set-of-batch-tasks"&gt;
  &lt;/a&gt;
  - Azure Databricks provides a graphical user interface where you can define and test your processing step by step, before submitting it as a set of batch tasks.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Azure Synapse Analytics: &lt;/li&gt;
&lt;li&gt;It's an analytical engine. Design to process large data very quickly.&lt;/li&gt;
&lt;li&gt;Ingest data from external sources  and then transform and aggregate this data into a format suitable for analytics processing.its used to process data which we have read in and processed locally.&lt;/li&gt;
&lt;li&gt;Control node is the brain of architecture, like a front end which interacts with all applications. When we submit a process request it transforms it into smaller requests that run against distinct subsets of the data in parallel.&lt;/li&gt;
&lt;li&gt;We have to submit queries in Transact-SQL statements&lt;/li&gt;
&lt;li&gt;PolyBase enables you to retrieve data from relational and non-relational sources, such as delimited text files, Azure Blob Storage, and Azure Data Lake Storage.&lt;/li&gt;
&lt;li&gt;Azure Analysis Service &lt;/li&gt;
&lt;li&gt;Azure Analysis Services enables you to build tabular models to support online analytical processing (OLAP) queries. You can combine data from various sources (e.g lake , analytics , sql db, cosmos db).&lt;/li&gt;
&lt;li&gt;Difference between Analysis service and synapse analytics:&lt;/li&gt;
&lt;li&gt;Use Azure Synapse Analytics for:&lt;/li&gt;
&lt;li&gt;Very high volumes of data (multi-terabyte to petabyte sized datasets).&lt;/li&gt;
&lt;li&gt;Very complex queries and aggregations.&lt;/li&gt;
&lt;li&gt;Data mining, and data exploration.&lt;/li&gt;
&lt;li&gt;Complex ETL operations. ETL stands for Extract, Transform, and Load, and refers to the way in which you can retrieve raw data from multiple sources, convert this data into a standard format, and store it.&lt;/li&gt;
&lt;li&gt;Low to mid concurrency (128 users or fewer).&lt;/li&gt;
&lt;li&gt;Use Azure Analysis Services for:&lt;/li&gt;
&lt;li&gt;Smaller volumes of data (a few terabytes).&lt;/li&gt;
&lt;li&gt;Multiple sources that can be correlated.&lt;/li&gt;
&lt;li&gt;High read concurrency (thousands of users).&lt;/li&gt;
&lt;li&gt;Detailed analysis, and drilling into data, using functions in Power BI.&lt;/li&gt;
&lt;li&gt;Rapid dashboard development from tabular data.&lt;/li&gt;
&lt;li&gt;Azure HDInsight: Azure HDInsight is a big data processing service that provides the platform for technologies such as Spark in an Azure environment.&lt;/li&gt;
&lt;li&gt;Hadoop is an open source framework that breaks large data processing problems down into smaller chunks.&lt;/li&gt;
&lt;li&gt;Hive is a SQL-like query facility that you can use with an HDInsight cluster to examine data held in a variety of formats.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#module-13-explore-large-scale-data-analytics-"&gt;
  &lt;/a&gt;
  Module 13: Explore large scale data analytics  :
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ingest data using Azure Data Factory&lt;/li&gt;
&lt;li&gt;HTAP(Hybrid transactional analytical processing): analyze operational data into original location.&lt;/li&gt;
&lt;li&gt;Orchestration is the process of directing and controlling other services, and connecting them together, to allow data to flow between them.&lt;/li&gt;
&lt;li&gt;A linked service provides the information needed for Data Factory to connect to a source or destination&lt;/li&gt;
&lt;li&gt;A dataset in Azure Data Factory represents the data that you want to ingest (input) or store (output). If the data is structured, the data set specifies how data is structured.&lt;/li&gt;
&lt;li&gt;A pipeline is a logical grouping of activities that together perform a task. The activities in a pipeline define actions to perform on your data. It includes a lot of activity like looping data in for each loop , can use if condition to execute the activity conditionally, can map input into different formats as per output is required. A trigger enables you to schedule a pipeline to occur according to a planned schedule&lt;/li&gt;
&lt;li&gt;Ingest data using PolyBase&lt;/li&gt;
&lt;li&gt;Polybase is a feature of SQL server &amp;amp; azure synapse analytics that enables you to run Transact-SQL queries that read data from external data sources.It makes external data appear like tables in a sql db.&lt;/li&gt;
&lt;li&gt;Azure SQL Database does not support PolyBase.&lt;/li&gt;
&lt;li&gt;Ingest data using SQL Server Integration Services&lt;/li&gt;
&lt;li&gt;SQL Server Integration Services (SSIS) is a platform for building enterprise-level data integration and data transformations solutions.It is used to solve complex business problems.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-ssis-can-extract-and-transform-data-from-a-wide-variety-of-sources-such-as-xml-data-files-flat-files-and-relational-data-sources-and-then-load-the-data-into-one-or-more-destinations"&gt;
  &lt;/a&gt;
  - SSIS can extract and transform data from a wide variety of sources such as XML data files, flat files, and relational data sources, and then load the data into one or more destinations.
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#module-14-get-started-building-with-power-bi"&gt;
  &lt;/a&gt;
  Module 14: Get started building with Power BI
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;collection of software services, apps, and connectors that work together to turn your unrelated sources of data into coherent, visually immersive, and interactive insights.&lt;/li&gt;
&lt;li&gt;Power BI Desktop, an online SaaS (Software as a Service)&lt;/li&gt;
&lt;li&gt;Use Power BI&lt;/li&gt;
&lt;li&gt;Bring data into Power BI Desktop, and create a report.&lt;/li&gt;
&lt;li&gt;Publish to the Power BI service, where you can create new visualizations or build dashboards.&lt;/li&gt;
&lt;li&gt;Share dashboards with others, especially people who are on the go.&lt;/li&gt;
&lt;li&gt;View and interact with shared dashboards and reports in Power BI Mobile apps.&lt;/li&gt;
&lt;li&gt;Building blocks of Power BI&lt;/li&gt;
&lt;li&gt;Visualizations&lt;/li&gt;
&lt;li&gt;Datasets&lt;/li&gt;
&lt;li&gt;Reports&lt;/li&gt;
&lt;li&gt;Dashboard&lt;/li&gt;
&lt;li&gt;Tiles&lt;/li&gt;
&lt;li&gt;app is a collection of preset, ready-made visuals and reports that are shared with an entire organization.&lt;/li&gt;
&lt;li&gt;Power BI can just as easily connect to a whole assortment of software services (also called SaaS providers or cloud services): Salesforce, Facebook, Google Analytics, and more.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>azure</category>
      <category>cloud</category>
      <category>tutorial</category>
      <category>career</category>
    </item>
    <item>
      <title>Best Animation Libraries for ReactJS</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Sat, 22 Jan 2022 15:31:18 +0000</pubDate>
      <link>https://dev.to/surajondev/best-animation-libraries-for-reactjs-2h34</link>
      <guid>https://dev.to/surajondev/best-animation-libraries-for-reactjs-2h34</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;ReactJS is the most popular and loved framework among web developers for developing the frontend. From the launch, it has seen only growth. There are tons of libraries on the web for ReactJS that made React more awesome.&lt;/p&gt;

&lt;p&gt;Today, we are going to look into some of the best animation libraries that will help you to create animation. These libraries are easy to install, learn and create animation.&lt;/p&gt;

&lt;p&gt;So let's get started.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#framer-motion"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.framer.com/motion/"&gt;Framer Motion&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;A production-ready motion library for React. Utilize the power behind Framer, the best prototyping tool for teams. Proudly open source.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N8QkMDQi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xeef623lsjakkcjm8x5r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N8QkMDQi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xeef623lsjakkcjm8x5r.png" alt="Framer Motion" width="342" height="147"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight batchfile"&gt;&lt;code&gt;&lt;span class="kd"&gt;npm&lt;/span&gt; &lt;span class="kd"&gt;i&lt;/span&gt; &lt;span class="kd"&gt;framer&lt;/span&gt;&lt;span class="na"&gt;-motion
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#imports"&gt;
  &lt;/a&gt;
  Imports
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { motion } from "framer-motion";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;

&lt;p&gt;In a &lt;code&gt;motion.div&lt;/code&gt; tag, you define the animation of the component.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;animate&lt;/strong&gt;:You define the properties of the animation here. These are CSS properties.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;transition&lt;/strong&gt;: You define the transition properties here. Such as repeat, duration, etc.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;motion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;
        &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;borderRadius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="nx"&gt;transition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;Infinity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#codesandbox-example"&gt;
  &lt;/a&gt;
  CodeSandbox Example
&lt;/h2&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/framer-motion-f5ynt"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-spring"&gt;
  &lt;/a&gt;
  &lt;a href="https://react-spring.io/"&gt;React Spring&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;react-spring is a spring-physics based animation library that should cover most of your UI related animation needs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hQAl4yWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rr3fjph26i0zzrgsyxd4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hQAl4yWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rr3fjph26i0zzrgsyxd4.jpg" alt="React Spring" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight batchfile"&gt;&lt;code&gt;&lt;span class="kd"&gt;npm&lt;/span&gt; &lt;span class="kd"&gt;i&lt;/span&gt; &lt;span class="kd"&gt;react&lt;/span&gt;&lt;span class="na"&gt;-spring
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#imports"&gt;
  &lt;/a&gt;
  Imports
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useSpring&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;animated&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-spring&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;

&lt;p&gt;We have imported two things useSpring and animated.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;useSpring&lt;/strong&gt;: We define all the properties of the animation and transition here. &lt;code&gt;from&lt;/code&gt; define the initial properties of the element and &lt;code&gt;to&lt;/code&gt; is the final properties.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;animate&lt;/strong&gt;: It is used to define the element for the transition. It works as a component that takes style as the defined animation in useSpring.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSpring&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;animated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/animated.div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#codesandbox-example"&gt;
  &lt;/a&gt;
  CodeSandbox Example
&lt;/h2&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/react-spring-wp4ni"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-motion"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/chenglou/react-motion"&gt;React Motion&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;A spring that solves your animation problems.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FiVgQl85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ki979me996eqp1bexmr5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FiVgQl85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ki979me996eqp1bexmr5.png" alt="React Motion" width="880" height="337"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight batchfile"&gt;&lt;code&gt;&lt;span class="kd"&gt;npm&lt;/span&gt; &lt;span class="kd"&gt;i&lt;/span&gt; &lt;span class="kd"&gt;react&lt;/span&gt;&lt;span class="na"&gt;-motion
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#imports"&gt;
  &lt;/a&gt;
  Imports
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Motion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;spring&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-motion&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Motion&lt;/strong&gt;: Every animation and property is wrapped inside the &lt;code&gt;Motion&lt;/code&gt; component. It contains the default style and animation properties using &lt;code&gt;spring&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Motion&lt;/span&gt;
        &lt;span class="nx"&gt;defaultStyle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
          &lt;span class="na"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
          &lt;span class="na"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;spring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;spring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;interpolatedStyles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;
            &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
              &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`translateY(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;interpolatedStyles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;interpolatedStyles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
            &lt;span class="p"&gt;}}&lt;/span&gt;
            &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Motion&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#codesandbox-example"&gt;
  &lt;/a&gt;
  CodeSandbox Example
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Refersh to play the animation&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/react-motion-7wzwj"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#last-note"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;These are 3 Animation libraries for ReactJS that I like and use in my project for animation.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I hope you will try to use one of the libraries in your next project. Thanks for reading the post.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>css</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Create Ozark's hypnotizing title animation with Greensock (GSAP)</title>
      <author>Rob OLeary</author>
      <pubDate>Sat, 22 Jan 2022 15:22:50 +0000</pubDate>
      <link>https://dev.to/robole/create-ozarks-title-animation-with-greensock-gsap-166k</link>
      <guid>https://dev.to/robole/create-ozarks-title-animation-with-greensock-gsap-166k</guid>
      <description>&lt;p&gt;To mark the occasion of the TV show &lt;a href="https://en.wikipedia.org/wiki/Ozark_(TV_series)"&gt;Ozark&lt;/a&gt; releasing its fourth season, I created the title sequence as a web animation. For some viewers, a show's title sequence is nothing more than a minute long segment to be skipped past,or used as an opportunity to squeeze in a quick activity before the show starts, but they are missing out in the case of Ozark. The show is known for its dynamic plot and stark imagery, and if you pay close attention to the show's brief title sequence, you can appreciate how it complements the tone of the show.&lt;/p&gt;

&lt;p&gt;It can be interesting to see how the internet dissects these kind of things. The first part of the title sequence is extremely simple: It's just the word "Ozark" in a regular font, a font so bland it led to Redditors to question the motives behind the choice. In a &lt;a href="https://old.reddit.com/r/Ozark/comments/intaqp/does_the_ozark_opening_sequence_font_bother/"&gt;thread entitled "Does the Ozark opening sequence font bother anyone else,"&lt;/a&gt; user &lt;em&gt;Suspicious_Earth&lt;/em&gt; asked the question, "Considering that Ozark is an incredibly well-made show with exceptionally great acting, writing, world-building, and directing...does the fact that the opening title credits use the MOST basic and generic font bother anyone else?" 😀&lt;/p&gt;

&lt;p&gt;I won't go there. The bit I like is the second part of the sequence, which introduces a large circle with 4 symbols forming inside. Upon first watch, the symbols that pop up in the middle of the circle may seem arbitrary, but after watching the episode, you can tie the symbols you see to themes, images, and plot devices of that episode. Some are straightforward and depict something the viewer will literally see later on, while others require some creative thinking to work out.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/robjoeol/embed/yLVZbwQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here is my animation of Season 1 Episode 1's title card. You can click on it to replay if you missed it.&lt;/p&gt;

&lt;p&gt;There is something else about the symbols that you may not have realized. The symbols form the outline of letters, which spell out the name of the show! The big circle is the letter O and inside you have Z A R K! And I recerntly discovered, but I haven't tried, that if you turn on audio subtitles while watching the title sequence on Netflix, it tells you exactly what the symbols are!&lt;/p&gt;

&lt;p&gt;If you want to see an image of the title cards for each episode for the first 2 seasons, along with a plot summary, you can check out this article, &lt;a href="https://decider.com/2017/08/18/netflix-meaning-behind-ozark-symbols/"&gt;Here’s What The Symbols in ‘Ozark’s Hypnotizing Opening Credits Mean&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;Ok, enough chatter, let's look at how to make the animation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-code"&gt;
  &lt;/a&gt;
  The code
&lt;/h2&gt;

&lt;p&gt;I used &lt;a href="https://greensock.com/"&gt;Greensock (GSAP)&lt;/a&gt; for the animation. You could pull it off with CSS too, but I chose GSAP because I wanted an excuse to play with it.&lt;/p&gt;

&lt;p&gt;I drew the image for Season 1, Episode 1 title card as a SVG in Inkscape. When I was happy with its appearance, I inspected the SVG code and removed any &lt;code&gt;transform&lt;/code&gt; styles applied to elements. It can mess up animations when multiple transforms are applied to the same element.&lt;/p&gt;

&lt;p&gt;In theory the animation is quite simple, you are mostly just fading in the elements at different times, and at different rates.&lt;/p&gt;

&lt;p&gt;The outline of the sequence of events is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Fade in the circle slowly,&lt;/li&gt;
&lt;li&gt;Begin extending the vertical line,&lt;/li&gt;
&lt;li&gt;Followed quickly by extending the horizontal line,&lt;/li&gt;
&lt;li&gt;After the lines are approxmiately 50% of their complete length, fade in the first symbol,&lt;/li&gt;
&lt;li&gt;When the first symbol has reached about 20% opacity, fade in the second symbol, and follow the same pattern with the next 2 symbols.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It takes some trial and error to find the right duration and eases for each part. GSAP has an &lt;a href="https://greensock.com/ease-visualizer"&gt;ease visulizer&lt;/a&gt; that is helpful to narrow the search down.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xy3rB06b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iug4g7mmmexeqq8uq1o3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xy3rB06b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iug4g7mmmexeqq8uq1o3.png" alt="gsap ease visualizer" width="746" height="691"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will animate the &lt;code&gt;opacity&lt;/code&gt; property of the circle and symbols, and we will animate &lt;code&gt;transform:scale()&lt;/code&gt; property for the lines. Specifically, we animate &lt;code&gt;transform: scaleY()&lt;/code&gt; for the vertical line to expand up, and &lt;code&gt;transform: scaleX()&lt;/code&gt; for the horiztonal line to expand across.&lt;/p&gt;

&lt;p&gt;This is not intended to be a tutorial on GSAP, you can jump into the &lt;a href="https://greensock.com/get-started/"&gt;Getting Start with GSAP guide&lt;/a&gt; if you are newcomer. However, there are a few bits I will point out that may help you when using GSAP for similar type of animations.&lt;/p&gt;

&lt;p&gt;In CSS, we set the opacity to zero for all our elements. We want to start with a blank screen!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#o-letter&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.line&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.symbol&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the lines, we set the initial properties in JavaScript that we want to animate, this ensures you get the most accurate result. In the past, I set these properties in CSS and it can led to erratic results sometimes. This is what they recommend. GSAP has individual properties for the transform functions e.g. &lt;code&gt;scaleX&lt;/code&gt; for &lt;code&gt;transform: scaleX()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;tl1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#vertical-line&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;transformOrigin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;scaleY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;tl1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#horizontal-line&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;transformOrigin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;scaleX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are create a timeline and use the &lt;a href="https://greensock.com/docs/v3/GSAP/Timeline/to()"&gt;&lt;code&gt;to()&lt;/code&gt; function&lt;/a&gt; to perform the individual animations. I will just focus on the animation of the symbols here as they are the most complicated.&lt;/p&gt;

&lt;p&gt;It is helpful to extract out common values as variables, I found it a bit tricky to get the &lt;code&gt;duration&lt;/code&gt;, &lt;code&gt;ease&lt;/code&gt;, and the overlapping of the animations the way I wanted. So having variables for this is the way to make adjustments simpler.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;tl1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TimelineMax&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;symbolRevealDuration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;symbolRevealOverlap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;symbolEase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;slow(0.7, 0.7, false)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// other stuff for animating circle and lines&lt;/span&gt;

&lt;span class="c1"&gt;// symbols&lt;/span&gt;
&lt;span class="nx"&gt;tl1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#symbol1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;symbolRevealDuration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;symbolEase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;`-=1.25`&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;tl1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#symbol2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;symbolRevealDuration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;symbolEase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;`-=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;symbolRevealOverlap&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;tl1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#symbol3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;symbolRevealDuration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;symbolEase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;`-=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;symbolRevealOverlap&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;tl1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#symbol4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;symbolRevealDuration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;symbolEase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;`-=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;symbolRevealOverlap&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see with the &lt;code&gt;to()&lt;/code&gt; function the third parameter is the &lt;code&gt;position&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;position: [ Number | String ]&lt;/p&gt;

&lt;p&gt;(default = "+=0") — controls the insertion point in the timeline (by default, it’s the end of the timeline).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By default, animations are added to the end of the timeline, so that everything is sequenced one-after-the-other. We can use the &lt;code&gt;position&lt;/code&gt; parameter to overlap the revealing of the symbols. For example, for &lt;em&gt;#symbol1&lt;/em&gt; we supply &lt;code&gt;"-=1.25"&lt;/code&gt;, which will begin the animation 1.25 seconds before the end of the timeline. This is what I hit upon that worked the way I wanted.&lt;/p&gt;

&lt;p&gt;You could also use &lt;code&gt;"&amp;lt;+=1"&lt;/code&gt; for the position &lt;code&gt;parameter&lt;/code&gt; to start an animation 1 second after the start of the previous animation. This is probably a more intuitive way to do it, to give others a better chance of understanding the code quickly. Since, I discovered this notation later, I didn't feel like returning to change it (sorry)! These are some of the lessons you learn along the way!&lt;/p&gt;

&lt;p&gt;I put the code on GitHub along with some other title sequences, if you want to grab it: &lt;a href="https://github.com/robole/title-sequences"&gt;https://github.com/robole/title-sequences&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;That's it. I hope you enjoyed this short whistle-stop tour. If you a fan of the show, enjoy the new season!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to use Proof-of-Competence Web3 on-boarding framework</title>
      <author>fangjun</author>
      <pubDate>Sat, 22 Jan 2022 15:16:41 +0000</pubDate>
      <link>https://dev.to/yakult/how-to-use-proof-of-competence-web3-on-boarding-framework-1853</link>
      <guid>https://dev.to/yakult/how-to-use-proof-of-competence-web3-on-boarding-framework-1853</guid>
      <description>&lt;p&gt;Web3 is open, and one's footprints can be verified on-chain. Proof-of-Competence web3 front-end framework (&lt;a href="https://github.com/wslyvh/proof-of-competence"&gt;https://github.com/wslyvh/proof-of-competence&lt;/a&gt;) provides a good start to building DAPPs to help users measure their own web3 activities. &lt;/p&gt;

&lt;p&gt;It is developed by Wesley(&lt;a href="https://twitter.com/wslyvh"&gt;@wslyvh&lt;/a&gt;). He explains it as follows:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Proof of Competence (PoC) is an open, permissionless framework to create on-boarding journeys into the Web3 space. It uses a pluggable task system which can verify that on-chain actions have occurred. This allows to build up reputation or social (DAO) scores that proof an address is familiar with the specified technologies or protocols.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can find Proof of Competence front-end framework at: &lt;a href="https://www.poc.quest"&gt;https://www.poc.quest&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-how-it-works"&gt;
  &lt;/a&gt;
  1. How it works
&lt;/h2&gt;

&lt;p&gt;Users can connect wallet via MetaMask or WalletConnect to Proof-of-Competence(PoC) DAPP to track their own web3 footprint. You get a score for a specific web3 journey. &lt;/p&gt;

&lt;p&gt;PoC is designed with three concepts: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Journey&lt;/strong&gt;, a list of tasks for web3 users, stored in JSON format. It will give user a score according to the activities of his address.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Task&lt;/strong&gt;, a unique task such as having Token/NFT, deployed contract and etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Verifier&lt;/strong&gt;, verify a task using public information(e.g. on-chain, Subgraphs, or public blockchain explorers). To use PoC framework, we need to write verifier for our own task in the  &lt;code&gt;/src/verifers&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PoC framework also provides restful API using Next.js API routers so that we can use the scores via API.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;PoC API&lt;/strong&gt;, restful API using Next.js. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PoC framework uses on-chain data through:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Infura API,&lt;/li&gt;
&lt;li&gt;Alchemy API,&lt;/li&gt;
&lt;li&gt;Etherscan API, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is developed with these Node.js and web3 components: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Next.js&lt;/strong&gt;, the React framework by Vercel. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Chakra UI&lt;/strong&gt;, modular React UI Components.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ethers.js&lt;/strong&gt;, library to interact with Ethereum.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Web3-react&lt;/strong&gt;, React UI for connecting wallect.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-how-to-install-it-locally"&gt;
  &lt;/a&gt;
  2. How to install it locally
&lt;/h2&gt;

&lt;p&gt;Download the project sourcecode:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;clone&lt;/span&gt; &lt;span class="nx"&gt;git&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;wslyvh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;proof&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;competence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;git&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are sample journeys, tasks, and verifiers in &lt;code&gt;web/src/&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;web&lt;/code&gt; directory and run this Next.js project locally:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="nx"&gt;dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can view the DAPP at &lt;code&gt;http://localhost:3000&lt;/code&gt; in your browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-add-your-own-web3-journey-with-tasks"&gt;
  &lt;/a&gt;
  3. Add your own web3 journey with tasks
&lt;/h2&gt;

&lt;p&gt;Let's copy &lt;code&gt;/web/src/journeys/useWeb3.json&lt;/code&gt; to &lt;code&gt;/web/src/journeys/basicWeb3.json&lt;/code&gt; and edit our journey based on it. Basic Web3 User journey has two tasks: have address, have ENS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Basic Web3 User&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Onboarding new developers into the Web3 space&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;website&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://www.ethereum.org/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;twitter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fjun99&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tasks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Have a wallet address&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You need a wallet address to enter Web3 universe.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;points&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;verifier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;active-address&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ENS: Ethereum Name Service&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Register your ENS name at https://ens.domains/ with a reverse lookup.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;points&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;verifier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ens-reverse-lookup&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can view our journey at: &lt;a href="http://localhost:3000/basicWeb3"&gt;http://localhost:3000/basicWeb3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are several verifiers in this project and we use &lt;code&gt;active-address&lt;/code&gt;, &lt;code&gt;ens-reverse-lookup&lt;/code&gt;, &lt;code&gt;has-poap&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;active-address&lt;/li&gt;
&lt;li&gt;first-transaction&lt;/li&gt;
&lt;li&gt;ens-reverse-lookup&lt;/li&gt;
&lt;li&gt;has-poap&lt;/li&gt;
&lt;li&gt;has-nft&lt;/li&gt;
&lt;li&gt;deployed-contract&lt;/li&gt;
&lt;li&gt;vote-on-snapshot&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are also several dummy verifiers to start with: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;test-always-false&lt;/li&gt;
&lt;li&gt;test-always-gtrue&lt;/li&gt;
&lt;li&gt;test-random-number&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can get the journey and score from restful API at:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//localhost:3000/api/journey?name=basicWeb3&lt;/span&gt;

&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//localhost:3000/api/journey/score?journey=basicweb3&amp;amp;address=0x00&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : You can also deploy this project online using GitHub &amp;amp; Vercel. Vercel's tutorial: &lt;a href="https://nextjs.org/learn/basics/deploying-nextjs-app"&gt;https://nextjs.org/learn/basics/deploying-nextjs-app&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;We will continue to develop our own task and verifier locally.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-some-preparations-for-development"&gt;
  &lt;/a&gt;
  4. Some preparations for development
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#41-add-raw-envlocal-endraw-"&gt;
  &lt;/a&gt;
  4.1 Add &lt;code&gt;.env.local&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;We will use NEXT.js environment variables to store infura, Alechemy and Etherscan API ID/keys. Variables with prefix &lt;code&gt;NEXT_PUBLIC_&lt;/code&gt; can be accessed from the browser. More details about NEXT.js environment variables at: &lt;a href="https://nextjs.org/docs/basic-features/environment-variables"&gt;https://nextjs.org/docs/basic-features/environment-variables&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add file &lt;code&gt;.env.local&lt;/code&gt;. This file should be added to .gitignore if you opensource your project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//.env.local&lt;/span&gt;
&lt;span class="nx"&gt;NEXT_PUBLIC_ALCHEMY_API_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//eth-mainnet.g.alchemy.com/v2/&lt;/span&gt;
&lt;span class="nx"&gt;NEXT_PUBLIC_ALCHEMY_API_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;NEXT_PUBLIC_INFURA_API_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;d7&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;NEXT_PUBLIC_ETHERSCAN_API_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;ab&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#42-notes-on-alchemy-api"&gt;
  &lt;/a&gt;
  4.2 Notes on Alchemy API
&lt;/h3&gt;

&lt;p&gt;We will use Alchemy API to interact with Ethereum mainnet. Documents can be found at: &lt;a href="https://docs.alchemy.com/alchemy/"&gt;https://docs.alchemy.com/alchemy/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Token API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will call &lt;code&gt;alchemy_getTokenBalances&lt;/code&gt; to get ERC20 token balance.&lt;/p&gt;

&lt;p&gt;Reference: &lt;a href="https://docs.alchemy.com/alchemy/enhanced-apis/token-api#alchemy_gettokenbalances"&gt;https://docs.alchemy.com/alchemy/enhanced-apis/token-api#alchemy_gettokenbalances&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chain API / Ethereum API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will call &lt;code&gt;eth_getBalance&lt;/code&gt; to get Ether balance of an address. &lt;/p&gt;

&lt;p&gt;Reference: &lt;a href="https://docs.alchemy.com/alchemy/apis/ethereum/eth_getbalance"&gt;https://docs.alchemy.com/alchemy/apis/ethereum/eth_getbalance&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using Ethereum API, we can interact with the Ethereum RPC directly. &lt;/p&gt;

&lt;p&gt;Another Option is to interact with Ethereruem RPC using &lt;code&gt;ethers.js&lt;/code&gt; through Alechemy endpoint. We will use this option to check if a user owns a specific NFT later.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;NFT API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the sample NFT verifier in the project, it calls Alchemy NFT API &lt;code&gt;getNFTs&lt;/code&gt; to get information about the NFTs of an address. &lt;/p&gt;

&lt;p&gt;Two notes here:&lt;/p&gt;

&lt;p&gt;First, NFT API is in the V1 of Alchemy API. We need to change the endpoint from V2 to V1: &lt;code&gt;https://eth-mainnet.g.alchemy.com/your-api-key/v2&lt;/code&gt; should be &lt;code&gt;https://eth-mainnet.g.alchemy.com/your-api-key/v1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Second, NFT API need to apply manually, otherwise your call will return:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Eth NFT API v1 not enabled on this account - please visit &lt;a href="https://alchemyapi.typeform.com/nft-api-access"&gt;https://alchemyapi.typeform.com/nft-api-access&lt;/a&gt; to request access!"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I applied using this form. But I haven't received permission yet. So we will interact directly with an ERC721 contract using &lt;code&gt;ethers.js&lt;/code&gt; in section 7.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-add-a-verifier-to-measure-eth-of-your-address"&gt;
  &lt;/a&gt;
  5. Add a verifier to measure ETH of your address
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#step-1-add-verifier"&gt;
  &lt;/a&gt;
  Step 1: add verifier
&lt;/h3&gt;

&lt;p&gt;Add a verifier called &lt;code&gt;has-ETH&lt;/code&gt;. Let's begin with copy &lt;code&gt;test-always true&lt;/code&gt; directory and change the directory name to &lt;code&gt;has-ETH&lt;/code&gt;. The index.ts in this directory looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2-add-task-to-the-journey"&gt;
  &lt;/a&gt;
  Step 2: add task to the journey
&lt;/h3&gt;

&lt;p&gt;In &lt;code&gt;web/src/journeys/basicWeb3.json&lt;/code&gt;, add a task:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;has ETH&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Own 0.1+ ETH.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;points&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;verifier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;has-ETH&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;params&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;amount&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Explanation of this task:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Points: 400 points&lt;/li&gt;
&lt;li&gt;Verifier: has-ETH&lt;/li&gt;
&lt;li&gt;params: 0.1. If the user's address has more than 0.1 ETH, the user gets 400 points.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's go to the web page &lt;code&gt;http://localhost:3000/basicWeb3&lt;/code&gt;, you can see that you get 400 points as the verifier always returns &lt;code&gt;true&lt;/code&gt; now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-program-haseth-verifier"&gt;
  &lt;/a&gt;
  Step 3: program has-ETH verifier
&lt;/h3&gt;

&lt;p&gt;Let's program the &lt;code&gt;has-ETH&lt;/code&gt; verifier:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// verifiers/has-ETH/index.ts&lt;/span&gt;
&lt;span class="c1"&gt;// Reminder:add in `.env.local`: NEXT_PUBLIC_ALCHEMY_API_URL, NEXT_PUBLIC_ALCHEMY_API_KEY&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amount&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_ALCHEMY_API_URL&lt;/span&gt;&lt;span class="p"&gt;}${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_ALCHEMY_API_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;  
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jsonrpc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;method&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eth_getBalance&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;params&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;latest&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
            &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
            &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
          &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;e18&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We call &lt;code&gt;eth_getBalance&lt;/code&gt; using Alechmy Etherum API. If result &amp;gt; amount, the verifier returns true.&lt;/p&gt;

&lt;p&gt;In my test address, there is about 0.15 ETH in it. The task is passed and I get 400 points.&lt;/p&gt;

&lt;p&gt;Let's change the amount in the journey to 0.2 ETH. The task is failed and I don't get 400 points.&lt;/p&gt;

&lt;p&gt;TODO NOTE: We program this example quickly and we should consider modifying this verifier so that it can be used in testnet (Ropsten), sidechain (Polygon), L2 (Arbitrum/Optimism) and other EVM. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-add-a-verifier-to-measure-erc20-token"&gt;
  &lt;/a&gt;
  6. Add a verifier to measure ERC20 token
&lt;/h2&gt;

&lt;p&gt;In this section, you will add a verifier &lt;code&gt;has-token-ERC20&lt;/code&gt; to measure ERC20 token in your address. &lt;/p&gt;

&lt;p&gt;Add directory &lt;code&gt;has-token-RRC20&lt;/code&gt; and then edit &lt;code&gt;index.ts&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// verifiers/has-token-ERC20/index.ts&lt;/span&gt;
&lt;span class="c1"&gt;// Reminder:add in `.env.local`: NEXT_PUBLIC_ALCHEMY_API_URL, NEXT_PUBLIC_ALCHEMY_API_KEY&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;contractAddress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;addressERC20&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amount&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_ALCHEMY_API_URL&lt;/span&gt;&lt;span class="p"&gt;}${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_ALCHEMY_API_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;  
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jsonrpc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;method&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;alchemy_getTokenBalances&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;params&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="nx"&gt;contractAddress&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
            &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
            &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
          &lt;span class="p"&gt;})&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tokenBalances&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tokenBalances&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;balance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;balance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tokenBalance&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;e18&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's add a task to measure whether the user's address has ERC20 &lt;code&gt;ENS Token&lt;/code&gt; and the amount should be 10+:&lt;/p&gt;

&lt;p&gt;ENS ERC20 Token contract address: &lt;code&gt;0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add a task in &lt;code&gt;basicWeb3.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;has 10+ ENS Token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Own 10+ ENS ERC20 Token.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;points&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;verifier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;has-token-ERC20&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;params&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;addressERC20&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;amount&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As I have ENS ERC20 token in my test address, I can pass this task and get 400 points.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-add-a-verifier-to-measure-erc721-nft"&gt;
  &lt;/a&gt;
  7. Add a verifier to measure ERC721 NFT
&lt;/h2&gt;

&lt;p&gt;In this section, you will add a verifier &lt;code&gt;has-nft-ERC721&lt;/code&gt; to check where you have at least one specific ERC721 token in your address.&lt;/p&gt;

&lt;p&gt;We will use &lt;code&gt;ethers.js&lt;/code&gt; to call an ERC721 contract function &lt;code&gt;balanceOf(address)&lt;/code&gt; to check. Add &lt;code&gt;has-nft-ERC721/index.ts&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// has-nft-ERC721/index.ts&lt;/span&gt;
&lt;span class="c1"&gt;// Reminder:add in `.env.local`: NEXT_PUBLIC_ALCHEMY_API_URL, NEXT_PUBLIC_ALCHEMY_API_KEY&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ethers&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ethers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AlchemyProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@ethersproject/providers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;contractAddress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;addressERC721&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;addressERC721&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;ethers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;utils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAddress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;contractAddress&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AlchemyProvider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chainId&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_ALCHEMY_API_KEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;contract&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ethers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Contract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;contractAddress&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;abi&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;balanceOfNFT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;contract&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;balanceOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;balanceOfNFT&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;abi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;constant&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;inputs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:[{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;internalType&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;owner&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}],&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;balanceOf&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;outputs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:[{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;internalType&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;uint256&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;uint256&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}],&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;payable&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stateMutability&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;view&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Explanation of what we do in this verifier:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;connect to a ERC721 contract with &lt;code&gt;ethers.Contract( contractAddress , abi , provider )&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;call &lt;code&gt;contract.balanceOf(address)&lt;/code&gt; to get NFT amount of user's address.&lt;/li&gt;
&lt;li&gt;we provide ABI segment of the need contract function (&lt;code&gt;balanceOf()&lt;/code&gt;) in &lt;code&gt;const abi&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Add a task in &lt;code&gt;basicWeb3.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Own a ERC721 NFT&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Own an ENS NFT(ERC721).&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;points&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;verifier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;has-nft-ERC721&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;params&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;addressERC721&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85&lt;/code&gt; is the contract address of ENS ERC721 NFT.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-end-of-the-beginning"&gt;
  &lt;/a&gt;
  The End of the beginning
&lt;/h2&gt;

&lt;p&gt;Now, you can begin to add tasks and verifiers to your protocol for on-boarding web3 users.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>web3</category>
      <category>nextjs</category>
      <category>ethersjs</category>
    </item>
    <item>
      <title>The Error «A Disk Read Error Occurred» or «BOOTMGR is Missing» – How to Fix</title>
      <author>Michael Mirosnichenko</author>
      <pubDate>Sat, 22 Jan 2022 14:36:08 +0000</pubDate>
      <link>https://dev.to/hetmansoftware/the-error-or-how-to-fix-5d89</link>
      <guid>https://dev.to/hetmansoftware/the-error-or-how-to-fix-5d89</guid>
      <description>&lt;p&gt;While working with the computer, you must have seen a number of errors, and one of them can be A disk read error occurred. Press Ctrl + Alt + Del to restart or BOOTMGR is missing. Press Ctrl + Alt + Del to restart. Read this article on the causes behind these errors and how to fix them.&lt;/p&gt;

&lt;p&gt;Errors like this can be triggered by many factors such as wrong BIOS configuration, a virus infestation, damage to the hard disk and so on. Here are some possible solutions:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#disable-external-storage-devices"&gt;
  &lt;/a&gt;
  Disable external storage devices
&lt;/h2&gt;

&lt;p&gt;If there are any external devices connected to your computer, such as DVD or USB drives, disconnect them to see if the error appears again.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sCC4Oqu_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hetmanrecovery.com/pic/blog/a157/disable-external-storage-devices.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sCC4Oqu_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hetmanrecovery.com/pic/blog/a157/disable-external-storage-devices.jpg" alt="Image description" width="500" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#check-the-connection"&gt;
  &lt;/a&gt;
  Check the connection
&lt;/h2&gt;

&lt;p&gt;Although your computer worked all right last time, it doesn’t mean that it will work properly the next time you start it. It is quite possible that such an error can be caused by poor contact with the hard disk, so it’s a good idea to test the quality of connection.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oW8Bbzbh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hetmanrecovery.com/pic/blog/a157/check-the-connection.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oW8Bbzbh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hetmanrecovery.com/pic/blog/a157/check-the-connection.jpg" alt="Image description" width="610" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#check-the-device-with-other-pcs"&gt;
  &lt;/a&gt;
  Check the device with other PCs
&lt;/h2&gt;

&lt;p&gt;In addition to a hard disk problem, other PC components may break down as well. That means that you should check the disk operability with another computer which is in good working condition.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#check-the-os-boot-priority"&gt;
  &lt;/a&gt;
  Check the OS boot priority
&lt;/h2&gt;

&lt;p&gt;Choosing a wrong bot priority in BIOS can also result in one of such errors. If your computer has several storage devices, you should check the boot sequence settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ee8SMwsG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hetmanrecovery.com/pic/blog/a157/check-the-os-boot-priority.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ee8SMwsG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hetmanrecovery.com/pic/blog/a157/check-the-os-boot-priority.png" alt="Image description" width="610" height="185"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#restore-mbr-or-boot-sector"&gt;
  &lt;/a&gt;
  Restore MBR or boot sector
&lt;/h2&gt;

&lt;p&gt;Damage to MBR, the Master Boot Record, can also cause read disk errors. To fix it, you will have to bot from a Windows installation disk or USB drive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CbiTZWts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hetmanrecovery.com/pic/blog/a157/restore-mbr-or-boot-sector.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CbiTZWts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hetmanrecovery.com/pic/blog/a157/restore-mbr-or-boot-sector.jpg" alt="Image description" width="432" height="319"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click Next. Select Repair your computer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fhYagyXM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hetmanrecovery.com/pic/blog/a157/restore-mbr-or-boot-sector-02.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fhYagyXM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hetmanrecovery.com/pic/blog/a157/restore-mbr-or-boot-sector-02.jpg" alt="Image description" width="432" height="323"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then Troubleshooting&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HU483I4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hetmanrecovery.com/pic/blog/a157/troubleshooting.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HU483I4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hetmanrecovery.com/pic/blog/a157/troubleshooting.jpg" alt="Image description" width="768" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read the &lt;a href="https://hetmanrecovery.com/recovery_news/methods-for-solving-the-errors-a-disk-read-error-occurred-and-bootmgr-is-missing.htm"&gt;full article&lt;/a&gt; with all additional video tutorials. Also visit our &lt;a href="https://www.youtube.com/channel/UCu-D9QnPsAPn7AtxL4HXLUg"&gt;Youtube channel&lt;/a&gt;, there are over 400 video tutorials.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>testing</category>
      <category>tutorial</category>
      <category>security</category>
    </item>
    <item>
      <title>A Curated List of Resource to Build Website and Apps Without Code!</title>
      <author>abhiram-ar</author>
      <pubDate>Sat, 22 Jan 2022 14:10:59 +0000</pubDate>
      <link>https://dev.to/ieeemace/a-curated-list-of-resource-to-build-website-and-apps-without-code-607</link>
      <guid>https://dev.to/ieeemace/a-curated-list-of-resource-to-build-website-and-apps-without-code-607</guid>
      <description>&lt;p&gt;Are you a beginner to programming? or do you want to build a website or an App without learning to code or &lt;em&gt;NO CODE&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;Here are some list of platforms available to build responsive websites and applications&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Web development without Coding&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;1.Bootstrap studio&lt;br&gt;
Link :&lt;a href="https://bootstrapstudio.io/"&gt; https://bootstrapstudio.io/ &lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YEUZtc28--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8l3hc6a8k54yxh3ihdh7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YEUZtc28--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8l3hc6a8k54yxh3ihdh7.jpeg" alt="Image description" width="624" height="381"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bootstrap Studio&lt;/strong&gt; is an app for creating beautiful websites. It comes with a large number of built-in components, which you can drag and drop to assemble responsive web pages. It is built on top of the hugely popular Bootstrap framework, and exports clean and semantic HTML. &lt;/p&gt;

&lt;p&gt;If you need a component which doesn't exist in our library, just click the Online tab in the Component Panel. There you will find thousands of components built and shared by the community. You can also upload your own.&lt;/p&gt;

&lt;p&gt;If you have a website that you've developed previously, you can import it. Just drag and drop the HTML, CSS, JS files and images into Bootstrap Studio and they will be added to your project. &lt;/p&gt;

&lt;p&gt;2.Bravostudio&lt;br&gt;
Link :  &lt;a href="https://www.bravostudio.app/"&gt;https://www.bravostudio.app/ &lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MsCOQbEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zwxu5utplnnctkv15rdy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MsCOQbEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zwxu5utplnnctkv15rdy.png" alt="Image description" width="415" height="251"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bravo Studio is an app builder  for designers. It makes it  possible to turn Figma  prototypes into native iOS and  Android app instantly without  writing any code  &lt;/p&gt;

&lt;p&gt;3.Quest.ai &lt;br&gt;
Link : &lt;a href="https://www.quest.ai/"&gt;https://www.quest.ai/&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W4glxz_Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vmstt7s9twd1n7tbl5g.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W4glxz_Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vmstt7s9twd1n7tbl5g.jpeg" alt="Image description" width="564" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Convert your designs into responsive, live websites automatically. Add interactions, motion graphics, video, audio without writing any code. Connect to data and content source and build fully-functioning websites, landing pages, product pages, or business applications easily. With Quest, anyone can build what they envision without being constrained by their engineering bandwidth. &lt;/p&gt;

&lt;p&gt;4.Wix website builder Link :&lt;a href="https://www.wix.com/"&gt; https://www.wix.com/ &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c1j4BEwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/863a4uoxykomx1lzbh8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c1j4BEwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/863a4uoxykomx1lzbh8u.png" alt="Image description" width="600" height="353"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wix is totally beginner friendly.Wix is a free web-based website builder based.You can build responsive website just by drag and drop feature,, so you don't need coding skills, . &lt;/p&gt;

&lt;p&gt;Free version has all the tools you need for development.And you have thousands of templates of different category to begin with &lt;/p&gt;

&lt;p&gt;There are many modules that you can add-on in the wix store and you can publish the website for free(though .wix will be added in the domain address in the free version).And there are build in option for search engine optimisation &lt;/p&gt;

&lt;p&gt;5.Webflow&lt;br&gt;
Link :&lt;a href="https://webflow.com/"&gt; https://webflow.com/ &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A6pUPMFv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eqibmxv8dscotnurxybb.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A6pUPMFv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eqibmxv8dscotnurxybb.jpeg" alt="Image description" width="624" height="351"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With Webflow you can build a prototype that is already a finished product. How cool is that?&lt;/p&gt;

&lt;p&gt;Webflow is a powerful, web-based design tool that gives you the superpower of designing, building, and launching responsive websites without the use of code. It’s an all-star level design platform that allows you to go from the initial idea to ready-to-use products. &lt;/p&gt;

&lt;p&gt;It fills the gap between software like Squarespace, Wix, and the world's most popular CMS WordPress. Webflow's design flexibility, lightning speed performance, and ease- of-use make it quite a success story as I find Webflow referred to as the next-generation tool for building and launching websites by newcomers and professionals across the web. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;App development without Coding&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;In the past you had to be a programmer to make an app, which would likely take weeks, months or even years. Now, however, there are numerous app - building platforms you can use to create an app in minutes. We’ve put &lt;/p&gt;

&lt;p&gt;together some of our favorites for you here. &lt;/p&gt;

&lt;p&gt;1.MIT App Inventor &lt;br&gt;
Link :&lt;a href="https://appinventor.mit.edu/"&gt; https://appinventor.mit.edu/ &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LKrgutR---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fet42upkyzud3dbf7180.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LKrgutR---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fet42upkyzud3dbf7180.jpeg" alt="Image description" width="624" height="351"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MIT App Inventor is &lt;strong&gt;great for beginners&lt;/strong&gt;! ... The layout is visual, and relies on drag and drop which helps users understand the components needed for an app. It also clearly has features of Android programming in Java which makes the transition to written code for Android easier &lt;/p&gt;

&lt;p&gt;2.AppyPie &lt;br&gt;
link: &lt;a href="https://www.appypie.com/app-builder/appmaker"&gt; https://www.appypie.com/app-builder/appmaker &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_DwOU-YC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhkmuelnblw32g0rpa1x.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_DwOU-YC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhkmuelnblw32g0rpa1x.jpeg" alt="Image description" width="624" height="351"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AppyPie has helped more than 3 million creators to build a fully functional mobile app with nothing but visual building blocks.  &lt;/p&gt;

&lt;p&gt;On top of support for Android and iOS, AppyPie also offers full-on PWA (Progressive Web Apps) functionality. So, your mobile app will be viewable in a web browser like a regular website. This pretty much solves two issues at the same time &lt;/p&gt;

&lt;p&gt;3.Adalo &lt;br&gt;
Link &lt;a href="https://www.adalo.com/"&gt;:https://www.adalo.com/ &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/qicS8eZh-cs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hSGars0o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fo1cfxnf9491kytbbp79.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hSGars0o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fo1cfxnf9491kytbbp79.jpeg" alt="Image description" width="624" height="509"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adalo helps you design new apps ,without any coding skills. You will be capable of completely controlling your design by using drag and drop components. &lt;/p&gt;

&lt;p&gt;With Adalo, you have the freedom to add database configuration and interactions automatically. If you have an existing API, then Adalo will integrate with the same. With a single click, you will be able to launch the true version of your mobile apps on the application stores for Android and iOS. &lt;/p&gt;

&lt;p&gt;In conclusion, know what features you’re looking for in your mobile/Web application. This will help you narrow down the platforms which can &lt;br&gt;
best serve your needs.&lt;/p&gt;

&lt;p&gt;And that concludes our list.&lt;br&gt;
Happy Building!&lt;/p&gt;



&lt;pre&gt;&lt;br&gt;&lt;br&gt;
    ❤️ &lt;a href="https:ieeemace.org"&gt;Website&lt;/a&gt;  |  📷&lt;a href="https://www.instagram.com/ieeemace"&gt;Instagram &lt;/a&gt;  |  💼&lt;a href="https://in.linkedin.com/company/ieeemace"&gt;LinkedIn&lt;/a&gt;   |  🐥&lt;a href="https://twitter.com/ieeemace"&gt;Twitter&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
&lt;/pre&gt;

</description>
      <category>webdev</category>
      <category>app</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to build a REST API using NodeJS</title>
      <author>Kira</author>
      <pubDate>Sat, 22 Jan 2022 14:08:57 +0000</pubDate>
      <link>https://dev.to/kira272921/how-to-build-a-rest-api-using-nodejs-19ai</link>
      <guid>https://dev.to/kira272921/how-to-build-a-rest-api-using-nodejs-19ai</guid>
      <description>&lt;p&gt;👋 Hey everyone, I know it's been a long since I posted a new blog 😅. 👀 So in this blog post we are doing to build a REST API that would serve as a source of motivation for developers using NodeJS and MongoDB. So let's get started 🏄‍♂️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRDSqzlB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/r3XdvPsAV3kAAAAS/despicable-me-minions.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRDSqzlB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/r3XdvPsAV3kAAAAS/despicable-me-minions.gif" alt="" width="178" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-an-api"&gt;
  &lt;/a&gt;
  What's an API? 🤔
&lt;/h1&gt;

&lt;p&gt;API stands for "Application Programming Interface" which is a tool that allows two applications to talk to each other 📞. Let's understand the meaning of API by some real-life examples ✨&lt;/p&gt;

&lt;p&gt;So you have built an amazing e-store application and you wanted other developers to build applications on it. Now you have to build some sort of software that communicates between your web service and the developer's application and that's where API comes in.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sMEPWPXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5mJq34Yb--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://user-images.githubusercontent.com/26124625/104198884-ca1bcf80-544c-11eb-94d1-22548426ad4d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sMEPWPXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5mJq34Yb--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://user-images.githubusercontent.com/26124625/104198884-ca1bcf80-544c-11eb-94d1-22548426ad4d.png" alt="" width="880" height="284"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-a-rest-api"&gt;
  &lt;/a&gt;
  What's a REST API? 🤔
&lt;/h2&gt;

&lt;p&gt;Now as you have let's talk something about "REST APIs". REST stands for &lt;strong&gt;Representational State Transfer&lt;/strong&gt;, it's one of the most popularly known type of API architecture. These types of APIs follow the client-server model, where one program sends a request and the other response with some data.&lt;br&gt;
The requests are HTTP methods such as POST, GET, PUT, DELETE...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zIeIOmJ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8sH5rrSh--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://user-images.githubusercontent.com/26124625/104204412-431e2580-5453-11eb-9827-29a65aa6ff82.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zIeIOmJ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8sH5rrSh--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://user-images.githubusercontent.com/26124625/104204412-431e2580-5453-11eb-9827-29a65aa6ff82.png" alt="" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You would have a more clear understanding of APIs and REST APIs when we build a project 👀. So what are we waiting for, let's dive started into coding 👨‍💻.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#setting-up-the-project-%F0%9F%9B%A0"&gt;
  &lt;/a&gt;
  Setting up the project 🛠
&lt;/h1&gt;

&lt;p&gt;Let's set up our project so that we can start coding 👨‍💻.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creating a separate folder for our project
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;dev-credits-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Navigate into the folder
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;dev-credits-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Initializing the project
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   &lt;span class="nv"&gt;$ &lt;/span&gt;npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Installing the required packages
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   &lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;mongoose express dotenv cors

   &lt;span class="c"&gt;# or&lt;/span&gt;

   &lt;span class="nv"&gt;$ &lt;/span&gt;yarn add mongoose express dotenv cors
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Express is the framework by which we are going to our REST API&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mongoose is the tool that we are going to use to communicate with our MongoDB database&lt;/p&gt;

&lt;p&gt;4.1. Installing nodemon as a dev dependency&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt; &lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;nodemon &lt;span class="nt"&gt;-D&lt;/span&gt;

 &lt;span class="c"&gt;# or&lt;/span&gt;

 &lt;span class="nv"&gt;$ &lt;/span&gt;yarn add nodemon &lt;span class="nt"&gt;-D&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;ul&gt;
&lt;li&gt;Nodemon is used for automatically restarting the server on file changes detected in the directory. This would be helpful as we would not be restarting the server each time we do changes&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#building-the-rest-api"&gt;
  &lt;/a&gt;
  Building the REST API 👨‍💻
&lt;/h1&gt;

&lt;p&gt;As we have completed the setup for our project, let's get started building the REST API.&lt;/p&gt;

&lt;p&gt;Create a new file named &lt;code&gt;index.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here is the boilerplate code for a basic express app&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server is running at port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's breakdown it into and understand each part:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We are requiring the express package into our file so that we can use it&lt;/li&gt;
&lt;li&gt;We are assigning some value to the variable port, the port where our server would be running. You might be thinking why is there a &lt;code&gt;process.env.PORT&lt;/code&gt;? 🤔. It's because during deployment on services such as Heroku the port number might vary, it may not be 3000 so we are telling that if there is a PORT environment variable then use that else use 3000&lt;/li&gt;
&lt;li&gt;The last piece of code is telling to which port the server should listen, in our case it's the &lt;code&gt;PORT&lt;/code&gt; variable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's add a new script named &lt;code&gt;start&lt;/code&gt; to the &lt;code&gt;package.json&lt;/code&gt; file which uses nodemon to automatically restart the server on file changes detected. So after the changes our scripts in &lt;code&gt;package.json&lt;/code&gt; would look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon index.js"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's start our server by running the &lt;code&gt;npm start&lt;/code&gt; command. The server would be running at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;. You prompted with an error something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l8ABC1Iz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/XeUfz0l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l8ABC1Iz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/XeUfz0l.png" alt="" width="106" height="48"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is happening because we haven't defined the &lt;code&gt;/&lt;/code&gt; (aka the root route)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#http-methods-explained"&gt;
  &lt;/a&gt;
  HTTP methods explained
&lt;/h2&gt;

&lt;p&gt;Let's take a break from coding and understand what do they do and what's the success and error status so that it would be easy for debugging 😎&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get"&gt;
  &lt;/a&gt;
  GET
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;What it does&lt;/strong&gt;: Request data from a specified resource&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Successful response&lt;/strong&gt;: 200 OK&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Error response&lt;/strong&gt;: 404 not found&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#post"&gt;
  &lt;/a&gt;
  POST
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;What it does&lt;/strong&gt;: Send data to the server to create a new resource&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Successful response&lt;/strong&gt;: 201 Created&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Error response&lt;/strong&gt;: 404 not found or 409 conflict - if the resource already exists&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#put"&gt;
  &lt;/a&gt;
  PUT
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;What it does&lt;/strong&gt;: Send data to the server to update a pre-existing resource&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Successful response&lt;/strong&gt;: 200 OK&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Error response&lt;/strong&gt;: 204 no content, 404 not found or 405 method not allowed&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#delete"&gt;
  &lt;/a&gt;
  DELETE
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;What it does&lt;/strong&gt;: Deletes a resource from the server&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Successful response&lt;/strong&gt;: 200 OK&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Error response&lt;/strong&gt;: 404 not found or 405 method not allowed&lt;/p&gt;

&lt;p&gt;Check out &lt;a href="https://http.cat/"&gt;http.cat&lt;/a&gt; for understanding what each HTTP status code means via funny cat images 😹&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-routes-%F0%9F%9B%A3"&gt;
  &lt;/a&gt;
  Adding routes 🛣
&lt;/h2&gt;

&lt;p&gt;Routes are different URL paths of an express app that are associated with different HTTP methods, such as &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's get started by creating &lt;code&gt;/&lt;/code&gt; which sends "Hello, World!"&lt;/p&gt;

&lt;p&gt;Add the below piece of code above the line where we declared the &lt;code&gt;port&lt;/code&gt; variable&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello, World!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's breakdown this piece of code:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;get&lt;/code&gt; method specifies the HTTP method for that route. You could use other HTTP methods like &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;...

&lt;ul&gt;
&lt;li&gt;There is a special routing method &lt;code&gt;all&lt;/code&gt; which is used for the routes which handle all kinds of HTTP methods&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;There is a callback method that is called when the server receives a request from that endpoint with that specified HTTP method&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;🥳 Horray! "Hello, World" is now visible in the &lt;code&gt;/&lt;/code&gt; route&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8KxSFRiJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/Lw35Azu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8KxSFRiJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/Lw35Azu.png" alt="" width="108" height="39"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-mongodb"&gt;
  &lt;/a&gt;
  Setting up MongoDB
&lt;/h2&gt;

&lt;p&gt;Let's get in the MongoDB database now 😎.&lt;/p&gt;

&lt;p&gt;Head over &lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt; and sign up/sign in and create a new project&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ttFBYoRy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/P1PiZ7r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ttFBYoRy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/P1PiZ7r.png" alt="" width="643" height="345"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You could your co-worker into the project if you wanted too.&lt;/p&gt;

&lt;p&gt;After the creation of the project, click on &lt;code&gt;Build a Database&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iOuZ8sco--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/COT14kz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iOuZ8sco--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/COT14kz.png" alt="" width="535" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You would be shown with a screen something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--26zLrmap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/gLTxjxN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--26zLrmap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/gLTxjxN.png" alt="" width="869" height="541"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's go ahead and choose the free plan 👀&lt;/p&gt;

&lt;p&gt;You would be shown some more options about the cloud provider and the location&lt;/p&gt;

&lt;p&gt;Let's choose the nearest region and move forward.&lt;/p&gt;

&lt;p&gt;You would be asked to create a user. This is required as you would need the username and password to generate a connection URL which is then used to connect MongoDB with your NodeJS app.&lt;/p&gt;

&lt;p&gt;The creation of the cluster would take 1 - 3 minutes. So let's grab a cup of coffee until then ☕. Ahh... it's been successfully created so let's get back to coding 👨‍💻&lt;/p&gt;

&lt;p&gt;Click on &lt;code&gt;Connect&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7FcJ1YKA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/YXMw142.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7FcJ1YKA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/YXMw142.png" alt="" width="571" height="321"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;code&gt;Connect your application&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5nvSh4VX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/26S40MA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5nvSh4VX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/26S40MA.png" alt="" width="707" height="534"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy the connection URL&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9zl7csLw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/YqtMG1i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9zl7csLw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/YqtMG1i.png" alt="" width="686" height="201"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;.env&lt;/code&gt; file and replace &lt;code&gt;&amp;lt;password&amp;gt;&lt;/code&gt; with the password of the user which you have replaced previously&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MONGODB_URL="mongodb+srv://kira272921:&amp;lt;password&amp;gt;@dev-credits-api.t5tkf.mongodb.net/myFirstDatabase?retryWrites=true&amp;amp;w=majority"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's head back to the good old &lt;code&gt;index.js&lt;/code&gt; file&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connecting-express-app-to-mongodb"&gt;
  &lt;/a&gt;
  Connecting Express app to MongoDB
&lt;/h2&gt;

&lt;p&gt;Let's start by requiring &lt;code&gt;mongoose&lt;/code&gt; and &lt;code&gt;dotenv&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's configure dotenv as well&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's finally add the piece of code which connects our express application to MongoDB&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mongoose&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MONGODB_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Connected to MongoDB&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;index.js&lt;/code&gt; file show looks something like this now&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;mongoose&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MONGODB_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Connected to MongoDB&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello, World!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server is running at port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🥳 We successfully connected our express app to the MongoDB database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-schema-and-model"&gt;
  &lt;/a&gt;
  Creating Schema and Model 📝
&lt;/h2&gt;

&lt;p&gt;A Schema is the structure of the documents in our database. It tells what fields are required, what's the data type of each field.&lt;/p&gt;

&lt;p&gt;A model provides a programming interface for interacting with the database (read, insert, update, etc).&lt;/p&gt;

&lt;p&gt;Let's create a new folder named &lt;code&gt;model&lt;/code&gt; and inside it let's create a &lt;code&gt;model.js&lt;/code&gt; where we will define our schema&lt;/p&gt;

&lt;p&gt;&lt;code&gt;model/model.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;devCredits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;devCredits&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;devCredits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's breakdown it down and understand&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We imported the &lt;code&gt;mongoose&lt;/code&gt; package into the &lt;code&gt;model/model.js&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;We created a new schema named &lt;code&gt;devCredits&lt;/code&gt;. The structure has the &lt;code&gt;credits&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt;. Credits are the number of dev credits the person has and the id is the discord id of the user (This API was initially created for a discord bot &lt;a href="https://github.com/Kira272921/dev-credits-bot"&gt;Dev credits bot&lt;/a&gt; so the schema of the database is kinda based on discord 🤷‍♂️)&lt;/li&gt;
&lt;li&gt;We have finally created a model named "devCredits"&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#adding-more-features"&gt;
  &lt;/a&gt;
  Adding more features 😎
&lt;/h2&gt;

&lt;p&gt;Let's add more routes to our REST API. Let's add routes where we can get the total dev credits of a user via their discord ID and give dev credits to other users using another route.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#giving-dev-credits-to-other-devs"&gt;
  &lt;/a&gt;
  Giving dev credits to other devs
&lt;/h3&gt;

&lt;p&gt;Let's import our model which we have just created into the &lt;code&gt;index.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;devCredits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./model/model.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's add a new POST route in the &lt;code&gt;index.js&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/post&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;credit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;devCredits&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;devCredits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;countDocuments&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;devCredits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOneAndUpdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;$inc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;new&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;devCredit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;devCredit&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;credit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's understand what exactly is going on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We have created a new POST route (&lt;code&gt;/post&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;We validate the data which we receive from the client using our model&lt;/li&gt;
&lt;li&gt;In the next piece of code we are checking if the user (user id) already exists in the database or not

&lt;ul&gt;
&lt;li&gt;If exists then we are going to increment the credits value&lt;/li&gt;
&lt;li&gt;Else we are going to create a new document with the user id and add the credits&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-to-test-the-api"&gt;
  &lt;/a&gt;
  How to test the API?
&lt;/h3&gt;

&lt;p&gt;We have successfully created added a new feature in our API 🥳. But wait how are we going to test it out 🤔&lt;/p&gt;

&lt;p&gt;👀 We are going to use a VSCode extension called &lt;a href="https://marketplace.visualstudio.com/items?itemName=rangav.vscode-thunder-client"&gt;Thunder Client&lt;/a&gt;, which is used for API testing. So let's quickly download it and test our new feature in our API 🥳.&lt;/p&gt;

&lt;p&gt;After the completion of the download, you are going to see a thunder icon in your sidebar 👀&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XA4C5_2i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/xpDcJ9t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XA4C5_2i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/xpDcJ9t.png" alt="" width="58" height="83"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click the thunder icon and you are going to see a section something like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PtUSs9UP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/FEa3FBo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PtUSs9UP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/FEa3FBo.png" alt="" width="238" height="670"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;code&gt;New Request&lt;/code&gt;. You would be prompted to screen something like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MMeZaB9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/8Df3YZO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MMeZaB9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/8Df3YZO.png" alt="" width="880" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's test out our &lt;code&gt;/post&lt;/code&gt; route now 🥳. Change the URL in the input box from &lt;code&gt;https://www.thunderclient.com/welcome&lt;/code&gt; to &lt;code&gt;HTTP:localhost:3000/post&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Change the HTTP method from &lt;code&gt;GET&lt;/code&gt; to &lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Su16MqTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/ID9Ieie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Su16MqTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/ID9Ieie.png" alt="" width="104" height="223"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Navigate to the &lt;code&gt;Body&lt;/code&gt; tab, this is the section where we are going to write the body of the request.&lt;/p&gt;

&lt;p&gt;I have added my discord ID and gave 100 dev credits to it, &lt;em&gt;cuz why not&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AdWtyBk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/RUfKWjt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AdWtyBk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/RUfKWjt.png" alt="" width="351" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's click and hope that it works 🤞&lt;/p&gt;

&lt;p&gt;🥁🥁🥁🥁🥁 and we got an error&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7DI_C3A_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/LP7dnOb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7DI_C3A_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/LP7dnOb.png" alt="" width="535" height="627"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This happened because we didn't have any middleware so let's them quickly&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cors&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urlencoded&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;extended&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: We had installed cors as a separated package, so don't forget to import it as well&lt;/p&gt;

&lt;p&gt;Let's try again now so that it works now 🤞&lt;/p&gt;

&lt;p&gt;🎉 &lt;strong&gt;TADA&lt;/strong&gt;! We have successfully created our first feature in the API which interacts with the MongoDB database&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ksau8RUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/JIJUj9f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ksau8RUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/JIJUj9f.png" alt="" width="505" height="253"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-the-total-dev-credits-of-a-user"&gt;
  &lt;/a&gt;
  Getting the total dev credits of a user
&lt;/h3&gt;

&lt;p&gt;Let's import our model which we have just created into the &lt;code&gt;index.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;devCredits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./model/model.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's add a new route in the &lt;code&gt;index.js&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/get/:id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;devCredits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;__v&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's breakdown this down&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We have created a new route with the GET method&lt;/li&gt;
&lt;li&gt;We are finding in the database for the ID given in the parameters&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's test it out again using Thunder Client 👀.&lt;/p&gt;

&lt;p&gt;🎉&lt;strong&gt;TADA&lt;/strong&gt;! It's works&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AkBubxxb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/GBIj7Xk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AkBubxxb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/GBIj7Xk.png" alt="" width="757" height="628"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cleaning-up-the-codebase"&gt;
  &lt;/a&gt;
  Cleaning up the codebase
&lt;/h2&gt;

&lt;p&gt;Let's clean up the codebase a bit 😅.&lt;/p&gt;

&lt;p&gt;Let's create a new folder called &lt;code&gt;routes&lt;/code&gt; and inside it let's create a new file &lt;code&gt;router.js&lt;/code&gt; which contains the routes&lt;/p&gt;

&lt;p&gt;&lt;code&gt;routes/router.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;devCredits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../model/model.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/get/:id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;devCredits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;__v&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/post&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;credit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;devCredits&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;devCredits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;countDocuments&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;devCredits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOneAndUpdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;$inc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;new&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;devCredit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;devCredit&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;credit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have imported the &lt;code&gt;routes/router.js&lt;/code&gt; file into the &lt;code&gt;index.js&lt;/code&gt; file and used it&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./routes/router.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cors&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urlencoded&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;extended&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt;

&lt;span class="nx"&gt;mongoose&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MONGODB_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Connected to MongoDB&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello, World!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server is running at port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's test it out so that we are sure that our code and we didn't mess up by cleaning up the mess 😆&lt;/p&gt;

&lt;p&gt;🥳 Horray! There isn't any error and the code still works as it was before&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kn0yO8AL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/Jj9ee1L.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kn0yO8AL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/Jj9ee1L.png" alt="" width="759" height="576"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;😅 Doesn't &lt;code&gt;routes/router.js&lt;/code&gt; seem kinda filled up with the logic and make it kinda messy?&lt;/p&gt;

&lt;p&gt;Let's create a new folder named &lt;code&gt;controllers&lt;/code&gt;. In this folder, we will store the logic related to each route.&lt;/p&gt;

&lt;p&gt;Let's get started by creating a new file in the &lt;code&gt;controllers&lt;/code&gt; folder named &lt;code&gt;getCredits.js&lt;/code&gt; and &lt;code&gt;postCredits.js&lt;/code&gt; which contains the logic related to the &lt;code&gt;/get&lt;/code&gt; route and &lt;code&gt;/post&lt;/code&gt; route respectively&lt;/p&gt;

&lt;p&gt;&lt;code&gt;controllers/getCredits.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;devCredits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../model/model.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getCredits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;devCredits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;__v&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getCredits&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;controllers/postCredits.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;devCredits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../model/model.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;postCredits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;credit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;devCredits&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;devCredits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;countDocuments&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;devCredits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOneAndUpdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;$inc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;new&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;devCredit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;devCredit&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;credit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;postCredits&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;routes/router.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;devCredits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../model/model.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getCredits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../controllers/getCredits.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;postCredits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../controllers/postCredits.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/get/:id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getCredits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/post&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;postCredits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Phew, that was a lot of work 😹&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-rate-limit"&gt;
  &lt;/a&gt;
  Adding rate limit
&lt;/h2&gt;

&lt;p&gt;You don't want some random guy to just spam your entire database 😆. So let's add a rate limit to our API when restricts the client to perform only a few requests every x minutes&lt;/p&gt;

&lt;p&gt;Let's install &lt;a href="https://www.npmjs.com/package/express-rate-limit"&gt;express-rate-limit&lt;/a&gt; package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;express-rate-limit

&lt;span class="c"&gt;# or&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;yarn add express-rate-limit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's create a &lt;code&gt;middleware&lt;/code&gt; folder that contains all the middlewares of our API. Create a file named &lt;code&gt;rateLimiter.js&lt;/code&gt; under the &lt;code&gt;middleware&lt;/code&gt; folder&lt;/p&gt;

&lt;p&gt;&lt;code&gt;middleware/rateLimiter.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rateLimit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express-rate-limit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rateLimiter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rateLimit&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;windowMs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// 1 minute&lt;/span&gt;
  &lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bonk 🔨&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rateLimiter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's understand what this piece of code is doing?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We are importing the &lt;code&gt;express-rate-limit&lt;/code&gt; package&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;windowMs&lt;/code&gt; specifies the duration&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;max&lt;/code&gt; specifies the max amount of requests the client can make in the duration specified&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;message&lt;/code&gt; is the message which is shown to the client when he exceeds the max limit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So let's import into the &lt;code&gt;index.js&lt;/code&gt; file and test it out&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rateLimiter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./middleware/rateLimiter.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rateLimiter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;😹 I got bonked by myself&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L1ED_jYe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/zDzExMZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L1ED_jYe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/zDzExMZ.png" alt="" width="561" height="626"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#deploying-our-api-on-heroku"&gt;
  &lt;/a&gt;
  Deploying our API on Heroku
&lt;/h1&gt;

&lt;p&gt;👀 We have successfully built an API but how would other developers use it if it isn't deployed?&lt;/p&gt;

&lt;p&gt;Let's deploy it on Heroku 🚀.&lt;/p&gt;

&lt;p&gt;Get started by initializing a git repository in the directory. Create a new GitHub repository and push your changes into that repository 👀&lt;/p&gt;

&lt;p&gt;Let's create a new file named &lt;code&gt;Procfile&lt;/code&gt; which is just a file that tells Heroku which command is need to be run. Add the below content to the &lt;code&gt;Procfile&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;web: node index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: nodemon doesn't work in the production stage. It only works in the development stage, so we have to use the good old &lt;code&gt;node index.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create an account on &lt;a href="https://herokuapp.com/"&gt;Heroku&lt;/a&gt; and click on &lt;code&gt;Create new app&lt;/code&gt;, give some cool name to your API&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fey4hZwK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/pqdLULG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fey4hZwK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/pqdLULG.png" alt="" width="596" height="319"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Head over to the settings tab and click &lt;code&gt;Reveal Config Vars&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;These are the environment variables&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Ndb2A4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/aj7mHCD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Ndb2A4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/aj7mHCD.png" alt="" width="670" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add a new config var with the key as &lt;code&gt;MONGODB_URL&lt;/code&gt; and the value as your MongoDB connection URL&lt;/p&gt;

&lt;p&gt;Head back to the deploy tab and connect the GitHub repository which you have created just before to your Heroku application&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--js_zb-ou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/eBgS6pU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--js_zb-ou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/eBgS6pU.png" alt="" width="880" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click the &lt;code&gt;Deploy branch&lt;/code&gt; button. &lt;strong&gt;TADA&lt;/strong&gt; 🚀 You have successfully created a REST API and deployed it as well :D&lt;/p&gt;

&lt;p&gt;The entire source code for this tutorial will be available on my GitHub &lt;a href="https://github.com/Kira272921/dev-credits-api"&gt;https://github.com/Kira272921/dev-credits-api&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out the API which we built today:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devcredits-api.herokuapp.com/"&gt;https://devcredits-api.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it for this blog folks 🤞. Meet y'all in the next blog post&lt;/p&gt;

</description>
      <category>api</category>
      <category>restapi</category>
      <category>node</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
