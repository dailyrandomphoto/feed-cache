<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Use Twitter to say Thank You!</title>
      <author>Jean-Michel Fayard 🇫🇷🇩🇪🇬🇧🇪🇸🇨🇴</author>
      <pubDate>Mon, 10 May 2021 16:58:20 +0000</pubDate>
      <link>https://dev.to/jmfayard/use-twitter-to-say-thank-you-2f2j</link>
      <guid>https://dev.to/jmfayard/use-twitter-to-say-thank-you-2f2j</guid>
      <description>&lt;p&gt;The internet could use more gratitude: next time a blog post, GitHub project, podcast episode or YouTube video helps you, write a "Thank You" tweet to its content creator.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-follow-me-on-twitter"&gt;
  &lt;/a&gt;
  Don't follow me on Twitter
&lt;/h2&gt;

&lt;p&gt;I am &lt;a href="https://twitter.com/jm_fayard/"&gt;@jm_fayard&lt;/a&gt; on Twitter, but don't follow me there, I have nothing new and interesting that fits in 140 characters.&lt;/p&gt;

&lt;p&gt;I have a love-hate relationship with Twitter: I spend more time there than I wished, I hate how it tends to make me angry and feel powerless, especially when I already feel down. Twitter gives a megaphone to Nazis and white supremacist to maximize user engagement and make its investors happy. It helps jerks to spend time harassing women. For much more on this topic, there is a wonderful book by Mike Montero called &lt;a href="https://www.amazon.com/Ruined-Design-Designers-Destroyed-World-ebook/dp/B07PS16XY9/ref=tmm_kin_swatch_0?_encoding=UTF8&amp;amp;qid=&amp;amp;sr="&gt;Ruined by Design: How Designers Destroyed the World, and What We Can Do to Fix It&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The counter-argument is that Twitter is just tool, that people can use wisely or badly.&lt;/p&gt;

&lt;p&gt;It's in part true, we do have a choice - for example to use it to express gratitude - but it's misleading because it's incomplete: Melvin Kranzberg's law of technology reminds us that the way we design our tools does matter,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Technology is neither good nor bad; nor is it neutral.&lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Melvin_Kranzberg"&gt;Melvin Kranzberg&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Conversations do not get better when thought is split in tiny bites, and attention is diverted by vanity metrics:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DMlgpqh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117564975-43e86080-b0af-11eb-9abd-e5fa9cb8cfbe.png" class="article-body-image-wrapper"&gt;&lt;img alt="Experts say water is wet" src="https://res.cloudinary.com/practicaldev/image/fetch/s--DMlgpqh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117564975-43e86080-b0af-11eb-9abd-e5fa9cb8cfbe.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Install the browser extension &lt;a href="https://bengrosser.com/projects/twitter-demetricator/"&gt;Twitter Demetricator&lt;/a&gt; and see how different it feels!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qFg_AXQr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117564995-69756a00-b0af-11eb-9775-94102c1c398d.png" class="article-body-image-wrapper"&gt;&lt;img alt="Experts say water is wet" src="https://res.cloudinary.com/practicaldev/image/fetch/s--qFg_AXQr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117564995-69756a00-b0af-11eb-9775-94102c1c398d.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That being said, I have found a very satisfying use of Twitter. Not promoting my content, I genuinely dislike doing so - and I'm happy that DEV does it for me - but to say thank you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-twitter-to-say-thank-you"&gt;
  &lt;/a&gt;
  Use Twitter to say thank you
&lt;/h2&gt;

&lt;p&gt;Content creators don't get a lot of feedback that the work where they have put hard work was useful to someone. They got statistics about views and stuff, but that's not the same thing. Nothing beats a direct communication between two human beings.&lt;/p&gt;

&lt;p&gt;That's why it's such a simple and powerful hack: next time you find a blog post, a GitHub project, a podcast episode or a YouTube video that gave you a ton of value, find the Twitter handle of its creator and tell them &lt;em&gt;urbi and orbi&lt;/em&gt; that their work was meaningful to you!&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lkN8693J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117565033-94f85480-b0af-11eb-932d-dfd4518960ef.png" class="article-body-image-wrapper"&gt;&lt;img alt="Thank you Kodein Koders" src="https://res.cloudinary.com/practicaldev/image/fetch/s--lkN8693J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117565033-94f85480-b0af-11eb-932d-dfd4518960ef.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WciwnWDt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117565063-ba855e00-b0af-11eb-93bc-f88328049a82.png" class="article-body-image-wrapper"&gt;&lt;img alt="Thank you for your articles on Kotlin Native" src="https://res.cloudinary.com/practicaldev/image/fetch/s--WciwnWDt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117565063-ba855e00-b0af-11eb-93bc-f88328049a82.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kj1LKIgY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117565082-d38e0f00-b0af-11eb-96cf-a2c4edd72073.png" class="article-body-image-wrapper"&gt;&lt;img alt="Thank you" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kj1LKIgY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117565082-d38e0f00-b0af-11eb-96cf-a2c4edd72073.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best part is that you don't have to care about metrics and reach. &lt;/p&gt;

&lt;p&gt;You will reach the content creator, and there is a high probability that she will be happy:&lt;/p&gt;

&lt;p&gt;See:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tViyDVBB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117565100-e99bcf80-b0af-11eb-9752-4f86b774a1a5.png" class="article-body-image-wrapper"&gt;&lt;img alt="Thank You - reply" src="https://res.cloudinary.com/practicaldev/image/fetch/s--tViyDVBB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117565100-e99bcf80-b0af-11eb-9752-4f86b774a1a5.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hVRGwnNf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117565242-7c3c6e80-b0b0-11eb-915b-5aab39e7ea27.png" class="article-body-image-wrapper"&gt;&lt;img alt="Thank you reply" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hVRGwnNf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/117565242-7c3c6e80-b0b0-11eb-915b-5aab39e7ea27.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#see-also"&gt;
  &lt;/a&gt;
  See also
&lt;/h2&gt;

&lt;p&gt;I enjoyed this article from &lt;a class="mentioned-user" href="https://dev.to/annajmcdougall"&gt;@annajmcdougall&lt;/a&gt;
 that teaches a skill crucial to spread joy around you: giving good compliments&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/annajmcdougall" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dChAXKCu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--igVbxxeh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/442480/55f5ee59-cf98-4562-a41a-a3e9de03500d.jpg" alt="annajmcdougall image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/annajmcdougall/how-to-give-good-compliments-4ggl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Give Good Compliments&lt;/h2&gt;
      &lt;h3&gt;Anna J McDougall ・ Oct 26 '20 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#psychology&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#socialskills&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#selfimprovement&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>watercooler</category>
      <category>gratitude</category>
      <category>mentalhealth</category>
    </item>
    <item>
      <title>Why are you using 'git pull' ?</title>
      <author>Nick Groos</author>
      <pubDate>Mon, 10 May 2021 16:54:11 +0000</pubDate>
      <link>https://dev.to/groos/why-are-you-using-git-pull-1p8i</link>
      <guid>https://dev.to/groos/why-are-you-using-git-pull-1p8i</guid>
      <description>&lt;p&gt;I have noticed that for whatever reason, new developers love to use &lt;code&gt;git pull&lt;/code&gt; for merging code. To get latest from another branch, they will do something like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Switch to the other branch&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git pull&lt;/code&gt; the latest code for that branch&lt;/li&gt;
&lt;li&gt;Switch back to the working branch&lt;/li&gt;
&lt;li&gt;Merge the freshly pulled code into the working branch&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, &lt;code&gt;git pull&lt;/code&gt; can get the job done. And developers will go months or years unaware of the much more nimble &lt;code&gt;git fetch&lt;/code&gt;.  &lt;/p&gt;




&lt;p&gt;The problem is that the steps above require us to switch branches, a slow git operation, &lt;em&gt;two times&lt;/em&gt;. We can achieve the same outcome without switching branches by using &lt;code&gt;git fetch&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git fetch origin develop
git merge origin/develop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we have the latest from /develop into our current working branch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The seemingly small efficiency gained from a workflow that uses &lt;code&gt;git fetch&lt;/code&gt; instead of &lt;code&gt;git pull&lt;/code&gt; will result in hours of saved time over the course of a project.&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;For more context I recommend &lt;a href="https://stackoverflow.com/questions/292357/what-is-the-difference-between-git-pull-and-git-fetch"&gt;this discussion about 'git fetch' vs 'git-pull'&lt;/a&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>productivity</category>
    </item>
    <item>
      <title>What's new in LoadRunner Professional 2021 R1?</title>
      <author>NaveenKumar Namachivayam ⚡</author>
      <pubDate>Mon, 10 May 2021 16:46:06 +0000</pubDate>
      <link>https://dev.to/qainsights/what-s-new-in-loadrunner-professional-2021-r1-l07</link>
      <guid>https://dev.to/qainsights/what-s-new-in-loadrunner-professional-2021-r1-l07</guid>
      <description>&lt;p&gt;As you know, I publish &lt;a href="https://qainsights.com/whats-new-in-microfocus-loadrunner-professional-2021/" rel="noreferrer noopener"&gt;what's new in Micro Focus LoadRunner&lt;/a&gt; from past many years. This time as well, it is business as usual for LoadRunner What's New section. Last week, Micro Focus announced its first minor release for their performance testing solutions. In this blog, we are going to see what's new in LoadRunner Professional 2021 R1.&lt;/p&gt;

&lt;h2&gt;Say Hello to LoadRunner Professional 2021 R1&lt;/h2&gt;

&lt;p&gt;Micro Focus follows &lt;a href="https://calver.org" rel="noreferrer noopener nofollow"&gt;CalVer &lt;/a&gt;nomenclature for its products. Last year the nomenclature was Service Pack name, but this year it started following Release number. This minor release is called LoadRunner Professional 2021 R1. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M2eX8ZB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-5.png" alt="What's new in LoadRunner Professional 2021 R1?"&gt;&lt;/a&gt;What's new in LoadRunner Professional 2021 R1?&lt;/p&gt;

&lt;h2&gt;What's new in LoadRunner Professional 2021 R1?&lt;/h2&gt;

&lt;h3&gt;DevWeb Protocol&lt;/h3&gt;

&lt;p&gt;Full code completion is now available in this patch for DevWeb. Auto completion expedites the process of scripting and debugging.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1tt8g9Wx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image.png" alt="Auto Complete in DevWeb"&gt;&lt;/a&gt;Auto Complete in DevWeb&lt;/p&gt;

&lt;p&gt;Now you can generate CA certificate to capture the HTTPS traffic. You can make use DevWebUtils.exe and generate the required certificate.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KLCtbFNe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-1-1024x138.png" alt="DevWeb CA Certificate Generation"&gt;&lt;/a&gt;DevWeb CA Certificate Generation&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;General Settings&lt;/strong&gt; under &lt;strong&gt;Recording Options&lt;/strong&gt;, now it is possible to &lt;strong&gt;generate cookies&lt;/strong&gt; and &lt;strong&gt;asynchronous WebRequest &lt;/strong&gt;steps. Also, you can configure the &lt;strong&gt;Charset &lt;/strong&gt;which  defaults to utf-8.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h8uvhqVx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-2.png" alt="DevWeb Settings"&gt;&lt;/a&gt;DevWeb Settings&lt;/p&gt;

&lt;p&gt;LoadRunner Developer is now supported on macOS 11 (Big Sur). DevWeb now supports for server-streaming gRPC requests.&lt;/p&gt;

&lt;h3 id="h-web-http-htmlprotocol"&gt;Web HTTP/HTMLProtocol&lt;/h3&gt;

&lt;p&gt;A small change in the Find and Replace user interface.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-3.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ygBZ2XjQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-3.png" alt="Quick Find"&gt;&lt;/a&gt;Quick Find&lt;/p&gt;

&lt;p&gt;For HTTPS Live Stream, it is now possible to configure the adaptive mode to tell LoadRunner to download only HLS video segments only when they are played.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;web_stream_open();
...
...
web_stream_close();&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="h-truclient-protocol"&gt;TruClient Protocol&lt;/h3&gt;

&lt;p&gt;TruClient and Chromium browser have been updated to 83 and 88 versions respectively. Capture full replay snapshots now available. Also, this release supports Windows 20H2.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-4.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pea5NTam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-4.png" alt="TruClient full page snapshot settings"&gt;&lt;/a&gt;TruClient full page snapshot settings&lt;/p&gt;

&lt;h3&gt;Java Protocols&lt;/h3&gt;

&lt;p&gt;Java scripts can be run on Linux LGs for Java over HTTP, Java Record Replay, and Java Vuser. &lt;/p&gt;

&lt;h3 id="h-citrix-and-oracle-2-tier-protocols"&gt;Citrix and Oracle 2-tier Protocols&lt;/h3&gt;

&lt;p&gt;Citrix protocol now supports Tessaract 4.1.1 and Oracle protocol supports Oracle Database 19c.&lt;/p&gt;

&lt;h3&gt;Others&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Exceptional integration of VuGen with LoadRunner Enterprise and LoadRunner cloud&lt;/li&gt;
&lt;li&gt;Silk Performer integration&lt;/li&gt;
&lt;li&gt;JMeter 5.4 support &lt;/li&gt;
&lt;li&gt;Pacing runtime support for JMeter and Gatling scripts&lt;/li&gt;
&lt;li&gt;Linux LG support for Selenium scripts&lt;/li&gt;
&lt;li&gt;Visual Studio 2019 IDE support&lt;/li&gt;
&lt;li&gt;You need to have JRE installed, Micro Focus stopped shipping OpenJDK 32 bit in the installation package&lt;/li&gt;
&lt;li&gt;Round-robin allocation of Vusers across LGs&lt;/li&gt;
&lt;li&gt;Runtime collation is now default; this will save the time&lt;/li&gt;
&lt;li&gt;Transactions will be ordered in the order they executed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have you upgraded to LoadRunner Professional 2021 R1 yet? Please let me know in the comments.&lt;/p&gt;

</description>
      <category>performance</category>
      <category>testing</category>
      <category>webperf</category>
      <category>tools</category>
    </item>
    <item>
      <title>Top 5 hardest coding questions from recent FAANG interviews</title>
      <author>Erin Schaffer</author>
      <pubDate>Mon, 10 May 2021 16:33:21 +0000</pubDate>
      <link>https://dev.to/educative/top-5-hardest-coding-questions-from-recent-faang-interviews-2n67</link>
      <guid>https://dev.to/educative/top-5-hardest-coding-questions-from-recent-faang-interviews-2n67</guid>
      <description>&lt;p&gt;It seems like coding interviews are only getting harder, and preparing for them isn’t an easy task. There’s no limit to the kind of questions that may be presented to you in an interview, and many of them aren’t easy. The “hardest” questions will be different for each person. What comes easily to you may be extremely difficult for someone else, and vice versa. &lt;/p&gt;

&lt;p&gt;No matter what your “hardest” questions are, it’s crucial to prepare yourself for your coding interview. We talked to junior and senior developers for their take on the hardest coding interview questions, and we compiled the top five into a list. Today, we’ll explore that list in more detail and give you some tips on how to prepare.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We’ll cover&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#garbage"&gt;How to design a garbage collector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coin"&gt;Coin change problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dining"&gt;Dining philosophers problem (multithreading)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#practices"&gt;Why use these programming best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cache"&gt;Implement LRU cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nextsteps"&gt;Next steps to prepare for interviews&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-design-a-garbage-collector"&gt;
  &lt;/a&gt;
  How to design a garbage collector
&lt;/h2&gt;

&lt;p&gt;If you’ve never heard of it, the garbage collector problem is known to be very difficult. Garbage collection is a topic that most people don’t learn about in school, and the &lt;strong&gt;related material is extremely dense&lt;/strong&gt;. Learning about garbage collection involves a lot of theory, which can be overwhelming. No matter what language you work in, it’s crucial to know the ins and outs of your preferred language to solve this problem effectively.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t be afraid to ask your interviewer questions as you work through this problem&lt;/strong&gt;. Remember that your interviewer is there to help you and wants to see you do well. It’s common for interviewers to give you little seeds of information to help push you in the right direction.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Garbage collection questions are especially common in core and advanced Java interviews, but they are also important to know for other programming languages. &lt;/p&gt;
&lt;/blockquote&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coin-change-problem"&gt;
  &lt;/a&gt;
  Coin change problem
&lt;/h2&gt;

&lt;p&gt;The coin change problem is commonly seen at Facebook and Amazon interviews. You’re given coins of different denominations and a total amount of money. From that, you need to &lt;strong&gt;write a function to compute the fewest number of coins that you need to make up that amount&lt;/strong&gt;. If you can’t reach the given amount of money with any combination of the coins, you return &lt;code&gt;-1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here are three ways you could solve this problem: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Brute force&lt;/li&gt;
&lt;li&gt;Top-down Dynamic Programming with Memoization &lt;/li&gt;
&lt;li&gt;Bottom-up Dynamic Programming with Tabularization&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s take a look at the bottom-up dynamic programming with tabularization solution in C++:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;

int countChange(int denoms[], int denomsLength, int amount) {
  // Edge cases
  if(amount &amp;lt;= 0 || denomsLength &amp;lt;= 0)
    return 0;

  int i, j, x, y;

  // We need n+1 rows as the table 
  // is constructed in bottom up 
  // manner using the base case 0 
  // value case (n = 0) 
  int lookupTable[amount + 1][denomsLength];

  // Fill the enteries for 0 
  // value case (n = 0) 
  for (i = 0; i &amp;lt; denomsLength; i++)
    lookupTable[0][i] = 1;

  // Fill rest of the table entries 
  // in bottom up manner 
  for (i = 1; i &amp;lt; amount + 1; i++) {
    for (j = 0; j &amp;lt; denomsLength; j++) {
      // Count of solutions including denoms[j] 
      x = (i - denoms[j] &amp;gt;= 0) ? lookupTable[i - denoms[j]][j] : 0;

      // Count of solutions excluding denoms[j] 
      y = (j &amp;gt;= 1) ? lookupTable[i][j - 1] : 0;

      // total count 
      lookupTable[i][j] = x + y;
    }
  }
  return lookupTable[amount][denomsLength - 1];
}

// Driver Code 
int main() { 
  int denoms[4] = {25,10,5,1};
  cout &amp;lt;&amp;lt; countChange(denoms, 4, 10) &amp;lt;&amp;lt; endl;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For each iteration of the inner loop, we get the solution with &lt;code&gt;denoms[j]&lt;/code&gt; and store it in &lt;code&gt;x&lt;/code&gt;. We also get the solution without &lt;code&gt;denoms[j]&lt;/code&gt; and store it in &lt;code&gt;y&lt;/code&gt;. By doing this, we’re able to reference earlier solutions to avoid duplicate computations.&lt;/p&gt;

&lt;p&gt;For each coin in the denomination, there can only be two possibilities: to include it or exclude it. We know that if the coin, &lt;code&gt;denom[j]&lt;/code&gt;, is larger than &lt;code&gt;amount&lt;/code&gt;, then &lt;code&gt;x&lt;/code&gt; is set to 0 since including it into consideration is impossible.&lt;/p&gt;

&lt;p&gt;The time complexity is *O(amount * denomsLength), which is the number of for loop iterations.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Each of these three methods includes time complexity, meaning that time complexity is an important concept to understand to succeed at the coin change problem.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dining-philosophers-problem-multithreading"&gt;
  &lt;/a&gt;
  Dining philosophers problem (multithreading)
&lt;/h2&gt;

&lt;p&gt;The dining philosophers problem is commonly &lt;strong&gt;used in concurrent algorithm design to demonstrate issues with synchronization and the techniques to solve them&lt;/strong&gt;. The problem states that there are five philosophers sitting around a circular table. The philosophers must alternatively think and eat.&lt;/p&gt;

&lt;p&gt;Each philosopher has a bowl of food in front of them, and they require a fork in each hand to eat. However, there are only five forks available. You need to design a solution where each philosopher can eat their food without causing a deadlock. &lt;/p&gt;

&lt;p&gt;With this problem, it’s common for developers to overlook the idea that it’s not really asking about a real-world scenario, but rather illustrating the kinds of problems you could run into in threaded program executions and/or negligent handling of locks. The idea is to get you to think about limitations and proper ordering to accomplish this task in the most efficient way. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To prepare for this question, you should dive deeper into synchronization, concurrency control, and semaphores&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here are two possible ways to solve this problem:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Limiting the philosophers that are about to eat&lt;/li&gt;
&lt;li&gt;Reordering the fork pick-up&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s look at the reordering the fork pick-up solution in Java:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public class DiningPhilosophers2 {

    private static Random random = new Random(System.currentTimeMillis());

    private Semaphore[] forks = new Semaphore[5];

    public DiningPhilosophers2() {
        forks[0] = new Semaphore(1);
        forks[1] = new Semaphore(1);
        forks[2] = new Semaphore(1);
        forks[3] = new Semaphore(1);
        forks[4] = new Semaphore(1);
    }

    public void lifecycleOfPhilosopher(int id) throws InterruptedException {

        while (true) {
            contemplate();
            eat(id);
        }
    }

    void contemplate() throws InterruptedException {
        Thread.sleep(random.nextInt(500));
    }

    void eat(int id) throws InterruptedException {

        // We randomly selected the philosopher with
        // id 3 as left-handed. All others must be
        // right-handed to avoid a deadlock.
        if (id == 3) {
            acquireForkLeftHanded(3);
        } else {
            acquireForkForRightHanded(id);
        }

        System.out.println("Philosopher " + id + " is eating");
        forks[id].release();
        forks[(id + 1) % 5].release();
    }

    void acquireForkForRightHanded(int id) throws InterruptedException {
        forks[id].acquire();
        forks[(id + 1) % 5].acquire();
    }

    // Left-handed philosopher picks the left fork first and then
    // the right one.
    void acquireForkLeftHanded(int id) throws InterruptedException {
        forks[(id + 1) % 5].acquire();
        forks[id].acquire();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this solution, you make any one of the philosophers pick up the left fork first instead of the right one. It doesn’t matter which philosopher you choose to be left-handed and made to pick up their left fork first. In our solution, we chose the philosopher with id=3 as our left-handed philosopher.&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-these-programming-best-practices"&gt;
  &lt;/a&gt;
  Why use these programming best practices
&lt;/h2&gt;

&lt;p&gt;While learning about programming, you typically learn some “best practices.” &lt;strong&gt;The most efficient developers implement certain practices into their coding process, which helps them ensure that their code is the best it can be in both function and form&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;After years of experience with programming, you tend to know the practices you should avoid and the ones you should adopt. You may have a general idea of why some practices are better than others, but stumble when it’s time to explain the reasoning. &lt;/p&gt;

&lt;p&gt;A few examples of best practices include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Comment your code often&lt;/li&gt;
&lt;li&gt;Recognize and remove duplicate code&lt;/li&gt;
&lt;li&gt;Group by features in React&lt;/li&gt;
&lt;li&gt;Avoid hidden structures in Ruby&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best way to prepare yourself for these questions is to &lt;strong&gt;refresh your memory on useful versus avoidable practices and the reasoning behind them&lt;/strong&gt;. Remember that during your interview, you can talk through these questions with your interviewer.&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implement-lru-cache"&gt;
  &lt;/a&gt;
  Implement LRU cache
&lt;/h2&gt;

&lt;p&gt;The Least Recently Used (LRU) cache implementation question is asked in some Google, Microsoft, and Amazon interviews, but it’s &lt;strong&gt;not a very common question&lt;/strong&gt;. This question requires you to think deeper and combine two or more existing data structures. &lt;/p&gt;

&lt;p&gt;It’s important to read the problem slowly and make sure you understand what’s being asked of you. These questions typically ask you to do a few things. Once you’ve read the problem thoroughly, you can ask your interviewer to confirm that you’re going in the right direction.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before tackling one of these problems, make sure you understand what &lt;em&gt;cache&lt;/em&gt; is&lt;/strong&gt;. LRU is a common caching strategy that defines the policy to remove elements from the cache to make room for new ones when the cache is full. This means that it discards the least recently used items first.&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps-to-prepare-for-interviews"&gt;
  &lt;/a&gt;
  Next steps to prepare for interviews
&lt;/h2&gt;

&lt;p&gt;The questions we covered today are just a few of the many difficult coding interview questions. The questions are supposed to be difficult, and they can even stump the most seasoned developers. It’s important to begin your interview prep early, so you have the opportunity to prepare as much as possible. A few more difficult problems include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Find the median from a data stream&lt;/li&gt;
&lt;li&gt;Search in rotated sorted array&lt;/li&gt;
&lt;li&gt;Minimum knight moves&lt;/li&gt;
&lt;li&gt;And many more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Begin preparing for your coding interview today with Educative’s text-based interview prep course.  Our team of experts has incorporated the most commonly asked interview questions at top tech companies into a carefully crafted set of scenarios for you to learn from. You can practice as you learn with hands-on coding environments directly inside your browser. Our coding interview course has helped developers prepare for interviews with top tech companies like Netflix, Facebook, Microsoft, Amazon, and Google. &lt;/p&gt;

&lt;p&gt;By the end, you’ll be ready to interview with confidence!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#continue-reading-about-coding-interviews"&gt;
  &lt;/a&gt;
  Continue reading about coding interviews
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/ace-coding-interview"&gt;How to ace a coding interview even if you can’t solve the problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/apple-coding-interview-questions"&gt;Top 30 Apple Coding Interview Questions (with solutions)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/cracking-top-facebook-coding-interview-questions"&gt;Cracking the top 40 Facebook coding interview questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>programming</category>
      <category>computerscience</category>
      <category>codinginterview</category>
    </item>
    <item>
      <title>The EsoList</title>
      <author>JavaCode7</author>
      <pubDate>Mon, 10 May 2021 16:26:49 +0000</pubDate>
      <link>https://dev.to/javacode7/the-esolist-3dk3</link>
      <guid>https://dev.to/javacode7/the-esolist-3dk3</guid>
      <description>&lt;p&gt;This is the EsoList, not the first (but probably the first on dev.to) community built list of amazing esolangs! Feel free to comment  on any of these so long as the comments are constructive. Enjoy!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#freakc"&gt;
  &lt;/a&gt;
  FreakC
&lt;/h1&gt;

&lt;p&gt;FreakC is a multi-paradigm esoteric scripting language. It is written in Batch, compiled to Batch and compatible with Batch codes and libraries. It adds certain features to Batch, but with excessive cursing which makes it an esolang. It is 100% open-source on Github, and open for anyone to contribute! The language is currently at v4.9.0 and is stable.&lt;/p&gt;

&lt;p&gt;Hello world:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Swear[fnc] Hello, World^!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;GitHub: &lt;a href="https://github.com/FreakC-foundation/FreakC"&gt;https://github.com/FreakC-foundation/FreakC&lt;/a&gt;&lt;br&gt;
Facebook: &lt;a href="https://www.facebook.com/FreakC-Programming-Language-111425377421861"&gt;https://www.facebook.com/FreakC-Programming-Language-111425377421861&lt;/a&gt;&lt;br&gt;
Itch.io: &lt;a href="https://npmgames.itch.io/FreakC"&gt;https://npmgames.itch.io/FreakC&lt;/a&gt;&lt;br&gt;
Esolangs.org: &lt;a href="https://esolangs.org/wiki/FreakC"&gt;https://esolangs.org/wiki/FreakC&lt;/a&gt;&lt;br&gt;
Dev Article: &lt;a href="https://dev.to/freakcdev297/freakc-the-esolang-that-can-do-stuffs-3f9c"&gt;https://dev.to/freakcdev297/freakc-the-esolang-that-can-do-stuffs-3f9c&lt;/a&gt;&lt;br&gt;
Website: &lt;a href="https://freakc-foundation.github.io/"&gt;https://freakc-foundation.github.io/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>esoteric</category>
      <category>esolang</category>
    </item>
    <item>
      <title>Dear "international" companies, stop asking me for my last name and credit card</title>
      <author>Karthik D</author>
      <pubDate>Mon, 10 May 2021 16:17:06 +0000</pubDate>
      <link>https://dev.to/kdnanmaga/dear-international-companies-stop-asking-me-for-my-last-name-and-credit-card-4jeh</link>
      <guid>https://dev.to/kdnanmaga/dear-international-companies-stop-asking-me-for-my-last-name-and-credit-card-4jeh</guid>
      <description>&lt;p&gt;Dear "international" companies, stop asking me for my last name and credit card, because I don't have either!&lt;/p&gt;

&lt;p&gt;Yes, the .com stuff did start in the US, but technology is now international and products need to be more inclusive of cultural aspects. I live in India and in this post I'm covering two most annoying aspects of non-inclusive UX design as per my experience. I have picked them in particular because they seemed to have become the default for most designers, who blindly put them in without a thought for the target user base.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-whats-in-a-names"&gt;
  &lt;/a&gt;
  1. What's in a name(s)?
&lt;/h2&gt;

&lt;p&gt;My official name is Karthik D, and the D actually stands for my dad's name and isn't my last name. I really wonder if my family ever had a last name - in India, that could have been a caste/religion name, which my great-great-grandfather had postfixed to his name as Chakrapani Mudaliar, or a native place name which my great grandfather had prefixed as an initial to his name AC Shankarraj (AC = Arcot Chakrapani). I appreciate the idea of caste name becoming irrelevant, and I really hope someday caste also becomes irrelevant in this country. My grandfather dropped the native place name Arcot probably because he wasn't born or raised there. I really don't know. From my grandfather onwards, we have been only been using father's name as an initial, and also either prefixing or suffixing it, inconsistently, as we please. My early school records say D. Karthik while in most other places it is Karthik D. &lt;/p&gt;

&lt;p&gt;My intention is not to put up my family history on a design blog, but the problem is, I cannot offer the above explanation when I land on a sign-up form and the last name field is mandatory. Mostly I get away with entering "Karthik" for first name and "D" for last name, but some notorious sites complain the last name is too short. WTF! I then have to enter my last name as "Devan" which is my dad's name, and then voila! The site starts addressing me as Mr. Devan. That's not me, that's my dad, you #$^#s! &lt;/p&gt;

&lt;p&gt;To make my point with more examples: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Family Name comes before the given name is some countries (eg: Japan, Korea, Romania)&lt;/li&gt;
&lt;li&gt;In Spain, people have a first name followed by two surnames - one from each parent.&lt;/li&gt;
&lt;li&gt;In India (mind you, this is where things go haywire), there is no dominant naming pattern at all: a person can have anywhere between zero to 8 names or even more. This may include one or more given names, parents' names, family names, place names, caste names, occupation names, nick names and not even to mention a plethora of honorifics like Mr., Shri., Thiru. that change from language to language which people may want to enter in the name field. We have a "Farokh Engineer" who is actually a sportsperson. I have also given my example above as a case to illustrate that naming pattern is not consistent even within a family.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The point is, for most use cases, the name of the user is not at all relevant to the service provided by the website/app. Yet, multiple and even very well known companies demand a last name while signing up. Even the likes of Google and Facebook. Its not like I cannot search the web or send emails without having a last name. I'm sure Facebook can still sell my data without needing my last name. It has simply become the default for UX design and this needs to change. May be a single "Full Name" field or "What should we call you?" or "Name as per government identification" will make things easier for the user, save priceless real estate on the front-end and a precious column in the database too!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-credit-card-eh-whats-that"&gt;
  &lt;/a&gt;
  2. Credit card eh? What's that?
&lt;/h2&gt;

&lt;p&gt;My next rant is about credit card payments being the only option on plenty of international services, which are actually trying to expand in the Indian market. This includes cloud services providers such as DigitalOcean, AWS, Google Cloud etc, and a host of entertainment services such as Netflix, YouTube Premium, MUBI etc.&lt;/p&gt;

&lt;p&gt;Firstly, not everyone is eligible for a credit card. In India, credit cards are used by a very privileged few who are eligible for it, while most of the population struggles to use a debit card despite having one. As of today, &lt;a href="https://www.npci.org.in/what-we-do/upi/product-overview"&gt;UPI&lt;/a&gt; is the most user friendly payment option available here. &lt;/p&gt;

&lt;p&gt;Second, not everyone wants to use a credit card. While I only recently became eligible to get a credit card, I do not use one because it is an additional hassle. I'd rather use a debit card and pay directly from bank account balance rather than pay from a card and pay off another bill at the end of the month. Also, I personally do not like being in debt or borrowing money, and plenty of cultures around the world discourage taking debts.&lt;/p&gt;

&lt;p&gt;Thirdly, they are a security nightmare. Most card numbers can be charged without authentication i.e., cash can be drawn from the cards with just the card number, and most websites insist on using such cards. In India, most banks disable this kind of charging by default and the card only be charged with a second-factor authentication via OTP sent to the user's phone. Netbanking and UPI transactions need user authentication too. Data breaches leading to stolen credit card numbers have been a major issue worldwide, while stolen NetBanking IDs or UPI IDs are practically useless without passwords and access to the user's device.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-conclude"&gt;
  &lt;/a&gt;
  To conclude
&lt;/h2&gt;

&lt;p&gt;It is very shocking to see how blatantly companies have ignored local and cultural preferences in key aspects of design such as names and payments. What is more shocking is that, very popular companies such as Google &amp;amp; Facebook with billions of users in countries such as India, have compeltely ignored these aspects too. If you're a designer or developer or product lead reading this, it is my kind request that you do some research on cultural preferences of your intended audience before blindly putting in the defaults.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Original article: &lt;a href="https://kdnanmaga.xyz/last-name-and-credit-card/"&gt;https://kdnanmaga.xyz/last-name-and-credit-card/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>ux</category>
      <category>culture</category>
      <category>database</category>
      <category>i18n</category>
    </item>
    <item>
      <title>Tutorial: Custom Domains - Learn how to connect your domain to your WebApp</title>
      <author>Saji Wang</author>
      <pubDate>Mon, 10 May 2021 16:15:38 +0000</pubDate>
      <link>https://dev.to/codesphere/tutorial-custom-domains-learn-how-to-connect-your-domain-to-your-webapp-5a9k</link>
      <guid>https://dev.to/codesphere/tutorial-custom-domains-learn-how-to-connect-your-domain-to-your-webapp-5a9k</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;In this article, we are going to show you how to connect a custom domain in Codesphere.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By default, Codesphere deploys to a generic Codesphere subdomain based on your app ID and port. If you're looking to use your app for production, however, you're most likely going to want to add your own domain.&lt;/p&gt;

&lt;p&gt;While this can be done with any domain registrar, we will show you how to connect your domain from GoDaddy in this tutorial.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-get%C2%A0started"&gt;
  &lt;/a&gt;
  Let's get started
&lt;/h3&gt;

&lt;p&gt;To get started, open up your app in the Codesphere IDE. We are then going to select the infrastructure tab in our app. Then we can press "Domains", then the "New domain" button, and enter in our custom domain.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f8cOFS01--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2840rw4vccen17z0c5od.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f8cOFS01--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2840rw4vccen17z0c5od.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#configure-the%C2%A0dns"&gt;
  &lt;/a&gt;
  Configure the DNS
&lt;/h3&gt;

&lt;p&gt;Next, we need to configure our DNS from GoDaddy. Go to "My Products", scroll down to the domain you would like to connect and click on "DNS". From there we can access the DNS records that we need to configure.&lt;/p&gt;

&lt;p&gt;The first record that we have to edit is the "A" record. Edit the A record to have the following settings:&lt;/p&gt;

&lt;p&gt;Host: *&lt;br&gt;
Points To: Navigate back to Codesphere and grab the address after the "A" in the DNS section.&lt;/p&gt;



&lt;p&gt;Next, add an additional A record with the following settings:&lt;br&gt;
Host: @&lt;br&gt;
Points To: The same IP as the other A record&lt;/p&gt;



&lt;p&gt;Finally, edit the TXT record to have the following settings:&lt;/p&gt;

&lt;p&gt;Host: codesphere-verification&lt;br&gt;
TXT: Go back to Codesphere and copy and paste everything after the TXT in the DNS section&lt;/p&gt;

&lt;p&gt;Your records should then look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3mmuHlnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68qd8av1cde21ahrhq37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3mmuHlnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68qd8av1cde21ahrhq37.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#verify-on-codesphere"&gt;
  &lt;/a&gt;
  Verify on Codesphere
&lt;/h3&gt;

&lt;p&gt;Now that we have our DNS records configured correctly, we just need to verify it on Codesphere. To do so, go back to the domain menu and press "verification status". It may take a few minutes to verify the domain and automatically generate a certificate.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yWjNqnuJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pun51lbl9lk3l1za8264.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yWjNqnuJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pun51lbl9lk3l1za8264.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#deploy-the%C2%A0app"&gt;
  &lt;/a&gt;
  Deploy the App
&lt;/h3&gt;

&lt;p&gt;Once everything is in order, we are ready to deploy the application!&lt;/p&gt;

&lt;p&gt;As you can see on the domain menu, the domain is connected to port 80, so you need to run your app on that port.&lt;/p&gt;

&lt;p&gt;While the specific command that you need to run is going to differ according to the type of application that you're running, if you are using Codesphere's default to-do list app, we're just going to run &lt;code&gt;API_PORT=80 npm start&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once our app is deployed, you can go to your custom domain, and you should see your app!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M63Q4Hub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fqr3xk9nzryvrcnulrqk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M63Q4Hub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fqr3xk9nzryvrcnulrqk.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading! If you want to see the video version of this tutorial, we recently released a tutorial video:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ymNhCjdDCaQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;For more information and updates on how Codesphere is revolutionizing the software industry, follow us on our socials.&lt;/p&gt;

&lt;p&gt;Stay tuned and Happy Coding!&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>domain</category>
      <category>dns</category>
    </item>
    <item>
      <title>Everyday Observability with Honeycomb</title>
      <author>Shayde Nofziger</author>
      <pubDate>Mon, 10 May 2021 16:13:03 +0000</pubDate>
      <link>https://dev.to/shayde/everyday-observability-with-honeycomb-4o3h</link>
      <guid>https://dev.to/shayde/everyday-observability-with-honeycomb-4o3h</guid>
      <description>&lt;p&gt;Observability is a topic that has gained increased attention, popularity, and focus the past few years - and for good reason. The ability for engineers to easily discover, walk through, and reason about the state of their systems and services is crucial to efficiently and effectively acting upon outages, bugs, and failure states.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.honeycomb.io/"&gt;Honeycomb&lt;/a&gt;, a leader in this space, has developed a powerful observability tool for event ingestion and interrogation.&lt;/p&gt;

&lt;p&gt;There are &lt;a href="https://thenewstack.io/what-is-observability/"&gt;plenty&lt;/a&gt; of blog posts out there &lt;a href="https://charity.wtf/2020/03/03/observability-is-a-many-splendored-thing/"&gt;about Observability&lt;/a&gt;, what it is, what it is not, and plenty of "getting started with Honeycomb" guides. &lt;a href="https://www.honeycomb.io/play/"&gt;Honeycomb even offer's live playgrounds of their product that you can demo for free&lt;/a&gt;! If you are unfamiliar with the concept of observability, Honeycomb, or both, I encourage you to seek out and start with those posts and tutorials and return to this series later. This series is primarily aimed at engineers who have a basic familiarity with observability, may have recently joined a team or company using Honeycomb, and want to get some real-world examples of every-day use.&lt;/p&gt;

&lt;p&gt;I am by no means an expert on the use of Honeycomb - If a feature exists that I am unfamiliar with, or you know something about the tool that could help myself or others, please chime in in the comments or feel free to write up your own post about it and let me know! The intent of this series is to show how I use it in my day-to-day work, to share with others and learn as well.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;I am a senior software engineer at Blackbaud, a mid-size enterprise/SaaS company focused on software targeting the Social Good sector. Over the past several months, a team of my colleagues took on the work of creating standard libraries and tooling to emit events from more than 400 microservices to our Honeycomb dataset. While I won't go into the implementation specifics in this blog post, it's important to understand the sheer magnitude of the events we're dealing with. Since event sampling was put in place, we usually see about 250-275 million successful events ingested into Honeycomb every workday.&lt;/p&gt;

&lt;p&gt;My team is primarily responsible for the identity and authentication services that allow our customers (and theirs) to authenticate and interact with our systems. Needless to say, our services are among the most critical of the entire stack -- if authentication is down so are the rest of our services. As such, our ability to respond to, triage, diagnose, and resolve issues accurately and efficiently is extremely important. Honeycomb is a tool that helps us answer questions effectively, and feel more confident in the status of our services.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#an-interrogative-mindset"&gt;
  &lt;/a&gt;
  An Interrogative Mindset
&lt;/h2&gt;

&lt;p&gt;Traditionally, the industry has leaned on logs, metrics, and alerting to diagnose, troubleshoot, and resolve issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We develop dashboards to monitor "key areas" of our systems for issues.&lt;/li&gt;
&lt;li&gt;We rely on symptoms like "high cpu", "error rate", and "connection status" to alert us to problems with our services.&lt;/li&gt;
&lt;li&gt;When problems arise, we sift through logs, scan metric charts, and try to guess at where the issue is.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We had an idea of where the problems &lt;em&gt;might&lt;/em&gt; arise, so we structured our logging, monitoring, and alerting to focus on those known areas.&lt;/p&gt;

&lt;p&gt;The core tenets of Observability require us to shift from a symptom-reactive, guess-and-check mindset to one that is proactive and interrogative. Distributed microservice architectures have brought with them added complexity - a single call to one API service could result in dozens of calls to other services on the back-end, any one of which could fail for any number of reasons.&lt;/p&gt;

&lt;p&gt;We can no longer reasonably expect to predict, monitor, and prevent all failure states of our application. We can put logging, monitoring, and alerting in place to watch for symptoms, but to truly understand root cause and pinpoint complex issues quickly requires the ability to get answers from our telemetry to questions that we haven't even thought of yet.&lt;/p&gt;

&lt;p&gt;Honeycomb is a tool for doing just that -- answering questions about our systems.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#scenarios-honeycomb-in-action"&gt;
  &lt;/a&gt;
  Scenarios - Honeycomb In Action
&lt;/h2&gt;

&lt;p&gt;In this series, I will walk through a few different real-world examples of how Honeycomb can be used that demonstrate the practicality, usefulness, and benefits of adding it to your toolbelt - no matter the stage of your career or familiarity with the service.&lt;/p&gt;

&lt;p&gt;Scenarios will differ in complexity and technicality. I intend this to be a running series of common and interesting real-world use-cases for Honeycomb that I run into. Feel free to offer up feedback and suggestions of your own in the comments!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scenarios-coming-soon"&gt;
  &lt;/a&gt;
  Scenarios Coming Soon
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Performance and Cost Optimization&lt;/li&gt;
&lt;li&gt;Solving for Customer Delight&lt;/li&gt;
&lt;li&gt;Incident Response&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#wish-list"&gt;
  &lt;/a&gt;
  Wish List
&lt;/h2&gt;

&lt;p&gt;This is a living list of features that I would find helpful in Honeycomb that do not yet exist (I think!) as of this post.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The ability to create "roll-up" columns.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When using Honeycomb at a scale of 400+ microservices supported by dozens of teams, it becomes difficult/infeasible to standardize column/Tag name/usage across all services. One service might emit a user id as "user_id", for example, while another uses "userId", and a third uses "user-id". It would be nice to be able to derive a column like "UserId" off of those so searching across services/traces would be easier.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The ability to re-arrange query operators and visualizations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Right now, in order to re-arrange operators/visualizations, you need to remove then and re-add them. It would be nice to be able to re-arrange/edit these on the fly.&lt;/p&gt;

</description>
      <category>observability</category>
      <category>o11y</category>
      <category>honeycomb</category>
      <category>devops</category>
    </item>
    <item>
      <title>How To Stop Procrastination As A Developer</title>
      <author>Bobby Iliev</author>
      <pubDate>Mon, 10 May 2021 16:03:15 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/how-to-stop-procrastination-as-a-developer-3ebl</link>
      <guid>https://dev.to/bobbyiliev/how-to-stop-procrastination-as-a-developer-3ebl</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Have you ever procrastinated? If you say "No", you are totally a liar! &lt;/p&gt;

&lt;p&gt;But most important, do you know what procrastination is? This is a (un)aware process of postponing something that you find as hard or boring. Procrastination can also go beyond work. Avoiding a difficult conversation or delaying an important life decision could affect our lives too. &lt;/p&gt;

&lt;p&gt;This process is our choice, and we make it every day, sometimes even more often. Figuring out the exact nature of your procrastination is a half-solved problem. You can do this by thinking about events where you procrastinated and then define when, how, and why you did so.&lt;/p&gt;

&lt;p&gt;If you would like to know how to win over procrastination, here are the main steps that you should follow:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-set-your-goals"&gt;
  &lt;/a&gt;
  1. Set your goals.
&lt;/h1&gt;

&lt;p&gt;Make sure you determine your goals as clearly as possible. Prioritize the task as their importance.  &lt;/p&gt;

&lt;p&gt;Start your every day by pointing the intention of how the day will look like. &lt;/p&gt;

&lt;p&gt;Don't forget to reward yourself when you successfully finished some of the goals for the day. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VS3KNWAh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/images/october2020/85211789_2554413498156888_1688130710939893760_n.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VS3KNWAh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/images/october2020/85211789_2554413498156888_1688130710939893760_n.jpeg" alt="To do list stop procarastination"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2find-what-part-of-the-day-you-are-more-productive"&gt;
  &lt;/a&gt;
  2.Find what part of the day you are more productive.
&lt;/h1&gt;

&lt;p&gt;Examine yourself! Are you an early bird or a night owl? Detect when you are most efficient and do your hardest tasks then. Try to combine these tasks with something that you love to do, for example, bring together your morning coffee and your project that you've been working on for a while. &lt;/p&gt;

&lt;p&gt;Paying attention to your body clock and its impacts on energy and alertness can help pinpoint the different times of day when you can do your best work.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-remove-the-distractions"&gt;
  &lt;/a&gt;
  3. Remove the distractions
&lt;/h1&gt;

&lt;p&gt;Create an environment in which you’re less tempted!&lt;/p&gt;

&lt;p&gt;Many of us working on a computer, but we also find our biggest distractions exactly on our working desk. If you find yourself wandering over to video or shopping websites, try using a website blocker app.&lt;/p&gt;

&lt;p&gt;Also, it might help to put your phone in silent mode. This will help you not to pick it up as soon as you received an email or a message. &lt;/p&gt;

&lt;p&gt;Here's a nice quote:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Being a good programmer is 3% talent and 97% not being distracted by the internet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4pNnI7yE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/images/october2020/122878649-2862258620677092-3065239395235664179-n1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4pNnI7yE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/images/october2020/122878649-2862258620677092-3065239395235664179-n1.jpeg" alt="focus and stop procrastination"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-try-a-pomodoro-technique"&gt;
  &lt;/a&gt;
  4. Try a Pomodoro Technique
&lt;/h1&gt;

&lt;p&gt;The Pomodoro Technique is a time management method. The technique uses a timer to break down work into some parts, usually 25 minutes in length, divided by breaks. Each interval is known as a Pomodoro. That way you will be more focused, so give it a chance and try it!&lt;/p&gt;

&lt;p&gt;There are many "Work with me/Study with me" videos include this method. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jLz--SlurFQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-create-a-morning-routine"&gt;
  &lt;/a&gt;
  5. Create a morning routine
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;"The way you start your day is how you are going to live your day. And how you live your day is the way you live your life" - Louise Hay.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Creating a mourning routine contributes to achieving goals, feeling organized, being more productive. It could help you to be more motivated to finish your duties.  Check out this post for more ideas!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdojo.com/bobbyiliev/5-morning-habits-that-will-help-you-be-more-productive"&gt;5 Morning Habits That Will Help You Be More Productive&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#book-recommendation"&gt;
  &lt;/a&gt;
  Book Recommendation
&lt;/h1&gt;

&lt;p&gt;If you are trying to build good habits, I strongly recommend the &lt;a href="https://www.amazon.com/Atomic-Habits-Proven-Build-Break/dp/0735211299"&gt;"Atomic Habits" by James Clear&lt;/a&gt;, it gives an easy and proven way to build good habits and also break bad ones!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RW-zzYL6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/LSPRZUJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RW-zzYL6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/LSPRZUJ.png" alt="Atomic Habits by James Clear"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Procrastination can decrease your growth in your career. It can also reflect on your teamwork, reduce confidence, and even lead to depression. So, it's essential to take actions to stop it.&lt;/p&gt;

&lt;p&gt;The first step to overcoming procrastination is to confess that you're doing it. Then, identify the reasons for your behavior and learn how to overcome it.&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>Rendering Leaflet clusters fast and dynamically - let's compare 3 methods</title>
      <author>Aga Wozniak</author>
      <pubDate>Mon, 10 May 2021 15:52:52 +0000</pubDate>
      <link>https://dev.to/agawozniak/rendering-leaflet-clusters-fast-and-dynamically-let-s-compare-3-methods-291p</link>
      <guid>https://dev.to/agawozniak/rendering-leaflet-clusters-fast-and-dynamically-let-s-compare-3-methods-291p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    * &lt;a href="#chapter-1"&gt;Maps in front-end development&lt;/a&gt;&lt;br&gt;
    * &lt;a href="#chapter-2"&gt;Leaflet clusters in action&lt;/a&gt;&lt;br&gt;
    * &lt;a href="#chapter-3"&gt;Solution to Leaflet.markercluster performance issues&lt;/a&gt;&lt;br&gt;
    * &lt;a href="#chapter-4"&gt;Leaflet clusters methods comparison&lt;/a&gt;&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;br&gt;
  &lt;a href="#maps-in-frontend-development"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Maps in front-end development &lt;a&gt;&lt;/a&gt;&lt;br&gt;
&lt;/h3&gt;

&lt;p&gt;At some point in the career of every front-end developer, there will come a time when they will face the task of &lt;strong&gt;map implementation&lt;/strong&gt;. There are many uses of maps in applications.&lt;/p&gt;

&lt;p&gt;Today I will focus on maps that contain a large number of points with specific coordinates. They can be, for example, delivery points, restaurants, shops, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Leaflet&lt;/strong&gt; is a standard solution that developers often use due to its open-source nature. Today we will talk about it.&lt;/p&gt;

&lt;p&gt;Let’s imagine now that our task is to add specific points to the map, but we do not add it only once after launching the map, but we &lt;strong&gt;send a request for points each time you move around the map&lt;/strong&gt; (moving or changing the zoom level). Sounds familiar?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leaflet-clusters-in-action"&gt;
  &lt;/a&gt;
  Leaflet clusters in action &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If so, you’ve probably come across the recommended Leaflet plugin, Leaflet.markercluster. In the documentation, we can find examples where 10,000 or even 50,000 points are implemented! Furthermore, thanks to &lt;strong&gt;chunkedLoading&lt;/strong&gt;, we can display many points on the map in a relatively user-friendly way. &lt;br&gt;
Below you will find an example of Leaflet clusters from the official Github page of the project:&lt;br&gt;
&lt;a href="https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-realworld.50000.html"&gt;https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-realworld.50000.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great, the plugin can handle significant challenges, so it will dynamically add points, right? Not so fast! Yes, Leaflet.markercluster is doing quite well, and this is also the solution I introduced in my recent project, but the key to success, in this case, is &lt;strong&gt;knowledge&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now imagine this situation: at the beginning, you add 350 points to the map. Then, the user moves the map — we have a new map area, so we send another request for new points and generate 350 points on the map again. It sounds simple, but it is not. Because as you will find out — this operation takes a long time. Not tens of milliseconds, not even several hundred. It takes 2–3 seconds, and sometimes even more!&lt;/p&gt;

&lt;p&gt;I don’t even want to think about what numbers we can achieve with a slow internet connection. It happens every time you move the map or change the zoom! The more logic related to the map (added, e.g., search engine, custom marker icons, etc.), the more these results can be depressing.&lt;/p&gt;

&lt;p&gt;You are probably thinking: why add 350 points each time if we can remember those already there and add only those that have not been on the map so far. Additionally, you can delete those markers that are not in the map’s visible area, right? Sounds wonderful :) However, this type of operation, in the case of Leaflet.markercluster, can be a suicide!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution-to-leafletmarkercluster-performance-issues"&gt;
  &lt;/a&gt;
  Solution to Leaflet.markercluster performance issues &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Our team searched the entire internet for answers, trying to handle the optimization of our map. We had many custom solutions there (like a search engine and a lot of custom logic), but they were not the source of the problem as it turned out. Finally, one day I came across a fascinating note by danzel, who explained the situation in detail.&lt;/p&gt;

&lt;p&gt;The original post you can find here:&lt;br&gt;
&lt;a href="https://github.com/Leaflet/Leaflet.markercluster/issues/59#issuecomment-9320628"&gt;https://github.com/Leaflet/Leaflet.markercluster/issues/59#issuecomment-9320628&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It was like finding the Holy Graal!&lt;/strong&gt;&lt;br&gt;
As you’ve probably noticed, when you dynamically change points on the map, the quickest solution is to … &lt;strong&gt;remove all points and re-apply them&lt;/strong&gt;! Even those that are already on the map! &lt;strong&gt;No selection. Clean and insert.&lt;/strong&gt; Why?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leaflet-clusters-methods-comparison"&gt;
  &lt;/a&gt;
  Leaflet clusters methods comparison &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;All thanks to the &lt;strong&gt;efficiency of specific Leaflet.markercluster methods&lt;/strong&gt;. You can find a detailed comparison of them below. I installed 10000 points for the tests and set them to change after moving the map, and I did sandboxes for three different cases. I didn’t add additional logic to remove clusters out of bounds. I keep it simple in these examples and compare only add/remove methods.&lt;br&gt;
You can see the results in ms in the console:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#removelayer-combined-with-addlayer"&gt;
  &lt;/a&gt;
  removeLayer combined with addLayer
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://codesandbox.io/s/leaflet-markerclusters-performance-test-removelayeraddlayer-0zclk"&gt;SANDBOX LINK&lt;/a&gt;&lt;br&gt;
RESULTS:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eUP0PvPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://agawozniak.dev/wp-content/uploads/2021/05/removelayer_addlayer-1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eUP0PvPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://agawozniak.dev/wp-content/uploads/2021/05/removelayer_addlayer-1.jpg" alt="removeLayer combined with addLayer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#removelayers-combined-with-addlayer"&gt;
  &lt;/a&gt;
  removeLayers combined with addLayer
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://codesandbox.io/s/leaflet-markerclusters-performance-test-removelayersaddlayer-2wofo"&gt;SANDBOX LINK&lt;/a&gt;&lt;br&gt;
RESULTS:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3bPs-ie8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://agawozniak.dev/wp-content/uploads/2021/05/removelayers_addlayer.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3bPs-ie8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://agawozniak.dev/wp-content/uploads/2021/05/removelayers_addlayer.jpg" alt="removeLayers combined with addLayer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#clearlayers-combined-with-addlayers"&gt;
  &lt;/a&gt;
  clearLayers combined with addLayers
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://codesandbox.io/s/leaflet-markerclusters-performance-test-addlayersclearlayers-q08xl"&gt;SANDBOX LINK&lt;/a&gt;&lt;br&gt;
RESULTS:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0-Sjvvjm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://agawozniak.dev/wp-content/uploads/2021/05/addlayers-1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0-Sjvvjm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://agawozniak.dev/wp-content/uploads/2021/05/addlayers-1.jpg" alt="clearLayers combined with addLayers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can notice, &lt;strong&gt;clearLayers combining with addLayers are the two fastest methods&lt;/strong&gt;, and I strongly recommend using them in your project!&lt;/p&gt;

&lt;p&gt;The results are fascinating, and as you can see, the most obvious solutions are not always the best. By changing the method of adding and removing markers on the map, we have &lt;strong&gt;improved its performance more than 10 times&lt;/strong&gt;! Keep the above scores in mind if you will implement Leaflet with Leaflet.markercluster. It can save you many hours of searching for a solution.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Frontend interview - Questions I was asked</title>
      <author>Rajesh Royal</author>
      <pubDate>Mon, 10 May 2021 15:13:32 +0000</pubDate>
      <link>https://dev.to/rajeshroyal/frontend-interview-questions-i-was-asked-2ie0</link>
      <guid>https://dev.to/rajeshroyal/frontend-interview-questions-i-was-asked-2ie0</guid>
      <description>&lt;p&gt;These are the questions I was asked In a frontend interview for a ReactJS position.  &lt;/p&gt;

&lt;p&gt;If you ask me to clone Netflix UI I will do It in shortest possible time, but if you ask me evaluate and string expression without &lt;code&gt;eval()&lt;/code&gt;. I might not able to do this. &lt;/p&gt;

&lt;p&gt;Hope you guys will find these questions useful. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;BTW I failed miserably 👶👶&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let result = [{x: 1}, {x: 2}, {x: 3}];

reduce this array and result should be 6; You are suggested to use arr.reduce() function. 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;








&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input:
people = [
  { name: 'Alice', age: 21, gender: "female" },
  { name: 'Max', age: 20, gender: "male" },
  { name: 'Jane', age: 20, gender: "female" }
  { name: 'Jon', age: 21, gender: "male" },
  { name: 'Alex', age: 20, gender: "male" }
]

output: 
{
 male: [
  { name: 'Max', age: 20, gender: "male" },
  { name: 'Jon', age: 21, gender: "male" },
  { name: 'Alex', age: 20, gender: "male" }
],
female: [
 { name: 'Alice', age: 21, gender: "female" },
{ name: 'Jane', age: 20, gender: "female" }
]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;








&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: 
let value = "5+8=x";

Output should be 13 (type should be number);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;comment section is yours fellows. 🙏🙏🙏&lt;/p&gt;

</description>
      <category>interview</category>
      <category>javascript</category>
      <category>frontend</category>
      <category>questions</category>
    </item>
    <item>
      <title>Don’t use underscores in your HTTP Headers</title>
      <author>Evan Tahler</author>
      <pubDate>Mon, 10 May 2021 15:12:56 +0000</pubDate>
      <link>https://dev.to/grouparoo/don-t-use-underscores-in-your-http-headers-30co</link>
      <guid>https://dev.to/grouparoo/don-t-use-underscores-in-your-http-headers-30co</guid>
      <description>&lt;p&gt;Don’t use underscores in your HTTP Headers... at least according to AWS and Nginx!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;--HEADER&lt;/span&gt; &lt;span class="s2"&gt;"AUTH_TOKEN: abc"&lt;/span&gt; example.com &lt;span class="c"&gt;# is bad&lt;/span&gt;
curl &lt;span class="nt"&gt;--HEADER&lt;/span&gt; &lt;span class="s2"&gt;"AUTH-TOKEN: abc"&lt;/span&gt; example.com &lt;span class="c"&gt;# is OK&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Grouparoo is a self-hosted application, and we are always helping folks run and deploy our service in new ways. Recently, we’ve been working an &lt;a href="https://github.com/grouparoo/app-example-aws"&gt;example application&lt;/a&gt; for Amazon Web Service’s (AWS) Elastic Beanstalk service. Elastic Beanstalk is AWS’s original Platform as a Service (PaaS) which means you can deploy your application without having to directly manage the servers yourself. Also, Elastic Beanstalk servers are within you Virtual Private Cloud (VPC), so they are good choice if you want to integrate with any of AWS’ other services, like a database or cache.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;app-example-aws&lt;/code&gt; app deployed just fine, but we were running into a strange bug: users of our web UI would be logged out on every subsequent page load! We weren’t seeing this behavior on any of the other hosting platforms we’ve used, including other AWS deployments hosting options. What could be wrong?&lt;/p&gt;

&lt;p&gt;Eventually we narrowed down the problem to communication between our website UI and the API server. The Grouparoo UI server uses a special header, &lt;code&gt;X-GROUPAROO-SERVER_TOKEN&lt;/code&gt; , along with the users’s session cookie, to authenticate against the API to pre-hydrate our pages on behalf of the user making the request. This page hydration request was the only type of request failing. Eventually we got into the weeds of the network request, and saw that the API was never receiving the &lt;code&gt;X-GROUPAROO-SERVER_TOKEN&lt;/code&gt; header, but everything else was coming though OK:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"headers"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"connection"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"upgrade"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"host"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"app-example-aws.example.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"x-real-ip"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"172.31.xxx.xxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"x-forwarded-for"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"54.157.xxx.xxx, 172.31.xxx.xxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"x-forwarded-proto"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"x-forwarded-port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"443"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"x-amzn-trace-id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Root=1-60517ca4-xxxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"accept"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"application/json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"content-type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"application/json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"cookie"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"grouparooSessionId=xxxxxxxxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"user-agent"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"axios/0.21.1"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After some digging, we learned that Elastic Beanstalk fronts its applications with Nginx acting as a reverse proxy, which by default, considers headers with underscores CGI commands of yore and ignores them. By default the Nginx option &lt;code&gt;underscores_in_headers&lt;/code&gt; is &lt;code&gt;off&lt;/code&gt; , and you can learn more &lt;a href="https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/?highlight=underscore#missing-disappearing-http-headers"&gt;here&lt;/a&gt;. Please note that using underscores in headers is perfectly valid per the HTTP spec, but Nginx, by default, will ignore them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dlTeUMpt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gldlvc3i6pz9kppvef3e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dlTeUMpt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gldlvc3i6pz9kppvef3e.jpg" alt="A photo of a lost header, the football kind"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;br&gt;
  &lt;em&gt;(photo of a lost header, the football kind)&lt;/em&gt;&lt;br&gt;
&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;It was a matter of preference whether or not right thing to do was to change the header we use and not use underscores (&lt;code&gt;X-GROUPAROO-SERVER-TOKEN&lt;/code&gt;) , or to modify the Nginx reverse proxy configuration on our Elastic Beanstalk servers (which is possible - &lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/java-se-nginx.html"&gt;see here&lt;/a&gt;). At the end of the day we want Grouparoo to work out-of-the box on as many platforms as possible without needing custom configuration. Nginx is a wildly popular web server, load balancer, and reverse proxy - and we should to be compatible with its defaults. To that end, we opted to change our headers not to use underscores. I recommend that everyone else developing a web application do the same and follow Nginx's defaults to avoid problems like this down the road.&lt;/p&gt;

</description>
      <category>node</category>
      <category>nginx</category>
      <category>aws</category>
      <category>devops</category>
    </item>
  </channel>
</rss>
