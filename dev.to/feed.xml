<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top 20 JavaScript tips and tricks to increase your Speed and Efficiency</title>
      <author>Kapil Raghuwanshiüñ•</author>
      <pubDate>Tue, 08 Jun 2021 07:09:33 +0000</pubDate>
      <link>https://dev.to/techygeeky/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-283g</link>
      <guid>https://dev.to/techygeeky/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-283g</guid>
      <description>&lt;h3&gt;
  &lt;a href="#convenient-and-useful-techniques-to-reduce-the-lines-of-code-and-pace-up-your-dev-work"&gt;
  &lt;/a&gt;
  Convenient and useful techniques to reduce the lines of code and pace up your Dev Work!
&lt;/h3&gt;

&lt;p&gt;In our daily tasks, we get to write functions such as sorting, searching, finding unique values, passing parameters, swapping values etc, so here I present my list of shorthand techniques to write all of them as a Pro!‚úåüèª&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg" alt="Increase Your Performance"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;JavaScript is truly an awesome languageüíõ to learn and work with. And there can be more than one approach to reach to the same solution for given problem. In this article, we will discuss only the quickest ones.üöÄ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These approaches will definitely help you in:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reducing the number of LOC(lines of code),&lt;/li&gt;
&lt;li&gt;Coding Competitions, &lt;/li&gt;
&lt;li&gt;Hackathons or &lt;/li&gt;
&lt;li&gt;Other time bound tasks.‚è±&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these JavaScript Hacks uses techniques from ECMAScript6(ES2015) onwards, though the latest version is ECMAScript11(ES2020). &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: All below tricks have been tested on the Console of Google Chrome.&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-declare-and-initialize-arrays"&gt;
  &lt;/a&gt;
  1. Declare and Initialize Arrays
&lt;/h4&gt;

&lt;p&gt;We can initialize array of particular size with default values like &lt;code&gt;""&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;. You might have used these for the 1-D array but how about initializing 2-D array/matrix?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array = Array(5).fill(''); 
// Output 
(5)¬†["", "", "", "", ""]

const matrix = Array(5).fill(0).map(()=&amp;gt;Array(5).fill(0)); 
// Output
(5) [Array(5), Array(5), Array(5), Array(5), Array(5)]
0: (5) [0, 0, 0, 0, 0]
1: (5) [0, 0, 0, 0, 0]
2: (5) [0, 0, 0, 0, 0]
3: (5) [0, 0, 0, 0, 0]
4: (5) [0, 0, 0, 0, 0]
length: 5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-find-out-the-sum-minimum-and-maximum-value"&gt;
  &lt;/a&gt;
  2. Find out the sum, minimum and maximum value
&lt;/h4&gt;

&lt;p&gt;We should make use of &lt;code&gt;reduce&lt;/code&gt; method to quickly find basic maths operations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array  = [5,4,7,8,9,2];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Sum
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;array.reduce((a,b) =&amp;gt; a+b);
// Output: 35
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Max
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;array.reduce((a,b)=&amp;gt;a&amp;gt;b?a:b);
// Output: 9
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Min
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;array.reduce((a,b)=&amp;gt;a&amp;lt;b?a:b);
// Output: 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3-sorting-array-of-string-numbers-or-objects"&gt;
  &lt;/a&gt;
  3. Sorting Array of String, Numbers or Objects
&lt;/h4&gt;

&lt;p&gt;We have inbuilt methods &lt;code&gt;sort()&lt;/code&gt; and &lt;code&gt;reverse()&lt;/code&gt; for sorting strings but How about numbers or array of objects?&lt;br&gt;
Let's check out sorting hacks for Numbers and Objects in Increasing and Decreasing order as well.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sort String Array
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const stringArr = ["Joe", "Kapil", "Steve", "Musk"]
stringArr.sort();
// Output
(4)¬†["Joe", "Kapil", "Musk", "Steve"]

stringArr.reverse();
// Output
(4)¬†["Steve", "Musk", "Kapil", "Joe"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Sort Number Array
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array  = [40, 100, 1, 5, 25, 10];
array.sort((a,b)=&amp;gt;a-b);
// Output
(6)¬†[1, 5, 10, 25, 40, 100]

array.sort((a,b)=&amp;gt;b-a);
// Output
(6)¬†[100, 40, 25, 10, 5, 1]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Sort Array of Objects
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const objectArr = [ 
    { first_name: 'Lazslo', last_name: 'Jamf'     },
    { first_name: 'Pig',    last_name: 'Bodine'   },
    { first_name: 'Pirate', last_name: 'Prentice' }
];
objectArr.sort((a, b) =&amp;gt; a.last_name.localeCompare(b.last_name));
// Output
(3) [{‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
0: {first_name: "Pig", last_name: "Bodine"}
1: {first_name: "Lazslo", last_name: "Jamf"}
2: {first_name: "Pirate", last_name: "Prentice"}
length: 3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#4-ever-need-to-filter-falsy-values-out-of-an-array"&gt;
  &lt;/a&gt;
  4. Ever need to filter falsy values out of an array?
&lt;/h4&gt;

&lt;p&gt;Falsy values like &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;""&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt; can be omitted easily through below trick&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array = [3, 0, 6, 7, '', false];
array.filter(Boolean);
// Output
(3)¬†[3, 6, 7]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#5-use-logical-operators-for-various-conditions"&gt;
  &lt;/a&gt;
  5. Use Logical Operators for various conditions
&lt;/h4&gt;

&lt;p&gt;If you want to reduce nested if..else or switch cases, you can simply play with basic of logical operators &lt;code&gt;AND/OR&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function doSomething(arg1){ 
    arg1 = arg1 || 10; 
// set arg1 to 10 as a default if it‚Äôs not already set
return arg1;
}

let foo = 10;  
foo === 10 &amp;amp;&amp;amp; doSomething(); 
// is the same thing as if (foo == 10) then doSomething();
// Output: 10

foo === 5 || doSomething();
// is the same thing as if (foo != 5) then doSomething();
// Output: 10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#6-remove-duplicates-values"&gt;
  &lt;/a&gt;
  6. Remove Duplicates values
&lt;/h4&gt;

&lt;p&gt;You might have used &lt;code&gt;indexOf()&lt;/code&gt; with for loop which return first found index or newer one &lt;code&gt;includes()&lt;/code&gt; which returns boolean true/false from the array to find out/remove duplicates. Here's we have 2 quicker approaches.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array  = [5,4,7,8,9,2,7,5];
array.filter((item,idx,arr) =&amp;gt; arr.indexOf(item) === idx);
or
const nonUnique = [...new Set(array)];
// Output: [5, 4, 7, 8, 9, 2]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#7-create-a-counter-object-or-map"&gt;
  &lt;/a&gt;
  7. Create a Counter Object or Map
&lt;/h4&gt;

&lt;p&gt;Most of the time, the requirement to solve problem by creating counter object or map which tracks variables as keys with their frequency/occurrences as values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let string = 'kapilalipak';

const table={}; 
for(let char of string) {
  table[char]=table[char]+1 || 1;
}
// Output
{k: 2, a: 3, p: 2, i: 2, l: 2}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const countMap = new Map();
  for (let i = 0; i &amp;lt; string.length; i++) {
    if (countMap.has(string[i])) {
      countMap.set(string[i], countMap.get(string[i]) + 1);
    } else {
      countMap.set(string[i], 1);
    }
  }
// Output
Map(5)¬†{"k" =&amp;gt; 2, "a" =&amp;gt; 3, "p" =&amp;gt; 2, "i" =&amp;gt; 2, "l" =&amp;gt; 2}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#8-ternary-operator-is-cool"&gt;
  &lt;/a&gt;
  8. Ternary Operator is cool
&lt;/h4&gt;

&lt;p&gt;You can avoid nested conditional if..elseif..elseif with ternary operators.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Fever(temp) {
return temp &amp;gt; 97 ? 'Visit Doctor!'
      : temp &amp;lt; 97 ? 'Feel Better!'
      : temp === 97 ? 'Take Some Rest!'
      : 'Go Out and Play!';
}

// Output
Fever(97): "Take Some Rest!" 
Fever(100): "Visit Doctor!"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#9-quicker-for-loops-compare-to-legacy-onces"&gt;
  &lt;/a&gt;
  9. Quicker for loops compare to legacy onces
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;for&lt;/code&gt; and &lt;code&gt;for..in&lt;/code&gt; gets you index by default, but you can use arr[index]. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;for..in&lt;/code&gt; accepts non numeric as well so avoid it.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;forEach&lt;/code&gt;, &lt;code&gt;for...of&lt;/code&gt; gets you element directly. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;forEach&lt;/code&gt; can get you index also but for/of can't. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;for&lt;/code&gt; and &lt;code&gt;for...of&lt;/code&gt; considers holes in array but other 2 do not.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#10-merge-2-objects"&gt;
  &lt;/a&gt;
  10. Merge 2 objects
&lt;/h4&gt;

&lt;p&gt;Often we need to merge multiple objects in our daily tasks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const user = { 
 name: 'Kapil Raghuwanshi', 
 gender: 'Male' 
 };
const college = { 
 primary: 'Mani Primary School', 
 secondary: 'Lass Secondary School' 
 };
const skills = { 
 programming: 'Extreme', 
 swimming: 'Average', 
 sleeping: 'Pro' 
 };

const summary = {...user, ...college, ...skills};

// Output 
gender: "Male"
name: "Kapil Raghuwanshi"
primary: "Mani Primary School"
programming: "Extreme"
secondary: "Lass Secondary School"
sleeping: "Pro"
swimming: "Average"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#11-arrow-functions"&gt;
  &lt;/a&gt;
  11. Arrow Functions
&lt;/h4&gt;

&lt;p&gt;An arrow function expression is a compact alternative to a traditional function expression, but is limited and can't be used in all situations. Since they have lexical scope (parental scope) and does not have their own &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;arguments&lt;/code&gt; hence they refer to the environment in which they are defined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const person = {
name: 'Kapil',
sayName() {
    return this.name;
    }
}
person.sayName();
// Output
"Kapil"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const person = {
name: 'Kapil',
sayName : () =&amp;gt; {
    return this.name;
    }
}
person.sayName();
// Output
""
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#12-optional-chaining"&gt;
  &lt;/a&gt;
  12. Optional Chaining
&lt;/h4&gt;

&lt;p&gt;The optional chaining ?. stops the evaluation if the value before ?. is undefined or null and returns undefined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const user = {
  employee: {
    name: "Kapil"
  }
};
user.employee?.name;
// Output: "Kapil"
user.employ?.name;
// Output: undefined
user.employ.name
// Output: VM21616:1 Uncaught TypeError: Cannot read property 'name' of undefined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#13-shuffle-an-array"&gt;
  &lt;/a&gt;
  13. Shuffle an Array
&lt;/h4&gt;

&lt;p&gt;Making use of inbuilt &lt;code&gt;Math.random()&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const list = [1, 2, 3, 4, 5, 6, 7, 8, 9];
list.sort(()=&amp;gt;{
    return Math.random() - 0.5;
});
// Output
(9)¬†[2, 5, 1, 6, 9, 8, 4, 3, 7]
Call it again
(9)¬†[4, 1, 7, 5, 3, 8, 2, 9, 6]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#14-nullish-coalescing-operator"&gt;
  &lt;/a&gt;
  14. Nullish Coalescing Operator
&lt;/h4&gt;

&lt;p&gt;The nullish coalescing operator (??) is a logical operator that returns its right-hand side operand when its left-hand side operand is null or undefined, and otherwise returns its left-hand side operand.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const foo = null ?? 'my school';
// Output: "my school"

const baz = 0 ?? 42;
// Output: 0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#15-rest-amp-spread-operators"&gt;
  &lt;/a&gt;
  15. Rest &amp;amp; Spread operators
&lt;/h4&gt;

&lt;p&gt;Those mysterious 3 dots &lt;code&gt;...&lt;/code&gt; can rest or spread!ü§ì&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function myFun(a,  b, ...manyMoreArgs) {
   return arguments.length;
}
myFun("one", "two", "three", "four", "five", "six");

// Output: 6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const parts = ['shoulders', 'knees']; 
const lyrics = ['head', ...parts, 'and', 'toes']; 

lyrics;
// Output: 
(5)¬†["head", "shoulders", "knees", "and", "toes"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#16-default-parameters"&gt;
  &lt;/a&gt;
  16. Default Parameters
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const search = (arr, low=0,high=arr.length-1) =&amp;gt; {
    return high;
}
search([1,2,3,4,5]);

// Output: 4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#17-convert-decimal-to-binary-or-hexa"&gt;
  &lt;/a&gt;
  17. Convert Decimal to Binary or Hexa
&lt;/h4&gt;

&lt;p&gt;We can use some in-built methods like &lt;code&gt;.toPrecision()&lt;/code&gt; or &lt;code&gt;.toFixed()&lt;/code&gt; to achieve much of helping functionalities while solving problems.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const num = 10;

num.toString(2);
// Output: "1010"
num.toString(16);
// Output: "a"
num.toString(8);
// Output: "12"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#18-simple-swap-2-values-using-destructuring"&gt;
  &lt;/a&gt;
  18. Simple Swap 2 values using Destructuring
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let a = 5;
let b = 8;
[a,b] = [b,a]

[a,b]
// Output
(2)¬†[8, 5]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#19-singleliner-palindrome-check"&gt;
  &lt;/a&gt;
  19. Single-liner Palindrome check
&lt;/h4&gt;

&lt;p&gt;Well, this is not a shorthand trick overall but it will give you clear idea to play with strings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function checkPalindrome(str) {
  return str == str.split('').reverse().join('');
}
checkPalindrome('naman');
// Output: true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#20-turn-object-attributes-into-an-array-of-attributes"&gt;
  &lt;/a&gt;
  20. Turn Object attributes into an Array of attributes
&lt;/h4&gt;

&lt;p&gt;Using &lt;code&gt;Object.entries()&lt;/code&gt;,&lt;code&gt;Object.keys()&lt;/code&gt; and &lt;code&gt;Object.values()&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const obj = { a: 1, b: 2, c: 3 };

Object.entries(obj);
// Output
(3) [Array(2), Array(2), Array(2)]
0: (2) ["a", 1]
1: (2) ["b", 2]
2: (2) ["c", 3]
length: 3

Object.keys(obj);
(3)¬†["a", "b", "c"]

Object.values(obj);
(3)¬†[1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So that's it guys for now! ü§ó&lt;/p&gt;

&lt;p&gt;If you know few more hacks like above, feel free to share them in the comment section below, so that we can all learn them together.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#if-you-really-learned-something-new-with-this-article-or-it-really-made-your-dev-work-faster-than-before-like-it-save-it-and-share-it-with-your-colleagues"&gt;
  &lt;/a&gt;
  If you really learned something new with this article or it really made your dev work faster than before, like it, save it and share it with your colleagues.
&lt;/h5&gt;

&lt;p&gt;I have been writing tech blogs for quite a time now, and have mostly published through my &lt;a href="https://www.medium.com/@techygeeky"&gt;Medium&lt;/a&gt; account, this is my first tech article/tutorial in Dev.to. Hope you guys will shower love to it!ü§©&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Let‚Äôs be connected on &lt;a href="https://www.linkedin.com/in/kapilraghuwanshi/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://www.twitter.com/techygeeeky"&gt;Twitter&lt;/a&gt; for more such engaging Tech Articles and Tutorials.ü§ù&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>The Power of Scraping LinkedIn Data for Businesses</title>
      <author>jeremiah-t</author>
      <pubDate>Tue, 08 Jun 2021 06:04:01 +0000</pubDate>
      <link>https://dev.to/jeremiaht/the-power-of-scraping-linkedin-data-for-businesses-572h</link>
      <guid>https://dev.to/jeremiaht/the-power-of-scraping-linkedin-data-for-businesses-572h</guid>
      <description>&lt;h6&gt;
  &lt;a href="#in-this-article-we-explore-how-scraping-linkedin-data-can-lead-to-a-significant-competitive-edge-in-business-intelligence-for-any-company"&gt;
  &lt;/a&gt;
  In this article, we explore how scraping LinkedIn data can lead to a significant competitive edge in business intelligence for any company.
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#introduction-to-open-web-external-data"&gt;
  &lt;/a&gt;
  Introduction to Open Web, External Data
&lt;/h2&gt;

&lt;p&gt;In an era of digitization, data is becoming the core component for business growth. Today, apart from already collecting their internal data for analysis, companies are realizing the importance of open web data (external data) in gaining a competitive advantage.&lt;br&gt;
There are millions of data sources but today we look at LinkedIn as a data source and how that can allow businesses to gain an edge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linkedin-is-a-gold-mine-for-actionable-business-data"&gt;
  &lt;/a&gt;
  LinkedIn is a ‚ÄúGold Mine‚Äù for actionable, business data.
&lt;/h2&gt;

&lt;p&gt;LinkedIn reports over &lt;a href="https://economicgraph.linkedin.com/"&gt;772 million&lt;/a&gt; users from across 200 countries. With a &lt;a href="https://go.forrester.com/blogs/the-global-information-worker-population-swells-to-1-25-billion-in-2018/"&gt;1.25 billion&lt;/a&gt; global information worker population (people that use a smartphone, PC, or tablet for work an hour more per day in a typical week.) as of 2018 and growing, that is an estimated 70% (and growing) of all information workers listed on LinkedIn.&lt;br&gt;
Consider that, and nearly 55 million companies, 14 million open jobs, and 36,000 skills listed on the platform, LinkedIn becomes an essential primary open web data source for business intelligence.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-kind-of-data-is-available-on-linkedin"&gt;
  &lt;/a&gt;
  What Kind of Data is Available on LinkedIn?
&lt;/h2&gt;

&lt;p&gt;There are thousands of data points available on the platform. However, there are some common types of data that are of utmost importance for clients and organizations. Here are some of the data points that are most commonly acquired using the available LinkedIn scraping services out there.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;More than two new members join LinkedIn every second.&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#business-of-apps"&gt;
  &lt;/a&gt;
  -Business of Apps
&lt;/h6&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#people-data"&gt;
  &lt;/a&gt;
  People Data
&lt;/h2&gt;

&lt;p&gt;With the 772 million professional profiles on LinkedIn steadily increasing, you can now tap on the wealth of such People data. There are over 100 data points per LinkedIn profile. More importantly, LinkedIn's resume-style profiles are retrospective where a user fills in the full back-dated career or education history. This means you can effectively reconstruct an individual's entire professional career just from work experience in a data field.&lt;/p&gt;

&lt;p&gt;Here are some data points available from an individual's LinkedIn Profile&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SpbzK8FL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iq14j7dizbkr6jg48q8f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SpbzK8FL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iq14j7dizbkr6jg48q8f.png" alt="Profile Data Points"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#company-data"&gt;
  &lt;/a&gt;
  Company Data
&lt;/h2&gt;

&lt;p&gt;Companies now invest a serious amount of resources in maintaining their LinkedIn company profiles with key firmographic, social activity, and job data. Extracting basic firmographic data enables companies to stay ahead of the competition and understand the market landscape. Companies can use search filters like industry, company size, and geographic location to attain in-depth competitive intelligence.&lt;/p&gt;

&lt;p&gt;You can extract fully enriched company data with crucial information such as:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iXlQS9YL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3h4g5bpemeomw0rj070.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iXlQS9YL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3h4g5bpemeomw0rj070.png" alt="Company Data Points"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#social-listening-data"&gt;
  &lt;/a&gt;
  Social Listening Data
&lt;/h2&gt;

&lt;p&gt;Whether in Finance, Research, or any business discipline, what a company or top executive shares on social media platforms has value as an indicator with possible business impact. Newmarket expansion, M&amp;amp;As, product failures, executive hires, or departures can all be captured. This is especially true as companies and individuals start to be more active on LinkedIn.&lt;/p&gt;

&lt;p&gt;The key is staying updated on such indicators by monitoring the social activities of companies and top business professionals.&lt;/p&gt;

&lt;p&gt;You can derive information from the social activity data from LinkedIn by using the following data points:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SXinyEuT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ctqzp7yazp1rwzs3uhk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SXinyEuT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ctqzp7yazp1rwzs3uhk.png" alt="Social Activity Data Points"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-is-linkedin-data-useful-for-businesses"&gt;
  &lt;/a&gt;
  How is LinkedIn Data Useful for Businesses?
&lt;/h2&gt;

&lt;p&gt;With all that data available, how do businesses utilize this data in an effective manner to gain a competitive edge. To understand this, we will look at a couple of common use cases for the data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#research"&gt;
  &lt;/a&gt;
  Research
&lt;/h3&gt;

&lt;p&gt;With the power of reconstructing whole careers using a LinkedIn profile, one can only imagine how vast this can be applied in the field of research.&lt;/p&gt;

&lt;p&gt;Top-tier academic and research institutions are starting to discover the power of such data and are even starting to incorporate LinkedIn into their publications as references.&lt;/p&gt;

&lt;p&gt;An example would be collecting all profiles affiliated with Company A from 2010 to 2016, extracting data points such as skills, and correlating that to the sales performance of Company A. One could then make inferences that certain skills found in employees would lead to an outperforming company. I'm no researcher but you get where I'm coming from.&lt;/p&gt;

&lt;p&gt;Read more about how Researchers are using LinkedIn data &lt;a href="https://mantheos.com/use-cases/research/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#human-resources"&gt;
  &lt;/a&gt;
  Human Resources
&lt;/h3&gt;

&lt;p&gt;Human Resources, as the name suggests, is all about the people. And with LinkedIn essentially a resume database of all the professionals in the world, you can imagine the competitive advantage this gives any recruiter, HR tech SaaS or service provider. Of course, browsing them manually on LinkedIn is not very scalable but when you have all that data in its raw format, you have all the power. This data also lends itself very well to HR Tech companies like &lt;a href="https://hiretual.com/"&gt;Hiretual&lt;/a&gt; and &lt;a href="https://goarya.com/"&gt;Arya&lt;/a&gt; who are utilizing Artificial Intelligence to source and match highly relevant candidates for a particular role using data found on a LinkedIn profile.&lt;/p&gt;

&lt;p&gt;Read more about how HR companies are using LinkedIn data &lt;a href="https://mantheos.com/use-cases/human-resource/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alumni-corporate-amp-academia-relations"&gt;
  &lt;/a&gt;
  Alumni (Corporate &amp;amp; Academia) Relations
&lt;/h3&gt;

&lt;p&gt;As a college graduate, chances are, you would have received one of those alumni forms in the mail asking for an update of contact details. Chances also are, that you never filled that out. Universities want to know how your career develops upon graduation but only collect data on enrolment and graduation.&lt;/p&gt;

&lt;p&gt;Most of the top-tier universities are also successful due to their strong alumni network and funding. And good alumni relations start with knowing who they are and where they are in their careers now.&lt;/p&gt;

&lt;p&gt;Scraping LinkedIn data allows universities to track their alumni, group alumni based on seniority levels, industries, job functions and therefore build a strong alumni community. Identifying notable alumni also helps with building donor lists and encouraging new enrolment.&lt;/p&gt;

&lt;p&gt;Read more about how Universities are using LinkedIn data &lt;a href="https://mantheos.com/use-cases/alumni/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alternative-data-for-finance"&gt;
  &lt;/a&gt;
  Alternative Data for Finance
&lt;/h3&gt;

&lt;p&gt;Investing in companies, whether a start-up or a fortune 500 company has traditionally been about reading financial statements and reports. While that is a good indicator of output, it often does not tell the full story. Financial institutions are constantly looking for more alternative data to better evaluate the investment potential of a company. This is where people's data comes in when you think about it, talent fundamentally drives the performance of a company, and if you believe that then procuring as much data about a company's people aka employees becomes of utmost priority.&lt;/p&gt;

&lt;p&gt;The power of having the full LinkedIn profile data of all employees from any company cannot be underestimated. Companies can use this data to analyze company hierarchies, functional compositions, educational backgrounds, and more. Thereafter, collecting this data monthly gives insights like key executive hires/departures, geographical market expansions, and talent acquisition strategies.&lt;/p&gt;

&lt;p&gt;Read more about how Financial Institutions are using LinkedIn data &lt;a href="https://mantheos.com/use-cases/investing/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-scrape-linkedin"&gt;
  &lt;/a&gt;
  How to Scrape LinkedIn?
&lt;/h2&gt;

&lt;p&gt;For the benefit of some readers, data scraping is a technique that uses computer programs that enables the extraction of data from numerous sources such as webpages, social media platforms, blogs, and e-commerce platforms. If you are technical and are willing to invest the required time and effort, you could explore building your own scraper but scraping LinkedIn has its unique set of challenges with the vast amount of data and platform restrictions. Another option would be looking at companies offering such professional scraping services.&lt;/p&gt;

&lt;p&gt;There are a few LinkedIn scraping tools available on the market with differences in available data points, quality of data, and scale of aggregation. Choosing the right data partner is absolutely critical depending on your requirements unique to your business.&lt;/p&gt;

&lt;p&gt;Here at Mantheos, our data aggregation techniques are constantly evolving to provide a LinkedIn scraping service that provides scraping at scale, well-structured/prepared datasets, comprehensive data points, and most importantly, high-quality data. This is showcased with our &lt;a href="https://www.mantheos.com/real-time-api/"&gt;real-time LinkedIn scraping API&lt;/a&gt; that is designed to empower companies with a real-time people/company data pipeline that they can efficiently plug into their business processes and technologies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;LinkedIn data is amongst the most comprehensive and sought after data sources for People and Company data. This is expected to grow as the platform continues to acquire more users. The possibilities with the amount of data are simply endless and companies need to start capitalizing on this opportunity. Although there are growing concerns among users about data privacy issues, a controlled effort with specific guidelines to collect data from LinkedIn will ensure the users' legitimacy of data uses and privacy.&lt;/p&gt;

&lt;p&gt;Follow us on &lt;a href="https://www.linkedin.com/company/mantheos/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://www.facebook.com/mantheosgroup/"&gt;Facebook&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>bigdata</category>
      <category>webscraper</category>
      <category>datascraper</category>
      <category>linkedin</category>
    </item>
    <item>
      <title>We Need Your Help</title>
      <author>Zack</author>
      <pubDate>Tue, 08 Jun 2021 05:04:57 +0000</pubDate>
      <link>https://dev.to/zackenstien/we-need-your-help-23c6</link>
      <guid>https://dev.to/zackenstien/we-need-your-help-23c6</guid>
      <description>&lt;p&gt;Today, I started a small project named "CodeSnippets".  The goal is to have a library of easily accessible code snippets and examples with no license.&lt;/p&gt;

&lt;p&gt;The project can be found here: &lt;a href=""&gt;https://github.com/trimorphdev/codesnippets&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if you have any questions about the project or want to know where to start contributing, feel free to &lt;a href="https://github.com/trimorphdev/codesnippets/issues/new"&gt;create an issue&lt;/a&gt;!  I would be more than happy to help you get started.&lt;/p&gt;

&lt;p&gt;Thanks for your contributions :)&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Give vue-i18n more superpowers‚ùï</title>
      <author>Adriano Raiano</author>
      <pubDate>Tue, 08 Jun 2021 05:02:08 +0000</pubDate>
      <link>https://dev.to/adrai/give-vue-i18n-more-superpowers-12la</link>
      <guid>https://dev.to/adrai/give-vue-i18n-more-superpowers-12la</guid>
      <description>&lt;p&gt;It‚Äôs joyful to work with &lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt;. The design is elegant and the robust first-party additions which can be coupled with, make building browser apps a pleasure.&lt;/p&gt;

&lt;p&gt;The most famous i18n plugin for the progressive JavaScript framework &lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt; is probably &lt;a href="https://kazupon.github.io/vue-i18n/"&gt;Vue I18n&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/kazupon"&gt;Kazuya&lt;/a&gt;, thank you for this great i18n plugin!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Dmi2jrE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfui8d7c8a2jsr3xnit4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Dmi2jrE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfui8d7c8a2jsr3xnit4.jpg" alt="https://www.npmtrends.com/vue-i18n-vs-vue-gettext-vs-v-localize-vs-voo-i18n-vs-vue-i18next-vs-vue-multilanguage-vs-vue-polyglot-vs-vue-translate-plugin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#toc"&gt;
  &lt;/a&gt;
  TOC
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#new-versions"&gt;New versions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#start"&gt;So how does a basic vue-i18n setup look like? Let's get into it...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#vue-i18n-better"&gt;Is it possible to make a vue-18n setup even better?&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#language-switcher"&gt;Language Switcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#component-directive"&gt;Component interpolation and directive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#superpowers"&gt;Where are the additional superpowers?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-look"&gt;How does this look like?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#save-missing"&gt;save missing translations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#more"&gt;üëÄ but there's more...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#congratulations"&gt;üéâü•≥ Congratulations üéäüéÅ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#new-versions"&gt;
  &lt;/a&gt;
  New versions &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Beside templates, directives, data binding, event handling, etc... with v3 Vue.js is now introducing also &lt;a href="https://v3.vuejs.org/guide/composition-api-introduction.html"&gt;Composition API&lt;/a&gt;, &lt;a href="https://v3.vuejs.org/guide/teleport.html"&gt;Teleport&lt;/a&gt;, &lt;a href="https://v3.vuejs.org/guide/migration/fragments.html"&gt;Fragments&lt;/a&gt;... and &lt;a href="https://v3.vuejs.org/guide/migration/suspense.html"&gt;Suspense&lt;/a&gt;.&lt;br&gt;
The appropriate version to Vue.js v3 for Vue I18n is &lt;a href="https://blog.intlify.dev/posts/vue-i18n-9.html"&gt;v9&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#so-how-does-a-basic-vuei18n-setup-look-like"&gt;
  &lt;/a&gt;
  So how does a basic vue-i18n setup look like? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#lets-get-into-it"&gt;
  &lt;/a&gt;
  Let's get into it...
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Make sure you have Node.js and npm installed. It's best, if you have some experience with simple HTML, JavaScript and basic Vue.js, before jumping to &lt;a href="https://kazupon.github.io/vue-i18n/"&gt;vue-i18n&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Take your own Vue.js project or create a new one, i.e. with &lt;a href="https://cli.vuejs.org/guide/creating-a-project.html#vue-create"&gt;the vue create cli command&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx @vue/cli create vue-starter-project
&lt;span class="c"&gt;# select vue 3 preset&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's install the vue-i18n dependency:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install vue-i18n@9&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's prepare the &lt;code&gt;main.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// set locale&lt;/span&gt;
  &lt;span class="na"&gt;fallbackLocale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// set fallback locale&lt;/span&gt;
  &lt;span class="na"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;en&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Welcome to Your Vue.js App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;de&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Willkommen zu Deiner Vue.js App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// If you need to specify other options, you can set other options&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's create a first component &lt;code&gt;TranslationShowCase.vue&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;welcome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TranslationShowCase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...and use that component in &lt;code&gt;App.vue&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Vue logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./assets/logo.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/TranslationShowCase.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Avenir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;antialiased&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;osx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;grayscale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;c3e50&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should now see something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IW4UPJDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ryewad8wgv89oy0i5fl3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IW4UPJDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ryewad8wgv89oy0i5fl3.jpg" alt="result"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#language-switcher"&gt;
  &lt;/a&gt;
  Language Switcher &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Now we will create a language switcher to make the content change between different languages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;welcome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;hr&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale !== 'de'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;changeLanguage('de')&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;DE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale === 'de'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;DE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;|&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale !== 'en'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;changeLanguage('en')&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;EN&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale === 'en'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;EN&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TranslationShowCase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;changeLanguage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vAT6_eLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzc2zptoayij78iwndgs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vAT6_eLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzc2zptoayij78iwndgs.jpg" alt="result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ü•≥ Awesome, you've just created your first language switcher!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#component-interpolation-and-directive"&gt;
  &lt;/a&gt;
  Component interpolation and directive &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Now let's try &lt;a href="https://vue-i18n.intlify.dev/guide/advanced/component.html#basic-usage"&gt;component interpolation&lt;/a&gt; and the &lt;a href="https://vue-i18n.intlify.dev/api/directive.html#translationdirective"&gt;translation directive&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;welcome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="nx"&gt;keypath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;descr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;label&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;doc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cli.vuejs.org&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_blank&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;doc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/i18n-t&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{path:'end'}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;can&lt;/span&gt; &lt;span class="nx"&gt;also&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;written&lt;/span&gt; &lt;span class="nx"&gt;like&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;'end'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;hr&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale !== 'de'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;changeLanguage('de')&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;DE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale === 'de'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;DE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;|&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale !== 'en'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;changeLanguage('en')&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;EN&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale === 'en'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;EN&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TranslationShowCase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;changeLanguage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...and add the new keys to your translations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// set locale&lt;/span&gt;
  &lt;span class="na"&gt;fallbackLocale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// set fallback locale&lt;/span&gt;
  &lt;span class="na"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;en&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Welcome to Your Vue.js App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;descr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;For a guide and recipes on how to configure / customize this project, check out the {0}.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-cli documentation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;end&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;have fun!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;de&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Willkommen zu Deiner Vue.js App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;descr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Eine Anleitung und Rezepte f√ºr das Konfigurieren / Anpassen dieses Projekts findest du in der {0}.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-cli Dokumentation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;end&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;habe Spass!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// If you need to specify other options, you can set other options&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should be the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cirOFdzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gi4dq7bdd45miasp7yev.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cirOFdzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gi4dq7bdd45miasp7yev.jpg" alt="result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-are-the-additional-superpowers"&gt;
  &lt;/a&gt;
  Where are the additional superpowers? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Let's meet &lt;a href="https://github.com/locize/locizer"&gt;locizer&lt;/a&gt;...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/locize/locizer"&gt;locizer&lt;/a&gt; is a lightweight module to access data from your &lt;a href="https://www.locize.com"&gt;locize&lt;/a&gt; project and use that inside your application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="//../2021-04-14-how-to-internationalize-react-i18next/#for-sure"&gt;What is locize?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#how-does-this-look-like"&gt;
  &lt;/a&gt;
  How does this look like? &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;First you need to signup at &lt;a href="https://locize.com/register"&gt;locize&lt;/a&gt; and &lt;a href="https://docs.locize.com/integration/getting-started/create-a-user-account"&gt;login&lt;/a&gt;.&lt;br&gt;
Then &lt;a href="https://docs.locize.com/integration/getting-started/add-a-new-project"&gt;create a new project&lt;/a&gt; in locize and add your translations. You can add your translations either by &lt;a href="https://docs.locize.com/more/general-questions/how-to-import-translations-from-a-file"&gt;importing the individual json files&lt;/a&gt; or via &lt;a href="https://docs.locize.com/integration/api#update-remove-translations"&gt;API&lt;/a&gt; or by using the &lt;a href="https://github.com/locize/locize-cli"&gt;CLI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Having the translations in your code file works, but is not that suitable to work with, for translators.&lt;br&gt;
Using locize separates the translations from the code.&lt;/p&gt;

&lt;p&gt;Having imported all translations should look like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qJV2TmyG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aaw2k9ak7n1iohgyw6ee.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qJV2TmyG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aaw2k9ak7n1iohgyw6ee.jpg" alt="imported"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Done so, we're going to install &lt;a href="https://github.com/locize/locizer"&gt;locizer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install locizer&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's create a dedicated &lt;code&gt;i18n.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;locizer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;locizer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;namespace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;messages&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// your namespace name added in locize&lt;/span&gt;
&lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;projectId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;your-locize-project-id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// locizer.lng is the language detected in your browser.&lt;/span&gt;
  &lt;span class="na"&gt;fallbackLocale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// set fallback locale&lt;/span&gt;
  &lt;span class="c1"&gt;// If you need to specify other options, you can set other options&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// called from within setup hook in App.vue&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loadMessagesPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;namespace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setLocaleMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The translations are now loaded asynchronously, that's why we export the &lt;code&gt;loadMessagesPromise&lt;/code&gt; and use it in your &lt;code&gt;App.vue&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Vue logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./assets/logo.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;loadMessagesPromise&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/TranslationShowCase.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;// used in combination with Suspense.&lt;/span&gt;
  &lt;span class="c1"&gt;// useful when translations are not in-memory...&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;loadMessagesPromise&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Avenir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;antialiased&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;osx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;grayscale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;c3e50&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Additionally, we make use of the new &lt;a href="https://v3.vuejs.org/guide/migration/suspense.html"&gt;Suspense&lt;/a&gt; functionality of Vue.js.&lt;br&gt;
Let's create a new file: i.e. &lt;code&gt;Suspenser.vue&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Suspense&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;fallback&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Suspense&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Suspenser&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;App&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And use that in your &lt;code&gt;main.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Suspenser.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, as long your translations gets loaded you'll see the fallback template:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EiepcSe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc04m16j8u1jiiaiukpb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EiepcSe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc04m16j8u1jiiaiukpb.jpg" alt="suspense"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If your browser is configured with german language, you may now have seen the language automatically was set to german by default. This is because of the language detection feature of locizer. You can configure the language detection with other &lt;a href="https://github.com/locize/locizer#init-options"&gt;options&lt;/a&gt;&lt;br&gt;
By default the language detection also is looking for the query parameter lng, so you can also type this url to test this: &lt;a href="http://localhost:8080/?lng=de"&gt;http://localhost:8080/?lng=de&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0bEn6l_b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vot6nrv9ozhqmt786uh7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0bEn6l_b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vot6nrv9ozhqmt786uh7.jpg" alt="language detection"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#save-missing-translations"&gt;
  &lt;/a&gt;
  save missing translations &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;I wish newly added keys in the code, would automatically be saved to locize.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Your wish is my command!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Extend the &lt;code&gt;i18n.js&lt;/code&gt; file with the locize api-key and the handleMissing function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;locizer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;locizer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;namespace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;messages&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// your namespace name added in locize&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;apiKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-api-key&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// used for handleMissing functionality, do not add your api-key in a production build&lt;/span&gt;
&lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;projectId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;your-locize-project-id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;apiKey&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// locizer.lng is the language detected in your browser.&lt;/span&gt;
  &lt;span class="na"&gt;fallbackLocale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// set fallback locale&lt;/span&gt;
  &lt;span class="c1"&gt;// If you need to specify other options, you can set other options&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// called from within setup hook in App.vue&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loadMessagesPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;namespace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setLocaleMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleMissing&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;referenceLng&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
  &lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;namespace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And use it in the component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Vue logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./assets/logo.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useI18n&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;loadMessagesPromise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleMissing&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/TranslationShowCase.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;// used in combination with Suspense.&lt;/span&gt;
  &lt;span class="c1"&gt;// useful when translations are not in-memory...&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;useI18n&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;setMissingHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;handleMissing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;loadMessagesPromise&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Avenir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;antialiased&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;osx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;grayscale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;c3e50&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, if you add a new key in your templates, &lt;code&gt;&amp;lt;h2&amp;gt;{{ $t("How are you?") }}&amp;lt;/h2&amp;gt;&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;welcome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;How are you?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="nx"&gt;keypath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;descr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;label&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;doc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cli.vuejs.org&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_blank&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;doc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/i18n-t&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{path:'end'}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;can&lt;/span&gt; &lt;span class="nx"&gt;also&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;written&lt;/span&gt; &lt;span class="nx"&gt;like&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;'end'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;hr&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale !== 'de'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;changeLanguage('de')&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;DE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale === 'de'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;DE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;|&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale !== 'en'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;changeLanguage('en')&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;EN&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale === 'en'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;EN&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TranslationShowCase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;changeLanguage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It gets automatically saved to locize:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dCj0ULIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/veoo6pcq7qwt1lg53y2f.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dCj0ULIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/veoo6pcq7qwt1lg53y2f.jpg" alt="save missing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lastly, with the help of the &lt;a href="https://docs.locize.com/whats-inside/auto-machine-translation"&gt;auto-machinetranslation workflow&lt;/a&gt;, new keys not only gets added to locize automatically, while developing the app, but are also automatically translated into the target languages using machine translation:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lACgu4gb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckafj57v362osxu850vk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lACgu4gb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckafj57v362osxu850vk.jpg" alt="machine translation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--92z1KZgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p3758w9edjuji10zacad.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--92z1KZgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p3758w9edjuji10zacad.jpg" alt="result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-theres-more"&gt;
  &lt;/a&gt;
  üëÄ but there's more... &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.locize.com/more/caching"&gt;Caching&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kJUDbeA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvg7kh84bt8zmu5hxhwq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJUDbeA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvg7kh84bt8zmu5hxhwq.jpg" alt="caching"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.locize.com/more/versioning#merging-versions"&gt;Merging versions&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AKfT1gaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tl63h2jryuyyk9f34tx2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AKfT1gaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tl63h2jryuyyk9f34tx2.jpg" alt="versioning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;üßë‚Äçüíª The code can be found &lt;a href="https://github.com/locize/locizer/tree/master/example/vue"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#congratulations"&gt;
  &lt;/a&gt;
  üéâü•≥ Congratulations üéäüéÅ &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;I hope you‚Äôve learned a few new things about &lt;a href="https://kazupon.github.io/vue-i18n/"&gt;Vue.js localization&lt;/a&gt; and &lt;a href="https://locize.com"&gt;modern localization workflows&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So if you want to take your i18n topic to the next level, it's worth to try &lt;a href="https://locize.com"&gt;locize&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  üëç
&lt;/h1&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>21 beginner JavaScript interview question you must know</title>
      <author>devdefinitive</author>
      <pubDate>Tue, 08 Jun 2021 04:47:11 +0000</pubDate>
      <link>https://dev.to/devdefinitive/21-beginner-javascript-interview-question-you-must-know-1fj6</link>
      <guid>https://dev.to/devdefinitive/21-beginner-javascript-interview-question-you-must-know-1fj6</guid>
      <description>&lt;p&gt;To construct a JavaScript programming vocation, applicants need to break the meeting. They are requested different JavaScript interview questions and replies. &lt;/p&gt;

&lt;p&gt;Following is a rundown of JavaScript interview questions and replies, which are probably going to be asked during the meeting. Competitors are probably going to be asked fundamental JavaScript talk with the interview to propel JS interview questions relying upon their experience and different variables. &lt;/p&gt;

&lt;p&gt;The underneath list covers all the JavaScript interview for freshers and JavaScript interview for proficient level applicants.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-is-the-difference-between-java-and-javascript"&gt;
  &lt;/a&gt;
  What is the difference between Java and JavaScript?
&lt;/h3&gt;

&lt;p&gt;Java is a static OOP language that deals with different stages. JavaScript is a powerful programming language that is utilized to make sites and applications dynamic. &lt;/p&gt;

&lt;p&gt;Java is an independent language‚Äîit enjoys its opportunity. JavaScript is somewhat more sincerely mutually dependent (however positively?), implying that it works with HTML and CSS on site pages to make the dynamic substance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-firstclass-function-in-javascript"&gt;
  &lt;/a&gt;
  What is the first-class function in JavaScript?
&lt;/h3&gt;

&lt;p&gt;In Javascript, functions are top of the line objects. The first-class function implies when works in that language are dealt with like some other variable. &lt;/p&gt;

&lt;p&gt;Learn in more detail -&amp;gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/First-class_Function"&gt;What is first Class function - MDN&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-closure-in-javascript"&gt;
  &lt;/a&gt;
  What is closure in JavaScript?
&lt;/h3&gt;

&lt;p&gt;A closure is a function that recalls its external factors and can get to them. In certain coding languages, that is unrealistic, or a function ought to be written extraordinarily to get it going. In JavaScript, all functions are normally terminations (there is just a single special case, to be shrouded in The "new Function" linguistic structure).&lt;/p&gt;

&lt;p&gt;Learn in more detail -&amp;gt; &lt;a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-closure-b2f0d2152b36"&gt;Closures in JS - Eric Elliot&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-high-order-function-in-javascript"&gt;
  &lt;/a&gt;
  What is high order function in JavaScript?
&lt;/h3&gt;

&lt;p&gt;Higher-order functions are functions that accept different functions as contentions or return functions as their outcomes. Accepting another function as contention is frequently alluded to as a callback work since it is gotten back to by the higher-request work. This is an idea that Javascript utilizes a great deal.&lt;/p&gt;

&lt;p&gt;Learn in Detail - &lt;a href="https://www.30secondsofcode.org/blog/s/javascript-higher-order-functions"&gt;High Order Functions - 30 Seconds of Code&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-hoisting"&gt;
  &lt;/a&gt;
  What is Hoisting
&lt;/h3&gt;

&lt;p&gt;Hoisting is a JavaScript component where factors(variables) and function announcements are moved to the highest point of their degree before code execution. This implies that regardless of where functions and factors(variables) are pronounced, they are moved to the highest point of their degree whether or not their extension is worldwide or nearby.&lt;/p&gt;

&lt;p&gt;Learn in detail -&amp;gt; &lt;a href="https://www.digitalocean.com/community/tutorials/understanding-hoisting-in-javascript"&gt;What is hoisting - DigitalOcean&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-isnan-function"&gt;
  &lt;/a&gt;
  What is isNaN function?
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;isNaN()&lt;/code&gt; work decides if a worth is an unlawful number (Not-a-Number). This function returns valid if the worth likens to NaN. Else it returns bogus. &lt;code&gt;isNaN()&lt;/code&gt; doesn't change the qualities over to a number, and won't return valid for any worth that isn't of the sort Number.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-classes-in-es6"&gt;
  &lt;/a&gt;
  What are classes in ES6
&lt;/h3&gt;

&lt;p&gt;There are two kinds of Class in ES6: parent class/superclass: The class reached out to make a new class are know as a parent class. kid/subclasses: The class are recently made are known as youngster or subclass. Subclass acquire every one of the properties from the parent class except constructor&lt;/p&gt;

&lt;p&gt;Learn about them in Detail -&amp;gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes"&gt;MDN Docs - Classes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-negative-infinity-in-javascript"&gt;
  &lt;/a&gt;
  What is negative infinity in JavaScript?
&lt;/h3&gt;

&lt;p&gt;The negative infinity in JavaScript is a consistent worth that is utilized to address a worth that is the most minimal accessible. This implies that no other number is lesser than this worth. It tends to be produced utilizing an independent function or by a math activity. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-callback-function"&gt;
  &lt;/a&gt;
  What is a callback function
&lt;/h3&gt;

&lt;p&gt;In JavaScript, a callback is a function passed into another function as a contention to be executed later. To track down every one of the odd numbers in the cluster, you can utilize the &lt;code&gt;filter()&lt;/code&gt; strategy for the Array object. The &lt;code&gt;filter()&lt;/code&gt; strategy makes another cluster with the components that finish the assessment executed by a function.&lt;/p&gt;

&lt;p&gt;Learn in detail -&amp;gt; &lt;a href="https://www.freecodecamp.org/news/javascript-callback-functions-what-are-callbacks-in-js-and-how-to-use-them/"&gt;Callback functions in JS&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-pure-function"&gt;
  &lt;/a&gt;
  What is a pure function?
&lt;/h3&gt;

&lt;p&gt;A module is only a document. One content is one module. That basic. &lt;/p&gt;

&lt;p&gt;Modules can stack one another and utilize unique mandates fare and import to exchange usefulness, call elements of one module from another: &lt;/p&gt;

&lt;p&gt;Read in detail -&amp;gt; &lt;a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976"&gt;Pure Functions - Eric Elliot&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-iife-in-javascript"&gt;
  &lt;/a&gt;
  What is IIFE in JavaScript?
&lt;/h3&gt;

&lt;p&gt;An  Immediately-invoked Function Expression  (IIFE) is an approach to execute works promptly when they are made. IIFEs are valuable since they don't dirty the worldwide item, and they are a straightforward method to detach factors statements.&lt;/p&gt;

&lt;p&gt;Learn in Detail -&amp;gt; &lt;a href="https://www.freecodecamp.org/news/iife-in-javascript-what/"&gt;IIFE - FreeCodeCamp&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-abcs-of-javascript"&gt;
  &lt;/a&gt;
  What are the ABCs of JavaScript?
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;apply()&lt;/code&gt;, &lt;code&gt;bind()&lt;/code&gt; and, &lt;code&gt;call()&lt;/code&gt; in JavaScript. &lt;/p&gt;

&lt;p&gt;Learn in Detail -&amp;gt; &lt;a href="https://dev.to/rahxuls/abc-of-javascript-50h3"&gt;ABC in JavaScript&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-do-we-need-callbacks"&gt;
  &lt;/a&gt;
  Why do we need callbacks?
&lt;/h3&gt;

&lt;p&gt;Callbacks ensure that a function won't run before an assignment is finished yet will pursue it right after the undertaking has finished. It assists us with creating offbeat JavaScript code and protects us from issues and mistakes.&lt;/p&gt;

&lt;p&gt;Learn in detail -&amp;gt; &lt;a href="https://www.freecodecamp.org/news/javascript-callback-functions-what-are-callbacks-in-js-and-how-to-use-them/"&gt;Callback functions in JS&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-do-you-get-a-syntax-error-in-javascript"&gt;
  &lt;/a&gt;
  When do you get a syntax error in JavaScript?
&lt;/h3&gt;

&lt;p&gt;The SyntaxError object addresses a blunder when attempting to decipher linguistically invalid code. It is tossed when the JavaScript motor experiences tokens or token request that doesn't adjust to the linguistic structure of the language when parsing code.&lt;/p&gt;

&lt;p&gt;Learn in Detail - &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError"&gt;Syntax Error - MDN&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-modules-in-javascript"&gt;
  &lt;/a&gt;
  What are modules in JavaScript?
&lt;/h3&gt;

&lt;p&gt;A module puts together a connected arrangement of JavaScript code. A module can contain factors and functions. A module is just a lump of JavaScript code written in a document. As a matter of course, variables and elements of a module are not accessible for use. Factors and functions inside a module ought to be sent out so they can be gotten to from inside different records. Modules in ES6 work just in exacting mode. This implies factors or functions pronounced in a module won't be available all around the world.&lt;/p&gt;

&lt;p&gt;Learn in more detail -&amp;gt; &lt;a href="https://www.freecodecamp.org/news/javascript-modules-a-beginner-s-guide-783f7d7a5fcc/"&gt;Modules in JS by freecodecamp&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-events"&gt;
  &lt;/a&gt;
  What are events?
&lt;/h3&gt;

&lt;p&gt;JavaScript's communication with HTML is taken care of through events that happen when the client or the program controls a page. At the point when the page loads, it is called an occasion. ... Occasions are a piece of the Document Object Model (DOM) and each HTML component contains a bunch of occasions that can trigger JavaScript Code.&lt;/p&gt;

&lt;p&gt;Learn in detail -&amp;gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events"&gt;Events - MDN&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-memoization-in-javascript"&gt;
  &lt;/a&gt;
  What is memoization in JavaScript?
&lt;/h3&gt;

&lt;p&gt;Memoization is a streamlining method that velocities up applications by putting away the consequences of costly functions calls and returning the stored result when similar sources of info are provided once more. &lt;/p&gt;

&lt;p&gt;Learn in Detail -&amp;gt; &lt;a href="https://scotch.io/tutorials/understanding-memoization-in-javascript"&gt;Memoization - Scotch&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-constructor-method-in-javascript"&gt;
  &lt;/a&gt;
  What is a constructor method in JavaScript?
&lt;/h3&gt;

&lt;p&gt;A JavaScript constructor strategy is an uncommon sort of technique that is utilized to instate and make an item. It is called when memory is allotted for an item. &lt;/p&gt;

&lt;p&gt;Learn in Detail -&amp;gt; &lt;a href="https://javascript.info/constructor-new"&gt;Constructor - JavaSacriptInfo&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-call-stack-in-javascript"&gt;
  &lt;/a&gt;
  What is Call Stack in JavaScript?
&lt;/h3&gt;

&lt;p&gt;A call stack is a component for a translator (like the JavaScript mediator in an internet browser) to monitor its place in a container that calls different functions ‚Äî which function is as of now being run and which functions are called from inside that function, and so on. &lt;/p&gt;

&lt;p&gt;Learnin detail -&amp;gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Call_stack"&gt;Call stack - MDN&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-currying-in-javascript"&gt;
  &lt;/a&gt;
  What is Currying in JavaScript?
&lt;/h3&gt;

&lt;p&gt;Currying is a strategy of assessing functions with different contentions, into a grouping of capacities with a single argument. In different words, when a function, rather than taking all contentions all at once, takes the first and return another function that requires the subsequent one and returns another function. &lt;/p&gt;

&lt;p&gt;Learn in detail -&amp;gt; &lt;a href="https://blog.bitsrc.io/understanding-currying-in-javascript-ceb2188c339"&gt;Currying - BitSrc&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-this-in-javascript"&gt;
  &lt;/a&gt;
  What is "this" in JavaScript?
&lt;/h3&gt;

&lt;p&gt;Each javascript work while executing has a reference to its present execution setting, called this. The execution set implies here is the way the functions is called.  To comprehend this catchphrase, just we need to know how, when and from where the functions are called, doesn't make any difference how and where functions are proclaimed or characterized.&lt;/p&gt;

&lt;p&gt;Learn in Detail -&amp;gt; &lt;a href="https://blog.bitsrc.io/what-is-this-in-javascript-3b03480514a7"&gt;this in JavaScript - BitSrc&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;So these were the 21 Basic JavaScript interview question I have faced commonly. There is one more list coming related to advanced JavaScript interview questions. I would add more questions in the future. So stay tuned and follow me. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>nest.js + TypeORM + PostgreSQL</title>
      <author>Rahul Kumar</author>
      <pubDate>Tue, 08 Jun 2021 04:30:53 +0000</pubDate>
      <link>https://dev.to/rahulku48837211/nest-js-typeorm-postgresql-310k</link>
      <guid>https://dev.to/rahulku48837211/nest-js-typeorm-postgresql-310k</guid>
      <description>&lt;h3&gt;
  &lt;a href="#agenda-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Agenda :&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Building a rest api using Nest.JS .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#backend-architecture-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Backend Architecture :&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rzM6d1Sw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ttobvwwzubdvz8kx8xdh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rzM6d1Sw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ttobvwwzubdvz8kx8xdh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#technologies-used"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Technologies used:&lt;/strong&gt;
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Node.js&lt;/strong&gt;    --- &lt;strong&gt;Platform&lt;/strong&gt; .&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;NestJS&lt;/strong&gt;     --- &lt;strong&gt;server&lt;/strong&gt; .&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TypeORM&lt;/strong&gt;    --- &lt;strong&gt;orm&lt;/strong&gt; .&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;PostgreSQL&lt;/strong&gt; --- &lt;strong&gt;database&lt;/strong&gt; .&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#what-is-nodejs-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Node.js :&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PL5JRGJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xqmcjh8b48rgdbnottw3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PL5JRGJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xqmcjh8b48rgdbnottw3.jpg" alt="Node js"&gt;&lt;/a&gt;&lt;br&gt;
NodeJS is a Javascript runtime(contains everything to run javascript) for building server side applications .&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-nestjs-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is NestJs :&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aeppe_wK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/1es3ne0caaid/3XE9gJHMZakYUy0gKAsQ2M/986b5ddd64ea0ff1a344cde15b442a40/nest-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aeppe_wK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/1es3ne0caaid/3XE9gJHMZakYUy0gKAsQ2M/986b5ddd64ea0ff1a344cde15b442a40/nest-logo.png" alt="Nest"&gt;&lt;/a&gt;&lt;br&gt;
Nest is a framework for building efficient and scalable NodeJs server side applications .&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-typeorm-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is TypeORM :&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;TypeORM is an object relational mapper which task is to basically generates objects using object oriented programming which maps to the database virtually .&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-postgresql-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is PostgreSQL :&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt; is an object relational database management system for building scalable and high availability applications .&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install @nestjs/cli package .and create a new project
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm i -g @nestjs/cli
$ nest new project-name 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#in-a-common-nestjs-project-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;In a common nestJS project :&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;main.ts contains the &lt;strong&gt;bootstraping&lt;/strong&gt; code .&lt;/li&gt;
&lt;li&gt;.spec file contains the testing files .&lt;/li&gt;
&lt;li&gt;nestjs usages module to organize the application structure .&lt;/li&gt;
&lt;li&gt;controller contains the routing rules for the application .&lt;/li&gt;
&lt;li&gt;service contains the business logic for the application .
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;$ npm run start&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl localhost:3000  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#set-up-database-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Set up Database :&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;psql&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;database&lt;/span&gt; &lt;span class="n"&gt;conduit&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;user&lt;/span&gt; &lt;span class="n"&gt;conduit&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="k"&gt;encrypted&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="n"&gt;conduit&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="k"&gt;grant&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; &lt;span class="k"&gt;privileges&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="k"&gt;database&lt;/span&gt; &lt;span class="n"&gt;conduit&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;conduit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;File structure :
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;src
|- app.controller.ts
|- app.controller.spec.ts
|- app.module.ts
|- app.service.ts
|- main.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-raw-connection-endraw-to-the-database-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Create a &lt;code&gt;connection&lt;/code&gt; to the database&lt;/strong&gt; .
&lt;/h3&gt;



&lt;p&gt;&lt;code&gt;$ touch app.dbconfig.ts&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;TypeOrmModuleOptions&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;typeorm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createTypeOrmProdConfig&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;TypeOrmModuleOptions&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;postgres&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;conduit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;conduit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;database&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;conduit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="na"&gt;entities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;**&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*.entity.{ts, js}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
    &lt;span class="na"&gt;synchronize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;advanced-console&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Next we have to create the &lt;code&gt;entities&lt;/code&gt; for our Database . And the individual entity to the entities array in the &lt;code&gt;createConnection&lt;/code&gt; function .
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;$ mkdir src/entities&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;$cd entities&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;$nano Article.ts&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Article&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;PrimaryColumn&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;

    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;

    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;nullable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;

    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#generate-module-service-controller-for-the-article-route-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Generate module, service, controller for the article route :&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nest g mo article module
nest g co article module
nest g s article module
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;&lt;code&gt;$ cd module/article&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;$ nano module.article.ts&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;imports : [Typeormmodue.forFeature([Article])]&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;navigate to the article service file .
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@InjectRepository(Article) private readonly articleRepo: Repository&amp;lt;Article&amp;gt;,

async getAllArticles(): Promise&amp;lt;Article[]&amp;gt; {
        return await this.articleRepo.find();
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;navigate to the article controller file .
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;constructor(private readonly articlesService: ArticlesService) {}
@Get()
    async getAllArticles(): Promise&amp;lt;Article[]&amp;gt; {
        return await this.articlesService.getAllArticles();
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then finally in the application root module .&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;imports :[TypeOrmModule.forroot([Article])]&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;$npm start&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Thank You For Reading üî•&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>node</category>
      <category>typescript</category>
      <category>postgres</category>
    </item>
    <item>
      <title>Feature Dev.to should have ü§î</title>
      <author>krishna kakade</author>
      <pubDate>Tue, 08 Jun 2021 04:27:10 +0000</pubDate>
      <link>https://dev.to/krishnakakade/feature-dev-to-should-have-5dnc</link>
      <guid>https://dev.to/krishnakakade/feature-dev-to-should-have-5dnc</guid>
      <description>&lt;p&gt;Hello there üòä &lt;br&gt;
Today i am going talk about one feature Dev.to also known as AKA Forem should have &lt;br&gt;
We all know dev.to is one of the most liked platform by developers community and also having more than half million users i think dev.to should one feature Introducing &lt;br&gt;
&lt;strong&gt;DevMeet&lt;/strong&gt; &lt;br&gt;
So that now question arises how it is going to work now we know most of the times we don't have partners for the hackathons personal projects and even though for the startup or business ideas we can create thing like fellow developers who is going to click on &lt;strong&gt;Meet&lt;/strong&gt; tab then we can get from the user dev account and then we can get details why you want to use &lt;strong&gt;DevMeet&lt;/strong&gt; and then there should be filters like in which category you want to chat with developers with audio/video and also screen-sharing option and if i click on for hackathons/devfriends we can get connected to the person according to there interest and also for filtering we can show limited filters in (i) section btw if i had a ipad i can draw this things quickly how this can work and where to put or not and more UI thing so like this we can implement this feature.&lt;br&gt;
and also with this feature the engagement of the users will also increase on devto and also in DevMeet we can show ads if dev wants generate revenue from the DevMeet&lt;br&gt;&lt;br&gt;
What do you think &lt;a class="mentioned-user" href="https://dev.to/ben"&gt;@ben&lt;/a&gt;
 / &lt;a class="mentioned-user" href="https://dev.to/jess"&gt;@jess&lt;/a&gt;
 / &lt;a class="mentioned-user" href="https://dev.to/peter"&gt;@peter&lt;/a&gt;
 &lt;br&gt;
if anyone is having other ideas you can discuss in the comment section welcome have a great week ahead :)&lt;br&gt;
bye if your doing good then this gify is for you &lt;a href="https://i.giphy.com/media/l1IYfpEF2Tb84asus/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l1IYfpEF2Tb84asus/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is opensource but still some rights are reserved :)&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>What Makes a Great Developer? - Opinion</title>
      <author>Krowser Web Services </author>
      <pubDate>Tue, 08 Jun 2021 04:06:28 +0000</pubDate>
      <link>https://dev.to/krowser/what-makes-a-great-developer-opinion-418d</link>
      <guid>https://dev.to/krowser/what-makes-a-great-developer-opinion-418d</guid>
      <description>&lt;p&gt;This question has come up over and over again. From putting together the core team for a startup company to recruiting intern candidates for a multi-million dollar firm, patterns emerge and recurring data points are evident once you look closely enough.&lt;/p&gt;

&lt;p&gt;Let‚Äôs take a look at the Top 10 characteristics of a great software engineer. Sure, top notch technical chops are a prerequisite, but beware, some of these items may surprise you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Passion for technology.&lt;/strong&gt; Ok, so no controversy here. A great software engineer is always learning, investigating new trends, tools, and better ways to solve problems. A "great software" engineer I worked with shortly used to joke that he was pretty much throwing out what he‚Äôd learned every 6 months or so. At the risk of dating myself terribly, during one 6 month stretch he used C, Smalltalk, PowerBuilder, SQL Server, and an Object Database in developing internal software solutions for a real estate investment and management firm in Chicago.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Craftsmanship.&lt;/strong&gt; Great software engineers sweat the details and build solutions that are meant to last. There is an innate elegance to their solutions that when analyzed after the fact seems almost obvious in their simplicity. Invariably I find myself thinking, ‚ÄúIs that all there is to this?‚Äù and marvel at the succinctness and crispness of the code. Ditto for durability and extendibility - well-crafted code lasts for years and accommodates additional features and changes without significant rewrites or increased brittleness.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The ability to break a large, complex problem into a number of solvable small problems.&lt;/strong&gt; I‚Äôve been fortunate to have worked with a number of these types of individuals who can look at a Gordian Knot of a problem and find a path to a solution by decomposing it into discrete elements and addressing each of those elements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pragmatic.&lt;/strong&gt; I think this characteristic is one of the more controversial on this list. Or maybe ‚Äúcontroversial‚Äù is the wrong word. Perhaps ‚Äúoverlooked‚Äù is a better descriptor. Great software engineers strike the delicate balance between their drive for perfection and practicality. They know when to compromise and implement something less elegant that their inner voice is telling them to implement. Nowhere is this trait more important than in a startup company. Time to market is critical and there are a number of plane crash metaphors (e.g. not enough runway, clipping the treetops) that underscore the fact that you can‚Äôt spend 2 weeks on a kick-ass sorting algorithm.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Methodical thought process.&lt;/strong&gt; Abstract thinking is so in-grained in great software engineers that I don‚Äôt think they even realize it sets them apart from most people. Applying the scientific method, thinking through all the possible scenarios of an algorithm, challenging assumptions, and asking probing questions are all key attributes of the thought process of great software engineers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add value at every step.&lt;/strong&gt; Great software engineers immerse themselves in the domain so they always know what problem the project is trying to solve and who is going to be using the software. They use a specification as a roadmap, not a bible, frequently ask questions, and are not afraid to pull the emergency cord to stop a project from going off the rails.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make everyone on the team better.&lt;/strong&gt; Whether it is transferring knowledge, mentoring, tool building, or simply taking time to listen to a colleague talk through a coding problem, great software engineers find ways to improve the skills and knowledge of other team members. I‚Äôve been fortunate to be with people who have made me better simply by seeing how they approach analyzing problems or picking up tips and tricks in their coding style.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skeptical.&lt;/strong&gt; Great software engineers never take anything they are told at face value. Reliable data drives decisions for these folks; they like logical conclusions. Great software engineers look beyond fixing the bug that is in front of them and determine if it is a symptom of some larger problem. Great software engineers foster an environment of healthy disagreement, often taking the ‚Äúdevil‚Äôs advocate‚Äù position to challenge a colleague‚Äôs design for the betterment of the product while not making it a personal attack on the person‚Äôs attitude or competence.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reasonable.&lt;/strong&gt; Being able to change his/her mind in the face of solid evidence is a key characteristic of a great software engineer. This may seem a no-brainer, but I have known scores of software engineers who get trapped in their own dogma and have such a fierce pride of ownership that it blinds them to alternative solutions that are better in the long run than the solution they have implemented. Great software engineers have a built-in humility, respecting others‚Äô opinions and knowing that their own way is not always the best way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Good Communicators.&lt;/strong&gt; What? I need someone that can bang out 2,000 lines of code a day! Not so. Gone is the stereotypical Mountain Dew-fueled loner walled off from other team members. Being able to write and speak clearly are of paramount importance to great software engineers.  They must be able to synthesize and explain complex information to non-technical people as well as articulate a design to technical team members. On the flip side, they must be great listeners, picking up on nuances or uncertainties in what they are told and drilling down with questions to clarify the problem that needs to be solved.&lt;/p&gt;

&lt;p&gt;Most companies function just fine with good software engineers, especially if the domain is well-defined and the problems are not unique. The process may take longer but they‚Äôll get there. If, on the other hand, you are starting a business, you don‚Äôt know if something can be built, money is tight, and you may need to pivot sharply, you need great software engineers. I can count on one hand, excluding my thumb, the number of times with a room full of superbly talented people we‚Äôve had to say, ‚ÄúThat can‚Äôt be done.‚Äù&lt;/p&gt;

</description>
      <category>career</category>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>python</category>
    </item>
    <item>
      <title>Learn to make a Responsive Highlighted Navigation Bar | #code #htmlcss | Coding Samrats</title>
      <author>Coding Samrats</author>
      <pubDate>Tue, 08 Jun 2021 04:00:13 +0000</pubDate>
      <link>https://dev.to/coding_samrats/learn-to-make-a-responsive-highlighted-navigation-bar-code-htmlcss-coding-samrats-2069</link>
      <guid>https://dev.to/coding_samrats/learn-to-make-a-responsive-highlighted-navigation-bar-code-htmlcss-coding-samrats-2069</guid>
      <description>&lt;p&gt;In this post I will teach you how to make a Highlighted Navbar using just HTML and CSS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=fOKwAXwrEDw&amp;amp;t"&gt;For Video tutorial click here&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fOKwAXwrEDw"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt;Basically we will use ul tag , Flex property and basic hover feature , color and font features&lt;/p&gt;

&lt;p&gt;First, Let's write the HTML code ,&lt;br&gt;
how in most of the navbars we use 'ul' tag here also we do the same.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Highlighted Navabar&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt;  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"tab"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"active"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"highlightednav.html"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"cards.html"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Contact&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it's CSS time :)&lt;/p&gt;

&lt;p&gt;Let's now import a Font which we will use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt; &lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css2?family=Ubuntu&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will center the navbar using flex and padding , also make the list-style none&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt; &lt;span class="nc"&gt;.tab&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;list-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will make the general changes to the 'links'&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;     &lt;span class="nc"&gt;.link&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now lets add color üòÅ to the link text and edit its font features :) (add this to '.link' itself&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;        &lt;span class="nt"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#000&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nt"&gt;font-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;35&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nt"&gt;font-family&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Ubuntu'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;sans-serif&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Time to add 'hover' effect to links (üòë just need to change the color)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt; &lt;span class="nc"&gt;.link&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#FF4D50&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will edit "#active" id so that in particular link will highlight&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt; &lt;span class="nf"&gt;#active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f35659&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#FF4D50&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will make it responsive , we will reduce font-size, padding and display:block; üíª üì±&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;800px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;.tab&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.link&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.6rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All the source code is BELOW üîΩ&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/codingsamrats/embed/VwpdpvY?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Support us by liking ‚ù§ this post and&lt;br&gt;
 Follow us on other Social Media Platforms üîΩ&lt;br&gt;
&lt;a href="https://linktr.ee/codingsamrats"&gt;Support Us&lt;/a&gt;&lt;br&gt;
Just follow it's free üòé&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>webdev</category>
      <category>writing</category>
    </item>
    <item>
      <title>What can the HTTP Archive tell us about Largest Contentful Paint?</title>
      <author>Paul Calvano</author>
      <pubDate>Tue, 08 Jun 2021 03:59:31 +0000</pubDate>
      <link>https://dev.to/httparchive/what-can-the-http-archive-tell-us-about-largest-contentful-paint-f0p</link>
      <guid>https://dev.to/httparchive/what-can-the-http-archive-tell-us-about-largest-contentful-paint-f0p</guid>
      <description>&lt;p&gt;&lt;a href="https://web.dev/lcp/"&gt;Largest Contentful Paint (LCP)&lt;/a&gt; is an important metric that measures when the largest element in the browser‚Äôs viewport becomes visible. This could be an image, a background image, a poster image for a video, or even a block of text. The metric is measured with the &lt;a href="https://wicg.github.io/largest-contentful-paint/"&gt;Largest Contentful Paint API&lt;/a&gt;, which is &lt;a href="https://caniuse.com/?search=largestcontentfulpaint"&gt;supported&lt;/a&gt; in Chromium browsers. Optimizing for this metric is critical to end user experience, since it affects their ability to visualize your content.&lt;/p&gt;

&lt;p&gt;Google has promoted this metric as one of the three &lt;a href="https://web.dev/vitals/"&gt;"Core Web Vitals"&lt;/a&gt; that affect user experience on the web. It is also slated to become a &lt;a href="https://developers.google.com/search/blog/2021/04/more-details-page-experience"&gt;search ranking signal over the next few weeks&lt;/a&gt;, which has created a lot of awareness about it. The suggested target for a good Largest Contentful Paint is less than 2.5 seconds for at least 75% of page loads.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p9iwkA6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p9iwkA6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image9.jpg" alt="Largest Contentful Paint Overview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Source: &lt;a href="https://web.dev/lcp/"&gt;&lt;/a&gt;&lt;a href="https://web.dev/lcp/"&gt;https://web.dev/lcp/&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Some of the recent posts on &lt;a href="https://wpostats.com/tags/core%20web%20vitals/"&gt;WPOStats&lt;/a&gt; feature interesting case studies about this metric.  For example, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Google's &lt;a href="https://blog.chromium.org/2020/05/the-science-behind-web-vitals.html"&gt;research&lt;/a&gt; found that when Core Web Vitals are met, users are 24% less likely to abandon a page before it finishes loading.&lt;/li&gt;
&lt;li&gt;  Vodafone improved LCP by 31% and saw an 8% increase in sales.&lt;/li&gt;
&lt;li&gt;  NDTV improved their LCP by 55% and saw a 50% reduction in bounce rate.&lt;/li&gt;
&lt;li&gt;  Tokopedia improved their LCP by 55% and saw a 23% increase in session duration.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Identifying the Largest Contentful Paint Element&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The name of this metric implies that size is used as a proxy for importance. Because of this, you may be wondering specifically which image or text triggered it as well as the percentage of the viewport it consumed. There are a few ways to examine this:&lt;/p&gt;

&lt;p&gt;One way to visualize the Largest Contentful Paint is to look at a &lt;a href="https://webpagetest.org/"&gt;WebPageTest&lt;/a&gt; filmstrip. You‚Äôll be able to see when visual changes occurred (yellow outline) as well as when the Largest Contentful Paint event occurred (red outline).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dhdG7Fu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dhdG7Fu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image7.jpg" alt="WebPageTest Filmstrip showing LCP Element"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In Chrome DevTools, you can also click on the LCP indicator in the ‚ÄúPerformance‚Äù tab to examine the Largest Contentful Paint element in your browser. Using this method you can see and inspect the exact element (image, text, etc) that triggered it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D5AOIs-F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image11.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D5AOIs-F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image11.gif" alt="Chrome DevTools Performance Tab"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse also has an audit that identifies the Largest Contentful Paint element. If you examine the screenshot below you‚Äôll notice that there is a yellow box around the largest element, as well as an HTML snippet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2HttNuVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2HttNuVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image5.jpg" alt="Lighthouse LCP Element"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How Large is the Largest Contentful Paint?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://httparchive.org/"&gt;HTTP Archive&lt;/a&gt; runs Lighthouse audits for approximately 7.2 million websites every month. In the May 2021 dataset, Lighthouse was able to identify an LCP element in 97.35% of the tests. Since we have the ability to query all of these Lighthouse test results, we can analyze the result of the LCP audits and get more insight into what drives this metric across the web. &lt;/p&gt;

&lt;p&gt;Using the same boundaries that Lighthouse uses to draw the rectangle around the LCP element, it‚Äôs possible to calculate the area of it. In the above example, the product of the LCP image‚Äôs height (191) and width (340) was 64,940 pixels. Since the Lighthouse test was run with an emulated &lt;a href="https://almanac.httparchive.org/en/2020/methodology#webpagetest"&gt;Moto G4 user agent&lt;/a&gt; with a screen size of 640x360, we can also calculate that this particular LCP image took up 28% of the viewport.&lt;/p&gt;

&lt;p&gt;The graph below shows the cumulative distribution of the LCP element as a percentage of screen size. The median LCP element takes up 31% of the screen size! At the 75th percentile the LCP element is nearly twice as large, taking up 59% of the screen size. Additionally 10.6% of sites actually had an LCP element that exceeded the viewport (which is why the y axis doesn‚Äôt reach 100%).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QEIsGbkp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image10.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QEIsGbkp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image10.jpg" alt="Distribution of LCP Element Size as a Percent of Screen Size"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The graph below illustrates the same data in a histogram. From this we can see that 4.03% of sites (285,751) had a LCP element that took up 0 pixels. Upon further inspection, the 0 pixel elements appear to have been used in carousels, so by the time the audit completed the LCP element slid out of the viewport.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0U5i9i2n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0U5i9i2n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image3.jpg" alt="Histogram of LCP Element Size as a Percent of Screen Size"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Node Paths of LCP Elements&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another interesting aspect of the Largest Contentful Paint audit is the nodePath of the element, which shows you where in the DOM this element was. In the example we looked at earlier, the nodePath was:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1,HTML,1,BODY,8,DIV,2,SECTION,1,DIV,0,DIV,0,DIV,0,UL,0,LI,0,ARTICLE,1,DIV,0,DIV,0,A,0,IMG
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we look at the last element in the node path, we can get some insight into the type of element that triggered the Largest Contentful Paint. The most common node that triggered the Largest Contentful Paint was &amp;lt;IMG&amp;gt;, which accounted for 42% of all sites.   Next was &amp;lt;DIV&amp;gt; at 27% (which could include text or images). The &amp;lt;H1&amp;gt; through &amp;lt;H5&amp;gt; header elements accounted for 7.18% of all Largest Contentful Paints.  &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;LCP Node (last element in path)
   &lt;/td&gt;
   &lt;td&gt;Number of Sites
   &lt;/td&gt;
   &lt;td&gt;Percent of Sites
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;IMG
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
3067354&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
42.12%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;DIV
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
1981416&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
27.21%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;P
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
766977&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
10.53%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;H1
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
291091&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
4.00%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
192498&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
2.64%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;SECTION
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
182267&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
2.50%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;H2
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
144534&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
1.98%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;A
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
107501&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
1.48%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;SPAN
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
85245&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
1.17%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;HEADER
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
67762&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.93%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;LI
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
64212&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.88%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;H3
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
60679&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.83%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;RS-SBG
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
51623&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.71%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;TD
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
48470&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.67%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;H4
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
19039&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.26%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;VIDEO
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
15649&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.21%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;ARTICLE
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
12860&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.18%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;FIGURE
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
9208&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.13%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;BODY
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
8859&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.12%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;image
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
8077&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.11%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;CENTER
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
7960&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.11%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;The &amp;lt;VIDEO&amp;gt; element only accounted for 0.21% of sites. According to the Web Almanac, &lt;a href="https://almanac.httparchive.org/en/2020/media#videos"&gt;the &amp;lt;video&amp;gt; element was used on 0.49% of mobile websites&lt;/a&gt; - so from this we can estimate that half of sites loading videos are triggering LCP with video poster images.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Image Weight for the LCP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the Lighthouse audits looks for opportunities to preload the Largest Contentful Paint element, and estimates the potential savings in performance. This audit also identifies the URL for the LCP element - which can give us some insights into what type of images are being loaded as a LCP element. In the HTTP Archive data, only 67% of the Lighthouse tests were able to identify a URL for an LCP element. Based on this, we can infer that text nodes are used for the LCP on approximately 33% of sites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AOY4RHI---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AOY4RHI---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image8.jpg" alt="Lighthouse Preload LCP Element Recommendation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The graph below shows the distribution of sizes for the image element that was associated with the Largest Contentful Paint. The median LCP element size was 80KB. At the 90th percentile, the LCP element size was 512KB.   If you have a large LCP image then you should consider optimizing it before you attempt to follow the Lighthouse preload recommendation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WfytbM_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image12.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WfytbM_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image12.jpg" alt="Distribution of LCP Element Size"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Additionally, 70% of the LCP element images were JPEG and 25% were PNG.  Only 3% of sites served a webp as their LCP element.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;format
   &lt;/td&gt;
   &lt;td&gt;sites
   &lt;/td&gt;
   &lt;td&gt;% of Sites
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;jpg
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
3161991&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
69.37%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;png
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
1122585&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
24.63%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;webp
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
141441&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
3.10%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;gif
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
84829&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
1.86%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;svg
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
34123&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.75%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Other
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
13272&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
0.29%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;When we look at the LCP element as a percentage of page weight, we can see that the median LCP element is 4.17% of the total page weight. At the higher percentiles, the LCP elements are larger and also a larger percentage of page weight.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OTsF6qkG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OTsF6qkG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image1.jpg" alt="LCP Element as a Percent of Page Weight"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;percentile
   &lt;/td&gt;
   &lt;td&gt;ImageRequests
   &lt;/td&gt;
   &lt;td&gt;ImageKB
   &lt;/td&gt;
   &lt;td&gt;TotalKB
   &lt;/td&gt;
   &lt;td&gt;LCP as a % of Page Weight
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;p25
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
15&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
422&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
1,138&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
3.01%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;p50
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
26&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
1,142&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
2,185&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
4.17%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;p75
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
45&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
2,692&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
4,108&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
5.58%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;p95
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
103&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
8,008&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
10,036&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
8.42%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Since images account for 52% of the median page weight (for the sites that have a LCP image element), we can infer that at the median 8% of page weight is used to render content to 31% of the screen. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How does this change based on Site Popularity?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The HTTP Archive now contains rank groupings, obtained from the Chrome User Experience Report.   This can enable us to segment this analysis based on the popularity of sites.  The rank grouping indicator buckets sites into the top 1K, 10K, 100K, 1 million and 10 million. &lt;/p&gt;

&lt;p&gt;When we look at the Largest Contentful Paint image size based on popularity, it‚Äôs interesting to note that the most popular sites tend to be serving smaller images for the LCP element. While there may be numerous reasons for this, I suspect that the more popular sites are investing in image optimization solutions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J53PqiWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J53PqiWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image2.jpg" alt="LCP Image Size by Site Popularity"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Page weight follows the same pattern, with the least popular websites having some of the largest page weights. If we look at the LCP element based on the percentage of page weight, you can see that within the top 100K sites the ratios are very close. In the less popular sites, the LCP element tends to be a much greater percentage of page weight.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tr&gt;
   &lt;td colspan="5"&gt;
&lt;strong&gt;Largest Contentful Paint Image as a Percentage of Page Weight&lt;/strong&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;
&lt;strong&gt;rank&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;
&lt;strong&gt;p25&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;
&lt;strong&gt;p50&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;
&lt;strong&gt;p75&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;
&lt;strong&gt;p95&lt;/strong&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Top 1k
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
1.61%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
2.12%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
2.85%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
5.67%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Top 10k
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
1.76%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
2.27%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
3.00%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
4.96%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Top 100k
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
2.07%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
2.87%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
3.77%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
5.78%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Top 1 million
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
2.53%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
3.49%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
4.60%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
6.95%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Top 10 million
   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
3.11%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
4.30%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
5.75%&lt;/p&gt;

   &lt;/td&gt;
   &lt;td&gt;
&lt;p&gt;
8.65%&lt;/p&gt;

   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;We can also make some interesting observations about how popular sites are optimizing their LCP assets. Looking at the various image formats, JPG images are the most common LCP element. Some other formats such as PNG, WebP, GIF and SVG are used more frequently in the more popular sites. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vHNc2LPS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vHNc2LPS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paulcalvano.com/assets/img/blog/lcp-httparchive/image6.jpg" alt="Largest Contentful Paint Element Format by Rank"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Largest Contentful Paint is an important metric that helps illustrate when a page‚Äôs most significant content is rendered to the screen. In reviewing the HTTP Archive data, we can see that this area represents between 30% and 60% of a mobile viewport for a majority of sites.  &lt;/p&gt;

&lt;p&gt;There are a shocking number of sites that have a LCP element that consumes a large percentage of the viewport and are delivered as large unoptimized images. Site owners should evaluate both what is triggering the Largest Contentful Paint as well as how it is loaded. Optimizing for the Largest Contentful Paint will ensure that the browser has the opportunity to load and render this content as quickly as possible.&lt;/p&gt;

&lt;p&gt;If you are interested in seeing some of the SQL queries and raw data used in this analysis, I‚Äôve created a post with all the details in the &lt;a href="https://discuss.httparchive.org/t/analyzing-largest-contentful-paint-stats-via-lighthouse-audits/2166"&gt;HTTP Archive discussion forums&lt;/a&gt;. You can also see all the data used for these graphs in this &lt;a href="https://docs.google.com/spreadsheets/d/1fI_16nby3Yn1LHxWVd4QRyOuPqqMLmBvBU31l5kGF-8/edit?usp=sharing"&gt;Google Sheet&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Originally posted at &lt;a href="https://paulcalvano.com/2021-06-07-lcp-httparchive/"&gt;https://paulcalvano.com/2021-06-07-lcp-httparchive/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webperf</category>
      <category>webdev</category>
    </item>
    <item>
      <title>useState without React</title>
      <author>Kiran Mantha</author>
      <pubDate>Tue, 08 Jun 2021 03:50:18 +0000</pubDate>
      <link>https://dev.to/kiranmantha/usestate-without-react-2c7i</link>
      <guid>https://dev.to/kiranmantha/usestate-without-react-2c7i</guid>
      <description>&lt;p&gt;useState in react is a wonderful hook which is used to create an initial state and a handler to update it. But is there any way to mimic the same behaviour without using react at all??&lt;/p&gt;

&lt;p&gt;let‚Äôs try..&lt;/p&gt;

&lt;p&gt;From react, the useState returns an array which holds state and a handler. lets create a basic function for this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function useState(obj) {
let initialState = obj;
const reducer = fn =&amp;gt; {}
return [initialState, reducer];
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [state, handler] = useState({a: 1, b: 2});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yayyy we done it. Wait what ‚ùóÔ∏è my handler is not updating the state. hmmm lets tinker the reducer in useState function. The reducer may accept a function with previous state as argument or it may accept an object. let‚Äôs do it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const isFunction = value =&amp;gt; typeof value === 'function';
const reducer = fn =&amp;gt; {
let newState;
if (isFunction(fn)) {
newState = fn(initialState);
} else {
newState = fn;
}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;hufff what are you doing up there?? well we created a helper function &lt;code&gt;isFunction&lt;/code&gt; to check the argument is a function or not. If it is a function we‚Äôre passing inital state to it and assign the function value to &lt;code&gt;newState&lt;/code&gt; property. If the argument is not a function then we directly assign it to &lt;code&gt;newState&lt;/code&gt; property.&lt;/p&gt;

&lt;p&gt;üòç great explanation results please&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;handler((prevState) =&amp;gt; ({...prevState, b:3}))
console.log('modified state: ', state)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üòæ boring where are the results? üòï what are we missing?? ahhh we‚Äôre getting new state but not assigning it to initial state in reducer. let‚Äôs do it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const reducer = fn =&amp;gt; {
let newState;
if (isFunction(fn)) {
newState = fn(initialState);
} else {
newState = fn;
}
Object.assign(initialState, newState);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;handler((prevState) =&amp;gt; ({...prevState, b:3}))
console.log('modified state: ', state)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üòç lovely. Finally we did it. lets see the entire function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const isFunction = value =&amp;gt; typeof value === 'function';
function useState(obj) {
let initialState = obj;
const reducer = fn =&amp;gt; {
let newState;
if (isFunction(fn)) {
newState = fn(initialState);
} else {
newState = fn;
}
Object.assign(initialState, newState);
};
return [initialState, reducer];
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That‚Äôs it. we finally managed to re-create useState hook without react. But there is one catch in above implementation. It only work for objects üòè. But not a bad start right.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed this article. Feel free to improvise it and let me know in comments.&lt;/p&gt;

&lt;p&gt;Thankyou üëã&lt;/p&gt;

</description>
      <category>react</category>
      <category>usestate</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Fre Offscreen rendering: The fastest vdom algorithm</title>
      <author>Yisar</author>
      <pubDate>Tue, 08 Jun 2021 03:24:53 +0000</pubDate>
      <link>https://dev.to/132/fre-offscreen-rendering-the-fastest-vdom-algorithm-bfn</link>
      <guid>https://dev.to/132/fre-offscreen-rendering-the-fastest-vdom-algorithm-bfn</guid>
      <description>&lt;p&gt;In the past, I wrote a front-end framework named fre in school, which uses the data structure of fiber linked list. &lt;/p&gt;

&lt;p&gt;In fre v1, the biggest breakthrough is &lt;code&gt;Time slicing&lt;/code&gt;. It can greatly improve the response performance.&lt;/p&gt;

&lt;p&gt;Now that fre2 is released, I've made a breakthrough again. &lt;/p&gt;

&lt;p&gt;It is called &lt;code&gt;Offscreen rendering&lt;/code&gt;. It operates DOM in memory and draws them to the screen once at the last time.&lt;/p&gt;

&lt;p&gt;In the actual benchmark test, Fre is the fastest, it broke the rules of the game.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RzVhJBtw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l0avbvvhe6f1ykz8lrf5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RzVhJBtw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l0avbvvhe6f1ykz8lrf5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the past, we always thought that frameworks with vdom could not be faster than vanilla JS, while svelte's idea could be close to the performance of vanilla JS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/yisar/fre/blob/master/demo/src/benchmark.tsx"&gt;https://github.com/yisar/fre/blob/master/demo/src/benchmark.tsx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fre with off-screen rendering breaks this fact. I'm proud to say that fre is the fastest vdom-based framework, and it's only 400 lines, the smallest size.&lt;/p&gt;

&lt;p&gt;It is worth mentioning that this is a highly optimized data structure and core algorithm. &lt;/p&gt;

&lt;p&gt;And it does not conflict with time slicing and does not depend on the 'DocumentFragment' API.&lt;/p&gt;

&lt;p&gt;In fact, similar optimizations always exist in IOS or OpenGL. It's not easy for web to do this, so fre is the first framework to implement it.&lt;/p&gt;

&lt;p&gt;I don't want to introduce too many implementation details of off-screen rendering. If you are interested in this, you can reply to it or read the source code of fre.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/yisar/fre"&gt;https://github.com/yisar/fre&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I really hope to get your feedback, because I am a Chinese, usually in school or company, no one can discuss these with me, I can only study alone.&lt;/p&gt;

&lt;p&gt;Thank you very much!&lt;/p&gt;

</description>
      <category>react</category>
      <category>vue</category>
      <category>fre</category>
      <category>preact</category>
    </item>
  </channel>
</rss>
