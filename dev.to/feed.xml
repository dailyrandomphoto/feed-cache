<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Another reason why developers leave their jobs: to escape from a bad codebase</title>
      <author>Alex Omeyer</author>
      <pubDate>Tue, 26 Oct 2021 08:43:43 +0000</pubDate>
      <link>https://dev.to/alexomeyer/another-reason-why-developers-leave-their-jobs-to-escape-from-a-bad-codebase-2324</link>
      <guid>https://dev.to/alexomeyer/another-reason-why-developers-leave-their-jobs-to-escape-from-a-bad-codebase-2324</guid>
      <description>&lt;p&gt;Recently, we have surveyed 200+ Software Engineers from different industries to learn how codebase health impacts Engineering hiring and retention.&lt;/p&gt;

&lt;p&gt;In this article, I’ll share some of the key stats from the survey, why investing in a codebase is crucial for businesses, and questions you can ask on the interview as an Engineer to learn about the company’s codebase health.&lt;/p&gt;

&lt;p&gt;You can download &lt;a href="https://www.stepsize.com/how-codebase-health-impacts-hiring-and-retention-2021-report"&gt;the full report here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is what we found out:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;51% of Engineers left or considered leaving a job because of technical debt.&lt;/li&gt;
&lt;li&gt;82% believe that lack of proper development practices affects their job satisfaction.&lt;/li&gt;
&lt;li&gt;62% consider code quality as an important factor when choosing a new job.&lt;/li&gt;
&lt;li&gt;For 21% of engineers, excessive amounts of technical debt have been the number one reason for changing a job.&lt;/li&gt;
&lt;li&gt;Both junior and senior developers equally consider codebase health to be an important factor when choosing a new job.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Today, hiring and retaining developers is one of the biggest challenges for tech companies. And while recruiters, hiring managers, and leaders are focusing on attracting new tech talent, they might be ignoring one of the biggest reasons they are losing them in the first place — codebase health.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technical-debt-leads-to-employee-churn"&gt;
  &lt;/a&gt;
  Technical debt leads to employee churn
&lt;/h2&gt;

&lt;p&gt;More than half of the Engineers (51%) have left a company or considered leaving a company due to large amounts of technical debt, and 20% of Engineers say that technical debt is the primary reason for them to leave the company.&lt;/p&gt;

&lt;p&gt;As discovered in &lt;a href="https://www.stepsize.com/report"&gt;The State of Technical Debt 2021 Report&lt;/a&gt;, technical debt has a huge impact on developer team morale, causing frustration and hindering innovation.&lt;/p&gt;

&lt;p&gt;Given how much it costs to hire new engineers, companies need to keep their staff turnover as low as possible. And the best way to do that is to carefully manage technical debt to maintain a healthy codebase.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-engineers-care-about-when-looking-for-a-new-role"&gt;
  &lt;/a&gt;
  What do Engineers care about when looking for a new role?
&lt;/h2&gt;

&lt;p&gt;Salary, technical challenges, and remote work opportunities are the 3 most important factors that Engineers pay attention to during their interview process.&lt;/p&gt;

&lt;p&gt;Compensation and workplace flexibility is at the top of the list for engineers when they’re looking for a new job. But 62% admit that they also consider code quality as an important factor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aZx3nwQE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2bpo27uym542dgdx3kv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aZx3nwQE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2bpo27uym542dgdx3kv.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code health or code quality refers to the characteristics of the code, such as clean, consistent, easy to understand, testable. Engineers often feel pressure to sacrifice code quality to meet deadlines and ship features fast which leads to frustration and decreases team morale.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Code quality definition is very unique for each engineering team and product. However, every engineer wants to write code that is scalable, performant, reliable, and most of all easy to maintain for future engineers,” says Shamma Pathan, Senior Software Engineer at LinkedIn.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#10-questions-engineers-ask-to-get-a-gauge-of-your-codebase-health"&gt;
  &lt;/a&gt;
  10 questions engineers ask to get a gauge of your codebase health
&lt;/h2&gt;

&lt;p&gt;Unlike salary and remote work opportunities, understanding the state of the codebase and software development practices can be challenging.&lt;/p&gt;

&lt;p&gt;Engineers suggest asking the following questions during the interview process:&lt;/p&gt;

&lt;p&gt;• What are the complexity metrics, defect metrics, and coding standards of the codebase?&lt;br&gt;
What does the workflow before deployment look like?&lt;br&gt;
• Do all projects for each tech stack have consistent and identical CI/CD pipelines?&lt;br&gt;
• How is refactoring built into your development process?&lt;br&gt;
What does the code review process look like?&lt;br&gt;
• Do you dedicate time to fixing technical debt?&lt;br&gt;
• How do you balance building new functionality and resolving technical debt?&lt;br&gt;
• How much time does the team spend on refactoring?&lt;br&gt;
• What processes are set up to ensure the company uses all the modern/latest stack?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#job-satisfaction"&gt;
  &lt;/a&gt;
  Job satisfaction
&lt;/h2&gt;

&lt;p&gt;When it comes to the job itself, 82% of Engineers admit that lack of proper development practices plays a crucial role in their job satisfaction.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“The mess slows developers down and sometimes even prevents them from doing their actual job. Technical debt can make it difficult to be proud of the work you’re doing, as a lot of time is lost dealing with annoying obstacles,” says Maarten Dalmijn is the head of product at Rodeo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tM65uXZJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tq2533zdvo4ozx8vwuyz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tM65uXZJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tq2533zdvo4ozx8vwuyz.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The right way to fight technical debt is to talk about codebase-related issues across the whole company so that everyone can understand why it’s vital to manage it carefully.&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>programming</category>
      <category>career</category>
      <category>news</category>
    </item>
    <item>
      <title>How to make a Glassorphism Calculator</title>
      <author>Codeflix</author>
      <pubDate>Tue, 26 Oct 2021 08:30:15 +0000</pubDate>
      <link>https://dev.to/codeflix/how-to-make-a-glassorphism-calculator-dhk</link>
      <guid>https://dev.to/codeflix/how-to-make-a-glassorphism-calculator-dhk</guid>
      <description>&lt;p&gt;Hello Readers, welcome to my new blog, today in this blog I'm going to make a calculator using HTML CSS &amp;amp; JavaScript. Earlier I have shared, How To Make a Responsive Website With HTML &amp;amp; CSS, that website was in glassmorphism UI, and now this calculator design is also in glass morphism UI.&lt;br&gt;
As we know, a Calculator is a mechanical device that is used to calculate numerical numbers. There are various types and designs of calculators that we can found but the main motive of the calculator is calculation.&lt;/p&gt;

&lt;p&gt;As you can see on the given image of this program [Glasss Morphism Calculator], on the webpage. There is one calculator design in glassmorphism UI. All essential buttons are available there like addition, subtraction, multiplication, divide, and so on. These all buttons worked perfectly. Those different sizes of small boxes around that calculator make this glassmorphism design of the calculator really awesome. These all small boxes move upward direction continuously.&lt;/p&gt;

&lt;p&gt;If you want the real animation of these small boxes and the code behind making this calculator, you can watch the full video tutorial of this program [Animated Glass Morphism Calculator].&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tutorial-of-calculator-using-html-css-amp-javascript"&gt;
  &lt;/a&gt;
  Tutorial of Calculator using HTML CSS &amp;amp; JavaScript
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://youtu.be/S44SDUwWHIQ"&gt;Glassorphism Calculator Preview&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  STEPS
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  STEP 1
&lt;/h2&gt;

&lt;p&gt;Make a file named index.html and write the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;

&amp;lt;html lang="en" dir="ltr"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
   &amp;lt;!--- &amp;lt;title&amp;gt; Glassmorphism Calculator| Codeflix &amp;lt;/title&amp;gt;---&amp;gt;
    &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
   &amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  STEP 2
&lt;/h2&gt;

&lt;p&gt;This is the animation part (Do it carefully). Each lot contains 7 bubbles.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="bubbles"&amp;gt;
  &amp;lt;span class="one"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="two"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="three"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="four"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="five"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="six"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="bubbles"&amp;gt;
  &amp;lt;span class="one"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="two"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="three"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="four"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="five"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="six"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="bubbles"&amp;gt;
  &amp;lt;span class="one"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="two"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="three"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="four"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="five"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="six"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="bubbles"&amp;gt;
  &amp;lt;span class="one"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="two"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="three"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="four"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="five"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="six"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  STEP 3
&lt;/h2&gt;

&lt;p&gt;This code will make the container of the calculator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;div class="container"&amp;gt;
   &amp;lt;form action="#" name="forms"&amp;gt;
     &amp;lt;input type="text" name="answer"&amp;gt;
     &amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="AC" onclick="forms.answer.value = ''"&amp;gt;
       &amp;lt;input type="button" value="DEL" onclick="forms.answer.value = forms.answer.value.substr(0 , forms.answer.value.length -1)"&amp;gt;
       &amp;lt;input type="button" value="%" onclick="forms.answer.value += '%'"&amp;gt;
       &amp;lt;input type="button" value="/" onclick="forms.answer.value += '/'"&amp;gt;
     &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  STEP 4
&lt;/h2&gt;

&lt;p&gt;This code represents how buttons should function and their size and all other content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="7" onclick="forms.answer.value += '7'"&amp;gt;
       &amp;lt;input type="button" value="8" onclick="forms.answer.value += '8'"&amp;gt;
       &amp;lt;input type="button" value="9" onclick="forms.answer.value += '9'"&amp;gt;
       &amp;lt;input type="button" value="*" onclick="forms.answer.value += '*'"&amp;gt;
     &amp;lt;/div&amp;gt;
     &amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="4" onclick="forms.answer.value += '4'"&amp;gt;
       &amp;lt;input type="button" value="5" onclick="forms.answer.value += '5'"&amp;gt;
       &amp;lt;input type="button" value="6" onclick="forms.answer.value += '6'"&amp;gt;
       &amp;lt;input type="button" value="-" onclick="forms.answer.value += '-'"&amp;gt;
     &amp;lt;/div&amp;gt;
     &amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="1" onclick="forms.answer.value += '1'"&amp;gt;
       &amp;lt;input type="button" value="2" onclick="forms.answer.value += '2'"&amp;gt;
       &amp;lt;input type="button" value="3" onclick="forms.answer.value += '3'"&amp;gt;
       &amp;lt;input type="button" value="+" onclick="forms.answer.value += '+'"&amp;gt;
     &amp;lt;/div&amp;gt;
     &amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="0"  onclick="forms.answer.value += '0'"&amp;gt;
       &amp;lt;input type="button" value="00" onclick="forms.answer.value += '00'"&amp;gt;
       &amp;lt;input type="button" value="." onclick="forms.answer.value += '.'"&amp;gt;
       &amp;lt;input type="button" value="=" onclick="forms.answer.value = eval(forms.answer.value)"&amp;gt;
     &amp;lt;/div&amp;gt;
   &amp;lt;/form&amp;gt;
 &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  Css
&lt;/h2&gt;

&lt;p&gt;CSS is designed to enable the separation of presentation and content, including layout, colors, and fonts.  This separation can improve content accessibility, provide more flexibility and control in the specification of presentation characteristics, enable multiple web pages to share formatting by specifying the relevant CSS in a separate .css file which reduces complexity and repetition in the structural content as well as enabling the .css file to be cached to improve the page load speed between the pages that share the file and its formatting.&lt;/p&gt;

&lt;p&gt;Separation of formatting and content also makes it feasible to present the same markup page in different styles for different rendering methods, such as on-screen, in print, by voice (via speech-based browser or screen reader), and on Braille-based tactile devices. CSS also has rules for alternate formatting if the content is accessed on a mobile device.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-codes-in-this-project"&gt;
  &lt;/a&gt;
  Css codes in this project
&lt;/h2&gt;

&lt;h6&gt;
  &lt;a href="#css-plays-an-important-role-in-this-project-and-css-codes-are-also-available-below"&gt;
  &lt;/a&gt;
  Css plays an important role in this project and Css codes are also available below.
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#css-codes"&gt;
  &lt;/a&gt;
  Css codes
&lt;/h2&gt;

&lt;p&gt;Now we will make a file named style.css and write paste the following code. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  STEP 1
&lt;/h2&gt;

&lt;p&gt;This code represents Fonts, Container, Background Colour&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&amp;amp;display=swap');
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins',sans-serif;
}
body{
  height: 100vh;
  width: 100%;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(#2196f3 , #e91e63);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  STEP 2
&lt;/h2&gt;

&lt;p&gt;This Css code is used to add animation,Colour to the bubbles. &lt;br&gt;
Each lot contains 7 bubbles.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.bubbles{
  position: absolute;
  bottom: -120px;
  display: flex;
  flex-wrap: wrap;
  margin-top: 70px;
  width: 100%;
  justify-content: space-around;
}
.bubbles span{
  height: 60px;
  width: 60px;
  background: rgba(255, 255, 255, 0.1);
  animation: move 10s linear infinite;
  position: relative;
  overflow: hidden;
}
@keyframes move {
  100%{
    transform: translateY(-100vh);
  }
}
.bubbles span.one{
  animation-delay: 2.2s;
  transform: scale(2.15)
}
.bubbles span.two{
  animation-delay: 3.5s;
  transform: scale(1.55)
}
.bubbles span.three{
  animation-delay: 0.2s;
  transform: scale(0.35)
}
.bubbles span.four{
  animation-delay: 6s;
  transform: scale(2.15)
}
.bubbles span.five{
  animation-delay: 7s;
  transform: scale(0.5)
}
.bubbles span.six{
  animation-delay: 4s;
  transform: scale(2.5)
}
.bubbles span.seven{
  animation-delay: 3
  transform: scale(1.5)
}
.bubbles span:before{
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  height: 60px;
  width: 40%;
  transform: skew(45deg) translateX(150px);
  background: rgba(255, 255, 255, 0.15);
  animation: mirror 3s linear infinite;
}
@keyframes mirror {
  100%{
    transform: translateX(-450px);
  }
}
.bubbles span.one:before{
  animation-delay: 1.5s;
}
.bubbles span.two:before{
  animation-delay: 3.5s;
}
.bubbles span.three:before{
  animation-delay: 2.5s;
}
.bubbles span.four:before{
  animation-delay: 7.5s;
}
.bubbles span.five:before{
  animation-delay: 4.5s;
}
.bubbles span.six:before{
  animation-delay: 0.5s;
}
.bubbles span.seven:before{
  animation-delay: 6s;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  STEP 3
&lt;/h2&gt;

&lt;p&gt;This code represents container's colour, Text input in the container , Colour Of the buttons.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  z-index: 12;
  width: 360px;
  padding: 15px;
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.1);
  box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
  border-top: 1px solid rgba(255, 255, 255, 0.5);
  border-left: 1px solid rgba(255, 255, 255, 0.5);
}
.container input[type="text"]{
  width: 100%;
  height: 100px;
  margin: 0 3px;
  outline: none;
  border: none;
  color: #fff;
  font-size: 20px;
  text-align: right;
  padding-right: 10px;
  pointer-events: none;
  background: transparent;
}
.container input[type="button"]{
  height: 65px;
  color: #fff;
  width: calc(100% / 4 - 5px);
  background: transparent;
  border-radius: 12px;
  margin-top: 15px;
  outline: none;
  border: none;
  font-size: 20px;
  cursor: pointer;
  transition: all 0.3s ease;
}
.container input[type="button"]:hover{
  background: rgba(255, 255, 255, 0.1);
}```




&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>css</category>
    </item>
    <item>
      <title>How to Expose Your Local Host URL as a Public URL</title>
      <author>Rahul Banerjee</author>
      <pubDate>Tue, 26 Oct 2021 07:54:02 +0000</pubDate>
      <link>https://dev.to/rahulbanerjee99/how-to-expose-your-local-host-url-as-a-public-url-34mh</link>
      <guid>https://dev.to/rahulbanerjee99/how-to-expose-your-local-host-url-as-a-public-url-34mh</guid>
      <description>&lt;p&gt;There might be times when you wish to access your API or React project using a public URL but do not want to go through the hassle of deploying it. Basically, instead of &lt;a href="http://127.0.0.1:5000/"&gt;http://127.0.0.1:5000/&lt;/a&gt;, you'd want something like &lt;a href="http://35cc-69-58-102-156.ngrok.io"&gt;http://35cc-69-58-102-156.ngrok.io&lt;/a&gt; so that others could access it as well. This article will talk about two ways you can do so.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-does-it-mean-to-expose-your-localhost-url"&gt;
  &lt;/a&gt;
  What does it mean to expose your localhost URL?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;First of all, it is temporary. Unless you opt for a paid option, most public URLs will expire in a few hours. You can always generate a new one. &lt;/li&gt;
&lt;li&gt;The exposed URL will basically be in sync with your localhost URL. Any requests made to your localhost URL will also be made to the exposed URL and vice versa. &lt;/li&gt;
&lt;li&gt;Your public URL will only be active as long as your local API or React Project is active.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#why-would-you-want-to-expose-your-localhost-url"&gt;
  &lt;/a&gt;
  Why would you want to expose your localhost URL?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Working with Webhook: Webhooks require a public URL. Exposing your localhost URL generates a public URL for you. The Webhook request can be made to this public URL and your localhost URL will also receive the request. Check out &lt;a href="https://www.realpythonproject.com/intro-to-webhooks-with-and-how-to-receive-them-with-python/"&gt;this article&lt;/a&gt; to learn more about webhooks and how to use them with Python&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Testing your project on other devices: You might want to test your React project on an actual mobile or any other device.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Making your server accessible to others: Exposing your localhost URL will let anyone with the URL access it. This can help you to share your server/react project with others for feedback or debugging.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will look at two free options to expose your localhost URL. The first option will require you to download a software while the second option will require an NPM package.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#option-1-ngrok"&gt;
  &lt;/a&gt;
  Option 1: Ngrok
&lt;/h3&gt;

&lt;p&gt;You will need to sign up for &lt;a href="https://ngrok.com/"&gt;ngrok&lt;/a&gt;. After you sign up, you will have to download the software.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DoVyO1mo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226921573/lM5MkEfJ8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DoVyO1mo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226921573/lM5MkEfJ8.png" alt="Screen Shot 2021-10-26 at 1.41.52 AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the download is complete, unzip the file. Remember the directory where you unzipped the file. This will be needed in the next step.&lt;/p&gt;

&lt;p&gt;Open a terminal and navigate to the location of the unzipped file using the 'cd' command. Once your terminal is at the directory with the unzipped file, type the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ngrok  http &amp;lt;PORT NUMBER&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Eg: If your react project is running on port 3000, you'd have to type the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ngrok http 3000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nHpnjmzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226711318/if00V8gy05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nHpnjmzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226711318/if00V8gy05.png" alt="Screen Shot 2021-10-26 at 1.38.25 AM.png"&gt;&lt;/a&gt;&lt;br&gt;
 You should see a similar output in your terminal. The public URL is the URL next to 'Forwarding'. In my case it is &lt;a href="http://35cc-69-58-102-156.ngrok.io"&gt;http://35cc-69-58-102-156.ngrok.io&lt;/a&gt;. If you access your public URL, you should see the same thing you see when you access your localhost URL. Note the value next to 'Session Expires'. After the allotted time, the public URL will expire and you will have to generate a new URL.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#option-2-localtunnel"&gt;
  &lt;/a&gt;
  Option 2: Localtunnel
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://localtunnel.github.io/www/"&gt;Localtunnel&lt;/a&gt; is an npm package that can be installed using a node. Type the following command to install it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; localtunnel
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use the '-g' tag to install it globally so that it can be accessed by multiple projects. After installation is complete, type the following command to expose your localhost URL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;lt &lt;span class="nt"&gt;--port&lt;/span&gt; 3000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If successful you should see a similar URL&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;your url is: https://fast-cow-24.loca.lt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you get the following error message&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;command &lt;/span&gt;not found: lt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Locate where the node installed the package. It should be inside a node modules folder. Once you find the node modules folder, cd to the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;node_modules/localtunnell/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and type the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./lt.js &lt;span class="nt"&gt;--port&lt;/span&gt; 3000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;If you are looking for a more detailed article on exposing localhost URLs, I recommend checking &lt;a href="https://chenhuijing.com/blog/tunnelling-services-for-exposing-localhost-to-the-web/#%F0%9F%91%9F"&gt;this article&lt;/a&gt;.&lt;br&gt;
I hope you found this article helpful. Connect with on &lt;a href="https://www.linkedin.com/in/rahulbanerjee2699/"&gt;LinkedIn&lt;/a&gt; , &lt;a href="https://twitter.com/rahulbanerjee99"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Top 10 Information Technology Quizzes to Test Your Knowledge of the IT Industry</title>
      <author>Liudmila Klimusheuskaja</author>
      <pubDate>Tue, 26 Oct 2021 07:47:53 +0000</pubDate>
      <link>https://dev.to/0prvona2lupchiq/top-10-information-technology-quizzes-to-test-your-knowledge-of-the-it-industry-51n1</link>
      <guid>https://dev.to/0prvona2lupchiq/top-10-information-technology-quizzes-to-test-your-knowledge-of-the-it-industry-51n1</guid>
      <description>&lt;p&gt;If you love Information Technology, and you code day and night, take a break, test your IT general knowledge, and have some fun. We have compiled a list of 10 information technology quizzes to test your knowledge of the IT industry. Try them now and compete with your friends: &lt;/p&gt;

&lt;p&gt;1) &lt;strong&gt;ProProfs Quizzes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ProProfs contains numerous professional quizzes and tests covering a wide range of topics, from entertainment quizzes about TikTokers, popular movies, and celebrities and finishing with quizzes related to business, education, and other specific fields. &lt;/p&gt;

&lt;p&gt;We’ve found &lt;a href="https://www.proprofs.com/quiz-school/topic/information-technology"&gt;information technology quizzes and trivia&lt;/a&gt; on ProProfs where you can prove your specific IT knowledge or you can try a simple “Fundamentals of Information Technology Trivia” game.&lt;/p&gt;

&lt;p&gt;2) &lt;strong&gt;Quizizz&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Quizizz is a learning platform that allows people to learn anything they want by passing gamified quizzes. The platform is widely used by teachers and students to learn school subjects in a fun and interactive way. It also gives you the option to create your own quizzes, customize them, and assign them to a group of people. You can find almost any topic using their search bar. &lt;/p&gt;

&lt;p&gt;Try some of these information technology quizzes: &lt;a href="https://quizizz.com/admin/quiz/57289bd771d491296531f0c7/javascript"&gt;JavaScript quiz&lt;/a&gt; , &lt;a href="https://quizizz.com/admin/quiz/5c6f102201a3d6001dc4e6ba/web-development"&gt;Web Development quiz&lt;/a&gt;, or &lt;a href="https://quizizz.com/admin/quiz/597eca541bb9c41700175518/chapter-1-information-technology"&gt;Information Technology quiz.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3) &lt;strong&gt;Internet of Think Quiz Show&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The format of this quiz is totally different compared to most of what we’ve found online. This is a YouTube information technology quiz show where any information technology specialist can apply to participate and compete for cash prizes. The quiz show consists of three rounds; round 1 is general information technology trivia, round 2 is IT-themed images and questions, and round 3 is a series of rapid-fire IT-related questions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3GqMwaa"&gt;Check out the latest episode&lt;/a&gt; to see what it’s like and apply to participate to win cash and check your IT general skills and knowledge. You can even practice using other quizzes from this article and then put your newfound skills to use to win real money! &lt;/p&gt;

&lt;p&gt;4) &lt;strong&gt;Britannica&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Britannica is a leading online encyclopedia that provides products including courses, digital encyclopedias, training, and quizzes.&lt;/p&gt;

&lt;p&gt;Britannica sorts their quizzes by category. Check out this link to find all the &lt;a href="https://www.britannica.com/quiz/browse/Technology"&gt;technology quizzes&lt;/a&gt; that are available on Britannica right now. Try some of these IT quizzes from the list; they range from computers and technology, tech companies, computers and operating systems, to mobile phones. Keep in mind that you have only 30 seconds to answer each question.&lt;/p&gt;

&lt;p&gt;5) &lt;strong&gt;Study.com&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Study.com is an online education platform offering courses, education programs, video lessons, and more. They also have a huge range of quizzes — more than 65,000! &lt;/p&gt;

&lt;p&gt;Use &lt;a href="https://study.com/learn/information-technology-quizzes.html"&gt;this link&lt;/a&gt; to try information technology quizzes from study.com. There are currently 781 quizzes to test your IT skills. You can try one about IT terms &amp;amp; Abbreviations, iOS Architecture Components, and many others. Just bear in mind, you’ll have to make an account to see the full range of quizzes. The upside is that each quiz has a description, learning goals, related skills, and places to find more information about the topic. &lt;/p&gt;

&lt;p&gt;6) &lt;strong&gt;Quizstone&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Quizstone is a quiz website offering quizzes in numerous categories, as well as daily general trivia questions. &lt;/p&gt;

&lt;p&gt;Their &lt;a href="https://quizstone.com/en/c/internet_technology_quiz/"&gt;Information Technology quiz&lt;/a&gt; has questions about the Internet, computers, games, programs, software, and hardware. Try their &lt;a href="https://quizstone.com/en/c/internet_technology_quiz/internet/"&gt;Internet Quiz&lt;/a&gt; to check your knowledge about Internet services, web sites, and search engines. Their &lt;a href="https://quizstone.com/en/c/internet_technology_quiz/hardware/"&gt;Hardware Quiz&lt;/a&gt; will help you see how much you know about hardware, computers, routers, and computer manufacturers. Their computer games quiz checks knowledge about console, PC, and mobile games, and their software quiz tests programming language knowledge and more.&lt;/p&gt;

&lt;p&gt;7) &lt;strong&gt;GeeksforGeeks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;GeeksforGeeks is a computer science portal with programming articles, tutorials, courses, quizzes, and interview questions.&lt;/p&gt;

&lt;p&gt;In their &lt;a href="https://www.geeksforgeeks.org/quiz-corner-gq/?ref=ndm"&gt;quiz section&lt;/a&gt;, you will find things about C++, Java, Python, data structure, algorithms, and more. The questions are pretty technical and contain code examples as well, so this source might be a good way to test your skills before passing an interview. When you answer the questions in the quiz, you’ll get an explanation to help you understand the topic better.&lt;/p&gt;

&lt;p&gt;8) &lt;strong&gt;SkillValue by Pentagon&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SkillValue, a recruitment platform for hiring tech freelancers, offers &lt;a href="https://skillvalue.com/en/quiz/"&gt;1000+ quizzes&lt;/a&gt; about different programming languages. You can take quizzes about .Net, Java, and Javascript, as well as machine learning, software testing, information security, and more. All the quizzes have different difficulty levels and have time limits to answer all the questions. You’ll need to make an account to start taking quizzes.&lt;/p&gt;

&lt;p&gt;9) &lt;strong&gt;Sporcle&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sporcle provides quizzes, not only on the web and mobile, but also in live trivia shows at bars and restaurants. Their website has a database of more than 1 million quizzes, all sorted by category. You can also sort by most popular. In addition, the platform allows you to create your own quizzes and share them with your friends. &lt;/p&gt;

&lt;p&gt;Find information technology trivia quizzes and games &lt;a href="https://www.sporcle.com/games/tags/informationtechnology"&gt;here.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;10) &lt;strong&gt;Aliensbrain&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Aliensbrain is an online test portal with more than 15,000 quizzes.&lt;/p&gt;

&lt;p&gt;Try &lt;a href="https://www.aliensbrain.com/"&gt;quizzes&lt;/a&gt; about the .Net framework, C &amp;amp; C++ programming, Java, SQL, web development, and many fields. You can either take quizzes or create your own. Searching by tags you can find the questions and quizzes that are most interesting to you. &lt;/p&gt;

&lt;p&gt;Now you have the list of information technology quizzes to test your knowledge and skills in the IT industry. Have fun learning! &lt;/p&gt;

</description>
      <category>career</category>
      <category>learning</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Mine Ripple XRP with Your Computer Under 5 Minutes in 2021</title>
      <author>Course Probe</author>
      <pubDate>Tue, 26 Oct 2021 07:38:05 +0000</pubDate>
      <link>https://dev.to/courseprobe/how-to-mine-ripple-xrp-with-your-computer-under-5-minutes-in-2021-4hlk</link>
      <guid>https://dev.to/courseprobe/how-to-mine-ripple-xrp-with-your-computer-under-5-minutes-in-2021-4hlk</guid>
      <description>&lt;p&gt;A Step by Step Guide to Pool Mining Ripple XRP in 2021 with a CPU or GPUs!&lt;/p&gt;

&lt;p&gt;Sometimes mining can seem to be too complex for the average computer user, so I thought about putting together a quick guide to get you excited about mining cryptocurrency and XRP in particular.&lt;/p&gt;

&lt;p&gt;Anyone can start mining Ripple XRP with any computer in under 5 minutes using this guide, regardless of your technical skill level you will be able to increase your crypto knowledge and start mining XRP with your CPU and GPU today!!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;XRP is a digital asset built for payments. It is the native digital asset on the XRP Ledger—an open-source, permissionless and decentralized blockchain technology that can settle transactions in 3-5 seconds.&lt;/p&gt;

&lt;p&gt;XRP can be sent directly without needing a central intermediary, making it a convenient instrument in bridging two different currencies quickly and efficiently.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How Is XRP Used?&lt;/p&gt;

&lt;p&gt;Faster, less costly and more scalable than any other digital asset, XRP and the XRP Ledger are used to power innovative technology across the payments space.&lt;/p&gt;

&lt;p&gt;Ripple is focused on building technology to help unleash new utility for XRP and transform global payments. Third parties are also pursuing other XRP-related use cases.&lt;/p&gt;




&lt;p&gt;Now let's get you started !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 1:&lt;/strong&gt; Get yourself a Wallet.&lt;/p&gt;

&lt;p&gt;I recommend getting Trustwallet in order for you to get a public Address for XRP to receive your funds.&lt;/p&gt;

&lt;p&gt;You can visit the Official Site &lt;a href="https://trustwallet.com/"&gt;TrustWallet&lt;/a&gt; and Download it from there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 2:&lt;/strong&gt; Download the Unmineable Miner Software&lt;/p&gt;

&lt;p&gt;Before downloading the file, set some folder exclusions on Windows Defender, in your antivirus and also in your browser so you can download the file without being bothered with notifications of dangerous files.&lt;/p&gt;

&lt;p&gt;Official Unmineable software can be downloaded from this site: &lt;a href="https://www.unmineable.com/miner"&gt;Unmineable Download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download the MFI version (Miners files included).&lt;/p&gt;

&lt;p&gt;The unmineable software is just one executable file, it already contains all the configurations so it is the best and easiest way to mine XRP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Run the file as an Administrator in windows.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It looks exactly like this when you run it: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" alt="Unmineable Start Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can select GPU cards or CPU.&lt;/p&gt;

&lt;p&gt;It will take you to the second screen where you will enter your Ripple XRP Address and also &lt;strong&gt;the code which will allow you to drop your Dev Fee from 1% to 0.75%&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Use the code: &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; to drop your Dev Fee from 1% to 0.75% (it makes a difference).&lt;/p&gt;

&lt;p&gt;Your screen should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OBrJWXUr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bhwlxu3gwwefasif3hh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OBrJWXUr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bhwlxu3gwwefasif3hh.png" alt="Unmineable XRP mining"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you click on the Start button, you should see a similar screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" alt="Unmineable Mining Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point I would recommend you to click the option at the bottom to display the logs (Looks like a sheet of paper), here click Force Stop. &lt;/p&gt;

&lt;p&gt;Then click the Settings Icon (Looks like a cog wheel), in the screen that pops up you want to double check a few things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make sure the algorithm selected is ETCHASH if you are mining with 4GB cards, use ETHASH for cards with 6GB or more, if you selected CPU everything is ready to start mining no need to select anything.&lt;/li&gt;
&lt;li&gt;Make sure the Code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; is showing in the referral box (Recommended, not mandatory).&lt;/li&gt;
&lt;li&gt;Set a name for your worker (The computer you are mining from).&lt;/li&gt;
&lt;li&gt;Set your mining Intensity at the top, I would recommend High for those periods when you are not using the computer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It looks similar to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" alt="Unmineable Settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the Save &amp;amp; Restart button to start mining !!&lt;/p&gt;

&lt;p&gt;Once it starts you can check the speed of your Graphic card which shows as the Current Hashrate.&lt;/p&gt;

&lt;p&gt;Also you can click on the stats button on the top right to go directly to the Unmineable website where you can check your balance and request a manual payment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; it is recommended you change a few settings in Windows, there's people that disable the Updates and also disable sleeping mode, hibernation or anything that could turn off the computer while it is not in use.&lt;/p&gt;

&lt;p&gt;If you are using a Laptop, make sure it has some battery or is plugged so it won't shut down.&lt;/p&gt;

&lt;p&gt;Congrats, if you are using Unmineable you are now a miner !!&lt;/p&gt;




&lt;p&gt;If you want a bit more of control over the mining software and configurations then you can download the miners and manually set them up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with CPU then you could follow below:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Go to the xmrig site to download the latest version (MSVC) or from the oficial github repository: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;https://github.com/xmrig/xmrig/releases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you download the latest version you would have to edit a file named "pool_mine_example.bat" or "start.com" or "start.bat" Inside this file you need to modify 2 lines.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;if the file doesn't exists you would have to create it&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It could look similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd %~dp0
xmrig.exe -o rx.unmineable.com:3333 -u XRP:rDE9nDFxx7pxEFACbpFZbV1o3AxwMAGf4x.wrkID#e4xd-wmzl -p x
pause
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the second line after the -o you can see the Pool URL, in this case all you have to do depending on your location is to use one of the following URLs (select the one closer to your location).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;USA:&lt;/strong&gt; rx-us.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Europe:&lt;/strong&gt; rx-eu.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Asia:&lt;/strong&gt; rx-asia.unmineable.com:3333&lt;/p&gt;

&lt;p&gt;Then, the third line is where you will enter your wallet's public address (copied in STEP 1), place it after the XRP: and before the first dot "." .&lt;/p&gt;

&lt;p&gt;The general structure of the address needs to be:&lt;/p&gt;

&lt;p&gt;[COIN]:[Wallet address].[workerID]#[Code to lower mining fee]&lt;/p&gt;

&lt;p&gt;The workerID is any name you want to give to each computer where you are running the miner so it can easily be identified later on under the pool stats.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The code after the # is important&lt;/strong&gt; because mining with that code will drop the Mining Fee from 1% to 0.75% (it makes a difference). You can start mining using that code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Run the file as an administrator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" alt="XMRig Mining"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If everything goes well, you are now running XMRig and are mining. Congrats !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with GPU:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I would recommend you to get: Teamredminer (AMD cards), Phoenixminer (AMD/NVIDIA) or Trex (Nvidia).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download these miner from the oficial sites:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Phoenix miner: &lt;a href="https://bitcointalk.org/index.php?topic=2647654.0"&gt;Bitcoin Talk forum&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Teamred miner: &lt;a href="https://github.com/todxx/teamredminer/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Trex: &lt;a href="https://github.com/trexminer/T-Rex/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then set them up with a smilar Start.bat file as mentioned in the CPU section above. &lt;/p&gt;

&lt;p&gt;Pay attention to some changes you would need to implement: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 4gb cards you need to set the algo on the miner to ETCHASH and the coin to ETC. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 6gb cards or more then you need to set the algo on the miner to ETHAS and the coin to ETH. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to also set the pool url accordingly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ETCHASH: etchash.unmineable.com:3333&lt;/li&gt;
&lt;li&gt;ETHASH:  ethash.unmineable.com:3333&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once done, run the file as administrator.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now you can Log into Unmineable to check your stats:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unmineable.com is a mining Pool which allows you to mine with your CPU using RandomX or GPUS using Etchash or Ethash and pay you in any coin you select. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" alt="Unmineable Site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember when you set up the address inside the Miner starter file ? &lt;/p&gt;

&lt;p&gt;Well, there you just let Unmineable know the coin you want to be paid in, in this example XRP and then the address where they will transfer the mined coins.&lt;/p&gt;

&lt;p&gt;In order to check your balance, log into &lt;a href="https://unmineable.com"&gt;Unmineable&lt;/a&gt; and then select the coin you want to mine. In this example, Ripple XRP.&lt;/p&gt;

&lt;p&gt;Then you can select the Tab that reads RandomX or ETCHAS or ETHASH depending on your algo, and enter your address in the box that reads "Enter your address to check your stats:". &lt;/p&gt;

&lt;p&gt;After doing this you will see the balance on your account and you will even be able to request a payment.&lt;/p&gt;




&lt;p&gt;Congrats, you are a miner now! &lt;/p&gt;

&lt;p&gt;I recommend downloading some software to monitor the running temperature of your CPU and GPU, a good and free one is Hardware Monitor.&lt;/p&gt;

&lt;p&gt;Try not to exceed the temperature more than 90 degrees celsius. In case you are mining with a laptop, change the thermal paste of your CPU, get it cleaned inside, and get some heat extractors for laptops.&lt;/p&gt;

&lt;p&gt;If you take care of the temperature your computer should work very well, the amount of coins you can mine will depend on the hashrate of your CPU and GPUs. &lt;/p&gt;

&lt;p&gt;For GPUS download MSI Afterburner and set the appropriate Overclocking profile so you can get higher hashrates.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Remember to use a valid address for each coin, for example if you want to be paid in ADA then you need a valid Cardano blockchain address. In this example Binance Smart Chain is used and you would receive a CAKE token on the BSC blockchain.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;If you are looking for more information into CPU mining, there's a good guide in a PDF ebook and is Free, get it at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" alt="Mining with CPU"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Referral Disclosure:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Please read the Unmineable Referral Policy at the following link to better understand How the referral code works in detail &lt;a href="https://www.unmineable.com/referrals"&gt;Unmineable Referrals&lt;/a&gt;&lt;/p&gt;

</description>
      <category>crypto</category>
      <category>blockchain</category>
      <category>ripple</category>
    </item>
    <item>
      <title>API Testing - Executing API Tests on the command line</title>
      <author>Dheeraj Aggarwal</author>
      <pubDate>Tue, 26 Oct 2021 07:36:08 +0000</pubDate>
      <link>https://dev.to/dheerajaggarwal/api-testing-executing-api-tests-on-the-command-line-jia</link>
      <guid>https://dev.to/dheerajaggarwal/api-testing-executing-api-tests-on-the-command-line-jia</guid>
      <description>&lt;p&gt;vREST NG allows you to write your API tests via easy-to-use UI and scriptless assertions. And you may execute them using the command line module by just providing the project directory path. This video explains how you execute those API tests on the command line.&lt;/p&gt;

&lt;p&gt;vREST NG is a script less API test automation tool. It helps you to write maintainable test cases quickly for functional and regression testing of APIs. You can download and install the vREST NG application directly on Windows, OSX, and Linux via our website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Video Link:&lt;/strong&gt; &lt;a href="https://youtu.be/wDUDCPfbphk"&gt;https://youtu.be/wDUDCPfbphk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Testing Tutorials Playlist:&lt;/strong&gt; &lt;a href="https://youtube.com/playlist?list=PLmua155_WrDzt1AbB6iV5Lsw_Z7QrzZZ0"&gt;https://youtube.com/playlist?list=PLmua155_WrDzt1AbB6iV5Lsw_Z7QrzZZ0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Important Links:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://vrest.io/?utm_source=devto&amp;amp;utm_medium=devto-desc&amp;amp;utm_campaign=video"&gt;vREST NG Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/NtRa7kw"&gt;Community Chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meetings.hubspot.com/dheeraj-aggarwal"&gt;Book a Live Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Please do like and share if you found this video helpful and let the voice heard by the testing community. Also, let us know your feedback by commenting on this post.&lt;/p&gt;

</description>
      <category>testing</category>
      <category>tutorial</category>
      <category>apitesting</category>
      <category>vrest</category>
    </item>
    <item>
      <title>PHP OOP</title>
      <author>Bazeng</author>
      <pubDate>Tue, 26 Oct 2021 07:30:03 +0000</pubDate>
      <link>https://dev.to/bazeng/php-oop-2ilb</link>
      <guid>https://dev.to/bazeng/php-oop-2ilb</guid>
      <description>&lt;p&gt;OOP stands for Object-Oriented Programming. Object-oriented programming is about creating objects that contain both data and functions, this is different from Procedural programming which is about writing procedures or functions that perform operations on the data.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#why-oop"&gt;
  &lt;/a&gt;
  Why OOP?
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;OOP is faster and easier to execute&lt;/li&gt;
&lt;li&gt;OOP provides a clear structure for the programs&lt;/li&gt;
&lt;li&gt;OOP helps to keep the PHP code DRY "Don't Repeat Yourself", and 
makes the code easier to maintain, modify and debug&lt;/li&gt;
&lt;li&gt;OOP makes it possible to create full reusable applications with 
less code and shorter development time&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#classes-amp-objects"&gt;
  &lt;/a&gt;
  Classes &amp;amp; Objects
&lt;/h6&gt;

&lt;p&gt;Classes and objects are the two main aspects of object-oriented programming.&lt;/p&gt;

&lt;p&gt;For example&lt;/p&gt;

&lt;p&gt;So, a class is a template for objects, and an object is an instance of a class.&lt;/p&gt;

&lt;p&gt;When the individual objects are created, they inherit all the properties and behaviors from the class, but each object will have different values for the properties.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#class"&gt;
  &lt;/a&gt;
  Class
&lt;/h6&gt;

&lt;p&gt;Let assume we have a class Person, a person has a name, age and gender.&lt;br&gt;
To define a class, use curly braces.In a class, variables are called properties and functions are called methods!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php
class Person{ 
 //properties of the class
 public name;
 public age;
 public gender;
 //methods of the class
 function setName(name){
   $this-&amp;gt;name = name;
 }
 function getName(){
   return $this-&amp;gt;name;
 }
 function setAge(name){
   $this-&amp;gt;name = name;
 }
 function getAge(){
   return $this-&amp;gt;name;
 }
 function setGender(name){
   $this-&amp;gt;name = name;
 }
 function getGender(){
   return $this-&amp;gt;name;
 }


}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#objects"&gt;
  &lt;/a&gt;
  Objects
&lt;/h6&gt;

&lt;p&gt;Classes are nothing without objects! We can create multiple objects from a class. Each object has all the properties and methods defined in the class, but they will have different property values.&lt;/p&gt;

&lt;p&gt;Objects of a class is created using the &lt;code&gt;new&lt;/code&gt; keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php
$person1 = new Person()
$person1-&amp;gt;setName('samuel')
echo "Name:" .$person1-&amp;gt;getName()
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#the-raw-this-endraw-keyword"&gt;
  &lt;/a&gt;
  The &lt;code&gt;$this&lt;/code&gt; Keyword
&lt;/h6&gt;

&lt;p&gt;The &lt;code&gt;$this&lt;/code&gt; keyword refers to the current object, and is only available inside methods.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#php-raw-instanceof-endraw-"&gt;
  &lt;/a&gt;
  PHP - &lt;code&gt;instanceof&lt;/code&gt;
&lt;/h6&gt;

&lt;p&gt;You can use the &lt;code&gt;instanceof&lt;/code&gt; keyword to check if an object belongs to a specific class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php
$apple = new Fruit();
var_dump($Person1 instanceof Person);
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>beginners</category>
      <category>php</category>
    </item>
    <item>
      <title>Say goodbye to passwords: WebAuthn, the foundations</title>
      <author>Jonatan Sombié</author>
      <pubDate>Tue, 26 Oct 2021 07:27:47 +0000</pubDate>
      <link>https://dev.to/jsombie/say-goodbye-to-passwords-webauthn-the-foundations-27g7</link>
      <guid>https://dev.to/jsombie/say-goodbye-to-passwords-webauthn-the-foundations-27g7</guid>
      <description>&lt;p&gt;Here is the first article of a serie dedicated to understanding and implementing Web Authentication API (WebAuthn) in a demo application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The Web Authentication API (also known as WebAuthn) is a specification written by the W3C and FIDO, with the participation of Google, Mozilla, Microsoft, Yubico, and others. The API allows servers to register and authenticate users using public key cryptography instead of a password.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Source&lt;/em&gt;: &lt;a href="https://webauthn.guide/"&gt;https://webauthn.guide&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this article, I will explain the foundations of WebAuthn: &lt;em&gt;public-key cryptography&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#publickey-encryption"&gt;
  &lt;/a&gt;
  Public-key encryption
&lt;/h2&gt;

&lt;p&gt;In computer science, cryptography is mainly concerned with security of messages exchanged through insecure networks like internet. Its principal application is &lt;em&gt;encryption&lt;/em&gt;. &lt;br&gt;
Encryption is the process by which a message, called &lt;em&gt;plaintext&lt;/em&gt;, is rendered incomprehensible by an algorithm called &lt;em&gt;cipher.&lt;/em&gt; The encrypted message is also called &lt;em&gt;ciphertext.&lt;/em&gt; The cipher takes as input the plaintext and an encryption key which can be secret or public depending on the type of cipher. The cipher carries also the decryption, which is the process of getting the plaintext from the ciphertext. Strictly speaking, the cipher is composed of the encryption and decryption algorithms, which are not necessarily identical.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vWQvukHO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vxpfkw7moww2p64tbb09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vWQvukHO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vxpfkw7moww2p64tbb09.png" alt="encryption-decryption.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The key used during the encryption process can be the same used during the decryption process, in which case, we talk about &lt;em&gt;symmetric encryption.&lt;/em&gt; Otherwise, when the decryption key is different from the encryption key, we talk about &lt;em&gt;asymmetric encryption&lt;/em&gt; or &lt;em&gt;public-key encryption&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In asymmetric encryption, the receiver of a message generates a pair of keys. One of the key is secret and kept securely by the receiver and is called &lt;em&gt;private key&lt;/em&gt;. The other key is distributed to the message sender and is considered public, hence the name &lt;em&gt;public-key encryption&lt;/em&gt;. The sender uses the public key to encrypt the message. The cipher is designed in a way that only the corresponding private key can decrypt the ciphertext. In this case, only the owner of the private key, the receiver, can decrypt the ciphertext.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VFyNQ69F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jp2y7niz0zxs01tjebbv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VFyNQ69F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jp2y7niz0zxs01tjebbv.png" alt="public-key-encryption.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you encrypt a message with a private key and decrypt it with a public key, it's called signature and not encryption, as this process alone does not ensure confidentiality but authenticity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#digital-signature"&gt;
  &lt;/a&gt;
  Digital signature
&lt;/h2&gt;

&lt;p&gt;Digital signature can be seen as a message metadata that stands as an attestation of the message authenticity and integrity. Authenticity is insurance about the message creator identity and integrity ensures that the message is not tampered with during transit. &lt;/p&gt;

&lt;p&gt;Before explaining how public-key cryptography can be involved in the process of digital signature, we need to introduce another concept: &lt;em&gt;hash functions&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In cryptography, a hash function is a one-way function that generates a hash value (also called &lt;em&gt;message digest)&lt;/em&gt; from a message in a way that even the slightest modification of the original message generates a totally different message digest*.* The hash value is a serie of bits generally shorter than the original message. It is not possible to get the original message from the message digest. However, given the same input parameters, a hash function can be used to regenerate the message digest from the original message to make sure that it has not been modified by comparing hash values.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lce3d6GT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9u1m35caohcd9fh24t41.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lce3d6GT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9u1m35caohcd9fh24t41.png" alt="hash-functions.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let's see how digital signatures can be generated using public-key cryptography and hash functions. &lt;/p&gt;

&lt;p&gt;Let's say Bob wants to send a document to Julie. He wants to guarantee to Julie that the document has been created by him and that no one has modified it during the transit. Bob has already generated a pair of public/private keys and distributed the public key to Julie.&lt;br&gt;&lt;br&gt;
First, Bob generates the message digest by hashing the document. Then, he &lt;em&gt;signs&lt;/em&gt; the hash value using a cryptographic cipher and his private key. The result is Bob's digital signature of the original document. Since he is the only one who owns his private key, only him can generate such signature.&lt;br&gt;
Bob then sends the document and his digital signature to Julie. She uses Bob's public-key to verify the signature by getting back the message digest. Julie also regenerates the message digest with the received document using the same hash function and ensure that the hash values match.&lt;br&gt;
Any modification of the document occurred after its signature will render the signature invalid and any attempt by a third party to replace the signature will fail because only Bob has the private key necessary to generate a valid signature.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hz8-tnMn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lckgnigccg2x70u593zd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hz8-tnMn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lckgnigccg2x70u593zd.png" alt="digital-signature.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As previously mentioned, to verify a digital signature, the receiver needs the public key of the sender. If the number of senders grows, the number of public keys to maintain by the receiver may be unmanageable. &lt;br&gt;
Now let's say that Julie receives a public key from a person claiming to be Bob. How Julie can make sure it is actually Bob's public key and not a man in the middle trying to impersonate Bob? &lt;br&gt;
These issues are solved by &lt;em&gt;digital certificates&lt;/em&gt; as we will see next.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#digital-certificate"&gt;
  &lt;/a&gt;
  Digital certificate
&lt;/h2&gt;

&lt;p&gt;In the context of public-key cryptography, a digital certificate is a public key with identity signed by a trusted third party also called &lt;em&gt;certificate authority&lt;/em&gt;. For instance, Bob's digital certificate would contain Bob’s name and his public key signed by a certificate authority.&lt;br&gt;
The other parties who trust the certificate authority maintains his public key in order to verify the certificates he delivers. &lt;/p&gt;

&lt;p&gt;Digital certificates solve the public key distribution issues mentioned above. Instead of sending his public key to Julie prior to sending her a signed document, Bob can send the signed document alongside his digital certificate to Julie. Since Julie has the public key of the certificate authority, she can verify Bob's certificate and trust Bob's public key after a successful verification. Julie does not need to store Bob's public key anymore and no one can forge Bob's certificate because it would require having the private key of the certificate authority.&lt;/p&gt;

&lt;p&gt;The problem of getting the public key of the certificate authority remains, but it is much simpler. The receiver has to get and store securely only one public key and only once. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WLq9_BOI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okvoews8xy5if3tbdzze.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WLq9_BOI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okvoews8xy5if3tbdzze.png" alt="digital-certificate.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is possible to have multiple certificate authorities in which case the receiver stores the public keys of all of them. &lt;br&gt;
In some cases, there can be multiple layers of certificate authorities. For example, a &lt;em&gt;root certificate authority&lt;/em&gt; can deliver a certificate to an intermediate certificate authority who delivers Bob's certificate. In this case, Julie only needs to store the root certificate authority's public key and Bob will send to Julie the signed document, his certificate and the certificate of the intermediate certificate authority. Julie will trust the intermediate certificate because it has been delivered by a root certificate authority she trusts. She will also trust Bob's certificate delivered by the intermediate certificate authority. &lt;/p&gt;

&lt;p&gt;The system involving certificate authorities for digital certificates delivery and distribution in the context of public-key cryptography is called Public Key Infrastructure (PKI).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0TR1XX21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpx15t0hro5x8lr2fh9r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0TR1XX21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpx15t0hro5x8lr2fh9r.png" alt="multi-layer-certificate-authorities.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Public-key cryptography provides powerful tools to ensure confidentiality, authenticity and integrity of messages exchanged through insecure networks. &lt;/p&gt;

&lt;p&gt;In the next article, we will see how WebAuthn leverages on these tools to drop password in user authentication. &lt;/p&gt;

&lt;p&gt;Thanks for reading and stay tuned.&lt;/p&gt;

</description>
      <category>authentication</category>
      <category>cryptography</category>
      <category>passwordless</category>
      <category>webauthn</category>
    </item>
    <item>
      <title>Why are yellow page directories so important to B2B prospects?</title>
      <author>ahmed software</author>
      <pubDate>Tue, 26 Oct 2021 07:17:45 +0000</pubDate>
      <link>https://dev.to/ahmedsoftware/why-are-yellow-page-directories-so-important-to-b2b-prospects-130c</link>
      <guid>https://dev.to/ahmedsoftware/why-are-yellow-page-directories-so-important-to-b2b-prospects-130c</guid>
      <description>&lt;p&gt;How to automatically extract data from yellow pages and export it to Excel?&lt;br&gt;
To grow a business, you need to drive sales. If you can sell your products or services you will stay in business, and if you don't sell then you are destitute, having a great sales team helps a lot, but every sale starts with one thing leads.&lt;br&gt;
If you are looking to extract the business contact that causes you to need yellow pages, yellow pages are a business directory filled with valuable business information, millions of businesses registered in yellow pages from different countries. You can search for business details like company title, phone, email, addresses, and many more just by scraping for business niches or keywords.&lt;br&gt;
How to extract data from yellow pages for a marketing campaign?&lt;br&gt;
By knowing the contact details of your prospects related to your business, you can generate thousands of leads and maintain direct relationships with them instead of spending a lot of money on ads on social media and other platforms. But the question here is, how do you &lt;a href="https://www.ahmadsoftware.com/123/united-lead-scraper.html"&gt;extract the data from the yellow pages&lt;/a&gt;?&lt;br&gt;
You have two options here: you can search for potential leads in the yellow pages and create the lead by copying and pasting the data because unfortunately there is no format in the yellow pages to download the data to a spreadsheet Excel.&lt;br&gt;
The other method is to use data extraction tools that allow you to automatically extract the data of your required field from the yellow pages and export it to an Excel spreadsheet. You can use this data for other marketing campaigns.&lt;br&gt;
 What is the best data scraping tool to extract yellow page data?&lt;br&gt;
There are many data extraction tools available in the market, but choosing the best data extraction tools can be difficult as many tools require skills to operate, but if you are looking for a tool that is easy to use and capable of 'extracting the data with a few simple clicks and browse all the yellow pages, &lt;br&gt;
Yellow pages Lead Scraper is the best choice for you because it is free to download and install,  Yellow pages Leads Scraper is a project of United Lead Scraper you can extract the data for free in its free version, in the premium version it will do allows you to export data to an excel spreadsheet. By using Yellow pages Leads Scraper, you can extract the following business data from the Yellow pages:&lt;br&gt;
• Commercial titles&lt;br&gt;
• Addresses&lt;br&gt;
• Telephone&lt;br&gt;
• Links to websites&lt;br&gt;
• E-mails&lt;br&gt;
• Comments&lt;br&gt;
This is some field data that you can extract from the yellow pages, but if you are looking to extract data for a specific field and you are not interested in other fields, you can apply the filter as well. Before data extraction like if you are interested in email scraping will work as &lt;a href="https://www.ahmadsoftware.com/AnysiteScraper/10/yellowpages-leads-scraper.html"&gt;yellow pages email extractor&lt;/a&gt; which will only extract yellow pages emails with its personalized function.&lt;br&gt;
Main advantages of Yellow pages Leads Scraper:&lt;br&gt;
• Extract contact details and initiate email and telemarketing for your business.&lt;br&gt;
• Develop your business opportunities by maintaining direct relationships with potential clients.&lt;br&gt;
• Achieve a high return on investment by eliminating business opportunities.&lt;br&gt;
• Export all data to an Excel spreadsheet or CSV form.&lt;br&gt;
• Earn money selling leads to telemarketers. Main features of Yellow pages Leads Scraper:&lt;br&gt;
• Have a desktop application with the Chrome browser&lt;br&gt;
• apply filters on the data, location, and keywords fields.&lt;br&gt;
• Automatically recover unsaved data,&lt;br&gt;
• Support on X road bases.&lt;/p&gt;

&lt;p&gt;Yellow Pages Extractor supports yellow pages directories from different countries such as the United States, Canada, Australia, India, and New Zealand. You are not required to purchase the license for each country's website as you can extract data from the websites of all these countries.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>python</category>
      <category>github</category>
      <category>news</category>
    </item>
    <item>
      <title>TestKube 0.6.0</title>
      <author>Ole Lensmar</author>
      <pubDate>Tue, 26 Oct 2021 07:16:30 +0000</pubDate>
      <link>https://dev.to/olensmar/testkube-06-4jhc</link>
      <guid>https://dev.to/olensmar/testkube-06-4jhc</guid>
      <description>&lt;p&gt;We're happy to announce the version 0.6.0 of TestKube - an open-source test execution framework for Kubernetes. TestKube currently supports the execution of&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://kubeshop.github.io/testkube/executor-postman/"&gt;Postman collections&lt;/a&gt; for testing your microservices/APIs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://kubeshop.github.io/testkube/executor-cypress/"&gt;Cypress tests&lt;/a&gt; for testing your web UIs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://kubeshop.github.io/testkube/executor-curl/"&gt;Curl commands&lt;/a&gt; for basic health/functional testing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a very rudimentary dashboard for monitoring test executions and results - a demo version is running at &lt;a href="https://demo.testkube.io"&gt;https://demo.testkube.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The project docs are at &lt;a href="https://kubeshop.github.io/testkube/"&gt;https://kubeshop.github.io/testkube/&lt;/a&gt; - including installation instructions, etc.&lt;/p&gt;

&lt;p&gt;The main GitHub repo is at &lt;a href="https://github.com/kubeshop/testkube/"&gt;https://github.com/kubeshop/testkube/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TestKube is still pretty early in its development, but the long term vision is to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Avoid vendor lock-in for test orchestration and execution in CI/CD pipelines&lt;/li&gt;
&lt;li&gt;Make it easy to orchestrate and execute any kinds of tests without having to wrap them in docker-images or providing external network access&lt;/li&gt;
&lt;li&gt;Make it possible to decouple test execution from build processes&lt;/li&gt;
&lt;li&gt;Centralise all test results in a consistent format for "actionable QA analytics"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We would love to get your feedback; could this fit into your testing activities for applications running under kubernetes? If no - why not? If yes - what can we do to make it even better?&lt;/p&gt;

&lt;p&gt;Great thanks in advance!&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>testing</category>
      <category>postman</category>
      <category>cypress</category>
    </item>
    <item>
      <title>Dev de Direita</title>
      <author>Jean Carlo Nascimento</author>
      <pubDate>Tue, 26 Oct 2021 07:03:02 +0000</pubDate>
      <link>https://dev.to/suissa/dev-de-direita-89b</link>
      <guid>https://dev.to/suissa/dev-de-direita-89b</guid>
      <description>&lt;p&gt;Se vc é DEV e de Direita.&lt;br&gt;
PROVO Q VC EH IDIOTA.&lt;/p&gt;

&lt;p&gt;Quer refutar sua burrice?&lt;br&gt;
POR FAVOR!!! Tente me refutar.&lt;/p&gt;

&lt;p&gt;Pq eu nem comecei a destruir suas ideias.&lt;/p&gt;

&lt;p&gt;Seja INTELIGENTE e tente defender o Bolsonaro!!!&lt;/p&gt;

&lt;p&gt;DUVIDOOOOOOOOO q alguém consiga.&lt;/p&gt;

&lt;p&gt;ps: vc pode ser o MAIS inteligente possível, o q duvido; então usa  essa inteligência pra DEFENDER O PIOR PRESIDENTE DO BRASIL!&lt;br&gt;
ps2: NAO EXISTE UMA PESSOA Q CONSIGA ESSA FAÇANHA!&lt;/p&gt;

</description>
      <category>burro</category>
      <category>idiota</category>
      <category>retardado</category>
      <category>filhodeumaputa</category>
    </item>
    <item>
      <title>Day 12: Showing user location on embedded Google Maps (with Geolocation API and React)</title>
      <author>Masa Kudamatsu</author>
      <pubDate>Tue, 26 Oct 2021 06:54:35 +0000</pubDate>
      <link>https://dev.to/masakudamatsu/day-12-showing-user-location-on-embedded-google-maps-with-geolocation-api-and-react-128j</link>
      <guid>https://dev.to/masakudamatsu/day-12-showing-user-location-on-embedded-google-maps-with-geolocation-api-and-react-128j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;To create a web app that shows the user's location on embedded Google Maps with React: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a state variable that stores an instance of Google Maps, and pass this state to a button component as its prop (Section 1).&lt;/li&gt;
&lt;li&gt;Once the button is clicked, use Geolocation API to retrieve location data from the user's device, and execute the &lt;code&gt;setCenter()&lt;/code&gt; method of Google Maps JavaScript API to snap the map to the user's location (Section 2).&lt;/li&gt;
&lt;li&gt;To mark the user's location on the map, use &lt;code&gt;google.maps.Marker()&lt;/code&gt; method of Google Maps JavaScript API (Section 3).&lt;/li&gt;
&lt;li&gt;To show the range of location data error, use &lt;code&gt;google.maps.Circle()&lt;/code&gt; method to draw a circle whose radius is set in meters (Section 4).&lt;/li&gt;
&lt;li&gt;To handle Geolocation API errors, update the UI state for each error case (Section 5.3).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In doing so, we need to use React's &lt;code&gt;useRef&lt;/code&gt; hook to retain the maker for the user's location across the re-rendering of React components, a lesser-known technique of making a React app (Section 3.2).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Showing the user's location on the map is an important feature of &lt;em&gt;My Ideal Map App&lt;/em&gt;, a web app that I'm building to improve the user experiences of Google Maps. It allows the user to discover which of their saved places (e.g., cafes that they always wanted to go) are close enough to visit now (see &lt;a href="https://dev.to/masakudamatsu/creating-saas-to-solve-my-own-problem-4gk9"&gt;&lt;strong&gt;Day 1 of this blog series&lt;/strong&gt;&lt;/a&gt; for detail). &lt;/p&gt;

&lt;p&gt;Unlike Google Maps iOS/Android app, however, a web app cannot (and should not try to) show the user's location immediately after the user accesses the app (see &lt;a href="https://dev.to/masakudamatsu/day-11-learning-about-web-app-limitations-on-location-services-3gdp"&gt;&lt;strong&gt;Day 11 of this blog series&lt;/strong&gt;&lt;/a&gt; for detail). &lt;/p&gt;

&lt;p&gt;The second best option is therefore to show the user's location only after the user taps a button on the screen. &lt;/p&gt;

&lt;p&gt;How to implement such a feature is well-described in the code snippet provided by &lt;a href="https://developers.google.com/maps/documentation/javascript/geolocation"&gt;Google Maps Platform documentation&lt;/a&gt;. But it is for vanilla JavaScript. I'm using React (Next.js, to be more exact) to build &lt;em&gt;My Ideal Map App&lt;/em&gt;. And I've gone through a handful of sticking points due to how React works.&lt;/p&gt;

&lt;p&gt;For those of you who also create a React app with embedded Google Maps, let me share with you what I have learned to show the user's location on the map.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h3&gt;

&lt;p&gt;This article will create an app like &lt;a href="https://4aa36604.mima.pages.dev/"&gt;this demo&lt;/a&gt; hosted on &lt;a href="https://pages.cloudflare.com/"&gt;Cloudflare Pages&lt;/a&gt;. Maybe you want to check it out before reading the rest of this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-setting-up"&gt;
  &lt;/a&gt;
  1. Setting up
&lt;/h2&gt;

&lt;p&gt;Let me first quickly go through how to embed Google Maps and to render a button over it. &lt;/p&gt;

&lt;p&gt;Write the component for the index page (or  &lt;code&gt;pages/index.js&lt;/code&gt;  in Next.js) as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// pages/index.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;LocatorButton&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/LocatorButton&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/Map&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;HomePage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;LocatorButton&lt;/span&gt; &lt;span class="na"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Map&lt;/span&gt; &lt;span class="na"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setMapObject&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;HomePage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;mapObject&lt;/code&gt; state variable will store an instance of the embedded Google Maps. The &lt;code&gt;&amp;lt;Map&amp;gt;&lt;/code&gt; component will embed Google Maps, pass it to &lt;code&gt;pages/index.js&lt;/code&gt; by executing the &lt;code&gt;setMapObject()&lt;/code&gt; method. Then the &lt;code&gt;pages/index.js&lt;/code&gt; will hand it over to the &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; which will mark the user's current location on the embedded Google Maps.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;Map&amp;gt;&lt;/code&gt; component embeds Google Maps with the following code (if the code below is perplexing, see my blog post (&lt;strong&gt;&lt;a href="https://dev.to/masakudamatsu/3-gotchas-of-google-maps-api-when-used-with-next-js-and-eslint-p7e"&gt;Kudamatsu 2021&lt;/a&gt;&lt;/strong&gt;) in which I explain how to embed Google Maps with Next.js):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// components/Map.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Loader&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@googlemaps/js-api-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prop-types&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Specifying HTML element to which Google Maps will be embeded &lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;googlemap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Loading Google Maps JavaScript API&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Loader&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_API_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;weekly&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Setting parameters for embedding Google Maps&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;34.9988127&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;135.7674863&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buttonsDisabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;fullscreenControl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;mapTypeControl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;streetViewControl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;zoomControl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="c1"&gt;// Embedding Google Maps&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;googlemap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;initialView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;buttonsDisabled&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// NOTE&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;googlemap&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;propTypes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isRequired&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;What's important for this article is the line commented with &lt;code&gt;"NOTE"&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This passes the embedded Google Maps as a JavaScript object up to the &lt;code&gt;pages/index.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This way, the &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component can access to the embedded Google Maps as its &lt;code&gt;mapObject&lt;/code&gt; prop:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// components/LocatorButton.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prop-types&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LocatorButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;!--&lt;/span&gt; &lt;span class="na"&gt;Insert&lt;/span&gt; &lt;span class="na"&gt;the&lt;/span&gt; &lt;span class="na"&gt;button&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt; &lt;span class="na"&gt;image&lt;/span&gt; &lt;span class="err"&gt;--&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  );
};

LocatorButton.propTypes = &lt;span class="si"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isRequired&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="si"&gt;}&lt;/span&gt;;

export default LocatorButton;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where I use &lt;code&gt;PropTypes&lt;/code&gt; to define the type of the &lt;code&gt;mapObject&lt;/code&gt; prop (see &lt;a href="https://reactjs.org/docs/typechecking-with-proptypes.html"&gt;React documentation&lt;/a&gt; for detail on &lt;code&gt;PropTypes&lt;/code&gt;). &lt;/p&gt;

&lt;p&gt;Now we're ready to mark the user's current location on the embedded Google Maps.&lt;/p&gt;



&lt;p&gt;Footnote: I use a state variable to pass &lt;code&gt;mapObject&lt;/code&gt; from &lt;code&gt;Map&lt;/code&gt; component to &lt;code&gt;LocatorButton&lt;/code&gt; component. The use of a state variable, however, causes the re-rendering of the entire app once &lt;code&gt;mapObject&lt;/code&gt; changes from its initial value of &lt;code&gt;null&lt;/code&gt; to an instance of Google Maps. This is unnecessary re-rendering, because no part of the UI changes after the map is loaded. It's something I need to investigate in the future.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-snapping-map-to-user-location"&gt;
  &lt;/a&gt;
  2. Snapping map to user location
&lt;/h2&gt;

&lt;p&gt;Showing the user's location on a map means two things: (1) marking the location on the map and (2) snapping the map to it. Let me first tackle the second “snapping” part, because it is relatively simple. &lt;/p&gt;

&lt;p&gt;Let's start by adding a click handler to the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LocatorButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
    &lt;span class="c1"&gt;// To be defined below        // ADDED&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;                              &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
      &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getUserLocation&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;   &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;!--&lt;/span&gt; &lt;span class="na"&gt;Insert&lt;/span&gt; &lt;span class="na"&gt;the&lt;/span&gt; &lt;span class="na"&gt;button&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt; &lt;span class="na"&gt;image&lt;/span&gt; &lt;span class="err"&gt;--&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  );
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This is the standard way of adding an event hander in React (see &lt;a href="https://reactjs.org/docs/handling-events.html"&gt;React documentation&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Then we define the &lt;code&gt;getUserLocation()&lt;/code&gt; function as follows.&lt;/p&gt;

&lt;p&gt;First up, handle those legacy browsers that do not support &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API"&gt;Geolocation API&lt;/a&gt;, a web API that allows the browser to access to the location data in the user's device. Following the suggestion by &lt;a href="https://developers.google.com/web/fundamentals/native-hardware/user-location/#browser_support"&gt;Kinlan (2019)&lt;/a&gt;, I use the feature detection technique to handle those browsers:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// code for showing the user's location&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// code for legacy browsers&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In Section 5.3 below, I'll briefly discuss how to handle those legacy browsers.&lt;/p&gt;

&lt;p&gt;Then, for those browsers that do support Geolocation API, I retrieve the user's current location data from their device by calling the &lt;code&gt;getCurrentPosition()&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// ADDED FROM HERE &lt;/span&gt;
      &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// code for processing user location data           &lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="c1"&gt;// ADDED UNTIL HERE&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// code for legacy browsers&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It's a bit tricky to understand how the &lt;code&gt;getCurrentPosition()&lt;/code&gt; method works. Here's my understanding (see &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API/Using_the_Geolocation_API#getting_the_current_position"&gt;MDN Web Docs&lt;/a&gt; for more proper explanation). &lt;/p&gt;

&lt;p&gt;When it runs, it retrieves the user location data from their device. This is done &lt;em&gt;asynchronously&lt;/em&gt;: it won't prevent the rest of the code from running immediately after. Once the location data is obtained, it's passed to a function specified as the argument for &lt;code&gt;getCurrentPosition()&lt;/code&gt;. In the above code, this data is given the name of &lt;code&gt;position&lt;/code&gt;. Taking &lt;code&gt;position&lt;/code&gt; as an argument, this function will be executed.&lt;/p&gt;

&lt;p&gt;The user location data takes the form of a JavaScript object formally called the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPosition"&gt;&lt;code&gt;GeolocationPosition&lt;/code&gt; interface&lt;/a&gt;, which has a property called &lt;code&gt;coords&lt;/code&gt;. This &lt;code&gt;coords&lt;/code&gt; property in turn stores the user's location coordinates as its own &lt;code&gt;latitude&lt;/code&gt; and &lt;code&gt;longitude&lt;/code&gt; properties. &lt;/p&gt;

&lt;p&gt;So I store the coordinates of the user's location as a JavaScript object called &lt;code&gt;userLocation&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;            &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
          &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
          &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;                                &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// code for legacy browsers&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;I use property names &lt;code&gt;lat&lt;/code&gt; and &lt;code&gt;lng&lt;/code&gt; because that's how Google Maps JavaScript API refers to the coordinates of locations (known as &lt;a href="https://developers.google.com/maps/documentation/javascript/reference/coordinates#LatLng"&gt;&lt;code&gt;LatLng&lt;/code&gt; class&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Now we're ready to use the &lt;code&gt;setCenter()&lt;/code&gt; method from Google Maps JavaScript API to snap the map to the user's current location:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setCenter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// code for legacy browsers&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where &lt;code&gt;mapObject&lt;/code&gt;, if you remember, refers to the embedded Google Maps, passed as a prop to the &lt;code&gt;LocatorButton&lt;/code&gt; component (see Section 1 above if your memory slips).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-marking-users-current-location"&gt;
  &lt;/a&gt;
  3. Marking user's current location
&lt;/h2&gt;

&lt;p&gt;Now it's time to mark the user's location on the map. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#31-marker"&gt;
  &lt;/a&gt;
  3.1 Marker
&lt;/h3&gt;

&lt;p&gt;As a marker, I imitate what Google Maps app does: a white-rimmed circle in Google's brand blue:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sP2Hmaev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bwd6d00ra6vv1ya1vsc.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sP2Hmaev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bwd6d00ra6vv1ya1vsc.jpeg" alt="White-rimmed blue circle shown on Google Maps"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A screenshot of Google Maps app in which the blue dot indicates the user's current location&lt;/strong&gt; (image source: &lt;a href="https://support.google.com/maps/thread/71969187/my-google-map-cannot-show-direction-direction-pointer-on-blue-dot-is-missing-what-can-i-do?hl=en"&gt;Google Maps Help&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;I've learned about how to render this particular type of the blue dot from &lt;a href="https://github.com/ChadKillingsworth/geolocation-marker/blob/master/src/geolocation-marker.js"&gt;the source code of Geolocation Marker&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blueDot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;fillColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;fillOpacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SymbolPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CIRCLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;strokeColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;white 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;strokeWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where I define the &lt;code&gt;color&lt;/code&gt; object as design tokens in a separate file:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// designtokens.js&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`#4285F4`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;white 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`rgb(255,255,255)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;I prefer this way of setting color because the color code itself doesn't tell me anything about the reason behind the color choice. For example, the color code &lt;code&gt;#4285F4&lt;/code&gt; is the blue used in Google's logo (source: &lt;a href="https://usbrandcolors.com/google-colors/"&gt;U.S. Brand Colors&lt;/a&gt;). So I call it &lt;code&gt;google-blue 100&lt;/code&gt; where &lt;code&gt;100&lt;/code&gt; refers to the opacity of 1. (If I need to use semi-transparent Google Blue, I can then call it &lt;code&gt;google-blue 50&lt;/code&gt;, for example.)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#32-adding-marker-to-map"&gt;
  &lt;/a&gt;
  3.2 Adding marker to map
&lt;/h3&gt;

&lt;p&gt;With Google Maps JavaScript API, we can add a marker to the map as follows. First, create a marker as a JavaScript object with the &lt;code&gt;google.maps.Marker()&lt;/code&gt; method. Then, add the Marker object to the map with its own method &lt;code&gt;setMap()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sounds simple. But it actually isn't, because I'm using React to build the app.&lt;/p&gt;

&lt;p&gt;NOTE: If you only want to know the code that works, skip to the sub-section entitled "Fourth Attempt" below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First Attempt&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My first attempt didn't work properly. I created a Marker object:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Don't code like this&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; 
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blueDot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are here!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where the &lt;code&gt;icon&lt;/code&gt; property refers to the marker icon (which I have defined as &lt;code&gt;blueCircle&lt;/code&gt;), &lt;code&gt;position&lt;/code&gt; to the coordinates of the user's current position (which I have defined as &lt;code&gt;userLocation&lt;/code&gt;), and &lt;code&gt;title&lt;/code&gt; to the text to be shown when the user hovers over the marker. (See &lt;a href="https://developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions"&gt;Google Maps Platform documentation&lt;/a&gt; for all the options available for the Marker object.)&lt;/p&gt;

&lt;p&gt;Then, I added the Marker object to the embedded map:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Don't code like this&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; 
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blueDot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are here!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where the &lt;code&gt;mapObject&lt;/code&gt; refers to the embedded Google Maps, passed as a prop to the &lt;code&gt;LocatorButton&lt;/code&gt; component (as explained in Section 1 above).&lt;/p&gt;

&lt;p&gt;This code caused a problem when the user taps the locator button again. In this situation, the above code adds a new marker at the current location &lt;em&gt;without&lt;/em&gt; removing the marker at the previous location.&lt;/p&gt;

&lt;p&gt;Which means we first need to &lt;em&gt;remove&lt;/em&gt; the outdated marker before adding the updated one. To do so, we need to use the Marker object's method &lt;code&gt;setMap(null)&lt;/code&gt;. Without running this, we would be adding more and more markers to the map.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Second Attempt&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My second attempt was as follows (which turned out to be not desirable): I checked whether we have already created the Marker object. If so, I'd remove the marker from the map:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Don't code like this&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then, I created a new marker tied to the user's current position:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Don't code like this&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blueDot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are here!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This code worked fine, but once I started using the &lt;code&gt;useState()&lt;/code&gt; hook  inside the &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component in order to change the UI in response to user actions (see &lt;a href="https://dev.to/masakudamatsu/day-13-flashing-tapped-button-while-user-is-waiting-with-react-and-styled-components-1ii4"&gt;&lt;strong&gt;Day 13 of this blog series&lt;/strong&gt;&lt;/a&gt;), the previous marker wasn't removed when the user tapped the button for the second time.&lt;/p&gt;

&lt;p&gt;Why? Because using the &lt;code&gt;useState()&lt;/code&gt; hook causes the re-rendering of the &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component, which means the entire code gets re-run, including&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This means that every time the component gets re-rendered, the &lt;code&gt;marker&lt;/code&gt; variable gets reset, losing the data on the previous user location. That's why the previous marker fails to be removed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Third Attempt&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My initial work around for this rerendering problem was to define &lt;code&gt;marker&lt;/code&gt; outside the &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component (which worked, but turned out to be not the best practice for building a React app):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// This code works, but not the best practice&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LocatorButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blueDot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are here!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This way, the &lt;code&gt;marker&lt;/code&gt; variable will be retained even when the &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component gets re-rendered. So the data on the user's previous location won't be lost, and the previous marker will get removed.&lt;/p&gt;

&lt;p&gt;But then, while I was working for dealing with another issue (see &lt;strong&gt;Day 14 of this blog series&lt;/strong&gt;), I learned about how to use the &lt;code&gt;useRef()&lt;/code&gt; hook to retain the data across the re-rendering of React components.&lt;/p&gt;

&lt;p&gt;Sounds like a solution for removing the previous marker on the user location!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fourth Attempt&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So I've revised the code as follows:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;// ADDED&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LocatorButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;          &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
      &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
    &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blueDot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are here!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;First, I define the &lt;code&gt;marker&lt;/code&gt; variable by using the &lt;code&gt;useRef&lt;/code&gt; hook. Then, I replace &lt;code&gt;marker&lt;/code&gt; in the previous version of the code with &lt;code&gt;marker.current&lt;/code&gt;. This is because the &lt;code&gt;useRef&lt;/code&gt; hook creates an object whose &lt;code&gt;current&lt;/code&gt; property will keep the value across the re-rendering of components (see &lt;a href="https://reactjs.org/docs/hooks-reference.html#useref"&gt;React documentation&lt;/a&gt; for detail). It also makes the code more readable: we're now talking about the &lt;em&gt;current&lt;/em&gt; value of &lt;code&gt;marker&lt;/code&gt; at each run of the re-rendering, rather than &lt;code&gt;marker&lt;/code&gt; which sounds like a constant value.&lt;/p&gt;

&lt;p&gt;Now I ask myself: what's the difference between &lt;code&gt;useRef&lt;/code&gt; and defining a variable outside the component?&lt;/p&gt;

&lt;p&gt;Googling this question immediately got me to &lt;a href="https://stackoverflow.com/a/57444430/11847654"&gt;Vash (2019)&lt;/a&gt;, who explains the difference with an example code. In a nutshell, the difference emerges if I would use more than one &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component. By using &lt;code&gt;useRef&lt;/code&gt;, each instance of the component keeps track of its own value. By defining a variable outside the component, however, all the instances of the component share the same value, which can lead to a weird situation as in &lt;a href="https://codesandbox.io/s/useref-vs-variable-scegg"&gt;this CodeSandbox example by Vash (2019)&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;For my case, it doesn't matter as I won't use more than one &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component, at least for now. But maybe I will. We never know. So it is safe to use &lt;code&gt;useRef&lt;/code&gt; to keep track of data across re-rendering.   &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-showing-location-error-range"&gt;
  &lt;/a&gt;
  4. Showing location error range
&lt;/h2&gt;

&lt;p&gt;The GPS functionality of devices cannot perfectly pinpoint the user's location. To indicate the range of error on the map, I want to add a semi-transparent blue circle around the blue circle, as Google Maps app does:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sP2Hmaev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bwd6d00ra6vv1ya1vsc.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sP2Hmaev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bwd6d00ra6vv1ya1vsc.jpeg" alt="White-rimmed blue circle shown on Google Maps"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A screenshot of Google Maps app in which the semi-transparent blue circle shows the range of error on the user's current location&lt;/strong&gt; (image source: &lt;a href="https://support.google.com/maps/thread/71969187/my-google-map-cannot-show-direction-direction-pointer-on-blue-dot-is-missing-what-can-i-do?hl=en"&gt;Google Maps Help&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;To do so, we first need to extract the GPS information on the range of error. The Geolocation API allows us to get this piece of information in the following way:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt; 
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errorRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where &lt;code&gt;position.coords.accuracy&lt;/code&gt; gives the radius &lt;em&gt;in meters&lt;/em&gt; of a circle within which the user's current location falls 95 times out of 100 cases (source: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/GeolocationCoordinates/accuracy"&gt;MDN Web Docs&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;To draw this circle, however, we cannot use the Marker object, which doesn't allow us to set its size &lt;em&gt;in meter&lt;/em&gt;. It took a while for me to figure out how to work around this limitation, but, again from &lt;a href="https://github.com/ChadKillingsworth/geolocation-marker/blob/master/src/geolocation-marker.js"&gt;the source code of Geolocation Marker&lt;/a&gt;, I've finally learned that the Circle object does the job (see &lt;a href="https://developers.google.com/maps/documentation/javascript/shapes#circles"&gt;Google Maps Platform documentation&lt;/a&gt; for detail).&lt;/p&gt;

&lt;p&gt;The Circle object works in a similar fashion to the Marker object. So I first check if it's already been added to the map. If so, remove it from the map:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt; 
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errorRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;           &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
    &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;                                       &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then, define a new Circle object with the &lt;code&gt;google.maps.Circle()&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt; 
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errorRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// ADDED FROM HERE&lt;/span&gt;
  &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fillColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue-dark 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;fillOpacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;errorRange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;strokeColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue-light 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;strokeOpacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;strokeWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;zIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="c1"&gt;// ADDED UNTIL HERE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where the &lt;code&gt;center&lt;/code&gt; property refers to the center of the circle (which is set to be &lt;code&gt;userLocation&lt;/code&gt;, the user's current location), and &lt;code&gt;radius&lt;/code&gt; to the radius of the circle (which is set to be &lt;code&gt;errorRange&lt;/code&gt; defined above). The &lt;code&gt;zIndex&lt;/code&gt; property makes sure that the circle will be overlaid on the blue circle. The other properties define the appearance of the circle (see &lt;a href="https://developers.google.com/maps/documentation/javascript/reference/polygon#CircleOptions"&gt;Google Maps Platform documentation&lt;/a&gt; for all the options available for Circle objects) where I define the colors as:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// designtokens.js&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`#4285F4`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue-dark 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`#61a0bf`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue-light 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`#1bb6ff`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;white 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`rgb(255,255,255)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;These color codes are borrowed from &lt;a href="https://github.com/ChadKillingsworth/geolocation-marker/blob/master/src/geolocation-marker.js"&gt;the source code of Geolocation Marker&lt;/a&gt;. What's nice about putting all the color codes together in one file is that we can immediately start reconsidering the change of the color palette. Maybe I want to redefine the light and dark variants of &lt;code&gt;google-blue&lt;/code&gt;. If so, I can just look at this file, rather than searching through the entire codebase.&lt;/p&gt;

&lt;p&gt;Finally, I add the circle to the map:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt; 
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errorRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fillColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue-dark 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;fillOpacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;errorRange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;strokeColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue-light 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;strokeOpacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;strokeWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;zIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#5-improving-ux"&gt;
  &lt;/a&gt;
  5. Improving UX
&lt;/h2&gt;

&lt;p&gt;The code written so far does the basic job to tell the user where they are on the map. There are a few more things to do, however, for enhancing the user experiences.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#51-using-cache-up-to-one-second"&gt;
  &lt;/a&gt;
  5.1 Using cache up to one second
&lt;/h3&gt;

&lt;p&gt;First, we can use the cached GPS information to make it faster to show the current location. I think 1 second is a reasonable amount of time to keep the cache. Humans walk about 1.4 meters per second (I cannot find the exact source for this data, but many say it's about 1.4 meters per second). The range of location error with my iPhone SE (2nd Gen.) is about 12 meters. Using the location data one second ago, therefore, won't terribly mislocate the user on the map. &lt;/p&gt;

&lt;p&gt;To allow the Geolocation API to use the cached GPS information within the past one second, I add an optional parameter for &lt;code&gt;getCurrentPosition()&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// All the code descirbed in this article so far&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;maximumAge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where the &lt;code&gt;maximumAge&lt;/code&gt; option refers to the number of milliseconds to cache the location data (source: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/getCurrentPosition"&gt;MDN Web Docs&lt;/a&gt;).    &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#52-flashing-the-button-while-waiting"&gt;
  &lt;/a&gt;
  5.2 Flashing the button while waiting
&lt;/h3&gt;

&lt;p&gt;Second, we need to tell the user that the app is working hard to locate where they are, while they are waiting for their location to be shown on the map after tapping the button. It can take a while. If there's no UI change during this waiting time, the user may misunderstand that the app gets frozen or the button doesn't function at all.&lt;/p&gt;

&lt;p&gt;To tell the user that the app is working, we can make the trigger button keep flashing until the user's location is shown on the map.&lt;/p&gt;

&lt;p&gt;The implementation of this feature requires a long explanation, and it's rather a different topic from the one in this article. So it's described in &lt;strong&gt;Day 13 of this blog series&lt;/strong&gt;:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/masakudamatsu" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ecVAc1ot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--PLbsBsYv--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/522915/238cfd20-65e5-4b05-8803-2c4c18f29192.jpeg" alt="masakudamatsu"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/masakudamatsu/day-13-flashing-tapped-button-while-user-is-waiting-with-react-and-styled-components-1ii4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Day 13: Flashing tapped button while user is waiting (with React and Styled Components)&lt;/h2&gt;
      &lt;h3&gt;Masa Kudamatsu ・ Oct 26 ・ 11 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#styledcomponents&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cssanimation&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#53-error-handling"&gt;
  &lt;/a&gt;
  5.3 Error handling
&lt;/h3&gt;

&lt;p&gt;There are four possible errors when we use Geolocation API. When these errors occur, we should tell the user what happens, why it happens, and how they can deal with the error (&lt;a href="https://freshsparks.com/user-experience-tips-best-error-messages/"&gt;Gregory 2021&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I'm still working on exactly how to show these error messages for the user. Making such a dialog in an accessible way is quite a bit of work (see &lt;a href="https://www.smashingmagazine.com/2021/07/accessible-dialog-from-scratch/"&gt;Giraudel 2021&lt;/a&gt;). In this article, I only describe how to change the UI state to show error dialogs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Geolocation API unsupported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First, the user's browser may not support Geolocation API. This is unlikely to happen in 2021: the browsers supporting Geolocation API account for 96.78% of global page views in September 2021 (&lt;a href="https://caniuse.com/mdn-api_geolocation"&gt;Can I Use 2021&lt;/a&gt;). But just in case.&lt;/p&gt;

&lt;p&gt;I set the &lt;code&gt;status&lt;/code&gt; variable to be &lt;code&gt;geolocationDenied&lt;/code&gt; in this case:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;maximumAge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;geolocationDenied&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then show a dialog explaining what happens if &lt;code&gt;status&lt;/code&gt; takes the value of &lt;code&gt;geolocationDenied&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Location service permission denied&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Second, the user may have disabled location services with their browser/OS. This happens either immediately after pressing the button (because the user has turned off the location services before) or after the user is asked for permission upon the button click and responds with no. &lt;/p&gt;

&lt;p&gt;This error is likely to happen because not an ignorable number of people are concerned about privacy on the web (e.g., &lt;a href="https://www.fastcompany.com/90454921/apple-and-googles-tough-new-location-privacy-controls-are-working"&gt;Newman 2020&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;If Geolocation API is unable to retrieve user location data because of the disabled location services, the &lt;code&gt;getCurrentPosition()&lt;/code&gt; method returns the error code equal to 1 (source: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError"&gt;MDN Web Docs&lt;/a&gt;). So we can create an error-handling function and specify it as the optional argument for &lt;code&gt;getCurrentPosition()&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="c1"&gt;// ADDED FROM HERE&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleGeolocationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;permissionDenied&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="c1"&gt;// ADDED UNTIL HERE&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;                               &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
        &lt;span class="nx"&gt;handleGeolocationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;maximumAge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;}));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;geolocationDenied&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the Geolocation API error code is 1, then we set the value of &lt;code&gt;status&lt;/code&gt; to be &lt;code&gt;permissionDenied&lt;/code&gt;. We can then render a dialog explaining what happens to the user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Geolocation API failure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Third, the Geolocation API may fail to obtain the user's location data from their device for an unknown reason. It's not clear to me when this can happen. But in this case, the Geolocation API error code is 2. So we can revise the &lt;code&gt;handleGeolocationError&lt;/code&gt; function as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleGeolocationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;permissionDenied&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;      &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
        &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;positionUnavailable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Render the corresponding dialog if the &lt;code&gt;status&lt;/code&gt; takes the value of &lt;code&gt;positionUnavailable&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Geolocation API not responding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Finally, there may be a situation where Geolocation API cannot obtain user location data for a long period of time. If this happens, with the current setting, the user cannot tell whether the app is functioning or not.&lt;/p&gt;

&lt;p&gt;We should tell the user what is going on. &lt;a href="https://developers.google.com/web/fundamentals/native-hardware/user-location/"&gt;Kinlan (2019)&lt;/a&gt; recommends setting a timeout of 10 seconds after which the user gets notified that it took more than 10 seconds to retrieve the location data. To implement this feature, we first need to add &lt;code&gt;timeout&lt;/code&gt; as an additional optional parameter of the &lt;code&gt;getCurrentPosition()&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;handleGeolocationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;maximumAge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will make Geolocation API return the error code of 3 if there is no response after 10,000 milliseconds (i.e., 10 seconds). So I can revise the &lt;code&gt;handleGeolocationError()&lt;/code&gt; as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleGeolocationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;permissionDenied&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;positionUnavailable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;timeout&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then render the corresponding dialog when &lt;code&gt;status&lt;/code&gt; takes the value of &lt;code&gt;timeout&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;With the code explained in this article (and &lt;a href="https://dev.to/masakudamatsu/day-13-flashing-tapped-button-while-user-is-waiting-with-react-and-styled-components-1ii4"&gt;&lt;strong&gt;Day 13 of this blog series&lt;/strong&gt;&lt;/a&gt; for flashing the button), I've uploaded &lt;a href="https://4aa36604.mima.pages.dev/"&gt;a demo app&lt;/a&gt; to Cloudflare Pages. Try to click the button. When asked for permission to use location services, answer both yes and no, to see how the UI changes. &lt;/p&gt;

&lt;p&gt;If you notice something weird, file a bug report by posting a comment to this article. I'll apprecaite your help to improve &lt;em&gt;My Ideal Map App&lt;/em&gt;! ;-)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-step"&gt;
  &lt;/a&gt;
  Next step
&lt;/h2&gt;

&lt;p&gt;If &lt;em&gt;My Ideal Map App&lt;/em&gt; were a desktop app, it would be good enough to show the user's location each time the user clicks the button. However, the app is also meant to be used with a smartphone while the user is moving around in a city. It's more desirable for the app to keep track of the user location, updating the marker constantly. Next step is to implement such a feature.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;Can I Use (2021) “&lt;a href="https://caniuse.com/mdn-api_geolocation"&gt;Geolocation API&lt;/a&gt;”, &lt;em&gt;Can I Use?&lt;/em&gt;, accessed on Oct 25, 2021.&lt;/p&gt;

&lt;p&gt;Giraudel, Kitty (2021) “&lt;a href="https://www.smashingmagazine.com/2021/07/accessible-dialog-from-scratch/"&gt;Creating An Accessible Dialog From Scratch&lt;/a&gt;”, &lt;em&gt;Smashing Magazine&lt;/em&gt;, Jul 28, 2021.&lt;/p&gt;

&lt;p&gt;Gregory, Sonia (2021) “&lt;a href="https://freshsparks.com/user-experience-tips-best-error-messages/"&gt;Best Error Messages: 5 Tips For A User-Friendly Experience&lt;/a&gt;”, &lt;em&gt;FreshSparks&lt;/em&gt;, Sep 26, 2021 (last updated).&lt;/p&gt;

&lt;p&gt;Kinlan, Paul (2019) “&lt;a href="https://developers.google.com/web/fundamentals/native-hardware/user-location/"&gt;User Location&lt;/a&gt;”, &lt;em&gt;Web Fundamentals&lt;/em&gt;, Feb 12, 2019.&lt;/p&gt;

&lt;p&gt;Kudamatsu, Masa (2021) “&lt;a href="https://dev.to/masakudamatsu/3-gotchas-of-google-maps-api-when-used-with-next-js-and-eslint-p7e"&gt;4 Gotchas of embedding Google Maps with Next.js&lt;/a&gt;”, &lt;em&gt;Dev.to&lt;/em&gt;, Feb 12, 2021.&lt;/p&gt;

&lt;p&gt;Newman, Jared (2020) “&lt;a href="https://www.fastcompany.com/90454921/apple-and-googles-tough-new-location-privacy-controls-are-working"&gt;Apple and Google’s tough new location privacy controls are working&lt;/a&gt;”, &lt;em&gt;FastCompany&lt;/em&gt;, Jan 23, 2020.&lt;/p&gt;

&lt;p&gt;Vash, Dennis (2019) “&lt;a href="https://stackoverflow.com/a/57444430/11847654"&gt;&lt;code&gt;useRef&lt;/code&gt; will assign a reference for each component, while a variable defined outside a function component scope will only assign once...&lt;/a&gt;”, &lt;em&gt;Stack Overflow&lt;/em&gt;, Aug 10, 2019.&lt;/p&gt;

</description>
      <category>geolocation</category>
      <category>react</category>
      <category>googlemaps</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
