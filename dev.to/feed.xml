<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>September 2021: Azure SQL News Update</title>
      <author>Anna Hoffman</author>
      <pubDate>Wed, 08 Sep 2021 14:15:31 +0000</pubDate>
      <link>https://dev.to/azure/september-2021-azure-sql-news-update-4fim</link>
      <guid>https://dev.to/azure/september-2021-azure-sql-news-update-4fim</guid>
      <description>&lt;p&gt;Today and every Wednesday Data Exposed goes live at 9AM PT on &lt;a href="https://docs.microsoft.com/en-us/learn/tv/"&gt;LearnTV&lt;/a&gt;. Every 4 weeks, we’ll do a News Update. We’ll include product updates, videos, blogs, etc. as well as upcoming events and things to look out for. We’ve included an &lt;a href="https://bit.ly/2WtkHbm"&gt;iCal file&lt;/a&gt;, so you can add a reminder to tune in live to your calendar. If you missed the episode, you can find them all at &lt;a href="https://aka.ms/AzureSQLYT"&gt;https://aka.ms/AzureSQLYT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can read this blog to get all the updates and references mentioned in the show. Here’s the September  2021 update:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Product updates&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This month did not contain a ton of product-specific updates, however there is one that we highlighted on the show – the Public Preview announcement of the Azure SQL Migration extension in Azure Data Studio! For those of you that follow Data Exposed, &lt;a href="https://youtu.be/Quh8Ge3y3X0"&gt;you may have seen this already, Rajesh Setlem gave us a sneak peek&lt;/a&gt;. As part of this Public Preview announcement, the extension will support migrations for both online (for migrations that require minimal downtime) and offline (for migrations where downtime persists through the duration of the migration) modes. You can use the extension to migrate to either Azure SQL Managed Instance or SQL Server on Azure VMs. Mohamed Kabiruddin came on the show to tell us all about what this means and how it works. For more information, check the documentation (&lt;a href="https://aka.ms/azuresqlmigrationextension"&gt;https://aka.ms/azuresqlmigrationextension&lt;/a&gt;) or the release blog (&lt;a href="https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Faka.ms%2Fazuresqladsmigration&amp;amp;data=04%7C01%7CAnna.Hoffman%40microsoft.com%7Cca60d1a4c9e5435d047008d969a890db%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637656995131785772%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;amp;sdata=RkzQxaluxw%2F0ixJMaVbjlB5tpIrxnXcEkTZ6ka3CN7k%3D&amp;amp;reserved=0"&gt;https://aka.ms/azuresqladsmigration&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Not really a product update, but some serious product speed! We had SQL community member Henk van der Valk, founder of &lt;a href="https://www.fulldata.nl/"&gt;FullData&lt;/a&gt;, on the show to talk about ways to maximize performance of SQL Server running on Azure VMs. And when I say maximizing performance … I mean breaking world records, so this was a cool segment. You can see his full blog on the topic &lt;a href="https://www.fulldata.nl/blog/"&gt;here&lt;/a&gt; and you can contact Henk at &lt;a href="//mailto:info@fulldata.nl"&gt;info@fulldata.nl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Last but certainly not least, we had Niko Neugebaur on the show to talk about a blog series on &lt;a href="https://techcommunity.microsoft.com/t5/azure-sql/bg-p/AzureSQLBlog"&gt;Azure SQL Techcommunity&lt;/a&gt; where he breaks down fundamentals to understanding Azure SQL Managed Instance. I’ve really enjoyed getting hands on and following the blog series; last month Niko was featured as my pick of the month! You can find all the blogs at &lt;a href="https://aka.ms/sqlmi-howto"&gt;https://aka.ms/sqlmi-howto&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Videos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We continued to release new and exciting Azure SQL episodes this month. Here is the list, or you can just see the &lt;a href="https://microsoft.sharepoint.com/teams/SQLServerAdoption/Shared%20Documents/YouTube/Data%20Exposed%20News%20Blogs/aka.ms/dataexposedyt"&gt;playlist&lt;/a&gt; we created with all the episodes!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  [MVP Edition] Taiob Ali: Managing SQL Server Agent jobs with Notebook Jobs in Azure Data Studio&lt;/li&gt;
&lt;li&gt;  Alexandra Ciortea and Steven Marturano: Migrating to SQL: New Conversion Reports in SSMA (Ep. 7)&lt;/li&gt;
&lt;li&gt;  Pam Lahoud: Azure SQL VM: Get the best price-performance for your SQL Server workloads on Azure VM (Ep. 4)&lt;/li&gt;
&lt;li&gt;  David Pless: Azure SQL VM: Use Azure Monitor to Track VM Cache Health (Ep. 3)&lt;/li&gt;
&lt;li&gt;  Pam Lahoud: Azure SQL VM: What is SQL Server IaaS Extension (Ep. 2)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ve also had some great Data Exposed Live sessions. Subscribe to our &lt;a href="https://aka.ms/azuresqlyt"&gt;YouTube channel&lt;/a&gt; to see them all and get notified when we stream. Here are some of the recent live streams.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Deep Dive: Why and How Customers are Using Azure SQL Hyperscale, Denzil Ribeiro and Davide Mauri&lt;/li&gt;
&lt;li&gt;  Azure SQL Security: Network Security (Ep. 4), Rohit Nayak&lt;/li&gt;
&lt;li&gt;  Azure Data Studio Power Hour, Alan Yu, Drew Skwiers-Koballa, Julie Koesmarno, Udeesha Gautam, and Vasu Bhog&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As always, our team is busy writing blogs to share with you all. Blogs contain announcements, tips and tricks, deep dives, and more. Here’s the list I have of SQL-related topics you might want to check out.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Azure Blog, data-related

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://azure.microsoft.com/en-us/blog/microsoft-named-a-leader-in-the-forrester-wave-streaming-analytics-q2-2021/"&gt;Microsoft named a Leader in The Forrester Wave™: Streaming Analytics, Q2 2021&lt;/a&gt;, Jean-Sebastien Brunner&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://azure.microsoft.com/en-us/blog/discover-and-assess-aspnet-apps-atscale-with-azure-migrate/"&gt;Discover and assess ASP.NET apps at-scale with Azure Migrate&lt;/a&gt;, Vineet Vikram&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://azure.microsoft.com/en-us/blog/innovate-securely-with-azure/"&gt;Innovate securely with Azure&lt;/a&gt;, Scott Woodgate&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://azure.microsoft.com/en-us/blog/azure-government-top-secret-now-generally-available-for-us-national-security-missions/"&gt;Azure Government Top Secret now generally available for US national security missions&lt;/a&gt;, Tom Keane&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://azure.microsoft.com/en-us/blog/accelerate-application-modernization-with-azure-migrate-app-containerization/"&gt;Accelerate application modernization with Azure Migrate: App Containerization&lt;/a&gt;, Rahul Gupta&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://azure.microsoft.com/en-us/blog/5-reasons-to-attend-the-azure-data-governance-digital-event/"&gt;5 reasons to attend the Azure data governance digital event&lt;/a&gt;, Cindy Na&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;  SQL Server Tech Community

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://techcommunity.microsoft.com/t5/sql-server/released-microsoft-data-sqlclient-4-0-preview-1/ba-p/2685322"&gt;Released: Microsoft.Data.SqlClient 4.0 Preview 1&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://techcommunity.microsoft.com/t5/sql-server/sql-server-3rd-party-backend-for-django-v1-0-released/ba-p/2654239"&gt;SQL Server 3rd Party Backend for Django v1.0 Released&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;  Microsoft SQL Server Blog

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://cloudblogs.microsoft.com/sqlserver/2021/08/30/move-sql-server-licenses-without-software-assurance-to-azure/"&gt;Move SQL Server licenses without Software Assurance to Azure&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://cloudblogs.microsoft.com/sqlserver/2021/08/24/microsoft-at-data-platform-virtual-summit-2021/"&gt;Microsoft at Data Platform Virtual Summit 2021&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;  Azure SQL Tech Community

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://techcommunity.microsoft.com/t5/azure-sql/improved-columnstore-data-loading-using-query-store-hints/ba-p/2704677"&gt;Improved columnstore data loading using Query Store hints&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://techcommunity.microsoft.com/t5/azure-sql/azure-sql-managed-instance-introduction-to-sqlmiops/ba-p/2687265"&gt;Azure SQL Managed Instance – introduction to #SQLMIOPS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://techcommunity.microsoft.com/t5/azure-sql/how-to-determine-the-timestamp-of-the-last-sql-mi-failover/ba-p/2670361"&gt;How-to determine the timestamp of the last SQL MI failover&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://techcommunity.microsoft.com/t5/azure-sql/learn-how-azure-sql-works-with-azure-purview-on-at-the-azure/ba-p/2645462"&gt;Learn how Azure SQL works with Azure Purview on at the Azure Data Governance event on September 28&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://techcommunity.microsoft.com/t5/azure-sql/how-to-find-out-reserved-and-available-disk-space-on-sql-mi/ba-p/2636930"&gt;Reserved &amp;amp; available Disk Space information for Azure SQL MI&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;  Azure SQL Devs’ Corner

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://devblogs.microsoft.com/azure-sql/launch-build-serverless-full-stack-applications-in-azure/"&gt;LAUNCH: Build serverless, full stack applications in Azure&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Azure Database Support (SQL-related posts)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://techcommunity.microsoft.com/t5/azure-database-support-blog/troubleshooting-azure-active-directory-integrated-authentication/ba-p/2670162"&gt;Troubleshooting Azure Active Directory Integrated Authentication in Azure SQL&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://techcommunity.microsoft.com/t5/azure-database-support-blog/restore-database-across-servers-azure-sql-database-and-azure-sql/ba-p/2636181"&gt;Restore database across servers(Azure SQL Database and Azure SQL managed instance)- Azure Automation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://techcommunity.microsoft.com/t5/azure-database-support-blog/database-parameterization/ba-p/2672647"&gt;Database Parameterization&lt;/a&gt;&lt;span&gt;  &lt;/span&gt;&lt;/p&gt;


&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Upcoming events&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As always, there are a lot of events coming up this month. Here are a few to put on your calendar and register for from the Azure Data team:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;September 13-18:&lt;/strong&gt; &lt;a href="https://dataplatformgeeks.com/dps2021/microsoft-at-dps/"&gt;Data Platform Summit 2021&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;September 13-23:&lt;/strong&gt; &lt;a href="https://azuresummit.live/"&gt;Cloud Summit 2021&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;September 15&lt;/strong&gt;: &lt;a href="https://musiccitytech.com/"&gt;Music City Tech 2021&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;September 15:&lt;/strong&gt; &lt;a href="https://www.redhat.com/en/events/webinar/lower-sql-server-costs-with-operational-efficiencies"&gt;RedHat Webinar&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;September 16:&lt;/strong&gt; &lt;a href="https://www.meetup.com/cloud-data-driven/events/276201694"&gt;Cloud Data Driven User Group&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;September 28:&lt;/strong&gt; &lt;a href="https://azuredatagovernance.eventcore.com/auth/login"&gt;Maximize the Value of Your Data in the Cloud Digital event&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;September 29:&lt;/strong&gt; &lt;a href="https://datadrivencommunity.com/"&gt;Future Data Driven 2021&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;September 29&lt;/strong&gt;: &lt;a href="https://docs.microsoft.com/en-us/events/learntv/azure-serverless-conf-september-2021/"&gt;Azure Serverless Conf&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;In addition to these upcoming events, here’s the schedule for &lt;a href="https://aka.ms/dataexposedlive"&gt;Data Exposed Live&lt;/a&gt;:&lt;br&gt;&lt;br&gt;
&lt;strong&gt;September 8:&lt;/strong&gt; &lt;a href="https://youtu.be/PpyAnS7Rbd8"&gt;Ask the Experts: SQL Server on Azure Virtual Machine&lt;/a&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://bit.ly/2Wi19d7"&gt;Submit&lt;/a&gt; your questions today!
&lt;strong&gt;September 15:&lt;/strong&gt; &lt;a href="https://youtu.be/IImnbYDdugw"&gt;Deep Dive: Modernize your Oracle Workloads to Azure SQL&lt;/a&gt;
&lt;strong&gt;September 22:&lt;/strong&gt; &lt;a href="https://youtu.be/jCc6uBCOOfE"&gt;Deep Dive: Deploy IoT Solutions with Azure SQL Database&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Plus find new, on-demand Data Exposed episodes released every Thursday, 9AM PT at &lt;a href="https://aka.ms/dataexposedyt"&gt;https://aka.ms/dataexposedyt&lt;br&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Featured Microsoft Learn Module&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Learn with us! This month I highlighted the module: &lt;a href="https://docs.microsoft.com/learn/modules/build-full-stack-apps/"&gt;Build full stack applications with Azure Static Web Apps and Azure SQL Database&lt;/a&gt;. In the language of your choice, you’ll deploy an Azure Static Web App, which combines the power of Azure Functions and Azure Web Apps into one service managed by GitHub Actions. This application surfaces real-time bus data and geofences stored in an Azure SQL Database.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anna’s Pick of the Month&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This month I am highlighting Azure Serverless Conf which is happening in all time zones LIVE on September 29-30&lt;sup&gt;th&lt;/sup&gt;. I have had the pleasure and honor to work with other teams to get this created, and I think you all will really love the great cross-service solutions approach to many of the sessions. To register and for more information, head over to the main site: &lt;a href="https://aka.ms/azureserverlessconf"&gt;https://aka.ms/azureserverlessconf&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Until next time…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That’s it for now! Be sure to check back next month for the latest updates, and tune into Data Exposed Live every Wednesday at 9AM PST on &lt;a href="https://docs.microsoft.com/en-us/learn/tv/"&gt;LearnTV&lt;/a&gt;. We also release new episodes on Thursdays at 9AM PST and new #MVPTuesday episodes on the last Tuesday of every month at 9AM PST at &lt;a href="https://aka.ms/dataexposedyt"&gt;aka.ms/DataExposedyt&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>💥Non-standard way to use more space of screens in your Flutter app💥</title>
      <author>Stanislav Ilin</author>
      <pubDate>Wed, 08 Sep 2021 14:10:58 +0000</pubDate>
      <link>https://dev.to/frezyx/non-standard-way-to-use-more-space-of-screens-in-your-flutter-app-32in</link>
      <guid>https://dev.to/frezyx/non-standard-way-to-use-more-space-of-screens-in-your-flutter-app-32in</guid>
      <description>&lt;p&gt;I create my first package for Flutter&lt;br&gt;
The package allows you to combine a BottomSheet and a BottomNavigationBar. In addition, you can use this combination on every screen.&lt;/p&gt;

&lt;p&gt;😳Custom bottom Sheet under Bottom Navigation Bar😳&lt;br&gt;
😩Sounds sucks? 😉First of all look at &lt;a href="https://github.com/Frezyx/bottom_bar_with_sheet"&gt;screens in repository&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Show some ❤️ and star the repo to support the project!&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>android</category>
      <category>github</category>
    </item>
    <item>
      <title>Welcome Thread - v141</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 08 Sep 2021 13:55:34 +0000</pubDate>
      <link>https://dev.to/thepracticaldev/welcome-thread-v141-1g2c</link>
      <guid>https://dev.to/thepracticaldev/welcome-thread-v141-1g2c</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lOG9Gias--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/26xBwdIuRJiAIqHwA/giphy.gif%3Fcid%3Decf05e47u5ffs28zwycy9zwz1tiuksw5hfww4dn729tqsv30%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lOG9Gias--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/26xBwdIuRJiAIqHwA/giphy.gif%3Fcid%3Decf05e47u5ffs28zwycy9zwz1tiuksw5hfww4dn729tqsv30%26rid%3Dgiphy.gif%26ct%3Dg" alt="Radish saying hello"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-dev"&gt;
  &lt;/a&gt;
  Welcome to DEV!
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Leave a comment below to introduce yourself! You can talk about what brought you here, what you're learning, or just a fun fact about yourself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to someone's comment, either with a question or just a hello. 👋 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Great to have you in the community!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>welcome</category>
    </item>
    <item>
      <title>Listen to S6E5 of DevDiscuss: "When You Should Start Thinking About Performance" with Todd Underwood</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Wed, 08 Sep 2021 13:52:46 +0000</pubDate>
      <link>https://dev.to/devteam/listen-to-s6e5-of-devdiscuss-when-you-should-start-thinking-about-performance-with-todd-underwood-2j6i</link>
      <guid>https://dev.to/devteam/listen-to-s6e5-of-devdiscuss-when-you-should-start-thinking-about-performance-with-todd-underwood-2j6i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#listen-to-devdiscuss-s6e5-right-here-on-on-dev"&gt;
  &lt;/a&gt;
  Listen to DevDiscuss S6E5 right here on on DEV:
&lt;/h2&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devdiscuss/s6-e5-when-you-should-start-thinking-about-performance"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S6:E5 - When You Should Start Thinking About Performance&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devdiscuss"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevDiscuss  

      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s6-e5-when-you-should-start-thinking-about-performance" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s6-e5-when-you-should-start-thinking-about-performance" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s6-e5-when-you-should-start-thinking-about-performance" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s6-e5-when-you-should-start-thinking-about-performance" alt="DevDiscuss" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtvK04RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j-SdIkjZ--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s6-e5-when-you-should-start-thinking-about-performance"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devdiscuss/s6-e5-when-you-should-start-thinking-about-performance"&gt;
      &lt;img id="episode-profile-image" alt="S6:E5 - When You Should Start Thinking About Performance" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--zTELFWpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--otY2jCJh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;DevDiscuss is the first original podcast from DEV all about the burning topics that impact all our lives as developers.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This week, we talk about web performance: from its history to present-day processes&lt;/strong&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hosts"&gt;
  &lt;/a&gt;
  Hosts:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/ben"&gt;@ben&lt;/a&gt;
 — Creator of DEV &amp;amp; Co-Founder of Forem&lt;/li&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/jgaskins"&gt;@jgaskins&lt;/a&gt;
 — Head of SRE @ Forem&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#guest"&gt;
  &lt;/a&gt;
  Guest:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/tmu"&gt;Todd Underwood&lt;/a&gt;, Director at Google where he leads machine learning for site reliability engineering (SRE). Todd is also the engineering site lead for Google’s Pittsburgh office.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enjoy this week's episode of DevDiscuss! Let us know your thoughts in the comments below — or on Twitter (&lt;a href="https://twitter.com/thepracticaldev"&gt;@thepracticaldev&lt;/a&gt; ).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0zcTd9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/qZelsWAXfWpAA/giphy.gif%3Fcid%3Decf05e47ddu6jql6tkj8kvdmj4z5ofal65l38f235ruuinlo%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0zcTd9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/qZelsWAXfWpAA/giphy.gif%3Fcid%3Decf05e47ddu6jql6tkj8kvdmj4z5ofal65l38f235ruuinlo%26rid%3Dgiphy.gif%26ct%3Dg" alt="Speakers"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devdiscuss"&gt;follow DevDiscuss&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; — or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  Quick Listening Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s6-e5-when-you-should-start-thinking-about-performance/id1513053883?i=1000534674918"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/004qpDsS4RSbulJBIs1YaH"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5kZXZwb2RzLmRldi9kZXZkaXNjdXNzX3BvZGNhc3QueG1s/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZkaXNjdXNzLzQ2?sa=X&amp;amp;ved=0CAQQkfYCahcKEwionb3Lwu_yAhUAAAAAHQAAAAAQQg"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devdiscuss/s6e5-when-you-should-start-01SCKw_29qi/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevDiscuss-p1324596/?topicId=165656085"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://devpods.herokuapp.com/podcasts/devdiscuss/episodes/221"&gt;DEV Pods Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Our season six sponsors: &lt;a href="//cockroachlabs.com/devdiscuss"&gt;CockroachDB&lt;/a&gt; &amp;amp; &lt;a href="https://www.scoutapm.com/devdiscuss"&gt;Scout APM&lt;/a&gt;!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>discuss</category>
      <category>podcast</category>
    </item>
    <item>
      <title>UI Dev Newsletter #73</title>
      <author>Silvestar Bistrović</author>
      <pubDate>Wed, 08 Sep 2021 13:45:55 +0000</pubDate>
      <link>https://dev.to/starbist/ui-dev-newsletter-73-3cne</link>
      <guid>https://dev.to/starbist/ui-dev-newsletter-73-3cne</guid>
      <description>&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3n7I3Su"&gt;Reducing Carbon Emissions On The Web&lt;/a&gt;&lt;br&gt;
Berwyn Powell shares his thoughts and experiences about making websites environmentally friendly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3zPYQwG"&gt;Understanding Z-Index in CSS&lt;/a&gt;&lt;br&gt;
Ahmad Shadeed shares a visual guide on how z-index and stacking contexts work in CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WYPh0b"&gt;Exploring the CSS Paint API: Blob Animation&lt;/a&gt;&lt;br&gt;
Temani Afif explains how to use the powerful Paint API and math to make a blob animation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3BPCXyl"&gt;Creating Accessible CSS Art&lt;/a&gt;&lt;br&gt;
Álvaro Montoro shares some tips and best practices to make CSS art more accessible for everyone.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3BJbv5d"&gt;Element diversity&lt;/a&gt;&lt;br&gt;
Manuel Matuzović shares a list of reasons why we use divs and explains why we shouldn't use divs so much.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3jKYkuk"&gt;Stop! Put Down That Ternary, Lines Are Free&lt;/a&gt;&lt;br&gt;
Simon Barker explains why we should strive to write code that is understandable to the team's newest and least experienced members by writing more readable code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3n6dDjx"&gt;High performance bracket pair colorization&lt;/a&gt;&lt;br&gt;
Visual Studio Code starts to support native bracket pair colorization in the last update.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2X2oqAm"&gt;Wavy Dividers Generator&lt;/a&gt;&lt;br&gt;
Eugene Zolotarenko shares a tool for generating wavy dividers with ease.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selfpromotion"&gt;
  &lt;/a&gt;
  Self-promotion
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3tiqgZA"&gt;You want enabling CSS selectors, not disabling ones&lt;/a&gt;&lt;br&gt;
Chris Coyier shares one of my articles about a selector that does a job without disabling the particular rule.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy coding!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://buttondown.email/starbist"&gt;Subscribe to the newsletter here!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Everything you need to know about server side rendering</title>
      <author>Anjan Shomooder</author>
      <pubDate>Wed, 08 Sep 2021 13:02:41 +0000</pubDate>
      <link>https://dev.to/thatanjan/everything-you-need-to-know-about-server-side-rendering-1jop</link>
      <guid>https://dev.to/thatanjan/everything-you-need-to-know-about-server-side-rendering-1jop</guid>
      <description>&lt;p&gt;In this blog, I will explain everything you need to know about server-side rendering.&lt;/p&gt;

&lt;p&gt;I have created a video about it already. Feel free to check that out. And if you like the video then don't forget to SUBSCRIBE to my channel.&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/LuG1KNowti4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-serverside-rendering-work"&gt;
  &lt;/a&gt;
  How does server-side rendering work?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Abstractly There are two entities on the internet. One is the Client and another one is Server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;First, the client(browser) sends a request to the server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Server then check the request and sends the HTML file as a response.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Browser starts parsing the HTML from top to bottom. When the parser sees the link tag for CSS it blocks the parsing process and starts downloading the CSS files. Then it starts parsing the CSS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After the CSS parsing is completed, the parser starts parsing the HTML again. As the parser parsing the HTML, the browser dom gets pained with content. Also with styles. Because the CSS is already parsed. That is why we put the CSS link tag at the top part of the HTML.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After the dom is pained with the content, your webpage is now viewable. Then the parser comes across the script tag at the bottom of the HTML. Now the browser will start downloading the JavaScript and then will parse the JavaScript.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The JavaScript might be big and might take some time depends on how big the files are. Parsing Javascript is a heavier task than parsing HTML and CSS. That's why we put the script tag at the bottom of the HTML.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After the parsing is completed, the webpage is now both viewable and interactive.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#this-is-a-visual-representation-of-the-serverside-rendering-process-with-react"&gt;
  &lt;/a&gt;
  This is a visual representation of the server-side rendering process with react.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iGEH18nN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k48w5ip0hsughbloc3ji.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iGEH18nN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k48w5ip0hsughbloc3ji.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#server-side-rendering-pros"&gt;
  &lt;/a&gt;
  Server Side Rendering Pros
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Great SEO. Because the content is already present on the HTML.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Initial load is fast. Not the whole application data is not served by the browser. Only the necessary data for the page is sent.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;User doesn't have to see a blank page on the initial load. Because the content is rendered by HTML not JavaScript.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No need for external libraries or frameworks.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#server-side-rendering-cons"&gt;
  &lt;/a&gt;
  Server Side Rendering cons
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Frequent server calls.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Slow navigation to any routes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Page refresh while visiting any routes (not necessarily).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bad user Experience when data changes frequently.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, that's all you need to know about servers side rendering I guess.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shameless-plug"&gt;
  &lt;/a&gt;
  Shameless Plug
&lt;/h2&gt;

&lt;p&gt;I have made a video about how to build a carousel postcard with React, Material-UI, and Swiper.js.&lt;br&gt;
If you are interested you can check the video.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NDyjI7hd4uE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can also demo the application form &lt;a href="https://insta-carousel-demo.vercel.app/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" alt="Screenshot of Insta Carousel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please like and subscribe to &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt;. It motivates me to create more content like this.&lt;/p&gt;

&lt;p&gt;If you have any questions, please comment down below.&lt;br&gt;
You can reach out to me on social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
.&lt;br&gt;
Stay safe. Goodbye.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#about-me"&gt;
  &lt;/a&gt;
  About me
&lt;/h2&gt;
&lt;h4&gt;
  &lt;a href="#why-do-i-do-what-i-do"&gt;
  &lt;/a&gt;
  Why do I do what I do?
&lt;/h4&gt;

&lt;p&gt;The Internet has revolutionized our life. I want to make the internet more beautiful and useful.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-do-i-do"&gt;
  &lt;/a&gt;
  What do I do?
&lt;/h4&gt;

&lt;p&gt;I ended up being a full-stack software engineer.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-can-i-do"&gt;
  &lt;/a&gt;
  What can I do?
&lt;/h4&gt;

&lt;p&gt;I can develop complex full-stack web applications like social media applications or e-commerce sites.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-have-i-done"&gt;
  &lt;/a&gt;
  What have I done?
&lt;/h4&gt;

&lt;p&gt;I have developed a social media application called &lt;a href="https://con-fession.vercel.app/"&gt;Confession&lt;/a&gt;. The goal of this application is to help people overcome their imposter syndrome by sharing our failure stories.&lt;br&gt;
I also love to share my knowledge. So, I run a youtube channel called &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt; where I teach people full-stack web development, data structure algorithms, and many more. So, Subscribe to Cules Coding so that you don't miss the cool stuff.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#want-to-work-with-me"&gt;
  &lt;/a&gt;
  Want to work with me?
&lt;/h2&gt;

&lt;p&gt;I am looking for a team where I can show my ambition and passion and produce great value for them.&lt;br&gt;
Contact me through my email or any social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
. I would be happy to have a touch with you.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#contacts"&gt;
  &lt;/a&gt;
  Contacts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Email: &lt;a href="mailto:thatanjan@gmail.com"&gt;thatanjan@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;linkedin: &lt;a href="https://linkedin.com/in/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;portfolio: &lt;a href="https://thatanjan.me/"&gt;anjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (personal): &lt;a href="https://instagram.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (youtube channel): &lt;a href="https://instagram.com/cules_coding/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href="https://twitter.com/thatAnjan"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Facebook: &lt;a href="https://www.facebook.com/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Blogs you might want to read:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/setup-eslint-prettier-with-typescript-and-react"&gt; Eslint, prettier setup with TypeScript and react &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-client-side-rendering"&gt;What is Client-Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-server-side-rendering"&gt;What is Server Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/everything-you-need-to-know-about-tree-data-structure"&gt;Everything you need to know about tree data structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/13-reasons-why-you-should-use-Nextjs"&gt;13 reasons why you should use Nextjs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Videos might you might want to watch:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NDyjI7hd4uE"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T-n0mrssDiw"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Be_C_Op8Tx8"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ag3je1g0BN8"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/B3HX2rWyKlU"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/C6VytdSDNSk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>javascript</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>Create trippy loop in UrpflanzeJS - Tutorial #1 </title>
      <author>Gennaro</author>
      <pubDate>Wed, 08 Sep 2021 12:38:50 +0000</pubDate>
      <link>https://dev.to/genbs/create-trippy-loop-in-urpflanzejs-tutorial-1-16g1</link>
      <guid>https://dev.to/genbs/create-trippy-loop-in-urpflanzejs-tutorial-1-16g1</guid>
      <description>&lt;p&gt;Urpflanze is a library to create images or animations using code. You can find the &lt;a href="https://docs.urpflanze.org/urpflanze/"&gt;documentation here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can start writing code from the template on &lt;a href="https://codepen.io/pen/?template=GRErJJy&amp;amp;editors=0010"&gt;CodePen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/pen/?template=GRErJJy&amp;amp;editors=0010"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rJf_dKgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/v8jCsZ7g/btn.png" alt="btn.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's what we're going to talk about today:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#create-a-scene"&gt;Create a Scene&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#repetitions-and-transformations"&gt;Repetitions and transformations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#encapsulation-of-a-shape"&gt;Encapsulation of a shape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#animations"&gt;Animations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#result"&gt;Result&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn Urpflanze your way, try experimenting by changing values and don't forget to have fun 😜&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-scene"&gt;
  &lt;/a&gt;
  Create a Scene
&lt;/h2&gt;

&lt;p&gt;Urpflanze is based on point manipulation, so all transformations are done through the CPU.&lt;br&gt;
It will be up to the Drawer to render the scene.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For more informations: &lt;a href="https://docs.urpflanze.org/core/"&gt;Core&lt;/a&gt;, &lt;a href="https://docs.urpflanze.org/drawer-canvas/"&gt;Drawer&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this part we create a Scene with a triangle inside&lt;br&gt;
and we instantiate the drawer by connecting it to the body of the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;triangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Triangle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;triangle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;drawer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DrawerCanvas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;drawer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startAnimation&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MSO5NmB7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/gk8hMxtY/urpflanze-trippy-loop-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MSO5NmB7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/gk8hMxtY/urpflanze-trippy-loop-1.png" alt="urpflanze-trippy-loop-1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#repetitions-and-transformations"&gt;
  &lt;/a&gt;
  Repetitions and transformations
&lt;/h2&gt;

&lt;p&gt;First we repeat the triangle (one row and eight columns), scaling it at each &lt;a href="https://docs.urpflanze.org/urpflanze/#/en/Manage-repetitions"&gt;repetition&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;the value of scale will be 1 for the last repetition when repetition.offset will be 1 and 0.1 for firt repetition when repetition.offset will be 0&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;triangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Triangle&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;repetitions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;repetition&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;repetition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;0.9&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// trick for one row instead of repetition.col.offset&lt;/span&gt;
  &lt;span class="na"&gt;sideLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bAH2keUO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KYC9sLqv/urpflanze-trippy-loop-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bAH2keUO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KYC9sLqv/urpflanze-trippy-loop-2.png" alt="urpflanze-trippy-loop-2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#encapsulation-of-a-shape"&gt;
  &lt;/a&gt;
  Encapsulation of a shape
&lt;/h2&gt;

&lt;p&gt;In Urpflanze it is possible to encapsulate any shape or group of shapes (&lt;a href="https://docs.urpflanze.org/urpflanze/#/en/Creating-a-scene"&gt;more details here&lt;/a&gt;) with the &lt;code&gt;Shape&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;The properties will be set on each repetition of the shape passed to the &lt;code&gt;shape&lt;/code&gt; property&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;triangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Triangle&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="cm"&gt;/* */&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Shape&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;triangle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;-- Set shape&lt;/span&gt;

  &lt;span class="na"&gt;repetitions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;rotateZ&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toRadians&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// scene.add(triangle)&lt;/span&gt;
&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3615_q31--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Vv8KzwPx/urpflanze-trippy-loop-3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3615_q31--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Vv8KzwPx/urpflanze-trippy-loop-3.png" alt="urpflanze-trippy-loop-3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#animations"&gt;
  &lt;/a&gt;
  Animations
&lt;/h2&gt;

&lt;p&gt;We can animate all properties by passing a function instead of a static value (&lt;a href="https://docs.urpflanze.org/urpflanze/#/en/Drawer-and-animations"&gt;📃&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;For animations we will use the built-in &lt;a href="https://docs.urpflanze.org/animation/"&gt;@urpflanze/animation&lt;/a&gt; library&lt;/p&gt;



&lt;p&gt;Let's go back to the triangle and give movement to the position from where the scale starts.&lt;br&gt;
If you are familiar with CSS you will know the &lt;code&gt;transform-origin&lt;/code&gt; property.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Urpflanze.Animation[cosp|sinp](&amp;lt;time&amp;gt;, &amp;lt;period duration&amp;gt;, &amp;lt;phase&amp;gt;, &amp;lt;normalize&amp;gt;)&lt;/code&gt; return value between 0 and 1 in  milliseconds&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;triangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Triangle&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;repetitions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;repetition&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;repetition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;0.9&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;sideLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

  &lt;span class="na"&gt;transformOrigin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Animation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cosp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toRadians&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Animation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sinp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toRadians&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt; 
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we can add a spacing movement of the triangles and the rotation of the whole shape&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Shape&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="cm"&gt;/* ... */&lt;/span&gt;
  &lt;span class="na"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Animation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Loop&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="na"&gt;displace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Animation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;UncontrolledLoop&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toRadians&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="cm"&gt;/* ... */&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Finally we can give a small deviation to the rotation of the triangles&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Shape&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="cm"&gt;/* ... */&lt;/span&gt;
  &lt;span class="na"&gt;rotateZ&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Animation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sinp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toRadians&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;Urpflanze&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toRadians&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="cm"&gt;/* ... */&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Output of each separate stage: transformOrigin | distance + displace | rotateZ&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--he_N4ad2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/Zqnq3bfS/urpflanze-trippy-loop-4-5-6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--he_N4ad2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/Zqnq3bfS/urpflanze-trippy-loop-4-5-6.gif" alt="urpflanze-trippy-loop-4-5-6.gif"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h2&gt;

&lt;p&gt;Combining everything together the result will be this&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/UrpflanzeJS/embed/GRENeBg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This is my first tutorial and I would like to premise that &lt;em&gt;I am not an artist&lt;/em&gt;, I would like to see how you would use this library.&lt;/p&gt;

&lt;p&gt;You can send me your experiments by tagging on various social networks:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.facebook.com/urpflanzejs/"&gt;Facebook&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.instagram.com/urpflanzejs/"&gt;Instagram&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/urpflanzejs"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the next video I was thinking of showing how to export the Scene (video, gif, zip, SVG, GCODE)&lt;/p&gt;



&lt;p&gt;If you like the project and want to support me, you can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Leave feedback in the comments&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Contribute with a PR (&lt;a href="https://github.com/urpflanze-org"&gt;Github&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/urpflanze-org"&gt;
        urpflanze-org
      &lt;/a&gt; / &lt;a href="https://github.com/urpflanze-org/core"&gt;
        core
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Create 2d primitive shapes, encapsulate and repeat them by handling each repetition and generate recursive shapes
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/urpflanze-org"&gt;
        urpflanze-org
      &lt;/a&gt; / &lt;a href="https://github.com/urpflanze-org/drawer-canvas"&gt;
        drawer-canvas
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Draw Urpflanze scene in browser or Node and export image, zip, video or GIF
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Donate to these links&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.paypal.me/genbs"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VRvoUTDQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/donate-paypal-003087.svg%3Flogo%3Dpaypal" alt="Paypal"&gt;&lt;/a&gt; &lt;a href="https://ko-fi.com/urpflanze"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UdHdpsBe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/donate-ko--fi-29abe0.svg%3Flogo%3Dko-fi" alt="Kofi"&gt;&lt;/a&gt; &lt;a href="https://explorer.btc.com/btc/address/1CSQq4aMmsA71twvyZHZCjmeB2AmQGCPNq"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QkTvs6r---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/bitcoin-1CSQq4aMmsA71twvyZHZCjmeB2AmQGCPNq-f7931a.svg%3Flogo%3Dbitcoin" alt="Bitcoin"&gt;&lt;/a&gt; &lt;a href="https://etherscan.io/address/0x9086c4bb7015c1d6dc79162d02e7e1239c982c01"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BmoHOd9Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/ethereum-0x9086c4bb7015c1d6dc79162d02e7e1239c982c01-ecf0f1.svg%3Flogo%3Dethereum" alt="Ethereum"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>creativecoding</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Apple iPhone 13 launch | Launch Event On September 14</title>
      <author>TodayTrend</author>
      <pubDate>Wed, 08 Sep 2021 12:37:51 +0000</pubDate>
      <link>https://dev.to/todaytrend/apple-iphone-13-launch-launch-event-on-september-14-3h9m</link>
      <guid>https://dev.to/todaytrend/apple-iphone-13-launch-launch-event-on-september-14-3h9m</guid>
      <description>&lt;p&gt;iPhone 13 launch: The Apple event is scheduled for September 14, where we expect new iPhones to launch. The &lt;a href="https://www.frontendtrick.com"&gt;iPhone&lt;/a&gt; 13 series is likely to go on sale in India from October 1, 2021.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Feq-CJ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/or24845zzg72f00xpq5y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Feq-CJ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/or24845zzg72f00xpq5y.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The iPhone 13 dispatch is on. Apple just put it down on the calendar for another item dispatch, and we're almost certain another &lt;a href="https://www.frontendtrick.com"&gt;iPhone&lt;/a&gt; will lead the procession of gadgets Apple makes certain to flaunt. Not that we're uninformed on what's in store — a consistent drumbeat of holes and tales has given us a lovely complete image of what the new &lt;a href="https://www.frontendtrick.com"&gt;iPhone&lt;/a&gt; will resemble when we will see it in the tissue one week from now.&lt;/p&gt;

&lt;p&gt;At the Spring Stacked occasion recently, Macintosh uncovered the iPad Professional (2021) that appeared with the M1 chip — the silicon that the organization at first presented on its MacBooks and Macintosh smaller than usual last year. It additionally presented the iMac (2021) that has a thin plan and is controlled by a similar M1 chip. &lt;/p&gt;

&lt;p&gt;Now, there are now various bits of gossip twirling about the new &lt;a href="https://www.frontendtrick.com"&gt;iPhone&lt;/a&gt; too. As indicated by a posting spotted by an insider, the &lt;a href="https://www.frontendtrick.com"&gt;iPhone&lt;/a&gt; 13 will dispatch with a further developed MagSafe charger. Insider Imprint Gurman likewise tipped in his PowerOn pamphlet that the new iPhone 13 will get a satellite network highlight. This element will clearly come in select business sectors to give availability even without cell inclusion. &lt;/p&gt;

&lt;p&gt;It was likewise reputed that the iPhone 13 series will accompany further developed batteries, in spite of the fact that there were additionally worries that Apple will be influenced by the worldwide chip lack as different producers have been, and that this would affect the provisions of the telephone.&lt;/p&gt;

&lt;p&gt;For More Information &lt;a href="https://www.frontendtrick.com"&gt;Visit Our Website&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 22, Bold or Italics !</title>
      <author>Aatmaj</author>
      <pubDate>Wed, 08 Sep 2021 12:32:55 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-22-bold-or-italics-19hg</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-22-bold-or-italics-19hg</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-let-us-explore-checkboxes-in-python"&gt;
  &lt;/a&gt;
  Today let us explore checkboxes in Python.
&lt;/h2&gt;




&lt;p&gt;Today we are going to make a simple program which displays text in bold or italics, or both. This is a standered example for learning checkboxes. The layout will be a simple one. There will be a label which displays the word 'text'. There will be two checkboxes for bold as well as italics. When the checkboxes are clicked, then the label text must become bold or italics or both depending on the checkboxes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SqzC-ZJe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mwki45k417ovyva9dl9e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SqzC-ZJe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mwki45k417ovyva9dl9e.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mC3GVPmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qiqpp92br58m930e9op0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mC3GVPmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qiqpp92br58m930e9op0.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X4GRivNY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/an0mfhnfzcu116fwr462.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X4GRivNY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/an0mfhnfzcu116fwr462.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rG9WMbFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i4xee9x0amzp44k1ej2u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rG9WMbFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i4xee9x0amzp44k1ej2u.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#making-the-label"&gt;
  &lt;/a&gt;
  Making the label.
&lt;/h3&gt;

&lt;p&gt;Just as we made a hello world label yesterday, we will make one label today. The label will have the text "text".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;#create a window frame called master
&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Checkboxes"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"250x100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#create a label with text 'empty' and put it in the window frame
&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#pack the label into the frame
&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#halt execution and display the widgets.
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Yesterday we had used the place attribute to place the label in the position. But as the checkbox program has many widgets to be placed, we will use the &lt;code&gt;pack()&lt;/code&gt; method. This method packs the label widget into the frame and the &lt;code&gt;mainloop()&lt;/code&gt; displays them. More abot window.mainloop() &lt;a href="https://stackoverflow.com/questions/29158220/tkinter-understanding-mainloop"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RCSv7SfT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfl5n6j4qnwuhp1fautv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RCSv7SfT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfl5n6j4qnwuhp1fautv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#function-to-check-and-set-bold-and-italics"&gt;
  &lt;/a&gt;
  Function to check and set bold and italics
&lt;/h3&gt;

&lt;p&gt;We will now make a function named  &lt;code&gt;ChangeLabel&lt;/code&gt; to change the values of the label. For that we make two Boolean attributes, bold and italics. The function must take two Booleans as inputs and must change the value of the label. &lt;/p&gt;

&lt;p&gt;The values of the label can be changed using the &lt;code&gt;config()&lt;/code&gt; function. &lt;code&gt;label.config(text='hello')&lt;/code&gt; changes the text value to hello. Similarly we can change the bold or the italics using the font attribute. &lt;code&gt;font=('Helvetica', 18, 'bold')&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After making the function, we test it for all combinations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;#create a window frame called master
&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Checkboxes"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"250x100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#create a label with text 'empty' and put it in the window frame
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ChangeLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;italics&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;italics&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'bold'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'bold'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;italics&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'italics'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'italic'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;italics&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'bold and italics'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'bold italic'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'text'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;italics&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;ChangeLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;italics&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# The pack() and mainloop() attributes must be at the end of the program
&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; &lt;code&gt;pack()&lt;/code&gt; and &lt;code&gt;mainloop()&lt;/code&gt; attributes must be at the end of the program, else the program won't function as expected.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--79n5M9FE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tbjln0y60abymgcb3tyc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--79n5M9FE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tbjln0y60abymgcb3tyc.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w-DIKnaS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zv6umzpy0dn8p5w5ma91.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-DIKnaS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zv6umzpy0dn8p5w5ma91.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I99I0pHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iyqnnngd0iv3y48qtdc1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I99I0pHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iyqnnngd0iv3y48qtdc1.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5RpMC8cR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/51fc4bme61iomgyixkwk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5RpMC8cR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/51fc4bme61iomgyixkwk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#setting-checkboxes"&gt;
  &lt;/a&gt;
  Setting checkboxes.
&lt;/h3&gt;

&lt;p&gt;We can make checkboxes with the following parameters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;Boldcheckbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Checkbutton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Bold"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;onvalue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offvalue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ChangeLabel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;window&lt;/code&gt; : Set the window frame instance into the checkbox&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;text="Bold"&lt;/code&gt; : Set the text of the checkbox&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;variable=bold&lt;/code&gt; : give the checkbox a variable to change. When the button is on, the value of the bold will be set &lt;code&gt;1&lt;/code&gt; and when it is off, the value will be &lt;code&gt;0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;onvalue=1, offvalue=0&lt;/code&gt; : Set the on and off values.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;command=ChangeLabel&lt;/code&gt; : The command to be executed&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#but-before-we-can-do-use-the-checkbox-we-need-to-do-two-important-changes-to-our-function"&gt;
  &lt;/a&gt;
  But before we can do use the checkbox, we need to do two important changes to our function.
&lt;/h6&gt;

&lt;h4&gt;
  &lt;a href="#number-one-make-the-variables-global"&gt;
  &lt;/a&gt;
  Number one: Make the variables global.
&lt;/h4&gt;

&lt;p&gt;We cannot parametrize any function in the command checkboxes. This means we cannot do &lt;code&gt;Boldcheckbox= Checkbutton(window,text="Bold",........,command=ChangeLabel(bold,italics))&lt;/code&gt;&lt;br&gt;
The only workaround for this is to use global variables bold and italics&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#number-two-tkinter-doesnt-support-booleans"&gt;
  &lt;/a&gt;
  Number two:  Tkinter doesn't support Booleans!
&lt;/h4&gt;

&lt;p&gt;You cannot directly change the values of the boolean variables through the buttons. &lt;code&gt;Boldcheckbox= Checkbutton(window,text="Bold", variable=bold,onvalue=True, offvalue=False,command=ChangeLabel)&lt;/code&gt; fails!!&lt;/p&gt;

&lt;p&gt;But Tkinter has a special object for handling Boolean types known as &lt;code&gt;BooleanVar()&lt;/code&gt;. The BooleanVar() is an object which returns the Boolean value using the &lt;code&gt;BooleanVar.get()&lt;/code&gt; method and we can set the value using the &lt;code&gt;BooleanVar.set()&lt;/code&gt; method. The BooleanVar represents 1 for true and 0 for false.&lt;/p&gt;



&lt;p&gt;So we will now make our function use global objects bold and italics and change the if statement. The new function is as shown.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ChangeLabel&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;italics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'bold'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'bold'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;italics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'italics'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'italic'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;italics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'bold and italics'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'bold italic'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'text'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BooleanVar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;italics&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BooleanVar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#finally-we-are-there"&gt;
  &lt;/a&gt;
  Finally, we are there......
&lt;/h3&gt;

&lt;p&gt;The entire program will become-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;#create a window frame called master
&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Checkboxes"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"250x100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#create a label with text 'empty' and put it in the window frame
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ChangeLabel&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;italics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'bold'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'bold'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;italics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'italics'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'italic'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;italics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'bold and italics'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'bold italic'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'text'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BooleanVar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;italics&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BooleanVar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;Boldcheckbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Checkbutton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Bold"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;onvalue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;offvalue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ChangeLabel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Italicscheckbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Checkbutton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Italics"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;italics&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;onvalue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;offvalue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ChangeLabel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;Boldcheckbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;Italicscheckbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;#pack in the order of appearance.
&lt;/span&gt;
&lt;span class="c1"&gt;# The mainloop() attributes must be at the end of the program
&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--73Ile4VG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yk81axuufqlwk3je024.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--73Ile4VG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yk81axuufqlwk3je024.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Let us continue this journey of Python programming together! Tomorrow we will cover radio buttons, and next to next part will be about making the application colorful! So stay tuned by following me ;-)&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Mongoose Partial Dump</title>
      <author>Afonso Araújo Neto</author>
      <pubDate>Wed, 08 Sep 2021 12:27:05 +0000</pubDate>
      <link>https://dev.to/streeterxs/mongoose-partial-dump-459e</link>
      <guid>https://dev.to/streeterxs/mongoose-partial-dump-459e</guid>
      <description>&lt;p&gt;Hello, my name is Afonso Araújo Neto and I'm a software engineer at Entria. It has been a while since a discussion that Sibelius Seraphini started with me about how to reproduce a production error on a local environment. To do that we needed to debug it, then introduce wrong data on local database, and finally compare software local behavior with production behavior. This is a common way to make sure the bug is gone. You need at least reproduce it in your local environment, fix it, then compare the new behavior with the old bug.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;

&lt;p&gt;Then in a moment in our discussion he throws up an Idea about a "partial dump". I think that he already have thought about it before, I never asked by the way. This "partial dump" would be a solution to a problem on the usage of a common dump to reproduce bug. It has a big cost to copy a entire database every time a strange bug shows up, takes a lot of time and isn't safe to create and share a lot of production data. But if we could extract only a limited amount of data that we know that generate the bug?&lt;/p&gt;

&lt;p&gt;For instance take a user details page. Someday at start of the day you and your team are working on a new feature, share a couple of information. Then suddenly a customer reports a bug on his user page, it won't load. So you found on his page a "Cannot read property null of undefined" error. As a experienced developer you already know that on user details page somewhere on the code can be a dynamic object property read like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;property&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getProperty&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// null&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userPropertyValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;- error. user is undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the front-end field you can easily have a early return in case of user &lt;em&gt;undefined&lt;/em&gt;. But this will only hide your bug. Why the back-end sent a undefined user? Why only that customer has a bug on his user page? &lt;strong&gt;Why the user is undefined here?&lt;/strong&gt; One thing that can answer all these questions is our partial dump. Importing only the data relation that compose this user details page.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sure the "property" variable being null is a bug as well. For our study case lets focus on user undefined. "Property null" could be a consequence of user undefined too. Like we could think the context of this code is inside a sanitize function. That function removes &lt;strong&gt;undefined / null / NaN&lt;/strong&gt; of a user object, which is undefined.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#data-relationship-strategy"&gt;
  &lt;/a&gt;
  Data Relationship Strategy
&lt;/h2&gt;

&lt;p&gt;To start developing the partial dump I needed to solve how to correct extract data with relationship to the module I want to reproduce. Lets go deeper inside the user details example. I want to take a dumper of user details page, which show some details analytics plus other infos. If that user page is for a e-commerce it would show all user's purchase orders, value spend, etc.. &lt;/p&gt;

&lt;p&gt;Lets take this image to represent all related models example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8ZAg7rhY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b123z39qm3itwwkkvvr8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ZAg7rhY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b123z39qm3itwwkkvvr8.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Database collection relationship&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Maybe this isn't the best relationship for this case but lets focus on it for our study case&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To properly export a usable dump of our user page details business rule. We would need to extract a User document, with all related UserPurchase documents, with all related Order and finally Item. ItemType, ItemFactory and Factory are collections related to Item, so them would be useful to a Item partial dump, not for user.&lt;/p&gt;

&lt;p&gt;If ItemType was relevant for our UserPage in business rule would created a new collection UserItem (userId, itemId, quantity, etc..) or a UserItemType (userId, itemTypeId, quantityBought, etc..). But in this case, our use details page displays only all user orders. So a User Partial Dump would be:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Amzh3pl_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/snnj9r2ly72v1ra1jbk4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Amzh3pl_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/snnj9r2ly72v1ra1jbk4.png" alt="image"&gt;&lt;/a&gt; &lt;br&gt;
&lt;em&gt;User Partial Dump&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;At the beginning we the partial dump used to receive a list of collectionName to be dumped. Like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;collectionNameList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;User&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;UserPurchase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Order&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Item&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But as we used it we noticed this relationship pattern repeated a lot. It was so frequent that I decided to abstract this as a default "dump strategy".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dump-strategy"&gt;
  &lt;/a&gt;
  Dump Strategy
&lt;/h2&gt;

&lt;p&gt;In &lt;strong&gt;mongoose-partial-dump&lt;/strong&gt; a "dump strategy" is a block of code used to extract from database documents following a certain relational pattern. The &lt;strong&gt;default&lt;/strong&gt; strategy was made based on this list of rules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extract the given model (&lt;strong&gt;mainCollection&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Extract all foreign key documents of the given model&lt;/li&gt;
&lt;li&gt;Extract all the documents with a foreign key to the given model (&lt;strong&gt;secondaryCollections&lt;/strong&gt;)

&lt;ul&gt;
&lt;li&gt;With all secondaryCollections documents, we recursively repeat step 1 and 2 of this list with the secondaryCollection found.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The result of these rules is a &lt;strong&gt;subgraph&lt;/strong&gt; of your database &lt;strong&gt;graph&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--seLf_FSD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcdow907n5ze9qic6smc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--seLf_FSD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcdow907n5ze9qic6smc.png" alt="image"&gt;&lt;/a&gt; &lt;br&gt;
&lt;em&gt;Default dump strategy graph&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#data-anonymization"&gt;
  &lt;/a&gt;
  Data Anonymization
&lt;/h2&gt;

&lt;p&gt;As this package grows receiving upgrades and new features it would need one more feature before the use in production. Because of brasilian's &lt;a href="http://www.planalto.gov.br/ccivil_03/_ato2015-2018/2018/lei/l13709.htm"&gt;LGPD&lt;/a&gt; law we can't manipulate production database. This law do not permit manipulation of personal data, as we would do by using partial dump.&lt;/p&gt;

&lt;p&gt;To solve this we implemented a anonymization feature. This feature change production data (name, address, avatar images, etc) before dump export using &lt;a href="https://www.npmjs.com/package/faker"&gt;FakerJS&lt;/a&gt;. As the package says: "generate massive amounts of fake data in the browser and node.js".&lt;/p&gt;

&lt;p&gt;That way we can fearlessly generate our dumps knowing we won't mess up with people personal data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--80HfiH4L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0m291vclo6h5p7445gs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--80HfiH4L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0m291vclo6h5p7445gs.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Faker example page at &lt;a href="https://rawgit.com/Marak/faker.js/master/examples/browser/index.html"&gt;https://rawgit.com/Marak/faker.js/master/examples/browser/index.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#properties"&gt;
  &lt;/a&gt;
  Properties
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#invariance"&gt;
  &lt;/a&gt;
  Invariance
&lt;/h3&gt;

&lt;p&gt;Software behavior do not changes. Independent of the environment, if any feature had changed, all behaviors will by the same. You can even copy/paste features url. In our case we use base64 transformation from a document &lt;strong&gt;_id&lt;/strong&gt; like (user example):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;613514&lt;/span&gt;&lt;span class="nx"&gt;b8d5ae0e081ca7cd2d&lt;/span&gt; &lt;span class="c1"&gt;// value&lt;/span&gt;
&lt;span class="nx"&gt;VXNlcjo2MTM1MTRiOGQ1YWUwZTA4MWNhN2NkMmQ&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="c1"&gt;// base64 encode**&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So if a production url is &lt;code&gt;&amp;lt;domain&amp;gt;/user/VXNlcjo2MTM1MTRiOGQ1YWUwZTA4MWNhN2NkMmQ=/details&lt;/code&gt; a related &lt;a href="http://localhost"&gt;localhost&lt;/a&gt; in 8080 port url would be:    &lt;code&gt;localhost:8080/user/VXNlcjo2MTM1MTRiOGQ1YWUwZTA4MWNhN2NkMmQ=/details&lt;/code&gt; . Because in MongoDB we can create new documents by a pre-created unique identifier (ObjectId) the same url will exist for the same user page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#minimal-working-example-mwe"&gt;
  &lt;/a&gt;
  Minimal Working Example (MWE)
&lt;/h2&gt;

&lt;p&gt;A MWE is: "&lt;em&gt;a collection of source code and other data files which allow a bug or problem to be demonstrated and reproduced.&lt;/em&gt;" (&lt;a href="https://en.wikipedia.org/wiki/Minimal_working_example"&gt;wikipedia&lt;/a&gt;). Which data files can be made using partial dump.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Our partial dump became a useful tool in our daily debugging flow. With it we do not need aditional time trying to reproduce bugs, so we can spend more time creating better solutions for our bug fixes. And because &lt;strong&gt;time&lt;/strong&gt; is a key resource for me it became so valuable that I decided to make it a open source. You can access it where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/Streeterxs/mongoose-partial-dump"&gt;https://github.com/Streeterxs/mongoose-partial-dump&lt;/a&gt; (code)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/mongoose-partial-dumper"&gt;https://www.npmjs.com/package/mongoose-partial-dumper&lt;/a&gt; (package)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Try it out. =)&lt;/p&gt;

</description>
      <category>database</category>
      <category>mongodb</category>
    </item>
    <item>
      <title>Localbitcoins clone script-A guide for entrepreneurs to  start a p2p exchange website like Localbitcoins?</title>
      <author>hassan mahmoodi</author>
      <pubDate>Wed, 08 Sep 2021 12:24:31 +0000</pubDate>
      <link>https://dev.to/hassanm22668408/localbitcoins-clone-script-a-guide-for-entrepreneurs-to-start-a-p2p-exchange-website-like-localbitcoins-2mhc</link>
      <guid>https://dev.to/hassanm22668408/localbitcoins-clone-script-a-guide-for-entrepreneurs-to-start-a-p2p-exchange-website-like-localbitcoins-2mhc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-clone-script"&gt;
  &lt;/a&gt;
  What is a clone script?
&lt;/h2&gt;

&lt;p&gt;clone script is the architecture of an existing website. These scripts are suitable for entrepreneurs to start an online website. The purpose of clone scripts is to help businesses launch their exchanges so quickly and at a lower price.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#localbitcoins-clone-scripts"&gt;
  &lt;/a&gt;
  Localbitcoins clone scripts
&lt;/h2&gt;

&lt;p&gt;For starting a peer-to-peer bitcoin exchange website like LocalBitcoins, using &lt;strong&gt;&lt;a href="https://radindev.com/localbitcoins-clone-script/"&gt;localbitcoins clone script&lt;/a&gt;&lt;/strong&gt; can be a good choice. Because LocalBitcoins clone script contains all the features and aspects of the localbitcoins. It helps to develop a website like localbitcoins with some customizing features.  The localbitcoins clone script is completely tested and debugged.&lt;br&gt;
Localbitcoins is a &lt;a href="https://radindev.com/p2p-crypto-exchange-script/"&gt;p2p crypto exchange platform&lt;/a&gt; that connects the buyers and sellers of bitcoins.  Localbitcoins uses its user’s location to connect the sellers and buyers who are close together. So if you want to trade bitcoins you don’t need to trade with people far from yourself.  Localbitcoins is known for its fast transaction process and high security and liquidity. In the localbitcoins platform sellers can post an ad for buying and selling bitcoins or they can choose among the existing ads. They provide their condition in the ad, by replying to the ads a chat box will pop up to make the communication easier for the traders.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QuLNNgCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/4068825.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QuLNNgCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/4068825.svg" alt="loalbitcoins clone script"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-develop-a-website-with-clone-scripts"&gt;
  &lt;/a&gt;
  Why develop a website with clone scripts?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Faster development:&lt;/strong&gt; a clone script is readymade software which means it doesn’t need all the time and effort to develop from scratch. So this readymade platform will be customized easily and in less time. So you hit the market faster.&lt;br&gt;
&lt;strong&gt;Cost-effective:&lt;/strong&gt; we have understood that clone script is developed from an existing website, so it needs less effort than developing a website from scratch so the less effort needs the lower the cost will be.&lt;br&gt;
&lt;strong&gt;Market view:&lt;/strong&gt; the clone scripts are mostly developed from successful and popular websites.  It means that website has shown its features and usability. So by developing a website using a clone script, your website will find its place among users faster.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-and-disadvantages-of-localbitcoins"&gt;
  &lt;/a&gt;
  Advantages and disadvantages of localbitcoins
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Advantages:&lt;/strong&gt;&lt;br&gt;
Most of the services are free&lt;br&gt;
High security &lt;br&gt;
due to several layers of security for users on the platform &lt;br&gt;
Enough trading pairs &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages:&lt;/strong&gt;&lt;br&gt;
The US users are not allowed to trade on the platform &lt;br&gt;
The customer support process is slow &lt;br&gt;
Lack of hard wallet system &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#feature-of-the-locabitcoins-website"&gt;
  &lt;/a&gt;
  feature of the locabitcoins website:
&lt;/h3&gt;

&lt;p&gt;• Chatbox system&lt;br&gt;
• Token listing &lt;br&gt;
• Ad based trading&lt;br&gt;
• Low fees&lt;br&gt;
• Large trade volume&lt;br&gt;
• Accepts new cryptocurrencies&lt;br&gt;
• Stringent security&lt;br&gt;
• Abdundant Altcoins&lt;br&gt;
• Bonuses and rewards&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reasons-for-choosing-whitelabel-localbitcoins-clone-script"&gt;
  &lt;/a&gt;
  Reasons for choosing white-label localbitcoins clone script
&lt;/h2&gt;

&lt;p&gt;1.By using a white label localbitcoins clone script, you can customize the features and functionalities that are the requirements of the exchange community.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The admin of the exchange platform can design and change the logo, and the theme or name of the website.&lt;/li&gt;
&lt;li&gt;Developing an exchange platform using white-label will cost less. &lt;/li&gt;
&lt;li&gt; You don’t need any technical or programming knowledge to launch a white-label exchange.&lt;/li&gt;
&lt;li&gt; Because the software is tested by professionals before you know that it will operate properly.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-security-features-of-the-localbitcoins-platform"&gt;
  &lt;/a&gt;
  What are the security features of the localbitcoins platform?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;KYC:&lt;/strong&gt; In know your customer system, several steps are needed to establish the customer identity. This helps to ban scammers and reduce frauds.&lt;br&gt;
&lt;strong&gt;Escrow payments:&lt;/strong&gt; all transactions that are executed in the platform are covered by escrow protection.&lt;br&gt;
&lt;strong&gt;Login protection:&lt;/strong&gt; LocalBitcoins will make sure that you are logging into the platform with the same browser and with the same IP. If you log in from another web browser or with different IP it will require email verification.&lt;br&gt;
&lt;strong&gt;2FA:&lt;/strong&gt; the two-factor authentication allows users to set an additional pin for logging in. The two-factor authentication is an extra security layer that helps to prevent the accounts from being hacked.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#localbitcoins-clone-script-features"&gt;
  &lt;/a&gt;
  Localbitcoins clone script features
&lt;/h3&gt;

&lt;p&gt;• Online/offline trading&lt;br&gt;
• Multi-currency support &lt;br&gt;
• Multi lingual&lt;br&gt;
• Wallet secured with escrow &lt;br&gt;
• Ad based trading &lt;br&gt;
• Customized UI and UX &lt;br&gt;
• Merchant dashboard&lt;br&gt;
• 2FA security&lt;br&gt;
• Transaction history&lt;br&gt;
• Open source code &lt;br&gt;
• Multiple trading&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-localbitcoins-clone-script-work"&gt;
  &lt;/a&gt;
  How does localbitcoins clone script work?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Sign up to start trading:&lt;/strong&gt;&lt;br&gt;
 To start trading in local bitcoins clone script, first, you should signup and log in to your account by using an email account or phone number.&lt;br&gt;
&lt;strong&gt;Verification:&lt;/strong&gt; &lt;br&gt;
 For the security of the trading in localbitcoins clone script, a user should pass the KYC verification and provide the KYC details and wait until gets verified by the admin.&lt;br&gt;
&lt;strong&gt;Trading:&lt;/strong&gt; &lt;br&gt;
By posting ads with its detail like accepted payment methods, trading limits and other details, they will start the buyers. Or they can find and choose among the existing advertisement. When one person chooses one of the ads the trading powered by escrow starts and until the end of the transactions it will be secured.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#now-lets-take-a-look-at-localbitcoins-competitors"&gt;
  &lt;/a&gt;
  Now let’s take a look at Localbitcoins competitors:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HAtIpnpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/ocalbitcoins-restricted-to-only-10-states-1200x675-1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HAtIpnpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/ocalbitcoins-restricted-to-only-10-states-1200x675-1.jpg" alt="localbitcoins"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Local bitcoins&lt;/strong&gt;&lt;br&gt;
Localbitcoins is a provider of a platform for cryptocurrency exchange. This private company is established in Finland in 2012.  They work in the field of financial services, technology, cryptocurrency, exchange, fintech, payments, and platforms. It has 28 employees now. The website has 3.3m visits per month.&lt;br&gt;
They have about 59.9k followers on Twitter and 13713 is their rank in Alexa.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---6gRjiMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/Binance.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---6gRjiMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/Binance.jpg" alt="loalbitcoins competitors"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Binance&lt;/strong&gt;&lt;br&gt;
One of its competitor websites is Binance. Binance is a company that offers a cryptocurrency exchange platform. This company was founded in 2017 and it’s working in the field of financial services technology, blockchain, cryptocurrency, exchange, fintech.  Now it has around 3200 employees and different branches in, France, Germany, India, Singapore, us and some other countries. They have around 4.7m followers on Twitter. Their website rank in Alexa is 255. Binance has total funding of $10 m  the total visit of their website per month is around 250m. it has more than 10m users.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ob2m0aYd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/okex-argentina.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ob2m0aYd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/okex-argentina.jpg" alt="okex clone script"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;OKEx&lt;/strong&gt;&lt;br&gt;
Okex is a private company founded in china in 2014 working on blockchain and provide financial services for traders globally all around the world. Recently they have almost 1000 employees and around 477.4k followers on Twitter. Their website rank in Alexa is 1425. Their website has 13.2 m visits per month.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtvpy0Eo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/paxful-1-final-2-1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtvpy0Eo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/paxful-1-final-2-1.jpg" alt="localbitcoins competitors"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Paxful&lt;/strong&gt; &lt;br&gt;
 Paxful is a company developing a p2p bitcoin marketplace and an app for transferring money.it was established in 2015 and works in the field of technology, cryptocurrency, fintech, marketplace, and mobile app. It has 432 employees and 108k followers on Twitter.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1M-_R-dI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/comparison-employee.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1M-_R-dI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/comparison-employee.svg" alt="loalbitcoins competitors"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>cryptocurrency</category>
      <category>p2p</category>
    </item>
    <item>
      <title>The Many Uses of Feature Flags to Control Your Releases</title>
      <author>Anthony Brebion</author>
      <pubDate>Wed, 08 Sep 2021 12:15:09 +0000</pubDate>
      <link>https://dev.to/flagship/the-many-uses-of-feature-flags-to-control-your-releases-49gc</link>
      <guid>https://dev.to/flagship/the-many-uses-of-feature-flags-to-control-your-releases-49gc</guid>
      <description>&lt;p&gt;The use of feature flags has evolved and expanded as teams now recognize the value they can bring to their releases.&lt;/p&gt;

&lt;p&gt;First, let's start with a simple definition of feature flags. &lt;strong&gt;A feature flag is a software development technique that lets you turn functionalities on and off to test new features in production without changing code.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a technique that can be employed across a wide range of use-cases, from the most simple to more advanced uses as various teams such as engineering and production teams across organizations have begun to recognize the benefits of feature flags in their software release strategy.&lt;/p&gt;

&lt;p&gt;In this article, we will explore these different uses so you can see first-hand exactly what feature flags can do across different contexts depending on your pain points and objectives.&lt;/p&gt;

&lt;p&gt;Many of the use-cases outlined below revolve around one main idea: &lt;strong&gt;risk mitigation&lt;/strong&gt;. There may be a bug in production and you want to turn it off without delaying the release or you have second-thoughts about a feature and you're not ready for all your users to see it. So you'd rather test this feature on a subset of users.&lt;/p&gt;

&lt;p&gt;Feature flags also increase &lt;strong&gt;productivity and speed&lt;/strong&gt; of teams. You're no longer waiting to merge your code if other changes are incomplete; you just put it behind a flag until it's ready. With this, you get more predictability to your releases. There's no need to delay your release cycle for any last-minute bugs detected.&lt;/p&gt;

&lt;p&gt;Therefore, we will see how the use-cases outlined below bring these benefits to your team.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#prepare-for-launch"&gt;Prepare for launch&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#hassle-free-deployments-release-anytime"&gt;Hassle-free deployments: release anytime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#controlling-rollouts-progressive-delivery"&gt;Controlling rollouts: progressive delivery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#time-your-launch"&gt;Time your launch&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#running-experiments-and-ab-testing"&gt;Running experiments and A/B testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#continuous-delivery"&gt;Continuous delivery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#user-targeting"&gt;User targeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#giving-early-access"&gt;Giving early access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#power-to-the-users-beta-testing"&gt;Power to the users: beta testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dogfooding"&gt;Dogfooding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#no-trespassing-allowed-blocking-users"&gt;No trespassing allowed: blocking users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#managing-entitlements"&gt;Managing entitlements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#other-scenarios"&gt;Other scenarios&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#by-pass-app-store-validation"&gt;By pass app store validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#kill-switch-turning-off-features"&gt;Kill Switch: turning off features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sunsetting-features"&gt;Sunsetting features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#managing-migrations"&gt;Managing migrations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#prepare-for-launch"&gt;
  &lt;/a&gt;
  Prepare for launch
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#hasslefree-deployments-release-anytime"&gt;
  &lt;/a&gt;
  Hassle-free deployments: release anytime
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.flagship.io/feature-flags/"&gt;Feature flags allow you to deploy whenever you and your team sees fit&lt;/a&gt;. You no longer need to delay your releases. Any changes to a feature that are not yet ready can be toggled off with a switch.&lt;/p&gt;

&lt;p&gt;What feature flags do in this scenario is separate code deployment from release. This is done through a release toggle, which allows specific parts of a feature to be activated or deactivated so any unfinished will remain invisible to users until they are ready to be released.&lt;/p&gt;

&lt;p&gt;Why is the distinction between deployment and release significant? To answer this question, it is worth noting the difference between the two terms:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;em&gt;Deployment&lt;/em&gt; is the process of putting code in its final destination on a server or any other place in your infrastructure where your code will run.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Release&lt;/em&gt; is exposing your code to your end-users and so it is the moment when they get access to your new features.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This difference is why we talk about &lt;strong&gt;decoupling deployment from release&lt;/strong&gt; because once you do that, you can push code anywhere, anytime, without impacting your users. Then, you can release gradually and selectively whenever you're ready through progressive and controlled rollouts as we will see below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#controlling-rollouts-progressive-delivery"&gt;
  &lt;/a&gt;
  Controlling rollouts: progressive delivery
&lt;/h3&gt;

&lt;p&gt;With feature flags, you are in complete control. This means once you have a feature ready for release, you can control which subset of users will see this feature through phased rollout of releases.&lt;/p&gt;

&lt;p&gt;Such a practice is referred to as progressive rollout, which builds on continuous delivery to include the use of feature flags to gradually introduce features to your users.&lt;/p&gt;

&lt;p&gt;Rather than releasing to all your users, which is often risky, you may want to release to just 5 or 10% of your users. These users should represent your overall users. Meanwhile, the team observes how these users respond to the new feature before rolling out to everyone else.&lt;/p&gt;

&lt;p&gt;One progressive rollout technique is known as &lt;a href="https://www.flagship.io/canary-deployments/"&gt;canary deployment&lt;/a&gt;. This is where you test how good your feature is on a small group of users and if there's any issue, you can immediately fix it before it's exposed to a larger number of users. This sort of gradual rollout helps mitigate the risk of a so-called big bang release. It also helps ease the pressure on your server in case it cannot handle the load.&lt;/p&gt;

&lt;p&gt;You may also carry out what is known as 'ring deployments'. This technique is used to limit the impact on end-users by gradually rolling out new features to different groups. These groups are represented by an expanding series of rings, hence the name, where you start with a small group and keep expanding this group to eventually encompass all users.&lt;/p&gt;

&lt;p&gt;In a &lt;a href="https://www.flagship.io/glossary/ring-deployment/"&gt;ring deployment&lt;/a&gt;, you choose a group of users based on similar attributes and then make the features available to this group.&lt;/p&gt;

&lt;p&gt;Rings and feature flags work together where feature flags can help you hide certain parts of your feature if they're not ready in any of the deployment rings.&lt;/p&gt;

&lt;p&gt;The advantage of such controlled rollouts is the feedback you would generate from users, especially for releases you're less than confident about and so with the feedback received, you can improve your product accordingly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time-your-launch"&gt;
  &lt;/a&gt;
  Time your launch
&lt;/h2&gt;

&lt;p&gt;We know at this point that feature flags give you the control to release at any time you deem suitable.&lt;/p&gt;

&lt;p&gt;Feature flags, then, are important because you always decide the 'when'. As such, with feature flags, you can aim for a timed launch where you push your feature for people in your trusted circle, such as your QA team, to &lt;a href="https://www.flagship.io/testing-in-production/"&gt;test in production&lt;/a&gt;. Afterwards, when it's time to launch, you simply turn on the feature for everyone else without any fuss with the added advantage that you're feeling much more confident when it comes to the actual release to everyone else.&lt;/p&gt;

&lt;p&gt;This significantly reduces stress among your team because you've tested the feature before the official launch and you've made sure it's working as it should before going ahead with a wider release.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-experiments-and-ab-testing"&gt;
  &lt;/a&gt;
  Running experiments and A/B testing
&lt;/h3&gt;

&lt;p&gt;This is related to the previous point and another variation of controlled rollouts. Feature flags are great for running A/B tests where you can create feature variations and assign a subset of users to each variation and see which performs better.&lt;/p&gt;

&lt;p&gt;This is a great use for product and marketing teams who can easily test new ideas and eliminate them if they don't fulfil the hypothesis defined upon creation of the test.&lt;/p&gt;

&lt;p&gt;For example, feature flags would allow your product and marketing teams to send 50% of users to the new variation of a feature and the other 50% to the original one to compare performance according to the goals set and see which variation runs better.&lt;/p&gt;

&lt;p&gt;Using feature flags to run A/B tests is particularly useful when a feature receives enough traffic to generate efficient results. So, as a cautionary note, keep in mind that not everything can be an A/B test when it comes to feature flags.&lt;/p&gt;

&lt;p&gt;In this sense, you can look at feature flags like a light switch. You decide when you want to turn on the feature, when to turn it off and which users have access to it. This allows you to continuously test in production until you're satisfied with the end-result which you can then roll out to the rest of your users.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#continuous-delivery"&gt;
  &lt;/a&gt;
  Continuous delivery
&lt;/h3&gt;

&lt;p&gt;We've already seen that with feature flags, you can release at any time. Consequently, we can deduce that feature flags facilitate the process of continuous delivery.&lt;/p&gt;

&lt;p&gt;Let's imagine you are all set to release but then one developer's changes have not yet been integrated into the main feature branch. Does this mean you need to wait especially when you know time is precious when it comes to releasing to impatient customers in this day and age?&lt;/p&gt;

&lt;p&gt;Feature flags enable continuous delivery because as mentioned, feature flags decouple deployment from release so even unfinished features can be merged but can easily be hidden behind a flag so users don't see it while users get access to all the complete changes for testing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#user-targeting"&gt;
  &lt;/a&gt;
  User targeting
&lt;/h3&gt;

&lt;p&gt;You don't just choose the when, you also choose to whom&lt;/p&gt;

&lt;p&gt;Feature flags, as we've seen, gives you a lot of control over the release process by putting the power of when to release in your hands.&lt;/p&gt;

&lt;p&gt;It's worth mentioning yet another form of power feature flags can give you, which is the ability to choose which users can access the feature. When you are testing in production, having the option to choose who you want to test on is extremely valuable depending on the kind of feedback you're seeking.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#giving-early-access"&gt;
  &lt;/a&gt;
  Giving early access
&lt;/h3&gt;

&lt;p&gt;We've seen in canary deployment that sometimes the sample you pick can be completely random. Other times, however, you might decide to carefully handpick a select group of users to give them early access to your new feature.&lt;/p&gt;

&lt;p&gt;Why is this important? Because these are the users that are considered to be 'early adopters'. They are users you trust and whose feedback is the top priority and who are most interested in this particular feature. These users are also the most forgiving should anything go wrong with the release.&lt;/p&gt;

&lt;p&gt;With feature flags, you can release the feature to these early adopters who are more than willing to provide the kind of feedback you need to improve your product. This technique works well if you have a very risky release that you're hesitant to release to a wider audience.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#power-to-the-users-beta-testing"&gt;
  &lt;/a&gt;
  Power to the users: beta testing
&lt;/h3&gt;

&lt;p&gt;This is another side to early access where in this scenario users willingly opt-in to test out your new features before they are released to the rest of your users.&lt;/p&gt;

&lt;p&gt;As a result, the customers who opt-in get to see and test the feature by turning it on in their accounts and should they wish to back out they can easily disable the feature, which makes these users more inclined to opt-in in the first place as it makes them feel more in control.&lt;/p&gt;

&lt;p&gt;This is an important use-case because it shows your customers that you're really listening to their feedback by asking them to test your release. The users who opt-in are those who you're targeting with this feature so how they react to the feature will be of extreme use to you. Hence, you get to test out your new feature and you deliver value to your customers by responding to their feedback; it's a win-win situation!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dogfooding"&gt;
  &lt;/a&gt;
  Dogfooding
&lt;/h3&gt;

&lt;p&gt;This term refers to eating your own dog food and is another way to test in production but internally.&lt;/p&gt;

&lt;p&gt;Here, you basically release your new features or changes to people within your organization. This is a great way of testing especially when you're introducing new features or major changes that you're not fully confident in.&lt;/p&gt;

&lt;p&gt;This way, you are taking less risks because it's only people within your organization who can see the releases as opposed to your actual, external users who may be more unforgiving in case things take a bad turn during a release.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-trespassing-allowed-blocking-users"&gt;
  &lt;/a&gt;
  No trespassing allowed: blocking users
&lt;/h3&gt;

&lt;p&gt;Just as you can pick users who you want to access your feature, you can also block users from seeing it. For example, you can block certain users from a particular country or organization.&lt;/p&gt;

&lt;p&gt;What feature flags would allow you to do is hide some features from these less forgiving users who might not give you the right sort of feedback while giving access to the relevant target consumers and who would be most impacted by the new feature.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#managing-entitlements"&gt;
  &lt;/a&gt;
  Managing entitlements
&lt;/h3&gt;

&lt;p&gt;With feature flags, you can manage which groups of users get access to different features. This is especially common in SaaS companies that offer various membership plans and so with entitlements, you can dictate which features each plan can access. This way, you would be offering different experiences to your users.&lt;/p&gt;

&lt;p&gt;Let's take the example of Spotify. Spotify offers free and paid plans. With the free membership, you can stream music but with advertisements while with the premium membership, you can stream unlimited music with no ads. You also get unlimited skips and you can download music to listen to offline. There are also different levels of premium to choose from including student and family plans. Consequently, with each plan, you are entitled to different content and features.&lt;/p&gt;

&lt;p&gt;With feature flags, you can wrap a flag around a feature and release it to a particular customer depending on their subscription plan. These types of flags are usually referred to as permission toggles. They also allow you to move features easily between the different plans i.e. paid and free versions, for example.&lt;/p&gt;

&lt;p&gt;Managing entitlements is considered to be an advanced use case as it requires careful coordination across teams and involves working with multiple flags to control permissions for the features. The person who manages entitlements is usually on the product team so careful planning and monitoring of each change performed by which person is required. There should also be a seamless process in place to move users from one plan to another. Thus, this use case requires vigilant implementation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-scenarios"&gt;
  &lt;/a&gt;
  Other scenarios
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#by-pass-app-store-validation"&gt;
  &lt;/a&gt;
  By pass app store validation
&lt;/h3&gt;

&lt;p&gt;This is when we use A/B testing to test different experiences within mobile apps. Imagine you've just released a brand new app or introduced a new shiny update to your app.&lt;/p&gt;

&lt;p&gt;How can you make sure your app or this update is running smoothly or that you haven't unintentionally introduced an update full of bugs that crashes on your users? Anything that goes wrong will involve a lengthy review process that will setback your entire release as you attempt to locate and resolve the issue.&lt;/p&gt;

&lt;p&gt;You no longer need to wait for app store approval, which could take some time and the changes are released to all users instead of smaller segments.&lt;/p&gt;

&lt;p&gt;Instead, with remote config implemented through feature flags, any changes can be made instantly and remotely and then released to a small subset of users to get feedback before releasing it to everyone else. Therefore, you can upgrade your app continuously in real-time based on feedback from your users without waiting on app store approval.&lt;/p&gt;

&lt;p&gt;It's also a good way to personalize experiences for different types of users rather than creating a unified experience for all users depending on the demographics you set forth.&lt;/p&gt;

&lt;p&gt;As a result, with feature flags, you can roll out different versions of your mobile app to monitor their impact by releasing different features to different groups of users. Afterwards, you can decide on what features will be incorporated in the final release of your app.&lt;/p&gt;

&lt;p&gt;Using feature flags to test out your mobile app is an excellent way to generate buzz around your release by giving exclusive access to a select number of users.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kill-switch-turning-off-features"&gt;
  &lt;/a&gt;
  Kill Switch: turning off features
&lt;/h3&gt;

&lt;p&gt;Using feature flags will allow you to disable a feature if it's not working as it should. This is done by using a &lt;a href="https://www.flagship.io/glossary/kill-switch/"&gt;kill switch&lt;/a&gt;. Thus, whenever anything goes wrong in production, you can turn it off immediately while your team fixes the issue. This would prevent you from having to roll back the entire release so other changes can be deployed and released without worrying about delaying the whole release.&lt;/p&gt;

&lt;p&gt;With a kill switch, you can switch off a specific, troublesome feature so you can decrease the number of users who can see it, including turning it off for all users if necessary until the issue is analyzed and resolved by your team. This way, you won't have to go through the entire code review process to locate the issue.&lt;/p&gt;

&lt;p&gt;Kill switches therefore give you even more control over the release process. This not only empowers your team of developers but also marketing and production teams with no software development experience who can now easily test in production and kill a feature without having to rely on engineering support.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sunsetting-features"&gt;
  &lt;/a&gt;
  Sunsetting features
&lt;/h3&gt;

&lt;p&gt;Feature flags can also enable the 'sunsetting' of features. For example, with time, you might see your usage of feature flags increasing and widening to encompass a number of features. However, this accumulation of features may eventually turn into a heavy debt.&lt;/p&gt;

&lt;p&gt;This is why it is important to continuously keep track of which features you are using and which features have run their time and need to be retired from your system.&lt;/p&gt;

&lt;p&gt;Sunsetting, then, enables you to kill off features that are no longer being used. Feature flags would give you an idea of the usage of certain features which would help you determine whether it's time to kill it off, lest you end up with the dreaded technical debt.&lt;/p&gt;

&lt;p&gt;Removing unused features and clearing up old flags is the best way to keep such hidden costs in check. Thus, you should have a careful plan in mind to remove some flags once they have served their purpose or otherwise you end up with the aforementioned technical debt. This will require you to have an efficient feature flag management system in place to track down 'stale' flags.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#managing-migrations"&gt;
  &lt;/a&gt;
  Managing migrations
&lt;/h3&gt;

&lt;p&gt;Feature flags can be used to safely and effectively migrate to a new database as business requirements change and evolve. What organizations would normally do before feature flags is a one-time migration then hope for the best as rollbacks are usually a painful process.&lt;/p&gt;

&lt;p&gt;Obviously, the biggest risk that comes with switching databases is loss of data. Therefore, developers need a way to test that the data will remain intact during the migration process.&lt;/p&gt;

&lt;p&gt;Enter feature flags. They allow you to facilitate migration and should something go wrong, you can disable the migration by simply toggling the flag off.&lt;/p&gt;

&lt;p&gt;A percentage rollout can then be implemented using feature flags to validate the new database and any changes can be reversed by using feature flags as a kill switch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bottomline&lt;/strong&gt;: Use feature flags, use them often but proceed with caution.&lt;/p&gt;

&lt;p&gt;As we've seen so far, many of the use cases can be easily implemented. However, others will require the ability to make detailed, complex and context-specific decisions so a more &lt;a href="https://www.flagship.io/"&gt;advanced feature flagging system that enables such functionalities&lt;/a&gt; would be needed.&lt;/p&gt;

&lt;p&gt;Regardless of what you decide to use feature flags for, one thing is clear: feature flags put you in the driver seat when it comes to releases. You are in complete control of the when and to whom you release. It also allows you to experiment to your heart's content but without the risks, especially when the release doesn't go as expected.&lt;/p&gt;

&lt;p&gt;Working with feature flags also increases productivity among teams. As we've seen in the use-cases outlined above, it's not just developers who have complete control over and access to the release process but product and operations teams can release and roll back as needed.&lt;/p&gt;

&lt;p&gt;You can use feature flags for many things across different contexts. Some may remain for a long period of time while others need to be extracted as soon as possible so as not to run into technical debt.&lt;/p&gt;

&lt;p&gt;Thus, the general advice would be to use feature flags often but keep in mind that proactive flag management and implementation will be needed to maximize the benefits while minimizing the costs.&lt;/p&gt;

&lt;p&gt;Don't just take our word for it. Start your feature flag journey and see for yourself what feature flags can do for you by signing up for a &lt;a href="https://www.flagship.io/sign-up/"&gt;free trial at Flagship by AB Tasty&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>featureflag</category>
      <category>release</category>
      <category>agile</category>
      <category>devops</category>
    </item>
  </channel>
</rss>
