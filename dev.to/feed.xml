<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Create a custom scrollbar with CSS - Easy CSS Scrollbar Tutorial</title>
      <author>Renaissance Engineer</author>
      <pubDate>Fri, 23 Apr 2021 17:06:06 +0000</pubDate>
      <link>https://dev.to/renaissanceengineer/create-a-custom-scrollbar-with-css-easy-css-scrollbar-tutorial-4ag2</link>
      <guid>https://dev.to/renaissanceengineer/create-a-custom-scrollbar-with-css-easy-css-scrollbar-tutorial-4ag2</guid>
      <description>&lt;p&gt;In this video tutorial you will learn how to use CSS to create a custom scrollbar for your website or app.&lt;/p&gt;

&lt;p&gt;I will be going over the basic CSS properties available and create the following scrollbar styles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dark Theme design&lt;/li&gt;
&lt;li&gt;Minimalist&lt;/li&gt;
&lt;li&gt;Patterned&lt;/li&gt;
&lt;li&gt;"Animated" Scrollbar effect&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Gp6c9lJgPUI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Funny Web Dev/Software Dev memes!!!</title>
      <author>ManuTheCoder</author>
      <pubDate>Fri, 23 Apr 2021 17:05:46 +0000</pubDate>
      <link>https://dev.to/manuthecoder/funny-web-dev-software-dev-memes-4hhf</link>
      <guid>https://dev.to/manuthecoder/funny-web-dev-software-dev-memes-4hhf</guid>
      <description>&lt;p&gt;LOL, each of these cracked me up. 🤣🤣🤣&lt;/p&gt;


&lt;p&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p3bQ0sup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/236x/a0/93/65/a09365f6def8d90139deeba12b4b6253.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p3bQ0sup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/236x/a0/93/65/a09365f6def8d90139deeba12b4b6253.jpg"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uQxpXbU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://inteng-storage.s3.amazonaws.com/img/iea/yrwQvLJbON/sizes/programmer-memes_md.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uQxpXbU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://inteng-storage.s3.amazonaws.com/img/iea/yrwQvLJbON/sizes/programmer-memes_md.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sjz3Tp8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.testbytes.net/wp-content/uploads/2019/06/Untitled-55-300x269.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sjz3Tp8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.testbytes.net/wp-content/uploads/2019/06/Untitled-55-300x269.png" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pc-MOeK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images7.memedroid.com/images/UPLOADED366/5fad546bbabd3.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pc-MOeK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images7.memedroid.com/images/UPLOADED366/5fad546bbabd3.jpeg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4hobX7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/m41loixjno811.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4hobX7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/m41loixjno811.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B8ZjQZnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/736x/7d/01/3e/7d013ebff22587a085842154eff082e9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8ZjQZnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/736x/7d/01/3e/7d013ebff22587a085842154eff082e9.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GHfUnHhg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/originals/17/12/45/17124565fa09322c38c59d87a03cc2a0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GHfUnHhg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/originals/17/12/45/17124565fa09322c38c59d87a03cc2a0.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Pd5NPvn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/op96es9026wy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Pd5NPvn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/op96es9026wy.png" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
^ This one's one of my favorites&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fkcRNn3g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/s2n41qn1wuu11.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fkcRNn3g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/s2n41qn1wuu11.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MjY-9R04--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://iq.opengenus.org/content/images/2020/03/quarantine_opengenus.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MjY-9R04--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://iq.opengenus.org/content/images/2020/03/quarantine_opengenus.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5gkWQcFz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EUhyfScWsAAIAYn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5gkWQcFz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EUhyfScWsAAIAYn.png" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--09WRGhq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qasg8puafqj66mgfr0hl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--09WRGhq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qasg8puafqj66mgfr0hl.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aod8UQ5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/236x/b4/3b/57/b43b57d6fc759e6b26f606858413c88c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aod8UQ5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/236x/b4/3b/57/b43b57d6fc759e6b26f606858413c88c.jpg"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sJG2_5tG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-9gag-fun.9cache.com/photo/abGPYNX_460s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sJG2_5tG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-9gag-fun.9cache.com/photo/abGPYNX_460s.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7doHZ2Pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.semicolonworld.com/uploads/memes/gmOAZ1nNYV.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7doHZ2Pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.semicolonworld.com/uploads/memes/gmOAZ1nNYV.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_BVYJTEU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/nac35ntlfg831.jpg%3Fauto%3Dwebp%26s%3Deb6f638c77dd43d58fa01244ef47ffc9c2cadf98" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_BVYJTEU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/nac35ntlfg831.jpg%3Fauto%3Dwebp%26s%3Deb6f638c77dd43d58fa01244ef47ffc9c2cadf98" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NEl4TJFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.chzbgr.com/thumb800/13537797/h77FE3027/codebase-jurassic-park-huge-turd-wrong-database-selected-8388409-rows-affected-hide-the-pain-harold" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NEl4TJFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.chzbgr.com/thumb800/13537797/h77FE3027/codebase-jurassic-park-huge-turd-wrong-database-selected-8388409-rows-affected-hide-the-pain-harold" width="500px"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What's your favorite meme? Let me know in the comments below!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>ReasonML &amp; Rescript in 5 minutes</title>
      <author>Alex Verein</author>
      <pubDate>Fri, 23 Apr 2021 16:46:57 +0000</pubDate>
      <link>https://dev.to/tpom6oh/reasonml-rescript-in-5-minutes-58l6</link>
      <guid>https://dev.to/tpom6oh/reasonml-rescript-in-5-minutes-58l6</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-this-language-about"&gt;
  &lt;/a&gt;
  What is this language about?
&lt;/h3&gt;

&lt;p&gt;It's a functional language that compiles to JavaScript (or to OCaml).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-ml-in-reasonml"&gt;
  &lt;/a&gt;
  What is ML in ReasonML?
&lt;/h3&gt;

&lt;p&gt;Nowadays ML usually stands for Machine Learning, but in the old days there was a programming language called "Meta Language" which is the ancestor of ReasonML, or Reason Meta Language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-rename"&gt;
  &lt;/a&gt;
  Why rename?
&lt;/h3&gt;

&lt;p&gt;ReasonML is compatible with both JS and OCaml, but lately it was mostly used in the JS ecosystem.&lt;br&gt;
Rescript takes JS-related things from Reason and stops being limited by OCaml support.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-are-the-good-things"&gt;
  &lt;/a&gt;
  What are the good things?
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#immutability"&gt;
  &lt;/a&gt;
  Immutability
&lt;/h4&gt;

&lt;p&gt;All references are actually constants. Shadowing is widely used. Standard library functions are non-mutative and produce new instances if any changes are made. There is a workaround to create a mutable reference if needed but deliberate enough to be discouraging.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#piping-and-currying"&gt;
  &lt;/a&gt;
  Piping and currying
&lt;/h4&gt;

&lt;p&gt;Rescript is a functional language with no methods on objects, but you can call and chain functions in a familiar way with piping and currying, like&lt;br&gt;
&lt;code&gt;myList-&amp;gt;List.length&lt;/code&gt; &lt;br&gt;
or &lt;br&gt;
&lt;code&gt;myArray-&amp;gt;Array.map(item =&amp;gt; item * 2)&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#sound-type-system-and-type-inference"&gt;
  &lt;/a&gt;
  Sound type system and type inference
&lt;/h4&gt;

&lt;p&gt;This is probably the main reason to choose rescript. It has strong type system and powerful type inference, so you are rarely required to explicitly define types, but the compiler always knows what the types are.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#no-folder-requirements"&gt;
  &lt;/a&gt;
  No folder requirements
&lt;/h4&gt;

&lt;p&gt;This is a case in many languages, but coming from Java I really appreciate this feature.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#full-support-of-algebraic-data-types"&gt;
  &lt;/a&gt;
  Full support of algebraic data types
&lt;/h4&gt;

&lt;p&gt;It's very easy to describe any domain with the custom types&lt;br&gt;
You can create type aliases like &lt;code&gt;type eventId = string&lt;/code&gt; or complex types like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;type event = {
  id: eventId,
  name: string,
  uniqueName: option&amp;lt;string&amp;gt;,
  description: string,
  properties: list&amp;lt;property&amp;gt;,
  types: list&amp;lt;eventType&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#the-main-construction-in-the-language-is-the-exhaustive-switch-optimized-for-pattern-matching"&gt;
  &lt;/a&gt;
  The main construction in the language is the exhaustive switch optimized for pattern matching
&lt;/h4&gt;

&lt;p&gt;It's accompanied by an empowered kind of enum called variants. There are options of variants with and without duck typing. &lt;a href="https://tinyurl.com/yv4nfpkm"&gt;Better to see it in action&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#simple-syntax"&gt;
  &lt;/a&gt;
  Simple syntax
&lt;/h4&gt;

&lt;p&gt;It's possible to start writing code after just a few hours of learning if you already know another programming language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#relatively-safe-refactoring"&gt;
  &lt;/a&gt;
  Relatively safe refactoring
&lt;/h3&gt;

&lt;p&gt;The combination of a rigid type system and exhaustive switches make the compiler very efficient in finding bugs in the compile time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-not-so-good-things"&gt;
  &lt;/a&gt;
  What are the not so good things?
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#simple-syntax-means-its-verbose"&gt;
  &lt;/a&gt;
  Simple syntax means it's verbose
&lt;/h4&gt;

&lt;p&gt;There is not much syntax sugar, for example to unwrap an optional constant you'd have to write &lt;code&gt;maybeSomething-&amp;gt;Option.map(something -&amp;gt; something-&amp;gt;performOperation)&lt;/code&gt; instead of &lt;code&gt;maybeSomething?.performOperation()&lt;/code&gt; in some other languages.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#you-have-to-define-functions-before-using-them"&gt;
  &lt;/a&gt;
  You have to define functions before using them
&lt;/h4&gt;

&lt;p&gt;Yes, like in good old C.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#you-can-still-have-typerelated-bugs"&gt;
  &lt;/a&gt;
  You can still have type-related bugs
&lt;/h4&gt;

&lt;p&gt;Having a powerful compiler that catches 99% of the type bugs can be too relaxing and it becomes easier to miss that one occasional bug that slips through the compiler checks. 😉&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>web</category>
      <category>node</category>
    </item>
    <item>
      <title>💬 Chatwoot : Nice open-source customer support tool, chatbot  (Alternative to Intercom)</title>
      <author>Javid Mougamadou</author>
      <pubDate>Fri, 23 Apr 2021 16:46:31 +0000</pubDate>
      <link>https://dev.to/javidjms/chatwoot-nice-open-source-customer-support-tool-chatbot-alternative-to-intercom-4pon</link>
      <guid>https://dev.to/javidjms/chatwoot-nice-open-source-customer-support-tool-chatbot-alternative-to-intercom-4pon</guid>
      <description>&lt;h2&gt;
  &lt;a href="#concepts"&gt;
  &lt;/a&gt;
  Concepts
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/5b6ffa0b767ae3ca18eb4c910e7ffe4f6bd1d24b04207b423f7f28d9586604fc/68747470733a2f2f73332e75732d776573742d322e616d617a6f6e6177732e636f6d2f67682d6173736574732e63686174776f6f742e636f6d2f63686174776f6f742d64617368626f6172642d6173736574732e706e67" class="article-body-image-wrapper"&gt;&lt;img src="https://camo.githubusercontent.com/5b6ffa0b767ae3ca18eb4c910e7ffe4f6bd1d24b04207b423f7f28d9586604fc/68747470733a2f2f73332e75732d776573742d322e616d617a6f6e6177732e636f6d2f67682d6173736574732e63686174776f6f742e636f6d2f63686174776f6f742d64617368626f6172642d6173736574732e706e67" alt="Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chatwoot is an open-source customer communication platform that helps companies engage their customers on their website, Facebook page, Twitter, Whatsapp, SMS, email, etc. It is an open-source alternative to Intercom, Zendesk, Salesforce Service Cloud etc. Connect your customer conversation channels and converse with your customers from a single place.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P-A4vVu6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://marketplace.whmcs.com/product/5530/images/screenshots/16568-892-2aa54410738288d1a9d695f641291745.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-A4vVu6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://marketplace.whmcs.com/product/5530/images/screenshots/16568-892-2aa54410738288d1a9d695f641291745.png" alt="Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;p&gt;Chatwoot gives an integrated view of conversations happening in different communication channels.&lt;/p&gt;

&lt;p&gt;It supports the following conversation channels:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Website&lt;/strong&gt;: Talk to your customers using our live chat widget and make use of our SDK to identify a user and provide contextual support.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Facebook&lt;/strong&gt;: Connect your Facebook pages and start replying to the direct messages to your page.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Twitter&lt;/strong&gt;: Connect your Twitter profiles and reply to direct messages or the tweets where you are mentioned.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Whatsapp&lt;/strong&gt;: Connect your Whatsapp business account and manage the conversation in Chatwoot&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SMS&lt;/strong&gt;: Connect your Twilio SMS account and reply to the SMS queries in Chatwoot&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;API Channel&lt;/strong&gt;: Build custom communication channels using our API channel.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Email (beta)&lt;/strong&gt;: Forward all your email queries to Chatwoot and view it in our integrated dashboard.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Other features include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Multi-brand inboxes&lt;/strong&gt;: Manage multiple brands or pages using a single dashboard.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Private notes&lt;/strong&gt;: Inter team communication is possible using private notes in a conversation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Canned responses (Saved replies)&lt;/strong&gt;: Improve the response rate by adding saved replies for frequently asked questions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Conversation Labels&lt;/strong&gt;: Use conversation labelling to create custom workflows.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Auto assignment&lt;/strong&gt;: Chatwoot intelligently assigns a ticket to the agents who have access to the inbox depending on their availability and load.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Conversation continuity&lt;/strong&gt;: If the user has provided an email address through the chat widget, Chatwoot would send an email to the customer under the agent name so that the user can continue the conversation over the email.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Multi-lingual support&lt;/strong&gt;: Chatwoot supports 10+ languages.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Powerful API &amp;amp; Webhooks&lt;/strong&gt;: Extend the capability of the software using Chatwoot’s webhooks and APIs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Integrations&lt;/strong&gt;: Chatwoot natively integrates with Slack right now. Manage your conversations in Slack without logging into the dashboard.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h2&gt;

&lt;p&gt;Detailed documentation is available at &lt;a href="https://www.chatwoot.com/help-center"&gt;www.chatwoot.com/help-center&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation-with-dockercompose"&gt;
  &lt;/a&gt;
  Installation with docker-compose
&lt;/h2&gt;

&lt;p&gt;Here is the guide : &lt;a href="https://www.chatwoot.com/docs/deployment/deploy-chatwoot-with-docker/"&gt;Installation with Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can install it with docker-compose and change the environment variables.&lt;/p&gt;

&lt;p&gt;Here is the docker-compose.yml and the .env .&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# docker-compose.yml&lt;/span&gt;
&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3'&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;&amp;amp;base&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;chatwoot/chatwoot:develop&lt;/span&gt;
    &lt;span class="na"&gt;env_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.env&lt;/span&gt; &lt;span class="c1"&gt;## Change this file for customized env variables&lt;/span&gt;
    &lt;span class="na"&gt;stdin_open&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt; &lt;span class="c1"&gt;# docker run -i&lt;/span&gt;
    &lt;span class="na"&gt;tty&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;        &lt;span class="c1"&gt;# docker run -t&lt;/span&gt;

  &lt;span class="na"&gt;rails&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;postgres&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;redis&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;3000:3000&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;NODE_ENV=production&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;RAILS_ENV=production&lt;/span&gt;
    &lt;span class="na"&gt;entrypoint&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker/entrypoints/rails.sh&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;bundle'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;exec'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;rails'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;s'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;-p'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3000'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;-b'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;0.0.0.0'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

  &lt;span class="na"&gt;sidekiq&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;postgres&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;redis&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;NODE_ENV=production&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;RAILS_ENV=production&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;bundle'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;exec'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;sidekiq'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;-C'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;config/sidekiq.yml'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

  &lt;span class="na"&gt;postgres&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgres:12&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;5432:5432'&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/data/postgres:/var/lib/postgresql/data&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_DB=chatwoot&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_USER=postgres&lt;/span&gt;
      &lt;span class="c1"&gt;# Please provide your own password.&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_PASSWORD=chatwoot&lt;/span&gt;

  &lt;span class="na"&gt;redis&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;redis:alpine&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;sh"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;-c"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;redis-server&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--requirepass&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s"&gt;$REDIS_PASSWORD&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;env_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.env&lt;/span&gt; &lt;span class="c1"&gt;## Change this file for customized env variables&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/data/redis:/data&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;6379:6379'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# .env&lt;/span&gt;
&lt;span class="c1"&gt;# Used to verify the integrity of signed cookies. so ensure a secure value is set&lt;/span&gt;
&lt;span class="s"&gt;SECRET_KEY_BASE=replace_with_lengthy_secure_hex&lt;/span&gt;

&lt;span class="c1"&gt;# Replace with the URL you are planning to use for your app&lt;/span&gt;
&lt;span class="s"&gt;FRONTEND_URL=http://0.0.0.0:3000&lt;/span&gt;

&lt;span class="c1"&gt;# If the variable is set, all non-authenticated pages would fallback to the default locale.&lt;/span&gt;
&lt;span class="c1"&gt;# Whenever a new account is created, the default language will be DEFAULT_LOCALE instead of en&lt;/span&gt;
&lt;span class="c1"&gt;# DEFAULT_LOCALE=en&lt;/span&gt;

&lt;span class="c1"&gt;# If you plan to use CDN for your assets, set Asset CDN Host&lt;/span&gt;
&lt;span class="s"&gt;ASSET_CDN_HOST=&lt;/span&gt;

&lt;span class="c1"&gt;# Force all access to the app over SSL, default is set to false&lt;/span&gt;
&lt;span class="s"&gt;FORCE_SSL=false&lt;/span&gt;

&lt;span class="c1"&gt;# This lets you control new sign ups on your chatwoot installation&lt;/span&gt;
&lt;span class="c1"&gt;# true : default option, allows sign ups&lt;/span&gt;
&lt;span class="c1"&gt;# false : disables all the end points related to sign ups&lt;/span&gt;
&lt;span class="c1"&gt;# api_only: disables the UI for signup, but you can create sign ups via the account apis&lt;/span&gt;
&lt;span class="s"&gt;ENABLE_ACCOUNT_SIGNUP=false&lt;/span&gt;

&lt;span class="c1"&gt;# Redis config&lt;/span&gt;
&lt;span class="s"&gt;REDIS_URL=redis://redis:6379&lt;/span&gt;
&lt;span class="c1"&gt;# If you are using docker-compose, set this variable's value to be any string,&lt;/span&gt;
&lt;span class="c1"&gt;# which will be the password for the redis service running inside the docker-compose&lt;/span&gt;
&lt;span class="c1"&gt;# to make it secure&lt;/span&gt;
&lt;span class="s"&gt;REDIS_PASSWORD=chatwoot&lt;/span&gt;
&lt;span class="c1"&gt;# Redis Sentinel can be used by passing list of sentinel host and ports e,g. sentinel_host1:port1,sentinel_host2:port2&lt;/span&gt;
&lt;span class="s"&gt;REDIS_SENTINELS=&lt;/span&gt;
&lt;span class="c1"&gt;# Redis sentinel master name is required when using sentinel, default value is "mymaster".&lt;/span&gt;
&lt;span class="c1"&gt;# You can find list of master using "SENTINEL masters" command&lt;/span&gt;
&lt;span class="s"&gt;REDIS_SENTINEL_MASTER_NAME=&lt;/span&gt;

&lt;span class="c1"&gt;# Postgres Database config variables&lt;/span&gt;
&lt;span class="s"&gt;POSTGRES_HOST=postgres&lt;/span&gt;
&lt;span class="s"&gt;POSTGRES_USERNAME=postgres&lt;/span&gt;
&lt;span class="s"&gt;POSTGRES_PASSWORD=chatwoot&lt;/span&gt;
&lt;span class="s"&gt;RAILS_ENV=development&lt;/span&gt;
&lt;span class="s"&gt;RAILS_MAX_THREADS=5&lt;/span&gt;

&lt;span class="c1"&gt;# The email from which all outgoing emails are sent&lt;/span&gt;
&lt;span class="c1"&gt;# could user either  `email@yourdomain.com` or `BrandName &amp;lt;email@yourdomain.com&amp;gt;`&lt;/span&gt;
&lt;span class="s"&gt;MAILER_SENDER_EMAIL=Chatwoot &amp;lt;accounts@chatwoot.com&amp;gt;&lt;/span&gt;


&lt;span class="c1"&gt;#SMTP domain key is set up for HELO checking&lt;/span&gt;
&lt;span class="s"&gt;SMTP_DOMAIN=chatwoot.com&lt;/span&gt;
&lt;span class="c1"&gt;# the default value is set "mailhog" and is used by docker-compose for development environments,&lt;/span&gt;
&lt;span class="c1"&gt;# Set the value as "localhost" or your SMTP address in other environments&lt;/span&gt;
&lt;span class="s"&gt;SMTP_ADDRESS=mailhog&lt;/span&gt;
&lt;span class="s"&gt;SMTP_PORT=1025&lt;/span&gt;
&lt;span class="s"&gt;SMTP_USERNAME=&lt;/span&gt;
&lt;span class="s"&gt;SMTP_PASSWORD=&lt;/span&gt;
&lt;span class="c1"&gt;# plain,login,cram_md5&lt;/span&gt;
&lt;span class="s"&gt;SMTP_AUTHENTICATION=&lt;/span&gt;
&lt;span class="s"&gt;SMTP_ENABLE_STARTTLS_AUTO=true&lt;/span&gt;
&lt;span class="c1"&gt;# Can be: 'none', 'peer', 'client_once', 'fail_if_no_peer_cert', see http://api.rubyonrails.org/classes/ActionMailer/Base.html&lt;/span&gt;
&lt;span class="s"&gt;SMTP_OPENSSL_VERIFY_MODE=peer&lt;/span&gt;

&lt;span class="c1"&gt;# Mail Incoming&lt;/span&gt;
&lt;span class="c1"&gt;# This is the domain set for the reply emails when conversation continuity is enabled&lt;/span&gt;
&lt;span class="s"&gt;MAILER_INBOUND_EMAIL_DOMAIN=&lt;/span&gt;
&lt;span class="c1"&gt;# Set this to appropriate ingress channel with regards to incoming emails&lt;/span&gt;
&lt;span class="c1"&gt;# Possible values are :&lt;/span&gt;
&lt;span class="c1"&gt;# relay for Exim, Postfix, Qmail&lt;/span&gt;
&lt;span class="c1"&gt;# mailgun for Mailgun&lt;/span&gt;
&lt;span class="c1"&gt;# mandrill for Mandrill&lt;/span&gt;
&lt;span class="c1"&gt;# postmark for Postmark&lt;/span&gt;
&lt;span class="c1"&gt;# sendgrid for Sendgrid&lt;/span&gt;
&lt;span class="s"&gt;RAILS_INBOUND_EMAIL_SERVICE=&lt;/span&gt;
&lt;span class="c1"&gt;# Use one of the following based on the email ingress service&lt;/span&gt;
&lt;span class="c1"&gt;# Ref: https://edgeguides.rubyonrails.org/action_mailbox_basics.html&lt;/span&gt;
&lt;span class="s"&gt;RAILS_INBOUND_EMAIL_PASSWORD=&lt;/span&gt;
&lt;span class="s"&gt;MAILGUN_INGRESS_SIGNING_KEY=&lt;/span&gt;
&lt;span class="s"&gt;MANDRILL_INGRESS_API_KEY=&lt;/span&gt;

&lt;span class="c1"&gt;# Storage&lt;/span&gt;
&lt;span class="s"&gt;ACTIVE_STORAGE_SERVICE=local&lt;/span&gt;

&lt;span class="c1"&gt;# Amazon S3&lt;/span&gt;
&lt;span class="c1"&gt;# documentation: https://www.chatwoot.com/docs/configuring-s3-bucket-as-cloud-storage&lt;/span&gt;
&lt;span class="s"&gt;S3_BUCKET_NAME=&lt;/span&gt;
&lt;span class="s"&gt;AWS_ACCESS_KEY_ID=&lt;/span&gt;
&lt;span class="s"&gt;AWS_SECRET_ACCESS_KEY=&lt;/span&gt;
&lt;span class="s"&gt;AWS_REGION=&lt;/span&gt;

&lt;span class="c1"&gt;# Sentry&lt;/span&gt;
&lt;span class="s"&gt;SENTRY_DSN=&lt;/span&gt;

&lt;span class="c1"&gt;# Log settings&lt;/span&gt;
&lt;span class="c1"&gt;# Disable if you want to write logs to a file&lt;/span&gt;
&lt;span class="s"&gt;RAILS_LOG_TO_STDOUT=true&lt;/span&gt;
&lt;span class="s"&gt;LOG_LEVEL=info&lt;/span&gt;
&lt;span class="s"&gt;LOG_SIZE=500&lt;/span&gt;

&lt;span class="c1"&gt;### This environment variables are only required if you are setting up social media channels&lt;/span&gt;

&lt;span class="c1"&gt;# Facebook&lt;/span&gt;
&lt;span class="c1"&gt;# documentation: https://www.chatwoot.com/docs/facebook-setup&lt;/span&gt;
&lt;span class="s"&gt;FB_VERIFY_TOKEN=&lt;/span&gt;
&lt;span class="s"&gt;FB_APP_SECRET=&lt;/span&gt;
&lt;span class="s"&gt;FB_APP_ID=&lt;/span&gt;

&lt;span class="c1"&gt;# Twitter&lt;/span&gt;
&lt;span class="c1"&gt;# documentation: https://www.chatwoot.com/docs/twitter-app-setup&lt;/span&gt;
&lt;span class="s"&gt;TWITTER_APP_ID=&lt;/span&gt;
&lt;span class="s"&gt;TWITTER_CONSUMER_KEY=&lt;/span&gt;
&lt;span class="s"&gt;TWITTER_CONSUMER_SECRET=&lt;/span&gt;
&lt;span class="s"&gt;TWITTER_ENVIRONMENT=&lt;/span&gt;

&lt;span class="c1"&gt;#slack integration&lt;/span&gt;
&lt;span class="s"&gt;SLACK_CLIENT_ID=&lt;/span&gt;
&lt;span class="s"&gt;SLACK_CLIENT_SECRET=&lt;/span&gt;

&lt;span class="c1"&gt;### Change this env variable only if you are using a custom build mobile app&lt;/span&gt;
&lt;span class="c1"&gt;## Mobile app env variables&lt;/span&gt;
&lt;span class="s"&gt;IOS_APP_ID=6C953F3RX2.com.chatwoot.app&lt;/span&gt;


&lt;span class="c1"&gt;### Smart App Banner&lt;/span&gt;
&lt;span class="c1"&gt;# https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/PromotingAppswithAppBanners/PromotingAppswithAppBanners.html&lt;/span&gt;
&lt;span class="c1"&gt;# You can find your app-id in https://itunesconnect.apple.com&lt;/span&gt;
&lt;span class="c1"&gt;#IOS_APP_IDENTIFIER=1495796682&lt;/span&gt;

&lt;span class="c1"&gt;## Push Notification&lt;/span&gt;
&lt;span class="c1"&gt;## generate a new key value here : https://d3v.one/vapid-key-generator/&lt;/span&gt;
&lt;span class="c1"&gt;# VAPID_PUBLIC_KEY=&lt;/span&gt;
&lt;span class="c1"&gt;# VAPID_PRIVATE_KEY=&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# for mobile apps&lt;/span&gt;
&lt;span class="c1"&gt;# FCM_SERVER_KEY=&lt;/span&gt;

&lt;span class="c1"&gt;## Bot Customizations&lt;/span&gt;
&lt;span class="s"&gt;USE_INBOX_AVATAR_FOR_BOT=true&lt;/span&gt;



&lt;span class="c1"&gt;## IP look up configuration&lt;/span&gt;
&lt;span class="c1"&gt;## ref https://github.com/alexreisner/geocoder/blob/master/README_API_GUIDE.md&lt;/span&gt;
&lt;span class="c1"&gt;## works only on accounts with ip look up feature enabled&lt;/span&gt;
&lt;span class="c1"&gt;# IP_LOOKUP_SERVICE=geoip2&lt;/span&gt;
&lt;span class="c1"&gt;# maxmindb api key to use geoip2 service&lt;/span&gt;
&lt;span class="c1"&gt;# IP_LOOKUP_API_KEY=&lt;/span&gt;

&lt;span class="c1"&gt;## Development Only Config&lt;/span&gt;
&lt;span class="c1"&gt;# if you want to use letter_opener for local emails&lt;/span&gt;
&lt;span class="c1"&gt;# LETTER_OPENER=true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Prepare the database by running the migrations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose run &lt;span class="nt"&gt;--rm&lt;/span&gt; rails bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rails db:chatwoot_prepare
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Get the service up and running.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose up &lt;span class="nt"&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your Chatwoot installation should be accessible with &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.chatwoot.com/"&gt;https://www.chatwoot.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/chatwoot/chatwoot"&gt;https://github.com/chatwoot/chatwoot&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gDTTisq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/73185/107608463-129ff600-6c62-11eb-84f4-1dc1ebdbf1de.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gDTTisq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/73185/107608463-129ff600-6c62-11eb-84f4-1dc1ebdbf1de.gif" alt="Image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>opensource</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Popular string functions in MySQL - CONCAT and SUBSTRING</title>
      <author>Jo</author>
      <pubDate>Fri, 23 Apr 2021 16:37:06 +0000</pubDate>
      <link>https://dev.to/jo_josephs/popular-string-functions-in-mysql-concat-and-substring-h1o</link>
      <guid>https://dev.to/jo_josephs/popular-string-functions-in-mysql-concat-and-substring-h1o</guid>
      <description>&lt;p&gt;There are some very helpful and fun string functions in MySQl and I've decided to review them here as I go through Colt Steele's MySQL Udemy course. This article will serve as my notes for that section of the course. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#concat"&gt;
  &lt;/a&gt;
  CONCAT
&lt;/h3&gt;

&lt;p&gt;The CONCAT function concatenates two or more value together. This is helpful for formatting data that is useful to the person reading the output.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select concat(author_fname, " ", author_lname, " - ", title) AS Author
from books;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tAUQA4T_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03l729h9jiflx3ehxmjp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tAUQA4T_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03l729h9jiflx3ehxmjp.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A variation of the CONCAT function is the CONCAT_WS function, which stands for CONCAT &lt;strong&gt;with separator&lt;/strong&gt;. This is useful if you're separating multiple pieces of data with the same symbol between them. The first argument in the CONCAT_WS function is the operator used to separate all the the other individual arguments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select concat_ws(' - ', author_fname, author_lname, title) 
AS Author
from books;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KDdglpd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilodx0xxcrfnlv6zje79.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KDdglpd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilodx0xxcrfnlv6zje79.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see from the example above, there is now a dash between the author's first name, last name, and book title.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#substring"&gt;
  &lt;/a&gt;
  SUBSTRING
&lt;/h3&gt;

&lt;p&gt;Another helpful function is substring. This function is useful for extrapolating data when you only need a part of the string. This function is also useful in combination with other functions to make even more powerful queries. The basic makeup of a simple substring query includes the string that data needs to be extrapolated from, and the location of the data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select substring('Jowayne', 1,2)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result of the example above would give me "Jo", as the Jowayne is the string to be analyzed, the 1 is location where I need the extrapolation to begin, and 2 is where I need it to end. &lt;br&gt;
You can also choose to just use one number(the starting index) and the function will automatically start at that number and go till the end, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select substring('Jowayne',3)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result of this would be &lt;strong&gt;"wayne"&lt;/strong&gt; since I started at 3.&lt;br&gt;
The substring function also accommodates negative numbers. The substring would begin at the end of the string so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select substring('Jowayne',3)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result would be &lt;strong&gt;'yne'&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;And as I referenced before, you can use substring with other string functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select concat(substring(title, 1, 10),'...') from books;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zq1wIq2g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3i3s94sbk1qt5uyisr9n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zq1wIq2g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3i3s94sbk1qt5uyisr9n.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it for this post! Thanks for reading :)&lt;/p&gt;

</description>
      <category>sql</category>
      <category>mysql</category>
    </item>
    <item>
      <title>Functional Programming : Functions</title>
      <author>Pratik sharma</author>
      <pubDate>Fri, 23 Apr 2021 16:23:21 +0000</pubDate>
      <link>https://dev.to/pratiksharm/functional-programming-functions-4m9c</link>
      <guid>https://dev.to/pratiksharm/functional-programming-functions-4m9c</guid>
      <description>&lt;h3&gt;
  &lt;a href="#main-ideas-of-functional-programming"&gt;
  &lt;/a&gt;
  Main Ideas of Functional Programming.
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Function - &lt;code&gt;This article&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Compositions with Functions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Currying&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Catamorphism  &lt;code&gt;Collapsable&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Applicative      &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Monad         &lt;code&gt;Chainable&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Monoid          &lt;code&gt;Aggregatable&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note:- In the following article, only function concept of functional Programming is introduced. I will be writing a whole series on functional programming from concept to application. Personally i think functional programming is highly useful on the frontend side of the web-development. &lt;/p&gt;

&lt;p&gt;With TypeScript, React introducing hooks (which are highly loved by me), Graphql which has a typed Schema for requesting APIs, Testing libraries like Jest. &lt;/p&gt;

&lt;p&gt;All of this, which are  functional Programming based like declarative (&lt;strong&gt;react&lt;/strong&gt;) , &lt;br&gt;
algebraic data typed (&lt;strong&gt;graphql schema&lt;/strong&gt;). I think i should have learnt functional Programming before React. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-we-dont-do-in-fp"&gt;
  &lt;/a&gt;
  What we don't do in FP?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qzP8aPse--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619180009872/Kd_7W-n5x.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qzP8aPse--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619180009872/Kd_7W-n5x.jpeg" alt="We don't do that here.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;No Impure Functions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No shared State&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No Mutable data&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No Side Effects&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#in-the-practical-setting"&gt;
  &lt;/a&gt;
  In the Practical setting
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Loops =&amp;gt; do...while  for   for...of   for...in&lt;/li&gt;
&lt;li&gt;Variable declarations with var or let&lt;/li&gt;
&lt;li&gt;Void functions&lt;/li&gt;
&lt;li&gt;Object mutation (for example: o.x = 5;)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Array mutator methods =&amp;gt; copyWithin, fill, pop, push, reverse, shift, sort, splice, unshift&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Map mutator methods  =&amp;gt; clear, delete, set, Set mutator methods, add, clear, delete&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#an-analogy-to-explain-fp"&gt;
  &lt;/a&gt;
  An Analogy to explain FP
&lt;/h3&gt;

&lt;p&gt;In childhood, We all have played with legos or building-block of some kind. We can make a lot of things with  combining these lego pieces, depending upon what we are making. May be you want to make star war ship or iron man mask. The building block i.e. lego are used in some combinations to make a desired model. If a lego piece gets broken you can replace it with a new piece. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Functions are the legos of Functional Programming. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Functional Programming Paradigm has a lot of mathematical terms like monad, function of function or higher order function. Whereas, OOP has a lot of biological terms like polymorphism, inheritance. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#give-me-a-definition"&gt;
  &lt;/a&gt;
  Give me a definition.
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Functional programming (often abbreviated FP) is the process of building software by composing pure functions, avoiding shared state, mutable data, and side-effects. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Functional programming is declarative rather than &lt;code&gt;imperative&lt;/code&gt;, and application state flows through pure functions. Contrast with object oriented programming, where application state is usually shared and colocated with methods in objects.&lt;/p&gt;

&lt;p&gt;Functional code tends to be &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; concise&lt;/li&gt;
&lt;li&gt; predictable&lt;/li&gt;
&lt;li&gt; easier to test &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;than imperative or object oriented code — but if you’re unfamiliar with it and the common patterns associated with it, functional code can also seem a lot more dense, and the related literature can be impenetrable to newcomers. Not mutating the data. Immutability is a core of functional programming.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-a-pure-function"&gt;
  &lt;/a&gt;
  What is a Pure Function?
&lt;/h4&gt;

&lt;p&gt;A pure function is a function which:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Given the same input, will always return the same output.&lt;/li&gt;
&lt;li&gt;Produces no side effects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#hello-world-of-fp"&gt;
  &lt;/a&gt;
  Hello World Of FP.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const hi = name =&amp;gt; `Hi ${name}`

const greeting = hi; 

greeting("Stranger")   //       'Hi Stranger'

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#a-simple-composition-example"&gt;
  &lt;/a&gt;
  A simple composition example
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const square = x =&amp;gt; x*x;

const addition = x, y =&amp;gt; x + y;

const SquareRoot = x =&amp;gt; Math.sqrt(x);


const EuclideanDistance = x, y =&amp;gt; SquareRoot(addition(square(x), square(y)));


console.log(EuclideanDistance(3,4));

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#uppercase-the-first-letter-of-a-string"&gt;
  &lt;/a&gt;
  UpperCase the first letter of a String
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function UpperCase([first, ...rest]){
    return first.toUpperCase() + rest.join('')
}

console.log(UpperCase('dan'))


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;** if you have any suggestions, please do tell me... ** &lt;/p&gt;

</description>
      <category>functional</category>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>5 Templating Languages To Use Instead of HTML</title>
      <author>Nihar dev</author>
      <pubDate>Fri, 23 Apr 2021 16:21:28 +0000</pubDate>
      <link>https://dev.to/nihardev3/5-templating-languages-to-use-instead-of-html-14f7</link>
      <guid>https://dev.to/nihardev3/5-templating-languages-to-use-instead-of-html-14f7</guid>
      <description>&lt;p&gt;Pure HTML files are slowly getting a tad outdated and are not the best choice for creating brand new websites. If you’re working with a framework such as Express.js, you get the option to use a templating language. This templating language makes sure you can split your code into reusable components for a better developer experience.&lt;/p&gt;

&lt;p&gt;There are quite a few templating languages. Some are very similar to HTML, while others are completely unique.&lt;/p&gt;

&lt;p&gt;Using templating languages is a great way of connecting the server side to the frontend of your site. Certain frameworks make it extremely easy to use and handle all the parsing for you.&lt;/p&gt;

&lt;p&gt;Here are some templating languages that you can use, with little code snippets to show you how they work and what makes them unique.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#ejs"&gt;
  &lt;/a&gt;
  EJS
&lt;/h1&gt;

&lt;p&gt;Embedded JavaScript, or, EJS, is a templating language that lets you generate HTML with plain JavaScript in between. It is a very simple language and is a good choice for students if they ever need to choose a templating language.&lt;/p&gt;

&lt;p&gt;It uses &amp;lt;% %&amp;gt; with JavaScript in between to create dynamic websites and webpages. This isn’t the best choice for complex applications but will work for most projects.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#handlebars"&gt;
  &lt;/a&gt;
  Handlebars
&lt;/h1&gt;

&lt;p&gt;Handlebars is another very simple templating language without a lot of unique features. It is, however, a great way to create small projects, and I’ve actually used this one in a project once.&lt;/p&gt;

&lt;p&gt;The syntax is easy to read and use. The language features what they call helpers, which are functions you can use with the syntax with the hashtags. These can be a loop, conditionals, or something you can create yourself. So&lt;br&gt;
this language does offer customization if you need it.&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/5-templating-languages-to-use-instead.html"&gt;https://cmsinstallation.blogspot.com/2021/04/5-templating-languages-to-use-instead.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>programming</category>
      <category>design</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Free APIs That Nobody Is Talking About
</title>
      <author>Nihar dev</author>
      <pubDate>Fri, 23 Apr 2021 16:14:19 +0000</pubDate>
      <link>https://dev.to/nihardev3/free-apis-that-nobody-is-talking-about-3me1</link>
      <guid>https://dev.to/nihardev3/free-apis-that-nobody-is-talking-about-3me1</guid>
      <description>&lt;p&gt;Nothing excites me more than finding an out of the ordinary API.Many times we just want to focus on the frontend but also need interesting, dynamic data to display.This is where public APIs come into play. API is an acronym for Application Programming Interface.The core benefit of using it is that it allows one program to interact with other programs.Using public APIs allows you to focus on the frontend and things that matter without worrying so much about the database and the backend.Below are 7 less-talked about public and free APIs.&lt;/p&gt;

&lt;p&gt;Evil Insult Generator&lt;br&gt;
How many times have you tried to insult your best friend? Now you have got a helping hand!&lt;/p&gt;

&lt;p&gt;As the API name suggests, the goal is to offer some of the evilest insults.&lt;/p&gt;

&lt;p&gt;You can create an app centered around this API or combine this API with other excellent APIs provided below like implementing the generated insults in meme templates.&lt;/p&gt;

&lt;p&gt;The API is extremely simple to use. You just need to visit a URL and you get the desired JSON output without even signing up for a key.&lt;/p&gt;

&lt;p&gt;Movies and TV API&lt;br&gt;
TMDb is a famous API, but do you know there are other API that provides insights from specific shows and movies?&lt;/p&gt;

&lt;p&gt;Below are some of the APIs you can use to develop apps featuring your favorite show:&lt;br&gt;
Breaking Bad API&lt;br&gt;
API of Ice And Fire&lt;br&gt;
Harry Potter API&lt;br&gt;
YouTube API (for embedding YouTube functionalities)&lt;br&gt;
The Lord of the Rings API&lt;/p&gt;

&lt;p&gt;Like the API above, you can get started with some of the APIs without even signing up for a key.&lt;/p&gt;

&lt;p&gt;Not only this, using non-copyright images, you can truly create a great fan app for your beloved shows.&lt;/p&gt;

&lt;p&gt;Below is a sample output from the Breaking Bad API which you can get here.&lt;/p&gt;

&lt;p&gt;It doesn’t require a key however has a rate limit of 10,000 requests per day.&lt;/p&gt;

&lt;p&gt;{&lt;br&gt;
[&lt;br&gt;
{&lt;br&gt;
"quote_id":1,&lt;br&gt;
"quote":"I am not in danger, Skyler. I am the danger!",&lt;br&gt;
"author":"Walter White",&lt;br&gt;
"series":"Breaking Bad"&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
"quote_id":2,&lt;br&gt;
"quote":"Stay out of my territory.",&lt;br&gt;
"author":"Walter White",&lt;br&gt;
"series":"Breaking Bad"&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
"quote_id":3,&lt;br&gt;
"quote":"IFT",&lt;br&gt;
"author":"Skyler White",&lt;br&gt;
"series":"Breaking Bad"&lt;br&gt;
}&lt;br&gt;
.....&lt;br&gt;
]&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;It returns a JSON containing an array of objects with quotes, the author of the quotes, and an ID.&lt;/p&gt;

&lt;p&gt;You can mix these dedicated APIs with YouTube API to create an ultimate app for the fans of these shows.&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/7-free-apis-that-nobody-is-talking-about.html"&gt;https://cmsinstallation.blogspot.com/2021/04/7-free-apis-that-nobody-is-talking-about.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>php</category>
      <category>programming</category>
      <category>design</category>
    </item>
    <item>
      <title>Solve the scenario - using JObject in Dotnet</title>
      <author>Debashish Pal</author>
      <pubDate>Fri, 23 Apr 2021 16:13:18 +0000</pubDate>
      <link>https://dev.to/debashish2014/solve-the-scenario-using-jobject-21fp</link>
      <guid>https://dev.to/debashish2014/solve-the-scenario-using-jobject-21fp</guid>
      <description>&lt;h1&gt;
  &lt;a href="#use-case"&gt;
  &lt;/a&gt;
  Use Case:
&lt;/h1&gt;

&lt;p&gt;We have this Object and you want to convert it into JSON.&lt;br&gt;
Sounds simple. Right !!&lt;/p&gt;

&lt;p&gt;However, the trick here is that you need to add couple of fields dynamically to the object, before converting.&lt;/p&gt;

&lt;p&gt;Take a pause&lt;/p&gt;

&lt;p&gt;Think about the solution&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  ?
&lt;/h1&gt;

&lt;p&gt;Think again&lt;/p&gt;

&lt;p&gt;Scroll down for the solution &lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h1&gt;

&lt;p&gt;Run the below code in Linqpad (&lt;a href="https://www.linqpad.net/"&gt;https://www.linqpad.net/&lt;/a&gt;), to see it working.&lt;/p&gt;

&lt;p&gt;Make sure you are pressing F4, and adding the Nuget package i.e. Newtonsoft.Json&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;I have created this extension method &lt;strong&gt;AddFieldsAndConvertToJson&lt;/strong&gt;. We are simply passing array of tuple's with the required field name &amp;amp; data to the extension.&lt;/p&gt;

&lt;p&gt;Check the output below. The fields are getting added to the employee object dynamically, and the JSON is being outputted.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qNLtqQ7u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcye8sc25zhiqf5b9lzy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qNLtqQ7u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcye8sc25zhiqf5b9lzy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Their might be a specific situation, where this extension might come in handy.&lt;/p&gt;

&lt;p&gt;Hope you find it useful.&lt;/p&gt;

&lt;p&gt;Happy Coding !!&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>csharp</category>
      <category>json</category>
      <category>jobject</category>
    </item>
    <item>
      <title>Awesome Git Shortcuts</title>
      <author>Sunny Golovine</author>
      <pubDate>Fri, 23 Apr 2021 16:00:33 +0000</pubDate>
      <link>https://dev.to/sgolovine/awesome-git-shortcuts-2bpd</link>
      <guid>https://dev.to/sgolovine/awesome-git-shortcuts-2bpd</guid>
      <description>&lt;p&gt;Besides VSCode, git is probably the most used tool in my toolbox. Over the years I've learned that there are a few common git commands that I always repeat, so I created some sensible aliases to help me move faster. I wanted to share these aliases with any folks here that might find them helpful.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git Status&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By far the most frequently used alias is my alias to &lt;code&gt;git status&lt;/code&gt;. I aliased &lt;code&gt;git status&lt;/code&gt; to &lt;code&gt;gst&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git Add&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The normal command for staging files for a commit is &lt;code&gt;git add -A&lt;/code&gt; or &lt;code&gt;git add .&lt;/code&gt; or &lt;code&gt;git add some/file/name.ts&lt;/code&gt;. I created an alias for it simply to &lt;code&gt;ga&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git Commit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Simmilarly to git add, I also created an alias for git commit. The typical command is &lt;code&gt;git commit&lt;/code&gt; or &lt;code&gt;git commit -m &amp;lt;COMMIT_MSG&amp;gt;&lt;/code&gt;, I aliased &lt;code&gt;git commit&lt;/code&gt; to &lt;code&gt;gc&lt;/code&gt; and &lt;code&gt;git commit -m&lt;/code&gt; to &lt;code&gt;gcm&lt;/code&gt;. Now you can type out a commit message like &lt;code&gt;gcm "some cool messsage"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git Diff&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For git diff I added two aliases. First is &lt;code&gt;gd&lt;/code&gt; which is an alias to &lt;code&gt;git diff&lt;/code&gt;. However I also have &lt;code&gt;gdc&lt;/code&gt; which is aliased to &lt;code&gt;git diff --cached&lt;/code&gt;, for viewing diffs after you have staged your files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git Push&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I also aliased &lt;code&gt;git push&lt;/code&gt; to &lt;code&gt;gp&lt;/code&gt;. Not much more to say here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git Checkout&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For quickly checking out branches I aliased &lt;code&gt;git checkout&lt;/code&gt; to &lt;code&gt;gco&lt;/code&gt;. For new branches I also created a &lt;code&gt;gcob&lt;/code&gt; alias that does &lt;code&gt;git checkout -b&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git Branch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For quickly listing branches I aliased &lt;code&gt;git branch&lt;/code&gt; to &lt;code&gt;gb&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benefits&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Besides being much faster to type out, another benefit of these aliases is that you can still use flags like normally. Say you want to push a new branch to a remote. Without aliases it would look like this: &lt;code&gt;git push -u origin my_branch&lt;/code&gt;. But with aliases I can simply type &lt;code&gt;gp -u origin my_branch&lt;/code&gt;, not a significant savings but when you type the command out thousands of times, it starts to make a difference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#try-them-out-yourself"&gt;
  &lt;/a&gt;
  Try them out yourself
&lt;/h2&gt;

&lt;p&gt;While there are many ways you can create a git alias, I did it in the most simple way by just adding an alias to my &lt;code&gt;.bashrc&lt;/code&gt;. Here are all the aliases I mentioned in this post&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;gst&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'git status'&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;ga&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'git add -A'&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;gc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'git commit'&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;gcm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'git commit -m'&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;gd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'git diff'&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;gdc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'git diff --cached'&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;gp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'git push'&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;gco&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'git checkout'&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;gcob&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'git checkout -b'&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;gb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'git branch'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to give these a test drive, paste this code block directly into your terminal and it will enable these aliases for the current session. If you like them you can then add it to your &lt;code&gt;.bashrc&lt;/code&gt; / &lt;code&gt;.zshrc&lt;/code&gt; / etc.&lt;/p&gt;




&lt;p&gt;If you liked this post check out some of my other writing &lt;a href="https://sunnygolovine.com/blog"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>javascript</category>
      <category>react</category>
      <category>git</category>
    </item>
    <item>
      <title>Basics of HTTP &amp; DNS</title>
      <author>Kaiwalya Koparkar</author>
      <pubDate>Fri, 23 Apr 2021 15:46:24 +0000</pubDate>
      <link>https://dev.to/kaiwalyakoparkar/basics-of-http-dns-254</link>
      <guid>https://dev.to/kaiwalyakoparkar/basics-of-http-dns-254</guid>
      <description>&lt;h2&gt;
  &lt;a href="#basics-of-httphow-the-internet-and-web-work"&gt;
  &lt;/a&gt;
  Basics of HTTP/How the internet and web work
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-dns"&gt;
  &lt;/a&gt;
  What is DNS:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Whenever we type in the website name such as google.com how would our computer know which computer to communicate with in order to show/fetch us the information and get our work done? This thing is managed using &lt;strong&gt;DNS (Domain Name System)&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;Work of DNS is to convert google.com into a number (Internet Protocol Address aka IP address).&lt;/li&gt;
&lt;li&gt;Go to Inspect element in any website -&amp;gt; Networks -&amp;gt; Docs -&amp;gt; website.com -&amp;gt; And see the remote address. This remote address is the conversion of the site into an address using DNS&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-does-dns-work"&gt;
  &lt;/a&gt;
  How does DNS work?
&lt;/h3&gt;

&lt;p&gt;So basically it contacts with the DNS resolver on your computer. (Either ISP provides it or you have to Manually add it)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;So what is DNS resolver?&lt;/strong&gt; : A DNS resolver is a hard coded IP address given to your computer to generate a request like (ip address of website.com). 

&lt;ul&gt;
&lt;li&gt;Common Primary DNS of computer is &lt;code&gt;1.1.1.1&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;This means the computer is going to ask what is ip address of website.com with the help of &lt;code&gt;1.1.1.1&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;It takes a question from a client (browser or OS). &lt;/li&gt;
&lt;li&gt;Client asks the &lt;code&gt;1.1.1.1&lt;/code&gt; for the IP address of the website.com&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;1.1.1.1&lt;/code&gt; calls a another DNS(1) and asks him what is the IP address of domains with ".com" are stored. It return a another DNS(2)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;1.1.1.1&lt;/code&gt; calls a DNS(2) and asks him for the IP address of website.com. Then it returns the another DNS(3).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;1.1.1.1&lt;/code&gt; calls a DNS(3) and asks for the IP address of the website.com. Then it returns the IP address of the website.com&lt;/li&gt;
&lt;li&gt;After this it gets connected to the website.com&lt;/li&gt;
&lt;li&gt;Now &lt;code&gt;1.1.1.1&lt;/code&gt; may cache the IP address of website.com to save the time in the next call&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#http"&gt;
  &lt;/a&gt;
  HTTP
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;There are certain rules to be followed by the client and the server in order to establish a successful communication.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What is HTTP:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is a plain text protocol.&lt;/li&gt;
&lt;li&gt;So when you go to the Request headers in the Network -&amp;gt; Doc -&amp;gt; Request headers. What ever you see is the response needed by the client to establish a successful network with the IP address.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What is Status Code?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;HTTP&lt;/code&gt; response status codes indicate whether a specific &lt;code&gt;HTTP&lt;/code&gt; request has been successfully completed. Responses are grouped in five classes:&lt;/li&gt;
&lt;li&gt;Informational responses (&lt;code&gt;100–199&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Successful responses (&lt;code&gt;200–299&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Redirects (&lt;code&gt;300–399&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Client errors (&lt;code&gt;400–499&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Server errors (&lt;code&gt;500–599&lt;/code&gt;)
Check more &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What are port numbers?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For example if the computer runs the http and ftp at the same time. How would a server know which service should handle it if the query is comming from the computer. This task is handled by the ports (eg: 62.43.83.43:80) so 80 si the port here (anything after &lt;code&gt;:&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;So when you are visiting &lt;a href="http://example.com"&gt;http://example.com&lt;/a&gt; you are acutally visiting &lt;a href="http://example.com:80"&gt;http://example.com:80&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Some comman port numbers

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;http&lt;/code&gt; = &lt;code&gt;80&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;https&lt;/code&gt; = &lt;code&gt;443&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Each internet protocol is associated with a default port&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;SMTP&lt;/code&gt; (&lt;code&gt;25&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;POP3&lt;/code&gt; (&lt;code&gt;110&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;IMAP&lt;/code&gt; (&lt;code&gt;143&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;IRC&lt;/code&gt; (&lt;code&gt;194&lt;/code&gt;)
Check more &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Port"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Whenever you make a request the computer is listening to the post number.&lt;/li&gt;
&lt;li&gt;It is not mandatory to use &lt;a href="https://example.com:443"&gt;https://example.com:443&lt;/a&gt; as it is predefied but if your have a service running on other port than 443 then you might require to use &lt;a href="https://example.com:333"&gt;https://example.com:333&lt;/a&gt; here 333 is a port defined by us&lt;/li&gt;
&lt;li&gt;In this way the computer can manage different services cleanly and simultaneously&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What are Request Methods?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When we are done with resolving the IP address to the domain name and the port, the next thing it is going to do is sending a request methods.&lt;/li&gt;
&lt;li&gt;It is the very first thing which is sent when a connection is established between client and a server.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;GET&lt;/code&gt; - It is only used when there is &lt;strong&gt;no sending of data&lt;/strong&gt; from the client to the server (eg : uploading the files, photos)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;POST&lt;/code&gt; - Is used when you want to send the data or interact with the server. eg: (login)
Get more &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; are the most important methods. You can pretty much do anything with this methods.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;POST&lt;/code&gt; is superior than any other method because it can function like &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt; etc. because it works on the body. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What are Request Headers?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTTP headers let the client and the server pass additional information with an HTTP request or response. An HTTP header consists of its case-insensitive name followed by a colon (:), then by its value. Whitespace before the value is ignored.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Headers can be grouped according to their contexts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;General headers apply to both requests and responses, but with no relation to the data transmitted in the body.&lt;/li&gt;
&lt;li&gt;Request headers contain more information about the resource to be fetched, or about the client requesting the resource.&lt;/li&gt;
&lt;li&gt;Response headers hold additional information about the response, like its location or about the server providing it.&lt;/li&gt;
&lt;li&gt;Entity headers contain information about the body of the resource, like its content length or MIME type.&lt;/li&gt;
&lt;li&gt;Headers can also be grouped according to how proxies handle them:&lt;/li&gt;
&lt;li&gt;Connection&lt;/li&gt;
&lt;li&gt;Keep-Alive&lt;/li&gt;
&lt;li&gt;Proxy-Authenticate&lt;/li&gt;
&lt;li&gt;Proxy-Authorization&lt;/li&gt;
&lt;li&gt;TE&lt;/li&gt;
&lt;li&gt;Trailer&lt;/li&gt;
&lt;li&gt;Transfer-Encoding&lt;/li&gt;
&lt;li&gt;Upgrade (see also Protocol upgrade mechanism).
Check out more infor &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#raw-http-requests-using-netcat-"&gt;
  &lt;/a&gt;
  Raw HTTP requests using netcat :
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Open netcat shell&lt;/li&gt;
&lt;li&gt;Type in command &lt;code&gt;nc example.com 80 -vvv&lt;/code&gt; This will establish the connection to example.com by port 80.&lt;/li&gt;
&lt;li&gt;Then type `GET / HTTP/ 1.1&lt;/li&gt;
&lt;li&gt;Then type &lt;code&gt;Host : example.com&lt;/code&gt;. This is mandatory after 1.1 (if we use GET/ HTTP/ 1 then you can skip it)&lt;/li&gt;
&lt;li&gt;Then just simply hit enter&lt;/li&gt;
&lt;li&gt;In this way you can learn to establish the network successfully&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  ❤️ Thank you for reading ❤️
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;🌏 Like | Follow | Share 🌏&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>todayilearned</category>
      <category>programming</category>
      <category>weeklylearning</category>
    </item>
    <item>
      <title>Introducing SELECT* Podcast, Innovative Tech &amp; Dev Topics</title>
      <author>Margo McCabe</author>
      <pubDate>Fri, 23 Apr 2021 14:50:09 +0000</pubDate>
      <link>https://dev.to/harperdb/introducing-select-podcast-innovative-tech-dev-topics-323g</link>
      <guid>https://dev.to/harperdb/introducing-select-podcast-innovative-tech-dev-topics-323g</guid>
      <description>&lt;p&gt;One of my favorite things about being immersed in the tech community is the &lt;em&gt;people&lt;/em&gt;! I have connected with so many interesting and smart folks, some of which I’ve had conversations and built relationships with, while many others I’ve simply followed and learned from via blogging or social media. &lt;strong&gt;This is what inspired HarperDB’s new tech podcast called &lt;a href="https://harperdb.io/company/podcast/?utm_source=devto"&gt;SELECT*&lt;/a&gt;, hosted by yours truly! The goal is to be another great resource for innovative technology and developer topics&lt;/strong&gt;. Official description: &lt;/p&gt;

&lt;p&gt;&lt;em&gt;The team at HarperDB is excited to bring you our new podcast, Select*. We will be featuring guests across a wide range of backgrounds and topics, with the goal of being your resource for coding tips, best practices, diversity and inclusion, product reviews, tech trends, jobs, and much, much more! We ain't your grandma's podcast, we can guarantee some fun and entertainment while we're at it! &lt;a href="https://harperdb.io/company/podcast/?utm_source=devto"&gt;Listen now&lt;/a&gt;, available wherever you listen to your podcasts (including Apple, Google, Spotify, YouTube, Stitcher, etc.).&lt;/em&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JN8lV00K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ucflrfn7ipt5v1l6njw3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JN8lV00K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ucflrfn7ipt5v1l6njw3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
It’s super fun and I’m able to have insightful conversations with some awesome people, learning about their journeys and gaining insights and tips that are helpful for our listeners. I’m excited to share a bit about our podcast and the conversations I’ve had so far, as you might find something useful or interesting for you! 🗣️ 🎧&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#episodes-currently-available-on-select"&gt;
  &lt;/a&gt;
  Episodes currently available on SELECT*:
&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=VGlioD6g7E0&amp;amp;list=PLlgTMTKsypS4RAYUtEsvXOOnQiyRXRhCw&amp;amp;index=5"&gt;Episode 1&lt;/a&gt;: HarperDB Founder Story, Looking Back and Looking Ahead&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For our 1st episode, I interviewed two HarperDB Co-founders, &lt;a href="https://dev.to/kylebernhardy"&gt;Kyle Bernhardy&lt;/a&gt; (CTO) and &lt;a href="https://dev.to/zaxharperdb"&gt;Zach Fowler&lt;/a&gt; (CPO) on their founder story and journey to becoming startup innovators, along with looking at how far HarperDB has come and where we are headed. They also discuss other technologies they are excited about in the new year, as well as Kyle's rockin' plaid suite with matching shoes!&lt;/p&gt;

&lt;p&gt;Questions in this Episode:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tell us a bit about your background, how you met / how the Harper team came together.&lt;/li&gt;
&lt;li&gt;What's it like going from a technical / dev background to management / founder?&lt;/li&gt;
&lt;li&gt;Talk a little bit about how far HarperDB has come…. What’s your favorite thing about HarperDB, what problems are you solving?&lt;/li&gt;
&lt;li&gt;Focus on future - where is HarperDB headed, main goals for 2021?&lt;/li&gt;
&lt;li&gt;Favorite programming languages? Other tools / technologies you're excited about?&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=QDkbZlKHTao&amp;amp;list=PLlgTMTKsypS4RAYUtEsvXOOnQiyRXRhCw&amp;amp;index=4"&gt;Episode 2&lt;/a&gt;: Building Apps in Node.js and Electron.js and the Power of Doodling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In episode 2, I chatted with David Neal, known as the "ambassador of awesome and doodle-driven developer", about building apps in Node.js and Electron.js, as well as the power of illustrations! We covered the following topics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;David's background and journey in the tech world (hint: he's been a full time dev and database nerd since the beginning of the Internet!)&lt;/li&gt;
&lt;li&gt;Building web apps or command-line apps with Node.js&lt;/li&gt;
&lt;li&gt;Building desktop apps with Electron.js&lt;/li&gt;
&lt;li&gt;Fun fact- drawing illustrations used for presentations and content&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Listen now to gain some serious inspiration, and learn about how David helps other developers be more awesome.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;David Neal is a family man, musician, illustrator, software developer, and Microsoft MVP living in North Georgia. He currently leads Developer Relations at ActiveCampaign, runs on a high-octane mixture of caffeine and JavaScript, and is made entirely of bacon.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Twitter &amp;amp; Dev: &lt;a class="mentioned-user" href="https://dev.to/reverentgeek"&gt;@reverentgeek&lt;/a&gt;
&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=Kad-S-sUaNg&amp;amp;list=PLlgTMTKsypS4RAYUtEsvXOOnQiyRXRhCw&amp;amp;index=3"&gt;Episode 3&lt;/a&gt;: Tips for Code Newbies Across the Globe&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A panel-style discussion with two different perspectives: a self-proclaimed code newbie and a coding instructor! Mina is an aspiring Web Developer, self-learning CSS and Javascript. Shruti, Senior Engineer at Paypal, is on a mission to make JavaScript and GraphQL development easier. From Javascript, front end, and 100 days of code, to community, skills for the job hunt, and staying motivated - you won't want to miss this discussion. In this episode we covered:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Share a bit about your journey, how did you get into tech/development?&lt;/li&gt;
&lt;li&gt;When getting started, how did you determine what type of developer you wanted to be, which languages or tech stack to start with?&lt;/li&gt;
&lt;li&gt;What are your main tips, dos, and don'ts, for code newbies? What's important to remember throughout the journey?&lt;/li&gt;
&lt;li&gt;What about jobs - is it important to know right away when you start coding what you want to do with your career? How can you differentiate yourself in such a competitive market?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Shruti is a Senior Software Engineer on the Checkout team at PayPal and is passionate about teaching and sharing knowledge in JavaScript, React, GraphQL, and front-end technologies. She shares byte-sized javascript tidbits through her newsletter - JSByte: &lt;a href="http://tinyletter.com/shrutikapoor"&gt;http://tinyletter.com/shrutikapoor&lt;/a&gt;. She is also an ardent #DevJoke fan.&lt;/em&gt; &lt;br&gt;
Twitter &amp;amp; Dev: &lt;a class="mentioned-user" href="https://dev.to/shrutikapoor08"&gt;@shrutikapoor08&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Mina, from Sydney, Australia, is an aspiring Web Designer &amp;amp; Developer. She is self-learning CSS and Javascript and has a Youtube channel focused on web design and development, social media, and self-study tips for beginners.&lt;/em&gt;&lt;br&gt;
Twitter: @Codeanddream&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=mj-DQwUAjII&amp;amp;list=PLlgTMTKsypS4RAYUtEsvXOOnQiyRXRhCw&amp;amp;index=2"&gt;Episode 4&lt;/a&gt;: Vets Who Code: Founder Story&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this podcast interview, I was fortunate enough to get some airtime with Jerome Hardaway, an Air Force veteran who launched &lt;a href="//vetswhocode.io"&gt;Vets Who Code&lt;/a&gt;. Vets Who Code is a veteran-led and operated charitable non-profit that focuses on training veterans in web development and software engineering principles free of charge, with the focus of starting careers as JavaScript developers and other roles in tech.&lt;/p&gt;

&lt;p&gt;Jerome shares his intriguing and inspiring story of returning from the military without a clear path of what to do next, learning how to code, and eventually creating this much-needed organization that helps other vets in his similar position. Jerome is passionate about community, highly focused on his goals, and incredibly fun to talk to! Listen now to learn about Jerome, Vets Who Code, and ways to get involved.&lt;/p&gt;

&lt;p&gt;Twitter &amp;amp; Dev: &lt;a class="mentioned-user" href="https://dev.to/jeromehardaway"&gt;@jeromehardaway&lt;/a&gt;
&lt;br&gt;
@VetsWhoCode&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=bX4rxnB2uKI&amp;amp;list=PLlgTMTKsypS4RAYUtEsvXOOnQiyRXRhCw&amp;amp;index=1"&gt;SELECT* Episode 5&lt;/a&gt;: Leadership Advice from a Senior Netflix Engineer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This was a fun chat with Jem Young, Senior Software Engineer at Netflix. Jem started out at Netflix in UI and is now in backend/infrastructure. He shares a bit about what it's like working at a tech giant, imposter syndrome, the importance of communication in engineering, and tips for being a leader including what it's like managing an engineering team. Jem is inspiring, knowledgeable, and super easy to talk to!&lt;/p&gt;

&lt;p&gt;@JemYoung&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Jem Young is a tall engineer at Netflix who loves dogs, reading, and clean code. He really enjoys working across the stack but his true passion lies in JavaScript and building a clean user experience. He believes that empathy is the key to building an effective UI and when he’s not at the gym or chasing his cat, you can find him hassling other engineers to write more tests.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Coming Up:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I recently recorded a conversation with Debbie O'Brien (&lt;a class="mentioned-user" href="https://dev.to/debs_obrien"&gt;@debs_obrien&lt;/a&gt;
), a Head Developer Advocate for Bit.dev and Nuxt.js ambassador with 10+ years experience in Frontend development. Debbie talks about her interesting journey into tech and across numerous roles, from leading a dev team into dev advocacy, and more! She shares a bit about her initial career shift and learning to code in just nine months, learning JavaScript, and then getting into Nuxt and React. Debbie shares insightful tips for people trying to get into similar Dev Advocacy roles, and talks about technology she's excited about this year.&lt;/p&gt;

&lt;p&gt;Next on the calendar we also have time scheduled with &lt;a class="mentioned-user" href="https://dev.to/jamesqquick"&gt;@jamesqquick&lt;/a&gt;
 and a few other very special guests. &lt;a href="https://harperdb.io/company/podcast/"&gt;Stay tuned&lt;/a&gt; for more great content, or follow our show &lt;a href="https://dev.to/harperdbpodcast"&gt;right here on Dev&lt;/a&gt;! &lt;/p&gt;




&lt;p&gt;&lt;em&gt;We would love to hear from you. If you have topic suggestions, would like to be a guest, or nominate a guest, don’t hold back! Comment below or reach out to &lt;a href="mailto:podcast@harperdb.io"&gt;podcast@harperdb.io&lt;/a&gt; anytime. Hope you enjoy listening and don’t forget to like, subscribe, comment, or whatever else you can do on those podcast channels.😁&lt;/em&gt;&lt;/p&gt;

</description>
      <category>podcast</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>watercooler</category>
    </item>
  </channel>
</rss>
