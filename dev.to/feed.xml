<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Bitcoin Technology Fundamentals - Tutorial 4 – Bitcoin Improvement Proposals</title>
      <author>AMITESH RAIKWAR</author>
      <pubDate>Sun, 21 Nov 2021 07:10:46 +0000</pubDate>
      <link>https://dev.to/amiteshraikwar/bitcoin-technology-fundamentals-tutorial-4-bitcoin-improvement-proposals-2o1</link>
      <guid>https://dev.to/amiteshraikwar/bitcoin-technology-fundamentals-tutorial-4-bitcoin-improvement-proposals-2o1</guid>
      <description>&lt;p&gt;Youtube video - &lt;a href="https://www.youtube.com/watch?v=5Dpxk5f6BaA"&gt;https://www.youtube.com/watch?v=5Dpxk5f6BaA&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bitcoin-cryptocurrencies-cryptocurrency-cryptonews-cryptotrading-cryptocurrencies-cryptoadoption-bitcointrading-bitcoinmining-bitcoins-bitcoincash-bitcoinvalue-bitcoin"&gt;
  &lt;/a&gt;
  Bitcoin, #cryptocurrencies, #cryptocurrency, #cryptonews, #cryptotrading, #cryptocurrencies, #cryptoadoption, #bitcointrading, #bitcoinmining, #bitcoins, #bitcoincash, #bitcoinvalue, #Bitcoin,
&lt;/h1&gt;

&lt;p&gt;Bitcoin Technology Fundamentals&lt;/p&gt;

&lt;p&gt;In this video series, we will cover Basic to advanced bitcoin technology.&lt;/p&gt;




&lt;p&gt;I am Amitesh Raikwar.&lt;br&gt;
Master of Technology in Electronics &amp;amp; Communication Engineering&lt;br&gt;
Bachelor of Engineer in Electronics &amp;amp; Communication Engineering&lt;/p&gt;

&lt;p&gt;I also have Blockchain certification from IBM.&lt;/p&gt;

&lt;p&gt;Issued on: 06 JAN 2019 | Issued by: IBM&lt;br&gt;
Verify: &lt;a href="https://www.credly.com/go/Ulzl1eEi"&gt;https://www.credly.com/go/Ulzl1eEi&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you wanna support our channel please donate in the below-given link of Paypal / Paytm&lt;/p&gt;




&lt;p&gt;Paypal&lt;br&gt;
:- &lt;a href="https://paypal.me/amiteshraikwar?coun"&gt;https://paypal.me/amiteshraikwar?coun&lt;/a&gt;...&lt;/p&gt;

&lt;p&gt;Paytm &lt;br&gt;
:-  Rs. 100/-   - &lt;a href="https://paytm.me/d-OGoZn"&gt;https://paytm.me/d-OGoZn&lt;/a&gt;&lt;br&gt;
  Rs. 1001/-  &lt;a href="https://paytm.me/MgL-psh"&gt;https://paytm.me/MgL-psh&lt;/a&gt;&lt;br&gt;
  Rs. 5000/-  &lt;a href="https://paytm.me/PR-YL5c"&gt;https://paytm.me/PR-YL5c&lt;/a&gt;&lt;/p&gt;

</description>
      <category>bitcoin</category>
      <category>blockchain</category>
      <category>cryptocurrency</category>
      <category>digitalcurrency</category>
    </item>
    <item>
      <title>Bitcoin Technology Fundamentals - Tutorial 3 – Bitcoin Mining</title>
      <author>AMITESH RAIKWAR</author>
      <pubDate>Sun, 21 Nov 2021 07:10:26 +0000</pubDate>
      <link>https://dev.to/amiteshraikwar/bitcoin-technology-fundamentals-tutorial-3-bitcoin-mining-49hm</link>
      <guid>https://dev.to/amiteshraikwar/bitcoin-technology-fundamentals-tutorial-3-bitcoin-mining-49hm</guid>
      <description>&lt;p&gt;Youtube video - &lt;a href="https://www.youtube.com/watch?v=WZv7G3j1dN8&amp;amp;t=95s"&gt;https://www.youtube.com/watch?v=WZv7G3j1dN8&amp;amp;t=95s&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bitcoin-cryptocurrencies-cryptocurrency-cryptonews-cryptotrading-cryptocurrencies-cryptoadoption-bitcointrading-bitcoinmining-bitcoins-bitcoincash-bitcoinvalue-bitcoin"&gt;
  &lt;/a&gt;
  Bitcoin, #cryptocurrencies, #cryptocurrency, #cryptonews, #cryptotrading, #cryptocurrencies, #cryptoadoption, #bitcointrading, #bitcoinmining, #bitcoins, #bitcoincash, #bitcoinvalue, #Bitcoin
&lt;/h1&gt;

&lt;p&gt;Bitcoin Technology Fundamentals&lt;/p&gt;

&lt;p&gt;In this video series, we will cover Basic to advanced bitcoin technology.&lt;/p&gt;




&lt;p&gt;I am Amitesh Raikwar.&lt;br&gt;
Master of Technology in Electronics &amp;amp; Communication Engineering&lt;br&gt;
Bachelor of Engineer in Electronics &amp;amp; Communication Engineering&lt;/p&gt;

&lt;p&gt;I also have Blockchain certification from IBM.&lt;/p&gt;

&lt;p&gt;Issued on: 06 JAN 2019 | Issued by: IBM&lt;br&gt;
Verify: &lt;a href="https://www.credly.com/go/Ulzl1eEi"&gt;https://www.credly.com/go/Ulzl1eEi&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you wanna support our channel please donate in the below-given link of Paypal / Paytm&lt;/p&gt;




&lt;p&gt;Paypal&lt;br&gt;
:- &lt;a href="https://paypal.me/amiteshraikwar?coun"&gt;https://paypal.me/amiteshraikwar?coun&lt;/a&gt;...&lt;/p&gt;

&lt;p&gt;Paytm &lt;br&gt;
:-  Rs. 100/-   - &lt;a href="https://paytm.me/d-OGoZn"&gt;https://paytm.me/d-OGoZn&lt;/a&gt;&lt;br&gt;
  Rs. 1001/-  &lt;a href="https://paytm.me/MgL-psh"&gt;https://paytm.me/MgL-psh&lt;/a&gt;&lt;br&gt;
  Rs. 5000/-  &lt;a href="https://paytm.me/PR-YL5c"&gt;https://paytm.me/PR-YL5c&lt;/a&gt;&lt;/p&gt;

</description>
      <category>bitcoin</category>
      <category>blockchain</category>
      <category>cryptocurrency</category>
      <category>digitalcurrency</category>
    </item>
    <item>
      <title>Best Open Source Programs For Students to Participate</title>
      <author>Sumeet Vishwakarma</author>
      <pubDate>Sun, 21 Nov 2021 06:58:38 +0000</pubDate>
      <link>https://dev.to/legendsumeet/best-open-source-programs-for-students-to-participate-3d83</link>
      <guid>https://dev.to/legendsumeet/best-open-source-programs-for-students-to-participate-3d83</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uMoZ78gT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75pfjx9kac2doowavvck.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uMoZ78gT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75pfjx9kac2doowavvck.png" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Contributing to open source is a really great way to get real-world software development and other domain experience from the comfort of your home even if you’re a beginner and don’t have a job in the industry. You don’t really need to be an expert to get started with open source and you’re going to get all these benefits of what it’s like to work in a team, collaborate with other people and work on a large codebase. One can test their skills, gain knowledge, and bond with the community in order to produce quality code that helps people around the world.&lt;/p&gt;

&lt;p&gt;Digital Ocean Hacktoberfest&lt;/p&gt;

&lt;p&gt;Hacktoberfest is a really popular open-source program that is hosted by Digital Ocean and is open to everyone across the world. Here, you need to submit four or more quality pull requests and you’ll either get a chance to plant a tree or get a limited-edition t-shirt. The main idea over here is that there’s no such thing as a selection criterion in this particular program. So, this is very useful for individuals, in particular, who are just starting out with open source. You can contribute to participating projects on GitHub and even if you’re not able to make a large major contribution what you can get out of it is how to use Git and Github.&lt;/p&gt;

&lt;p&gt;Google Summer of Code (GSoC)&lt;/p&gt;

&lt;p&gt;Google Summer of Code program is a program started by Google and has completed 16 years. It is a program that aims to promote open-source software development among university students. There are a few organizations and these organizations have mentors. First, the organizations apply to Google and after the organizations are selected then the students apply to the organizations. Bear in mind that you are not an employee of Google or even not an intern at Google. You’re working with that organization that you applied to or got selected in. It is a paid program with a stipend of 1500 USD.&lt;/p&gt;

&lt;p&gt;Timeline: January-August&lt;/p&gt;

&lt;p&gt;MLH Fellowship&lt;/p&gt;

&lt;p&gt;Major League Hacking (MLH), founded in 2013, is a global community for student developers. MLH recently launched a program known as MLH fellowship which is a 12-week remote program where students collaborate on Open Source projects that align their personal interests with the general requirements of the industry and students can participate from their homes. It has mainly three tracks – Software Engineering, Open Source, and Production Engineering. Here you will gain those skills that you require to be a successful engineer like writing good documentation, open-source best practices, communication, etc. Also, make sure you meet the eligibility criteria before applying for the program.&lt;/p&gt;

&lt;p&gt;Google Season of Docs (GSoD)&lt;/p&gt;

&lt;p&gt;One thing that an open-source project cannot get enough of is good documentation. However, Google Season of Docs is a new program by Google where technical writers and open source organizations come together and work on open source projects. The technical writers write documentation for open source organizations and also get paid by Google. It is a worthwhile platform for students to learn from industry experts and to work on open-source projects. Also, you need to remember that you must be aged 18 or more at the time of registration to become eligible for Google Season of Docs.&lt;/p&gt;

&lt;p&gt;Outreachy&lt;/p&gt;

&lt;p&gt;The Outreachy is also a really great program for students that aims to support diversity in open source. It is sort of a remote internship of 3 months and only a handful number of students are selected across the world. The Outreachy internship projects focus on programming, documentation, project marketing, etc. During the application process, you need to show some genuine eagerness that why you want to be an Outreachy intern and in turn, what you’re going to accomplish, and then how you plan to promote diversity and all sorts of things. It is a paid internship in which you are paid an amount of 5500 USD.&lt;/p&gt;

&lt;p&gt;Season of KDE&lt;/p&gt;

&lt;p&gt;The Season of KDE, hosted by the KDE community, is an outreach program for all individuals across the world. KDE is an international free software community that develops free and open-source software and you can contribute to KDE through the Season of KDE program. The participants of the Season of KDE program have not only contributed new features, but they are also responsible for developing KDE Continuous Integration System, ported KDE Applications, documentation, and various other things. Also, it is somehow similar to another prestigious program, Google Summer of Code&lt;/p&gt;

&lt;p&gt;GirlScript Summer of Code (GSSoC)&lt;/p&gt;

&lt;p&gt;GirlScript Summer of Code is the 3 month-long Open Source program during summers conducted by GirlScript Foundation, started in 2018, with an aim to help beginners get started with Open Source Development while encouraging diversity. Throughout the program, participants contribute to different projects under the guidance of experienced mentors. Top participants get exciting goodies and opportunities.&lt;/p&gt;

&lt;p&gt;Apart from these, there are several universities, institutes that organize their own SoC programs to encourage newcomers.&lt;/p&gt;

&lt;p&gt;E.g. NJACK Winter of Code by Indian Institute of Technology, Patna, KWoC by Kharagpur Open Source Society, IIT Kharagpur (KOSS), BOSS – Bountiful Open Source Summer by Coding Blocks, etc.&lt;/p&gt;

&lt;p&gt;You don’t need to wait for a particular program to start in order to contribute to open source. So it is not like when Google Summer of Code will open up applications that will be the only time you can contribute. If you know a particular tech stack you can start right NOW!! And most importantly, open-source is not something that you do for a stipend. You do it to make an impact, it should be your passion. True “open-source contributors” find the idea of creating value for people and impacting the world through their work gratifying.&lt;/p&gt;

&lt;p&gt;FOSSASIA Codeheat&lt;/p&gt;

&lt;p&gt;FOSSASIA is a non-profit organization supporting developers and makers of free and open-source technologies. FOSSASIA Codeheat is one of such programs run by it. Codeheat is a coding contest and here the mentors are developers, professors, or contributors who like to share and become a part of the FOSSASIA open source community. Codeheat is separated into two-month periods and after each period winners of the period are announced. &lt;/p&gt;

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Bitcoin Technology Fundamentals - Tutorial 2 – Bitcoin Network</title>
      <author>AMITESH RAIKWAR</author>
      <pubDate>Sun, 21 Nov 2021 06:54:37 +0000</pubDate>
      <link>https://dev.to/amiteshraikwar/bitcoin-technology-fundamentals-tutorial-2-bitcoin-network-307e</link>
      <guid>https://dev.to/amiteshraikwar/bitcoin-technology-fundamentals-tutorial-2-bitcoin-network-307e</guid>
      <description>&lt;p&gt;Youtube video -  &lt;a href="https://www.youtube.com/watch?v=TyajsRb9vqQ&amp;amp;t=8s"&gt;https://www.youtube.com/watch?v=TyajsRb9vqQ&amp;amp;t=8s&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bitcoin-cryptocurrencies-cryptocurrency-cryptonews-cryptotrading-cryptocurrencies-cryptoadoption-bitcointrading-bitcoinmining-bitcoins-bitcoincash-bitcoinvalue"&gt;
  &lt;/a&gt;
  Bitcoin, #cryptocurrencies, #cryptocurrency #cryptonews #cryptotrading #cryptocurrencies #cryptoadoption #bitcointrading #bitcoinmining #bitcoins #bitcoincash #bitcoinvalue
&lt;/h1&gt;

&lt;p&gt;Bitcoin Technology Fundamentals&lt;/p&gt;

&lt;p&gt;In this video series, we will cover Basic to advanced bitcoin technology.&lt;/p&gt;

&lt;p&gt;I am Amitesh Raikwar.&lt;br&gt;
Master of Technology in Electronics &amp;amp; Communication Engineering&lt;br&gt;
Bachelor of Engineer in Electronics &amp;amp; Communication Engineering&lt;br&gt;
I also have Blockchain certification from IBM.&lt;br&gt;
Issued on: 06 JAN 2019 | Issued by: IBM&lt;br&gt;
Verify: &lt;a href="https://www.credly.com/go/Ulzl1eEi"&gt;https://www.credly.com/go/Ulzl1eEi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you wanna support our channel please donate in the below-given link of Paypal / Paytm&lt;/p&gt;

&lt;p&gt;Paypal&lt;br&gt;
:- &lt;a href="https://paypal.me/amiteshraikwar?coun"&gt;https://paypal.me/amiteshraikwar?coun&lt;/a&gt;...&lt;/p&gt;

&lt;p&gt;Paytm&lt;br&gt;
:- Rs. 100/- - &lt;a href="https://paytm.me/d-OGoZn"&gt;https://paytm.me/d-OGoZn&lt;/a&gt;&lt;br&gt;
Rs. 1001/- &lt;a href="https://paytm.me/MgL-psh"&gt;https://paytm.me/MgL-psh&lt;/a&gt;&lt;br&gt;
Rs. 5000/- &lt;a href="https://paytm.me/PR-YL5c"&gt;https://paytm.me/PR-YL5c&lt;/a&gt;&lt;/p&gt;

</description>
      <category>bitcoin</category>
      <category>blockchain</category>
      <category>cryptocurrency</category>
      <category>digitalcurrency</category>
    </item>
    <item>
      <title>Learning Svelte Part # 5</title>
      <author>Alessandro</author>
      <pubDate>Sun, 21 Nov 2021 06:54:07 +0000</pubDate>
      <link>https://dev.to/alessandrogiuzio/learning-svelte-part-5-ici</link>
      <guid>https://dev.to/alessandrogiuzio/learning-svelte-part-5-ici</guid>
      <description>&lt;h2&gt;
  &lt;a href="#arrays-amp-objects"&gt;
  &lt;/a&gt;
  Arrays &amp;amp; Objects
&lt;/h2&gt;

&lt;p&gt;Hello developers and welcome back to this series about how i am learning Svelte.&lt;br&gt;
In today's post i will explain how to update Arrays and Objects, the update happen reactively when we change values.&lt;/p&gt;

&lt;p&gt;Let’s try with an example:&lt;/p&gt;

&lt;p&gt;First of all, we’re going to declare a new variable called frameworks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
let frameworks = ["Vue", "React","Angular", "Ember"];
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we will loop trough it, in th HTML section:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
{#each frameworks as framework}
  &amp;lt;li&amp;gt;{framework}&amp;lt;/li&amp;gt;
{/each}
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Essentially we are creating a new list item for each one out of our Frameworks, the result in our html file:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iXUgMFfS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmls1iq8bsi73l1rytrm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iXUgMFfS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmls1iq8bsi73l1rytrm.png" alt="Html result" width="289" height="146"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now to demonstrate the reactivity we are going to add another item to our list, let’s say after a 3 seconds delay.&lt;/p&gt;

&lt;p&gt;To do that we need a new function:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fwbzecCT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mlermz72ru999rq999p7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fwbzecCT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mlermz72ru999rq999p7.png" alt="Function" width="630" height="150"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We would expect now to have the last item added to our list, but it's not the case, we need another step before accomplishing the result.&lt;/p&gt;

&lt;p&gt;Svelte it's not able to catch the change yet, so it's not reflected inside the list.&lt;/p&gt;

&lt;p&gt;To make Svelte to pick up the change we only need to write another line of code on our function, that it's going to work because we will use an equal operator that it's re-assigning the value of &lt;strong&gt;frameworks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The new function: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_xo2_QSK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2de7v4twalx7t8rmlcna.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_xo2_QSK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2de7v4twalx7t8rmlcna.png" alt="frameworks" width="438" height="163"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the result is the one expected:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NmKFfkWL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngsx20m05ducxf46owy0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NmKFfkWL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngsx20m05ducxf46owy0.png" alt="Adde Svelte" width="135" height="201"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another way to achieve the same result it's using the spread syntax in our variable: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VtPvcR85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/92ojyqx7fxuzksoc0uof.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VtPvcR85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/92ojyqx7fxuzksoc0uof.png" alt="spread operator" width="447" height="109"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the equivalent to using "push", also we use the equal operator.&lt;/p&gt;

&lt;p&gt;For the Objects it's the same but just a little bit easier: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hsdynTzr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7q6yztykg0bwxt180dlx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hsdynTzr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7q6yztykg0bwxt180dlx.png" alt="Object operator" width="334" height="265"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is it for my weekly update, see you next Sunday, until then you can find me on &lt;a href="https://twitter.com/giuzioale"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>How to easily install Odoo on Ubuntu</title>
      <author>Salah Elhossiny</author>
      <pubDate>Sun, 21 Nov 2021 06:46:09 +0000</pubDate>
      <link>https://dev.to/salah856/how-to-easily-install-odoo-on-ubuntu-14f4</link>
      <guid>https://dev.to/salah856/how-to-easily-install-odoo-on-ubuntu-14f4</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Run the following commands to install the main dependencies:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get update

&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;git python3-pip build-essential wget
python3-dev python3-venv python3-wheel libxslt-dev
libzip-dev libldap2-dev libsasl2-dev python3-setuptools
libpng12-0 libjpeg-dev gdebi &lt;span class="nt"&gt;-y&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Download and install wkhtmltopdf :
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://github.com/wkhtmltopdf/wkhtmltopdf/
releases/download/0.12.5/wkhtmltox_0.12.5-1.trusty_amd64.
deb

&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;dpkg &lt;span class="nt"&gt;-i&lt;/span&gt; wkhtmltox_0.12.5-1.trusty_amd64.deb

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you find errors in a previous command, force install the dependencies with the&lt;br&gt;
following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now, install the PostgreSQL database:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;postgresql &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt; Configure PostgreSQL:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo&lt;/span&gt; &lt;span class="nt"&gt;-u&lt;/span&gt; postgres createuser &lt;span class="nt"&gt;--superuser&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;whoami&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Configure git :
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"Your Name"&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email youremail@example.com

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create an odoo-14.0 virtual environment and activate it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python3 &lt;span class="nt"&gt;-m&lt;/span&gt; venv ~/venv-odoo-14.0
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/venv-odoo-14.0/bin/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install the Python dependencies of Odoo in venv :
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/odoo-dev/odoo/
&lt;span class="nv"&gt;$ &lt;/span&gt;pip3 &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create and start your first Odoo instances:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;createdb odoo-test
&lt;span class="nv"&gt;$ &lt;/span&gt;python3 odoo-bin &lt;span class="nt"&gt;-d&lt;/span&gt; odoo-test –i base &lt;span class="nt"&gt;--addons-path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;addons &lt;span class="nt"&gt;--db-filter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;odoo-test&lt;span class="err"&gt;$&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Clone the Odoo code base:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; ~/odoo-dev
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/odoo-dev
&lt;span class="nv"&gt;$ &lt;/span&gt;git clone &lt;span class="nt"&gt;-b&lt;/span&gt; 14.0 &lt;span class="nt"&gt;--single-branch&lt;/span&gt; &lt;span class="nt"&gt;--depth&lt;/span&gt; 1 https://github.com/odoo/odoo.git

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Point your browser to &lt;a href="http://localhost:8069"&gt;http://localhost:8069&lt;/a&gt; and authenticate it by using
the admin account and using admin as the password&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note
&lt;/h3&gt;

&lt;p&gt;If you need RTL support, please install node and rtlcss via the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get &lt;span class="nb"&gt;install &lt;/span&gt;nodejs npm &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;span class="nb"&gt;sudo &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; rtlcss

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>opensource</category>
      <category>ubuntu</category>
      <category>python</category>
    </item>
    <item>
      <title>Some Cool GitHub Actions You Won't Believe Exists</title>
      <author>Astrodevil</author>
      <pubDate>Sun, 21 Nov 2021 06:39:01 +0000</pubDate>
      <link>https://dev.to/astrodevil/some-cool-github-actions-you-wont-believe-exists-46a3</link>
      <guid>https://dev.to/astrodevil/some-cool-github-actions-you-wont-believe-exists-46a3</guid>
      <description>&lt;p&gt;With GitHub Actions, you can automate, customize, and execute your software development workflows right in your repository. You may find, create, and distribute actions for any job you want to do, including CI/CD, and combine actions in a fully customized workflow.&lt;/p&gt;

&lt;p&gt;In this Article, I am going to discuss &lt;strong&gt;Some Cool GitHub Actions You Won't Believe Exists&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#for-bloggers"&gt;
  &lt;/a&gt;
  For Bloggers
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/hashnode-blog"&gt;Hashnode Blog&lt;/a&gt;: You can use this GitHub Action to fetch &amp;amp; display your latest blog posts From Hashnode on your profile or project README.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/medium-post"&gt;Medium Post&lt;/a&gt;: You can use this GitHub Action for posting a markdown post to Medium.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/post-to-medium-action"&gt;Post to Medium Action&lt;/a&gt;: This GitHub Action allows you to automatically create a new Medium post with Markdown or HTML. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/publish-to-dev-to"&gt;Publish to dev.to&lt;/a&gt;: You can use this GitHub Action to publish markdown files as articles on dev.to platform, with assets hosted on GitHub.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/theactiondev"&gt;TheActionDev&lt;/a&gt;: This GitHub Action allows you to write &amp;amp; maintain dev.to articles without touching the dev.to UI.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#for-content-creators"&gt;
  &lt;/a&gt;
  For Content Creators
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/youtube-videos-as-posts"&gt;YouTube-Videos-As-Posts&lt;/a&gt;: This GitHub Action update all the videos, title, and description available inside the channel into the posts in Jekyll site structure everyday automatically. No need to manually do any step after posting any new video in YouTube, it will be updated in website on next day.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/upload-episode-from-youtube-to-anchor-fm"&gt;Upload Episode from YouTube To Anchor.Fm&lt;/a&gt;: This GitHub Action will upload an audio file from a given YouTube video automatically to your Anchor.fm account. It is very useful in a scenario where you have a YouTube account and also a podcast over Spotify, Anchor.fm, Play Music, iTunes etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/ebook-convert-action"&gt;Ebook convert action&lt;/a&gt;: You can use this GitHub Action for converting eBooks in several formats. The action supports conversions between many file types i.e.: DOCX, EPUB, HTML, PDF, RTF, TXT...&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#some-more-actions"&gt;
  &lt;/a&gt;
  Some More Actions
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/push-notification-on-whatsapp"&gt;Push notification on Whatsapp&lt;/a&gt;: A GitHub action which sends a WhatsApp message when code is pushed to a repository.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/twitter-together"&gt;Twitter, together!&lt;/a&gt;: This GitHub Action uses text files to post tweets from a GitHub repository for Open Source or event maintainers who share a project Twitter account. GitHub's pull request review mechanism, rather than tweeting directly, encourages increased collaboration, Twitter engagement, and editorial input by allowing anyone to submit a tweet draft to a project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/notion2github"&gt;Notion2Github&lt;/a&gt;: Automatic synchronization from Notion to GitHub.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/profile-readme-development-stats"&gt;Profile Readme Development Stats&lt;/a&gt;: Are you an early bird or a night owl? When are you most productive during the day? What are languages you code in? This GitHub Action updates everything in your profile README.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHub Actions are such a productive tool that I have decided to use one of the above Actions in my GitHub while writing this blog. Could You guess? Which one.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#if-you-my-content-connect-me-on-twitter-or-supports-me-by-buying-me-a-coffee"&gt;
  &lt;/a&gt;
  If You ❤️ My Content! Connect Me on  &lt;a href="https://mobile.twitter.com/Astrodevil_"&gt;Twitter&lt;/a&gt; or Supports Me By Buying Me A Coffee☕👇🏼
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/Astrodevil"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rZDB_RRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-orange.png" alt="Buy Me A Coffee" width="545" height="153"&gt; &lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>productivity</category>
      <category>actionshackathon</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Cryptocurrency dashboard App with Streamlit [Python]</title>
      <author>Bek Brace</author>
      <pubDate>Sun, 21 Nov 2021 06:23:48 +0000</pubDate>
      <link>https://dev.to/bekbrace/cryptocurrency-dashboard-app-with-streamlit-python-5ann</link>
      <guid>https://dev.to/bekbrace/cryptocurrency-dashboard-app-with-streamlit-python-5ann</guid>
      <description>&lt;p&gt;Streamlit is an open-source Python library that makes it easy to create and share beautiful, custom web apps for machine learning and data science.&lt;/p&gt;

&lt;p&gt;This is the 10th time I use Streamlit to create simple yet powerful web apps, but in this special tutorial, you will see how in just a few minutes you can build a cryptocurrency dashboard to present the various crypto values [in this case I retrieved data for the dataframe and charts for : &lt;strong&gt;&lt;em&gt;Bitcoin, Ethereum, Ripple &amp;amp; Bitcoin-Cash&lt;/em&gt;&lt;/strong&gt; ]  in any period of time that you determine in the code.&lt;/p&gt;

&lt;p&gt;Streamlit turns data scripts into shareable web apps in minutes; and the best part is that it's all in Python, and it's open source which means all for free. No front‑end experience required. So to create animation sliders, rendering charts/graphs, animating download bars and much more is done without any HTML/CSS/JS , just Python.&lt;/p&gt;

&lt;p&gt;To try it out, go ahead to your terminal and type:&lt;/p&gt;

&lt;p&gt;$ pip install streamlit&lt;br&gt;
then fire the server for demo apps:&lt;br&gt;
$ streamlit hello&lt;/p&gt;

&lt;p&gt;If you want to know who to create and customize this cryptocurrency dashboard application, check out the latest video tutorial on the channel :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/5f1SLsvL8us"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Hope you enjoy it, and I will see in next video posts :)&lt;/p&gt;

&lt;p&gt;✨ Streamlit Website: &lt;a href="https://streamlit.io"&gt;https://streamlit.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 Social Media&lt;br&gt;
Facebook : &lt;a href="https://www.facebook.com/bekbrace%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8B"&gt;https://www.facebook.com/bekbrace​​​​&lt;/a&gt;&lt;br&gt;
Twitter : &lt;a href="https://twitter.com/BekBrace"&gt;https://twitter.com/BekBrace&lt;/a&gt;&lt;br&gt;
Instagram : &lt;a href="https://www.instagram.com/bek_brace/"&gt;https://www.instagram.com/bek_brace/&lt;/a&gt;&lt;br&gt;
GitHub profile : &lt;a href="https://github.com/BekBrace%E2%80%8B%E2%80%8B%E2%80%8B"&gt;https://github.com/BekBrace​​​&lt;/a&gt;&lt;br&gt;
Website : &lt;a href="https://bekbrace.com"&gt;https://bekbrace.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>python</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Scaling Airflow – Astronomer Vs Cloud Composer Vs Managed Workflows For Apache Airflow</title>
      <author>SeattleDataGuy</author>
      <pubDate>Sun, 21 Nov 2021 06:19:44 +0000</pubDate>
      <link>https://dev.to/seattledataguy/scaling-airflow-astronomer-vs-cloud-composer-vs-managed-workflows-for-apache-airflow-4ppb</link>
      <guid>https://dev.to/seattledataguy/scaling-airflow-astronomer-vs-cloud-composer-vs-managed-workflows-for-apache-airflow-4ppb</guid>
      <description>&lt;p&gt;Over the last 3 months, I have taken on two different migrations that involved taking companies from manually managing Airflow VMs to going over to using Cloud Composer and MWAA (Managed Workflows For Apache Airflow).&lt;/p&gt;

&lt;p&gt;These are two great options when it comes to starting your first &lt;a href="https://medium.com/coriers/airflow-vs-luigi-building-your-data-pipeline-f27c9bf5d398"&gt;Airflow&lt;/a&gt; project. They help reduce a lot of issues such as scaling workloads across workers and managing all the other various components required to run Airflow at scale.&lt;/p&gt;

&lt;p&gt;Of course, both Cloud Composer and &lt;a href="https://seattledataguy.substack.com/p/what-is-managed-workflows-for-apache"&gt;MWAA&lt;/a&gt; are services provided by two of the larger cloud providers. But there is a third option called &lt;a href="https://www.astronomer.io/"&gt;Astronomer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this article, I want to discuss some of the benefits and limitations of &lt;a href="https://cloud.google.com/composer"&gt;Cloud Composer &lt;/a&gt;and MWAA as well as discuss why Astronomer might be a better fit for many companies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-a-managed-instance-of-airflow"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why Use A Managed Instance Of Airflow?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Maintenance and management of services and databases often hold many data teams back. We already deal with daily pipeline failures due to the engineering team updating that one column or removing a table altogether without telling us.&lt;/p&gt;

&lt;p&gt;On top of that, trying to manage your Airflow instance generally means you need to have a meta database like Postgres, Redis, a logging location like S3, and several other components to manage your workers as they scale.&lt;/p&gt;

&lt;p&gt;Each of these components increases technical complexity and the opportunity for failures. If your team is small or just needs to prioritize other work, then managed versions of Airflow are often a good choice.&lt;/p&gt;

&lt;p&gt;But which managed Airflow service works best for you?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comparing-composer-and-mwaa-to-astronomer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Comparing Composer And MWAA to Astronomer&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;I want to start with the fact that this article may come across as very positive towards one specific product. The truth is if you're just getting started. Cloud Composer and MWAA are great.&lt;/p&gt;

&lt;p&gt;They can help set up a POC as well as an MVP without needing to set up too many external logistical components or agreements. Just click create an environment.&lt;/p&gt;

&lt;p&gt;Where you will notice Astronomer shines is as you set up more complex jobs and need more flexibility. So let's dive into some of the benefits and challenges you will face with all of these solutions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ease-of-setup"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Ease Of Set-Up&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Without a doubt. Setting up MWAA or Cloud Composer is easier than setting up Astronomer. Really.&lt;/p&gt;

&lt;p&gt;It's just a few clicks and you have a fully managed Airflow instance that is easy to scale at your fingertips. It does take about 20-30 minutes to wait for the entire system to spin up.&lt;/p&gt;

&lt;p&gt;Astronomer takes a little more lift. But personally, it's still far easier than trying to set up your own VMs to scale.&lt;/p&gt;

&lt;p&gt;Overall, what you gain in ease of set-up you will lose in customizability.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-you-lose-in-ease-of-setup-you-gain-in-customizability"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What You Lose In Ease Of Set-Up You Gain In Customizability&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Solutions are all about trade-offs. What Cloud Composer and MWAA give you in ease of set-up they take away in the difficulty of editing much more than your Python libraries.&lt;/p&gt;

&lt;p&gt;I found this out first hand as I migrated a project over to Cloud Composer. My first question. How do I update my docker image?&lt;/p&gt;

&lt;p&gt;Of course, there were other issues such as adding in drivers for older databases, and other plugins that were less straightforward. What might seem like an easy to solve problem like installing a driver can become very taxing and require complex workarounds.&lt;/p&gt;

&lt;p&gt;At the end of the day your team will need to assess their overall goals in order to know whether they need a lot of flexibility or need to deploy DAGs fast.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docker-image-limitations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Docker Image Limitations&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;One of the biggest challenges you will run into when you are working with Cloud Composer or MWAA is you won't be able to go into the docker image that is being created and edited.&lt;/p&gt;

&lt;p&gt;This is fine if your DAGs are very simple and don't require complex drivers or external dependencies. However, as soon as your DAGs require complex technical dependencies you will likely have to perform a lot of workarounds.&lt;/p&gt;

&lt;p&gt;For example, I saw a StackOverflow answer where a developer had to go to the cluster running the VM and manually force certain components to run on it. Which kind of defeats the purpose of Docker if you now have a manual step you will need to remember in future deployments.&lt;/p&gt;

&lt;p&gt;Now let's compare that to Astronomer.&lt;/p&gt;

&lt;p&gt;How would you customize the image of your Docker image?&lt;/p&gt;

&lt;p&gt;Easy, here is an&lt;a href="https://www.astronomer.io/docs/cloud/stable/develop/customize-image"&gt; article&lt;/a&gt; on the topic. Yes, Astronomer has a steeper learning curve, but the trade-off is that you will have the ability to perform much more complex integrations with other systems to your Airflow instance. Like integrating with DBT or including an IBM driver file.&lt;/p&gt;

&lt;p&gt;All easy to do.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#executor-limitations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Executor Limitations&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;When it comes to how you run your Airflow instance, &lt;a href="https://airflow.apache.org/docs/apache-airflow/stable/executor/index.html"&gt;Executors&lt;/a&gt; are a key component in determining how jobs are managed. Choosing the wrong Executor means your system may fail to scale and it won't be able to run your jobs fast enough.&lt;/p&gt;

&lt;p&gt;The problem is in some cases you might find that you want to use a very specific Executor. Astronomer lets you use the Local, Celery and Kubernetes executors. In comparison MWAA only supports the &lt;a href="https://airflow.apache.org/docs/apache-airflow/stable/executor/celery.html"&gt;Celery Executor&lt;/a&gt; and Cloud Composer also has many &lt;a href="https://cloud.google.com/composer/docs/concepts/airflow-configurations"&gt;blocked configurations&lt;/a&gt;. This limitation of executors has become a major pain-point for some companies who are having to create massive work-arounds in order to run their jobs the way they need to with their managed service.&lt;/p&gt;

&lt;p&gt;In the end, this can be very limiting depending on how you want to deploy your DAGs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#astronomer-works-closely-with-airflow"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Astronomer Works Closely With Airflow&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;To also add to the many benefits of Astronomer. I will say that they focus on Airflow a lot. They contribute heavily to the Airflow code base as well as work closely with the Airflow team in general.&lt;/p&gt;

&lt;p&gt;This leads to many of the Employees being experts in Airflow. They work heavily to understand the current needs of their end-users and truly have a great understanding of best practices when it comes to Airflow. The difference is that Astronomer is Airflow only.&lt;/p&gt;

&lt;p&gt;They aren't looking to sell you on S3 or Cloud Storage. Instead, they want to figure out how to best deliver Airflow as a service.&lt;/p&gt;

&lt;p&gt;In contrast, AWS and GCP focus on everything. Meaning their product will always lag. This is notable as MWAA is still back on 2.0.1 while &lt;a href="https://airflow.apache.org/blog/airflow-2.2.0/"&gt;Airflow had been updated to 2.2.0&lt;/a&gt;. which Astronomer can support.&lt;/p&gt;

&lt;p&gt;If you call an AWS solutions architect to give you advice on how to better set up your MWAA, then you might just get generalized advice. It's hard to be a master of every tool and solution AWS has to offer. Again, compared to Astronomer that focuses only on Airflow.&lt;/p&gt;

&lt;p&gt;Astronomer is always step in toe with Airflow updates and they are usually ready to utilize the most recent version of Airflow almost immediately.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-what"&gt;
  &lt;/a&gt;
  &lt;strong&gt;When To Use What&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;MWAA and Cloud Composers are great solutions when you have pretty simple DAGs that you want to build. You don't want to involve too many extra components and it's honestly a great place to start your Airflow journey. If you're trying to build use for Airflow or just trying to prove that it works, then go ahead, build it on Composer or MWAA.&lt;/p&gt;

&lt;p&gt;Of course, more than likely, as your company grows and you have more complex needs, you might find yourself needing to migrate to Astronomer. Also, if you work in an industry that has tighter regulations, requirements around private PyPI setups, or if it's important to have more fine-grained access and controls then Astronomer shines here as well.&lt;/p&gt;

&lt;p&gt;I am a little surprised that AWS and GCP have made it so difficult to update your Docker Image or customize too much in terms of launching your Airflow instance. Perhaps they just want to make sure the tools are just as optimal as possible.&lt;/p&gt;

&lt;p&gt;Also, it is just easier to launch.&lt;/p&gt;

&lt;p&gt;Finding the right version of managed Airflow doesn't have to be hard. Start by looking at what use cases you have now, and what the future holds. You should be able to easily start with a tool like Cloud Composer and then eventually switch to Astronomer. You will lose out on some of the best practices. But on the flip side, you will already have some of your use cases set up and then can work with their team to improve your DAGs as you go.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article, then please check out these articles and videos:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://seattledataguy.substack.com/p/how-to-improve-your-data-analytics"&gt;How To Improve Your Data Analytics Strategy For 2022 - Reducing Costs And Improving Insights&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=uEPCxBaRf6A"&gt;Data Engineer Vs Analytics Engineer Vs Analyst&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.theseattledataguy.com/why-migrate-to-the-modern-data-stack-and-where-to-start/"&gt;Why Migrate To The Modern Data Stack And Where To Start&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://youtube.com/watch?v=s40MptE20Tc&amp;amp;t=1s"&gt;5 Great Data Engineering Tools For 2021 -- My Favorite Data Engineering Tools&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=kSt9NV-qZkc&amp;amp;t=1s"&gt;4 SQL Tips For Data Scientists&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logitanalytics.com/what-are-the-benefits-cloud-data-warehousing-and-why-you-should-migrate/"&gt;What Are The Benefits Of Cloud Data Warehousing And Why You Should Migrate&lt;/a&gt;&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>aws</category>
      <category>python</category>
      <category>datascience</category>
    </item>
    <item>
      <title>How to become a certified Microsoft Azure Professional in 2022</title>
      <author>javinpaul</author>
      <pubDate>Sun, 21 Nov 2021 05:56:07 +0000</pubDate>
      <link>https://dev.to/javinpaul/how-to-become-a-certified-microsoft-azure-professional-in-2022-3cg4</link>
      <guid>https://dev.to/javinpaul/how-to-become-a-certified-microsoft-azure-professional-in-2022-3cg4</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, if you want to become a certified Azure Professional in 2022 or preparing for AZ-900 or Azure Fundamentals certification but not sure how to approach the exam then you have come to the right place.&lt;/p&gt;

&lt;p&gt;In this article, I will guide you about AZ-900 exam and share topics, tips, resources, books, online courses you can take to prepare well for this exam and become a certified Azure professional in 2022. &lt;/p&gt;

&lt;p&gt;Cloud computing skills are in demand and companies are increasingly looking for people who know and worked in public cloud platforms like &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-courses-to-crack-aws-certified-cloud-practitioner-exam-certification-clf-c01.html"&gt;AWS&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-courses-to-crack-aws-certified-cloud-practitioner-exam-certification-clf-c01.html"&gt;GCP&lt;/a&gt;, and &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-AZ-900-exam-Azure-Fundamentals-certification-practice-tests-and-mock-exams-to.html"&gt;Microsoft Azure&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;If you are looking to get started in Cloud Computing, particularly on the Microsoft Azure side then AZ-900 or Azure Fundamentals certification is probably the best way to start. &lt;/p&gt;

&lt;p&gt;You will not only learn about Azure but also learn essential Cloud Computing fundamentals like storage, network, compute, and memory among all things. You will also learn about things like IaaS (Infrastructure as a Service), PaaS (Platform as a Service) and SaaS (Software as a Service), Sales, and Pricing, which are very important for both technical and non-technical IT professionals.&lt;/p&gt;

&lt;p&gt;Earlier, I have shared a few tips, &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-courses-to-crack-az-900-microsoft-azure-fundamentals-certification-exam.html"&gt;&lt;strong&gt;courses&lt;/strong&gt;&lt;/a&gt;, and &lt;a href="https://www.certification-questions.com/practice-exam/microsoft/az-900?affiliateCode=fcff36fd-557a-4713-abf6-973e9924770f&amp;amp;utm_source=Javin&amp;amp;utm_medium=affiliate&amp;amp;utm_campaign=affiliate"&gt;&lt;strong&gt;practice tests&lt;/strong&gt;&lt;/a&gt; to prepare for the AZ-900 or Microsoft Azure Fundamentals exam and today, I'll talk about how to crack the Microsoft Azure Fundamental certification (AZ-900) in 2022.&lt;/p&gt;

&lt;p&gt;But, before that, let's first understand what is Microsoft Fundamentals or AZ-900 certification exam?&lt;/p&gt;

&lt;p&gt;Microsoft has established a certification in Azure's new role-based certification path, specifically "Microsoft Certified Azure Fundamentals". &lt;/p&gt;

&lt;p&gt;This exam is intended for people with non-technical training, as well as technical people who wish to test their basic knowledge of Azure cloud services. To obtain this certification, it is compulsory to pass the AZ-900 exam.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-become-microsoft-certified-azure-professional-by-passing-az900-cloud-certification-in-2022"&gt;
  &lt;/a&gt;
  How to become Microsoft Certified Azure Professional by passing AZ-900 Cloud Certification in 2022
&lt;/h2&gt;

&lt;p&gt;Now that you know What is Microsoft Azure Fundamental certification and why should you get certified for it,  it's time to make a plan to succeed in this prestigious exam. Here is your step by step guide to crack Microsoft's new AZ-103 Azure Fundamentals certification in 2022:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-requirements-of-microsoft-fundamental-azure-az900-exam"&gt;
  &lt;/a&gt;
  1. Requirements of Microsoft Fundamental Azure AZ-900 Exam
&lt;/h3&gt;

&lt;p&gt;Azure AZ-900 is a light exam compared to many other Microsoft role-based exams. This exam does not require experienced cloud professionals or programming assistants. If you are an individual involved in buying and selling cloud services, this review will benefit you even if it comes from a non-technical experience.&lt;/p&gt;

&lt;p&gt;In addition, this exam will be useful for people who want to validate their basic knowledge of cloud services or solutions. Again, it will be helpful if the exam candidate has general computer knowledge or experience before starting formal preparation for the AZ-900 exam.&lt;/p&gt;

&lt;p&gt;Let's say we want to pursue a career in one of Azure's key roles, including developer, solution architect, administrator, etc. and you don't know where to start your journey. Here come this exam and certification.&lt;/p&gt;

&lt;p&gt;This exam can confirm your mastery of the Azure basics and make you competent enough to undertake future Azure certification activities. This warranty may reflect the results of the test when other preparations for the Microsoft Azure certification exam are also taken.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-azure-fundamentals-certification-az-900-exam.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_2XUQUBA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-90k7sXnkdDE/XpcQLdSewjI/AAAAAAAAeLs/-hG7lufV2z0XCf767wLUw4Flvu-nCP8lgCLcBGAsYHQ/w400-h232/Learning%252BPath%252Bfor%252BAzure%252BFundamentals.png" alt="How to Crack Microsoft Azure Fundamentals (AZ-900) Cloud Certification" width="393" height="232"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-basic-information-of-microsoft-azure900"&gt;
  &lt;/a&gt;
  2. Basic information of Microsoft Azure-900
&lt;/h3&gt;

&lt;p&gt;We recommend that you know the basic details of this exam before you begin preparing for the AZ-900 exam. Microsoft has a defined policy regarding exams. Here, each type of exam has specific details depending on the role or function. There will be several details for Microsoft MCSA exams, role-based exams, etc. However, let's see how these details apply to our AZ-900 exam.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/javarevisited/5-best-azure-fundamentals-courses-to-pass-az-900-certification-exam-in-2020-9e602aea035d"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CScdGhet--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/TYg7W89AmPMNNwD7i-ybwjLNvjdfoJJmvSaxXKgtIwnNYQrw5qMRiHh7S3OVRI8X-XSNqlNjTRLTsPOSXIF5ca5tgULkJMLHsbyQ57MQB-RETnBY4uCSPaoD-rAMRkji2rQtBJGz%3Ds16000" alt="how to prepare for AZ-900 certification exam in 2022" width="621" height="157"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-structure-of-exam"&gt;
  &lt;/a&gt;
  3. Structure of Exam
&lt;/h3&gt;

&lt;p&gt;As with most Azure exams, you can expect 40 to 60 questions on an AZ-900 exam and you will get 85 minutes. And there will be a different question format like a case study, a short answer, repeated answer options, a build list, a hotspot, a multiple-choice, a brand review, a review screen, an active screen, better answer, drag, and drop, etc. during your exam You can answer any number of exam questions. There will be no penalty for giving incorrect answers. Just don't check the wrong answers, that's all.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-exam-registration-fee"&gt;
  &lt;/a&gt;
  4. Exam Registration Fee
&lt;/h3&gt;

&lt;p&gt;It is mandatory to check the exam price before starting preparation for the AZ-900 exam. These exam fees are subject to change depending on where the exam is taken. If you live in the United States, the exam will cost $ 99. &lt;/p&gt;

&lt;p&gt;You will benefit from a reduced rate if you are a member of the Microsoft Imagine Academy program, a member of the Microsoft Partner Network program, or a Microsoft Certified Trainer. Students are also entitled to a fee reduction.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-passing-score-of-az900-exam"&gt;
  &lt;/a&gt;
  5. Passing Score of AZ-900 Exam
&lt;/h3&gt;

&lt;p&gt;You have to get a total of 700 points to pass this exam. The candidate who receives votes below this number will be considered bankrupt. You can find out the results of your exam a few minutes after the end of the exam. &lt;/p&gt;

&lt;p&gt;However, to get a detailed dashboard, you have to wait a few days. The dashboard can contain many details, including general exam performance, pass / fail status, a bar chart showing performance in key areas of the exam, and instructions on how to interpret. The results of your exam.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-exam-retake-policy"&gt;
  &lt;/a&gt;
  6. Exam Retake Policy
&lt;/h3&gt;

&lt;p&gt;Many candidates expressed doubts about the exam repetition policies before starting preparation for the AZ-900 exam or during preparation. &lt;/p&gt;

&lt;p&gt;If you are trying this exam and cannot pass it for the first time, you must wait at least 24 hours before repeating the exam. If this happens to you a second time, the waiting time for the next exam can be increased to 14 days. This way you can take a maximum of 5 reps in a year.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-policies-for-cancelling-the-exam"&gt;
  &lt;/a&gt;
  7. Policies for Cancelling the Exam
&lt;/h3&gt;

&lt;p&gt;If you cancel or reschedule an appointment at least 6 working days before the exam, the cancellation will not be invoiced. If the cancellation/rescheduling takes place within 5 working days, you will be charged a small fee. However, if you do not reschedule/cancel the appointment within 24 hours or if you cannot participate in the exam, all exam fees will be forfeited.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-crack-microsoft-azure-fundamentals-az900-exam-in-2022"&gt;
  &lt;/a&gt;
  How to Crack Microsoft Azure Fundamentals AZ-900 Exam in 2022
&lt;/h2&gt;

&lt;p&gt;It is very important to prepare well if you want to take the AZ-900 certification exam. Since the exam is new, you need to follow the correct preparation procedure to complete the exam the first time. Below is the complete guide to preparing for the AZ-900 exam.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-microsoft-online-learning-platform"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://docs.microsoft.com/en-us/learn/paths/azure-fundamentals/"&gt;Microsoft Online Learning Platform&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This portal serves as the most important learning center for all Microsoft exams and certifications. You can find a list of all Microsoft certifications on the Microsoft Learning page. &lt;/p&gt;

&lt;p&gt;Without any difficulty, you can also find the AZ-900 page on this portal. Frankly, this portal should be the starting point for preparing for the AZ-900 exam.&lt;/p&gt;

&lt;p&gt;This is because you can find everything you need to know about this exam on this portal, including the option to register for the exam, details on AZ-900 exam modules, links to the AZ-900 Microsoft Azure Fundamentals study materials, exam prerequisites, exam group study, exam links, exam policies, and structure, etc.&lt;/p&gt;

&lt;p&gt;On top of all that, this is one of the few places where you can get important updates on the exam schedule, module changes, price changes, etc.&lt;/p&gt;

&lt;p&gt;You can find links to schedules available only on this portal for the AZ-900 Exam, it is almost certain that there is no way that this portal will go unnoticed while preparing for the exam. AZ-900.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-az900-online-courses"&gt;
  &lt;/a&gt;
  2. AZ-900 Online Courses
&lt;/h3&gt;

&lt;p&gt;Apart from official Microsoft learning platform and their text based study material, you can join a couple of video courses to learn essential Azure services and concepts.  Here are some of my favorite and recommended course to prepare for AZ-900 exam&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#21-microsoft-azure-fundamentals-az900-exam-prep-specialization"&gt;
  &lt;/a&gt;
  2.1 &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fmicrosoft-azure-fundamentals-az-900"&gt;Microsoft Azure Fundamentals AZ-900 Exam Prep Specialization&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This is a great resource and probably the best resource to prepare for AZ-900 certification online. This Coursera specialization is created by Microsoft itself and its available on Coursera, one of the most popular online learning platform. &lt;/p&gt;

&lt;p&gt;This Microsoft Azure Fundamentals AZ-900 Exam Prep Specialization consists of four courses to build the Azure fundamental knowledge to prepare you for the AZ-900 certification exam and for a career in the cloud. &lt;/p&gt;

&lt;p&gt;The best thing about this course is that content of this program is tightly aligned to the AZ-900 exam objective domains and you will get 50% off your Microsoft Azure Fundamentals AZ-900 Certification Exam. &lt;/p&gt;

&lt;p&gt;I mean, if you pass all 4 courses on Coursera then you will receive a voucher for 50% off the AZ-900 certificate exam which is worth $50 give the cost of AZ-900 exam is $99&lt;/p&gt;

&lt;p&gt;Here is the link to join this course - &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fmicrosoft-azure-fundamentals-az-900"&gt;Microsoft Azure Fundamentals AZ-900 Exam Prep Specialization&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fmicrosoft-azure-fundamentals-az-900"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wB0MLQB---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3.amazonaws.com/coursera_assets/meta_images/generated/XDP/XDP%257ECOURSE%21%257Eaz-900-exam-prep/XDP%257ECOURSE%21%257Eaz-900-exam-prep.jpeg" alt="Preparing for the AZ-900 Microsoft Azure Fundamentals Exam | Coursera" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#22-az900-microsoft-azure-fundamentals-exam-prep"&gt;
  &lt;/a&gt;
  2.2 &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faz900-azure%2F"&gt;AZ-900: Microsoft Azure Fundamentals Exam Prep&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This is one of the best online course to prepare for AZ-900 certification in 2022. This course is created by Scott Duffy, one of the Azure expert on Udemy and its also most up-to-date course to prepare for AZ-900 exam. &lt;/p&gt;

&lt;p&gt;The course covers all exam topics and was last updated on October. It also includes practice test! In short, one of the best course to learn the fundamentals of Azure, and get certified in 2022 and earn the Microsoft Certified Azure Fundamentals badge.&lt;/p&gt;

&lt;p&gt;Here is the link to join - &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faz900-azure%2F"&gt;AZ-900: Microsoft Azure Fundamentals Exam Prep&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faz900-azure%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kvoct_4m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-ZPdlWSLibBU/YNo3beLYEuI/AAAAAAAARvA/s1lcLGKAQ_ETqC2c43ePc4NaB63TqPLRwCLcBGAsYHQ/s750/AZ-900-%252BMicrosoft%252BAzure%252BFundamentals%252BExam%252BPrep%252B-%252BMAY%252B2021.jpg" alt="AZ-900: Microsoft Azure Fundamentals Exam Prep - 2022..85% off udemy  coupon code - learning online course" width="750" height="422"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#23-microsoft-azure-beginners-guide-az900-2022"&gt;
  &lt;/a&gt;
  2.3 &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmicrosoft-azure-beginners-guide%2F"&gt;Microsoft Azure - Beginner's Guide + AZ-900 - 2022&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This is another fantastic and comprehensive course to prepare for AZ-900 exam. In this 14 hour long course you will learn how to start working with Azure, create Virtual Machines and work with Storage options such as BLOB , SQL Server etc.&lt;/p&gt;

&lt;p&gt;It provide basic Understanding of services such as Azure Functions, Azure Web apps etc and help you to prepare for taking the AZ-900 certification exam. Talking about social proof, more than 140K students have joined this course on Udemy. &lt;/p&gt;

&lt;p&gt;Here is the link to join - &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmicrosoft-azure-beginners-guide%2F"&gt;Microsoft Azure - Beginner's Guide + AZ-900 - 2022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmicrosoft-azure-beginners-guide%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S1iFkRm4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/0%2AYZJ65DsLOMvf7VkE" alt="7 Free Microsoft Azure Fundamentals (AZ-900) Online Courses for Beginners  in 2022 | Medium" width="880" height="490"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-books-and-reading-material"&gt;
  &lt;/a&gt;
  3. Books and Reading Material
&lt;/h3&gt;

&lt;p&gt;If you have a reliable Azure book, your impact would be very high in preparing for the AZ-900 exam. But unfortunately, most of the Azure books available do not meet the expectations of the necessary readers or meet industry standards.&lt;/p&gt;

&lt;p&gt;However, we have shared some of the Azure books which can be very helpful in preparing for the AZ-900 exam.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://www.amazon.com/Microsoft-Azure-Beginners-Getting-Started/dp/1978385641?tag=javamysqlanta-20"&gt;Microsoft Azure For Beginners: Getting Started with Microsoft Azure:&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://azure.microsoft.com/en-us/get-started/"&gt;Azure: Microsoft Azure Tutorial for Beginners:&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.amazon.com/Azure-Microsoft-Tutorial-Ultimate-Beginners/dp/1976521300?tag=javamysqlanta-20"&gt;Azure: Microsoft Azure Tutorial The Ultimate Beginners Guide:&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Microsoft-Azure-Beginners-Getting-Started/dp/1978385641?tag=javamysqlanta-20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_lxUlMe6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-PsULOe-SpKk/XpcOJ-HPw5I/AAAAAAAAeLQ/R7kNwwNeFKEtHjWMahOgZbkNgEzkrVUOgCLcBGAsYHQ/w200-h320/Microsoft%252BAzure%252BBook.jpg" alt="Best books to  Crack Microsoft Azure Fundamentals (AZ-900) Cloud Certification" width="200" height="319"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-exam-simulator-and-practice-questions"&gt;
  &lt;/a&gt;
  4. Exam Simulator and Practice Questions
&lt;/h3&gt;

&lt;p&gt;Practice with Simulator is the best way to analyze your skills and abilities in a particular area. You can also find many websites during the AZ-900 exam preparation that claim they can provide the best Simulator for the AZ-900 exam.&lt;/p&gt;

&lt;p&gt;Never trust these websites because they don't provide a real exam environment and valid questions. Sometimes using these simulators can even result in the main exam being failed. Therefore, always keep these difficulties in mind when preparing for the AZ-900 exam.&lt;/p&gt;

&lt;p&gt;You should choose David Mayer &lt;a href="https://www.certification-questions.com/practice-exam/microsoft/az-900?affiliateCode=fcff36fd-557a-4713-abf6-973e9924770f&amp;amp;utm_source=Javin&amp;amp;utm_medium=affiliate&amp;amp;utm_campaign=affiliate"&gt;&lt;strong&gt;Microsoft Azure Fundamentals AZ-900 Simulator&lt;/strong&gt;&lt;/a&gt; because they are providing a real exam environment and valid questions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.certification-questions.com/practice-exam/microsoft/az-900?affiliateCode=fcff36fd-557a-4713-abf6-973e9924770f&amp;amp;utm_source=Javin&amp;amp;utm_medium=affiliate&amp;amp;utm_campaign=affiliate"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GHQeWTFq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-tFkwI6D1qJc/Xt2hmlcVe6I/AAAAAAAAftg/kKlsXL8JDIwnRFY4PfP__o-rTWfuZeidQCLcBGAsYHQ/w400-h308/azure-certification-dumps.jpg" alt="best Practice test and mock exam for Microsoft Azure Fundamentals AZ-900 Cloud Certification" width="398" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also try with these &lt;a href="https://www.certification-questions.com/microsoft-exam/az-900-dumps.html?affiliateCode=fcff36fd-557a-4713-abf6-973e9924770f&amp;amp;utm_source=Javin&amp;amp;utm_medium=affiliate&amp;amp;utm_campaign=affiliate"&gt;free 10 questions&lt;/a&gt; and then purchase a premium version to get ready for the exam and check your preparation level.&lt;/p&gt;

&lt;p&gt;And, if you like Udemy practice test then also have a AZ-900 practice test on Udemy where I have shared more than &lt;a href="https://www.udemy.com/course/az-900-practice-test-azure-fundamentls-certification-exam/?referralCode=C335B28D838A48DEDFA1"&gt;250+ questions&lt;/a&gt; and their explanation topic wise. You can use that practice test to prepare well for AZ-900 exam or test your skill to find gaps in your learning. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faz-900-practice-test-azure-fundamentls-certification-exam%2F%3FreferralCode%3DC335B28D838A48DEDFA1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8QPXWtI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/0%2AGc8BL_94ZsgQGNaS.png" alt="6 Best AZ-900 Practice Tests, Dumps, and Mock Exams to Crack Azure  Fundamentals Exam " width="735" height="354"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-white-papers-analyst-report-and-ebooks"&gt;
  &lt;/a&gt;
  5. White Papers, Analyst Report, and E-books
&lt;/h3&gt;

&lt;p&gt;This step can always be ignored when preparing for the AZ-900 exam. This is as important as related books or documents because these things are published by Microsoft itself. &lt;/p&gt;

&lt;p&gt;From these sources, you can find many relevant Azure documents. Also, be sure to subscribe to Azure Notifications to help you stay up to date on the latest Azure updates.&lt;/p&gt;

&lt;p&gt;Here is one such whitepaper to check with, you can download it from Azure website. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://azure.microsoft.com/en-us/resources/example-azure-implementation-for-government-agencies/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--poodRbAH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://techcommunity.microsoft.com/t5/image/serverpage/image-id/64041i273C0E708F530193/image-size/large%3Fv%3Dv2%26px%3D999" alt="NEW WHITEPAPER: Example Azure Implementation for Government Agencies -  Microsoft Tech Community" width="465" height="653"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all about &lt;strong&gt;how to crack Microsoft Azure Fundamentals (AZ-900) Cloud Certification in 2022&lt;/strong&gt;. If you want to start working with Microsoft Azure or any other cloud platform then this is a really good certification to get started. &lt;/p&gt;

&lt;p&gt;You will not only learn about Microsoft Azure Fundamentals but also Cloud Computing fundamentals which apply to all kinds of cloud providers like &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-amazon-web-services-aws-cloud-in-2020-best-and-free-317f10d7c21d"&gt;AWS&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-google-cloud-platform-gcp-courses-certifications-online.html"&gt;GCP&lt;/a&gt;, and Microsoft Azure.&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;IT Certification Resources for Tech Professionals&lt;/strong&gt; and Java Programmers&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-AZ-900-exam-Azure-Fundamentals-certification-practice-tests-and-mock-exams-to.html"&gt;Top 5 AZ-900 Practice tests for programmers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-az-103-azure-administrator-associate-exam-certification.html"&gt;How to Crack AZ-103 Azure Administration Exam in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-courses-to-crack-azure-architecture-technologies-certification-az-300-exam.html#axzz6E6VuRMsx"&gt;Top 5 Courses to crack Azure Cloud Architect (AZ-300) Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-azure-solution-architect-exam-az-300.html"&gt;How to Prepare for Azure Solution Architect (AZ-300) Certification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-courses-to-crack-az-900-microsoft-azure-fundamentals-certification-exam.html"&gt;Top 5 Courses to Crack Azure Fundamentals (AZ-900) Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/06/top-5-course-to-become-microsoft-azure-administrator-certification-exam.html"&gt;5 Best Courses to Crack Azure Administrator Certification (AZ-103/104)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/06/top-5-course-to-crack-Microsoft-Azure-Developer-Certification-Exam-AZ-203.html"&gt;5 Online Courses to Pass Azure Developer Associate Certification (AZ-203)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://dev.to/javinpaul/top-10-courses-to-learn-docker-and-kubernetes-for-programmers-4lg0"&gt;Top 10 Courses to learn Docker and Kubernetes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.freecodecamp.org/how-to-pass-oracles-java-certifications-a-practical-guide-for-developers-e9b607ba6173"&gt;How to Crack Oracle's Java Certification in 2022?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://dev.to/javinpaul/10-data-science-and-machine-learning-courses-for-programmers-looking-to-switch-career-57kd"&gt;10 Data Science and Machine Learning Certification Courses&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://dev.to/javinpaul/10-things-every-software-developer-should-know-39pe"&gt;10 Things Every Software Developer Should Learn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/08/how-to-crack-spring-core-professional-certification-exam-java-latest.html"&gt;How to pass Spring Core Professional 5.0 Certification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2019/02/top-10-free-algorithms-and-data.html"&gt;10 Free Courses to Learn Data Structure and Algorithms&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/05/top-5-courses-to-crack-aws-solutions-architect-associate-certification-exam-SAA-C01.html#axzz5rHwAwycj"&gt;Top 5 Courses to Crack AWS Solution Architect Certification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-google-cloud-platform-gcp-courses-certifications-online.html"&gt;Top 5 Courses to Pass Google Associate Cloud Engineer Certification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/09/the-2018-devops-roadmap-your-guide-to-become-DevOps-Engineer.html"&gt;How to become a DevOps Engineer?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2017/05/10-free-java-8-certification-sample-questions-OCAJP8-OCPJP8-Mock-Exams.html"&gt;10 Free Sample Questions for OCAJP and OCPJP Exam&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you like these &lt;em&gt;AZ-900 dumps or practice tests&lt;/em&gt;, then please share it with your friends and colleagues. If you have any questions or feedback, then please drop a note.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. -&lt;/strong&gt; If you are new to Azure Cloud Platform and looking for free online training courses to learn Azure basics and prepare for Azure Fundamentals certification then you can also see &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcloud-computing-using-microsoft-azure%2F"&gt; Getting Started with Cloud Computing using Microsoft Azure&lt;/a&gt;&lt;/strong&gt;- a free course on Udemy. It's completely free and all you need is a free Udemy account to join this course online.&lt;/p&gt;

</description>
      <category>cloudcomputing</category>
      <category>azure</category>
      <category>programming</category>
      <category>certification</category>
    </item>
    <item>
      <title>A few useful Tricks in Python for Beginners</title>
      <author>Vadim Kolobanov</author>
      <pubDate>Sun, 21 Nov 2021 05:33:37 +0000</pubDate>
      <link>https://dev.to/abstract/a-few-useful-tricks-in-python-for-beginners-1bfa</link>
      <guid>https://dev.to/abstract/a-few-useful-tricks-in-python-for-beginners-1bfa</guid>
      <description>&lt;p&gt;Hello everyone! Let's see together what elegant mechanics professional Python developers use in their code&lt;/p&gt;

&lt;p&gt;I very often see such examples in some public Git repositories of experienced programmers.&lt;br&gt;
Let's get started&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#sorting-data-by-multiple-keys"&gt;
  &lt;/a&gt;
  Sorting data by multiple keys
&lt;/h1&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;peoples&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'John'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Janet'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Ed'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Sara'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'John'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Jane'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'John'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;52&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;peoples&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'age'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;people&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Output
&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Ed'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s"&gt;'age'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Jane'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'age'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Janet'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'age'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'John'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'age'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'John'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'age'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'John'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'age'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Sara'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'age'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;at the output, we get alphabetical sorting, and if the values match, the sorting takes place by the second key. This will not have an effect if there are no duplicate values in your data.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#list-comprehensions-list-generator"&gt;
  &lt;/a&gt;
  List comprehensions (List Generator)
&lt;/h1&gt;

&lt;p&gt;I have already shown an understanding of the list in my previous articles, here I will just show you a few possible uses&lt;/p&gt;

&lt;p&gt;Basic syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[ expression for item in list if conditions ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A very simple example to fill in a list is a sequence of numbers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;mylist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mylist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And since you can use an expression, you can also do some math.:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;squares&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;squares&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#output
&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;81&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can call a function as an expression&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;some_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;some_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#output
&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;7.0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finally, you can use "if" to filter the list. In this case, we only keep the values that are divisible by 2:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;filtered&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filtered&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#output
&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#control-of-memory-in-use-by-objects"&gt;
  &lt;/a&gt;
  Control of memory in use by objects
&lt;/h1&gt;

&lt;p&gt;I have also already mentioned sys.getsizeof() in the articles, but here I want to show you an interesting example that will show all the usefulness of memory control&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="n"&gt;mylist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mylist&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#output
&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just 48 bytes? Seriously? The list is from 0 to 9999?&lt;br&gt;
Yes, guys and why is this happening, I'll tell you now&lt;/p&gt;

&lt;p&gt;The fact is that range only pretends to be a list, behaves like a list, but in fact, the range function returns a class and it certainly loads less memory.&lt;/p&gt;

&lt;p&gt;For comparison, let's create a real list with the same range&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="n"&gt;myreallist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myreallist&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#output
&lt;/span&gt;&lt;span class="mi"&gt;87616&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Agree, the numbers vary greatly, so it's not so useless to monitor memory.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#dataclasses"&gt;
  &lt;/a&gt;
  Dataclasses
&lt;/h1&gt;

&lt;p&gt;Since version 3.7, Python offers data classes. There are several advantages over regular classes or other alternatives, such as returning multiple values or dictionaries:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a data class requires a minimal amount of code&lt;/li&gt;
&lt;li&gt;that you can compare data classes because there is "__ eq __"&lt;/li&gt;
&lt;li&gt;you can easily output a data class for debugging because you can use "__ repr __"&lt;/li&gt;
&lt;li&gt;data classes that require type hints, this reduces the likelihood of errors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is an example of a data class in action:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dataclasses&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;dataclass&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;dataclass&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Card&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
    &lt;span class="n"&gt;suit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;


&lt;span class="n"&gt;card&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Card&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Q"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"hearts"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# True
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# 'Q'
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;suit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# 'hearts'
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Card(rank='Q', suit='hearts')
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#finding-the-most-common-value"&gt;
  &lt;/a&gt;
  Finding the most common value
&lt;/h1&gt;

&lt;p&gt;A fairly simple and elegant example of searching for repetitions in a sequence&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'abracadabra'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;most_common&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#output
&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'abracadabra'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;most_common&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#output
&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'abracadabra'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;most_common&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#output
&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As an argument for Counter, you can pass, for example, list. This will also work.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#merging-dictionaries-python-35"&gt;
  &lt;/a&gt;
  Merging Dictionaries (Python 3.5+)
&lt;/h1&gt;

&lt;p&gt;Starting with Python 3.5, it's easier to combine dictionaries:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;dict1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;dict2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;dict1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;dict2&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#output
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If there are overlapping keys, the keys from the first dictionary will be overwritten.&lt;/p&gt;

&lt;p&gt;In Python 3.9, combining dictionaries becomes even cleaner. The above merge in Python 3.9 can be rewritten as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;dict1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;dict2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dict1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;dict2&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#output
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;The use of some complex (to learn) mechanics in a programming language seems unnecessary to many novice programmers. &lt;br&gt;
But have you ever wondered why more experienced developers use such mechanisms more often?. Simplicity for a beginner and simplicity for a professional are two completely different things. What seems complicated and cumbersome for a beginner is actually the simplest and lightest solution for a more experienced programmer. Each of you will come to these methods and solutions by yourself. Sooner or later. It's just that in our world today, you can learn everything. Let's learn properly!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#put-on-heart-if-you-liked-it-and-you-learned-something-new"&gt;
  &lt;/a&gt;
  Put on Heart if you liked it and you learned something new!
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#you-can-also-follow-me-to-receive-notifications-about-new-interesting-articles"&gt;
  &lt;/a&gt;
  You can also follow &lt;a href="https://dev.to/vadimkolobanov"&gt;ME&lt;/a&gt; to receive notifications about new interesting articles.
&lt;/h3&gt;




&lt;h3&gt;
  &lt;a href="#faq"&gt;
  &lt;/a&gt;
  FAQ
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Python?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Look into the following series:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/vadimkolobanov/series/15329"&gt;Learning Python&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/vadimkolobanov/series/15349"&gt;Step by Step to Junior&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/vadimkolobanov/series/15331"&gt;Ideas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can we cooperate with you?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have interesting projects and you need a python (web)developer, then you can contact me by &lt;strong&gt;&lt;a href="//titanyforgame@gmail.com"&gt;mail&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href="https://discord.gg/szEuVAhatW"&gt;discord&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://www.linkedin.com/in/vadzim-hlobuz-0b44531b7/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt; for cooperation&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect to me on&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.facebook.com/neo.skarynsky"&gt;Write me on Facebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/decodesperato"&gt;My Twitter&lt;/a&gt; &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>productivity</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Amazon S3 to AWS StepFunctions pattern</title>
      <author>Wojciech Matuszewski</author>
      <pubDate>Sun, 21 Nov 2021 05:06:24 +0000</pubDate>
      <link>https://dev.to/aws-builders/amazon-s3-to-aws-stepfunctions-pattern-4eog</link>
      <guid>https://dev.to/aws-builders/amazon-s3-to-aws-stepfunctions-pattern-4eog</guid>
      <description>&lt;p&gt;&lt;em&gt;Amazon S3&lt;/em&gt; is easily my top pick from the vast catalog of different AWS services. Considering its &lt;a href="https://aws.amazon.com/s3/features/"&gt;features&lt;/a&gt; and the &lt;a href="https://aws.amazon.com/s3/consistency/"&gt;consistency guarantees&lt;/a&gt;, it really is an engineering marvel.&lt;/p&gt;

&lt;p&gt;Since &lt;em&gt;Amazon S3&lt;/em&gt; is often used as a starting point for various workloads, one might need to integrate S3 events with a workflow orchestration service - like &lt;em&gt;AWS StepFunctions&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This blog post will discuss ways developers might wire the &lt;em&gt;Amazon S3&lt;/em&gt; and &lt;em&gt;AWS StepFunctions&lt;/em&gt; together to achieve highly scalable workflows.&lt;/p&gt;

&lt;p&gt;Let us dive in.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LuCyBZvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/swlrbbizfa6bpf9tvdvr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LuCyBZvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/swlrbbizfa6bpf9tvdvr.png" alt="Mistery" width="880" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;All the code used in this blog post could be found in &lt;a href="https://github.com/WojciechMatuszewski/s3-to-sfn-pattern"&gt;this GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#using-s3-notifications-and-aws-lambda-function"&gt;
  &lt;/a&gt;
  Using S3 Notifications and AWS Lambda function
&lt;/h2&gt;

&lt;p&gt;Depending on your use case, this might be the most straightforward option available to you. The integration is &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/with-s3-example.html"&gt;well documented&lt;/a&gt; and taught in most AWS-related courses.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wHPa5qWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjzatofr09cmfaee0sq1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wHPa5qWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjzatofr09cmfaee0sq1.png" alt="S3 Notification with AWS Lambda" width="880" height="195"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;AWS CDK&lt;/em&gt; makes setting this architecture a breeze.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;machine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;sfn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StateMachine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;machine&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;definition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;sfn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Pass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pass&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bucket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bucket&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;removalPolicy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RemovalPolicy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DESTROY&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * Handler is responsible for forwarding the S3 event to the state machine.
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;notificationHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;nodeJsLambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NodejsFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;notificationHandler&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;handler&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;notification-handler.ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;STATE_MACHINE_ARN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;machine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stateMachineArn&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;notificationHandler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addToRolePolicy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;iam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PolicyStatement&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;states:StartExecution&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;machine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stateMachineArn&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;effect&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;iam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Effect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ALLOW&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventNotification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OBJECT_CREATED_PUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;s3Notifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LambdaDestination&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;notificationHandler&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;uploads/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Other prolific authors from the AWS community have written many articles regarding this pattern, so I will not repeat their words here. However, I will remind you about some limitations and gotchas that you might encounter while working with S3 Notifications.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Make sure you are not going to create an &lt;strong&gt;infinite event loop&lt;/strong&gt;. This often happens whenever the target &lt;em&gt;AWS Lambda&lt;/em&gt; function causes an S3 event that triggers it again.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Keep in mind the &lt;strong&gt;limitations of the S3 Notifications event filtering rules&lt;/strong&gt;. Here is a &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html"&gt;link to the relevant AWS documentation page&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Keep in mind the &lt;strong&gt;delivery guarantees&lt;/strong&gt;. This point is worth considering regardless of the service. I've read countless &lt;em&gt;StackOverflow&lt;/em&gt; questions asking about duplicate events. Consult &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/NotificationHowTo.html"&gt;this documentation piece&lt;/a&gt; regarding event delivery guarantees.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#applying-the-storagefirst-pattern"&gt;
  &lt;/a&gt;
  Applying the storage-first pattern
&lt;/h3&gt;

&lt;p&gt;In the AWS Serverless space, more and more engineers are talking about &lt;em&gt;storage-first&lt;/em&gt; pattern where the data/event is first persisted and then reacted upon. This "store first and react later" approach makes it easy to handle heavy loads (through event batching) and ensures resiliency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ARmqaEe6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpepyqn3bvcfg22ma0i6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ARmqaEe6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpepyqn3bvcfg22ma0i6.png" alt="S3 Notifications storage first" width="880" height="155"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luckily for us, &lt;em&gt;Amazon S3&lt;/em&gt; integrates with &lt;em&gt;Amazon SQS&lt;/em&gt;, making augmenting our current infrastructure a breeze.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s3EventsQueue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;notificationHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="nx"&gt;notificationHandler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;lambdaEventSources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SqsEventSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s3EventsQueue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/**
     * Increase this number as you please.
     */&lt;/span&gt;
    &lt;span class="na"&gt;batchSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventNotification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OBJECT_CREATED_PUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// Previously we were targeting the Lambda directly.&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;s3Notifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SqsDestination&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s3EventsQueue&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;uploads/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is &lt;strong&gt;essential to handle errors correctly in the poller AWS Lambda function&lt;/strong&gt;. Remember that &lt;strong&gt;if your Lambda function throws an error, the whole batch of messages will be re-queued&lt;/strong&gt;. I have yet to discover a better way of handling this than manually deleting messages when they are processed.&lt;/p&gt;

&lt;p&gt;If you are interested in the implementation, &lt;a href="https://github.com/WojciechMatuszewski/s3-to-sfn-pattern/blob/main/lib/storage-first-handler.ts#L8"&gt;here is mine&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-aws-cloudtrail-and-amazon-eventbridge"&gt;
  &lt;/a&gt;
  Using AWS CloudTrail and Amazon EventBridge
&lt;/h2&gt;

&lt;p&gt;For the longest time, I was confident that the only way of integrating &lt;em&gt;AWS S3&lt;/em&gt; with &lt;em&gt;Amazon StepFunctions&lt;/em&gt; was through S3 Notifications utilizing an intermediate &lt;em&gt;AWS Lambda&lt;/em&gt; function.&lt;/p&gt;

&lt;p&gt;I rejoiced when exploring &lt;em&gt;AWS CloudTrail&lt;/em&gt; where I learned about &lt;strong&gt;EventSelectors&lt;/strong&gt; and &lt;strong&gt;AdvancedEventSelectors&lt;/strong&gt;. These would allow me to write &lt;em&gt;Amazon S3&lt;/em&gt; and &lt;em&gt;Amazon EventBridge&lt;/em&gt; together to achieve a fully "lambda-less" architecture.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A2iyFXP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/heikmjmv0veu8sm8nx8f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A2iyFXP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/heikmjmv0veu8sm8nx8f.png" alt="S3 Notification with AWS CloudTrail" width="880" height="118"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following sections touch on the event selectors rather than the &lt;em&gt;AWS CloudTrail&lt;/em&gt; service itself. It would be best if you were familiar with &lt;em&gt;AWS CloudTrail&lt;/em&gt; before proceeding.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-aws-cloudtrail-event-selectors"&gt;
  &lt;/a&gt;
  What are AWS CloudTrail event selectors
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;AWS CloudTrail&lt;/em&gt; event selectors are nothing more than filtering rules one might apply to configure which events get captured by a given trail. It is vital to note that &lt;strong&gt;the event selectors only apply to the data events. To my best knowledge, you cannot filter the management events (only turn them off and on)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t9uSq_uY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhdgmnj38ab59wuc0uyk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t9uSq_uY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhdgmnj38ab59wuc0uyk.png" alt="CloudTrail event selector" width="880" height="559"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#utilizing-the-eventselectors"&gt;
  &lt;/a&gt;
  Utilizing the EventSelectors
&lt;/h3&gt;

&lt;p&gt;The "regular" &lt;em&gt;AWS CloudTrail&lt;/em&gt; event selectors allow you to track read and/or write events originating from a specific bucket. The list of all possible events is &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/cloudtrail-logging-s3-info.html"&gt;rather extensive&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following is an example of how one might create an &lt;em&gt;AWS CloudTrail&lt;/em&gt; event selector for an &lt;em&gt;Amazon S3&lt;/em&gt; bucket using &lt;em&gt;AWS CDK&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bucket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bucket&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;removalPolicy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RemovalPolicy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DESTROY&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;trail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;cloudTrail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Trail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;trail&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;includeGlobalServiceEvents&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;isMultiRegionTrail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;trail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addS3EventSelector&lt;/span&gt;&lt;span class="p"&gt;([{&lt;/span&gt; &lt;span class="nx"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;objectPrefix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;uploads&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;includeManagementEvents&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;readWriteType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cloudTrail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReadWriteType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WRITE_ONLY&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just like in the case of S3 Notifications, we can specify the &lt;code&gt;prefix&lt;/code&gt; parameter. Unlike the S3 Notifications, we cannot specify the &lt;code&gt;suffix&lt;/code&gt; parameter.&lt;/p&gt;

&lt;p&gt;Combined with the broad scope of &lt;code&gt;WRITE_ONLY&lt;/code&gt; events, this setup forces us to do much of our filtering on the &lt;em&gt;AWS EventBridge&lt;/em&gt; side of things. Luckily for us, the service we are sending events to is designed with rich filtering capabilities in mind.&lt;/p&gt;

&lt;p&gt;The following code creates an &lt;em&gt;AWS EventBridge&lt;/em&gt; rule matching &lt;em&gt;Amazon S3&lt;/em&gt; events.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bucket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;machine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;assetUploadedRule&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;events&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Rule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;assetUploadedRule&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;eventPattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aws.s3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;eventSource&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;s3.amazonaws.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;eventName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;PutObject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;requestParameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;bucketName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bucketName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;eventsTargets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SfnStateMachine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;machine&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it! All the &lt;code&gt;PutObject&lt;/code&gt; events originating from the bucket you have applied the EventSelector on will be pushed to &lt;em&gt;Amazon EventBridge&lt;/em&gt; and cause state machine invocation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#utilizing-the-advancedeventselectors"&gt;
  &lt;/a&gt;
  Utilizing the AdvancedEventSelectors
&lt;/h3&gt;

&lt;p&gt;The "advanced" &lt;em&gt;AWS CloudTrail&lt;/em&gt; event selectors offer more sophisticated event filtering capabilities. &lt;strong&gt;This is a good thing because every data event incurs &lt;em&gt;AWS CloudTrail&lt;/em&gt; cost&lt;/strong&gt;. Utilizing the advanced event selectors is a &lt;a href="https://aws.amazon.com/blogs/mt/optimize-aws-cloudtrail-costs-using-advanced-event-selectors/"&gt;excellent way to optimize your CloudTrail costs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;bad news&lt;/strong&gt; is that the &lt;strong&gt;advanced event selectors are not supported via &lt;a href="https://aws.amazon.com/cloudformation/"&gt;&lt;em&gt;AWS CloudFormation&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;, making the &lt;em&gt;AWS CDK&lt;/em&gt; code a bit more involved.&lt;/p&gt;

&lt;p&gt;The following code creates &lt;code&gt;AdvancedEventSelector&lt;/code&gt; using &lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html"&gt;&lt;em&gt;custom resources&lt;/em&gt;&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;trail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;cloudTrail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Trail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;trail&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;includeGlobalServiceEvents&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;isMultiRegionTrail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cfnTrail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;trail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultChild&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;cloudTrail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CfnTrail&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;advancedEventSelectorResource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;customResources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AwsCustomResource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;advancedEventSelectorResource&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;putEventSelectors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CloudTrail&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;AdvancedEventSelectors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;FieldSelectors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
              &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eventCategory&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;Equals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Data&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
              &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resources.type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;Equals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AWS::S3::Object&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
              &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eventName&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;Equals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;PutObject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
              &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resources.ARN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;StartsWith&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arnForObjects&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;uploads/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Listens to the PutObject only&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;TrailName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cfnTrail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;physicalResourceId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;customResources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PhysicalResourceId&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;TrailARN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;onDelete&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;putEventSelectors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CloudTrail&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;AdvancedSelectors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
        &lt;span class="na"&gt;TrailName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cfnTrail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;policy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;customResources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AwsCustomResourcePolicy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromSdkCalls&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;trail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trailArn&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;em&gt;AWS EventBridge&lt;/em&gt; rule declaration has not changed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bucket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;machine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;assetUploadedRule&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;events&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Rule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;assetUploadedRule&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;eventPattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aws.s3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;eventSource&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;s3.amazonaws.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;eventName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;PutObject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;requestParameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;bucketName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bucketName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;eventsTargets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SfnStateMachine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;machine&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If I were to choose between the "regular" and "advanced" event selectors, I would personally be inclined to pick the latter - mainly due to cost savings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-words"&gt;
  &lt;/a&gt;
  Closing words
&lt;/h2&gt;

&lt;p&gt;There you have it. These were two ways one might integrate &lt;em&gt;Amazon S3&lt;/em&gt; events with &lt;em&gt;AWS StepFunctions&lt;/em&gt; state machine. Of course, in the world of AWS, there are probably much more ways to do this. I wanted to point you towards the ones I find very useful.&lt;/p&gt;

&lt;p&gt;As always, thank you for your valuable time.&lt;/p&gt;

&lt;p&gt;You can find me on Twitter - &lt;a href="https://twitter.com/wm_matuszewski"&gt;@wm_matuszewski&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cdk</category>
      <category>serverless</category>
    </item>
  </channel>
</rss>
