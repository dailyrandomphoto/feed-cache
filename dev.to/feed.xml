<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Introduction to Amazon Managed Streaming for Apache Kafka (Amazon MSK)</title>
      <author>Adit Modi</author>
      <pubDate>Thu, 20 Jan 2022 15:32:51 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-amazon-managed-streaming-for-apache-kafka-amazon-msk-3fpe</link>
      <guid>https://dev.to/aws-builders/introduction-to-amazon-managed-streaming-for-apache-kafka-amazon-msk-3fpe</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon MSK is a fully managed service that makes it easy for you to build and run applications that use Apache Kafka to process streaming data. Apache Kafka is an open-source platform for building real-time streaming data pipelines and applications. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With Amazon MSK, you can use native Apache Kafka APIs to populate data lakes, stream changes to and from databases, and power machine learning and analytics applications.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2WN9JMi4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7qpu4gt84ewvwvh7qd6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2WN9JMi4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7qpu4gt84ewvwvh7qd6.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Big Data Analytics Options on AWS&lt;/strong&gt; is a Series containing different articles that provides a basic introduction to different Big Data Analytics Options on AWS. Each article covers the detailed guide on how each service is used for collecting, processing, storing, and analyzing big data.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Apache Kafka clusters are challenging to set up, scale, and manage in production. When you run Apache Kafka on your own, you need to provision servers, configure Apache Kafka manually, replace servers when they fail, orchestrate server patches and upgrades, architect the cluster for high availability, ensure data is durably stored and secured, set up monitoring and alarms, and carefully plan scaling events to support load changes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon MSK makes it easy for you to build and run production applications on Apache Kafka without needing Apache Kafka infrastructure management expertise.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With a few clicks in the Amazon MSK console (sign-in required), you can create a fully managed Apache Kafka cluster that follows Apache Kafka’s deployment best practices, or you can create your own cluster using your own custom configuration. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After you create your desired configuration, Amazon MSK automatically provisions, configures, and manages the operations of your Apache Kafka cluster and Apache ZooKeeper nodes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An Amazon MSK cluster is the primary Amazon MSK resource that you can create in your account.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Following are the primary components that work together in MSK:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Broker nodes&lt;/strong&gt; — When creating an Amazon MSK cluster, you specify how many broker nodes you want Amazon MSK to create in each Availability Zone. Each Availability Zone has its own virtual private cloud (VPC) subnet.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ZooKeeper nodes&lt;/strong&gt; — Amazon MSK also creates the Apache ZooKeeper nodes for you. Apache ZooKeeper is an open-source server that enables highly reliable distributed coordination.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Producers, consumers, and topic creators&lt;/strong&gt; — Amazon MSK enables you to use Apache Kafka data-plane operations to create topics and to produce and consume data.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cluster operations&lt;/strong&gt; — You can use the AWS Management Console, the AWS Command Line Interface (AWS CLI), or the APIs in the SDK to perform control-plane operations. For example, you can create or delete an Amazon MSK cluster, list all the clusters in an account, view the properties of a cluster, and update the number and type of brokers in a cluster.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon MSK detects and automatically recovers from the most common failure scenarios for clusters, so that your producer and consumer applications can continue their write and read operations with minimal impact. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When Amazon MSK detects a broker failure, it mitigates the failure or replaces the unhealthy or unreachable broker with a new one. In addition, where possible, it reuses the storage from the older broker to reduce the data that Apache Kafka needs to replicate. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your availability impact is limited to the time required for Amazon MSK to complete the detection and recovery. After a recovery, your producer and consumer apps can continue to communicate with the same broker IP addresses that they used before the failure.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#ideal-usage-patterns"&gt;
  &lt;/a&gt;
  Ideal usage patterns
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The AWS Streaming Data Solution for Amazon MSK enables you to capture, store, process, and deliver real-time streaming data. This service helps you address real-time streaming use cases; for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Capture high volume application log files&lt;/li&gt;
&lt;li&gt;Analyze website clickstreams&lt;/li&gt;
&lt;li&gt;Process database event streams&lt;/li&gt;
&lt;li&gt;Track financial transactions&lt;/li&gt;
&lt;li&gt;Aggregate social media feeds&lt;/li&gt;
&lt;li&gt;Collect IT log files&lt;/li&gt;
&lt;li&gt;Continuously deliver to a data lake&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#cost-model"&gt;
  &lt;/a&gt;
  Cost model
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon MSK has a simple “pay only for what you use” model. There are no minimum fees or upfront commitments. There are charges for the time your broker instances run, the storage used monthly, and standard data transfer fees for data in and out of the cluster. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Apache Kafka broker instance usage is billed on an hourly basis (billed at one second resolution), with varying fees depending on the size of the Apache Kafka broker instance and active brokers in your Amazon MSK clusters. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon MSK charges for the amount of storage you provision in the cluster. This is calculated by adding up the GB per broker each hour and dividing by the number of hours in the month, resulting in a value in "GB-Month."&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There are no additional charges for data transfer between brokers or between Apache ZooKeeper nodes and brokers. Standard AWS data transfer charges are charged for data transferred in and out of Amazon MSK clusters. See Amazon MSK pricing for further details.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon MSK allows you to choose the right type and number of brokers for yourcluster. You can size your cluster based on your ingestion rate, hours of retention and data output rates. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The number of partitions per broker is affected by use case and configuration. To determine the right number of brokers for your MSK cluster and understand costs, see the MSK Sizing and Pricing spreadsheet (file download). For more information about the different broker types, see Broker types.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#durability-and-availability"&gt;
  &lt;/a&gt;
  Durability and availability
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use the following recommendations so that your MSK cluster can be highly available during an update (such as when you're updating the broker type or Apache Kafka version, for example) or when Amazon MSK is replacing a broker.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ensure that the replication factor (RF) is at least two for two-AZ clusters and at least three for three-AZ clusters. An RF of one can lead to offline partitions during a rolling update.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set minimum in-sync replicas (minISR) to at most RF-1. A minISR that is equal to the RF can prevent producing to the cluster during a rolling update. A minISR of two allows three-way replicated topics to be available when one replica is offline.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ensure client connection strings include multiple brokers. Having multiple brokers in a client’s connection string allows for failover when a specific broker is offline for an update.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#scalability-and-elasticity"&gt;
  &lt;/a&gt;
  Scalability and elasticity
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You can increase the capacity of the cluster at any time according to your business or operational needs. You can use Amazon MSK operation to increase the number of brokers in your MSK cluster. To expand a cluster, make sure that it is in the ACTIVE state.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can also increase storage per broker. You can increase the amount of EBS storage per broker, but you can't decrease the storage. Storage volumes remain available during this scaling-up operation. You can use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Automatic scaling&lt;/strong&gt; — You can configure Amazon Managed Streaming for Apache Kafka to automatically expand your cluster's storage in response to increased usage using Application Auto Scaling policies. Your automatic scaling policy sets the target disk utilization and the maximum scaling capacity.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Manual scaling&lt;/strong&gt; — To increase storage, wait for the cluster to be in the ACTIVE state. Storage scaling has a cooldown period of at least six hours between events. Even though the operation makes additional storage available right away, the service performs optimizations on your cluster that can take up to 24 hours or more. The duration of these optimizations is proportional to your storage size.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#interfaces"&gt;
  &lt;/a&gt;
  Interfaces
&lt;/h1&gt;

&lt;p&gt;Amazon MSK has deep AWS service integrations with Amazon EMR, AWS Lambda, Amazon Kinesis Data Analytics, and AWS Glue Streaming ETL. It also works with Kafka Connect, Mirror Maker, Kafka Streams, and a number of 3rd party frameworks like Apache Spark, Apache Storm, and so on. The producer side APIs add messages to the cluster for a topic. The consumer side APIs get messages for a topic as a stream of messages.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#antipatterns"&gt;
  &lt;/a&gt;
  Anti-patterns
&lt;/h1&gt;

&lt;p&gt;Amazon MSK has the following anti-patterns:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ad hoc queries&lt;/strong&gt; — MSK is a stream of unbounded data. It is not used for ad hoc queries.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Long-term data storage and analytics&lt;/strong&gt; — MSK is not suited for long-term data storage.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Hope this guide gives you an Introduction to Amazon Managed Streaming for Apache Kafka (Amazon MSK).&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comment section 👇&lt;br&gt;
And if you haven't yet, make sure to follow me on below handles:&lt;/p&gt;

&lt;p&gt;👋 &lt;strong&gt;connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🤓 &lt;strong&gt;connect with me on &lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🐱‍💻 &lt;strong&gt;follow me on &lt;a href="https://github.com/AditModi"&gt;github&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
✍️ &lt;strong&gt;Do Checkout &lt;a href="https://aditmodi.hashnode.dev"&gt;my blogs&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Like, share and follow me 🚀 for more content.&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__497987"&gt;
  
    .ltag__user__id__497987 .follow-action-button {
      background-color: #000000 !important;
      color: #fa6c00 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/aditmodi" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYJrtrA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mUzXbt1U--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497987/edde8513-7308-4a4d-9592-2be160d074d2.png" alt="aditmodi image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/aditmodi"&gt;Adit Modi&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/aditmodi"&gt;Cloud Engineer | AWS Community Builder | 8x AWS Certified | 3x Azure Certified | Author of Cloud Tech , DailyDevOps &amp;amp; BigDataJournal | DEV moderator&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;





&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/whitepapers/latest/big-data-analytics-options/amazon-msk.html"&gt;Reference Notes&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>bigdata</category>
      <category>cloud</category>
      <category>analytics</category>
    </item>
    <item>
      <title>DotVVM for Visual Studio 2022 is now available</title>
      <author>Daniel Gomez Jaramillo</author>
      <pubDate>Thu, 20 Jan 2022 15:30:51 +0000</pubDate>
      <link>https://dev.to/dotvvm/dotvvm-for-visual-studio-2022-is-now-available-4odd</link>
      <guid>https://dev.to/dotvvm/dotvvm-for-visual-studio-2022-is-now-available-4odd</guid>
      <description>&lt;p&gt;&lt;a href="https://www.dotvvm.com/"&gt;DotVVM&lt;/a&gt; is an ASP.NET framework that allows us to create web applications using the MVVM (Model, View, ViewModel) pattern with C# and HTML. &lt;/p&gt;

&lt;p&gt;As of this time, DotVVM is now available for &lt;a href="https://visualstudio.microsoft.com/vs/"&gt;Visual Studio 2022&lt;/a&gt; through an extension. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps-to-follow"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Steps to follow&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;To install this extension we can perform the following steps: &lt;/p&gt;

&lt;p&gt;1.- Load Visual Studio, go to the Extensions section and select Manage Extensions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xMob4py5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkh6mxdiq39t37jnx3lq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMob4py5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkh6mxdiq39t37jnx3lq.png" alt="" width="435" height="179"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.- Search for DotVVM.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DiFG9q68--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l87edd2kna0pvj3chuoj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DiFG9q68--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l87edd2kna0pvj3chuoj.png" alt="" width="880" height="224"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.- Download the extension and follow the instructions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wm-llk9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oiwzqlsgqhgfnlg8i6h3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wm-llk9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oiwzqlsgqhgfnlg8i6h3.png" alt="" width="431" height="231"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.- Restart Visual Studio and create a new project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_i3bgLO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5y79iyx9mus91r2imyyy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_i3bgLO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5y79iyx9mus91r2imyyy.png" alt="" width="523" height="158"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.- Search for DotVVM and select DotVVM Web Application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rj7goagn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nkrvmfvi74tdeyzpygl6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rj7goagn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nkrvmfvi74tdeyzpygl6.png" alt="" width="769" height="384"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With these steps, DotVVM is ready to be used from our Visual Studio 2022. The process is the same for Visual Studio 2019. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Additional Resources&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;If you want to know everything we can do with DotVVM, here are some case study articles that may be useful to you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dev.to/esdanielgomez/dotvvm-and-asp-net-core-implementing-crud-operations-l2e"&gt;DotVVM and ASP.NET: Implementing CRUD operations&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/esdanielgomez/building-a-dashboard-with-asp-net-core-and-dotvvm-349"&gt;Building a Dashboard with ASP.NET Core and DotVVM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/esdanielgomez/working-with-web-services-through-asp-net-core-and-dotvvm-a-step-by-step-guide-2le"&gt;Working with web services through ASP.NET Core and DotVVM (A step by step guide)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Thanks for reading&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;If you have any questions or ideas in mind, it will be a pleasure to be able to be in communication and together exchange knowledge with each other.&lt;/p&gt;

&lt;p&gt;See you on &lt;a href="https://twitter.com/esDanielGomez"&gt;Twitter&lt;/a&gt; / &lt;a href="https://esdanielgomez.com"&gt;esDanielGomez.com&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>dotnet</category>
      <category>csharp</category>
      <category>html</category>
    </item>
    <item>
      <title>Solving the "Wordle" Game using Python and Selenium</title>
      <author>Michael Mintz</author>
      <pubDate>Thu, 20 Jan 2022 15:25:40 +0000</pubDate>
      <link>https://dev.to/mintzworld/solving-the-wordle-game-using-python-and-selenium-1aei</link>
      <guid>https://dev.to/mintzworld/solving-the-wordle-game-using-python-and-selenium-1aei</guid>
      <description>&lt;p&gt;If you're looking for a complete Python Selenium solution for solving the &lt;a href="https://www.powerlanguage.co.uk/wordle/"&gt;Wordle Game&lt;/a&gt; programmatically, here's one that uses the &lt;a href="https://github.com/seleniumbase/SeleniumBase"&gt;SeleniumBase&lt;/a&gt; framework. The solution comes with a &lt;a href="https://youtube.com/watch?v=wSvehy4u_xw"&gt;YouTube video&lt;/a&gt;, as well as &lt;a href="https://github.com/seleniumbase/SeleniumBase/blob/master/examples/wordle_test.py"&gt;the Python code of the solution&lt;/a&gt;, and a GIF of what to expect:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g3ZjWHDQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://seleniumbase.io/cdn/gif/wordle.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g3ZjWHDQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://seleniumbase.io/cdn/gif/wordle.gif" width="480" height="290"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code uses special SeleniumBase &lt;code&gt;::shadow&lt;/code&gt; selectors in order to pierce through multiple layers of Shadow-DOM. Here's the code below, which can be run after calling &lt;code&gt;pip install seleniumbase&lt;/code&gt; to get all the Python dependencies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ast&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;seleniumbase&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;__version__&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;seleniumbase&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseCase&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WordleTests&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;word_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initalize_word_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;js_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://www.powerlanguage.co.uk/wordle/main.e65ce0a5.js"&lt;/span&gt;
        &lt;span class="n"&gt;req_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;js_file&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
        &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;req_text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"var La="&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"var La="&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;req_text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"],"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;word_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;req_text&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;literal_eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;modify_word_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;letter_status&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;new_word_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="n"&gt;correct_letters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="n"&gt;present_letters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;letter_status&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"correct"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;correct_letters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                        &lt;span class="n"&gt;new_word_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_word_list&lt;/span&gt;
                &lt;span class="n"&gt;new_word_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;letter_status&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"present"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;present_letters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                        &lt;span class="n"&gt;new_word_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_word_list&lt;/span&gt;
                &lt;span class="n"&gt;new_word_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;letter_status&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"absent"&lt;/span&gt;
                &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;correct_letters&lt;/span&gt;
                &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;present_letters&lt;/span&gt;
            &lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;new_word_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_word_list&lt;/span&gt;
                &lt;span class="n"&gt;new_word_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_wordle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://www.powerlanguage.co.uk/wordle/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"game-app::shadow game-modal::shadow game-icon"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initalize_word_list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;keyboard_base&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"game-app::shadow game-keyboard::shadow "&lt;/span&gt;
        &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;total_attempts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;attempt&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;total_attempts&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;letters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;letters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'button[data-key="%s"]'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;keyboard_base&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'button[data-key="↵"]'&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;keyboard_base&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Time for the animation
&lt;/span&gt;            &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'game-app::shadow game-row[letters="%s"]::shadow '&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;
            &lt;span class="n"&gt;tile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"game-tile:nth-of-type(%s)"&lt;/span&gt;
            &lt;span class="n"&gt;letter_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;letter_eval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_attribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tile&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"evaluation"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;letter_status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;letter_eval&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;letter_status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"correct"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modify_word_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;letter_status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_screenshot_to_logs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Word: "%s"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Attempts: %s'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;total_attempts&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unable to solve for the correct word in 6 attempts!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This solution requires minimum SeleniumBase version &lt;code&gt;2.4.0&lt;/code&gt; (or newer) due to updated Shadow-DOM methods. (&lt;a href="https://github.com/seleniumbase/SeleniumBase/releases/tag/v2.4.0"&gt;Here are the Release Notes of that version.&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Note that SeleniumBase tests are run using &lt;code&gt;pytest&lt;/code&gt;. Also, the &lt;a href="https://www.powerlanguage.co.uk/wordle/"&gt;Wordle website&lt;/a&gt; appears slightly differently when opened using headless Chrome, so don't use Chrome's headless mode when running this example.&lt;/p&gt;

&lt;p&gt;Have fun solving "Wordle" with SeleniumBase using Python and Selenium!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JT30glw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wq24p17cfp6i6xtzb8x5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JT30glw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wq24p17cfp6i6xtzb8x5.png" alt="Python to solve Wordle" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>seleniumbase</category>
      <category>python</category>
      <category>selenium</category>
      <category>wordle</category>
    </item>
    <item>
      <title>Create Your Own Ethereum Token in Minutes</title>
      <author>Saji Wang</author>
      <pubDate>Thu, 20 Jan 2022 15:22:39 +0000</pubDate>
      <link>https://dev.to/codesphere/create-your-own-ethereum-token-in-minutes-42ao</link>
      <guid>https://dev.to/codesphere/create-your-own-ethereum-token-in-minutes-42ao</guid>
      <description>&lt;p&gt;As more and more dollars are poured into blockchain companies, blockchain development has become an increasingly lucrative skill. In this tutorial, we’re going to be using Solidity, an Object-Oriented programming language for building smart contracts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-creating-a-token-works"&gt;
  &lt;/a&gt;
  How Creating a Token Works
&lt;/h3&gt;

&lt;p&gt;We are going to be making what’s known as an ERC-20 token, which is a standardized template for how an Ethereum token works. While our token can function as any other cryptocurrency, it will be run on the Ethereum blockchain, instead of running on its own blockchain.&lt;/p&gt;

&lt;p&gt;To define the logic of our ERC-20 token, we will create a smart contract which dictates how the token can be minted, transferred, and burned. As long as your token conforms to the ERC-20 standard, it would be able to be used on most blockchain platforms.&lt;/p&gt;

&lt;p&gt;Since we don’t want to deploy this token on the actual Ethereum network(That would cost money), we will be using a test network called Rinkeby. Rinkeby operates exactly like the Ethereum network, except we can give ourselves free ethereum whenever we want. This makes it much easier to test smart contracts and tokens.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;

&lt;p&gt;I’ll give the warning now that setting this up is not a quick feat. For all the hype, blockchain technology is still pretty new and most blockchain devtools have pretty bad UX. Nevertheless, let’s march onward!&lt;/p&gt;

&lt;p&gt;The first important step is to make sure that you have MetaMask installed on your browser and your wallet setup. MetaMask is a browser extension that allows you to easily access your crypto wallets and interact with blockchain platforms. Once your MetaMask is setup, make sure to navigate to settings and  enable show test networks (it will be in the advanced settings tab).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4UDdfFw5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/11h4awizlgqul5vrb03w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4UDdfFw5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/11h4awizlgqul5vrb03w.png" alt="Image description" width="686" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that we can use test networks with our MetaMask, head to the ChainLink Faucet and give yourself 0.1 test Eth on the Rinkeby network. A faucet is a place where you can mint new Eth to your wallet on a test network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EV9dKc6w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rfkxokwnhqynlnsed4bc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EV9dKc6w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rfkxokwnhqynlnsed4bc.png" alt="Image description" width="880" height="339"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, we’re going to be using an online Solidity compiler, Remix, to write, compile, and deploy our code on the test network.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#coding-our-token"&gt;
  &lt;/a&gt;
  Coding our Token
&lt;/h3&gt;

&lt;p&gt;We are going to be making a pretty boilerplate ERC-20 token. To demonstrate how you can add your own logic, I’m going to show how you can set time restrictions on certain actions.&lt;/p&gt;

&lt;p&gt;To get started, create a new solidity file (with a .sol extension) in Remix IDE. I’m going to name mine codesphereToken.sol, but you can name it whatever you want.&lt;/p&gt;

&lt;p&gt;We’ll then add the following code:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Notice that we are using OpenZeppilin’s ERC20 template as a baseline for our contract. We can then edit the functions as necessary to add our custom logic.&lt;/p&gt;

&lt;p&gt;In this example, we made it so new money can’t be minted on fridays. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#deploying-and-testing-our-token"&gt;
  &lt;/a&gt;
  Deploying and Testing our Token
&lt;/h3&gt;

&lt;p&gt;So how can we compile and test our cryptocurrency? First navigate to the compiler tab and make sure you have the latest commit selected. Keep in mind that the above gist uses Solidity version 0.8.11, you will need to change the pragma line at the beginning if that is no longer the case.&lt;/p&gt;

&lt;p&gt;You can then press compile – Remix will notify you of any errors&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xylTOBh_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hijby6wssyl4fu2aa8ed.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xylTOBh_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hijby6wssyl4fu2aa8ed.png" alt="Image description" width="724" height="984"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once your code is compiled, head to the deploy tab and select “Injected Web3” for the environment. This should prompt MetaMask to ask you for your sign in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make sure that you have the Rinkeby Test Network selected in Meta Mask. You will end up paying with real ETH to deploy your contract if you are on the main Ethereum network.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--juRK1R-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t9nq75jrfdlcev7d18xl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--juRK1R-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t9nq75jrfdlcev7d18xl.png" alt="Image description" width="714" height="148"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, select your token under the Contract tab. Before deploying, double check that you are on the Rinkeby test network. If all goes right, MetaMask should ask you to pay a gas fee(With Rinkeby Test Eth) and you should see a successful deployment message after a couple seconds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JeuzAlFH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/datz40pxob9srucjlq6m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JeuzAlFH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/datz40pxob9srucjlq6m.png" alt="Image description" width="724" height="972"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the contract has successfully deployed, the following interface will popup:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VaWcV9yT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hl275dikym9k7t3o9xos.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VaWcV9yT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hl275dikym9k7t3o9xos.png" alt="Image description" width="596" height="1246"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will allow you to test a number of functions such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Checking the supply, name, or symbol of the token&lt;/li&gt;
&lt;li&gt;Check the balance of a wallet&lt;/li&gt;
&lt;li&gt;Mint new tokens to a wallet&lt;/li&gt;
&lt;li&gt;Transfer tokens between recipients&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#where-to-go-from-here"&gt;
  &lt;/a&gt;
  Where to go from here
&lt;/h3&gt;

&lt;p&gt;Now we of course have only scratched the surface of Ethereum, Solidity, ERC20 tokens, and smart contracts. I hope, however, that this tutorial serves as an effective conduit for you to learn more about these topics. &lt;/p&gt;

&lt;p&gt;So what do you want to build with Solidity? Let us know down below!&lt;/p&gt;

&lt;p&gt;And as always, happy coding from your good friends at &lt;a href="https://link.codesphere.com/HU"&gt;Codesphere&lt;/a&gt;, the most intuitive cloud provider ever created.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Getting the follower count from Twitter API v2</title>
      <author>Andy Piper</author>
      <pubDate>Thu, 20 Jan 2022 15:18:23 +0000</pubDate>
      <link>https://dev.to/twitterdev/getting-the-follower-count-from-twitter-api-v2-4jh6</link>
      <guid>https://dev.to/twitterdev/getting-the-follower-count-from-twitter-api-v2-4jh6</guid>
      <description>&lt;p&gt;Version 2 of the Twitter API has been &lt;a href="https://blog.twitter.com/developer/en_us/topics/tools/2021/build-whats-next-with-the-new-twitter-developer-platform"&gt;the primary way to access the developer platform since November&lt;/a&gt;, but, with around 10 years of blog tutorials about v1.1, there is a lot less information shared by the developer community about the new version. Let's start to change that!&lt;/p&gt;

&lt;p&gt;Here's a great question I just answered in &lt;a href="https://stackoverflow.com/questions/tagged/twitter"&gt;the Twitter tag on Stack Overflow&lt;/a&gt;: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"How do I find the number of followers for a Twitter user in API v2?"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can see the full question (and my answer) embedded below. I thought I'd post here in order to expand on my response a little.&lt;/p&gt;


&lt;div class="ltag__stackexchange--container"&gt;
  &lt;div class="ltag__stackexchange--title-container"&gt;
    
      &lt;div class="ltag__stackexchange--title"&gt;
        &lt;h1&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Gn-iPj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackoverflow-logo-b42691ae545e4810b105ee957979a853a696085e67e43ee14c5699cf3e890fb4.svg" alt=""&gt;
            &lt;a href="https://stackoverflow.com/questions/70779246/how-to-get-the-twitter-followers-count-using-twitter-api-in-2022" rel="noopener noreferrer"&gt;
              
            &lt;/a&gt;
        &lt;/h1&gt;
        &lt;div class="ltag__stackexchange--post-metadata"&gt;
          &lt;span&gt;Jan 19 '22&lt;/span&gt;
            &lt;span&gt;Comments: 1&lt;/span&gt;
            &lt;span&gt;Answers: 1&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;a class="ltag__stackexchange--score-container" href="https://stackoverflow.com/questions/70779246/how-to-get-the-twitter-followers-count-using-twitter-api-in-2022" rel="noopener noreferrer"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9mJpuJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-up-eff2e2849e67d156181d258e38802c0b57fa011f74164a7f97675ca3b6ab756b.svg" alt=""&gt;
        &lt;div class="ltag__stackexchange--score-number"&gt;
          1
        &lt;/div&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wif5Zq3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-down-4349fac0dd932d284fab7e4dd9846f19a3710558efde0d2dfd05897f3eeb9aba.svg" alt=""&gt;
      &lt;/a&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--body"&gt;
    
&lt;p&gt;I am surprised to see that there is no way to simply get the number of followers for one Twitter account.&lt;/p&gt;
&lt;p&gt;I found many answers (&lt;a href="https://stackoverflow.com/questions/17409227/follower-count-number-in-twitter"&gt;Follower count number in Twitter&lt;/a&gt;, &lt;a href="https://stackoverflow.com/questions/27974764/how-to-obtain-follower-count-in-twitter-api-1-1"&gt;How to obtain follower count in Twitter API 1.1?&lt;/a&gt;, &lt;a href="https://stackoverflow.com/questions/18526709/how-to-get-followers-count-from-twitter"&gt;How to get followers count from twitter&lt;/a&gt;…&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--btn--container"&gt;
    
      &lt;a href="https://stackoverflow.com/questions/70779246/how-to-get-the-twitter-followers-count-using-twitter-api-in-2022" rel="noopener noreferrer"&gt;Open Full Question&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;The answer is quite simple, but not everyone is familiar with the new data formats yet. In v2, we have reduced the number of fields returned by default, and you can opt to select the information that is useful for your application, using the &lt;a href="https://developer.twitter.com/en/docs/twitter-api/data-dictionary/using-fields-and-expansions"&gt;fields and expansions parameters&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The follower and following counts for a user are part of the &lt;code&gt;public_metrics&lt;/code&gt; fields in the User object.&lt;/p&gt;

&lt;p&gt;The API endpoint and parameters are in the format&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://api.twitter.com/2/users/[ID]?user.fields=public_metrics,[any other fields]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here's an example of the output, using the &lt;a href="https://github.com/twitter/twurl"&gt;&lt;code&gt;twurl&lt;/code&gt;&lt;/a&gt; command line tool. In this case, &lt;code&gt;twurl&lt;/code&gt; handles the authentication etc, but you could also use the &lt;a href="https://t.co/twitter-api-postman"&gt;Twitter API v2 Postman Collection&lt;/a&gt;, or the &lt;a href="https://developer.twitter.com/apitools/api?endpoint=%2F2%2Fusers%2F%7Bid%7D&amp;amp;method=get"&gt;API Explorer&lt;/a&gt; from the API Tools available on the developer website, or a &lt;a href="https://developer.twitter.com/en/docs/twitter-api/tools-and-libraries/v2"&gt;library&lt;/a&gt; of your choice.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;twurl &lt;span class="nt"&gt;-j&lt;/span&gt; &lt;span class="s2"&gt;"/2/users/786491?user.fields=public_metrics,created_at"&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"data"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"id"&lt;/span&gt;: &lt;span class="s2"&gt;"786491"&lt;/span&gt;,
    &lt;span class="s2"&gt;"username"&lt;/span&gt;: &lt;span class="s2"&gt;"andypiper"&lt;/span&gt;,
    &lt;span class="s2"&gt;"created_at"&lt;/span&gt;: &lt;span class="s2"&gt;"2007-02-21T15:14:48.000Z"&lt;/span&gt;,
    &lt;span class="s2"&gt;"name"&lt;/span&gt;: &lt;span class="s2"&gt;"andypiper.xyz"&lt;/span&gt;,
    &lt;span class="s2"&gt;"public_metrics"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"followers_count"&lt;/span&gt;: 16570,
      &lt;span class="s2"&gt;"following_count"&lt;/span&gt;: 3247,
      &lt;span class="s2"&gt;"tweet_count"&lt;/span&gt;: 134651,
      &lt;span class="s2"&gt;"listed_count"&lt;/span&gt;: 826
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this call, we've requested user ID &lt;code&gt;786491&lt;/code&gt; (which is me! &lt;a href="https://twitter.com/intent/follow?user_id=786491"&gt;give me a follow&lt;/a&gt;, if you feel like it). By default without any parameters, calls to the &lt;a href="https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-id"&gt;users lookup endpoint&lt;/a&gt; only return the &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;username&lt;/code&gt; values. Here, we added the &lt;code&gt;user.fields&lt;/code&gt; to also ask for the &lt;code&gt;public_metrics&lt;/code&gt; - followers, following, number of Tweets I've posted, and the number of lists the account has been added to.&lt;/p&gt;

&lt;p&gt;So the answer to the original question: &lt;strong&gt;&lt;em&gt;to get the follower count, ask for the &lt;code&gt;public_metrics&lt;/code&gt; field in the User object, and access &lt;code&gt;data.public_metrics.followers_count&lt;/code&gt; in the response.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;Let's take it one step further. Expansions and fields are powerful. Using an expansion, we can also ask for my current pinned Tweet and more details about the contents of that Tweet, in a single API call:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;twurl &lt;span class="nt"&gt;-j&lt;/span&gt; &lt;span class="s2"&gt;"/2/users/786491?user.fields=public_metrics,created_at,pinned_tweet_id&amp;amp;expansions=pinned_tweet_id&amp;amp;tweet.fields=created_at,public_metrics,source,context_annotations,entities"&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"data"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"public_metrics"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"followers_count"&lt;/span&gt;: 16571,
      &lt;span class="s2"&gt;"following_count"&lt;/span&gt;: 3247,
      &lt;span class="s2"&gt;"tweet_count"&lt;/span&gt;: 134654,
      &lt;span class="s2"&gt;"listed_count"&lt;/span&gt;: 826
    &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="s2"&gt;"pinned_tweet_id"&lt;/span&gt;: &lt;span class="s2"&gt;"1482011997814374406"&lt;/span&gt;,
    &lt;span class="s2"&gt;"id"&lt;/span&gt;: &lt;span class="s2"&gt;"786491"&lt;/span&gt;,
    &lt;span class="s2"&gt;"username"&lt;/span&gt;: &lt;span class="s2"&gt;"andypiper"&lt;/span&gt;,
    &lt;span class="s2"&gt;"created_at"&lt;/span&gt;: &lt;span class="s2"&gt;"2007-02-21T15:14:48.000Z"&lt;/span&gt;,
    &lt;span class="s2"&gt;"name"&lt;/span&gt;: &lt;span class="s2"&gt;"andypiper.xyz"&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="s2"&gt;"includes"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"tweets"&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;
      &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"public_metrics"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;"retweet_count"&lt;/span&gt;: 31,
          &lt;span class="s2"&gt;"reply_count"&lt;/span&gt;: 5,
          &lt;span class="s2"&gt;"like_count"&lt;/span&gt;: 547,
          &lt;span class="s2"&gt;"quote_count"&lt;/span&gt;: 1
        &lt;span class="o"&gt;}&lt;/span&gt;,
        &lt;span class="s2"&gt;"entities"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;"urls"&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;
            &lt;span class="o"&gt;{&lt;/span&gt;
              &lt;span class="s2"&gt;"start"&lt;/span&gt;: 113,
              &lt;span class="s2"&gt;"end"&lt;/span&gt;: 136,
              &lt;span class="s2"&gt;"url"&lt;/span&gt;: &lt;span class="s2"&gt;"https://t.co/lCaoNcXcyL"&lt;/span&gt;,
              &lt;span class="s2"&gt;"expanded_url"&lt;/span&gt;: &lt;span class="s2"&gt;"https://dev.to/andypiper/what-resources-help-you-to-learn-a-new-api-2cc9"&lt;/span&gt;,
              &lt;span class="s2"&gt;"display_url"&lt;/span&gt;: &lt;span class="s2"&gt;"dev.to/andypiper/what…"&lt;/span&gt;,
              &lt;span class="s2"&gt;"images"&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;
                &lt;span class="o"&gt;{&lt;/span&gt;
                  &lt;span class="s2"&gt;"url"&lt;/span&gt;: &lt;span class="s2"&gt;"https://pbs.twimg.com/news_img/1482011998338654212/0NiDLEms?format=jpg&amp;amp;name=orig"&lt;/span&gt;,
                  &lt;span class="s2"&gt;"width"&lt;/span&gt;: 1000,
                  &lt;span class="s2"&gt;"height"&lt;/span&gt;: 500
                &lt;span class="o"&gt;}&lt;/span&gt;,
                &lt;span class="o"&gt;{&lt;/span&gt;
                  &lt;span class="s2"&gt;"url"&lt;/span&gt;: &lt;span class="s2"&gt;"https://pbs.twimg.com/news_img/1482011998338654212/0NiDLEms?format=jpg&amp;amp;name=150x150"&lt;/span&gt;,
                  &lt;span class="s2"&gt;"width"&lt;/span&gt;: 150,
                  &lt;span class="s2"&gt;"height"&lt;/span&gt;: 150
                &lt;span class="o"&gt;}&lt;/span&gt;
              &lt;span class="o"&gt;]&lt;/span&gt;,
              &lt;span class="s2"&gt;"status"&lt;/span&gt;: 200,
              &lt;span class="s2"&gt;"title"&lt;/span&gt;: &lt;span class="s2"&gt;"What resources help you to learn a new API?"&lt;/span&gt;,
              &lt;span class="s2"&gt;"description"&lt;/span&gt;: &lt;span class="s2"&gt;"In my day job, when I'm not learning things by reading and sharing here on DEV, I'm a developer..."&lt;/span&gt;,
              &lt;span class="s2"&gt;"unwound_url"&lt;/span&gt;: &lt;span class="s2"&gt;"https://dev.to/andypiper/what-resources-help-you-to-learn-a-new-api-2cc9"&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;]&lt;/span&gt;,
          &lt;span class="s2"&gt;"annotations"&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;
            &lt;span class="o"&gt;{&lt;/span&gt;
              &lt;span class="s2"&gt;"start"&lt;/span&gt;: 97,
              &lt;span class="s2"&gt;"end"&lt;/span&gt;: 103,
              &lt;span class="s2"&gt;"probability"&lt;/span&gt;: 0.9056,
              &lt;span class="s2"&gt;"type"&lt;/span&gt;: &lt;span class="s2"&gt;"Product"&lt;/span&gt;,
              &lt;span class="s2"&gt;"normalized_text"&lt;/span&gt;: &lt;span class="s2"&gt;"Twitter"&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;]&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;,
        &lt;span class="s2"&gt;"text"&lt;/span&gt;: &lt;span class="s2"&gt;"I'd love to know more about how you learn to use new APIs, and how I can help you to learn about Twitter API v2. https://t.co/lCaoNcXcyL"&lt;/span&gt;,
        &lt;span class="s2"&gt;"id"&lt;/span&gt;: &lt;span class="s2"&gt;"1482011997814374406"&lt;/span&gt;,
        &lt;span class="s2"&gt;"source"&lt;/span&gt;: &lt;span class="s2"&gt;"Twitter Web App"&lt;/span&gt;,
        &lt;span class="s2"&gt;"context_annotations"&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;
          &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;"domain"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
              &lt;span class="s2"&gt;"id"&lt;/span&gt;: &lt;span class="s2"&gt;"46"&lt;/span&gt;,
              &lt;span class="s2"&gt;"name"&lt;/span&gt;: &lt;span class="s2"&gt;"Brand Category"&lt;/span&gt;,
              &lt;span class="s2"&gt;"description"&lt;/span&gt;: &lt;span class="s2"&gt;"Categories within Brand Verticals that narrow down the scope of Brands"&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;,
            &lt;span class="s2"&gt;"entity"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
              &lt;span class="s2"&gt;"id"&lt;/span&gt;: &lt;span class="s2"&gt;"781974596752842752"&lt;/span&gt;,
              &lt;span class="s2"&gt;"name"&lt;/span&gt;: &lt;span class="s2"&gt;"Services"&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;}&lt;/span&gt;,
          &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;"domain"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
              &lt;span class="s2"&gt;"id"&lt;/span&gt;: &lt;span class="s2"&gt;"47"&lt;/span&gt;,
              &lt;span class="s2"&gt;"name"&lt;/span&gt;: &lt;span class="s2"&gt;"Brand"&lt;/span&gt;,
              &lt;span class="s2"&gt;"description"&lt;/span&gt;: &lt;span class="s2"&gt;"Brands and Companies"&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;,
            &lt;span class="s2"&gt;"entity"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
              &lt;span class="s2"&gt;"id"&lt;/span&gt;: &lt;span class="s2"&gt;"10045225402"&lt;/span&gt;,
              &lt;span class="s2"&gt;"name"&lt;/span&gt;: &lt;span class="s2"&gt;"Twitter"&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;]&lt;/span&gt;,
        &lt;span class="s2"&gt;"created_at"&lt;/span&gt;: &lt;span class="s2"&gt;"2022-01-14T15:29:29.000Z"&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  🤯
&lt;/h1&gt;

&lt;p&gt;OK, that's a lot more information! Let's break it down.&lt;/p&gt;

&lt;p&gt;Here, I did the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;added the &lt;code&gt;user.field&lt;/code&gt; to request &lt;code&gt;pinned_tweet_id&lt;/code&gt;, which returned &lt;code&gt;"pinned_tweet_id": "1482011997814374406"&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;also, I asked for this to be &lt;em&gt;expanded&lt;/em&gt; in the response (&lt;code&gt;expansions=pinned_tweet_id&lt;/code&gt;). That gets expanded inside of the &lt;code&gt;includes&lt;/code&gt; array in the response.&lt;/li&gt;
&lt;li&gt;by default, the API only returns the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;text&lt;/code&gt; fields for a Tweet object, so I also specified that I wanted more information. I asked for &lt;code&gt;tweet.fields&lt;/code&gt; and specified &lt;code&gt;created_at&lt;/code&gt;, &lt;code&gt;public_metrics&lt;/code&gt;, &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;context_annotations&lt;/code&gt;, and &lt;code&gt;entities&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;created_at&lt;/code&gt;: creation time of the Tweet, the UTC time when I posted it.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;public_metrics&lt;/code&gt;: similar to metrics on the User object, we get data about the numbers of retweets, replies, likes and quotes of this Tweet.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;source&lt;/code&gt;: the name of the App that was used to post the Tweet (the Twitter website in this case)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;context_annotations&lt;/code&gt;: OK, this is &lt;em&gt;super cool&lt;/em&gt;. We get back an array of information (domain/entity pairs) that cover what Twitter has detected this Tweet to be about. In this case I was posting about the Twitter API, so it pulled out that I'm talking about a brand and company (Twitter) in the Tweet. There are also domains and entities for &lt;a href="https://developer.twitter.com/en/docs/twitter-api/annotations/overview"&gt;things like movies, sports, products, award shows, and so on&lt;/a&gt;. You can even search for Tweets by entity value using the v2 API - very powerful.
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;entities&lt;/code&gt;: this is also an improvement / additional set of data over v1.1. The entities identified in my original Tweet are broken out and expanded. In this case, there was a shortened URL to a &lt;a href="https://dev.to/andypiper/what-resources-help-you-to-learn-a-new-api-2cc9"&gt;blog post here on DEV&lt;/a&gt;. This is expanded to show the full URL, and what is displayed in the Tweet, as well as the URL to the image that is displayed in the website &lt;a href="https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/summary-card-with-large-image"&gt;summary large image card&lt;/a&gt; (and the dimensions of that image), and the description from that card.
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read more about the &lt;a href="https://blog.twitter.com/developer/en_us/topics/tips/2020/understanding-the-new-tweet-payload"&gt;new Twitter data formats and Tweet payloads&lt;/a&gt; on the Developer Blog. Talk to us via the &lt;a href="https://twittercommunity.com"&gt;Twitter Developer Community forums&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Share what you learn about Twitter API v2 here on DEV! Use the &lt;a href="https://dev.to/t/twitter"&gt;&lt;code&gt;twitter&lt;/code&gt; tag&lt;/a&gt;. It will help others to learn, too.&lt;/p&gt;

&lt;p&gt;Finally, if you found this interesting or helpful, I'd love to hear from you in the comments, or &lt;a href="https://twitter.com/andypiper"&gt;on Twitter&lt;/a&gt;. Happy coding! 💻&lt;/p&gt;

</description>
      <category>twitter</category>
      <category>api</category>
      <category>json</category>
      <category>howto</category>
    </item>
    <item>
      <title>MeiliSearch: Next generation search API</title>
      <author>Emma Donery</author>
      <pubDate>Thu, 20 Jan 2022 14:49:51 +0000</pubDate>
      <link>https://dev.to/emma_donery/meilisearch-next-generation-search-api-5g56</link>
      <guid>https://dev.to/emma_donery/meilisearch-next-generation-search-api-5g56</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mekYcjRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9lo10cdv23exdhodgv9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mekYcjRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9lo10cdv23exdhodgv9.png" alt="Image description" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For a long time, medium-sized datasets and smaller applications have gone through the nightmare of using insufficient search engines, which result in hidden costs in terms of user experience and retention due to poor search fulfillment.There are numerous search engines available on the internet, both open-source and commercial. Choosing the ideal search solution for your project is crucial, but it's also complicated. In this article, i am going to discuss why Meilisearch is the suitable choice among other search engines.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-meilisearch"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is MeiliSearch?&lt;/strong&gt;🤔
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;MeiliSearch&lt;/strong&gt; is a powerful, fast, open-source, easy to use and deploy search engine. It is a REST-based search API. It intends to be a ready-to-use solution for everyone who wishes to give a speedy and relevant search experience to their end-users.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Created by Meili SAS company based in paris in 2018&lt;/li&gt;
&lt;li&gt;It is an open source search engine&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It promises:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Blazingly fast and relevant search experience for the end user&lt;/li&gt;
&lt;li&gt;Is scalable, mantainable, customizable and that is easy to get it setup for developers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lgqp11Bm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohn7tqylqwvkxa8rwflr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lgqp11Bm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohn7tqylqwvkxa8rwflr.png" alt="Image description" width="318" height="159"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-meilisearch-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why MeiliSearch ?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;It is a free, open-source solution that can be used by anybody and is tailored to meet a variety of needs. It requires very little setting upon installation, but it is highly customizable. With features like typo correction, filters, custom ranks, and more, it gives an immediate search experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-meilisearch"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Features of MeiliSearch&lt;/strong&gt;💡
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Search as you type&lt;/em&gt;&lt;/strong&gt; - Also known as "quick search." While you're still typing in your query, you'll get results. When you type more text into the search box, the displayed results alter in real time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Ultra relevant&lt;/em&gt;&lt;/strong&gt; - MeiliSearch's default relevancy rules are designed to give a simple search experience with minimal setup. They can be tinkered with to get the best results for your dataset.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Typo tolerant&lt;/em&gt;&lt;/strong&gt; - MeiliSearch will always find the results you're looking for, rather than letting typos ruin your search.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Synonyms&lt;/em&gt;&lt;/strong&gt; - Synonyms allow you to make your search experience more personalized and intuitive.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Highlighting&lt;/em&gt;&lt;/strong&gt; - Highlight query phrases to make matches stand out. It is not necessary for users to read the complete paragraph in order to find a match.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Filters&lt;/em&gt;&lt;/strong&gt; - MeiliSearch allows you to apply filters to your search results to reduce them down based on user-defined criteria.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Faceting&lt;/em&gt;&lt;/strong&gt; - It aids in the classification of search results and the creation of user-friendly navigation interfaces.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Sorting&lt;/em&gt;&lt;/strong&gt; - By sorting search results at query time, users can pick which sorts of results they want to see first.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Placeholder search&lt;/em&gt;&lt;/strong&gt; - If you search without any query words, MeiliSearch will return all of the documents in that index, organized by its custom ranking rules.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Phrase search&lt;/em&gt;&lt;/strong&gt; - MeiliSearch will only return documents that contain your search phrases in the order you specify if you use double quotes (") around them. As a result, users will be able to conduct more precise searches.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;API key management&lt;/em&gt;&lt;/strong&gt; - The usage of API keys in MeiliSearch allows you to secure your instances. You may control which users have access to specific indexes, routes, and endpoints using API keys.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Comprehensive language support&lt;/em&gt;&lt;/strong&gt; - MeiliSearch is a multilingual search engine! Every language spoken in the global community will be supported.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#modules-architecture"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Module's Architecture&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Divided into two main parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Service&lt;/strong&gt;, which servers as a wrapper for MeiliSearch PHP library. It's purpose is making API calls to the MeiliSearch server.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Search API backend plugin&lt;/strong&gt; extends the functionality of the search API module and provides a backend on which you can attach indexes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#demo-of-searchapi-meilisearch"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Demo of SearchAPI MeiliSearch&lt;/strong&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Installation&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;There are many ways to &lt;a href="https://docs.meilisearch.com/learn/getting_started/installation.html#download-and-launch"&gt;install and run meilisearch&lt;/a&gt;. Be sure to check them out. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;NB:&lt;/em&gt;&lt;/strong&gt; you can also download MeiliSearch from Homebrew or APT or cURL or others. The link on how to install using all these ways is attached.&lt;/p&gt;

&lt;p&gt;In this article, i will install using the pip3 commandline:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip3 &lt;span class="nb"&gt;install &lt;/span&gt;meilisearch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#getting-started-meilisearch-python"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Getting Started : MeiliSearch Python&lt;/strong&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#add-documents"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Add Documents&lt;/strong&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;meilisearch&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;meilisearch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'http://127.0.0.1:7700'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'masterKey'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# An index is where the documents are stored.
&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'books'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;documents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'book_id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Pride and Prejudice'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'book_id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;456&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Le Petit Prince'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'book_id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Alice In Wonderland'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'book_id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1344&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'The Hobbit'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'book_id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Harry Potter and the Half-Blood Prince'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'book_id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'The Hitchhiker&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s"&gt;s Guide to the Galaxy'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# If the index 'books' does not exist, MeiliSearch creates it when you first add the documents.
&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_documents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; { "updateId": 0 }
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#basic-search"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Basic Search&lt;/strong&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# MeiliSearch is typo-tolerant:
&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'harry pottre'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"hits"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[{&lt;/span&gt;
    &lt;span class="s2"&gt;"book_id"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 4,
    &lt;span class="s2"&gt;"title"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"Harry Potter and the Half-Blood Prince"&lt;/span&gt;
  &lt;span class="o"&gt;}]&lt;/span&gt;,
  &lt;span class="s2"&gt;"offset"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 0,
  &lt;span class="s2"&gt;"limit"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 20,
  &lt;span class="s2"&gt;"processingTimeMs"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 1,
  &lt;span class="s2"&gt;"query"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"harry pottre"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#custom-search"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Custom Search&lt;/strong&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="s"&gt;'prince'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'attributesToHighlight'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="s"&gt;'filters'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'book_id &amp;gt; 10'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"hits"&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;"book_id"&lt;/span&gt;: 456,
            &lt;span class="s2"&gt;"title"&lt;/span&gt;: &lt;span class="s2"&gt;"Le Petit Prince"&lt;/span&gt;,
            &lt;span class="s2"&gt;"_formatted"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="s2"&gt;"book_id"&lt;/span&gt;: 456,
                &lt;span class="s2"&gt;"title"&lt;/span&gt;: &lt;span class="s2"&gt;"Le Petit &amp;lt;em&amp;gt;Prince&amp;lt;/em&amp;gt;"&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;]&lt;/span&gt;,
    &lt;span class="s2"&gt;"offset"&lt;/span&gt;: 0,
    &lt;span class="s2"&gt;"limit"&lt;/span&gt;: 20,
    &lt;span class="s2"&gt;"processingTimeMs"&lt;/span&gt;: 10,
    &lt;span class="s2"&gt;"query"&lt;/span&gt;: &lt;span class="s2"&gt;"prince"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#module-compatibility"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Module compatibility&lt;/strong&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;meilisearch - v0.18.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#take-away"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Take away&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;MeiliSearch comes with a lot of customizing options. These customizing choices, unlike those offered by other search engines, are only that: optional. Try out MeiliSearch now. Thank me later.&lt;/p&gt;

&lt;p&gt;Feel free to connect with me on &lt;a href="https://twitter.com/Emma_Donery"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/in/emma-donery-0831a7188/"&gt;LinkedIn&lt;/a&gt;. Please feel free to leave a feedback on the comment session.&lt;/p&gt;

</description>
      <category>python</category>
      <category>showdev</category>
      <category>tutorial</category>
      <category>productivity</category>
    </item>
    <item>
      <title>7 Out of Office Places to Spark Your Creativity</title>
      <author>Rachel Eleza</author>
      <pubDate>Thu, 20 Jan 2022 14:33:46 +0000</pubDate>
      <link>https://dev.to/elezarachel/7-out-of-office-places-to-spark-your-creativity-2d02</link>
      <guid>https://dev.to/elezarachel/7-out-of-office-places-to-spark-your-creativity-2d02</guid>
      <description>&lt;p&gt;Creative ideas aren’t always easy to come up with, but some days are harder than others. When those days come, sitting in your office and staring at the walls rarely helps. In fact, working from a static environment might just be the reason you hit a creative wall. Sometimes all you need is a change of scenery to get your creative gears rolling. A new location allows you to interact with new people and see different things that can easily bring fresh ideas and new perspectives. If all your creative juices have drained, here are 7 suggestions of places that you can visit to jumpstart your creative part of the brain.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Bookstore/library
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Libraries are a hub for information of different kinds that are bound to give you tons of fresh ideas. You can read a book on a topic that you are currently working on. Even without reading, the features of a book such as the cover, texture, and the weight of different books can take you into the author’s mind. You are likely to find inspiration as you identify different clues of what to find inside the book. Besides this, most libraries have quiet spaces where you can just plug in your computer and enjoy the silence. This could be a plus for you if you are one of those individuals who find inspiration when it is quiet.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;     Coworking space
Coworking spaces provide a dedicated space for work away from the chaos usually found in offices. In addition, coworking spaces have all the amenities that you need for ideas to start flowing. The good thing about these modern workspaces is that they are almost everywhere you go, including in New York. If you travel to NY for business, you can be sure to find one among the &lt;a href="https://www.upsuite.com/blog/best-coworking-space-new-york-city/"&gt;reliable coworking spaces in New York&lt;/a&gt; that suit your needs.&lt;/li&gt;
&lt;li&gt;     A friend’s house
The missing piece to your big idea could just be lying in your friend’s mind. Your friends see things differently from you. A simple conversation could unlock ideas that you hadn’t thought of. The next time you hit a creativity fog, drive down to your friend’s house. Share what you have been working on and ask for his or her opinion. You might just find some inspiration in something he or she says.&lt;/li&gt;
&lt;li&gt;     The road
Taking a long drive once in a while can be refreshing to the mind. There is a lot that you can think of when it is only you, the steering wheel, some music, and the open road ahead. Driving without a defined destination can be exciting and liberating. You get the chance to think freely, which &lt;a href="https://thecommondesk.com/wfh/outdoor-activities-to-focus-your-work/"&gt;activates that creative part of the brain&lt;/a&gt;. To make the most of your time on the road, make stopovers at interesting sceneries and interact with strangers whenever you get the chance. You are likely to gain a new perspective on your creative project and birth the best ideas from the experience.&lt;/li&gt;
&lt;li&gt;     Old favorite place
We all have that place that we used to frequent quite a lot but haven’t done so in a while due to increasing life commitments. It could be a park in your old neighborhood, the beach or a cottage in the woods. Revisiting such a place can bring back the excitement that it used to back in the day. What’s more, allowing yourself to relive the memories can as well inspire some creativity in your brain.&lt;/li&gt;
&lt;li&gt;     Hiking trail
Being around nature is &lt;a href="https://www.takingcharge.csh.umn.edu/how-does-nature-impact-our-wellbeing"&gt;beneficial to the brain&lt;/a&gt; owing to its calming effect. Moreover, when the brain is calm, the creative part of it becomes active. In addition, nature has a way of making us appreciate the surroundings. It is just fascinating to gain the perspective of a bigger world than you can merely comprehend. In this state of fascination, fresh ideas and new perspectives hit the mind.
&lt;/li&gt;
&lt;li&gt;     Art museum
Art museums are home to creative pieces made by great minds in the creative industry drawn from different origins and eras. By far, they are the best place for learning. There is a lot that you can learn from a single piece of art. The style, color, and more can speak volumes on what was on the artist’s mind, which broadens your thinking.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Conclusion&lt;br&gt;
Inspiration can hit anywhere and at any time. On the days that it is hard to come, getting out of the office can do the trick. The next time you feel like your creative well is dry, look for a place that can inspire you and get ideas flowing. If you have no idea where to go, one of the above seven spots can be a great start.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>news</category>
      <category>motivation</category>
      <category>performance</category>
    </item>
    <item>
      <title>[PR-BR] Testes de unidade com MockK e AssertJ</title>
      <author>João Victor Martins</author>
      <pubDate>Thu, 20 Jan 2022 14:15:58 +0000</pubDate>
      <link>https://dev.to/j_a_o_v_c_t_r/pr-br-testes-de-unidade-com-mockk-e-assertj-cko</link>
      <guid>https://dev.to/j_a_o_v_c_t_r/pr-br-testes-de-unidade-com-mockk-e-assertj-cko</guid>
      <description>&lt;p&gt;Sempre que estamos falando sobre boas práticas de desenvolvimento de software, um nome sempre aparece: testes de unidade. De acordo com Marco Tulio Valente (2020), testes de unidade são testes automatizados de pequenas unidades de código, normalmente classes, as quais são testadas de forma isolada do restante do sistema. Um teste de unidade é um programa que chama métodos de uma classe e verifica se eles retornam os resultados esperados. Esses testes podem ser feitos na maioria das linguagens de programação e cada uma delas possui bibliotecas e recursos para facilitar o desenvolvimento dos mesmos. A ideia do post é mostrar como fazer testes de unidade em kotlin usando mockK e AssertJ. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#mockk"&gt;
  &lt;/a&gt;
  MockK
&lt;/h1&gt;

&lt;p&gt;Mockk é uma biblioteca de mocking para kotlin que traz uma série de recursos como &lt;em&gt;Spy, Relaxed mock, Partial mocking, Object mocks, Class mock&lt;/em&gt; entre outros. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#assertj"&gt;
  &lt;/a&gt;
  AssertJ
&lt;/h1&gt;

&lt;p&gt;O AssertJ fornece um rico conjunto de asserções, mensagens de erro realmente úteis, melhora a legibilidade do código de teste e foi projetado para ser super fácil de usar em sua IDE favorita.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#depend%C3%AAncias"&gt;
  &lt;/a&gt;
  Dependências
&lt;/h1&gt;

&lt;p&gt;Para criar testes de unidade com as bibliotecas informadas, é necessário adicionar as dependências no projeto. No caso do maven basta colocar o trecho a seguir no &lt;code&gt;pom.xml&lt;/code&gt; &lt;strong&gt;(verificar versões)&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;        &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.mockk&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mockk&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.12.1&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class="nt"&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.assertj&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;assertj-core&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.21.0&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class="nt"&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#m%C3%A3os-na-massa"&gt;
  &lt;/a&gt;
  Mãos na massa
&lt;/h1&gt;

&lt;p&gt;Suponha que é necessário testar o comportamento de um método que lista produtos. O método possui dois fluxos. Quando é informado o nome do produto a ser listado, deve-se retornar apenas o produto especificado. Quando o nome do produto não é informado, deve-se retornar todos os produtos.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Resto do código omitido&lt;/span&gt;

&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;listar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nomeProduto&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;?):&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Produto&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;nomeProduto&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;findByProdutoNome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nomeProduto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;?:&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;O primeiro teste será para validar o comportamento do método quando é informado o nome do produto.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.mockk.every&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.mockk.mockk&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.mockk.verify&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.assertj.core.api.Assertions.*&lt;/span&gt;
&lt;span class="c1"&gt;// Outros imports foram omitidos&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProdutoServiceTest&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ProdutoRepository&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;mockk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;produtoService&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ProdutoService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="nd"&gt;@Test&lt;/span&gt;
        &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;`deve&lt;/span&gt; &lt;span class="n"&gt;listar&lt;/span&gt; &lt;span class="n"&gt;produto&lt;/span&gt; &lt;span class="n"&gt;por&lt;/span&gt; &lt;span class="nf"&gt;nome`&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nf"&gt;every&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;findByProdutoNome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;any&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;returns&lt;/span&gt; &lt;span class="nf"&gt;listOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Produto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Geladeira"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

                &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;produtoService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;listar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;any&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

                &lt;span class="nf"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exactly&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;produtoRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nf"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exactly&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;produtoRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;findByProdutoNome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;any&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

                &lt;span class="nf"&gt;assertThat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resultado&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;isNotNull&lt;/span&gt;
                &lt;span class="nf"&gt;assertThat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resultado&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;hasSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Vamos entender alguns recursos apresentados. Como a ideia do teste de unidade é testar apenas o comportamento do método que contém a regra de negócio, toda a parte de repositório deverá ser mockada. Para mockar objetos com o mockK pode-se utilizar a inline function &lt;code&gt;mockk()&lt;/code&gt;. Há duas formas de utilizá-la, da forma que foi declarada acima ou com &lt;code&gt;mockk&amp;lt;ProdutoRepository&amp;gt;()&lt;/code&gt;. Com o repositório mockado, é necessário definir o seu comportamento. Para isto é criado o bloco &lt;code&gt;every&lt;/code&gt; que descreve qual resposta deve ser dada quando um método do repositório for chamado. No caso acima, sempre que o método &lt;code&gt;findByProdutoNome&lt;/code&gt; for chamado, será retornado uma lista de produtos que possui apenas um produto. O &lt;code&gt;verify&lt;/code&gt; será o bloco responsável por verificar se o mock foi invocado como esperado. Como o método possui dois fluxos, temos que garantir que quando for informado o nome do produto, o método do repositório &lt;code&gt;findAll()&lt;/code&gt; não seja chamado e sim o &lt;code&gt;findByProdutoNome()&lt;/code&gt;. Qualquer comportamento diferente deste deverá fazer o teste falhar. Tudo que foi falado até aqui são recursos do mockk e já seria suficiente para fazer o teste ser executado com sucesso. Porém para garantir que o resultado retornado está correto, podemos fazer asserções e é neste momento que o AssertJ vira protagonista. Para escrever uma asserção, você sempre precisa começar passando seu objeto para o método &lt;code&gt;assertThat()&lt;/code&gt; e então seguir com as asserções reais. No caso acima, estamos afirmando que o resultado não é nulo e a lista possui um elemento. Qualquer retorno diferente disso, significaria que o método &lt;code&gt;listar&lt;/code&gt; de &lt;code&gt;ProdutoService&lt;/code&gt; não está de acordo com o comportamento esperado, e mais uma vez o teste deverá falhar. Agora que entendemos todos os recursos utilizados no teste, podemos testar o outro fluxo, quando não é informado o nome do produto.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.mockk.every&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.mockk.mockk&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.mockk.verify&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.assertj.core.api.Assertions.*&lt;/span&gt;
&lt;span class="c1"&gt;// Outros imports foram omitidos&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProdutoServiceTest&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ProdutoRepository&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;mockk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;produtoService&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ProdutoService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="nd"&gt;@Test&lt;/span&gt;
        &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;`deve&lt;/span&gt; &lt;span class="n"&gt;listar&lt;/span&gt; &lt;span class="n"&gt;todos&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt; &lt;span class="nf"&gt;produtos`&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nf"&gt;every&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;returns&lt;/span&gt; &lt;span class="nf"&gt;listOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Produto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Geladeira"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nc"&gt;Produto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Televisao"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

                &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;produtoService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;listar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

                &lt;span class="nf"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exactly&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;produtoRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nf"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exactly&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;produtoRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;findByProdutoNome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;any&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

                &lt;span class="nf"&gt;assertThat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resultado&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;isNotNull&lt;/span&gt;
                &lt;span class="nf"&gt;assertThat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resultado&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;hasSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclus%C3%A3o"&gt;
  &lt;/a&gt;
  Conclusão
&lt;/h1&gt;

&lt;p&gt;Podemos ver que ambas as bibliotecas nos fornecem recursos poderosos para criar testes de unidades simples, elegantes e eficientes. Existem muitos outros recursos a serem explorados, o que não caberia em apenas um post. Para quem tiver interesse em continuar os estudos, abaixo, em referências, deixei alguns links que vão auxiliar. Espero que tenham gostado da leitura e qualquer dúvida, crítica ou sugestão, não deixem de comentar. Até a próxima!! &lt;/p&gt;

&lt;p&gt;Referências&lt;br&gt;
&lt;a href="https://mockk.io/"&gt;https://mockk.io/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://joel-costigliola.github.io/assertj/"&gt;https://joel-costigliola.github.io/assertj/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.baeldung.com/kotlin/mockk"&gt;https://www.baeldung.com/kotlin/mockk&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.baeldung.com/introduction-to-assertj"&gt;https://www.baeldung.com/introduction-to-assertj&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bibliografia&lt;br&gt;
Marco Tulio Valente. Engenharia de Software Moderna: Princípios e Práticas para Desenvolvimento de Software com Produtividade, 2020.&lt;/p&gt;

</description>
      <category>kotlin</category>
      <category>test</category>
      <category>ptbr</category>
    </item>
    <item>
      <title>Best Way to Get Last Item in an Array</title>
      <author>SnowBit</author>
      <pubDate>Thu, 20 Jan 2022 13:42:13 +0000</pubDate>
      <link>https://dev.to/codewithsnowbit/best-way-to-get-last-item-in-an-array-5a30</link>
      <guid>https://dev.to/codewithsnowbit/best-way-to-get-last-item-in-an-array-5a30</guid>
      <description>&lt;h3&gt;
  &lt;a href="#hello-folks"&gt;
  &lt;/a&gt;
  Hello Folks 👋
&lt;/h3&gt;

&lt;p&gt;What's up, this is &lt;strong&gt;SnowBit&lt;/strong&gt; here. I am a young passionate and self-taught developer and have an intention to become a successful developer.&lt;/p&gt;

&lt;p&gt;Today, I am here with a basic topic mostly for beginners and revisers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#avoid-this"&gt;
  &lt;/a&gt;
  Avoid this
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;PY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CSS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lastItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't do this for getting the last item of an array. Let me explain, this is a small array and contains only 3 items that are easily countable but, what if there are hundred's of items in an array then this method will make you mad 🤯&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-this"&gt;
  &lt;/a&gt;
  Do this
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;PY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CSS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lastItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, &lt;code&gt;arr.length&lt;/code&gt; becomes dynamic, it increases as you increase items in &lt;code&gt;arr&lt;/code&gt; no matter how many you add and that will not make you mad 😜&lt;/p&gt;




&lt;p&gt;Thank you for reading, have a nice day!&lt;br&gt;
&lt;strong&gt;Your appreciation is my motivation 😊&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Follow me on Twitter - &lt;a href="https://twitter.com/codewithsnowbit"&gt;@codewithsnowbit&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Subscribe me on YouTube - &lt;a href="https://www.youtube.com/channel/UCNTKqF1vhFYX_v0ERnUa1RQ?view_as=subscriber&amp;amp;sub_confirmation=1"&gt;Code With SnowBit&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Explanation Of Javascript Fallback (ง'̀-'́)ง</title>
      <author>Sanskar Sahu</author>
      <pubDate>Thu, 20 Jan 2022 13:07:52 +0000</pubDate>
      <link>https://dev.to/dsmark/explanation-of-javascript-fallback-ng-ng-37f5</link>
      <guid>https://dev.to/dsmark/explanation-of-javascript-fallback-ng-ng-37f5</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
The worst accessibility sin you &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;can make is to make your navigation dependent on Javascript.&lt;/p&gt;

&lt;p&gt;The problem is, that a lot of elements considered to be good usability actually need javascript to function properly.&lt;/p&gt;

&lt;p&gt;Most of the time, this is due to the fact that HTML elements are being used for something which is not their purpose, like a button acting as a link.&lt;/p&gt;

&lt;p&gt;Now, to make these things work although there is no Javascript available we have two options&lt;/p&gt;

&lt;p&gt;Use a backend script to deal with it&lt;br&gt;
Use Javascript sorcery and fallback options to make the navigation element work in any case.&lt;br&gt;
If possible, use the first option, it is much safer and does not clutter the code unneccessarily.&lt;/p&gt;

&lt;p&gt;However if th&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
ere is no chance to change the backend code, use noscript to replace the elements with their accessible equivalents, and write the elements that cause trouble via javascript.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example: Navigation button&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="button" 
onclick="self.location='http://www.netdecisions.com'" 
value="Homepage" /&amp;gt;
Backend solution(PHP):
&amp;lt;input type="submit" name="home" 
onclick="self.location='http://www.netdecisions.com;return false'" 
value="Homepage" /&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the PHP would be&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?PHP if($_GET['home']=='homepage'){
echo header('http://www.netdecisions.com')}?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The return false prevents javascript browsers to send the data back to the server, non-javascript browsers go back to the server, call the PHP script (of course it needs to be the form action) and set the header to load the other page.&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Beware of excess of "best practices"</title>
      <author>Renan Moura</author>
      <pubDate>Thu, 20 Jan 2022 12:58:14 +0000</pubDate>
      <link>https://dev.to/renanmouraf/beware-of-excess-of-best-practices-5bed</link>
      <guid>https://dev.to/renanmouraf/beware-of-excess-of-best-practices-5bed</guid>
      <description>&lt;p&gt;Unlike other disciplines that are more rigid and regulated like Civil Engineering, Software Engineering doesn't have a set of rules to follow by law enforcement.&lt;/p&gt;

&lt;p&gt;You won't go to jail if you don't do TDD (Test-Driven Design), or even write tests for your code.&lt;/p&gt;

&lt;p&gt;Your system can work just fine if you don't follow any agile method.&lt;/p&gt;

&lt;p&gt;You could deploy your next app in a bare-metal Linux machine instead of setting up Kubernetes on a cloud provider to auto-scale your pods, and no one will complain about performance and such.&lt;/p&gt;

&lt;p&gt;We have all read Clean Code, Clean Architecture, and some other "bibles" of the software development world which tell us what are the "best practices".&lt;/p&gt;

&lt;p&gt;We have all spent hours learning about Scrum or some similar methodology to manage a software project as opposed to old-fashioned cascade-like project management because that's what works "best".&lt;/p&gt;

&lt;p&gt;We do tons of meetings, in Scrum alone we have: sprint planning, daily scrum, sprint review, and sprint retrospective.&lt;/p&gt;

&lt;p&gt;There are days when I wonder if I attend meetings for a living instead of developing software.&lt;/p&gt;

&lt;p&gt;So, what is all this rant about?&lt;/p&gt;

&lt;p&gt;It is about not following blindly the so-called "best practices".&lt;/p&gt;

&lt;p&gt;I do X because Google does, I use Y because Facebook uses it.&lt;/p&gt;

&lt;p&gt;This is a silly reason to do or use anything.&lt;/p&gt;

&lt;p&gt;If you are not working with lots of people, in a huge project, with thousands of simultaneous users, following all the "best practices" can be a drawback instead of an advantage.&lt;/p&gt;

&lt;p&gt;If you are working alone, in a small app with a handful of users, it is ok to commit directly into the main branch in your GitHub repo.&lt;/p&gt;

&lt;p&gt;If your project is not database intensive, or only has to deal with very little data, you can use an embedded H2 database stored directly in your file system and it will work more than fine.&lt;/p&gt;

&lt;p&gt;There are projects and teams where it makes sense to follow every single piece of advanced architecture and people management processes there are, but that's totally not the case for your startup of three people.&lt;/p&gt;

&lt;p&gt;It is easy to be misled by reading about the latest tech and thinking "everybody is using this", when in fact they are not.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://renanmf.com/fomo-fear-of-missing-out-as-a-developer/"&gt;FOMO (Fear Of Missing Out) as a Developer&lt;/a&gt; is real and you should be aware of this.&lt;/p&gt;

&lt;p&gt;Choose the right tech for the right context in a rational way.&lt;/p&gt;

&lt;p&gt;Choose the right project methodology for the right context in a rational way.&lt;/p&gt;

&lt;p&gt;You don't have to ditch Scrum in its entirety, you can adapt it and do only 2 of the meetings described instead of all of them.&lt;/p&gt;

&lt;p&gt;You can spawn a cheap Linux VM and deploy your app by hand instead of spending hours setting up CI/CD for something you can do manually in 2 minutes.&lt;/p&gt;

&lt;p&gt;If your app screen is a simple feature with one text field and a button (like Google's home page), React/Angular/Vue is an overkill.&lt;/p&gt;

&lt;p&gt;Learn all of those things, read the books, but use your best judgment to adapt the "best practices" to take advantage of what makes sense to your project and team, and not just because someone else said you should use it.&lt;/p&gt;

&lt;p&gt;You also can &lt;a href="https://renanmf.com/newsletter/"&gt;subscribe to my newsletter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>python</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Store Secrets in Vault with Symfony</title>
      <author>Jérôme TAMARELLE</author>
      <pubDate>Thu, 20 Jan 2022 12:56:43 +0000</pubDate>
      <link>https://dev.to/gromnan/store-secrets-in-vault-with-symfony-51ai</link>
      <guid>https://dev.to/gromnan/store-secrets-in-vault-with-symfony-51ai</guid>
      <description>&lt;p&gt;TL;DR: Integrating Vault and Symfony does not require any PHP code. Using &lt;code&gt;vault-agent&lt;/code&gt; secrets variables can be dumped into &lt;code&gt;.env&lt;/code&gt; file. Dynamic secrets can even be used as feature flags.&lt;/p&gt;




&lt;p&gt;Prisma Media's websites and applications are mostly developed using Symfony framework. Many of them require secrets values: API keys, database credentials, private certificats… they needs to be treated carefully.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-we-choose-vault-to-store-secrets"&gt;
  &lt;/a&gt;
  Why we choose Vault to store secrets
&lt;/h2&gt;

&lt;p&gt;If you are there, you may know that storing secrets in your Git repository is a terrible practice that could lead to severe security issues.&lt;/p&gt;

&lt;p&gt;Symfony introduced a &lt;a href="https://symfony.com/doc/current/configuration/secrets.html"&gt;"Vault" mecanism&lt;/a&gt; to allow storing encrypted secrets in repositories and artifacts. This is a simple solution for basic needs. That has the advantage of being independent from any external system (simplicity, scalability).&lt;/p&gt;

&lt;p&gt;We preferred HashiCorp Vault, a server solution that we deployed on our infrastructure. It is centralized, auditable and can handle dynamic secrets. This open-source product is not tied to a cloud provider. Easy to &lt;a href="https://learn.hashicorp.com/tutorials/vault/getting-started-dev-server"&gt;run locally for dev&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vault works as a key-value store were secrets variables are pushed and read using a REST API.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lK-NI1Z---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0akevfsc2dq2qstbrx6v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lK-NI1Z---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0akevfsc2dq2qstbrx6v.png" alt="Vault UI screenshot, editing secrets" width="880" height="415"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-need-for-frequent-reload-of-secrets"&gt;
  &lt;/a&gt;
  The need for frequent reload of secrets
&lt;/h2&gt;

&lt;p&gt;Even if we generate the most secure password for your database, it will leak somewhere: logs, APM, error pages... To be safe, credentials needs to change, change all the time.&lt;/p&gt;

&lt;p&gt;To get short-living secrets, Vault has a concept of &lt;a href="https://learn.hashicorp.com/tutorials/vault/getting-started-dynamic-secrets"&gt;Dynamic Secrets&lt;/a&gt;. Unlike key/value secrets where you had to put data into the store yourself, dynamic secrets are generated when they are accessed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UPwXRefr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xj23rgejo67sj279p39o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UPwXRefr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xj23rgejo67sj279p39o.png" alt="Dynamic Secrets in Vault" width="726" height="289"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not only we have to load the secrets from Vault, but also they have to be reloaded every time they change.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dynamic-config-of-symfony-with-raw-env-endraw-"&gt;
  &lt;/a&gt;
  Dynamic config of Symfony with &lt;code&gt;.env&lt;/code&gt;
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--juFWJSDm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1126770148092698625/nI58pL5O_normal.png" alt="Fabien Potencier profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabien Potencier
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @fabpot
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      My yearly reminder that you should NOT use env vars to configure your &lt;a href="https://twitter.com/hashtag/Symfony"&gt;#Symfony&lt;/a&gt; application. Use env vars ONLY if you want to be able to change values WITHOUT redeploying your application (aka flushing the cache). Parameters ARE the way to configure applications.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      08:54 AM - 29 Dec 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1343842728547901441" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1343842728547901441" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1343842728547901441" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Thank you Fabien, this is exactly what I need: changing the values without redeploying the application.&lt;/p&gt;

&lt;p&gt;Unlike the YAML/PHP files in &lt;code&gt;config/&lt;/code&gt; directory, that are read only when the container cache is built, the &lt;code&gt;.env&lt;/code&gt; file are read on every HTTP request. Updating this file while the application is running is a good way to update its configuration without impacting performance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vault-agent-can-write-secrets-into-a-file"&gt;
  &lt;/a&gt;
  Vault Agent can write secrets into a file
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.vaultproject.io/docs/agent"&gt;vault-agent&lt;/a&gt; is a small utility that can be used as a cache proxy for the Vault server; or as a schedule to write secrets into a file using a template (&lt;a href="https://www.vaultproject.io/docs/agent/template#non-renewable-leased-secrets"&gt;every 5 minutes, configurable&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Example of vault-agent configuration for an app running on AWS EC2 instance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# vault.conf

vault {
  address = "https://vault.example.com"
  retry {
    num_retries = 5
  }
}

auto_auth {
  method "aws" {
    config = {
      type = "iam"
      role = "&amp;lt;iam role&amp;gt;"
      region = "eu-west-1"
      header_value = "vault.example.com"
    }
  }
}

template {
  source = "./.env.local.ctmpl"
  destination = "./.env.local"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The template maps Vault secrets to environment variables. The &lt;a href="https://www.vaultproject.io/docs/agent/template"&gt;templating syntax&lt;/a&gt; allows some flexibility, but it looks very primitive for a developer with Twig practice.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# .env.local.ctmpl
# This will generate a regular .env file
APP_ENV=prod

{{ with secret "secret/example/app" }}
APP_SECRET={{ .Data.data.APP_SECRET }}
{{ end }}

# Real environment variables can be read
{{ $env := (env "ENVIRONMENT") }}
{{ with secret (printf "secret/example/%s/database" $env) }}
DB_HOST={{ .Data.data.DB_HOST }}
DB_NAME={{ .Data.data.DB_NAME }}
DB_USER={{ .Data.data.DB_USER }}
DB_PASSWORD={{ .Data.data.DB_PASSWORD }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, &lt;code&gt;vault agent&lt;/code&gt; can be launched with any process manager (supervisord or systemd).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Daemon &lt;span class="k"&gt;for &lt;/span&gt;prod server
&lt;span class="go"&gt;vault agent -config=vault.conf

&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Single run &lt;span class="k"&gt;for &lt;/span&gt;testing
&lt;span class="go"&gt;vault agent -config=vault.conf -exit-after-aut
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The last security recommendation is to not write secrets on disks. We can create a &lt;code&gt;tmpfs&lt;/code&gt; volume and symlink from the project root to that volume.&lt;/p&gt;

&lt;p&gt;For kubernetes, vault-agent runs in a &lt;a href="https://www.vaultproject.io/docs/platform/k8s/injector"&gt;sidecar container&lt;/a&gt; that renders Vault secrets to a shared memory volume.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-dynamic-configuration-feature-flag"&gt;
  &lt;/a&gt;
  Use dynamic configuration feature flag
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Feature_toggle"&gt;Feature flags&lt;/a&gt; are a benefit of using Vault and supporting dynamic configuration. Even if they are not secrets, flags can be stored in Vault. With fine tuned policies, product managers could manage feature flags and being rejected from other secrets.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-of-feature-flag-to-render-a-block-in-twig"&gt;
  &lt;/a&gt;
  Example of feature flag to render a block in Twig
&lt;/h3&gt;

&lt;p&gt;In this example, we create a feature flag in Vault, with is a boolean to show or hide a "sales" block on a page.&lt;/p&gt;

&lt;p&gt;Create a variable in Vault KV:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;secret/example/app/&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"FEATURE_FLAG_SALES"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Read this secret in the vault agent template&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# .env.local.ctmpl

{{ with secret "secret/example/app" }}
FEATURE_FLAG_SALES={{ .Data.data.FEATURE_FLAG_SALES }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Share the value of the variable with Twig context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# app/config/packages/twig.yaml&lt;/span&gt;
&lt;span class="na"&gt;twig&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;feature_flag_sales&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;%env(bool:FEATURE_FLAG_SALES)%"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the variable to render the block conditionally:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight twig"&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;feature_flag_sales&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;My conditional sales block&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the &lt;code&gt;vault-agent&lt;/code&gt;.&lt;br&gt;
When the variable updated, the block is shown or hidden after few minutes.&lt;/p&gt;

</description>
      <category>symfony</category>
      <category>vault</category>
      <category>secrets</category>
      <category>prismamedia</category>
    </item>
  </channel>
</rss>
