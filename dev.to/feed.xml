<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Memory Management in Javascript</title>
      <author>Dylan Oh</author>
      <pubDate>Mon, 29 Nov 2021 14:26:49 +0000</pubDate>
      <link>https://dev.to/ohdylan/memory-management-in-javascript-4aod</link>
      <guid>https://dev.to/ohdylan/memory-management-in-javascript-4aod</guid>
      <description>&lt;p&gt;Javascript is a high level language that has GC (garbage collections) being done by the modern browsers (Javascript engines). This gives Javascript developers an impression that neither they need to know what is happening behind the scene, nor doing something to improve the memory management of their Javascript app. One of the reasons that lower level languages such as C language are faster and more efficient is because we can control the GC manually, therefore they are more optimised and efficient in memory management.&lt;/p&gt;

&lt;p&gt;There are three main parts of Javascript memory management consists of:&lt;/p&gt;

&lt;p&gt;1) When we assign a value to a variable, it will automatically allocate an available memory piece to store the value and with reference linked to this variable.&lt;/p&gt;

&lt;p&gt;2) This variable is then used in the script.&lt;/p&gt;

&lt;p&gt;3) When variable is not in used anymore (or the reference was removed), the memory in heaps will automatically be freed to prevent memory leaks.&lt;/p&gt;

&lt;p&gt;Javascript is using Mark and Sweep algorithm for memory management as the points above. Basically, it will mark those memory reference that are in used by the script, and sweep the rest off.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;apple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fruits&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FoIa8Llq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3t4bwe1kuvokbcc7vmzw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FoIa8Llq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3t4bwe1kuvokbcc7vmzw.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;apple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fruits&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;apple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E3TqAgXS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yla9jp1b3eh68xf7ahqv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E3TqAgXS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yla9jp1b3eh68xf7ahqv.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There might be cases where garbage collection is not able to free up those unused memory and causes memory leaks. We as a Javascript developer, could do something to try preventing them. Three of the  most commonly seen causes of memory leaks are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) Event Listeners&lt;/strong&gt;&lt;br&gt;
Event listeners will automatically be removed when the DOM element is detached from the DOM tree and with no more reference to it in Javascript. However, older browser such as IE will not be able to handle this properly. Besides, we should also plan the usage of our event listeners carefully because they are not in used most of the time until events are triggered, and they take up memory when those DOM elements are active.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2) Global Variables&lt;/strong&gt;&lt;br&gt;
There is always a Global Object in Javascript, for example the 'window' object in browser and the 'global' object in Node.js. We should try to avoid using global variables as they will always exist when the global execution context is still in the stacks. This global execution context is created before any code is executed and therefore these global variables will always be attached and not being garbage collected. Again, planning is important. Try to use local variables defined with 'let' and 'const' (not 'var', if we declare with 'var', it will be part of the Global Object) within the blocked scope, for example in functions. The local variables in functions are automatically cleared off when the function call is popped off from the stack. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3) Things that continuously running in the background&lt;/strong&gt;&lt;br&gt;
We should also be careful when we use functions such as setInterval(). When we use a variable in the callback function, this variable will always be attached and not getting cleared off.&lt;/p&gt;

&lt;p&gt;Conclusion: Planning before executing, even the logic of assiging variables. This will help improving the performance of your app especially when it scales up.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>performance</category>
    </item>
    <item>
      <title>Legacy: alarming symptoms and problems</title>
      <author>Catherine Galkina</author>
      <pubDate>Mon, 29 Nov 2021 14:21:08 +0000</pubDate>
      <link>https://dev.to/typeable/legacy-alarming-symptoms-and-problems-5820</link>
      <guid>https://dev.to/typeable/legacy-alarming-symptoms-and-problems-5820</guid>
      <description>&lt;p&gt;Author: Victoriia Zaripova&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;The purpose of this post is to give non-IT specialists a basic insight into the hazards of obsolete computer systems and code, and the way they may harm the business.&lt;/p&gt;

&lt;p&gt;You might have heard the word &lt;strong&gt;"legacy"&lt;/strong&gt; – usually with a negative connotation – from the technical staff. This term is used to denote the methods, technologies, and computer systems or application software that are declared to be obsolete due to some reason. However, does this legacy always have negative implications for the business, is it mandatory to get rid of it and how can you understand that it really creates problems?&lt;/p&gt;

&lt;p&gt;As a rule, the developers, analysts, testers, and support staff are those who face the legacy issues most often, which is evidenced by the broad experience of our own team. For end-users, these issues usually remain under the bonnet, and for CEOs they are concealed behind report figures without showing any logic behind them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zeKURd85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zeKURd85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy1.jpg" alt="Having legacy code is like driving a fancy-looking car with dieing engine" width="880" height="715"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basically, the situation, on the whole, reminds of the permanent tuning of outside appearance and interior in a car where the engine is at its last gasp but the passengers suspect nothing. Sooner or later, this automotive marvel is bound to die somewhere between point A and point B, but until that time the car will make a positive impression, especially if the passenger compartment is extremely comfortable and the suspension – or, speaking straight out, the frontline – allows driving over potholes almost smoothly.&lt;/p&gt;

&lt;p&gt;However, there is also no point in replacing your tried and tested tractor with a trendy smart right on the spot. Everything depends on the objectives and current state of the issue&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-you-understand-that-legacy-is-a-hindrance"&gt;
  &lt;/a&gt;
  How can you understand that legacy is a hindrance?
&lt;/h2&gt;

&lt;p&gt;Here is the list of &lt;strong&gt;alarming symptoms and issues&lt;/strong&gt; you can notice even without being a professional:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lack-of-welldefined-and-clear-documentation-for-the-supported-business-processes"&gt;
  &lt;/a&gt;
  Lack of well-defined and clear documentation for the supported business processes
&lt;/h3&gt;

&lt;p&gt;Perhaps, now the documentation seems to be of no importance since each of your employees is a real pro who can explain the entire business process from A to Z at any moment and knows the information system they are using inside out. However, the real-life experience usually shows that this is far from being the case. Moreover, even the terms used by the personnel in different departments differ significantly. The most basic example is the attempt to build the business process for supply agreements approval. Lawyers treat the term “agreement” quite differently from accountants, and both departments focus on entirely different stages of the agreement approval.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qMJ12IZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qMJ12IZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy2.jpeg" alt="Well-organised BPM is important" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today, businesses are more willing to recognize the value of transparent and well-organized business processes and you’ll have little difficulty in finding a post on the advantages of this approach. Here is an example: &lt;a href="https://kissflow.com/workflow/bpm/benefits-of-business-process-management-bpm/"&gt;Benefits of BPM | 11 Massive Advantages of Business Process Management&lt;/a&gt;. Besides, this article is also notable for the studies it’s based on, in particular, the &lt;a href="https://www.horsesforsources.com/digital-workforce-to-shine_041820"&gt;study&lt;/a&gt; of 2020 stating that the outbreak of COVID made businesses invest more in the business process automation and altered their assessment of how important it is to change the obsolete processes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rigidity-in-improvements"&gt;
  &lt;/a&gt;
  Rigidity in improvements
&lt;/h3&gt;

&lt;p&gt;Due to some reasons you are not able to integrate easily and quickly with the leading services, timely scale up or flexibly modify the software and, consequently, always miss the boat of market opportunities.&lt;/p&gt;

&lt;p&gt;Just believe, this is not a chain of tragic accidents, but a disturbing symptom.&lt;/p&gt;

&lt;p&gt;This symptom is especially clearly seen in governmental institutions where rigidity is embedded in the work format, and where all changes require long-term approval. For instance, excess expenses of the US government for the IT infrastructure in 2019 (over 70 billion dollars) triggered the internal &lt;a href="https://www.gao.gov/products/gao-19-471#summary"&gt;investigation&lt;/a&gt; showing that obsolete software is the key issue.&lt;/p&gt;

&lt;p&gt;Nevertheless, commercial companies whose way of operation implies flexibility and openness to new technologies also suffer from the legacy. Airline companies, banks, insurance companies, and retailers sooner or later turn out to be unable to overcome the rigidity of obsolete software. As a result, their operation becomes unstable, they are not able to bring new products and services to market or even stably support the existing ones. For example, in August 2016 Delta Air Lines faced an unexpected failure of the booking, check-in and boarding systems which always seemed to be reliable, which resulted in an hours-long downtime and cancellation of more than 2000 flights. This and other cases are described in the post &lt;a href="https://www.ft.com/content/5bf9de84-d665-11e6-944b-e7eb37a6aa8e"&gt;"Legacy systems are problems for boardrooms not computer geeks"&lt;/a&gt;, &lt;em&gt;Financial Times, Jan. 31, 2017&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pUeL7HQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy3.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pUeL7HQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy3.jpeg" alt="Over 2000 flights have once been cancelled bacuase of obsolete software" width="880" height="608"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#low-spirits-in-the-it-team-and-loss-of-users-loyalty"&gt;
  &lt;/a&gt;
  Low spirits in the IT team and loss of users’ loyalty
&lt;/h3&gt;

&lt;p&gt;One would think that the legacy cannot affect the team morale.&lt;/p&gt;

&lt;p&gt;There is no secret, as any modification of legacy systems resembles a patch on the A-bomb – most probably it won’t go off but you wouldn’t like to touch it again if you can help it. Specialists in obsolete languages and technologies don’t come cheap – one has only to think about the &lt;a href="https://en.wikipedia.org/wiki/Year_2000_problem"&gt;Y2K problem&lt;/a&gt;. Novices, on the other hand, try to patch the old environment with something new, so with time, all this becomes a monstrous zoo of technologies where not every specialist would dare to plunge. As the result, the users complain more and more about the problems and the product development is hindered.&lt;/p&gt;

&lt;p&gt;Moreover, the personnel are more likely to leave as they’ll be demotivated and not willing to dig through the problems of obsolete monstrous code with documentation missing or passed over as verbal folklore.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6trPyMpC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6trPyMpC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy4.jpg" alt="Dealing with legacy code is discouraging for the developers" width="650" height="631"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, no one is indispensable, but you should remember that selection and adaptation of a new staff member come at a price and the more complex and intricate the project is, the more time it will take the new employee to become up to speed (while being paid for work with the old code!). Meanwhile, the rest of the team will have to solve business-critical problems.&lt;/p&gt;

&lt;p&gt;And now imagine that dramatic market changes (and they’ve always been dramatic recently) require an immediate response. It’s not necessary to imagine for yourself, you can just read what situation the businesses are facing today: &lt;a href="https://www.accenture.com/us-en/about/company/coronavirus-business-economic-impact"&gt;The coronavirus (COVID-19): business impact&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#standard-solutions"&gt;
  &lt;/a&gt;
  Standard solutions
&lt;/h2&gt;

&lt;p&gt;Thus, we’ve found out that legacy is not just a problem for the IT department but also a potential threat to the company stability and growth. Let’s consider standard solutions for this situation:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;em&gt;Ignore&lt;/em&gt; – this path can be costly if you already see the problems listed above but it can be optimal in some cases. In the long run, if the business pathway is unchangeable, it’s better to rely on the trusted comrade-in-arms with whom you went through fire and water;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Replace it with completely new software&lt;/em&gt; – sometimes this path is the only possible solution because the legacy, like a disease, can infect the environment very quickly.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Replace gradually/component-wise&lt;/em&gt; – this way is usually the revolution from below, when the IT department systematically performs refactoring of the home system, but it usually requires almost boundless tenacity and consistency;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Reengineering of business processes and the software&lt;/em&gt; – this path is perhaps the most radical, practical, and effective but it’s labour-intensive and needs the deliberate commitment of the management. &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As you can see, legacy can do harm to the business, not only to the programmers’ nerves. You can deal with the legacy in different ways, and different ways will work for specific cases.&lt;br&gt;
In our next post, we’ll describe in more detail when and what way should be selected and will also tell how technical tools can help you to work with the legacy.&lt;/p&gt;

</description>
      <category>management</category>
      <category>legacy</category>
      <category>development</category>
    </item>
    <item>
      <title>Why Not to Become a Data Engineer</title>
      <author>SeattleDataGuy</author>
      <pubDate>Mon, 29 Nov 2021 14:16:24 +0000</pubDate>
      <link>https://dev.to/seattledataguy/why-not-to-become-a-data-engineer-44ke</link>
      <guid>https://dev.to/seattledataguy/why-not-to-become-a-data-engineer-44ke</guid>
      <description>&lt;p&gt;As companies struggle to manage their massive and complex data sets, the necessity for data engineers has become more apparent.&lt;/p&gt;

&lt;p&gt;Data engineering became the fastest-growing single job in 2019 with &lt;a href="https://seattledataguy.substack.com/p/are-companies-hiring-fewer-data-scientists"&gt;50 percent year-on-year growth&lt;/a&gt;, and there's little reason to believe demand for data engineers will slow soon. As with all careers, though, there are pros and cons to data engineering. Here's what you need to know about this up-and-coming job field and some of the reasons you may or may not want to pursue it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-data-engineer"&gt;
  &lt;/a&gt;
  What Is a Data Engineer?
&lt;/h2&gt;

&lt;p&gt;Data engineers move, remodel, and manage data sets from 10s if not 100s of internal company applications so analysts and data scientists don't need to spend their time constantly pulling data sets.&lt;/p&gt;

&lt;p&gt;They may also create a core layer of data that lets different data sources connect to it to get more information or context. Data engineers spend their time developing data pipelines, managing data warehouses and maintaining all the various infrastructure components they develop along the way.&lt;/p&gt;

&lt;p&gt;These specialists are usually the first people to handle data. They process the data so it's useful for everyone, not just the systems that store it.&lt;/p&gt;

&lt;p&gt;There are obvious reasons to become a data engineer --- like a high salary and numerous opportunities due to limited competition within the job market --- but we're not focusing on those today. Instead, let's ask the question, why not to become a data engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-skills-does-a-data-engineer-need"&gt;
  &lt;/a&gt;
  What Skills Does a Data Engineer Need?
&lt;/h2&gt;

&lt;p&gt;To assist you as a new data engineer, I have created a &lt;a href="https://www.youtube.com/watch?v=LgSHaOvNodA"&gt;skill set pyramid&lt;/a&gt; that can be thought of as a hierarchy of skill set needs. This will help you focus on the skills you should learn first, allowing you to build a solid foundation as you move on to more specific skills. Just remember, the way you learn each step of the pyramid does not need to be overly rigid or stay in a strict order. You can layer each step, helping you progress as you learn. Let’s get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reasons-not-to-become-a-data-engineer"&gt;
  &lt;/a&gt;
  Reasons Not to Become a Data Engineer
&lt;/h2&gt;

&lt;p&gt;Despite being an in-demand career that promises high earnings and job security, becoming a data engineer isn't for everyone. As with most professions, it's important to consider your own skills, talents, and personality before choosing a career in data engineering. Here are some of the reasons you may not want to become a data engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#youre-letting-money-drive-your-career-choice"&gt;
  &lt;/a&gt;
  You're Letting Money Drive Your Career Choice
&lt;/h2&gt;

&lt;p&gt;While money is certainly important, it shouldn't be the driving force behind your career choice. Assuming you're planning to work in the tech field anyway, it's better to &lt;a href="https://www.youtube.com/watch?v=MjuQIdSwa3w"&gt;choose a role you will genuinely enjoy&lt;/a&gt;, even if the earnings could be a bit lower. A difference of $5,000 or even $10,000 in earnings won't drastically impact the lifestyle of a highly paid tech worker, especially once taxes are taken into account. The level of enjoyment you derive from your work, on the other hand, will affect your overall happiness and satisfaction in your professional life.&lt;/p&gt;

&lt;p&gt;The average data engineer earns &lt;a href="https://www.payscale.com/research/US/Job=Data_Engineer/Salary"&gt;$92,650 per year&lt;/a&gt;, which is significantly above the &lt;a href="https://www.jobted.com/salary"&gt;overall US average of $53,490&lt;/a&gt;. The financial benefits of becoming a data engineer, however, become much less clear when compared to other jobs in the tech field. The average software engineer, for example, can expect to make &lt;a href="https://www.payscale.com/research/US/Job=Software_Engineer/Salary"&gt;about $87,690&lt;/a&gt;. As you can see, the difference between a software engineer's salary and a data engineer's salary is fairly negligible. If software engineering would be a more fulfilling job for you, the slightly higher average salary isn't worth going into data engineering.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-dont-enjoy-the-engineering-mindset"&gt;
  &lt;/a&gt;
  You Don't Enjoy the Engineering Mindset
&lt;/h2&gt;

&lt;p&gt;Data engineering requires you to adopt and deploy an engineering mindset, which some people can find rather constrictive. Because data engineers often need to create pieces of infrastructure that other engineers can maintain in the future, they must &lt;a href="https://www.youtube.com/watch?v=qJWZbZ5NNJ8&amp;amp;t=102s"&gt;work within a strict set of rules and standards&lt;/a&gt;. These rules are extremely important but can also seem burdensome to those who prefer more creative freedom in their projects.&lt;/p&gt;

&lt;p&gt;This isn't to say, of course, that there aren't creative aspects to the engineering mindset. High-level problem solving, for instance, often requires engineers to develop creative solutions. Likewise, engineers use creative problem-solving skills to &lt;a href="https://www.engineeringpassion.com/developing-the-engineering-mindset/"&gt;continuously improve&lt;/a&gt; their projects. In order to be a successful data engineer, you'll need to be able to balance your creative impulses with the rigorous mindset of an engineering professional.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-arent-flexible-enough"&gt;
  &lt;/a&gt;
  You Aren't Flexible Enough
&lt;/h2&gt;

&lt;p&gt;One of the most interesting aspects of being a data engineer is the flexibility and lack of definition for the role. Because of its &lt;a href="https://www.youtube.com/watch?v=qJWZbZ5NNJ8&amp;amp;t=300s"&gt;highly interdisciplinary nature&lt;/a&gt;, data engineering combines elements of data analysis, programming, modeling, machine learning, and many other specific skills. Becoming a professional data engineer requires you to flexibly adapt and deploy these various skills as needed for the specific project you're working on.&lt;/p&gt;

&lt;p&gt;The downside of this interdisciplinary approach to data engineering is that it requires more flexibility than most other tech jobs. In your data engineering career, you may take on drastically different roles at different companies while maintaining the same job title. If you prefer to have a well-defined, set role, you likely won't enjoy the somewhat chaotic world of data engineering.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-dont-enjoy-continuous-learning"&gt;
  &lt;/a&gt;
  You Don't Enjoy Continuous Learning
&lt;/h2&gt;

&lt;p&gt;A final reason you may not want to become a data engineer is that you don't enjoy the process of continuous learning. Technologies are constantly shifting and evolving, requiring data engineers to update their skills on an ongoing basis. The&lt;a href="https://www.theseattledataguy.com/what-is-snowflakedb-and-why-you-should-use-it-for-your-cloud-data-warehouse/#page-content"&gt; cloud data warehouse tool Snowflake&lt;/a&gt;, for example, has seen &lt;a href="https://www.morningstar.com/articles/1020679/snowflake-shows-substantial-growth"&gt;substantial growth over the last 10 years&lt;/a&gt; as companies have embraced cloud computing. As trends like this emerge, data scientists must learn to use new tools and technologies to stay at the cutting edge.&lt;/p&gt;

&lt;p&gt;If one of your career goals is to eventually stop learning and rest on your laurels, data engineering won't be a good fit for you. Indeed, this is &lt;a href="https://www.youtube.com/watch?v=qJWZbZ5NNJ8&amp;amp;t=448s"&gt;true of almost all roles&lt;/a&gt; in the tech industry. Continuous learning is crucial for staying on top of trends and technologies, and even the most seasoned experts must pursue ongoing education to remain relevant. Failure to stay on top of new developments practically guarantees that your skills will eventually become outdated. While you might be able to work with older technologies at a handful of companies, your career options will narrow significantly when you stop updating your skills.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion-know-yourself"&gt;
  &lt;/a&gt;
  Conclusion: Know Yourself
&lt;/h2&gt;

&lt;p&gt;As you can see, knowing yourself and your preferences is essential to deciding whether a career in data engineering is right for you. In addition to knowing what you like to do in terms of specific tasks and working conditions, it's also important to consider your own personality. Data engineering is a suitable role for people who prefer to &lt;a href="https://www.youtube.com/watch?v=qJWZbZ5NNJ8&amp;amp;t=639s"&gt;work in the background&lt;/a&gt; within a company, rather than directly driving conversations with management using data insights. If you prefer that more extroverted side of data, though, you may enjoy a role as a data scientist.&lt;/p&gt;

&lt;p&gt;Overall, becoming a data engineer is a great career choice for people who love detail, following engineering guidelines, and building pipelines that allow raw data to be turned into actionable insights. As mentioned earlier, a career in data engineering also offers excellent earning potential and strong job security. With that said, the job isn't for everyone. If some of the reasons detailed above seem to describe you, it may be a good idea to give data engineering a second thought and explore other tech careers that could fit you better.&lt;/p&gt;

&lt;p&gt;If you want to read/watch more about data engineering, then check out the links below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=uEPCxBaRf6A"&gt;Data Engineer Vs Analytics Engineer Vs Analyst&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.theseattledataguy.com/why-migrate-to-the-modern-data-stack-and-where-to-start/"&gt;Why Migrate To The Modern Data Stack And Where To Start&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://youtube.com/watch?v=s40MptE20Tc&amp;amp;t=1s"&gt;5 Great Data Engineering Tools For 2021 -- My Favorite Data Engineering Tools&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=kSt9NV-qZkc&amp;amp;t=1s"&gt;4 SQL Tips For Data Scientists&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logitanalytics.com/what-are-the-benefits-cloud-data-warehousing-and-why-you-should-migrate/"&gt;What Are The Benefits Of Cloud Data Warehousing And Why You Should Migrate&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>datascience</category>
      <category>career</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Auto Rename Tag</title>
      <author>LarrocaX</author>
      <pubDate>Mon, 29 Nov 2021 14:08:15 +0000</pubDate>
      <link>https://dev.to/larrocax/auto-rename-tag-1b9e</link>
      <guid>https://dev.to/larrocax/auto-rename-tag-1b9e</guid>
      <description>&lt;p&gt;`&lt;/p&gt;

&lt;p&gt;`Auto Rename Tag is an extension created for html that changes the ending of tag automatically only when you change the start of it&lt;br&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag"&gt;AUTO RENAME TAG&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>productivity</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>JavaScript News and Updates of November 2021</title>
      <author>Pavel Lazarev</author>
      <pubDate>Mon, 29 Nov 2021 14:07:10 +0000</pubDate>
      <link>https://dev.to/plazarev/javascript-news-and-updates-of-november-2021-1li6</link>
      <guid>https://dev.to/plazarev/javascript-news-and-updates-of-november-2021-1li6</guid>
      <description>&lt;p&gt;Hello everyone! Welcome to a new edition of my monthly news digest dedicated to the latest developments in JavaScript. The last month of autumn brought several exciting releases and useful info for the web community. This time, you will learn about the latest programming trends from the State of the Octoverse 2021 survey, become familiar with a new product and updates from DHTMLX, estimate changes in Angular and TypeScript, get a foretaste of new capabilities in ASP.NET Core, and find out how JS now can be used in Excel. Besides, I also prepared a pack of articles with useful guides and tips on various JavaScript issues.&lt;/p&gt;

&lt;p&gt;Let’s roll!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-tools-and-updates"&gt;
  &lt;/a&gt;
  New Tools and Updates
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#key-takeaways-from-state-of-the-octoverse-2021"&gt;
  &lt;/a&gt;
  Key Takeaways from State of the Octoverse 2021
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e0d0T2PZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txu860f63esque24d8nn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e0d0T2PZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txu860f63esque24d8nn.jpg" alt="New survey from GitHub" width="636" height="399"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is time to explore key trends in the software development world highlighted in the latest edition of GitHub's State of the Octoverse. In 2021, this popular annual survey includes valuable insights based not only on traditional analysis of the platform’s repositories but also on responses from more than 12,000 developers. &lt;/p&gt;

&lt;p&gt;The response to a typical question on the most popular programming language remains the same during the past several years. It is JavaScript followed by Python (2nd) and Java (3-rd). Here we can also mention that TypeScript retained its position in the top 4, while PHP dropped from 3rd to 6th place compared to 2020. The survey also includes some other interesting facts. For instance, more than 16 million developers joined GitHub in 2021, increasing the total number of GitHub users to 73 million.  The productivity of the dev community is now comparable with prepandemic levels. Almost half of the interviewed developers (47%) want to have a hybrid working schedule (home +office) after the pandemic is over. Check out the &lt;a href="https://octoverse.github.com/"&gt;full report&lt;/a&gt; to get more useful information from GitHub.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-new-in-angular-13"&gt;
  &lt;/a&gt;
  What’s New in Angular 13
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kdLEZZgq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3cpdnng1nivszgdi0md.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kdLEZZgq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3cpdnng1nivszgdi0md.jpg" alt="Angular 13 release" width="639" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Angular is one of the most well-known tools in the JavaScript ecosystem. Despite its complexity, this framework still remains a preferred choice for many programmers, especially for those who work on enterprise-scale apps. The Angular development team from Google continues working on the improvement of this product to keep it competitive with other popular JS frameworks.&lt;/p&gt;

&lt;p&gt;Early this month, Angular was finally updated to version 13. This major update comes with a range of useful changes and enhancements for empowering the coding capabilities of web developers. The most notable goodies of this release are the removal of the View Engine, modernized Angular Package Format (APF), simplified API for dynamic creation of components, and support for persistent build cache. Learn more about these and other novelties introduced in v13 by visiting the &lt;a href="https://blog.angular.io/angular-v13-is-now-available-cce66f7bc296"&gt;Angular blog&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#introducing-dhtmlx-kanban-board-v10"&gt;
  &lt;/a&gt;
  Introducing DHTMLX Kanban Board v1.0
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JQy7hyDG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rhhjkqihd2afqhw3fbsy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQy7hyDG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rhhjkqihd2afqhw3fbsy.jpg" alt="DHTMLX Kanban release" width="639" height="392"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DHTMLX is well-known in the web development community for providing high-quality JavaScript libraries for various business purposes. Recently, the company has expanded the product line of JavaScript for project management with a new promising tool - &lt;a href="https://dhtmlx.com/docs/products/dhtmlxKanban/"&gt;JavaScript Kanban board&lt;/a&gt;. It is written in pure JS and CSS to cover all needs of developers in the workflow visualization. &lt;/p&gt;

&lt;p&gt;DHTMLX Kanban has an intuitive drag-and-drop interface including three main parts: toolbar, board with cards, and editor. All these elements can be easily configured and customized to meet specific project requirements. JavaScript Kanbans built with DHTMLX can be complemented with numerous useful features such as filtering &amp;amp; searching, swimlanes, setting task priority, adding attachments, tracking of time and deadlines, and much more. Numerous localization options help to adjust the Kanban interface to any location. &lt;/p&gt;

&lt;p&gt;This Kanban library is also notable for its high compatibility. It can be integrated with popular JS frameworks and any server-side technology (Go and Node.js backends are included by default). But more interestingly, developers have an opportunity to combine the Kanban component with other popular DHTMLX products, namely Gantt and Scheduler. Thus, devs get everything they need to build a multifunctional solution for project management with DHTMLX. If you are interested to learn more detailed information about DHTMLX Kanban, read the &lt;a href="https://dhtmlx.com/blog/releasing-dhtmlx-kanban-board-v-1-0/"&gt;release article&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-net-update-boosts-aspnet-core-capabilities"&gt;
  &lt;/a&gt;
  New .NET Update Boosts ASP.NET Core Capabilities
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---EkGpWH6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vlza89of0pxszymkxev7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---EkGpWH6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vlza89of0pxszymkxev7.jpg" alt="New capabilities in ASP.NET Core" width="646" height="364"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Microsoft rolled out a long-awaited major update of the .NET cross-platform development platform to version 6. This release includes multiple features and improvements for the whole .NET architecture, including ASP.NET Core. This performant web framework is a successor to ASP.NET that allows building feature-packed UIs, IoT apps, and backend services. From now on, ASP.NET Core supports many useful features such as hot reload, minimal APIs, asynchronous data streaming, null-state analysis, JS modules, and more. Moreover, single-page applications based on ASP.NET Core now have a more flexible pattern that can be utilized with other popular JS frameworks.  Find more details on new additions to ASP.NET Core in this &lt;a href="https://devblogs.microsoft.com/dotnet/announcing-asp-net-core-in-net-6/"&gt;blog post&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-is-now-available-in-excel"&gt;
  &lt;/a&gt;
  JavaScript is Now Available in Excel
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--px4UpNsS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxcgr2wcxoxyuhl580js.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--px4UpNsS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxcgr2wcxoxyuhl580js.jpg" alt="New JS API in Excel" width="655" height="401"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Excel is probably the first thing that comes to mind when talking about software solutions for working with tabular data. At some point, almost every PC user resorts to this tool and its super handy formulas. Moreover, Excel now also supports JavaScript. This month, Microsoft released a new JavaScript API that will expand the customization capabilities of developers with Excel. It will be possible to create custom data types and related functions within Excel or extend existing ones for achieving various business goals. Learn more about this novelty in this &lt;a href="https://docs.microsoft.com/en-us/office/dev/add-ins/reference/overview/excel-add-ins-reference-overview"&gt;blog post&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#meet-minor-updates-of-dhtmlx-components"&gt;
  &lt;/a&gt;
  Meet Minor Updates of DHTMLX Components
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vT-R6psg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mitqw3rdfc7rrsfdi84.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vT-R6psg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mitqw3rdfc7rrsfdi84.jpg" alt="Updates of DHTMLX Components" width="639" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to close the issue of convenient editing and formatting data in a web app, the new DHTMLX Spreadsheet 4.2 is exactly what you need. The most notable part of this release is the appearance of several new types of Excel functions, expanding the list of available formulas from 40 to 170. The DHTMLX development team also added support for boolean operators and a new default number format - Date. In addition, end-users now can easily regulate the size of spreadsheet rows right from the UI and adjust the positioning of text in cells with the new Vertical Align button. Want to learn more? Here is the full &lt;a href="https://dhtmlx.com/blog/dhtmlx-spreadsheet-4-2-with130-new-functions-boolean-operators-date-format-row-resizing-much/"&gt;release article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Moreover, web developers now can also take advantage of DHTMLX Vault 4.1. This JavaScript file uploader was enriched with 3 important features: inline editing, keyboard navigation, and the ability to disable file preview. This &lt;a href="https://dhtmlx.com/blog/dhtmlx-vault-4-1/"&gt;blog post&lt;/a&gt; offers more details on these features.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#highlighting-typescript-45"&gt;
  &lt;/a&gt;
  Highlighting TypeScript 4.5
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c2EjHaQk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pck5fg0tjr2o40gdzpet.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c2EjHaQk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pck5fg0tjr2o40gdzpet.jpg" alt="TypeScript 4.5 release" width="640" height="391"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TypeScript is justly regarded as a promising technology that may one day reach the level of JavaScript in popularity or even higher. That is why Microsoft dedicates significant efforts to unleash the full potential of this programming language. The recent TypeScript update to version 4.5 is another step in this direction. &lt;/p&gt;

&lt;p&gt;With a new utility type Awaited and modified Promise object, developers get greater opportunities for asynchronous programming. Starting from v4.5, built-in types can be updated separately from the compiler. It is also possible to use template string types as discriminants in unions and disable unused imports. Two EcmaScript proposals, namely "Ergonomic brand checks" and "Import assertions", were also implemented. It was also planned to include the ESM (ECMAScript modules) support for Node.js in this update, but it was temporarily removed due to some implementation issues. To get more details on this release, pay a visit to the &lt;a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-5/#preserve-value-imports"&gt;Microsoft blog&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-tips-and-articles"&gt;
  &lt;/a&gt;
  Useful Tips and Articles
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#using-react-hooks-in-web-applications"&gt;
  &lt;/a&gt;
  Using React Hooks in Web Applications
&lt;/h3&gt;

&lt;p&gt;Introduced in v16.8, hooks has become a real game-changer for programmers who use React framework for building web applications. They give access to the state of a component and other capabilities of React without writing classes. Hooks allow writing concise, reusable, and easy to debug code. If you want to deepen your understanding of React hooks, explore their practical application, and learn how to create custom hooks, check out this useful &lt;a href="https://www.smashingmagazine.com/2021/11/useful-react-hooks/"&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#avoiding-common-mistakes-with-javascript-promises"&gt;
  &lt;/a&gt;
  Avoiding Common Mistakes with JavaScript Promises
&lt;/h3&gt;

&lt;p&gt;Sometimes developers get carried away with using too many complex nested callbacks in their code. It may lead to a serious issue known as callback hell that makes code unmanageable. But fortunately, JavaScript has a special Promise object that helps to avoid this problem by providing an effective way for working with asynchronous operations. But when using JS promises something can also go wrong. The author of this &lt;a href="https://blog.bitsrc.io/5-common-mistakes-in-using-promises-bfcc4d62657f"&gt;article&lt;/a&gt; describes five common mistakes in utilizing JavaScript promises and how to get rid of them in your coding practice.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-implement-microservices-in-nodejs"&gt;
  &lt;/a&gt;
  How to Implement Microservices in Node.js
&lt;/h3&gt;

&lt;p&gt;Usage of microservices can be considered as an alternative to a standard monolithic approach in web application architecture. While a monolithic app comes as a single unit, solutions based on microservices are divided into multiple independent parts. The implication here is that any changes introduced in the monolithic codebase affect the whole system i.e. a new version of the product should be released. The microservice architecture does not have this problem but like any technology, it also has some drawbacks. This &lt;a href="https://frontegg.com/blog/implementing-microservices-in-nodejs"&gt;article&lt;/a&gt; offers a deeper insight into using microservices, their pros and cons, and a guide on implementing this type of architecture with Node.js.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-blockchain-with-javascript"&gt;
  &lt;/a&gt;
  Creating a Blockchain with JavaScript
&lt;/h3&gt;

&lt;p&gt;In recent years, the whole world of high technologies has been buzzing about blockchain. In essence, this innovative technology is designed for securely storing any kind of data. It became the heart of almost all cryptocurrencies. The demand for blockchain developers is skyrocketing, so you can make your first steps in this field right now. The YouTube channel Simply Explained provides a great collection of &lt;a href="https://www.youtube.com/playlist?list=PLzvRQMJ9HDiTqZmbtFisdXFxul5k0F-Q4"&gt;videos&lt;/a&gt; that explain the main operating principles of blockchains and help to build a simple version of your own blockchain with JavaScript.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dealing-with-trojan-source-attacks-in-javascript-code"&gt;
  &lt;/a&gt;
  Dealing with Trojan Source Attacks in JavaScript Code
&lt;/h3&gt;

&lt;p&gt;This month, cyber security researchers from the University of Cambridge revealed a remarkable report dedicated to a new type of source code attack and supply chain attack named Trojan Source. This technique exploits Unicode-based bidirectional control characters to inject malware into source code comments. The main issue here is that these harmful elements are very unlikely to be discovered during the code review. Thus, it is entirely possible that you can get in trouble without suspecting a thing by simply copying benign-looking code from StackOverflow or GitHub. This &lt;a href="https://snyk.io/blog/how-to-detect-mitigate-trojan-source-attacks-javascript-eslint/"&gt;article&lt;/a&gt; offers useful recommendations on how to prevent Trojan Source attacks using ESLint.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
      <category>news</category>
    </item>
    <item>
      <title>Getting your HTTP Cache-Control headers right</title>
      <author>Kevin Farrugia</author>
      <pubDate>Mon, 29 Nov 2021 14:04:12 +0000</pubDate>
      <link>https://dev.to/imkevdev/getting-your-http-cache-control-headers-right-32m9</link>
      <guid>https://dev.to/imkevdev/getting-your-http-cache-control-headers-right-32m9</guid>
      <description>&lt;p&gt;Cross-posted from &lt;a href="https://imkev.dev/cache-control"&gt;https://imkev.dev/cache-control&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Caching plays a fundamental role in performance. What's quicker than a fast request? No request. Getting your caching strategy right can make a huge difference to your users - both repeat &lt;em&gt;and&lt;/em&gt; first time.&lt;/p&gt;

&lt;p&gt;"There are only two hard things in Computer Science: cache invalidation and naming things." (&lt;a href="http://www.tbray.org/ongoing/When/200x/2005/12/23/UPI"&gt;Phil Karlton&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;25 years later, this well-known saying still holds true and while I cannot help you with the naming, I want to share what I know about caching to make it easier for you to decide on a caching strategy. Disclaimer: The scope of this article isn't to serve as a comprehensive guide to all possible caching strategies and how they work - there's already plenty of content like that around. My goal is to provide you with a reference which you could use to answer the question, "How should I cache &lt;em&gt;this&lt;/em&gt; resource?"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-caching"&gt;
  &lt;/a&gt;
  What is caching?
&lt;/h2&gt;

&lt;p&gt;A cache is a store where you could put a resource. This could be done to avoid having to recalculate an expensive computation or to place the content closer to the user. In websites, this is dictated by the &lt;code&gt;Cache-Control&lt;/code&gt; header; which is defined in the &lt;a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13"&gt;HTTP/1.1 specification&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;Expires&lt;/code&gt; header is no longer needed as its behavior is covered by the &lt;code&gt;Cache-Control&lt;/code&gt; header.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#private-and-shared-caches"&gt;
  &lt;/a&gt;
  Private and shared caches
&lt;/h2&gt;

&lt;p&gt;In addition to caching in your browser, if your content is behind a CDN then your &lt;code&gt;cache-control&lt;/code&gt; headers influence how the CDN caches your content on the edge. Browser cache is referred to as a &lt;em&gt;private&lt;/em&gt; cache, while a CDN cache is referred to as a &lt;em&gt;shared&lt;/em&gt; cache. The cacheability of a resource is set using the directives below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;public&lt;/code&gt; - Any cache may store the response, including a CDN.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;private&lt;/code&gt; - The response is intended for a single user and should only be stored by the browser cache.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;no-store&lt;/code&gt; - Should not be stored on any cache.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;To test the different &lt;code&gt;cache-control&lt;/code&gt; headers, I have created a repository containing a simple NodeJS server. Please feel free to explore the source code on &lt;a href="https://github.com/kevinfarrugia/cache-control/"&gt;GitHub&lt;/a&gt; and run the application locally.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#static-assets"&gt;
  &lt;/a&gt;
  Static assets
&lt;/h2&gt;

&lt;p&gt;Static assets refer to files whose contents do not change and are not generated on request. This includes scripts, stylesheets, and images. As these files are generated at build time, most modern build tools can assign a unique hash to each file. This hash serves as a unique fingerprint for each version of the file and is included in the resource's URL. This could be in the form of a query string parameter (e.g. &lt;code&gt;app.js?v=c4d27698&lt;/code&gt;), or filename (e.g. &lt;code&gt;index-0e6a410d.js&lt;/code&gt;). Having a unique URL means that you can cache these assets for a very long time, even up to one year.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cache-control: max-age=31536000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the website is redeployed and the contents of one of the source files have changed, then it will be assigned a new URL and create a new cache entry. If the files are served through a CDN, then the CDN will cache this file. Most CDNs will purge the old files on each redeployment.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Freshness - Guaranteed.&lt;/li&gt;
&lt;li&gt;Performance - First user to request the file will receive it from the origin server. Every other user will receive a cached copy.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#caching-the-html-page"&gt;
  &lt;/a&gt;
  Caching the HTML page
&lt;/h2&gt;

&lt;p&gt;One of the major headaches with caching is your HTML page. Generally speaking, your HTML page will make requests for other resources which are needed to render the page, such as CSS, images and JavaScript files. Whenever your website is redeployed, it will update the references to the static assets within the HTML document.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/style.v1.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;becomes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/style.v2.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So if the HTML document is cached, users with a cached copy will request the old stylesheet, &lt;code&gt;style.v1.css&lt;/code&gt;; which no longer exists on the origin server. So while &lt;code&gt;style.v1.css&lt;/code&gt; is likely to be cached on the user's browser because of its long expiry, it is possible that some users encounter a broken website too. If the cached resource &lt;code&gt;style.v1.css&lt;/code&gt; is removed from the cache before the cached HTML resource, the user will see a broken layout.&lt;/p&gt;

&lt;p&gt;To complicate matters, your HTML may also contain server-side rendered content retrieved from a CMS. If the content is updated on the CMS, the cached HTML is now stale.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scenarios"&gt;
  &lt;/a&gt;
  Scenarios
&lt;/h2&gt;

&lt;p&gt;When deciding your caching strategy, it is usually a trade-off between performance and freshness. Instead of explaining the different &lt;code&gt;cache-control&lt;/code&gt; directives and their applications, I will be describing some real-life scenarios I worked with and how I would set my &lt;code&gt;cache-control&lt;/code&gt; headers for that type of website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blog"&gt;
  &lt;/a&gt;
  Blog
&lt;/h3&gt;

&lt;p&gt;If you are looking to cache your blog, the chances are that the content is not time-sensitive and you would prioritize performance over freshness. Users are more likely to go directly to the article page instead of navigating through the website. If they revisit your blog, they are likely to return when a new article is published - that is after the cache has expired. The CSS and JavaScript files probably do not change that often either.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cache-control: public, max-age=600, stale-while-revalidate=60
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The blog you're reading uses a &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;max-age&lt;/code&gt;, and &lt;code&gt;stale-while-revalidate&lt;/code&gt; combination. By applying a &lt;code&gt;max-age&lt;/code&gt; of 600 (10 minutes), you can cache the page for the duration of the user's session. If they leave the page and return within 10 minutes, it would load instantly.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;public&lt;/code&gt; directive states that the resource may be cached on both private and shared caches. Therefore if the resource has expired in the user's browser cache, it would request it from the CDN. The CDN may have the resource cached and serve it instantly. If it has expired on the CDN, then it would fetch it from the origin and update the caches.&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;stale-while-revalidate&lt;/code&gt; means that the resource can be served stale for an additional 60 seconds after it has expired while it is being revalidated.&lt;/p&gt;

&lt;p&gt;In my specific case I am able to cache the HTML file rather aggressively as I ship very little JavaScript - none of which is critical to the user experience - and the critical CSS is inlined in the HTML file. Depending on how important your subresources are to the user experience, you may want to cache for a shorter period. If your blog does not work at all without JavaScript, then you might want to reduce the &lt;code&gt;max-age&lt;/code&gt; to avoid the race condition described earlier.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Freshness - Users may receive a worst-case 11-minute old response.&lt;/li&gt;
&lt;li&gt;Performance - The first user to request the resource will wait for it to be fetched from the origin. If the user returns within 11 minutes, they will receive a cached response. If they return after 11 minutes, they will be served a cached copy from the CDN. If no users visit the website for 11 minutes, the first user to visit the website will wait for the resource to be fetched from the origin.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#news-website"&gt;
  &lt;/a&gt;
  News website
&lt;/h3&gt;

&lt;p&gt;A news website is updated frequently, with new articles being added to the home page and the content of some articles updated several times per day.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cache-control: public, max-age=30, stale-while-revalidate=30, stale-if-error=600
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By applying a combination of &lt;code&gt;max-age&lt;/code&gt;, &lt;code&gt;stale-while-revalidate&lt;/code&gt;, and &lt;code&gt;stale-if-error&lt;/code&gt; you can always serve content quickly while minimizing the risk of stale data. Resources will be cached on shared or private caches for 30 seconds. When the resource expires, the cache will serve the stale data for another 30 seconds. The &lt;code&gt;stale-if-error&lt;/code&gt; directive indicates that if the origin server does not respond when revalidating the resource, the cache may serve the stale data for another 10 minutes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;stale-if-error&lt;/code&gt; directive isn't widely &lt;a href="https://caniuse.com/mdn-http_headers_cache-control_stale-if-error"&gt;supported&lt;/a&gt; on the browser but is supported on most CDNs.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Freshness - In the worst case, the user may receive a 1-minute old response. The &lt;code&gt;max-age&lt;/code&gt; and &lt;code&gt;stale-while-revalidate&lt;/code&gt; values may be adjusted to calibrate this worst-case scenario.&lt;/li&gt;
&lt;li&gt;Performance - The first user to request the resource will wait for it to be fetched from the origin. If the same user or any other user revisits the page within 30 seconds, they would get a cached response. If they visit the page beyond 30 seconds but within 60 seconds, then they would get an instant (stale) response while the cache is revalidated. If they revisit the page beyond 60 seconds, then the resource is fetched from the CDN. If no user visits the page for 1 minute, the next user will fetch the resource from the origin.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#live-event"&gt;
  &lt;/a&gt;
  Live event
&lt;/h3&gt;

&lt;p&gt;If your website is showing a live event and content is updated frequently, you want the data to be as fresh as possible. An example of a live event may be a sports match showing real-time scores or an election results page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cache-control: public, no-cache
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Setting &lt;a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9.1"&gt;&lt;code&gt;no-cache&lt;/code&gt;&lt;/a&gt; indicates that a cache must not be used for a subsequent request without revalidating it with the origin server. This is the equivalent of &lt;code&gt;must-revalidate, max-age=0&lt;/code&gt;. Once again, setting &lt;code&gt;public&lt;/code&gt; will enable your CDN to cache the resource and avoid hitting your origin server for each user request.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Freshness - Users will always receive a fresh resource.&lt;/li&gt;
&lt;li&gt;Performance - Each request will incur a network call. If the resource has not changed, then the payload would only include the response headers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#loggedin-pages"&gt;
  &lt;/a&gt;
  Logged-in pages
&lt;/h3&gt;

&lt;p&gt;Any page or resource which is only available for a logged-in user or contains data specific to a logged-in session should not be cached.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cache-control: no-store
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Freshness - Users will always receive a fresh resource.&lt;/li&gt;
&lt;li&gt;Performance - Each request will be fetched from the origin.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;HTTP Cache-Control headers remain a cornerstone for good performance. When choosing a caching strategy, take your time to consider the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not all resources are equal.&lt;/li&gt;
&lt;li&gt;Measure the performance gains a user would benefit from if you cache a resource.&lt;/li&gt;
&lt;li&gt;Can you get away with serving stale content?&lt;/li&gt;
&lt;li&gt;Identify how likely your cached resources may become out of sync and what your users would experience in that eventuality.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#recommended-reading"&gt;
  &lt;/a&gt;
  Recommended reading
&lt;/h2&gt;

&lt;p&gt;There is a lot of content explaining how the different &lt;code&gt;cache-control&lt;/code&gt; directives work. Below are some of my favorite resources on the topic.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jakearchibald.com/2016/caching-best-practices/"&gt;Caching best practices &amp;amp; max-age gotchas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.dev/love-your-cache/"&gt;Love your cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://csswizardry.com/2019/03/cache-control-for-civilians/"&gt;Cache-Control for Civilians&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3XkU_DXcgl0"&gt;Remix Run - Introduction to HTTP Caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bfLFHp7Sbkg"&gt;CDN Caching, Static Site Generation, and Server Side Rendering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching"&gt;HTTP caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.cloudflare.com/cache/about/cache-control"&gt;Origin Cache Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jakearchibald.com/2020/multiple-versions-same-time/"&gt;Different versions of your site can be running at the same time&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@rresenden?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Ricardo Resende&lt;/a&gt; on &lt;a href=""&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>performance</category>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>HLS Interstitials in Safari</title>
      <author>Benjamin Wallberg</author>
      <pubDate>Mon, 29 Nov 2021 14:01:51 +0000</pubDate>
      <link>https://dev.to/video/hls-interstitials-on-safari-go7</link>
      <guid>https://dev.to/video/hls-interstitials-on-safari-go7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;As mentioned in our &lt;a href="https://dev.to/video/inserting-hls-interstitials-for-an-existing-vod-library-gbi"&gt;previous post&lt;/a&gt; HLS interstitials doesn't work natively in Safari or in any other HTML5 player, but that doesn't mean that it &lt;em&gt;can't&lt;/em&gt; work.&lt;/p&gt;

&lt;p&gt;"Interstitial playback on Apple devices is accomplished using two players"(GettingStartedWithHLSInterstitials.pdf, p.3)&lt;/p&gt;

&lt;p&gt;This is a common technique used in may AVOD services today, albeit without the ads being part of the HLS manifest, the client creates two &lt;code&gt;&amp;lt;video /&amp;gt;&lt;/code&gt; elements and puts them on top of each other and simply switch between which &lt;code&gt;&amp;lt;video /&amp;gt;&lt;/code&gt; element is visible.&lt;/p&gt;

&lt;p&gt;This means that the only thing we are limited by is our ability to read the HLS interstitials from the manifest.&lt;/p&gt;

&lt;p&gt;In this post we will focus on how to achieve this in Safari and in a future post we will show how to accomplish this using the excellent hls.js library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reading-the-manifest"&gt;
  &lt;/a&gt;
  Reading the manifest
&lt;/h2&gt;

&lt;p&gt;Since HLS interstitials are added using the existing &lt;code&gt;EXT-X-DATERANGE&lt;/code&gt; tag we can use the built-in browser APIs to read them.&lt;br&gt;
In Safari they have achieved this using the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/TextTrack"&gt;TextTrack&lt;/a&gt; interface&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// listen to the `addtrack` event to detect when a texttrack is added to the video element&lt;/span&gt;
&lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textTracks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;addtrack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;track&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;TrackEvent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// check if the track is of kind "metadata", this is where Safari adds any EXT-X-DATERANGE information&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;track&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;kind&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;metadata&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// by default the track is disabled, set it to "hidden" to allow it to start parsing any EXT-X-DATERANGE&lt;/span&gt;
    &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// track.cues will now be populated with all available EXT-X-DATERANGES in the entire manifest!&lt;/span&gt;
    &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cuechange&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// if this event is dispatched the `track.activeCues` property will contain the active EXT-X-DATERANGE&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The EXT-X-DATERANGEs will show up in the &lt;code&gt;cues/activeCues&lt;/code&gt; field of the metadata text track as &lt;a href="https://wicg.github.io/datacue/"&gt;DataCue&lt;/a&gt;, the specification for those cues are just in draft so they are subject to change. The relevant part for HLS interstitials is the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="err"&gt;value:&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="err"&gt;key:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"X-ASSET-LIST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="err"&gt;data:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;url to X-ASSET-LIST&amp;gt;"&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="err"&gt;startTime:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that each &lt;code&gt;X-*&lt;/code&gt; attribute of the daterange will show up as separate cues, so if you want full support for HLS interstitials you need to read from multiple cues to get a complete HLS interstitial configuration.&lt;/p&gt;

&lt;p&gt;Using this technique we were able to create &lt;a href="https://poc.eyevinn.technology/hls-interstitials/index.html"&gt;this&lt;/a&gt; simple PoC demo show-casing how HLS interstitials can look today in Safari.&lt;br&gt;
The demo contains a preroll and two midrolls, one at 20s and one at 1m 40s.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learnings"&gt;
  &lt;/a&gt;
  Learnings
&lt;/h2&gt;

&lt;p&gt;When implementing this little PoC we discovered two specific things that one needs to workaround to get this to work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-metadata-track-becomes-disabled"&gt;
  &lt;/a&gt;
  The metadata track becomes disabled.
&lt;/h3&gt;

&lt;p&gt;When the interstitial video is playing the master video will disable the &lt;code&gt;metadata&lt;/code&gt; track, which means that we can no longer read the EXT-X-DATERANGEs from the manifest.&lt;br&gt;
Luckily the browser does dispatch the "onchange" event on the textTracks so we can force enable it if needed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#safari-reads-a-pdt-of-0-as-false"&gt;
  &lt;/a&gt;
  Safari reads a PDT of 0 as false
&lt;/h2&gt;

&lt;p&gt;If you set the PDT of the HLS to &lt;code&gt;#EXT-X-PROGRAM-DATE-TIME:1970-01-01T00:00:00.000Z&lt;/code&gt; Safari will not set the &lt;code&gt;startTime&lt;/code&gt; field of the EXT-X-DATERANGE cue correctly, it will set all &lt;code&gt;startTime&lt;/code&gt; fields to &lt;code&gt;0&lt;/code&gt;. A simple workaround if you control the HLS is to set it to 1 eg. &lt;code&gt;#EXT-X-PROGRAM-DATE-TIME:1970-01-01T00:00:00.001Z&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-eyevinn-technology"&gt;
  &lt;/a&gt;
  About Eyevinn Technology
&lt;/h2&gt;

&lt;p&gt;Eyevinn Technology is an independent consultant firm specialized in video and streaming. Independent in a way that we are not commercially tied to any platform or technology vendor.&lt;/p&gt;

&lt;p&gt;At Eyevinn, every software developer consultant has a dedicated budget reserved for open source development and contribution to the open source community. This give us room for innovation, team building and personal competence development. And also gives us as a company a way to contribute back to the open source community.&lt;/p&gt;

&lt;p&gt;Want to know more about Eyevinn and how it is to work here. Contact us at &lt;a href="mailto:work@eyevinn.se"&gt;work@eyevinn.se&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>hls</category>
      <category>video</category>
      <category>safari</category>
    </item>
    <item>
      <title>Code Snap a new way to share code</title>
      <author>LarrocaX</author>
      <pubDate>Mon, 29 Nov 2021 13:50:08 +0000</pubDate>
      <link>https://dev.to/larrocax/code-snap-a-new-way-to-share-code-gl5</link>
      <guid>https://dev.to/larrocax/code-snap-a-new-way-to-share-code-gl5</guid>
      <description>&lt;p&gt;&lt;strong&gt;Code Snap&lt;/strong&gt; is an extension for &lt;strong&gt;Visual Studio Code&lt;/strong&gt;. It lets you save screenshots of the selected code and it looks better and cleaner. It can be customized to your liking and saves the image as png to make it easier to share.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=adpyke.codesnap"&gt;CODE SNAP&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>Choosing the Right Technology for SaaS Product Development: Benefits of Ruby on Rails</title>
      <author>Codica</author>
      <pubDate>Mon, 29 Nov 2021 13:46:41 +0000</pubDate>
      <link>https://dev.to/codicacom/choosing-the-right-technology-for-saas-product-development-benefits-of-ruby-on-rails-31h8</link>
      <guid>https://dev.to/codicacom/choosing-the-right-technology-for-saas-product-development-benefits-of-ruby-on-rails-31h8</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://www.codica.com/blog/choosing-saas-application-development-company/"&gt;Codica Blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Being the largest segment of the global public cloud services market, the SaaS industry is constantly growing. Undoubtedly, the launch of a SaaS application might be a very lucrative business. &lt;/p&gt;

&lt;p&gt;But it is not always easy to start up a successful SaaS product. That is why we want to share our knowledge to help you find the &lt;a href="https://www.codica.com/services/saas-development/"&gt;SaaS application development&lt;/a&gt; company that will spread your project’s wings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Overview of SaaS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SaaS, or Software-as-a-service, delivery and licensing model means that the software application is distributed on a subscription basis. According to &lt;a href="https://www.prnewswire.com/news-releases/global-software-as-a-service-saas-market-report-2020-market-was-valued-at-134-44-bn-in-2018-and-is-expected-to-grow-to-220-21-bn-at-a-cagr-of-13-1-through-2022--300970629.html"&gt;PR Newswire&lt;/a&gt;, this model is getting wildly popular since the SaaS market is projected to grow to $220.21 billion at a CAGR of 13.1% through 2022.&lt;/p&gt;

&lt;p&gt;The SaaS model is noted for its cross-platform compatibility and auto-update functionality. It is a great benefit for your app because customers can access the newest version of your app from any device connected to the Internet.&lt;/p&gt;

&lt;p&gt;But SaaS application development requires a considerable amount of time and resources. Users love SaaS products thanks to their constant availability, also meaning zero-downtime deployment. Also, you should consider other development challenges such as actual customizability, third-party integration, and subscription lifecycle management.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stages of SaaS development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The best practice for building SaaS products suggests the development should be divided into five main stages, as you can see below.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Research &amp;amp; discovery&lt;/strong&gt; – gathering and assessing the client’s expectations, product requirements, and information about the market and target audience.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Product design&lt;/strong&gt; – interpreting the product’s design and creating a prototype.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Product development&lt;/strong&gt; – building the final product or MVP (minimum viable product), a version with minimum features to satisfy early users and get feedback for future improvements.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Optimization and QA&lt;/strong&gt; – software testing and fixing any defects or bugs found. Testing is included in all the stages of the modern development lifecycle models.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Deploy and maintenance&lt;/strong&gt; –  application deployment, monitoring, and support.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y7za4uwT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jl046o9fb2301jibefec.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y7za4uwT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jl046o9fb2301jibefec.jpg" alt="Image description" width="880" height="557"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to define a great SaaS development company?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Specialization in SaaS application development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The SaaS market is very diverse, with a constantly extending range of SaaS development services that involve rapid innovation leveraging and cross-business solutions. That is why when seeking for the solution in a specific niche, concentrate on the respective areas of competence.&lt;/p&gt;

&lt;p&gt;Most importantly, you need to find the &lt;a href="https://www.codica.com/services/saas-development/"&gt;SaaS development&lt;/a&gt; company that has the right team of professionals experienced in the right type of projects. That is what it takes to develop the working business model, UX/UI design, and choose programming tools that will ignite your project and make your business profitable. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Portfolio&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When searching for credible SaaS development companies, it is necessary to check their works. Case studies are a prime example of the company’s capabilities and attitude.&lt;/p&gt;

&lt;p&gt;At Codica, we are proud to share the examples of our work in the detailed &lt;a href="https://www.codica.com/case-studies/"&gt;case studies&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1osBkC8i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a86d5ex5ca1yym3o1nyq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1osBkC8i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a86d5ex5ca1yym3o1nyq.jpg" alt="Image description" width="880" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer reviews&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Reviews from clients can help form a view about the reliability of a SaaS application development company. You can find such information on global platforms like Clutch or GoodFirms, where you can read honest feedback, not only five-star reviews.&lt;/p&gt;

&lt;p&gt;Review and rating platforms not only consider client reviews, but also collect and analyze information about the market presence, experience, industry recognition, and other metrics. Below you can take a look at the review given by one of our clients on Clutch. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BtWbLSD2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0wpbpqlwqqx3wc57zp2s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BtWbLSD2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0wpbpqlwqqx3wc57zp2s.jpg" alt="Image description" width="880" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Development approach&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Methodology and approach&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We recommend searching for a team that uses an Agile approach to find a partner that will &lt;a href="https://www.codica.com/blog/how-to-build-saas-product/"&gt;develop a SaaS application&lt;/a&gt; for your business. This approach makes the workflow fast and flexible.&lt;/p&gt;

&lt;p&gt;Another aspect considers a &lt;strong&gt;streamlined communication system&lt;/strong&gt;. SaaS development companies that deliver high-quality applications must have a healthy and motivating work environment that boosts the team’s productiveness.&lt;/p&gt;

&lt;p&gt;And the last but not least factor is &lt;strong&gt;code review&lt;/strong&gt;. It makes the code more consistent and robust, making your business more profitable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MVP creation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codica.com/blog/how-to-build-saas-startup/"&gt;Launching a SaaS startup&lt;/a&gt; should begin with &lt;a href="https://www.codica.com/blog/5-reasons-why-you-need-an-MVP-before-engaging-in-custom-software-development/"&gt;building an MVP&lt;/a&gt;. Thus, you will reduce the development costs and also get revenue in the shortest possible time. And expert SaaS development companies know it very well. They know how to create the MVP your users will love.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Technology stack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The technology stack defines your application’s basic technical characteristics, such as performance, security, scalability, and maintainability. We must admit that deep expertise in specific technologies is better than general specialization. One cannot master everything.&lt;/p&gt;

&lt;p&gt;Your aim is to understand the requirements for the solution stack of your startup. We suggest you ask the questions below to come up with the programming language that will be the essential part of your tech stack.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Which technology fits the implementation of your main features the most?
*How old is it? Can it boast having many libraries and tools to work with?&lt;/li&gt;
&lt;li&gt;What are the downsides of it?&lt;/li&gt;
&lt;li&gt;What is the situation with time-to-market?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Codica team relies on the robust &lt;a href="https://www.codica.com/blog/pros-and-cons-of-ruby-on-rails-for-web-development/"&gt;Ruby on Rails&lt;/a&gt; framework because of its great syntax, design, and simplicity. Below you can find other tools we use for SaaS application development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---J_UpnpC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bt27ahwtgjc4qm9zyreb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---J_UpnpC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bt27ahwtgjc4qm9zyreb.jpg" alt="Image description" width="880" height="747"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team structure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Note that the creation of a platform from scratch requires a full-cycle development team. What kind of specialists can bring your SaaS project to reality?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;UX/UI designers;&lt;/li&gt;
&lt;li&gt;Project manager;&lt;/li&gt;
&lt;li&gt;Backend, frontend developers;&lt;/li&gt;
&lt;li&gt;DevOps;&lt;/li&gt;
&lt;li&gt;QA engineers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We have briefly outlined the most important information you need to know when opting for the right SaaS application development company. If you want to put all these puzzles together and break the SaaS ground, please check our fresh article: &lt;a href="https://www.codica.com/blog/choosing-saas-application-development-company/"&gt;How to Choose a Reliable SaaS Application Development Company&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>saas</category>
      <category>rails</category>
      <category>ruby</category>
    </item>
    <item>
      <title>Bluetooth Low Energy (BLE) Tutorial for Beaglebone</title>
      <author>Bleuio tech</author>
      <pubDate>Mon, 29 Nov 2021 13:26:44 +0000</pubDate>
      <link>https://dev.to/bleuiot/bluetooth-low-energy-ble-tutorial-for-beaglebone-45i5</link>
      <guid>https://dev.to/bleuiot/bluetooth-low-energy-ble-tutorial-for-beaglebone-45i5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-introduction"&gt;
  &lt;/a&gt;
  1. Introduction
&lt;/h2&gt;

&lt;p&gt;This is a simple example showcasing how to control a BleuIO dongle connected to Beaglebone Black using a python script.&lt;/p&gt;

&lt;p&gt;When running the script, it will first ask for the com port where the dongle is connected (usually '/dev/ttyACM0'). After that, the BleuIO will start advertising. Every 8th second it will turn on one of the onboard Beaglebone Black LEDs whilst changing the BLE advertising name to indicate which LED is on.&lt;/p&gt;

&lt;p&gt;We are using the Linux debian image: 'OMAP3/DM3730 Debian 9.5 2018-10-07 4GB SD LXQT' (&lt;a href="https://beagleboard.org/latest-images"&gt;https://beagleboard.org/latest-images&lt;/a&gt;).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Muvoq85y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qp74f1of710o7i46owta.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Muvoq85y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qp74f1of710o7i46owta.png" alt="Beaglebone BLE project" width="753" height="67"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-about-the-code"&gt;
  &lt;/a&gt;
  2. About the Code
&lt;/h2&gt;

&lt;p&gt;You can get access to the project &lt;a href="https://github.com/smart-sensor-devices-ab/beaglebone_bleuio_example"&gt;&lt;strong&gt;HERE&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/smart-sensor-devices-ab/beaglebone_bleuio_example"&gt;https://github.com/smart-sensor-devices-ab/beaglebone_bleuio_example&lt;/a&gt;&lt;br&gt;&lt;/p&gt;



&lt;p&gt;We are using the &lt;strong&gt;Adafruit_BBIO&lt;/strong&gt; python library that comes with the Beaglebone to control the onboard LEDs. First we define the LEDs names and then set them as GPIO Outputs.&lt;br&gt;
Then we define the advertising messages that the BleuIO will switch between.&lt;br&gt;
Lets break one down:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;"10:09:42:6C:65:75:49:4F:20:4C:45:44:20:30:20:4F:4E:"&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;"10"&lt;/strong&gt; is the size of the advertising packet in HEX. &lt;br&gt;&lt;br&gt;
&lt;strong&gt;"09"&lt;/strong&gt; is the flag for device name (Complete Local Name). &lt;br&gt;&lt;br&gt;
&lt;strong&gt;"42:6C:65:75:49:4F:20:4C:45:44:20:30:20:4F:4E"&lt;/strong&gt; is the packet itself, translated from HEX to ASCII it says: "BleuIO LED 0 ON"&lt;/p&gt;

&lt;p&gt;Afterwards the user is presented with a message to input the com port the BleuIO is connected to. If you are not using a USB Hub the port should be '/dev/ttyACM0'.&lt;/p&gt;

&lt;p&gt;You can change the comport name in the Python script and fill in your COM port.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;com_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/dev/ttyACM0"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The script continues into the main loop, where it will first make sure all LEDs are off and then start BLE advertising.&lt;/p&gt;

&lt;p&gt;The loop iterates through all four LEDs. In every iteration it turns one LED on and advertise the LED name then continue to the next LED.&lt;br&gt;
This will continue until the script is aborted.&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;serial&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;Adafruit_BBIO.GPIO&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;


&lt;span class="n"&gt;LED_USR0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"USR0"&lt;/span&gt;
&lt;span class="n"&gt;LED_USR1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"USR1"&lt;/span&gt;
&lt;span class="n"&gt;LED_USR2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"USR2"&lt;/span&gt;
&lt;span class="n"&gt;LED_USR3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"USR3"&lt;/span&gt;

&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;LED0_ON_ADV_MSG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"10:09:42:6C:65:75:49:4F:20:4C:45:44:20:30:20:4F:4E:"&lt;/span&gt;
&lt;span class="n"&gt;LED1_ON_ADV_MSG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"10:09:42:6C:65:75:49:4F:20:4C:45:44:20:31:20:4F:4E:"&lt;/span&gt;
&lt;span class="n"&gt;LED2_ON_ADV_MSG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"10:09:42:6C:65:75:49:4F:20:4C:45:44:20:32:20:4F:4E:"&lt;/span&gt;
&lt;span class="n"&gt;LED3_ON_ADV_MSG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"10:09:42:6C:65:75:49:4F:20:4C:45:44:20:33:20:4F:4E:"&lt;/span&gt;

&lt;span class="c1"&gt;# Turn off all LEDs
&lt;/span&gt;&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;BlueIO BeagleBone Example!&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;connecting_to_dongle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;com_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;

&lt;span class="n"&gt;start_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;valid_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;start_input&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;com_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"Enter Com port of Dongle (default for BeagleBone: '/dev/ttyACM0'):&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;gt;&amp;gt;"&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Comport to use: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;com_input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;input_continue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"If your happy with your choice just press Enter to continue the script. Else type E to exit or R to redo your choice. &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;gt;&amp;gt;"&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;input_continue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;start_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;input_continue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;start_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;input_continue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"R"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;valid_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;start_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;input_continue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Exiting script..."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;console&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Please wait..."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AT+DUAL"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Starting Advertising..."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AT+ADVSTART"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;led_turn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="c1"&gt;# Turn off all LEDs
&lt;/span&gt;        &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;led_turn&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Turning LED USR0 ON"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AT+ADVRESP="&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED0_ON_ADV_MSG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HIGH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;led_turn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;led_turn&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;led_turn&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Turning LED USR1 ON"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AT+ADVRESP="&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED1_ON_ADV_MSG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HIGH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;led_turn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;led_turn&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;led_turn&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Turning LED USR2 ON"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AT+ADVRESP="&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED2_ON_ADV_MSG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HIGH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;led_turn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;led_turn&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;led_turn&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Turning LED USR3 ON"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AT+ADVRESP="&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED3_ON_ADV_MSG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HIGH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;led_turn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

            &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;KeyboardInterrupt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_USR3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Exiting script..."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;Dongle not connected.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;connecting_to_dongle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;connecting_to_dongle&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Trying to connect to dongle..."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;console&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;com_input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;baudrate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;57600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;parity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"N"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;stopbits&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;bytesize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_open&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__bool__&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                    &lt;span class="n"&gt;connecting_to_dongle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;Connected to Dongle in port: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;com_input&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;".&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="s"&gt;"Dongle not found. Retrying connection to port: "&lt;/span&gt;
                    &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;com_input&lt;/span&gt;
                    &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"..."&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#3-using-the-example-project"&gt;
  &lt;/a&gt;
  3. Using the example project
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#31-what-you-will-need"&gt;
  &lt;/a&gt;
  3.1 What you will need
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A Computer&lt;/li&gt;
&lt;li&gt;A BleuIO dongle (&lt;a href="https://www.bleuio.com/"&gt;https://www.bleuio.com/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A BeagleBone Black (&lt;a href="https://beagleboard.org/black"&gt;https://beagleboard.org/black&lt;/a&gt;) with Beaglebone Firmware installed (&lt;a href="https://beagleboard.org/latest-images"&gt;https://beagleboard.org/latest-images&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-how-to-setup-project"&gt;
  &lt;/a&gt;
  4. How to setup project
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#41-downloading-the-project-from-github"&gt;
  &lt;/a&gt;
  4.1 Downloading the project from GitHub
&lt;/h3&gt;

&lt;p&gt;Get access to the project &lt;a href="https://github.com/smart-sensor-devices-ab/beaglebone_bleuio_example"&gt;HERE&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/smart-sensor-devices-ab/beaglebone_bleuio_example"&gt;https://github.com/smart-sensor-devices-ab/beaglebone_bleuio_example&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Either clone the project, or download it as a zip file and unzip it, into a folder on your BeagleBone.&lt;/p&gt;

&lt;p&gt;You can also create a new python file using the Cloud9 IDE from the BeagleBone (run by going to &lt;a href="http://192.168.7.2:3000/"&gt;http://192.168.7.2:3000/&lt;/a&gt;).&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sq7xCH7T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdt9oe16pxa3khilt7xw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sq7xCH7T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdt9oe16pxa3khilt7xw.png" alt="Beaglebone Bluetooth Low Energy" width="365" height="511"&gt;&lt;/a&gt;&lt;br&gt;
Copy the code and pasting it into the newly created file.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WexjZqLJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4e4cl44jhz2ol09koun.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WexjZqLJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4e4cl44jhz2ol09koun.png" alt="Beaglebone Bluetooth Low Energy application" width="682" height="307"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#42-installing-pyserial"&gt;
  &lt;/a&gt;
  4.2 Installing pyserial
&lt;/h3&gt;

&lt;p&gt;To run the script you will need to install the python library pyserial.&lt;/p&gt;

&lt;p&gt;The easiest way of doing this is just connecting to the BeagleBone via shh (the default password is &lt;strong&gt;temppwd&lt;/strong&gt;):&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--31sIk1N1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wouodikfrk5l70lvlguj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--31sIk1N1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wouodikfrk5l70lvlguj.png" alt="Beaglebone BLE application" width="310" height="35"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;or using the bash tab in the Cloud9 IDE and type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; &lt;span class="nb"&gt;sudo &lt;/span&gt;pip3 &lt;span class="nb"&gt;install &lt;/span&gt;pyserial
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ns4wW0CW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnwqy8qto0ku8kcqgsvt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ns4wW0CW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnwqy8qto0ku8kcqgsvt.png" alt="Beaglebone BleuIO Bluetooth Low Energy" width="619" height="322"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-running-the-example"&gt;
  &lt;/a&gt;
  5. Running the example
&lt;/h2&gt;

&lt;p&gt;Go to the folder where you have the python script file and run:&lt;br&gt;&lt;br&gt;
(Pyserial needs sudo-privileges to function.)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;python3 name_of_script.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>Mutation isn't always bad in JavaScript</title>
      <author>Nick Scialli (he/him)</author>
      <pubDate>Mon, 29 Nov 2021 13:24:52 +0000</pubDate>
      <link>https://dev.to/nas5w/mutation-isnt-always-bad-in-javascript-5e94</link>
      <guid>https://dev.to/nas5w/mutation-isnt-always-bad-in-javascript-5e94</guid>
      <description>&lt;p&gt;We humans like dealing in absolutes. It's easy. Nuance is hard. Unfortunately for us, everything involves nuance. That's why we should question ourselves if we start to wonder if mutation is always bad.&lt;/p&gt;

&lt;p&gt;The truth is mutation isn't always bad, nor is it &lt;em&gt;usually&lt;/em&gt; bad. It just &lt;em&gt;is&lt;/em&gt;. It's an excellent tool some languages give us to manipulate objects. Like with any tool, it's our responsibility to use it correctly.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-object-mutation"&gt;
  &lt;/a&gt;
  What is object mutation?
&lt;/h1&gt;

&lt;p&gt;Here's a quick refresher on object mutation. Let's say we have a person object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jarvis&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we were to change this person's age, we will have mutated the object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This seems innocuous, right?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#where-mutation-goes-awry"&gt;
  &lt;/a&gt;
  Where mutation goes awry
&lt;/h1&gt;

&lt;p&gt;Programming is all about &lt;em&gt;communication&lt;/em&gt; and &lt;em&gt;expectations&lt;/em&gt;. Mutation goes awry when the intent of an operation isn't clearly communicated and when a developer's (or machine's) expectations are violated.&lt;/p&gt;

&lt;p&gt;Let's consider the following (bad) use of mutation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;copyPerson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newAge&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;newPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;newPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newAge&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newPerson&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why is this bad? Well let's look at what happens when we use this function in the wild:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;jarvis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jarvis&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;arms&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;legs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stanley&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;copyPerson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jarvis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Stanley&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stanley&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// { age: 27, arms: 2, legs: 2, name: "Stanley" }&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jarvis&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// { age: 27, arms: 2, legs: 2, name: "Stanley" }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Out expectations have been thoroughly violated!&lt;/p&gt;

&lt;p&gt;In our &lt;code&gt;copyPerson&lt;/code&gt; function, we accidentally assigned &lt;code&gt;newPerson&lt;/code&gt; a reference to the same &lt;code&gt;person&lt;/code&gt; object. Since they reference the same object, mutating &lt;code&gt;newPerson&lt;/code&gt; &lt;em&gt;also&lt;/em&gt; mutates &lt;code&gt;person&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;How do we fix this? We can do it entirely without mutation by copying the &lt;code&gt;person&lt;/code&gt; object using the spread operator and simultaneously overwriting the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt; properties:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;copyPerson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newAge&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newAge&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newPerson&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that will work! But we can also make it work &lt;em&gt;with&lt;/em&gt; mutation, and this is totally fine. Some might even find it more readable!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;copyPerson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newAge&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="nx"&gt;newPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;newPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newAge&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newPerson&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So wait, if this is fine, was mutation actually the culprit? No, it wasn't. &lt;em&gt;It was our lack of understanding about how references work&lt;/em&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#mutability-and-popular-frontend-frameworks"&gt;
  &lt;/a&gt;
  Mutability and popular front-end frameworks
&lt;/h1&gt;

&lt;p&gt;Popular front-end frameworks like React use references for render logic. Let's consider the following example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setPerson&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jarvis&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PersonCard&lt;/span&gt; &lt;span class="na"&gt;person&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, the &lt;code&gt;PersonCard&lt;/code&gt; component will re-render if &lt;code&gt;person&lt;/code&gt; changes.&lt;/p&gt;

&lt;p&gt;Actually, let's be more careful in our wording here: the &lt;code&gt;PersonCard&lt;/code&gt; component will re-render &lt;code&gt;person&lt;/code&gt; &lt;em&gt;references a new object&lt;/em&gt;. Again, we can get ourselves in trouble if we mutate &lt;code&gt;person&lt;/code&gt; rather than creating a new object.&lt;/p&gt;

&lt;p&gt;For this reason, the following code will be buggy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setPerson&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jarvis&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;incrementAge&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;setPerson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PersonCard&lt;/span&gt; &lt;span class="na"&gt;person&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;incrementAge&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Have a birthday&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we click the "Have a birthday" button, we increment the &lt;code&gt;age&lt;/code&gt; property of the &lt;code&gt;person&lt;/code&gt; object and then try to set the &lt;code&gt;person&lt;/code&gt; state to that object. The problem is that it's not a &lt;em&gt;new&lt;/em&gt; object, it's the same &lt;code&gt;person&lt;/code&gt; object as the prevous render! React's diffing algorithm sees no change to the &lt;code&gt;person&lt;/code&gt; reference and doesn't re-render the &lt;code&gt;PersonCard&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;How do we fix this? You guessed it: we just have to make sure we create a new object based on &lt;code&gt;person&lt;/code&gt;. Then, we can either accomplish the task by mutating the new object or some other means:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setPerson&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jarvis&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;incrementAge&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nx"&gt;newPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;setPerson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newPerson&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PersonCard&lt;/span&gt; &lt;span class="na"&gt;person&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;incrementAge&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Have a birthday&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your instinct here is that mutating &lt;code&gt;newPerson&lt;/code&gt; is bad because we're using React, make sure to check your assumptions! There's nothing wrong here: &lt;code&gt;newPerson&lt;/code&gt; is a variable scoped to the &lt;code&gt;incrementAge&lt;/code&gt; function. We're not mutating something React is tracking, and therefore the fact that we're "in React" doesn't come into play here.&lt;/p&gt;

&lt;p&gt;Again, it's very important to recognize here that mutation isn't bad. Our misunderstanding of object references and the React diffing algorithm are what caused the buggy behavior here.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#when-is-mutation-good"&gt;
  &lt;/a&gt;
  When is mutation good?
&lt;/h1&gt;

&lt;p&gt;Now that I have discussed some scenarios in which mutation often gets blamed for buggy behavior, let's talk about when mutation really shines.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clarity"&gt;
  &lt;/a&gt;
  Clarity
&lt;/h2&gt;

&lt;p&gt;Often, I find mutation to be clearer. One example I like to use is if we need to create a new array with one of the elements in the array updated. When working in React, I have often seen the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;updateItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;setItems&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newItems&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this works fine, but it's kind of confusing and probably a bit challenging to read for someone who isn't fluent in JavaScript array methods.&lt;/p&gt;

&lt;p&gt;A more readable alternative, in my opinion, is to simply create a copy of the initial array and then mutate the appropriate index of the copied array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;updateItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nx"&gt;newItems&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;setItems&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newItems&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I think that's &lt;em&gt;a lot&lt;/em&gt; clearer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#working-with-complex-structures"&gt;
  &lt;/a&gt;
  Working with complex structures
&lt;/h2&gt;

&lt;p&gt;One of my favorite examples of where mutability shines is building a tree structure. &lt;a href="https://typeofnan.dev/an-easy-way-to-build-a-tree-with-object-references/"&gt;You can do this in O(n) time&lt;/a&gt; all thanks to references and mutation.&lt;/p&gt;

&lt;p&gt;Consider the following array thay represents a flattened tree:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;parentId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;62&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;81&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;parentId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;parentId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;parentId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;63&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;parentId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;62&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;parentId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;86&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;87&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;parentId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;86&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;62&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;parentId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;74&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;86&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;parentId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;74&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each node has an &lt;code&gt;id&lt;/code&gt; and then the &lt;code&gt;id&lt;/code&gt; of its parent node (&lt;code&gt;parentId&lt;/code&gt;). Our code to build a tree can be as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Get array location of each ID&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;idMapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Handle the root element&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentId&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// Use our mapping to locate the parent element in our data array&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;parentEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;idMapping&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentId&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;
  &lt;span class="c1"&gt;// Add our current el to its parent's `children` array&lt;/span&gt;
  &lt;span class="nx"&gt;parentEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...(&lt;/span&gt;&lt;span class="nx"&gt;parentEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;[]),&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How this works is we first loop through the &lt;code&gt;data&lt;/code&gt; array once to create a mapping of where each element is in the array. Then, we do another pass through the &lt;code&gt;data&lt;/code&gt; array and, for each element, we use the mapping to locate its parent in the array. Finally, we &lt;em&gt;mutate&lt;/em&gt; the parent's &lt;code&gt;children&lt;/code&gt; property to add the current element to it.&lt;/p&gt;

&lt;p&gt;If we &lt;code&gt;console.log(root)&lt;/code&gt;, we end up with the full tree:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  id: 74,
  parentId: null,
  children: [
    {
      id: 62,
      parentId: 74,
      children: [{ id: 56, parentId: 62 }, { id: 63, parentId: 62 }],
    },
    {
      id: 86,
      parentId: 74,
      children: [
        {
          id: 80,
          parentId: 86,
          children: [{ id: 81, parentId: 80 }, { id: 76, parentId: 80 }],
        },
        { id: 87, parentId: 86 },
      ],
    },
  ],
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's really nifty and rather challenging to accomplish without mutation.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#key-takeaways-about-object-mutation"&gt;
  &lt;/a&gt;
  Key takeaways about object mutation
&lt;/h1&gt;

&lt;p&gt;Over time, I have come to realize that there are a few key points to understand with respect to mutation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Often we blame mutation for our own lack of understanding about how references work.&lt;/li&gt;
&lt;li&gt;Popular front-end frameworks like React rely on comparing object references for render logic. Mutating older versions of state causes all sorts of headaches and hard-to-understand bugs. Instead of recognizing the nuance, developers will often avoid mutation entirely anywhere within React code.&lt;/li&gt;
&lt;li&gt;Mutation is an &lt;em&gt;excellent&lt;/em&gt; tool when its usage is clearly communicated.&lt;/li&gt;
&lt;li&gt;Mutation is an &lt;em&gt;excellent&lt;/em&gt; tool if &lt;em&gt;localized&lt;/em&gt; (e.g., the mutated object never escapes a function).&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>node</category>
    </item>
    <item>
      <title>How I Create Dazzling Dashboards Purely in Python.</title>
      <author>Thuwarakesh Murallie</author>
      <pubDate>Mon, 29 Nov 2021 13:23:20 +0000</pubDate>
      <link>https://dev.to/thuwarakesh/how-i-create-dazzling-dashboards-purely-in-python-2h4e</link>
      <guid>https://dev.to/thuwarakesh/how-i-create-dazzling-dashboards-purely-in-python-2h4e</guid>
      <description>&lt;p&gt;I don't have to convince you why we need an interactive dashboard. But what most people don't know is that they don't have to buy expensive licenses of &lt;em&gt;Tableau&lt;/em&gt; or &lt;em&gt;PowerBI&lt;/em&gt;. You don't have to enroll in a &lt;em&gt;JavaScript&lt;/em&gt; course either.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Dash&lt;/em&gt; apps allow you to build interactive dashboards purely in Python. Interestingly, it could reach heights that popular BI platforms can not. Also, you can host it on your servers and your terms.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#why-dash-why-not-tableau-power-bi-or-some-javascript-library"&gt;
  &lt;/a&gt;
  Why Dash? Why not Tableau, Power BI, or some JavaScript library?
&lt;/h2&gt;

&lt;p&gt;BI Platforms such as Tableau and PowerBI do a fantastic job. It allows even non-technical managers to do data exploration themselves. I don't have complaints about them.&lt;/p&gt;

&lt;p&gt;They are excellent tools to perform analysis on read-only datasets. But in large data science project, you'll have to perform complex actions. For instance, you have to trigger a backend function and start the model retraining.&lt;/p&gt;

&lt;p&gt;In such cases, my best solution was to build a web app from scratch. JavaScript data visualization libraries such as HighCharts are excellent tools for this. They have callbacks for almost every possible user action. I use them to send data back to the server and control it better.&lt;/p&gt;

&lt;p&gt;But this wasn't a walk in the park. My data science team is exceptional in Python and R but not in &lt;em&gt;JavaScript. N*ot on web frameworks such as *Django&lt;/em&gt; either. And that's not enough; to build modern web apps, you need &lt;em&gt;frontend web frameworks such as React&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;As we progressed, we realized the harsh truth. Every new technology in our stack inflates the difficulty exponentially.&lt;/p&gt;

&lt;p&gt;And we were fortunate to find Dash.&lt;/p&gt;

&lt;p&gt;If you're looking for a lightweight alternative, check out &lt;em&gt;&lt;a href="https://towardsdatascience.com/how-to-create-stunning-web-apps-for-your-data-science-projects-c7791102134e"&gt;Streamlit&lt;/a&gt;&lt;/em&gt;. Read along if you need a flexible, complete Python dashboarding solution.&lt;/p&gt;

&lt;p&gt;Now, this is how I create dazzling dashboards in Python.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#building-your-first-dashboard-in-python-in-less-than-1-minute"&gt;
  &lt;/a&gt;
  Building your first dashboard in Python (in less than 1 minute.)
&lt;/h2&gt;

&lt;p&gt;Yes, building dashboards in Dash is that simple. Install Pandas and dash with the following command, then start the timer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;dash pandas
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your project directory, create a file called app.py with the below content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dash&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dash_core_components&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;dcc&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dash_html_components&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;plotly.express&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;px&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dash&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"https://raw.githubusercontent.com/ThuwarakeshM/geting-started-with-plottly-dash/main/life_expectancy.csv"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"GDP"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Life expectancy"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Population"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"continent"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;hover_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Country"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;log_x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;size_max&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Div&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;dcc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Graph&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"life-exp-vs-gdp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Showtime! let's run the dashboard with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python app.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll see it starting a server at port 8050. If you visit &lt;a href="http://127.0.0.1:8050/"&gt;http://127.0.0.1:8050&lt;/a&gt; on your browser, you'd see the dashboard that looks like the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FNH_y1ba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2AZiECRK9wLAhPP_4pVYCcEQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FNH_y1ba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2AZiECRK9wLAhPP_4pVYCcEQ.png" alt="Dashboard created in Python only." title="Dashboard created in Python" width="875" height="393"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you've created a similar app using JavaScript libraries, you'd appreciate the difference. Dash saves a ton of time by eliminating an incredible amount of boilerplate code. Even popular BI tools have lots of prework to get to this point.&lt;/p&gt;

&lt;p&gt;Awesome. That's quite a thing for inspiring you to build dashboards. But you might have realized that it's not dazzling yet. In the following sections, we'll discuss how&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we can improve the layout;&lt;/li&gt;
&lt;li&gt;add interactions and callbacks to the widgets, and;&lt;/li&gt;
&lt;li&gt;style the app further.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this, you can create the dazzling dashboard you need. Browse the &lt;a href="https://dash.gallery/Portal/"&gt;Plottly Dash gallery&lt;/a&gt; for more of such dashboards for inspiration.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#adding-more-widgets-to-the-layout"&gt;
  &lt;/a&gt;
  Adding more widgets to the layout.
&lt;/h2&gt;

&lt;p&gt;Dash follows an HTML-like element hierarchy. You can attach any of Dash's HTML components or Core components to the layout property of the app. The layout property is the root of a Dash app's element hierarchy.&lt;/p&gt;

&lt;p&gt;Core components are a pre-configured set of widgets such as dropdowns and sliders.&lt;/p&gt;

&lt;p&gt;Dash's HTML components cover almost every HTML element available. To create a heading, you can use &lt;code&gt;html.H1&lt;/code&gt; and &lt;code&gt;html.P&lt;/code&gt;to create a paragraph. The children attribute allows you to nest one HTML component within another.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;   
        &lt;span class="c1"&gt;# Dropdown to filter developing/developed country.
&lt;/span&gt;        &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="n"&gt;dcc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dropdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"status-dropdown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()],&lt;/span&gt; &lt;span class="c1"&gt;# Create available options from the dataset
&lt;/span&gt;                &lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="c1"&gt;# Dropdown to filter countries with average schooling years.
&lt;/span&gt;        &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="n"&gt;dcc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dropdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"schooling-dropdown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
                        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                            &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Schooling&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Schooling&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                        &lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="c1"&gt;# add options from the dataset.
&lt;/span&gt;                &lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="c1"&gt;# Placeholder to render teh chart.
&lt;/span&gt;        &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dcc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Graph&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"life-exp-vs-gdp"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"chart"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

        &lt;span class="c1"&gt;# Slider to select year.
&lt;/span&gt;        &lt;span class="n"&gt;dcc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Slider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;"year-slider"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="c1"&gt;# dynamically select minimum and maximum years from the dataset.
&lt;/span&gt;            &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;marks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)},&lt;/span&gt; &lt;span class="c1"&gt;# set markers at one year interval.
&lt;/span&gt;            &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, we've included three core components --- two dropdowns and a slider. These controller elements allow us to filter the chart data and create interactivity in the next section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-interactivity-with-component-callbacks"&gt;
  &lt;/a&gt;
  Adding interactivity with component callbacks.
&lt;/h2&gt;

&lt;p&gt;Dash's core components have callbacks to control the response for a user action. This feature is remarkable of why Dash apps outshine popular BI platforms.&lt;/p&gt;

&lt;p&gt;You can use this call back to control a chart re-rendering or to trigger a heavy analysis too. Check out my article on &lt;a href="https://towardsdatascience.com/how-to-serve-massive-computations-using-python-web-apps-590e51624bc6"&gt;performing massive computation&lt;/a&gt; to use Dash apps along with Celery.&lt;/p&gt;

&lt;p&gt;Here in this post, we use callbacks to filter the chart data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;Output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"life-exp-vs-gdp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"figure"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"year-slider"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"status-dropdown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"schooling-dropdown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;selected_year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;country_status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;schooling&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;filtered_dataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;selected_year&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;schooling&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;filtered_dataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filtered_dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;filtered_dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Schooling&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;schooling&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;country_status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;filtered_dataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filtered_dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;filtered_dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;country_status&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;filtered_dataset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"GDP"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Life expectancy"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Population"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"continent"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;hover_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Country"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;log_x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;size_max&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fig&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The callback function is annotated with the @app.callback decorator. The first argument of this decorator is the Output component in the element tree. We need to specify the id of that element and the property we need to change. This property will change to the return value of the callback function.&lt;/p&gt;

&lt;p&gt;Then the decorated will accept any number of input arguments. Each will be tied to a core component in the same way we attached the output component. We can specify the id of the element and the property that emits the change value. Usually, this would be 'value.'&lt;/p&gt;

&lt;p&gt;Each input in the decorator should have a respective argument in the callback function's definition.&lt;/p&gt;

&lt;p&gt;Finally, we moved the figure component inside the callback function. Every time we run the callback function, it creates a new figure instance and updates the UI.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#styling-to-the-dashboard"&gt;
  &lt;/a&gt;
  Styling to the dashboard.
&lt;/h2&gt;

&lt;p&gt;You can use the inline styling options available in Dash app. But with little CSS, you could have spectacular results.&lt;/p&gt;

&lt;p&gt;In-dash, you can style elements in three different ways.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inline-styling"&gt;
  &lt;/a&gt;
  Inline styling
&lt;/h3&gt;

&lt;p&gt;Every Dash component accepts a style argument. You can pass a dictionary and style any element. This is the most convenient way to style a Dash app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;H1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"My Dazzling Dashboard"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"#011833"&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#local-stylesheets"&gt;
  &lt;/a&gt;
  Local stylesheets.
&lt;/h3&gt;

&lt;p&gt;Alternatively, you can pass a class name attribute to any Dash component and use a separate CSS file to style it. You should place this CSS file inside an asset folder in your project directory. Dash will automatically pick it and apply its styles to the components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="c1"&gt;# - app.py
# - assets/
#     |-- style.css
&lt;/span&gt;
&lt;span class="c1"&gt;# style.css
# -----------------------------------------
# .title { color: #011833 }
&lt;/span&gt;
&lt;span class="c1"&gt;# app.py
&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;H1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"My Dazzling Dashboard"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#external-stylesheets"&gt;
  &lt;/a&gt;
  External stylesheets.
&lt;/h3&gt;

&lt;p&gt;You can also use stylesheets from the internet. For instance, dash has this preconfigured stylesheet that comes with convenient utility classes. You can specify the style sheet and use its class names in elements to make them beautiful.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;external_stylesheets&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"https://codepen.io/chriddyp/pen/bWLwgP.css"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Alternative way
&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append_css&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="s"&gt;"external_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"https://codepen.io/chriddyp/pen/bWLwgP.css"&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the complete styled source code of the application. We've used a local stylesheet and organized the HTML in a way to support styling. You can find the complete code and the local stylesheet in this &lt;a href="https://github.com/ThuwarakeshM/geting-started-with-plottly-dash"&gt;GitHub repository&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dash&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dash_core_components&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;dcc&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dash_html_components&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dash_html_components.Label&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Label&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pandas.io.formats&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;plotly.express&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;px&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dash.dependencies&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Output&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"https://raw.githubusercontent.com/ThuwarakeshM/geting-started-with-plottly-dash/main/life_expectancy.csv"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"background"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"#011833"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"#7FDBFF"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;H1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;"My Dazzling Dashboard"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="p"&gt;[&lt;/span&gt;
                        &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Developing Status of the Country"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="n"&gt;dcc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dropdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                            &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"status-dropdown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
                                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                            &lt;span class="p"&gt;],&lt;/span&gt;
                            &lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"dropdown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="p"&gt;[&lt;/span&gt;
                        &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Average schooling years grater than"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="n"&gt;dcc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dropdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                            &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"schooling-dropdown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
                                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                    &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Schooling&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Schooling&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                                &lt;span class="p"&gt;)&lt;/span&gt;
                            &lt;span class="p"&gt;],&lt;/span&gt;
                            &lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"dropdown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dcc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Graph&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"life-exp-vs-gdp"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"chart"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;dcc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Slider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;"year-slider"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;marks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)},&lt;/span&gt;
            &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;Output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"life-exp-vs-gdp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"figure"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"year-slider"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"status-dropdown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"schooling-dropdown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;selected_year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;country_status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;schooling&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;filtered_dataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;selected_year&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;schooling&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;filtered_dataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filtered_dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;filtered_dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Schooling&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;schooling&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;country_status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;filtered_dataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filtered_dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;filtered_dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;country_status&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;filtered_dataset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"GDP"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Life expectancy"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Population"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"continent"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;hover_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Country"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;log_x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;size_max&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update_layout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;plot_bgcolor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"background"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="n"&gt;paper_bgcolor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"background"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="n"&gt;font_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fig&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your web app refreshes as you update your code with the above. And it may look like the below --- your first version of a dazzling dashboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2JeExxeo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/750/1%2A5oTQlMoKLFceHv--GjpYKQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2JeExxeo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/750/1%2A5oTQlMoKLFceHv--GjpYKQ.gif" alt="Screencast of a basic styled Plotly Dash app." title="Dashboard created in Plotly Dash -- Python" width="600" height="338"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://medium.com/u/5fdd6522cd45?source=post_page-----28a3bb83702c--------------------------------"&gt;Plotly&lt;/a&gt;, Dash apps are an incredible tool for Python developers. Since most data science teams are not specializing in JavaScript, building dashboards with Dash saves a ton of their time.&lt;/p&gt;

&lt;p&gt;We can use Tableau, PowerBI, and similar BI platforms for data exploration and visualization. But Dash apps outshine them as they tightly integrate with the backend code.&lt;/p&gt;

&lt;p&gt;In this article, we explored the surface of Dash apps. I trust this would've given you the kickstart to build outstanding dashboards without worrying about scary technology stacks.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading friend! Say Hi to me on &lt;a href="https://www.linkedin.com/in/thuwarakesh/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://twitter.com/Thuwarakesh"&gt;Twitter&lt;/a&gt;, and &lt;a href="https://thuwarakesh.medium.com/subscribe"&gt;Medium&lt;/a&gt;. I’ll break the ice for you.&lt;/p&gt;

&lt;p&gt;Not a Medium member yet? Please use this link to &lt;a href="https://thuwarakesh.medium.com/membership"&gt;&lt;strong&gt;&lt;em&gt;become a member&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; because, at no extra cost for you, I earn a small commission for referring you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As a next step, I strongly recommend exploring Dash's documentation page and their example gallery.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>python</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
