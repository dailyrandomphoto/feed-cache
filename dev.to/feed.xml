<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What's your PC Specification?</title>
      <author>Adeleye Ayodeji</author>
      <pubDate>Fri, 20 Aug 2021 08:54:07 +0000</pubDate>
      <link>https://dev.to/adeleyeayodeji/what-s-your-pc-specification-4fmg</link>
      <guid>https://dev.to/adeleyeayodeji/what-s-your-pc-specification-4fmg</guid>
      <description>&lt;p&gt;Mine is ASUS G73Jh-B1 17.3&lt;/p&gt;

&lt;p&gt;2.0GHz Intel Core i7-2630QM Quad-Core&lt;br&gt;
14GB RAM&lt;br&gt;
1.5TB (500GB SSD x 1TB SSD) SSD&lt;br&gt;
Blu-ray ROM with DVD Burning&lt;br&gt;
Nvidia Geforce GTX 460M&lt;br&gt;
17.3" Widescreen Display&lt;br&gt;
Integrated Camera and Microphone&lt;br&gt;
Bluetooth, 802.11b/g/n Wi-Fi&lt;br&gt;
Windows 10 Pro (64-bit)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>React Environment Variables</title>
      <author>Suprabha</author>
      <pubDate>Fri, 20 Aug 2021 08:48:49 +0000</pubDate>
      <link>https://dev.to/suprabhasupi/react-environment-variables-k0n</link>
      <guid>https://dev.to/suprabhasupi/react-environment-variables-k0n</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-env"&gt;
  &lt;/a&gt;
  &lt;span&gt;W&lt;/span&gt;hat is ENV ü§î
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;env&lt;/strong&gt; file to store your sensitive credentials like API keys.&lt;br&gt;
Environment variables can also help you to store your API link in one location so that you don't have to change the link in each file manually.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#do-you-have-to-install-any-plugin-to-use-env-file"&gt;
  &lt;/a&gt;
  Do you have to install any plugin to use ENV file üôÑ
&lt;/h3&gt;

&lt;p&gt;No, A React frontend connected to a Node backend is a rock-solid combination for any application you want to build. So you can create and use &lt;code&gt;.env&lt;/code&gt; file without installing any plugins.&lt;/p&gt;

&lt;p&gt;Usually, you create one &lt;code&gt;.env&lt;/code&gt; file which triggers for local, integration and production.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-if-you-want-to-create-different-keys-for-integration-and-production"&gt;
  &lt;/a&gt;
  What if you want to create different Keys for integration and production
&lt;/h3&gt;

&lt;p&gt;If you have to use different keys for integration and production, in that case you have to customise your environment.&lt;/p&gt;

&lt;p&gt;Now, let's see what are we going to cover in this article:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Customise Environment Variable for build environment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Use Environment variable in HTML&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-customise-environment-variable-for-build-environment"&gt;
  &lt;/a&gt;
  1. Customise Environment Variable for build environment
&lt;/h3&gt;

&lt;p&gt;There are already few environment which React supports like &lt;code&gt;.env.development&lt;/code&gt;, &lt;code&gt;.env.test&lt;/code&gt;, &lt;code&gt;.env.production&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;.env&lt;/code&gt; files can be used:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;.env&lt;/code&gt;: Default&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.env.local&lt;/code&gt;: Local overrides. This file is loaded for all environments except test&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.env.development&lt;/code&gt;, &lt;code&gt;.env.test&lt;/code&gt;, &lt;code&gt;.env.production&lt;/code&gt;: Environment-specific settings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can create your own &lt;code&gt;env&lt;/code&gt; file which is not added in react. You need to install one package called &lt;code&gt;env-cmd&lt;/code&gt; for setup the custom environment.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a file called &lt;code&gt;.env.integration&lt;/code&gt; where &lt;code&gt;.env&lt;/code&gt; exists&lt;/li&gt;
&lt;li&gt;Set the environment variable which you wanted for integration in &lt;code&gt;.env.integration&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;REACT_APP_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;XXXX&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;env-cmd&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;cmd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Add a new script to your &lt;code&gt;package.json&lt;/code&gt;, building with your new environment:&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"build:integration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"env-cmd -f .env.integration yarn run build"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now you can run the integration command &lt;code&gt;yarn run build:integration&lt;/code&gt; to build with the integration environment config.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;üìù Variables in &lt;code&gt;.env.production&lt;/code&gt; will be used as fallback because &lt;code&gt;NODE_ENV&lt;/code&gt; will always be set to production for a build.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-if-you-want-to-install-devdependencies-when-nodeenvproduction"&gt;
  &lt;/a&gt;
  What if you want to install devDependencies when NODE_ENV=production ü§î
&lt;/h3&gt;

&lt;p&gt;As you know if &lt;code&gt;NODE_ENV=production&lt;/code&gt;, then devDependencies packages will not get installed. &lt;/p&gt;

&lt;p&gt;However, You can install the devDependencies in &lt;code&gt;NODE_ENV=production&lt;/code&gt; with setting  &lt;code&gt;yarn install --production=false&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;Checkout this &lt;a href="https://classic.yarnpkg.com/en/docs/cli/install#toc-yarn-install-production-true-false"&gt;Link&lt;/a&gt; for more information.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-use-env-variables-in-html"&gt;
  &lt;/a&gt;
  2. Use ENV variables in HTML
&lt;/h3&gt;

&lt;p&gt;You only use environment variable in JavaScript files. But what when you need to use environment variable in HTML, It can be Google Map keys or any secret keys of script. &lt;/p&gt;

&lt;p&gt;You can access the environment variables in the index.html, just to remember that the env variable should be prefix with &lt;code&gt;REACT_APP_&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;%REACT_APP_NAME%&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Define permanent environment variables in &lt;code&gt;.env&lt;/code&gt; file in root of the project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.env:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;REACT_APP_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;ProjectName&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üìù Remember to restart the server when you make any changes in &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference üßê
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://create-react-app.dev/docs/adding-custom-environment-variables/"&gt;CRA adding custom environment variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://create-react-app.dev/docs/deployment/#customizing-environment-variables-for-arbitrary-build-environments"&gt;CRA deployment docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://create-react-app.dev/docs/deployment/#customizing-environment-variables-for-arbitrary-build-environments"&gt;CRA env variables for build env&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#summary-%E2%85%80"&gt;
  &lt;/a&gt;
  Summary ‚ÖÄ
&lt;/h3&gt;

&lt;p&gt;If you want to add any other env which is not mentioned in react app, you have to setup env-cmd and can use it. Also, you can use¬†.env variables in HTML file using REACT_APP_&lt;/p&gt;

&lt;p&gt;Thanks for reading the article ‚ù§Ô∏è&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/suprabhasupi"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aDe0OdcG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/4t25pJE.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        üåü &lt;a href="https://twitter.com/suprabhasupi"&gt; Twitter&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        üìö &lt;a href="https://gum.co/css-pseudo-class-elements"&gt; Ebooks&lt;/a&gt;
      &lt;/td&gt;
&lt;td&gt;
        üåü &lt;a href="https://www.instagram.com/suprabhasupi/"&gt; Instagram&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Laravel Tailwind Boilerplate and Vue ready</title>
      <author>Marc Garcia Torrent</author>
      <pubDate>Fri, 20 Aug 2021 07:28:42 +0000</pubDate>
      <link>https://dev.to/magarrent/laravel-tailwind-boilerplate-and-vue-ready-3ak2</link>
      <guid>https://dev.to/magarrent/laravel-tailwind-boilerplate-and-vue-ready-3ak2</guid>
      <description>&lt;p&gt;Happy Friday!!&lt;/p&gt;

&lt;p&gt;This week I was working with a simple GitHub repo to save me time when I start new Laravel projects.&lt;/p&gt;

&lt;p&gt;The repo it's called &lt;a href="https://github.com/magarrent/laravel-tailwind-boilerplate-vue-ready"&gt;Laravel Tailwind Boilerplate &amp;amp; Vue ready&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It consist in a Initial template to start your Laravel projects from scratch.&lt;/p&gt;

&lt;p&gt;It's very simple! There are not any extra functionality, no auth, no APIs, anything!&lt;br&gt;
Just a initial template to save time installing initial packages and configurint tailwind, Scss and Vue assets.&lt;/p&gt;

&lt;p&gt;Let me show the GitHub and how it works! Thank you and have a great weekend!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/magarrent/laravel-tailwind-boilerplate-vue-ready"&gt;https://github.com/magarrent/laravel-tailwind-boilerplate-vue-ready&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d81xu0qz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/6561770/129886774-bf666556-28df-40b7-9007-726e088f1828.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d81xu0qz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/6561770/129886774-bf666556-28df-40b7-9007-726e088f1828.png" alt="Laravel Tailwind Boilerplate - Vue Ready"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--whwn4QRQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/license-MIT-brightgreen.svg%3Fstyle%3Dflat-square" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--whwn4QRQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/license-MIT-brightgreen.svg%3Fstyle%3Dflat-square" alt="Software License"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/magarrent"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kziPr3-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt='"Buy Me A Coffee"'&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Laravel 8.&lt;/strong&gt;*&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Tailwind 2.1 Ready and Loaded&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;@tailwindcss/typography&lt;/li&gt;
&lt;li&gt;@tailwindcss/forms&lt;/li&gt;
&lt;li&gt;Dark mode ready&lt;/li&gt;
&lt;li&gt;All variants enabled by default&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vue 2, Vuex, Vue-Router, Vue-Axios - Ready&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scss / Sass ready&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;üåü Give a repo Star :)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Just &lt;a href="https://github.com/magarrent/laravel-tailwind-boilerplate-vue-ready/releases"&gt;download the latest ZIP release&lt;/a&gt; of the repository and init the laravel project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="c"&gt;# install npm dependencies&lt;/span&gt;

npm run dev &lt;span class="c"&gt;# compile assets&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;composer &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="c"&gt;# install php dependencies&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#assets"&gt;
  &lt;/a&gt;
  Assets
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;resources/
‚î£ css/
‚îÉ ‚îó tailwind.css &lt;span class="c"&gt;# Import tailwind classes&lt;/span&gt;
‚î£ js/
‚îÉ ‚î£ components/
‚îÉ ‚îÉ ‚îó App.vue &lt;span class="c"&gt;# Default App.vue for initial Vue config&lt;/span&gt;
‚îÉ ‚î£ app.js &lt;span class="c"&gt;# Vue init &amp;amp; configuration&lt;/span&gt;
‚î£ scss/
‚îÉ ‚îó custom.scss &lt;span class="c"&gt;#¬†Custom scss file for your peoject&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Webpack Mix configuration&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mix&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resources/js/app.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;public/js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="c1"&gt;// Vue template&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postCss&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resources/css/tailwind.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;public/css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="c1"&gt;// Tailwind css loaded&lt;/span&gt;
        &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tailwindcss&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resources/scss/custom.scss&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;public/css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Custom Scss file&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#libs-used"&gt;
  &lt;/a&gt;
  Libs Used
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://laravel.com"&gt;Laravel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwindcss.com"&gt;TailwindCss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vuex.vuejs.org/"&gt;Vuex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://router.vuejs.org/"&gt;Vue-Router&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/vue-axios"&gt;Vue-Axios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://router.vuejs.org/"&gt;Vue-Router&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sass-lang.com/"&gt;Scss/Sass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#license"&gt;
  &lt;/a&gt;
  License
&lt;/h2&gt;

&lt;p&gt;The Laravel framework is open-sourced software licensed under the &lt;a href="https://opensource.org/licenses/MIT"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>tailwindcss</category>
      <category>vue</category>
    </item>
    <item>
      <title>P2P Crypto Exchange Script</title>
      <author>RadinDev</author>
      <pubDate>Fri, 20 Aug 2021 07:11:36 +0000</pubDate>
      <link>https://dev.to/radindev1/p2p-crypto-exchange-script-1k9o</link>
      <guid>https://dev.to/radindev1/p2p-crypto-exchange-script-1k9o</guid>
      <description>&lt;p&gt;Peer-to-peer, abbreviated P2P, is a collection of interconnected devices that store and share specific files and documents. Each of these devices or systems is called a node. In this structure, each node has the same power and tasks.&lt;br&gt;
But the term p2p or peer-to-peer has taken on a different color and flavor in financial technologies. It is usually used to refer to the exchange of cryptocurrencies on a person-to-person and decentralized basis. A &lt;a href="https://radindev.com/p2p-cryptocurrency-exchange-software/"&gt;p2p crypto exchange software&lt;/a&gt; records the bid price of the buyer and the seller and, if they match, connects them to make the exchange. Some of the more advanced platforms have even provided a platform for automatic borrowing based on smart contracts.&lt;br&gt;
Let's see where P2P was first used.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-p2p-networks-work"&gt;
  &lt;/a&gt;
  How P2P networks work:
&lt;/h2&gt;

&lt;p&gt;It was stated above that a p2p system is an aggregate of interconnected systems that have the same tasks and power. There is no administrator or admin or supervisor in this system because each node keeps a copy of the file and plays two roles simultaneously. One server and one client.&lt;br&gt;
So each node can download files from other nodes. While in a centralized system, client devices download information from a centralized server.&lt;br&gt;
In P2P networks, networked devices share files stored on their drives. Using software designed to mediate data sharing, users can search for other devices on the web, find and download files. Once the user downloads the file, it can act as the source of that file.&lt;br&gt;
Simply put, a node acts as a client when downloading from other sources, but when it acts as a server, it is a resource from which other nodes can download files. (This can happen at the same time.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#p2p-history"&gt;
  &lt;/a&gt;
  P2P history:
&lt;/h2&gt;

&lt;p&gt;For the first time in the '80s, after introducing computers, one of the first examples of a user network was Internet Relay Chat, which was a way to send text and chat between two people.&lt;br&gt;
In 1999, Napster introduced a P2P network for music sharing. This service made it possible for anyone to share their favorite music with others.&lt;br&gt;
In 2000, a project called Gnutella started decentralized peer-to-peer sharing, which is still ongoing. Gnutella allows users to access folders on other systems.&lt;br&gt;
Finally, it was in 2009 that Satoshi Nakamoto introduced the Bitcoin network as a peer-to-peer network. Perhaps the most famous sentence in the world about P2P is the first sentence of Bitcoin White Paper:&lt;br&gt;
Bitcoin: A Peer-to-Peer Electronic Cash System&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PHqWt6j---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nm2qfkp5l59js3be45j.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PHqWt6j---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nm2qfkp5l59js3be45j.jpg" alt="bitcoin white paper"&gt;&lt;/a&gt;&lt;br&gt;
Most people have never heard of P2P before Bitcoin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-p2p-networks"&gt;
  &lt;/a&gt;
  Advantages of P2P networks:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Elimination of intermediaries: From the point of view of some economic actors, probably the most essential advantage of P2P is the elimination of intermediaries such as banks or financial and credit institutions.&lt;br&gt;
In this way, digital currency is transferred directly from one person's wallet to another, and no bank in the middle plays the role of intermediary.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;High security: Many others believe that much more security of this system than centralized client-server systems is the most significant advantage of p2p. It is P2P that protects digital currencies such as bitcoin against Dos attacks. Dos is a type of cyber attack that takes the server off the network and out of the reach of users. However, since peer-to-peer information systems are divided among many nodes, they are resistant to these attacks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avoid censorship: Avoiding censorship is another benefit of peer-to-peer networks. Because no one has the permission and power to block users' accounts, some people, such as merchants, see cryptocurrencies as a surefire way to prevent government payments from being blocked.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-p2p-networks"&gt;
  &lt;/a&gt;
  Disadvantages of P2P networks:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Scalability: Because distributed offices must be updated at each node instead of the central server, adding any transaction in the blockchain requires a great deal of computing power. While this increases security, it dramatically reduces efficiency and is one of the main obstacles to scalability and widespread acceptance. However, blockchain encoders and developers are exploring options that may be used as scalability solutions. Prominent examples are the Lightning network, the atrium plasma, and the Wembley protocol.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hard fork attacks: Another potential limitation is related to seizures during a hard fork. Because most blockchains are decentralized and open-source, nodes can freely copy and modify the code, detach from the main chain, and form a new parallel network. A hard fork is perfectly normal and is not a threat in itself. But if security measures are not taken properly, both chains will be vulnerable to replay attacks.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In addition, the distributed nature of P2P networks makes it difficult to control and regulate them. For example, several P2P programs and companies have engaged in illegal activities and copyright infringement.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unstructured-p2p-networks"&gt;
  &lt;/a&gt;
  Unstructured P2P networks
&lt;/h2&gt;

&lt;p&gt;In unstructured P2P networks, there is no specific organization of nodes. In this network, participants communicate with each other randomly. These systems are resistant to high churn activity (i.e., multiple nodes frequently joining and exiting the web).&lt;br&gt;
Although this type of network is easier to build, unstructured P2P grids may require more CPU and memory because search queries are sent to as many people as possible or so-called peers. These requests will fill the network, especially if a small number of nodes provide the desired content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#structured-p2p-networks"&gt;
  &lt;/a&gt;
  Structured P2P networks
&lt;/h2&gt;

&lt;p&gt;Structured P2P networks have an organized architecture. This architecture allows nodes to search for files effectively, even if the content is not widely available. In most cases, this is done using hash functions that facilitate database search.&lt;br&gt;
While structured networks may be more efficient, they are usually more centralized and require higher operating and maintenance costs. Of course, structured networks have less resistance when faced with high churn activity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hybrid-or-hybrid-p2p-networks"&gt;
  &lt;/a&gt;
  Hybrid or hybrid P2P networks
&lt;/h2&gt;

&lt;p&gt;P2P hybrid networks combine the typical client-server (client-server) model with some aspects of one-to-one architecture. For example, a central server may be designed to facilitate communication between peers or individuals.&lt;br&gt;
This network has a better overall performance compared to the other P2P networks mentioned. Usually, some of the main advantages of each approach are combined with the other, and finally, a considerable degree of efficiency and decentralization is achieved.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-5-p2p-cryptocurrency-exchange-platforms"&gt;
  &lt;/a&gt;
  top 5 p2p cryptocurrency exchange platforms:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#paxful"&gt;
  &lt;/a&gt;
  Paxful:
&lt;/h3&gt;

&lt;p&gt;One of the world's leading peer-to-peer exchange currency brands, founded in 2015, is Paxful, which has many fans worldwide.&lt;br&gt;
Paxful has made various payment methods available to its users; methods such as Bank Transfer, CashU, Paypal, Western Union.&lt;br&gt;
The cost that Paxful charges for exchanges are equal to 1% of the total, which is the seller's responsibility. In other words, buying a cryptocurrency in Paxful will not cost you extra.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N09dFiKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qtfrxxhb7yataqwm75a.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N09dFiKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qtfrxxhb7yataqwm75a.jpg" alt="paxful,a p2p crypto exchange software"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#localbitcoins"&gt;
  &lt;/a&gt;
  Localbitcoins:
&lt;/h3&gt;

&lt;p&gt;The Finnish company, headquartered in Helsinki, started in 2012. One of the honors of this company is it's most popular in 2017.&lt;br&gt;
The interesting point is that when buying a Cryptocurrency from LocalBitcoins site and the usual methods that Paxful also offers, you can give money to the other party in cash and buy a Cryptocurrency. (Of course, this feature was removed in 2019.)&lt;br&gt;
The cost of Bitcoin trading commission on the LocalBitcoins site is zero.&lt;br&gt;
It should be noted that this website has been hacked once, and it does not make sense to keep your bitcoins in its wallet. Be sure to transfer the bitcoins to your wallet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zL9Vw4U3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srgbspotjktaefw606v0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zL9Vw4U3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srgbspotjktaefw606v0.jpg" alt="localbitcoins as a cryptocurrency exchange platform"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#binance-p2p"&gt;
  &lt;/a&gt;
  Binance P2P:
&lt;/h3&gt;

&lt;p&gt;Probably the most well-known platform for currency exchange is Binance Exchange. The company was founded in 2017 by Changpen Zhao and is currently the most prominent digital currency exchange globally.&lt;br&gt;
The large company's service to most countries globally and support for more than 31 different Fiat currencies has multiplied its popularity.&lt;br&gt;
Binance also supports tether, Bitcoin, Binance USD, BNB, Ethereum, and many more cryptocurrencies.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--syQ2Y3xT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id3gl3rgu7gtuoe31vdz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--syQ2Y3xT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id3gl3rgu7gtuoe31vdz.jpg" alt="binance p2p crypto exchange website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wazirx"&gt;
  &lt;/a&gt;
  WazirX:
&lt;/h3&gt;

&lt;p&gt;A few months after the establishment of Binance, the WazirX P2P platform was launched in India and soon became the most trusted peer-to-peer password exchange script.&lt;br&gt;
The main reason for the popularity of this software was that for the first time in the world, it used an automatic p2p matching engine. So instead of choosing the buyer or seller manually, the system does this automatically.&lt;br&gt;
Surprisingly, the exchange cost in WazirX is zero. Isn't that great?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_o-U4Jhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rixno2vylzn9aq2x9rto.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_o-U4Jhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rixno2vylzn9aq2x9rto.jpg" alt="wazirx the best cryptocurrency exchange scrippt is india"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remitano"&gt;
  &lt;/a&gt;
  Remitano:
&lt;/h3&gt;

&lt;p&gt;Remitano was founded in Singapore in the year of its establishment, and with the reputation, it has gained over the years, it has reassured many crypto exchanges.&lt;br&gt;
Remitano's fantastic user interface has had an enormous impact on this much-welcomed platform.&lt;br&gt;
As for the negative points of Remitano, let's say that you have to give one percent of the total amount to the exchange when exchanging the password. You also have to pay a fee when you want to settle the account.&lt;br&gt;
Now, why is it still so popular with all the money it takes from its customers?&lt;br&gt;
That's a good question. Because Remitano has an outstanding level of security and its service is excellent.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gZuQ7sb_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nhux34ghmcyk8b1d9gh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gZuQ7sb_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nhux34ghmcyk8b1d9gh.jpg" alt="remitano, a secure p2p crypto exchange software "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#p2p-crypto-exchange-website-development"&gt;
  &lt;/a&gt;
  p2p &lt;a href="https://radindev.com/cryptocurrency-exchange-development/"&gt;crypto exchange website development&lt;/a&gt;:
&lt;/h2&gt;

&lt;p&gt;The cost of developing and designing p2p software for exchanging bitcoins and other cryptocurrencies depends on many factors.&lt;br&gt;
First, you need to fully determine what features you want to offer your customers and design a complete mind map for it and then put it on paper and discuss with your consultants whether they are efficient or not. Features like:&lt;br&gt;
‚Ä¢ Stop limit&lt;br&gt;
‚Ä¢ Margin order&lt;br&gt;
‚Ä¢ OCO&lt;br&gt;
‚Ä¢ Future order&lt;br&gt;
‚Ä¢ OTC order&lt;br&gt;
‚Ä¢ And much more&lt;br&gt;
Each of these features can have a significant impact on your cost.&lt;br&gt;
For example, adding a stop limit will &lt;strong&gt;increase your cost by 25% of the initial price&lt;/strong&gt;, while &lt;strong&gt;25 working days will be added&lt;/strong&gt; to the time. Or, a margin order adds &lt;strong&gt;up to 40% to your initial cost&lt;/strong&gt; and takes &lt;strong&gt;up to 35 days&lt;/strong&gt;. The figure below shows the approximate price increase of other factors affecting the P2P price.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6R3NCgDO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibpg38qx0z25ldvlm0xu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6R3NCgDO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibpg38qx0z25ldvlm0xu.png" alt="added price of each feature to the crypto exchange development website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition to features, other factors can affect the price, such as:&lt;br&gt;
‚Ä¢ Programming languages ‚Äã‚Äãand technologies used&lt;br&gt;
‚Ä¢ The company you order from&lt;br&gt;
‚Ä¢ Mobile application&lt;br&gt;
‚Ä¢ Multilingualism&lt;br&gt;
‚Ä¢ Crypto payment gateways&lt;/p&gt;

&lt;p&gt;In this article, we tried to provide all the points related to the currency exchange platform development. We hope you find it helpful.&lt;/p&gt;

</description>
      <category>crypto</category>
      <category>blockchain</category>
      <category>p2p</category>
      <category>webdev</category>
    </item>
    <item>
      <title>All you need to know about var, let &amp; const in JavaScript</title>
      <author>MAYANK TYAGI</author>
      <pubDate>Fri, 20 Aug 2021 06:56:26 +0000</pubDate>
      <link>https://dev.to/tmayank860/all-you-need-to-know-about-var-let-const-in-javascript-419h</link>
      <guid>https://dev.to/tmayank860/all-you-need-to-know-about-var-let-const-in-javascript-419h</guid>
      <description>&lt;p&gt;In JavaScript a variable can be defined using the keywords &lt;strong&gt;&lt;code&gt;var&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;let&lt;/code&gt;&lt;/strong&gt;, or &lt;strong&gt;&lt;code&gt;const&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Before we can understand how &lt;strong&gt;&lt;code&gt;var&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;let&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;const&lt;/code&gt;&lt;/strong&gt; differ, we need to understand a computer science-y concept called scope.&lt;br&gt;
Scope essentially means where these variables are available for use. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#global-scope"&gt;
  &lt;/a&gt;
  Global Scope
&lt;/h3&gt;

&lt;p&gt;Variables declared Globally (outside any function) have Global Scope.&lt;br&gt;
Global variables can be accessed from anywhere in a JavaScript program.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#function-scope"&gt;
  &lt;/a&gt;
  Function Scope
&lt;/h3&gt;

&lt;p&gt;Variables declared Locally (inside a function) have Function Scope.&lt;br&gt;
Local variables can only be accessed from inside the function where they are declared.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#block-scope"&gt;
  &lt;/a&gt;
  Block Scope
&lt;/h3&gt;

&lt;p&gt;A block of code is the code between curly braces in JavaScript.&lt;br&gt;
Variables declared inside a block {} have block scope.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Variables declared with the var keyword cannot have Block Scope.&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#var"&gt;
  &lt;/a&gt;
  var
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;var&lt;/code&gt; declarations are globally scoped or function/locally scoped.&lt;br&gt;
The scope is global when a &lt;code&gt;var&lt;/code&gt; variable is declared outside a function.&lt;br&gt;
var is function scoped when it is declared within a function. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7nNVPhk---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qb49do07vurg4qmimhu6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7nNVPhk---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qb49do07vurg4qmimhu6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;variables declared with &lt;code&gt;var&lt;/code&gt; keyword can be re-declared like this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ub1PpauE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lebh7btfvkrrtxclbrm0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ub1PpauE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lebh7btfvkrrtxclbrm0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;or their value can be updated like this &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KKH9Ga1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjq88gk63qzr4kmze6c6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KKH9Ga1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjq88gk63qzr4kmze6c6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#let"&gt;
  &lt;/a&gt;
  let
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;let&lt;/code&gt; is now preferred for variable declaration. It's no surprise as it comes as an improvement to &lt;code&gt;var&lt;/code&gt; declarations. It also solves the problem with &lt;code&gt;var&lt;/code&gt;. Let's consider why this is so.&lt;br&gt;
&lt;code&gt;let&lt;/code&gt; is block-scoped, so a variable declared in a block with &lt;code&gt;let&lt;/code&gt; is only available for use within that block.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRoKLbCu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/45ameiz4jnyhox6ljjyl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRoKLbCu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/45ameiz4jnyhox6ljjyl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;variables declared with &lt;code&gt;let&lt;/code&gt; keyword cannot be re-declared it will throw error like this &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DWnlphm3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3o3gcbyemc6uwk4ioox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DWnlphm3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3o3gcbyemc6uwk4ioox.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;let&lt;/code&gt; variables can be updated within its scope like this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fPNBp9aB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bz9rr9orazr2zx18f8lg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fPNBp9aB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bz9rr9orazr2zx18f8lg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#const"&gt;
  &lt;/a&gt;
  const
&lt;/h3&gt;

&lt;p&gt;Variables declared with the &lt;code&gt;const&lt;/code&gt; maintain constant values. &lt;code&gt;const&lt;/code&gt; declarations share some similarities with &lt;code&gt;let&lt;/code&gt; declarations.&lt;br&gt;
Like let declarations, &lt;code&gt;const&lt;/code&gt; declarations can only be accessed within the block they were declared.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KgGHj5ob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ykn6c5tappk4yfxg6vip.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KgGHj5ob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ykn6c5tappk4yfxg6vip.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But variable declared with &lt;code&gt;const&lt;/code&gt; can neither be re-declared nor re-assigned&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--brVwQE36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hrfd72cq8l7gidjsu9n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--brVwQE36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hrfd72cq8l7gidjsu9n.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DR1P3C5Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s96n4rw5taegaotgd2fv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DR1P3C5Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s96n4rw5taegaotgd2fv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;p&gt;"Don't miss out" Follow my Social handlesüëâ&lt;br&gt;
&lt;a href="https://www.youtube.com/mayanktyagi"&gt;Subscribe my YouTube channelüòä&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.instagram.com/the_cs_guy_/"&gt;Instagramüòä&lt;/a&gt; &lt;strong&gt;||&lt;/strong&gt; &lt;a href="https://twitter.com/tmayank860"&gt;Twitterüòä&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you find this helpful and want to supportüí≤ &lt;a href="https://www.buymeacoffee.com/mayanktyagi"&gt;Buy Me Coffee‚òï&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Some really Amazing opensource programs and internships one should check out - 2021</title>
      <author>Akash Biswas</author>
      <pubDate>Fri, 20 Aug 2021 06:54:31 +0000</pubDate>
      <link>https://dev.to/akshbswas98/some-really-amazing-opensource-programs-and-internships-one-should-check-out-2021-2e2b</link>
      <guid>https://dev.to/akshbswas98/some-really-amazing-opensource-programs-and-internships-one-should-check-out-2021-2e2b</guid>
      <description>&lt;p&gt;Here are some 25+ programs you should definitely check out if you are starting into opensource - &lt;br&gt;
üéàüéàüéà&lt;br&gt;
Reinforcement Learning‚ÄØOpen Source Fest - &lt;a href="https://www.microsoft.com/en-us/research/academic-program/rl-open-source-fest/"&gt;https://www.microsoft.com/en-us/research/academic-program/rl-open-source-fest/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LFX Mentorship Program - &lt;a href="https://mentorship.lfx.linuxfoundatio"&gt;https://mentorship.lfx.linuxfoundatio&lt;/a&gt;...&lt;br&gt;
CNCF Mentoring - &lt;a href="https://mentorship.lfx.linuxfoundation.org/#projects_all"&gt;https://mentorship.lfx.linuxfoundation.org/#projects_all&lt;/a&gt;&lt;br&gt;
MLH Fellowship - &lt;a href="https://fellowship.mlh.io"&gt;https://fellowship.mlh.io&lt;/a&gt;&lt;br&gt;
Google Summer of Code - &lt;a href="https://summerofcode.withgoogle.com/about/"&gt;https://summerofcode.withgoogle.com/about/&lt;/a&gt;&lt;br&gt;
LFN Mentorship Program - &lt;a href="https://wiki.lfnetworking.org/display"&gt;https://wiki.lfnetworking.org/display&lt;/a&gt;...&lt;br&gt;
Linux Kernel Mentorship Program - &lt;a href="https://wiki.linuxfoundation.org/lkmp"&gt;https://wiki.linuxfoundation.org/lkmp&lt;/a&gt; &lt;br&gt;
GNOME Internships - &lt;a href="https://wiki.gnome.org/Outreach"&gt;https://wiki.gnome.org/Outreach&lt;/a&gt;&lt;br&gt;
Outreachy Internships - &lt;a href="https://www.outreachy.org"&gt;https://www.outreachy.org&lt;/a&gt;&lt;br&gt;
Google Season of Docs - &lt;a href="https://developers.google.com/season-of-docs/docs/get-started"&gt;https://developers.google.com/season-of-docs/docs/get-started&lt;/a&gt;&lt;br&gt;
X.Org Endless Vacation of Code - &lt;a href="https://www.x.org/wiki/XorgEVoC/"&gt;https://www.x.org/wiki/XorgEVoC/&lt;/a&gt;&lt;br&gt;
Julia Seasons of Contributions (JSoC) - &lt;a href="https://julialang.org/"&gt;https://julialang.org/&lt;/a&gt;&lt;br&gt;
Summer of Haskell - &lt;a href="https://summer.haskell.org"&gt;https://summer.haskell.org&lt;/a&gt;&lt;br&gt;
Open Mainframe Project Mentorship Program -&lt;a href="https://www.openmainframeproject.org/projects/mentorship-program"&gt;https://www.openmainframeproject.org/projects/mentorship-program&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;24 Pull Requests - &lt;a href="https://24pullrequests.com/about"&gt;https://24pullrequests.com/about&lt;/a&gt;&lt;br&gt;
OSOC - &lt;a href="https://osoc.be"&gt;https://osoc.be&lt;/a&gt;&lt;br&gt;
Hyperledger mentorship program - &lt;a href="https://wiki.hyperledger.org/display/INTERN/Hyperledger+Mentorship+Program"&gt;https://wiki.hyperledger.org/display/INTERN/Hyperledger+Mentorship+Program&lt;/a&gt;&lt;br&gt;
Season of KDE 2021 - &lt;a href="https://season.kde.org"&gt;https://season.kde.org&lt;/a&gt;&lt;br&gt;
DataONE Summer Internship Program - &lt;a href="https://old.dataone.org/internships"&gt;https://old.dataone.org/internships&lt;/a&gt;&lt;br&gt;
Intern at the FSF - &lt;a href="https://www.fsf.org/volunteer/internships"&gt;https://www.fsf.org/volunteer/internships&lt;/a&gt;&lt;br&gt;
Processing Foundation Fellowships - &lt;a href="https://processingfoundation.org/fellowships/"&gt;https://processingfoundation.org/fellowships/&lt;/a&gt;&lt;br&gt;
Hacktoberfest - &lt;a href="https://hacktoberfest.digitalocean.com"&gt;https://hacktoberfest.digitalocean.com&lt;/a&gt;&lt;br&gt;
FOSSASIA Codeheat - &lt;a href="https://codeheat.org"&gt;https://codeheat.org&lt;/a&gt;&lt;br&gt;
FOSSASIA Internship Program - &lt;a href="https://docs.google.com/forms/d/e/1FA"&gt;https://docs.google.com/forms/d/e/1FA&lt;/a&gt;...&lt;br&gt;
DrivenData Competitions - &lt;a href="https://www.drivendata.org/competitions/"&gt;https://www.drivendata.org/competitions/&lt;/a&gt;&lt;br&gt;
Kubernetes Release Team Shadows - &lt;a href="https://github.com/kubernetes/sig-rel"&gt;https://github.com/kubernetes/sig-rel&lt;/a&gt;... &lt;/p&gt;

</description>
      <category>opensource</category>
      <category>internships</category>
      <category>2021</category>
      <category>opensource2021</category>
    </item>
    <item>
      <title>Work from Home setup of an Indian Developer üáÆüá≥ </title>
      <author>Jyotishman Saikia</author>
      <pubDate>Fri, 20 Aug 2021 05:43:21 +0000</pubDate>
      <link>https://dev.to/jyotishman/work-from-home-setup-of-an-indian-developer-255b</link>
      <guid>https://dev.to/jyotishman/work-from-home-setup-of-an-indian-developer-255b</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OahzW7k2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oeaaynouykl0dawntcp8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OahzW7k2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oeaaynouykl0dawntcp8.png" alt="Work from home setup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#desk"&gt;
  &lt;/a&gt;
  Desk-
&lt;/h2&gt;

&lt;p&gt;The beginning of every setup is a clean and spacious desk. I am using a custom made wooden desk with a 19mm ply at the top and frame size of 6ft/3ft. The Frame is black painted and top base has a wooden mica.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chair"&gt;
  &lt;/a&gt;
  Chair-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pk78lKR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prtbg5zqfvsks0258lby.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pk78lKR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prtbg5zqfvsks0258lby.png" alt="Ergonomic chair"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am using an ergonomic office chair bought from Amazon at Rs 6700/- . The best part of this chair is that I can adjust both the  seat and the arm height according to  my requirement. The wheels runs smooth if I move while being seated.&lt;/p&gt;

&lt;p&gt;Amazon Link- &lt;a href="https://amzn.to/3DaAe47"&gt;https://amzn.to/3DaAe47&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#laptop-macbook-pro"&gt;
  &lt;/a&gt;
  Laptop- MacBook Pro
&lt;/h2&gt;

&lt;p&gt;I am using a &lt;strong&gt;MacBook Pro 16inch&lt;/strong&gt; 2019 with the configuration of 16GB RAM 2.6 GHz 6-Core Intel Core i7. This is my primary laptop and I use this to do all my tasks like- web development, app development, photo/video editing, watch movies etc&lt;/p&gt;

&lt;p&gt;Amazon Link- &lt;a href="https://amzn.to/3xVkwpy"&gt;https://amzn.to/3xVkwpy&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#secondary-monitor-dell-p-series-24inch"&gt;
  &lt;/a&gt;
  Secondary Monitor- Dell P Series 24-inch
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s_LdHqb7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eeq0lx8y3wyfzn4vnuy5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s_LdHqb7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eeq0lx8y3wyfzn4vnuy5.png" alt="Dell monitor 24 inch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am using this DELL 24 inch full &lt;strong&gt;HD IPS monitor&lt;/strong&gt; with an aspect ratio of 16:9 .  The monitor height can be adjusted according to my need and it can also do a 360 rotation. I bought this from Amazon at  Rs 13,000/-.&lt;/p&gt;

&lt;p&gt;Amazon Link- &lt;a href="https://amzn.to/3ggTkLL"&gt;https://amzn.to/3ggTkLL&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#external-keyboard"&gt;
  &lt;/a&gt;
  External Keyboard-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WwSnshzw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocirh2qagqlqyt3339kq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwSnshzw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocirh2qagqlqyt3339kq.jpg" alt="Keychron k2 keyboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Keyboard plays a major role in productivity of every developers. I am using a Keycron k2 RGB Mechanical keyboard with the option to use by  both bluetooth and cable. Keychron official website ships to most of the countries except India so I bought this mechanical keyboard from keychron India website at Rs 8000/- . The typing experience is indeed awesome. &lt;/p&gt;

&lt;p&gt;Website link- &lt;a href="https://keychron.in/product/keychron-k2-v-2/"&gt;https://keychron.in/product/keychron-k2-v-2/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#external-mouse-logitech-mx-master-3"&gt;
  &lt;/a&gt;
  External Mouse- Logitech MX Master 3
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---CMXHJzc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k49u5sbejl2v5sii20oc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---CMXHJzc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k49u5sbejl2v5sii20oc.png" alt="MX Master 3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am using a Logitech MX Master 3 series for productivity. Some of the best use-case which i love about this mouse are-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Switching between windows with the switch key&lt;/li&gt;
&lt;li&gt;Browser tabs switching using the horizontal scroll.&lt;/li&gt;
&lt;li&gt;Browser forward/backward using the up/down buttons&lt;/li&gt;
&lt;li&gt;The obvious Vertical scroll with approx of 1000 lines per sec.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Amazon Link- &lt;a href="https://amzn.to/3xZ6svi"&gt;https://amzn.to/3xZ6svi&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mobile-devices"&gt;
  &lt;/a&gt;
  Mobile devices-
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;iPhone 11- I use this device as my primary phone as well as a testing device.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;iPad Air 2020 + Apple Pencil- I use this device primarily to note down my daily to-do tasks and a little bit of photo and video editing. Otherwise I used this to watch Netflix or Amazon Prime video.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OnePlus 6t- This device used to be my primary phone before but now I use this device to test android related stuffs&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#earphone-and-mic"&gt;
  &lt;/a&gt;
  Earphone and mic-
&lt;/h2&gt;

&lt;p&gt;I am not a big fan of loud music so I always use a bluetooth earphone to listen to music or to do an audio/video chat. I use OnePlus bullet if I am doing some physical activity  else I use Boat AirDope if I am in the desk. &lt;/p&gt;

&lt;p&gt;Amazon Link- &lt;a href="https://amzn.to/2Wd8HxW"&gt;https://amzn.to/2Wd8HxW&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Link- &lt;a href="https://amzn.to/3D5bGtg"&gt;https://amzn.to/3D5bGtg&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#additional-accessories-which-are-there-in-my-desk"&gt;
  &lt;/a&gt;
  Additional accessories which are there in my desk-
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Extension board&lt;/li&gt;
&lt;li&gt;Flower pot&lt;/li&gt;
&lt;li&gt;Computer glass&lt;/li&gt;
&lt;li&gt;Laptop stand&lt;/li&gt;
&lt;li&gt;Monitor Stand&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you liked my setup or want to give any feedback  or suggestions , please comment down below. If possible please share your setup images in the comment section.&lt;/p&gt;

&lt;p&gt;Also I have started posting on twitter related to frontend tips and tricks. You can follow me at- &lt;a href="https://twitter.com/frontend_jsx"&gt;https://twitter.com/frontend_jsx&lt;/a&gt;&lt;/p&gt;

</description>
      <category>workstations</category>
      <category>frontenddeveloper</category>
      <category>softwareengineer</category>
    </item>
    <item>
      <title>How To Use Google Like A Pro</title>
      <author>Suhail Kakar</author>
      <pubDate>Fri, 20 Aug 2021 05:37:21 +0000</pubDate>
      <link>https://dev.to/suhailkakar/how-to-use-google-like-a-pro-5b48</link>
      <guid>https://dev.to/suhailkakar/how-to-use-google-like-a-pro-5b48</guid>
      <description>&lt;p&gt;Google is such a dominant force in the search engine industry that it is the default search engine for Android smartphones and web browsers such as Chrome. To put it frankly, Google has become one of the most widely utilized online resources for discovering everything from random facts and music videos to products and services.&lt;/p&gt;

&lt;p&gt;The sophisticated Google search methods and tips listed below can help you narrow your search results.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-site"&gt;
  &lt;/a&gt;
  1. Site:
&lt;/h3&gt;

&lt;p&gt;Using site: will search within a specific website. For example, if you want to find an article that is published only on Hackernoon, you can simply type&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;site:hackernoon.com article_keyword
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OB_oJxt0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629433983941/x0ukuKArt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OB_oJxt0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629433983941/x0ukuKArt.png" alt="screely-1629433973388.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-asterisk-"&gt;
  &lt;/a&gt;
  2. Asterisk *
&lt;/h3&gt;

&lt;p&gt;You can use * to fill missing words or phrases, like :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;How to integrate * in nodejs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UQDe1T9g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629434118186/pElZ1rnn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UQDe1T9g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629434118186/pElZ1rnn8.png" alt="screely-1629434101108.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-quotation-"&gt;
  &lt;/a&gt;
  3. Quotation " "
&lt;/h3&gt;

&lt;p&gt;"" is used to search for words or phrases, like :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"Why facebook created react"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UuCMS9pS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629434450078/saRoQCii-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UuCMS9pS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629434450078/saRoQCii-.png" alt="screely-1629434443457.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-related"&gt;
  &lt;/a&gt;
  4. Related:
&lt;/h3&gt;

&lt;p&gt;You can use related: to sites that are similar to other sites, for example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;related:netflix.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rip_jFoS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629434968719/QJkDd-HWG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rip_jFoS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629434968719/QJkDd-HWG.png" alt="screely-1629434962416.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-link"&gt;
  &lt;/a&gt;
  5. link:
&lt;/h3&gt;

&lt;p&gt;Use link: to find a page that links to another page, like :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;link:suhailkakar.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FWoP31-2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629435112454/QHKVa-K-G.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FWoP31-2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629435112454/QHKVa-K-G.png" alt="screely-1629435108552.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion ‚åõ
&lt;/h3&gt;

&lt;p&gt;I hope you found these tips helpful. If you need any help please let me know in the comment section. &lt;/p&gt;

&lt;p&gt;Let's connect on  &lt;a href="https://twitter.com/suhailkakar"&gt;Twitter&lt;/a&gt;  and  &lt;a href="https://www.linkedin.com/in/suhailkakar/"&gt;LinkedIn&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;üëã Thanks for reading, See you next time&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Getting started with Azure Machine Learning</title>
      <author>Vivek0712</author>
      <pubDate>Fri, 20 Aug 2021 05:32:43 +0000</pubDate>
      <link>https://dev.to/vivek0712/getting-started-with-azure-machine-learning-48j8</link>
      <guid>https://dev.to/vivek0712/getting-started-with-azure-machine-learning-48j8</guid>
      <description>&lt;p&gt;In this second part of the Azure Machine Learning Series, we will discuss the following with regards to Azure Machine Learning.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Ab3fMRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ymi0lzc67et6tcsyxw4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Ab3fMRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ymi0lzc67et6tcsyxw4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#understanding-machine-learning-workflows"&gt;
  &lt;/a&gt;
  Understanding Machine learning Workflows
&lt;/h2&gt;

&lt;p&gt;We will see a quick recap of the introductory blog on Machine Learning. The workflows involved in Machine Learning are as follows&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8y6oSVEr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/87u2ofabeevb7wbl1nqw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8y6oSVEr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/87u2ofabeevb7wbl1nqw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#challenges-in-mlops"&gt;
  &lt;/a&gt;
  Challenges in MLOps
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Logically create, maintain the resources&lt;/li&gt;
&lt;li&gt;Keep track of ML Experiments and each Runs of experiments  - Create, Reuse, delete environment with dependencies&lt;/li&gt;
&lt;li&gt;Opting, provisioning, re-using Local/Cloud based compute&lt;/li&gt;
&lt;li&gt;Maintaining different versions of Model&lt;/li&gt;
&lt;li&gt;Re-using the existing ML workflows&lt;/li&gt;
&lt;li&gt;Deploying and Maintaining the ML models
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#tools-to-perform-machine-learning-in-azure"&gt;
  &lt;/a&gt;
  Tools to perform Machine Learning in Azure
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Azure Portal

&lt;ul&gt;
&lt;li&gt;Azure Machine Learning Studio (UI + Coding)
&lt;/li&gt;
&lt;li&gt;Azure Machine Learning Designer (Completely UI + less coding)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Azure CLI
&lt;/li&gt;
&lt;li&gt;Azure Python SDK

&lt;ul&gt;
&lt;li&gt;Using Azure ML Studio
&lt;/li&gt;
&lt;li&gt;Visual Studio Code + AzureML Extensions&lt;/li&gt;
&lt;li&gt;Other IDEs
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#architecture-of-azure-machine-learning"&gt;
  &lt;/a&gt;
  Architecture of Azure Machine Learning
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ItFmYQzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ytgnzqnmdi53ubvokp8g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ItFmYQzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ytgnzqnmdi53ubvokp8g.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#before-we-get-started"&gt;
  &lt;/a&gt;
  Before we get started...
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Pre-requisites
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Basic Python programming Language&lt;/li&gt;
&lt;li&gt;Understanding of Machine Learning Workflows&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Azure Account with Subscription
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D0UvNqMe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/403lekyfbyha9orlq3s6.png" alt="Azure Sub"&gt;
&lt;/li&gt;
&lt;li&gt;Create a Machine Learning Resource.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q6FEHq2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qxkmq6hlbulv1bc0wzeq.png" alt="create ml"&gt;
&lt;/li&gt;
&lt;li&gt;Provide a name for the workspace, Container Register&lt;/li&gt;
&lt;li&gt;Launch the Machine Learning Studio&lt;/li&gt;
&lt;li&gt;Create Compute Resource

&lt;ol&gt;
&lt;li&gt;On the left side, under Manage, select Compute.&lt;/li&gt;
&lt;li&gt;Select +New to create a new compute instance.&lt;/li&gt;
&lt;li&gt;Keep all the defaults on the first page, select Next.&lt;/li&gt;
&lt;li&gt;Supply a name and select Create.&lt;/li&gt;
&lt;li&gt;In about two minutes, you'll see the State of the    compute instance change from Creating to Running. It's now ready to go.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Create Dataset&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can create datasets from datastores, public URLs, and Azure Open Datasets.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Launch a Notebook instance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can follow this &lt;a href="https://docs.microsoft.com/en-us/azure/machine-learning/quickstart-create-resources"&gt;doc&lt;/a&gt; to create necessary Azure ML Resources&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-azure-ml-resources"&gt;
  &lt;/a&gt;
  Creating Azure ML Resources
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#workspace"&gt;
  &lt;/a&gt;
  Workspace
&lt;/h3&gt;

&lt;p&gt;An Azure ML Workspace is an Azure resource that organizes and coordinates the actions of many other Azure resources to assist in executing and sharing machine learning workflows. In particular, an Azure ML Workspace coordinates storage, databases, and compute resources providing added functionality for machine learning experimentation, deployment, inference, and the monitoring of deployed models.&lt;/p&gt;

&lt;p&gt;You can create/access workspace by&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using Constructor&lt;/li&gt;
&lt;li&gt;Using config.json file&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#compute"&gt;
  &lt;/a&gt;
  Compute
&lt;/h3&gt;

&lt;p&gt;All ML Experiments requires Compute to execute. To Create / Access the Compute Resource use ComputeTarget Class&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#experiment"&gt;
  &lt;/a&gt;
  Experiment
&lt;/h3&gt;

&lt;p&gt;In Azure Machine Learning, an experiment is a named process, usually the running of a script or a pipeline, that can generate metrics and outputs and be tracked in the Azure Machine Learning workspace.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Create Experiment&lt;/em&gt;&lt;br&gt;
An experiment can be run multiple times, with different data, code, or settings; and Azure Machine Learning tracks each run, enabling you to view run history and compare results for each run.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-experiment-run-context"&gt;
  &lt;/a&gt;
  The Experiment Run Context
&lt;/h3&gt;

&lt;p&gt;When you submit an experiment, you use its run context to initialize and end the experiment run that is tracked in Azure Machine Learning&lt;br&gt;
You can log, monitor every run in the experiment.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#data"&gt;
  &lt;/a&gt;
  Data
&lt;/h3&gt;

&lt;p&gt;Data&lt;br&gt;
Any Machine Learning problems involves working with Data.&lt;br&gt;
It involves importing the data from the data source&lt;br&gt;
Registering, Maintaining the dataset in Data Store&lt;br&gt;
Versioning the dataset. You can learn more about Datasets &lt;a href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-create-register-datasets"&gt;here&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Now we have all the necessary resources to train, deploy and monitor ML Models. &lt;/p&gt;

&lt;p&gt;Stay tuned for the next blog in this series for the same. &lt;/p&gt;

</description>
      <category>azure</category>
      <category>microsoft</category>
      <category>machinelearning</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Blitz.js: The Fullstack React Framework</title>
      <author>projectashik</author>
      <pubDate>Fri, 20 Aug 2021 05:10:10 +0000</pubDate>
      <link>https://dev.to/projectashik/blitz-js-the-fullstack-react-framework-2kag</link>
      <guid>https://dev.to/projectashik/blitz-js-the-fullstack-react-framework-2kag</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hey-developers"&gt;
  &lt;/a&gt;
  Hey Developers
&lt;/h2&gt;

&lt;p&gt;Currently, Blitz.js is on rising because of its unique features. Likewise, Typescript is the superset of Javascript; Blitz.js is also like the superset of Next.js. Almost every feature of Next.js works in Blitz.js too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qk6JDIDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629386968129/ga3klyXJa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qk6JDIDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629386968129/ga3klyXJa.png" alt="Blitz.js is a superset of next.js.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#index"&gt;
  &lt;/a&gt;
  Index
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#introduction"&gt;Introduction&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#routing-in-blitzjs"&gt;Routing in Blitz.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#building-project-management-application"&gt;Building Project Management Application&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#tailwind-css"&gt;Tailwind CSS (Recipe)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#clean-up-lets-clean-up-blitz-application"&gt;Clean Up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#creating-files-for-this-project"&gt;Creating files (Code Scaffolding)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database"&gt;Database(Prisma)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-we-learned-today"&gt;What we learned today?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;According to the Blitz.js team, Blitz is a batteries-included framework inspired by Ruby on Rails, is built on Next.js, and features a "Zero-API" ü§Ø data layer abstraction that eliminates the need for REST/GraphQL.&lt;/p&gt;

&lt;p&gt;Blitz.js is a framework built on top of Next.js, which comes with all the boring stuff already set up for you! Like ESLint, Prettier, Jest, user sign up, log in, and password reset. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wwmN7mHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.giphy.com/media/1fgI4bZpCo9S57r4Vd/giphy.gif%3Fcid%3D5a38a5a2i01aebbwldc96up6kv28orf1fap7buec1gwv6q7n%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wwmN7mHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.giphy.com/media/1fgI4bZpCo9S57r4Vd/giphy.gif%3Fcid%3D5a38a5a2i01aebbwldc96up6kv28orf1fap7buec1gwv6q7n%26rid%3Dgiphy.gif%26ct%3Dg" alt="Smart Gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blitz.js provides helpful defaults and conventions for routing, file structure, and authentication while being extremely flexible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;FullStack &amp;amp; monolithic:&lt;/strong&gt;&lt;br&gt;
Blitz.js comes with a database to frontend all preconfigured in a single app to help you build full-stack apps in record time, which you can easily store in server or serverless like Netlify or Vercel.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;API Not Required:&lt;/strong&gt;&lt;br&gt;
Instead of fetching data from the backend, you import your server code directly into your components. At build time, that function import is swapped out with an auto-generated HTTP API.&lt;br&gt;
The generated API can also be used by apps &amp;amp; third parties.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Loose Opinions:&lt;/strong&gt;&lt;br&gt;
In Blitz.js, you are free to plug anything that you can use. Blitz.js doesn't mandate you to use the specific library only. For example, by default, Blits.js comes with Prisma preconfigured as ORM, but you can use others if you feel comfortable on others.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Convention over Configuration:&lt;/strong&gt;&lt;br&gt;
Blits.js does all the boring setup and configuration by default for you. The common project structure and architectural patterns move from one Blitz app to another and immediately feel at home. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Easy to Start, Easy to Scale:&lt;/strong&gt;&lt;br&gt;
It's easy to use and easy to migrate your next.js application to a blitz.js app. &lt;br&gt;
Easy to scale in all forms: lines of code, number of people working in the codebase, and code execution.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Recipes:&lt;/strong&gt;&lt;br&gt;
Recipes are one of the beautiful features of the blitz.js. By using recipes, you can easily set up third-party libraries with a single line of command.&lt;br&gt;
E.g.: &lt;code&gt;blitz install tailwind&lt;/code&gt; will set up tailwind for you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Testing:&lt;/strong&gt;&lt;br&gt;
Testing is preconfigured in Blitz.js. Blitz.js uses jest for testing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;First Class TypeScript Support:&lt;/strong&gt;&lt;br&gt;
Blitz.js is fully built with Typescript, and the Blitz data layer is fully end-to-end typesafe. All types are completely static without needing a separate type generation process!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;Blitz.js has its own powerful CLI for creating a new blitz app, code scaffolding, and many more.&lt;/p&gt;

&lt;p&gt;To start working with Blitz.js, you must have Node.js version 12 or newer installed on your PC. If you don't have Node.js installed, go to  &lt;a href="https://nodejs.org/en/download/"&gt;Node.js official documentation&lt;/a&gt;  to install it in your system.&lt;/p&gt;

&lt;p&gt;Run the following command to install the blitz CLI globally.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn global add blitz &lt;span class="c"&gt;# yarn&lt;/span&gt;

npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; blitz &lt;span class="nt"&gt;--legacy-peer-deps&lt;/span&gt; &lt;span class="c"&gt;# npm &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;While installing Blitz CLI with npm &lt;code&gt;--legacy-peer-deps&lt;/code&gt; is needed because npm totally change the behavior of peer dependencies, and some dependencies haven't caught up&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well done, you have installed Blitz CLI on your machine. Now you can check it by running a &lt;code&gt;blitz -v&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;You should get something like this. But the &lt;code&gt;system option&lt;/code&gt;, &lt;code&gt;binaries path&lt;/code&gt;, and &lt;code&gt;blitz versions&lt;/code&gt; might be different.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;‚ûú blitz &lt;span class="nt"&gt;-v&lt;/span&gt;
Linux 5.11 | linux-x64 | Node: v14.17.3

blitz: 0.39.0 &lt;span class="o"&gt;(&lt;/span&gt;global&lt;span class="o"&gt;)&lt;/span&gt;
blitz: 0.39.0 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

  Package manager: yarn 
  System:
    OS: Linux 5.11 Pop!_OS 20.04 LTS
    CPU: &lt;span class="o"&gt;(&lt;/span&gt;4&lt;span class="o"&gt;)&lt;/span&gt; x64 Intel&lt;span class="o"&gt;(&lt;/span&gt;R&lt;span class="o"&gt;)&lt;/span&gt; Core&lt;span class="o"&gt;(&lt;/span&gt;TM&lt;span class="o"&gt;)&lt;/span&gt; i3-5005U CPU @ 2.00GHz
    Memory: 146.59 MB / 3.76 GB
    Shell: 5.8 - /usr/bin/zsh
  Binaries:
    Node: 14.17.3 - ~/.nvm/versions/node/v14.17.3/bin/node
    Yarn: 1.22.10 - ~/.nvm/versions/node/v14.17.3/bin/yarn
    npm: 6.14.13 - ~/.nvm/versions/node/v14.17.3/bin/npm
    Watchman: Not Found
  npmPackages:
    @prisma/client: Not Found
    blitz: ^0.39.0 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 0.39.0 
    prisma: Not Found
    react: Not Found
    react-dom: Not Found
    typescript: Not Found

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you got any error, you can mention that in the  &lt;a href="#comments"&gt;comment section&lt;/a&gt;, I'll surely try to solve it.&lt;/p&gt;

&lt;p&gt;After the &lt;code&gt;blitz cli&lt;/code&gt; is installed, let's create a new blitz app.&lt;/p&gt;

&lt;p&gt;You can create a new blitz app by using a blitz CLI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;blitz new your-amazing-app-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Protip: If you don't want to install blitz CLI locally, you can even use it with the following command.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx blitz new your-amazing-app-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Blitz uses the alpha version of React, so you can use the features of the alpha release like &lt;code&gt;&amp;lt;Suspense&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, you can run the following command to run the blitz application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn dev &lt;span class="c"&gt;# yarn&lt;/span&gt;

npm run dev &lt;span class="c"&gt;# npm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see something like this in your browser when you open  &lt;a href="http://locahost:3000"&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LJAtpVL3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629393029893/qPNQ2MPJg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LJAtpVL3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629393029893/qPNQ2MPJg.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can try signing up and log in in to check the blitz.js default authentication setup.&lt;/p&gt;

&lt;p&gt;Now let's learn it by building a simple Project Management application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#routing-in-blitzjs"&gt;
  &lt;/a&gt;
  Routing in Blitz.js
&lt;/h2&gt;

&lt;p&gt;Since Blitz.js is built on top of Next.js, it also uses the same file-based routing as Next.js.&lt;/p&gt;

&lt;p&gt;See Blitz.js  &lt;a href="https://blitzjs.com/docs/routing"&gt;Routing docs&lt;/a&gt;  for more info.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-project-management-application"&gt;
  &lt;/a&gt;
  Building Project Management Application
&lt;/h2&gt;

&lt;p&gt;We'll be using many cool features of blitz.js while building this application. We'll be using Tailwind CSS for styling, SQLite for the database (preconfigured with Prisma by default), and a default authentication system.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tailwind-css"&gt;
  &lt;/a&gt;
  Tailwind CSS
&lt;/h3&gt;

&lt;p&gt;For this tutorial, we'll be using Tailwind CSS for styling and I'm using Tailwind CSS in this project to show you how to install Tailwind CSS in blitz using the  &lt;a href="https://blitzjs.com/docs/using-recipes"&gt;Recipe&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Run the following command in your project folder and see the magic of Blitz Recipe.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz install tailwind
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When tailwind setup is completed you should see something like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P4X7sO2g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629395784889/QywBIlkYc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4X7sO2g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629395784889/QywBIlkYc.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if you see your project folder, then you will find some new files &lt;code&gt;postcss.config.js&lt;/code&gt;, &lt;code&gt;tailwind.config.js&lt;/code&gt;, and &lt;code&gt;app/core/styles/index.css&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;tailwind.config.js&lt;/code&gt; includes the tailwind configurations. Blitz by default use &lt;code&gt;jit&lt;/code&gt; mode in tailwind css.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;postcss.config.js&lt;/code&gt; includes the postcss configurations.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;app/core/styles/index.css&lt;/code&gt; contains the tailwind styles.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* index.css */&lt;/span&gt;

&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;@layer&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.hero&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;w-full&lt;/span&gt; &lt;span class="err"&gt;text-[#333];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.title&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;m-0&lt;/span&gt; &lt;span class="err"&gt;w-full&lt;/span&gt; &lt;span class="err"&gt;pt-20;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;48px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.title&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.description&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;text-center;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Tailwind setup is completed with just a single command. That's a magic of Blitz recipe.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#clean-up-lets-clean-up-blitz-application"&gt;
  &lt;/a&gt;
  Clean Up (let's clean up blitz application)
&lt;/h3&gt;

&lt;p&gt;To clean up, you have to remove the &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;app/pages/index.tsx&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;app/api&lt;/code&gt; -&amp;gt; Because we're not creating any API routes in this project &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;app/pages/projects&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt; &lt;code&gt;app/projects&lt;/code&gt; folder&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You might get a question when we're building a Project Management application then why the heck we are removing the &lt;code&gt;projects&lt;/code&gt; folder too.&lt;br&gt;
The reason is, I want to show you the code scaffolding feature by &lt;code&gt;blitz.js&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#creating-files-for-this-project"&gt;
  &lt;/a&gt;
  Creating files for this project
&lt;/h3&gt;

&lt;p&gt;Creating a &lt;code&gt;app/pages/index.tsx&lt;/code&gt; file with following contents.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BlitzPage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blitz&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Layout&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app/core/layouts/Layout&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="cm"&gt;/*
 * This file is just for a pleasant getting started page for your new app.
 * You can delete everything in here and start from scratch if you like.
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;BlitzPage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;&amp;lt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;suppressFirstRenderFlicker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getLayout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Layout&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Home"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Layout&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Later we'll use other components to show the data on the index page.&lt;/p&gt;

&lt;p&gt;Our project is all about project management. In this, the user will be able to create projects, get projects created by the authenticated user, update projects, delete them and also manages the tasks related to those projects. We'll cover all CRUD operations.&lt;/p&gt;

&lt;p&gt;Now we need to create the required files for all these operations, for this Blitz provides code scaffolding from its CLI.&lt;/p&gt;

&lt;p&gt;Run the following command to see the magic.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz generate all project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;What it will do?&lt;/strong&gt;&lt;br&gt;
It will generate pages, queries, mutations, and Prisma models for &lt;code&gt;project&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It will generate the following files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app/pages/projects/[projectId]/edit.tsx
app/pages/projects/[projectId].tsx
app/pages/projects/index.tsx
app/pages/projects/new.tsx

app/projects/components/ProjectForm.tsx

app/projects/queries/getProject.ts
app/projects/queries/getProjects.ts
app/projects/mutations/createProject.ts
app/projects/mutations/deleteProject.ts
app/projects/mutations/updateProject.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And update Prisma schema.&lt;/p&gt;

&lt;p&gt;Now, you can access the project related pages by heading to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/projects/some-id/edit
/projects/some-id
/projects/index
/projects/new
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pages for the project related task are situated in the &lt;code&gt;apps/pages/projects&lt;/code&gt; folder, its components lie in &lt;code&gt;apps/projects/components&lt;/code&gt;, and its backend logics lie in &lt;code&gt;app/projects/queries&lt;/code&gt; and &lt;code&gt;app/projects/mutations&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vhGYIjov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629397866969/AufkCTFjT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vhGYIjov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629397866969/AufkCTFjT.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will ask you, whether to run prisma migrate dev or not. Currently, we'll type no. Because we have to edit our &lt;code&gt;schema.prisma&lt;/code&gt; file.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;prisma migrate dev&lt;/code&gt; will update your database with the schema blitz generated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As mentioned above, we'll also need the files for managing the tasks, so let's create those files.&lt;/p&gt;

&lt;p&gt;For that, run the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;blitz generate all task &lt;span class="nt"&gt;--parent&lt;/span&gt; project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;What this command will do?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command will generate some of the files:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app/pages/projects/[projectId]/tasks/[taskId].tsx
app/pages/projects/[projectId]/tasks/[taskId]/edit.tsx
app/pages/projects/[projectId]/tasks/index.tsx
app/pages/projects/[projectId]/tasks/new.tsx

app/tasks/components/TaskForm.tsx

app/tasks/queries/getTask.ts
app/tasks/queries/getTasks.ts
app/tasks/mutations/createTask.ts
app/tasks/mutations/deleteTask.ts
app/tasks/mutations/updateTask.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The project and tasks will have a one-to-many relationship, so every task is related to a project. So, we have created the &lt;code&gt;tasks&lt;/code&gt; with the parent of &lt;code&gt;project&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#database"&gt;
  &lt;/a&gt;
  Database
&lt;/h3&gt;

&lt;p&gt;Since the blitz.js comes with Prisma and SQLite preconfigured, we'll use them. &lt;br&gt;
Open your &lt;code&gt;db/schema.prisma&lt;/code&gt; file and replace the &lt;code&gt;Project&lt;/code&gt; and &lt;code&gt;Task&lt;/code&gt; model with the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
model Project {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String
  tasks       Task[]
}

model Task {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Install  &lt;a href="https://marketplace.visualstudio.com/items?itemName=Prisma.prisma"&gt;Prisma&lt;/a&gt; Vs code extension for syntax highlighting, formating, auto-completion,  jump-to-definition and linting for .prisma files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now run the following command to update your database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz prisma migrate dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, you have give a name for this migration. You can write anything. I'll type &lt;code&gt;create_project_tasks_table&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Protip: You can view the GUI for managing the database by the command &lt;code&gt;blitz prisma studio&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nc5M8Hg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629426296094/nLBW68wSu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nc5M8Hg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629426296094/nLBW68wSu.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
From here you can select the model.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This much for today guys, tomorrow, I'll come with a next article in which we'll build a complete application.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-we-learned-today"&gt;
  &lt;/a&gt;
  What we learned today?
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Settings of Blitz.js&lt;/li&gt;
&lt;li&gt;Using recipes&lt;/li&gt;
&lt;li&gt;Using Database&lt;/li&gt;
&lt;li&gt;Code Scaffolding&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading up to here.&lt;/p&gt;

</description>
      <category>blitzjs</category>
      <category>react</category>
      <category>nextjs</category>
      <category>fullstack</category>
    </item>
    <item>
      <title>Building Microservices in Go: Events and Background jobs using RabbitMQ</title>
      <author>Mario Carrion</author>
      <pubDate>Fri, 20 Aug 2021 05:05:37 +0000</pubDate>
      <link>https://dev.to/mariocarrion/building-microservices-in-go-events-and-background-jobs-using-rabbitmq-2gpf</link>
      <guid>https://dev.to/mariocarrion/building-microservices-in-go-events-and-background-jobs-using-rabbitmq-2gpf</guid>
      <description>&lt;p&gt;Originally published at &lt;a href="https://mariocarrion.com/2021/05/28/golang-microservices-events-background-jobs-rabbitmq.html"&gt;mariocarrion.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-rabbitmq"&gt;
  &lt;/a&gt;
  What is RabbitMQ?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.rabbitmq.com/"&gt;RabbitMQ&lt;/a&gt; is a message-queueing software also known as a message broker or queue manager. It supports protocols such as &lt;a href="https://www.amqp.org/about/what"&gt;AMQP&lt;/a&gt;, &lt;a href="https://mqtt.org/"&gt;MQTT&lt;/a&gt; and &lt;a href="https://stomp.github.io/"&gt;STOMP&lt;/a&gt;, to name a few. RabbitMQ could be used for long-running tasks, for example background jobs, and for communication between different services.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-rabbitmq-work"&gt;
  &lt;/a&gt;
  How does RabbitMQ work?
&lt;/h2&gt;

&lt;p&gt;The easiest analogy to describe RabbitMQ is that of a Post Office and the required steps involved, from beginning to end, to deliver a mail to the final destination. In real life those steps consist of dropping off the mail into a mailbox, then some processing behind the scenes to route that mail and finally a mail person brings that mail to the destination.&lt;/p&gt;

&lt;p&gt;&lt;a href="/img/2021/05/28/1.png" class="article-body-image-wrapper"&gt;&lt;img src="/img/2021/05/28/1.png" alt="RabbitMQ"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RabbitMQ works as a queue where &lt;em&gt;Publishers&lt;/em&gt; can submit messages which then are eventually consumed by multiple &lt;em&gt;Consumers&lt;/em&gt;; however the interesting part about RabbitMQ is the intermediary mechanism that sits between those publishers and consumers. This intermediary is called &lt;em&gt;Exchange&lt;/em&gt;, this Exchange can be configured to define &lt;em&gt;Bindings&lt;/em&gt; to allow those messages to be routed into different &lt;em&gt;Queues&lt;/em&gt; which then the clients can listen to for consuming messages in different ways, to perhaps consume by a only concrete key or a wildcard.&lt;/p&gt;

&lt;p&gt;&lt;a href="/img/2021/05/28/2.png" class="article-body-image-wrapper"&gt;&lt;img src="/img/2021/05/28/2.png" alt="RabbitMQ"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/L0yJxCKrkIY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#publisher-implementation-using-a-repository"&gt;
  &lt;/a&gt;
  Publisher implementation using a Repository
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The code used for this post is &lt;a href="https://github.com/MarioCarrion/todo-api-microservice-example/tree/b886f4346851c860728ec7924d8b3196139af11e"&gt;available on Github&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To interact with RabbitMQ we will use the package &lt;a href="https://github.com/streadway/amqp"&gt;&lt;code&gt;streadway/amqp&lt;/code&gt;&lt;/a&gt; and similar to other data stores we will be defining a &lt;a href="https://mariocarrion.com/2021/04/04/golang-microservices-repository-pattern.html"&gt;Repository&lt;/a&gt; that will be interacting with the actual RabbitMQ publisher and will be called in the &lt;code&gt;service&lt;/code&gt; type.&lt;/p&gt;

&lt;p&gt;This repository type will be named &lt;a href="https://github.com/MarioCarrion/todo-api-microservice-example/blob/b886f4346851c860728ec7924d8b3196139af11e/internal/rabbitmq/task.go"&gt;rabbitmq.Task&lt;/a&gt;, it will contain an unexported field referencing a RabbitMQ channel and the corresponding methods required for emitting three events &lt;code&gt;Created&lt;/code&gt;, &lt;code&gt;Deleted&lt;/code&gt; and &lt;code&gt;Updated&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Created&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="n"&gt;internal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Task.Created"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"tasks.event.created"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Deleted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Task.Deleted"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"tasks.event.deleted"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Updated&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="n"&gt;internal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Task.Updated"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"tasks.event.updated"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Those three methods will refer to an unexported method called &lt;code&gt;publish&lt;/code&gt;, which is used for publishing the data, this data is the result encoding the message using the &lt;code&gt;encoding/gob&lt;/code&gt; package, similar to the code used when we discussed &lt;a href="https://mariocarrion.com/2021/01/30/tips-building-microservices-in-go-golang-caching-memcached.html"&gt;Caching with Memcached&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spanName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;routingKey&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// XXX: Excluding OpenTelemetry and error checking for simplicity&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Buffer&lt;/span&gt;

    &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewEncoder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"tasks"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="c"&gt;// exchange&lt;/span&gt;
        &lt;span class="n"&gt;routingKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c"&gt;// routing key&lt;/span&gt;
        &lt;span class="no"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="c"&gt;// mandatory&lt;/span&gt;
        &lt;span class="no"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="c"&gt;// immediate&lt;/span&gt;
        &lt;span class="n"&gt;amqp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Publishing&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;AppId&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;       &lt;span class="s"&gt;"tasks-rest-server"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;ContentType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"application/x-encoding-gob"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Body&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bytes&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="n"&gt;Timestamp&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, in the &lt;code&gt;service&lt;/code&gt; package the &lt;a href="https://github.com/MarioCarrion/todo-api-microservice-example/blob/b886f4346851c860728ec7924d8b3196139af11e/internal/service/task.go#L40-L46"&gt;&lt;code&gt;service.Task&lt;/code&gt;&lt;/a&gt; type is updated to receive an instance of that repository using an interface type, which then will be used it &lt;em&gt;after&lt;/em&gt; the persistent datastore call is done, something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;priority&lt;/span&gt; &lt;span class="n"&gt;internal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Priority&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dates&lt;/span&gt; &lt;span class="n"&gt;internal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dates&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;internal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// XXX: Excluding OpenTelemetry and error checking for simplicity&lt;/span&gt;
    &lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;priority&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;msgBroker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Created&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please refer to the &lt;a href="https://github.com/MarioCarrion/todo-api-microservice-example/blob/b886f4346851c860728ec7924d8b3196139af11e/internal/service/task.go#L78-L92"&gt;&lt;code&gt;Delete&lt;/code&gt; call&lt;/a&gt; as well as the &lt;a href="https://github.com/MarioCarrion/todo-api-microservice-example/blob/b886f4346851c860728ec7924d8b3196139af11e/internal/service/task.go#L108-L128"&gt;&lt;code&gt;Update&lt;/code&gt; call&lt;/a&gt; for more details, in practice the code is similar to the one above.&lt;/p&gt;

&lt;p&gt;Now, let's take a look at the subscriber implementation. For this example we will implement a new running process in charge of consuming that data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#subscriber-implementation"&gt;
  &lt;/a&gt;
  Subscriber implementation
&lt;/h2&gt;

&lt;p&gt;This &lt;a href="https://github.com/MarioCarrion/todo-api-microservice-example/blob/b886f4346851c860728ec7924d8b3196139af11e/cmd/elasticsearch-indexer/main.go"&gt;new process&lt;/a&gt; will consume those RabbitMQ events to properly index the Task records, changing the way we were using &lt;a href="https://mariocarrion.com/2021/05/24/golang-microservices-searching-with-elasticsearch.html"&gt;Elasticsearch&lt;/a&gt; originally, it will also support &lt;a href="https://mariocarrion.com/2021/05/21/golang-microservices-graceful-shutdown.html"&gt;Graceful shutdown&lt;/a&gt; like we previously covered.&lt;/p&gt;

&lt;p&gt;The code for listening, at the moment, is a slightly long &lt;a href="https://github.com/MarioCarrion/todo-api-microservice-example/blob/b886f4346851c860728ec7924d8b3196139af11e/cmd/elasticsearch-indexer/main.go#L137-L226"&gt;method&lt;/a&gt;, the &lt;a href="https://github.com/MarioCarrion/todo-api-microservice-example/blob/b886f4346851c860728ec7924d8b3196139af11e/cmd/elasticsearch-indexer/main.go#L176-L223"&gt;important part&lt;/a&gt; would be the actual Go channel returned by RabbitMQ, this code does something like the following to receive all events:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="c"&gt;// XXX: Excluding some things for simplicity, please refer to the original code&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;msgs&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RoutingKey&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;"tasks.event.updated"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"tasks.event.created"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;// decode received Task event&lt;/span&gt;
        &lt;span class="c"&gt;// call Elasticsearch to index record&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;"tasks.event.deleted"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;// decode received Task event&lt;/span&gt;
        &lt;span class="c"&gt;// call Elasticsearch to delete record&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c"&gt;// acknowledege received event&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In a real-life implementation you should consider implementing a &lt;em&gt;Server&lt;/em&gt; type able to handle different events, perhaps similar to the way &lt;code&gt;net/http.Server&lt;/code&gt; works and maybe define something similar to a Muxer to allow listening to multiple events with their corresponding encoding/decoding logic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;RabbitMQ&lt;/em&gt; is commonly known as a distributed queue but it can also be used as a message broker to communicate multiple services, is a powerful tool that thanks to the available configuration options could serve to deliver messages to multiple clients at scale.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recommended-reading"&gt;
  &lt;/a&gt;
  Recommended Reading
&lt;/h2&gt;

&lt;p&gt;If you're looking to do something similar in Kafka and Redis, I recommend reading the following links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mariocarrion.com/2021/06/03/golang-microservices-events-streaming-kafka.html"&gt;Microservices in Go: Events Streaming using Kafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mariocarrion.com/2021/06/10/golang-microservices-pub-sub-redis.html"&gt;Microservices in Go: Using Pub/Sub with Redis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;This post includes icons made by &lt;a href="https://www.flaticon.com/authors/itim2101"&gt;itim2101&lt;/a&gt; from &lt;a href="https://www.flaticon.com/"&gt;Flaticon&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>go</category>
      <category>rabbitmq</category>
      <category>microservices</category>
    </item>
    <item>
      <title>Remove a property of an object immutably in REDUX JavaScript</title>
      <author>Karan-Munjani</author>
      <pubDate>Fri, 20 Aug 2021 04:59:39 +0000</pubDate>
      <link>https://dev.to/karanmunjani/remove-a-property-of-an-object-immutably-in-redux-javascript-4igj</link>
      <guid>https://dev.to/karanmunjani/remove-a-property-of-an-object-immutably-in-redux-javascript-4igj</guid>
      <description>&lt;p&gt;If you're using Redux then you'll absolutely know about immutability, how much it's important to follow.&lt;/p&gt;

&lt;p&gt;So we know that Reducer is the place where all good state change occurs with returning a new state and without modifying the previous state.&lt;/p&gt;

&lt;p&gt;Imagine you're building a Bug Tracker App, and It stores all details about bug which are occurred.&lt;/p&gt;

&lt;p&gt;Suppose your initial store looks something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[
 {
   id:"1",
   description:"Bug occured in Network call",
   resolved:false,
 },
 {
   id:"2",
   description:"Bug occured while Signup",
   resolved:false,
 }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Also We are logging on console every time store change using store.subscribe():&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;store.subscribe(() =&amp;gt; {
  console.log("store changed!", store.getState());
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#now-suppose-you-are-dispatching-action-when-some-developers-in-working-on-the-bug-to-resolve-it-but-its-not-resolved-yet"&gt;
  &lt;/a&gt;
  Now Suppose you are dispatching action when some developers in working on the bug to resolve it but it's not resolved yet.
&lt;/h3&gt;

&lt;p&gt;Below is code of action which will take place&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const bugResolving = (id, status) =&amp;gt; ({
  type: actions.BUG_RESOLVING,
  payload: {
    id: id,
    status: status,
  },
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;And from your code you're calling store.dispatch() something like this:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;store.dispatch(bugAdded("Bug occured in Network call"));
store.dispatch(bugAdded("Bug occured while Signup"));
store.dispatch(bugResolving(1, "resolving in process by devDiesel"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;And from your code you're calling store.dispatch() something like this:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;store.dispatch(bugResolving(1, "resolving in process by devDiesel"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thus your store will look something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w6EkcjcS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erijcn1sq5e77oj7ww6t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w6EkcjcS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erijcn1sq5e77oj7ww6t.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see in last store change we added status property in bug with id=1.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now After a cup of coffee‚òï the Dev was able to solve and bug was marked as solvedüéØ.&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Hooray!!üéâüéâ&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As you've guessed now we want to remove the status property from store object whose id is 1, and also update the resolved to true&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So in your reducer function you might write code like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function reducer(state = [], action) {
  switch (action.type) {
   case actions.BUG_ADDED:
    //Some Code

   case actions.BUG_REMOVED:
    //Some Code

   case actions.BUG_RESOLVING:
    //Some Code

   case actions.BUG_RESOLVED:
    return state.map((bug)=&amp;gt; {
      if (bug.id === action.payload.id){
        delete bug.status;
        return { ... bug, resolved:true};
      }
      else return bug;

    default:
      return store;
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we will dispatch the action like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;store.dispatch(bugAdded("Bug occured in Network call"));
store.dispatch(bugAdded("Bug occured while Signup"));

store.dispatch(bugResolving(1, "resolving in process by devDiesel"));

store.dispatch(bugResolved(1)); //‚¨ÖThis one
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So when the reducer runs BUG_RESOLVED it won't work as expected and will delete the status property from previous original bug state,instead of deleting where we wanted.&lt;/p&gt;

&lt;p&gt;And thus will only update resolved to true in last state.&lt;/p&gt;

&lt;p&gt;Which can be seen with the help of console logging of subscribe() method as described in starting.&lt;/p&gt;

&lt;p&gt;See In this picture:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MjDoWwjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bo2fa94xhctia3hubd75.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MjDoWwjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bo2fa94xhctia3hubd75.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#so-why-this-happened"&gt;
  &lt;/a&gt;
  So Why this happened??
&lt;/h3&gt;

&lt;p&gt;As JavaScript is not purely immutable language when we return new state object using &lt;code&gt;return state.map((bug)=&amp;gt;{...})&lt;/code&gt; it does shallow copy of objects.&lt;/p&gt;

&lt;p&gt;That is the status property which we are created in previous state and status property which is we deleting are pointing to the same memory address.&lt;/p&gt;

&lt;p&gt;Thus when we delete this property it's get deleted from both object as its referring to same location inside memory&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#then-how-to-force-immutability-now"&gt;
  &lt;/a&gt;
  Then How to force immutability Now??
&lt;/h3&gt;

&lt;p&gt;We can do deep-copy of the object using Object.assign() method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; case actions.BUG_RESOLVED:
      return state.map((bug) =&amp;gt; {
        let modifiedBug = Object.assign({}, bug);//1
        if (modifiedBug.id === action.payload.id) {
          modifiedBug.status = Object.assign({}, bug.status);//2
          delete modifiedBug.status;//3
          return { ...modifiedBug, resolved: true };//4
        } else return bug;
      });

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In above code:&lt;/p&gt;

&lt;p&gt;1.) We assigning new object using Object.assign() thus modifiedBug will get its own address in memory.&lt;/p&gt;

&lt;p&gt;2.) We setting modifiedBug.status property with new bug.status using Object.assign() this will also force to have it's separate memory address&lt;/p&gt;

&lt;p&gt;3.)Now we are deleting the modifiedBug.status which won't affect any previous bug object cause its pointing to totally different location.&lt;/p&gt;

&lt;p&gt;4.) In last we are appending resolved:true to modifiedBug Object and returning it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thus now our code will work as we expected&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LkmK3SAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m74tuvif4aswsx90nfg2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LkmK3SAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m74tuvif4aswsx90nfg2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-out"&gt;
  &lt;/a&gt;
  Thank You For Reading Out.üò∏
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Post any questions in comments if you have&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>redux</category>
      <category>javascript</category>
      <category>react</category>
    </item>
  </channel>
</rss>
