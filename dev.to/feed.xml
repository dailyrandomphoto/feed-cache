<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Deeper Into this In JavaScript</title>
      <author>Vinoo</author>
      <pubDate>Thu, 18 Nov 2021 07:49:04 +0000</pubDate>
      <link>https://dev.to/vinoo/deeper-into-this-in-javascript-4lil</link>
      <guid>https://dev.to/vinoo/deeper-into-this-in-javascript-4lil</guid>
      <description>&lt;p&gt;In a &lt;a href="https://dev.to/vinoo/oops-in-javascript-intro-to-creating-objects-and-this-keyword-2bi"&gt;previous article&lt;/a&gt;, we saw how to use &lt;code&gt;this&lt;/code&gt; keyword with objects. In this post, we shall dive deeper into different bindings of &lt;code&gt;this&lt;/code&gt; that we will encounter when dealing with it in functions. Bindings mean the different ways &lt;code&gt;this&lt;/code&gt; behaves in different contexts in a function. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-default-binding"&gt;
  &lt;/a&gt;
  1. Default Binding
&lt;/h3&gt;

&lt;p&gt;Consider the following example -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;defaultThis&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Welcome &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;defaultThis&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since there is no &lt;code&gt;username&lt;/code&gt; variable declared or defined, &lt;code&gt;this&lt;/code&gt; keyword gets the default binding - it references the global &lt;code&gt;Window&lt;/code&gt; object here, as can be seen below -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HtVG5ZME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nehaqafkodobpr5cp6co.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HtVG5ZME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nehaqafkodobpr5cp6co.png" alt="this-one" width="880" height="149"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-implicit-binding"&gt;
  &lt;/a&gt;
  2. Implicit Binding
&lt;/h3&gt;

&lt;p&gt;This binding is created by the behaviour of the function. Let's take an example to understand -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hobbit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bilbo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hello `&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="nx"&gt;hobbit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output would be as exptected - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L1rtgR3h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnfb640lzamsi5xn4169.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L1rtgR3h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnfb640lzamsi5xn4169.png" alt="this-two" width="880" height="255"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, since there is an object that calls the function &lt;code&gt;welcome()&lt;/code&gt;, &lt;code&gt;this&lt;/code&gt; implicitly refers to the object inside the function. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-explicit-binding"&gt;
  &lt;/a&gt;
  3. Explicit Binding
&lt;/h3&gt;

&lt;p&gt;Explicit binding means to explicitly bind the value of &lt;code&gt;this&lt;/code&gt; to any specific object. &lt;/p&gt;

&lt;p&gt;There are 3 methods to implement explicit binding - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Consider the code snippet we used above in Implicit Binding - the property &lt;code&gt;name&lt;/code&gt; and method &lt;code&gt;welcome&lt;/code&gt; are both defined inside the object &lt;code&gt;hobbit&lt;/code&gt;. This makes the binding for &lt;code&gt;this&lt;/code&gt; fairly..implicit üåù. What if the object is separate from a method? Consider the snippet below -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Welcome &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hobbit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Frodo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Welcome&lt;/span&gt;
&lt;span class="nx"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hobbit&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Welcome Frodo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first function call &lt;code&gt;welcome()&lt;/code&gt; has no reference to an object, so it would not return anything in the alert statement after &lt;code&gt;Welcome&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;The second function call is where we have accessed the object with the &lt;code&gt;call&lt;/code&gt; method. This means that we are specifying to the browser to assign the object &lt;code&gt;hobbit&lt;/code&gt; being passed as parameter to &lt;code&gt;this&lt;/code&gt; using &lt;code&gt;call&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Another use case for &lt;code&gt;call&lt;/code&gt; is that we can pass parameters to signify the value for &lt;code&gt;this&lt;/code&gt; along with arguments for the function. Example -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;spellOne&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;spellTwo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; cast the spells &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;spellOne&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; and &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;spellTwo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;wizard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ron Weasley&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wizard&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Expelliarmus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Slugulus Eructo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the function &lt;code&gt;foo&lt;/code&gt; is called with the &lt;code&gt;call&lt;/code&gt; method and the object &lt;code&gt;wizard&lt;/code&gt; is passed as the first argument which automatically gets assigned to &lt;code&gt;this&lt;/code&gt; in the function, along with the rest of the arguments. Note that the first argument always gets assigned to &lt;code&gt;this&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The output is as below -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DnlI1Gz6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/112ah77n8a0iu3jvmm6m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DnlI1Gz6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/112ah77n8a0iu3jvmm6m.png" alt="this-3" width="880" height="248"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But there is a drawback for this use case. What if there are tens of arguments to be passed for multiple objects? Very cumbersome üòï We have the next binding method to improve usability a little better. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Take a look at this snippet -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;spellOne&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;spellTwo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; cast the spells &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;spellOne&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; and &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;spellTwo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;wizard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ron Weasley&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wizard&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Expelliarmus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Slugulus Eructo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The format is the same, except that instead of &lt;code&gt;call&lt;/code&gt;, we use the method &lt;code&gt;apply&lt;/code&gt;, and instead of passing the arguments one after the other, we just wrap them in an array. The output remains the same. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bind()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code&gt;bind()&lt;/code&gt; method creates a new function which when invoked, assigns the provided values to &lt;code&gt;this&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Take a look at the snippet below -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;spellOne&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;spellTwo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; cast the spells &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;spellOne&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; and &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;spellTwo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;wizard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ron Weasley&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;castSpell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wizard&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Expelliarmus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Slugulus Eructo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;castSpell&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we are using &lt;code&gt;bind()&lt;/code&gt; to be referenced by the variable &lt;code&gt;castSpell&lt;/code&gt;, which can then be invoked as a normal function call. &lt;/p&gt;

&lt;p&gt;The advantages of using &lt;code&gt;bind()&lt;/code&gt; are that -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We are explicitly binding the &lt;code&gt;foo()&lt;/code&gt; method to the instance &lt;code&gt;castSpell&lt;/code&gt; such that &lt;code&gt;this&lt;/code&gt; of &lt;code&gt;foo()&lt;/code&gt; is now bound to &lt;code&gt;castSpell&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Even though the &lt;code&gt;wizard&lt;/code&gt; object does not have &lt;code&gt;castSpell&lt;/code&gt; as its property, because we are using &lt;code&gt;bind()&lt;/code&gt;, &lt;code&gt;wizard&lt;/code&gt; now recognises &lt;code&gt;castSpell&lt;/code&gt; as its method&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;bind()&lt;/code&gt; returns a new function reference that we can call anytime we want in future. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-new-binding"&gt;
  &lt;/a&gt;
  4. new Binding
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;new&lt;/code&gt; binding is used specifically for constructor functions. Take a look below -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Wizard&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;spell&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;spell&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;intro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hermione&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`The witch &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; cast the spell &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spell&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`The wizard &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; cast the spell &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spell&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; 
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hermione&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Wizard&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hermione&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Occulus Reparo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ronald&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Wizard&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ronald&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Slugulus Erecto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Constructor functions are special functions that are used to create new objects. The use of &lt;code&gt;new&lt;/code&gt; keyword means that we are creating a new object (or instance) of the (constructor) function.&lt;/p&gt;

&lt;p&gt;Whenever &lt;code&gt;new&lt;/code&gt; is used before any constructor function (name with the Capitalized convention followed), the JS engine undertands that &lt;code&gt;this&lt;/code&gt; inside the function will always point to the empty object created by &lt;code&gt;new&lt;/code&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-html-element-event-binding"&gt;
  &lt;/a&gt;
  5. HTML Element Event Binding
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;this&lt;/code&gt; can be used to bind the values of specific events or elements in HTML.&lt;/p&gt;

&lt;p&gt;Take a look at this example -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; 
&lt;span class="na"&gt;class =&lt;/span&gt;&lt;span class="s"&gt;"this-one"&lt;/span&gt;
&lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"console.log(this)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
this One
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, &lt;code&gt;this&lt;/code&gt; will always bind itself to the element where the event happened; in this case, the &lt;code&gt;this-one&lt;/code&gt; class button.&lt;/p&gt;

&lt;p&gt;The output will be as below -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U3l05YVz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6xbt6bxaoalqjmp8f2h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3l05YVz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6xbt6bxaoalqjmp8f2h.png" alt="this-4" width="880" height="184"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now take a look at this snippet -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; 
&lt;span class="na"&gt;class =&lt;/span&gt;&lt;span class="s"&gt;"this-two"&lt;/span&gt;
&lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"this.style.backgroundColor='orange'"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
this Two
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, &lt;code&gt;this&lt;/code&gt; is again bound to the button with the class &lt;code&gt;this-two&lt;/code&gt;, and the &lt;code&gt;onclick&lt;/code&gt; event happens only on that specific button.&lt;/p&gt;

&lt;p&gt;Output - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---5dgkmgP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2qbfjtvr12g7i1k93j0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---5dgkmgP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2qbfjtvr12g7i1k93j0.png" alt="this-5" width="304" height="98"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How about when we call a function within the element?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; 
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;this-three&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="nx"&gt;onclick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;changeColor()&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;Three&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;changeColor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that we are calling the &lt;code&gt;console.log()&lt;/code&gt; function along with &lt;code&gt;this&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So, the value of &lt;code&gt;this&lt;/code&gt; is as below -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5d_60RS8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aad3fynepg0c5broo26w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5d_60RS8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aad3fynepg0c5broo26w.png" alt="this-6" width="880" height="171"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, &lt;code&gt;this&lt;/code&gt; points to the global &lt;code&gt;Window&lt;/code&gt; object. We can see that Default Binding occurs here since the function &lt;code&gt;changeColor()&lt;/code&gt; is called without a prefix.&lt;/p&gt;




&lt;p&gt;&lt;code&gt;this&lt;/code&gt; is definitely strange. However, the use cases provide us with flexibility to use objects effectively. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>What Engagement Model is Right for You?</title>
      <author>Emerline</author>
      <pubDate>Thu, 18 Nov 2021 07:48:33 +0000</pubDate>
      <link>https://dev.to/emerlinedev/what-engagement-model-is-right-for-you-p24</link>
      <guid>https://dev.to/emerlinedev/what-engagement-model-is-right-for-you-p24</guid>
      <description>&lt;p&gt;&lt;strong&gt;How to choose the most efficient engagement model to lay a solid foundation for the successful project delivery? Emerline will tell you about the available options, highlight which one works best for each particular case, and share the team‚Äôs approach to technological partnership and other engagement scenarios.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-an-engagement-model"&gt;
  &lt;/a&gt;
  What is an Engagement Model?
&lt;/h1&gt;

&lt;p&gt;The customer success journey starts with the right engagement model they choose for business relationships with the software development partner. Depending on the project size, duration, concept, and strategy, clients agree on an optimal IT engagement model with their service provider.&lt;/p&gt;

&lt;p&gt;A project engagement model is a plan that describes the specifics of collaboration between a customer and a vendor during the project development.&lt;/p&gt;

&lt;p&gt;Engagement models specify the way specialists are engaged in the project, areas of responsibility, payment terms, timelines, management issues, etc.&lt;/p&gt;

&lt;p&gt;There is no multipurpose engagement model for software development to suit any project and satisfy all customers‚Äô demands ‚Äî its choice depends on the project specifics and client‚Äôs software development partnership preferences.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q_EJ4lFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qmf0bvknp9zs01vfrhbk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q_EJ4lFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qmf0bvknp9zs01vfrhbk.png" alt="Image description" width="880" height="483"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-engagement-models-for-customer-success"&gt;
  &lt;/a&gt;
  5 Engagement Models for Customer Success
&lt;/h1&gt;

&lt;p&gt;There are a number of IT engagement model examples ‚Äî each one is characterized by a particular working mode, pricing terms and conditions, and the vendor team‚Äôs project engagement. Let‚Äôs explore the most popular engagement model scenarios and mark their distinctive features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dedicated Team&lt;/strong&gt;&lt;br&gt;
This IT engagement model implies that a service provider offers their specialists to a customer based on the required skills, competencies, and tech stack.&lt;/p&gt;

&lt;p&gt;Clients share precise info on what they expect from the software product or service; how many professionals are requested for working on the project; and which technological preferences they have.&lt;/p&gt;

&lt;p&gt;The more comprehensive these entry points are, the more efficient and well-matched embedded resources the software development provider suggests.&lt;/p&gt;

&lt;p&gt;It‚Äôs up to the customer to choose special aspects of this engagement model‚Äôs project management and define whether they will manage the dedicated team themselves or involve a project manager from the vendor‚Äôs side. As a rule, embedded resources work alongside in-house specialists, interact with the internal team, and augment it, while being located on the premises of the service provider‚Äôs office.&lt;/p&gt;

&lt;p&gt;The focus is on high quality delivery.&lt;/p&gt;

&lt;p&gt;A pricing model is simple and directly linked to the dedicated team‚Äôs size and hourly rates of each specialist involved. In other words, mind monthly salaries and extra costs (service provider‚Äôs fee, administrative needs, and so on), as this will make up the billing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hiring a dedicated team from an outsourcing software development company is much cheaper than recruiting in-house specialists.&lt;/li&gt;
&lt;li&gt;The team involved in the project will be focused only on your project.&lt;/li&gt;
&lt;li&gt;The dedicated team model can significantly speed up the software development project delivery.&lt;/li&gt;
&lt;li&gt;The team and the client collaborate closely on the project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The model is not efficient for short-term projects.&lt;/li&gt;
&lt;li&gt;The issues related to different time zones may relate, but they can easily be solved if flexible methodologies like Agile are applied.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Outstaffing Model&lt;/strong&gt;&lt;br&gt;
Have a lack of qualified Java developers or quality assurance specialists for your project? Need to find Node.js professionals, as your product idea dictates the usage of this tech?&lt;/p&gt;

&lt;p&gt;All these and other requests are covered with the help of resource staffing.&lt;/p&gt;

&lt;p&gt;Outstaffing suppliers carefully clarify the needs of clients and give them the resources who have proven expertise in the requested fields, industries, or technologies.&lt;/p&gt;

&lt;p&gt;Among the other IT engagement models, outstaffing is notable for personnel management that is provided by the client, whereas the companies going in for IT outstaffing services are responsible for staff employment, insurance, taxes, etc.&lt;/p&gt;

&lt;p&gt;In some cases, resource staffing means relocation and working onsite, so that the client can take a closer look at each project iteration and monitor all stages of development processes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The model is advantageous for those companies that have technical skills to control what developers will do and how they will do it.&lt;/li&gt;
&lt;li&gt;Outstaffing is more affordable than hiring in-house developers as companies can save money on administrative expenses such as staff employment, taxes, benefits, etc.&lt;/li&gt;
&lt;li&gt;The outstaffing model allows organizations to quickly and flexibly extend their in-house team whenever they need extra resources for their product development.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Outstaffing implies more responsibility on the client‚Äôs side, that‚Äôs why they need to have a technical specialist to be able to control remote developers.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2XLBQLjB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1r3ars7pccle3trmzw3k.png" alt="Image description" width="880" height="481"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Fixed Bid Project Team&lt;/strong&gt;&lt;br&gt;
Fixed bid contracts are all about strict terms and conditions. They are based on a precise estimate of what should be done, exact project time frames, and predetermined budgets. So, the name of the engagement model speaks for itself ‚Äî provided that customers announce a specific price (or at least a price range), a software development outsourcer will be committed to providing a set of services within the agreed bid billing.&lt;/p&gt;

&lt;p&gt;In terms of the fixed bid pricing model, both project scope with the clearly defined customer‚Äôs requirements and price are fixed in the beginning and remain unchanged during the whole project lifecycle.&lt;/p&gt;

&lt;p&gt;In case of extra work (new product features, add-ons, or services that haven‚Äôt been specified before), clients and software development providers tend to make additional contractual agreements. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;According to the fixed bid project model, the price for developers‚Äô work is stable if there‚Äôs a detailed specification.&lt;/li&gt;
&lt;li&gt;Once the contract is assigned, there is a strict deadline the project is delivered.&lt;/li&gt;
&lt;li&gt;Companies don‚Äôt need to cover additional costs but only what is outlined in the agreement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The model isn‚Äôt suitable for projects that need flexibility in requirements as once the agreement is approved by both sides, nothing can be changed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Technology Partner&lt;/strong&gt;&lt;br&gt;
It would be inadequate to measure technology partnership with monetary relations or a number of specialists engaged in the development of software solutions.&lt;/p&gt;

&lt;p&gt;Technology Partner is a company with a profound experience and a team of experts from different fields, including solution architects, consultants, business analysts, development and quality assurance specialists, designers, security professionals, project managers, and other roles, which is in charge of delivering turnkey solutions.&lt;/p&gt;

&lt;p&gt;Responsibility areas of technology partners include building/reviewing solution architecture, software development, advising on optimal tech stack and integration, IT infrastructure analysis, and security/privacy audit. A tech partner is providing quality knowledge sharing if needed ‚Äî education and training are their standards, too.&lt;/p&gt;

&lt;p&gt;Tech partners deal with various engagement scenarios. Even if a customer has just an ‚Äòidea on a napkin‚Äô, without clearly defined requirements or business goals, the right technology partner will help to prove its viability before the successful implementation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A reliable technology partner strives to offer cost-effective solutions to reduce your operating expenses.&lt;/li&gt;
&lt;li&gt;Companies get access to a wide range of experienced specialists with different expertise, including developers, designers, testers, business analysts, etc.&lt;/li&gt;
&lt;li&gt;This engagement model implies a wide area of responsibility on the technology partner‚Äôs side, ranging from software development to advising on the optimal tech stack.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It won‚Äôt work for short-term projects and companies that have a solid in-house technical expertise.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Offshore Development Center (ODC)&lt;/strong&gt;&lt;br&gt;
Do you need to reduce costs yet set up an IT department with highly skilled specialists? The best decision would be to transfer it to an offshore location. An offshore development center is typically opened in offshore locations with favorable economic conditions, a wide pool of qualified tech talents in the labor market at reasonable prices.&lt;/p&gt;

&lt;p&gt;Working in collaboration with a service provider, you don‚Äôt need to worry about such business setup challenges as hiring specialists, infrastructure establishment, dealing with legal regulations while opening a new legal entity, etc. In general, a customer receives an independent IT department with all labor resources, infrastructure, and office equipment required for its operation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;By employing the ODC model, customers reduce costs on purchasing and maintaining of hardware and office equipment.&lt;/li&gt;
&lt;li&gt;Service providers are responsible for hiring and administrative costs, including salaries, bonuses, vacations, taxes, etc.&lt;/li&gt;
&lt;li&gt;The ODC will function according to your corporate strategy, and the team will be dedicated only to your project.&lt;/li&gt;
&lt;li&gt;Companies can quickly scale their business at any stage with no additional investment in infrastructure and operations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Though the ODC model reduces costs, it won‚Äôt work for a short-term project with clear and fixed requirements.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--65jtyUta--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c8hzzwuxg5p637cwfo36.png" alt="Image description" width="880" height="543"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#how-to-select-the-right-engagement-model-for-business-software-development"&gt;
  &lt;/a&gt;
  How To Select The Right Engagement Model For Business Software Development?
&lt;/h1&gt;

&lt;p&gt;To make sure you choose the right engagement model, you should answer several questions to understand your needs. Find the list of questions about your projects and think over the answers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Type of project.&lt;/strong&gt; Is your project simple or complex?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Budget.&lt;/strong&gt; Do you need to fit into a strict budget or can afford to extend the budget if needed?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Flexibility.&lt;/strong&gt; Do you want to be able to make flexible decisions or change requirements during the process of product development?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Time frame.&lt;/strong&gt; Should the project be delivered as soon as possible or within an exact deadline? Do you have a specific deadline in mind?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Project management.&lt;/strong&gt; Do you have the expertise to control product development by yourself or prefer to entrust it to a third party?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Expertise.&lt;/strong&gt; Do you need to augment your team with additional expertise or a dedicated team with specific expertise?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As each engagement model has its peculiar features and can perfectly suit one project, but become irrelevant for another, here are some correlations between engagement models and project types.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dedicated Team&lt;/strong&gt;&lt;br&gt;
It works best when the project scope is large or isn‚Äôt clearly defined. When the requirements vary and there are high chances they change in the course of the development process, the dedicated team will adapt to the shifts and go on implementing new project features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Outstaffing&lt;/strong&gt;&lt;br&gt;
A key factor while taking into account this business engagement model is cost reduction. If the client possesses strong project management competencies and is ready to put much effort into the supervising process, it makes perfect sense to address an outsourcing vendor for developers or QA specialists, for instance.&lt;/p&gt;

&lt;p&gt;When a customer has a clear product vision and intends to remain a major business strategy decision maker, while demanding purely technical development or implementation assistance, outstaffing is ideal.&lt;/p&gt;

&lt;p&gt;If there is a need to extend your team with the members having specific tech expertise, this engagement model might be a good choice as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fixed Bid&lt;/strong&gt;&lt;br&gt;
Have a detailed specification of your project that won‚Äôt be altering in the future? Need to be ready with a software solution in the agreed terms? Launch a small project with a limited set of features and clearly defined requirements?&lt;/p&gt;

&lt;p&gt;We‚Äôd recommend to consider the fixed bid project team for such scenarios ‚Äî no extra fees during the project development and predictable deadlines.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Technology Partner&lt;/strong&gt;&lt;br&gt;
This approach is about the other dimensions of customer engagement and the degree of vendor‚Äôs contribution.&lt;/p&gt;

&lt;p&gt;Technology partners manage the project from the idea to implementation and can cover any business or tech demand, from defining the right product development strategy to conducting training sessions after the solution goes live.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Offshore Development Center&lt;/strong&gt;&lt;br&gt;
This engagement model is all about long-term cooperation, cost reduction, and flexibility. If you need a quality product yet don‚Äôt want to spend too much money on establishing an in-house IT department, the ODC setup will work best for you.&lt;/p&gt;

&lt;p&gt;When it comes to flexibility, the model allows you to scale the project with new talents at any stage and easily adapt to evolving project changes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QQ3ZLghB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xo9mx580oao8ehvbdel.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QQ3ZLghB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xo9mx580oao8ehvbdel.png" alt="Image description" width="880" height="545"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#our-approach-to-the-engagement-process"&gt;
  &lt;/a&gt;
  Our Approach to the Engagement Process
&lt;/h1&gt;

&lt;p&gt;Regardless of the engagement models preferred by our customers, Emerline delivers successful projects, while following any of them. Either your request asks for Java development specialists only or needs the profound contribution of our entire expert team, we are glad to help. Below we‚Äôll share our key competencies and principles related to the project delivery. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our team has all core competencies and enough expertise to lead a project from scratch&lt;/strong&gt;&lt;br&gt;
Well, it‚Äôs more about technology partnership ‚Äî while following this engagement model, Emerline explores a vague idea, shares their product vision, and builds a turnkey solution, as we have the key roles to make your product a success. When all of them, from business analysts to design thinking experts, are in one place and make every effort to exceed project expectations and achieve project goals, it will be the best possible outcome.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The versatile tech stack we are experts in allows us to select the right technologies for the project implementation&lt;/strong&gt;&lt;br&gt;
If Java or .NET would prevent your solution from being as convenient and multifunctional as it could be, we‚Äôd suggest you another tech. The idea is that our expertise in a wide technology spectrum allows us to select the right tools, frameworks, or software development kits for product development without being limited to one or two options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Involve us at any project stage and for any project scale&lt;/strong&gt;&lt;br&gt;
A from-scratch project or a functioning solution that needs some extra features to add? Both! Emerline joins the projects at any stage required and assists with any scope of work, either completely or partially. Our flexibility relates to the project size as well ‚Äî we are experienced in working with both startups and huge corporates.&lt;/p&gt;

&lt;p&gt;Originally published at &lt;a href="https://emerline.com"&gt;https://emerline.com&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>softwaredevelopment</category>
      <category>productivity</category>
      <category>programming</category>
      <category>technology</category>
    </item>
    <item>
      <title>Observer Pattern | Design Patterns in Java</title>
      <author>coder4life</author>
      <pubDate>Thu, 18 Nov 2021 07:44:56 +0000</pubDate>
      <link>https://dev.to/coder4_life/observer-pattern-design-patterns-in-java-5f6m</link>
      <guid>https://dev.to/coder4_life/observer-pattern-design-patterns-in-java-5f6m</guid>
      <description>&lt;p&gt;Behavioral design pattern: Watch a Java implementation of the Observer Pattern. An observable ("Weather" object in example) is an object which notifies observers ("Person" objects in example) about the changes in its state.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/eQkJ0Ef9Mh4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>architecture</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>HTML tags | bdi</title>
      <author>Carlos Espada</author>
      <pubDate>Thu, 18 Nov 2021 07:26:53 +0000</pubDate>
      <link>https://dev.to/carlosespada/html-tags-bdi-5aj7</link>
      <guid>https://dev.to/carlosespada/html-tags-bdi-5aj7</guid>
      <description>&lt;p&gt;The &lt;code&gt;&amp;lt;bdi&amp;gt;&lt;/code&gt; element (&lt;em&gt;Bi-Directional Isolation&lt;/em&gt;) tells the browser's bidirectional algorithm to &lt;strong&gt;treat the text it contains in isolation from its surrounding text&lt;/strong&gt;. It's particularly useful when a website dynamically inserts some text and doesn't know the directionality of the text being inserted.&lt;/p&gt;

&lt;p&gt;Bidirectional text is text that may contain both sequences of characters that are arranged left-to-right (LTR) and sequences of characters that are arranged right-to-left (RTL), such as an Arabic quotation embedded in an English string. Browsers implement the &lt;a href="https://www.w3.org/International/articles/inline-bidi-markup/uba-basics"&gt;Unicode Bidirectional Algorithm&lt;/a&gt; to handle this. In this algorithm, characters are given an implicit directionality: for example, Latin characters are treated as LTR while Arabic characters are treated as RTL. Some other characters (such as spaces and some punctuation) are treated as neutral and are assigned directionality based on that of their surrounding characters.&lt;/p&gt;

&lt;p&gt;Usually, the bidirectional algorithm will do the right thing without the author having to provide any special markup but, occasionally, the algorithm needs help. That's where &lt;code&gt;&amp;lt;bdi&amp;gt;&lt;/code&gt; comes in.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;bdi&amp;gt;&lt;/code&gt; element is used to wrap a span of text and instructs the bidirectional algorithm to treat this text in isolation from its surroundings. This works in two ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The directionality of text embedded in &lt;code&gt;&amp;lt;bdi&amp;gt;&lt;/code&gt; does not influence the directionality of the surrounding text.&lt;/li&gt;
&lt;li&gt;The directionality of text embedded in &lt;code&gt;&amp;lt;bdi&amp;gt;&lt;/code&gt; is not influenced by the directionality of the surrounding text.
For example, consider some text like:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;EMBEDDED-TEXT - 1st place
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If &lt;code&gt;EMBEDDED-TEXT&lt;/code&gt; is LTR, this works fine. But if &lt;code&gt;EMBEDDED-TEXT&lt;/code&gt; is RTL, then  &lt;code&gt;- 1&lt;/code&gt; will be treated as RTL text (because it consists of neutral and weak characters). The result will be garbled:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1 - EMBEDDED-TEXTst place
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you know the directionality of &lt;code&gt;EMBEDDED-TEXT&lt;/code&gt; in advance, you can fix this problem by wrapping &lt;code&gt;EMBEDDED-TEXT&lt;/code&gt; in a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; with the &lt;code&gt;dir&lt;/code&gt; attribute set to the known directionality. But if you don't know the directionality - for example, because &lt;code&gt;EMBEDDED-TEXT&lt;/code&gt; is being read from a database or entered by the user - you should use &lt;code&gt;&amp;lt;bdi&amp;gt;&lt;/code&gt; to prevent the directionality of &lt;code&gt;EMBEDDED-TEXT&lt;/code&gt; from affecting its surroundings.&lt;/p&gt;

&lt;p&gt;Though the same visual effect can be achieved using the CSS rule &lt;code&gt;unicode-bidi: isolate&lt;/code&gt; on a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; or another text-formatting element, HTML authors &lt;strong&gt;should not use this approach&lt;/strong&gt; because it is not semantic and browsers are allowed to ignore CSS styling.&lt;/p&gt;

&lt;p&gt;Embedding the characters in &lt;code&gt;&amp;lt;span dir="auto"&amp;gt;&lt;/code&gt; has the same effect as using &lt;code&gt;&amp;lt;bdi&amp;gt;&lt;/code&gt;, but its semantics are less clear.&lt;/p&gt;

&lt;p&gt;Like all other HTML elements, &lt;code&gt;&amp;lt;bdi&amp;gt;&lt;/code&gt; element supports the global attributes, except that the &lt;code&gt;dir&lt;/code&gt; attribute behaves differently than normal: it defaults to &lt;code&gt;auto&lt;/code&gt;, meaning its value is never inherited from the parent element. This means that unless you specify a value of either &lt;code&gt;rtl&lt;/code&gt; or &lt;code&gt;ltr&lt;/code&gt; for &lt;code&gt;dir&lt;/code&gt;, the user agent will determine the correct directionality to use based on the contents of the &lt;code&gt;&amp;lt;bdi&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type: &lt;em&gt;inline&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Self-closing: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Semantic value: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/tags/tag_bdi.asp"&gt;Definition&lt;/a&gt; | &lt;a href="https://www.w3schools.com/tags/tryit.asp?filename=tryhtml5_bdi"&gt;Example&lt;/a&gt; | &lt;a href="https://caniuse.com/mdn-html_elements_bdi"&gt;Support&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>tags</category>
      <category>bdi</category>
    </item>
    <item>
      <title>How JavaScript works behind the scene - Execution Context and Call Stack</title>
      <author>Swastik Yadav</author>
      <pubDate>Thu, 18 Nov 2021 07:15:08 +0000</pubDate>
      <link>https://dev.to/swastikyadav/how-javascript-works-behind-the-scene-execution-context-and-call-stack-3dnc</link>
      <guid>https://dev.to/swastikyadav/how-javascript-works-behind-the-scene-execution-context-and-call-stack-3dnc</guid>
      <description>&lt;p&gt;Hello World!&lt;/p&gt;

&lt;p&gt;JavaScript is the most hated as well as the most loved programming language in the world. And the reason for the hate is that most people don't understand the underlying beauty of it.&lt;/p&gt;

&lt;p&gt;So, In this post we will see how functions are executed in JavaScript, and how variables are defined and initialized.&lt;/p&gt;

&lt;p&gt;We will also discuss, what is hoisting?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#execution-context"&gt;
  &lt;/a&gt;
  Execution Context
&lt;/h2&gt;

&lt;p&gt;Any function in JavaScript is executed in two phases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Declaration Phase&lt;/strong&gt;: This phase is only responsible for declaring variables and functions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Execution Phase&lt;/strong&gt;: This phase is responsible for executing function blocks.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's understand both phases one by one.&lt;/p&gt;

&lt;p&gt;We will use the following snippet to understand the execution context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;retrn&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 68&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 480&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;sumProduct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sumProduct&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: In the above snippet some variables are defined with &lt;strong&gt;var&lt;/strong&gt;, some with &lt;strong&gt;let&lt;/strong&gt;, and some with &lt;strong&gt;const&lt;/strong&gt;. I did that on purpose to show how each of them works differently in execution context.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#declaration-phase"&gt;
  &lt;/a&gt;
  Declaration Phase
&lt;/h2&gt;

&lt;p&gt;In declaration phase variables and functions are allocated memory. But there is a slight difference in where the memory is allocated to var and let, const.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;var&lt;/strong&gt;: var is allocated memory in global scope or in it's function scope and is initialized with *

&lt;code&gt;undefined&lt;/code&gt;

*.&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;let and const&lt;/strong&gt;: let and const are allocated memory in TDZ (Temporal Dead Zone), hence is not accessible or defined while the variable is in TDZ. It remains in TDZ unless assigned a value (initialized).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;TDZ (Temporal Dead Zone) is the time between hoisting (declaration) and value assignment (initialization).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--znSyxf81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uvmu4my9ewjr16trryjx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--znSyxf81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uvmu4my9ewjr16trryjx.png" alt="declaration phase" width="700" height="349"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#execution-phase"&gt;
  &lt;/a&gt;
  Execution Phase
&lt;/h2&gt;

&lt;p&gt;In execution context:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Function blocks are executed in global execution context.&lt;/li&gt;
&lt;li&gt;Variables are assigned values. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If there are nested functions, then further &lt;strong&gt;Function Execution Context&lt;/strong&gt; are created in GEC (both declaration and execution phases runs again for the nested function).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mm3wCDcQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt2klzkabvzl6t3wumcr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mm3wCDcQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt2klzkabvzl6t3wumcr.png" alt="execution phase" width="800" height="540"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One important thing to note is that, &lt;em&gt;Once a function is returned, it is cleared / removed from the execution context&lt;/em&gt;. And it is done with the &lt;strong&gt;Call Stack&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#callstack"&gt;
  &lt;/a&gt;
  CallStack
&lt;/h2&gt;

&lt;p&gt;Execution context is maintained using a "Call Stack". A stack is a LIFO (last in first out) data structure. In a stack we only insert or delete elements at the top of stack, think in terms of JavaScript Array.push and Array.pop method.&lt;/p&gt;

&lt;p&gt;There can be only one execution context running at a time, that's why &lt;strong&gt;JavaScript is a single threaded language&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Whenever an execution context is halted (may be due to some delay or data fetching), a different execution context becomes the current running EC. The halted EC might then at a later point pick back up where it left.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B_bQTcOl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/51e01efmqjwhzhz17kom.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B_bQTcOl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/51e01efmqjwhzhz17kom.png" alt="call stack" width="700" height="577"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hoisting"&gt;
  &lt;/a&gt;
  Hoisting
&lt;/h2&gt;

&lt;p&gt;The concept that variables are allocated memory (declared) before the execution of code is known as hoisting.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;var is accessible (with undefined as value) before it's declaration because it is declared in global memory.&lt;/li&gt;
&lt;li&gt;let and const are also hoisted (declared before execution) but in TDZ (temporal dead zone), hence are not accessible before their declaration in the code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, if the question is, Are let and const hoisted in JavaScript? The answer is &lt;strong&gt;Yes, they are hoisted but in temporal dead zone&lt;/strong&gt;.&lt;/p&gt;




&lt;p&gt;So, that's it for this post, if you found this post helpful consider joining my &lt;a href="https://www.getrevue.co/profile/8020lessons"&gt;8020 Newsletter&lt;/a&gt; where I share epic weekly content to build your skillset.&lt;/p&gt;

&lt;p&gt;Thank You!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Acquiring Data From Data Warehouse: An Overview</title>
      <author>RudderStack</author>
      <pubDate>Thu, 18 Nov 2021 07:13:55 +0000</pubDate>
      <link>https://dev.to/rudderstack/acquiring-data-from-data-warehouse-an-overview-5el</link>
      <guid>https://dev.to/rudderstack/acquiring-data-from-data-warehouse-an-overview-5el</guid>
      <description>&lt;p&gt;A data warehouse organizes and stores operational enterprise-wide data. Typically, a data warehouse is a mix of older legacy application systems yet unintegrated. In this article, we will look into a typical data warehouse structure, the information stored in it, and the tools that enable users to both access and retrieve data from it.&lt;/p&gt;

&lt;p&gt;To make the best of a data warehouse, users first need to understand the importance of developing excellent 'communication' skills with such a wealth of information.&lt;/p&gt;

&lt;p&gt;The information within a Data warehouse is usually accessed using an SQL query. The¬†SELECT¬†statement is in charge of querying the variety of tables and returning the previously requested results in a data warehouse environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-warehouse-structure"&gt;
  &lt;/a&gt;
  Data Warehouse Structure
&lt;/h2&gt;

&lt;p&gt;Data warehouses have a unique structure featuring former and recent data and various levels of specified vantage points and summary aspects.&lt;/p&gt;

&lt;p&gt;A data warehouse serves as storage for four types of data as follows:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#older-detail-data"&gt;
  &lt;/a&gt;
  Older Detail Data
&lt;/h3&gt;

&lt;p&gt;Older detail data combines earlier used data, as old as five or ten years, or longer.&lt;br&gt;
This is a mass volume of data, typically stored on tape or similar mass storage options.&lt;br&gt;
However, expensive disk storage may also be used in older data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#current-detail-data"&gt;
  &lt;/a&gt;
  Current Detail Data
&lt;/h3&gt;

&lt;p&gt;Current detail data consists of recently used data and, unlike older detail data, this one always comes with a shorter period. Even though it can be voluminous, current data is mostly stored on disks, thus granting faster access.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lightly-summarized-data"&gt;
  &lt;/a&gt;
  Lightly Summarized Data
&lt;/h3&gt;

&lt;p&gt;Lightly summarized data uses data refined from¬†&lt;em&gt;Current detail data&lt;/em&gt;. This type always resides on a disk and is summarized per a certain unit of time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#highly-summarized-data"&gt;
  &lt;/a&gt;
  Highly Summarized Data
&lt;/h3&gt;

&lt;p&gt;This data presents information outsourced from¬†&lt;em&gt;Lightly summarized data&lt;/em&gt;. In this case, the data is disk-stored and compacted, making it easily accessible.&lt;/p&gt;

&lt;p&gt;The last aspect of data warehouses is¬†metadata, which can be best described as data about data. Metadata provides information about the data warehouse structure and its many algorithms used in data summarizations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-warehouse-administration"&gt;
  &lt;/a&gt;
  Data Warehouse Administration
&lt;/h2&gt;

&lt;p&gt;Tuning and administering data warehouse activities is many times necessary for improving both its performance and availability.&lt;/p&gt;

&lt;p&gt;Indexing makes a solid example of data administration, given the growing index numbers typically assigned to data, particularly in higher summarization levels, far better performing than low-level data.&lt;/p&gt;

&lt;p&gt;Generally, this is the result of the total data volume seen in lower levels.&lt;/p&gt;

&lt;p&gt;Assigning indexes at lower levels is simply not that much desirable. Processes such as those used in indexing operations often demand broader resources in low-level details, particularly when compared to high-level data summarization.&lt;/p&gt;

&lt;p&gt;Most times, data administration activities are reserved for high-level data summarization.&lt;/p&gt;

&lt;p&gt;As a result, lower-level detail data is usually left intact.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-data-out-of-the-warehouse"&gt;
  &lt;/a&gt;
  Getting Data Out Of The Warehouse
&lt;/h2&gt;

&lt;p&gt;Users should simply request and examine data within the system as soon as the warehouse is set up.&lt;/p&gt;

&lt;p&gt;To optimize queries, users should put their focus on the six following subjects:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-tuning-a-complex-query"&gt;
  &lt;/a&gt;
  #1 Tuning A Complex Query
&lt;/h3&gt;

&lt;p&gt;This section should cover the query run time, reduce the table size, and simplify joins.&lt;/p&gt;

&lt;p&gt;While the latter might lack accuracy, it comes quite handy in terms of the task duration.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-using-an-execution-plan"&gt;
  &lt;/a&gt;
  #2 Using An Execution Plan
&lt;/h3&gt;

&lt;p&gt;This plan should consist of a graphical representation of the many steps involved in the database tables fetching results. The two types of execution plans include¬†Estimated Execution Plan¬†and¬†Actual Execution Plan.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-simplifying-join-mechanisms"&gt;
  &lt;/a&gt;
  #3 Simplifying Join Mechanisms
&lt;/h3&gt;

&lt;p&gt;Further work will be much easier if users first make joins less complicated by reducing excess volumes of data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-understand-disk-memory-io-usage-considerations"&gt;
  &lt;/a&gt;
  #4 Understand Disk / Memory / IO Usage Considerations
&lt;/h3&gt;

&lt;p&gt;The standard volume within a data warehouse is I/O focused and features operations such as mass data loads, index builds, and developing queries and materialization of greater data amounts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-using-parallelism"&gt;
  &lt;/a&gt;
  #5 Using Parallelism
&lt;/h3&gt;

&lt;p&gt;Parallelism will facilitate and accelerate the work by enabling several people to manage the same task simultaneously.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-writing-hierarchical-queries"&gt;
  &lt;/a&gt;
  #6 Writing Hierarchical Queries
&lt;/h3&gt;

&lt;p&gt;This one is self-explanatory and to the point.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Learning how to communicate smoothly and effortlessly with a data warehouse will bring huge business prospects and a variety of useful information for your enterprise.&lt;/p&gt;

&lt;p&gt;The SQL procedure offers a powerful and comprehensive set of tools indispensable to data retrieving as a whole.&lt;/p&gt;

&lt;p&gt;Overall, mastering this technological art will simplify your engagement while alleviating tasks and aiding users to experience a wide array of business benefits.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sign-up-for-free-and-start-sending-data"&gt;
  &lt;/a&gt;
  Sign Up For Free And Start Sending Data
&lt;/h3&gt;

&lt;p&gt;Test out our event stream, ELT, and reverse-ETL pipelines. Use our HTTP source to send data in less than 5 minutes, or install one of our 12 SDKs in your website or app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://app.rudderstack.com/signup?type=freetrial"&gt;Get Started&lt;/a&gt;&lt;/p&gt;

</description>
      <category>data</category>
      <category>datawarehouse</category>
      <category>rudderstack</category>
    </item>
    <item>
      <title>1 thing beginner programmers always neglect. That's why they will neglect this post too</title>
      <author>Saifullah Usmani</author>
      <pubDate>Thu, 18 Nov 2021 07:04:49 +0000</pubDate>
      <link>https://dev.to/saifullahusmani/1-thing-beginner-programmers-always-neglect-thats-why-they-will-neglect-this-post-too-2j1k</link>
      <guid>https://dev.to/saifullahusmani/1-thing-beginner-programmers-always-neglect-thats-why-they-will-neglect-this-post-too-2j1k</guid>
      <description>&lt;p&gt;I used to neglect this thing as well until I started doing programming seriously. &lt;/p&gt;

&lt;p&gt;Hi, my name is Saifullah Usmani. I am a Programmer and a Graphic Designer. I have been programming for almost 5 years now. And I have worked with several freelance clients.&lt;/p&gt;

&lt;p&gt;If it sounds like a thing that will add value in your life then consider following my page because I keep creating quality content for you.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-beginner-programmers-neglect"&gt;
  &lt;/a&gt;
  What beginner programmers neglect?
&lt;/h2&gt;

&lt;p&gt;They neglect the basics, they neglect the theory and focus on practicality. &lt;/p&gt;

&lt;p&gt;It is not bad and it is the fastest way to get started. But without a base the building will only fall. It won't rise enough.&lt;/p&gt;

&lt;p&gt;Remembering syntax is not the thing. Remembering what is does under the hood makes you a good logic builder. &lt;/p&gt;

&lt;p&gt;And you are paid for good logic not for spaghetti code.&lt;/p&gt;

&lt;p&gt;If you understand the real function behind syntax of programming languages you will be able to learn any programming language in a day. It is same for every high level  programming language. You have loops, conditional statements, functions/classes, variables, data types, error handling and helper functions. &lt;br&gt;
It is same for every language and if you understand what they do you can then learn the syntax and use them as you see fit for the specific problem. &lt;/p&gt;

&lt;p&gt;But if you don't understand the puzzle pieces you will obviously put them in the wrong order. And the wrong order is what makes your code useless. &lt;/p&gt;

&lt;p&gt;Good understanding of these functions will allow you to talk to computer as you talk to humans. You will be able to transfer what you have in mind to code just like you do general languages with humans. &lt;/p&gt;

&lt;p&gt;After learning the base theory I am now able to transfer the logic I come up with in my mind for a specific problem to code. If I don't know the syntax I google it, because syntax is not what humans are supposed to remember because computers can do that too. We are humans we have to have the thinking which computers lack. That is what I do in order to solve problems that even stack overflow don't have because when working for client they will obviously try to come up with something unique that is maybe never done before. &lt;/p&gt;

&lt;p&gt;So if you are good with logic you are unstoppable with the power of code. &lt;/p&gt;

&lt;p&gt;That's it for today, hope you found the answer to some questions that beginners usually have in mind and what makes experienced programmer different from them. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-me"&gt;
  &lt;/a&gt;
  Follow me:
&lt;/h2&gt;

&lt;p&gt;Hire me: &lt;a href="https://www.fiverr.com/saifullah02"&gt;https://www.fiverr.com/saifullah02&lt;/a&gt; (For web development Purposes)&lt;br&gt;
My New Blog: &lt;a href="https://saifullahusmani.blogspot.com/"&gt;saifullahusmani.com&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Follow me here:&lt;/em&gt; &lt;a href="https://dev.to/saifullahusmani"&gt;https://dev.to/saifullahusmani&lt;/a&gt;&lt;br&gt;
&lt;em&gt;YouTube:&lt;/em&gt; &lt;a href="http://bit.ly/saifullahusmani"&gt;http://bit.ly/saifullahusmani&lt;/a&gt; (Programming Tutorials Coming Soon).&lt;br&gt;
&lt;em&gt;Discord:&lt;/em&gt; &lt;a href="https://discord.gg/AKyvy8Y"&gt;https://discord.gg/AKyvy8Y&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>New GitHub Rules Guide [git push -u origin main]</title>
      <author>Bek Brace</author>
      <pubDate>Thu, 18 Nov 2021 07:04:28 +0000</pubDate>
      <link>https://dev.to/bekbrace/new-rules-in-github-git-push-u-origin-main-2k82</link>
      <guid>https://dev.to/bekbrace/new-rules-in-github-git-push-u-origin-main-2k82</guid>
      <description>&lt;p&gt;This post explains very quickly how to push your code to your GitHub repository following the new rules imposed by GitHub company.&lt;/p&gt;

&lt;p&gt;For starters, you cannot use your password anymore, instead you should use a generated token by GitHub&lt;/p&gt;

&lt;p&gt;First of all you need to click on your profile picture and go to settings : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K43ILEg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ktkyj7hgvl97yc5nkxbq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K43ILEg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ktkyj7hgvl97yc5nkxbq.PNG" alt="Image description" width="468" height="623"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then you scroll down till you reach Developer settings, then click on that :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kWZ19pnt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hfv3f70affqo2dqo5j6v.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kWZ19pnt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hfv3f70affqo2dqo5j6v.PNG" alt="Image description" width="644" height="799"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From there, choose the last option - Personal Access Tokens :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bcGwceLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bljc4kbxyfa2hulvhzj3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bcGwceLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bljc4kbxyfa2hulvhzj3.PNG" alt="Image description" width="880" height="322"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then click on "Generate new token" : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PRi21xU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ucuzsjhyx7lptroytwq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PRi21xU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ucuzsjhyx7lptroytwq.PNG" alt="Image description" width="880" height="198"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First you need to type the name of the app/site you want to push : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---evFHBna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1av69702gsd2iogqc5e7.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---evFHBna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1av69702gsd2iogqc5e7.PNG" alt="Image description" width="842" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And then what I choose here is simply repo, but you can read every option in detail and choose whatever suits your needs : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OlNeoFKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xebl603naq6l46g64j9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OlNeoFKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xebl603naq6l46g64j9.PNG" alt="Image description" width="752" height="808"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally you will receive a token, you will copy it and substitute your password with it, and every time you want to push your code you will repeat the same steps and get a new generated token to enter with your username &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QTQkdG_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzpdn74akb90njkmuta4.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTQkdG_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzpdn74akb90njkmuta4.PNG" alt="Image description" width="880" height="453"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope this quick guide was useful, and I will see you in next posts - over and out&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Why Is React js a Good JavaScript Framework To Use For business?</title>
      <author>Hitesh Chauhan</author>
      <pubDate>Thu, 18 Nov 2021 06:58:07 +0000</pubDate>
      <link>https://dev.to/hiteshtbi/why-is-react-js-a-good-javascript-framework-to-use-for-business-3hcp</link>
      <guid>https://dev.to/hiteshtbi/why-is-react-js-a-good-javascript-framework-to-use-for-business-3hcp</guid>
      <description>&lt;p&gt;There has been an increase in the number of web applications due to the availability of sophisticated and lightweight JS frameworks. User-friendliness and application reliability are essential elements that end users look for in an application. Choosing a suitable framework becomes a difficult task from a commercial standpoint. Building interactive user interfaces using any of the development platforms is unquestionably time-consuming and difficult. So, why not hire React js developer to develop a unique web application with a javascript framework. It is undeniable that designing each part of a website takes unwavering effort, entire attention, and complete concentration. &lt;/p&gt;

&lt;p&gt;In this blog, we have discussed why one should select React Js and how it is beneficial. &lt;/p&gt;

&lt;h2&gt;Why should you use React Js?&lt;/h2&gt;

&lt;p&gt;You‚Äôre probably wondering why we want you to build your user interfaces with the React Js framework. All of this is because it is a remarkable JavaScript framework that has simplified the development process. As a result, it delivers a high-quality React Js application with the desired or required interfaces. React Js is a popular alternative for developing user-friendly and extremely compelling websites and applications, thanks to its introduction by Facebook‚Äôs developer community. Furthermore, React Js development gives up new opportunities for developers, allowing them to be more creative. Therefore, you must engage with &lt;a href="https://www.brihaspatitech.com/react-js-development-company"&gt;React js development company&lt;/a&gt; to get your web application to develop from the professional. &lt;/p&gt;

&lt;p&gt;React has the best performance and speed of all the JavaScript frameworks and libraries currently available. It features a global developer community with millions of members from all over the world. React‚Äôs components are simple to integrate into your existing code. It aids in the development of innovative user interfaces for enterprise applications. &lt;/p&gt;

&lt;h3&gt;What Is The JavaScript Framework Library, and What Does It Do?&lt;/h3&gt;

&lt;p&gt;The JavaScript Framework is a JavaScript application structure that can assist you in coding for your online application, but it pushes you to code in a specific style. Because all web development frameworks have their own rules and norms, there may be some limits and boundaries for using the framework.&lt;/p&gt;

&lt;p&gt;The JavaScript Library is a collection of functions that can be invoked from your parent code to meet specific needs. Each library has its own set of advantages. One of the advantages of utilizing React Js is that it makes the user interface more responsive and engaging. &lt;/p&gt;

&lt;p&gt;Do you know what a framework is? It is a prefabricated home in which you have to arrange your furnishing according to the space. Similarly, in the framework libraries are just like furniture. However, it is impossible to use every single piece of furniture. So, to use libraries for your web application, you can hire react js developer at a reasonable price.&lt;/p&gt;

&lt;h3&gt;Advantages of the JavaScript framework and libraries&lt;/h3&gt;

&lt;p&gt;Before exploring deep into React Js, let us discuss the perks of the framework and its libraries. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First item Frameworks have predefined functionalities that reduce the developer‚Äôs time spent coding.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Second item The reusability of code is improved by using a component-based code structure. It also gives a good model for comprehending the content‚Äôs structure and behavior. It means the design and structure are based on Components.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Third item Most current frameworks have their templating system, which has a clean and appropriate format and performs better.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And if we talk about the attributes of a framework, we have also discussed the libraries.&lt;/p&gt;

&lt;p&gt;The libraries of Javascript are simple to understand, efficient, and flexible.&lt;/p&gt;

&lt;p&gt;To enjoy all these features in your web application, let‚Äôs hire react js developer.&lt;/p&gt;

&lt;h3&gt;Benefits of the React js Framework for web application&lt;/h3&gt;

&lt;p&gt;React Js has a number of advantages, including the fact that it is simple to learn. For developers who are already familiar with JavaScript, React is a relatively simple language to pick up.&lt;/p&gt;

&lt;h4&gt;Scripting is a lot easier now&lt;/h4&gt;

&lt;p&gt;JSX is a feature provided by React (syntax extension). It makes programming and debugging quite straightforward.&lt;/p&gt;

&lt;h4&gt;Reusability&lt;/h4&gt;

&lt;p&gt;React features a component-based structure, which enables reuse.&lt;/p&gt;

&lt;h4&gt;Virtual Dom&lt;/h4&gt;

&lt;p&gt;The fundamental feature of React Js development services is Virtual Dom. It acts as a traffic booster for your website.&lt;/p&gt;

&lt;h4&gt;Benefits of React Js for Developers at a Higher Level&lt;/h4&gt;

&lt;p&gt;Do you know that React Native is a framework used for creating hybrid mobile apps? It will be easier to learn React Native if you have a decent understanding of React Js. Facebook is the one that launched both technologies. So, get the development services from the react js development company at a cost-effective price.&lt;/p&gt;

&lt;p&gt;GraphQL is a programming language that allows clients and servers to exchange data. It‚Äôs a different kind of RESTful API.&lt;/p&gt;

&lt;p&gt;Progressive Web Apps (PWA) is an acronym for Progressive Web Apps. It is simple to convert your web app into a PWA if it is written in React Js.&lt;/p&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;It‚Äôs easy to see why React Js is the greatest JS framework and library.  There are numerous features and benefits to using React JS to create a new web application.  It‚Äôs definitely a win-win situation for both clients and developers. So, if you‚Äôre seeking to develop a large-scale Web application for your company, &lt;a href="https://www.brihaspatitech.com/hire-react-js-developer"&gt;Hire React js developer&lt;/a&gt; from a well-known company.  &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>ux</category>
    </item>
    <item>
      <title>Ultimate Collection of JavaScript Learning Resources(FREE)</title>
      <author>Sajan</author>
      <pubDate>Thu, 18 Nov 2021 06:47:15 +0000</pubDate>
      <link>https://dev.to/sajanmangattu/ultimate-collection-of-javascript-learning-resourcesfree-9dk</link>
      <guid>https://dev.to/sajanmangattu/ultimate-collection-of-javascript-learning-resourcesfree-9dk</guid>
      <description>&lt;p&gt;What Exactly is JavaScript?&lt;/p&gt;

&lt;p&gt;Javascript is a programming language which is usually used as the core for Web Development and Application Development. It is an Object-Oriented Language and it can be used as part of HTML or as a standalone script for client-side scripting on the Web.&lt;/p&gt;

&lt;p&gt;JavaScript has been standardized so that different browsers can support it fully. This standardization was helped by Google‚Äôs V8 JavaScript engine, which was an open-source project that allowed a lot of developers to contribute their time and skills towards making better standards for this language.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cssauthor.com/javascript-learning-resources-free/"&gt;https://cssauthor.com/javascript-learning-resources-free/&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>E-Learning Application Development: Industry Outlook, Features &amp; Steps</title>
      <author>iWebServices</author>
      <pubDate>Thu, 18 Nov 2021 06:37:29 +0000</pubDate>
      <link>https://dev.to/iwebservices/e-learning-application-development-industry-outlook-features-steps-55n9</link>
      <guid>https://dev.to/iwebservices/e-learning-application-development-industry-outlook-features-steps-55n9</guid>
      <description>&lt;p&gt;In today‚Äôs scenario, the education sector has experienced rapid growth by introducing various E-Learning applications. We can install such learning applications on our mobile phones, laptops, or computers and can learn things according to our choice at any time from any place. They are called online learning applications; however, most of them offer features that work smoothly offline. If you don‚Äôt have a proper internet connection in your place, the best part is still you can access the courses by downloading them previously. &lt;/p&gt;

&lt;p&gt;However, online education industries are expecting to reach around $350 Billion in profit by 2025. The education sector has been changing drastically as more resources are getting available on the internet and making it more prosperous. Among these learning resources, e-learning applications come at the top of the list. The overall scenario of the teaching method and the entire education system has been changing forever since the arrival of these learning applications. The E-learning method has already accumulated praise from teachers, students, and their parents worldwide. &lt;a href="https://www.i-webservices.com/blog/mobility/e-learning-application-development-industry-outlook-features-steps/"&gt;Read More...&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to navigate the GitHub web without a mouse</title>
      <author>Michelle Mannering</author>
      <pubDate>Thu, 18 Nov 2021 06:26:57 +0000</pubDate>
      <link>https://dev.to/github/how-to-navigate-the-github-web-without-a-mouse-3enf</link>
      <guid>https://dev.to/github/how-to-navigate-the-github-web-without-a-mouse-3enf</guid>
      <description>&lt;p&gt;Developers are always thinking about productivity. Faster ways to do things. Shortcuts to take. Corners to cut.&lt;/p&gt;

&lt;p&gt;Earlier in the year, I wrote a post on some of my favourite keyboard shortcuts. Now I'm here with the ultimate keyboard shortcut.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mishmanners" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Rph_F4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ak56TdXS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/397557/4eb4ece3-2832-407c-b933-f1b4b58829e6.jpg" alt="mishmanners"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mishmanners/keyboard-shortcuts-for-github-your-key-to-increased-productivity-bm0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Keyboard shortcuts for GitHub ‚Ä¢ your key to increased productivity&lt;/h2&gt;
      &lt;h3&gt;Michelle Mannering „Éª Mar 12 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#navigating-without-a-mouse"&gt;
  &lt;/a&gt;
  Navigating without a mouse
&lt;/h2&gt;

&lt;p&gt;One of the reasons we love the command line is it's quick. There's no need to grab your mouse and navigate the screen. Everything is done on your keyboard.&lt;/p&gt;

&lt;p&gt;Now we've created a way for you to navigate the GitHub web without using a mouse.&lt;/p&gt;

&lt;p&gt;It's called the &lt;strong&gt;Command Palette&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;When you're on &lt;a href="https://github.com"&gt;GitHub.com&lt;/a&gt;, press &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (for Windows/Linux), or &lt;code&gt;‚åò&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (macOS), and the new command palette will appear.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CYUw_2VU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3acptsic2e9g2uun9cfm.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CYUw_2VU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3acptsic2e9g2uun9cfm.JPG" alt="Command palette" width="777" height="671"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This window will appear on any &lt;a href="https://github.com"&gt;GitHub.com&lt;/a&gt; page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-can-do-with-the-command-palette"&gt;
  &lt;/a&gt;
  What you can do with the Command Palette
&lt;/h2&gt;

&lt;p&gt;The Command Palette is designed to make it easy for you to navigate GitHub, search, and run commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Search&lt;/strong&gt; by typing the path or string into the Command Palette&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Filter&lt;/strong&gt; your search terms by using &lt;code&gt;Tab&lt;/code&gt; to cycle through users, org, or repo&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Expand&lt;/strong&gt; the scope or your search by using the &lt;code&gt;Backspace&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt; keys&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Clear&lt;/strong&gt; your search by using &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;Backspace&lt;/code&gt; (for Windows/Linux), or &lt;code&gt;‚åò&lt;/code&gt;+&lt;code&gt;Backspace&lt;/code&gt; (macOS)&lt;/li&gt;
&lt;li&gt;Search &lt;strong&gt;Issues/PRs/Discussions/Projects&lt;/strong&gt; by using &lt;code&gt;#&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Search for &lt;strong&gt;Projects&lt;/strong&gt; by using &lt;code&gt;!&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Search for &lt;strong&gt;users/orgs/repos&lt;/strong&gt; by using &lt;code&gt;@&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Search for &lt;strong&gt;files&lt;/strong&gt; using &lt;code&gt;/&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Jump&lt;/strong&gt; to your search result by hitting &lt;code&gt;ENTER&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Open your search in a &lt;strong&gt;new browser tab&lt;/strong&gt; by pressing &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;Enter&lt;/code&gt; (for Windows/Linux), or &lt;code&gt;‚åò&lt;/code&gt;+&lt;code&gt;Enter&lt;/code&gt; (macOS)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Run commands&lt;/strong&gt; using &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (for Windows/Linux), or &lt;code&gt;‚åò&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (macOS)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Switch to command mode&lt;/strong&gt; by using &lt;code&gt;&amp;gt;&lt;/code&gt; on the keyboard if you already have the palette open&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Close&lt;/strong&gt; the command palette from search and navigation mode by using &lt;code&gt;Esc&lt;/code&gt; or &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (for Windows/Linux), or &lt;code&gt;‚åò&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (macOS)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Close&lt;/strong&gt; the command palette from command mode by using &lt;code&gt;Esc&lt;/code&gt; or &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (for Windows/Linux), or &lt;code&gt;‚åò&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (macOS)&lt;/li&gt;
&lt;li&gt;Get &lt;strong&gt;Help&lt;/strong&gt; by typing &lt;code&gt;?&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check out the full list of commands on the &lt;a href="https://docs.github.com/en/get-started/using-github/github-command-palette"&gt;GitHub Docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There's also a short video where you can see the command palette in action:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/DT5RAoXVXE4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Let us know how you'll be using the command palette by leaving a comment below.&lt;/p&gt;

</description>
      <category>github</category>
      <category>tutorial</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
