<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Make these 11 Projects (10 JS+1 React) to learn JavaScript and React</title>
      <author>The Nerdy Dev</author>
      <pubDate>Fri, 15 Oct 2021 13:21:55 +0000</pubDate>
      <link>https://dev.to/thenerdydev/make-these-11-projects-10-js1-react-to-learn-javascript-and-react-449a</link>
      <guid>https://dev.to/thenerdydev/make-these-11-projects-10-js1-react-to-learn-javascript-and-react-449a</guid>
      <description>&lt;p&gt;Hey everyone üëãüèª,&lt;/p&gt;

&lt;p&gt;In this article, let us see what 11 Projects I have for you that you can build for learning both &lt;strong&gt;JavaScript&lt;/strong&gt; and &lt;strong&gt;React.js&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2l6_s71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odatp2kxij5cvoukamtz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2l6_s71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odatp2kxij5cvoukamtz.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#projects-that-you-can-build-"&gt;
  &lt;/a&gt;
  Projects that you can build :
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#project-1-creating-a-modal"&gt;
  &lt;/a&gt;
  Project 1 : Creating a Modal
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-2-creating-a-tabs-system"&gt;
  &lt;/a&gt;
  Project 2 : Creating a Tabs System
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-3-creating-a-range-slider"&gt;
  &lt;/a&gt;
  Project 3 : Creating a Range Slider
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-4-creating-a-slideshow"&gt;
  &lt;/a&gt;
  Project 4 : Creating a Slideshow
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-5-creating-a-salary-calculator"&gt;
  &lt;/a&gt;
  Project 5 : Creating a Salary Calculator
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-6-creating-a-scroll-indicator"&gt;
  &lt;/a&gt;
  Project 6 : Creating a Scroll Indicator
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-7-implementing-infinite-scroll-feature-using-intersection-observer-api"&gt;
  &lt;/a&gt;
  Project 7 : Implementing Infinite Scroll Feature using Intersection Observer API.
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-8-playing-with-text"&gt;
  &lt;/a&gt;
  Project 8 : Playing with Text
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-9-creating-a-custom-search-filter"&gt;
  &lt;/a&gt;
  Project 9 : Creating a Custom Search Filter
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-10-creating-a-sticky-navbar"&gt;
  &lt;/a&gt;
  Project 10: Creating a Sticky Navbar
&lt;/h2&gt;

&lt;p&gt;To get a description of these projects, please check out this article : &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/10-javascript-projects-every-beginner-must-try-p19" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;‚ö°10 JavaScript Projects Every Beginner Should Try &lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Jul 15 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Here is the video where you can together create these projects with me : &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KTGfHmyje5A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Once you are done building these 10 Projects, it's time to learn React. I also have a video on same where we build an &lt;strong&gt;Exercise Planner&lt;/strong&gt; application from scratch using React.js. There I explain all the concepts required to build that simple with thorough explanations. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-project-building-an-exercise-planner-application-using-reactjs-react-router-and-react-hooks"&gt;
  &lt;/a&gt;
  React Project : Building an Exercise Planner Application using React.js, React Router and React Hooks.
&lt;/h2&gt;

&lt;p&gt;Here is the video where you can together create these projects with me : &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iqewbHLKkQk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So this is it for this article. Thanks for reading. &lt;br&gt;
&lt;strong&gt;Don't forget to leave a like if you loved the article. Also share it with your friends and colleagues.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Apr 28 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Looking to learn React.js with one Full &lt;strong&gt;Project&lt;/strong&gt;, check this out : &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/learn-react-with-one-big-project-notes-included-demo-and-video-link-4fe5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn React with one BIG Project [NOTES included] - Demo and Video Link&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Jun 10 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#100daysofcode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>La raz√≥n del por qu√© renuncie a mi trabajo.</title>
      <author>Carlos Mu√±oz Bustamante</author>
      <pubDate>Fri, 15 Oct 2021 13:13:53 +0000</pubDate>
      <link>https://dev.to/sarcowww/la-razon-del-por-que-renuncie-a-mi-trabajo-4oed</link>
      <guid>https://dev.to/sarcowww/la-razon-del-por-que-renuncie-a-mi-trabajo-4oed</guid>
      <description>&lt;p&gt;Desde hace mas de 6 a√±os que soy consultor de tecnolog√≠as SAP, donde tuve que enfrentar diferentes retos, donde conoc√≠ gente maravillosa y pues donde pude practicar lo que era mi principal lenguaje de programaci√≥n que hasta el d√≠a de hoy le tengo cari√±o, el cual es Javascript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#como-empez%C3%B3-esta-historia"&gt;
  &lt;/a&gt;
  Como empez√≥ esta historia.
&lt;/h2&gt;

&lt;p&gt;Por all√° en el a√±o 2016 era un estudiante egresado de la carrera de Analista Programador sin nada de experiencia y buscando opciones para poder comenzar mi carrera. En eso dentro del portal de busquedas laborales de mi instituto encontr√© una oferta donde se requerian Ingenieros en inform√°tica, o la tipica frase, carrera a f√≠n para poder ingresar a la empresa como trainee. Pues a mi parecer era una excelente oferta y decid√≠ postular.&lt;/p&gt;

&lt;p&gt;A eso de unos d√≠as me llamaron a mi celular diciendome que si era posible acudir a una entrevista psicologica a la cual accedi ir de manera inmediata (cabe destacar que en ese entonces yo me encontraba en Santiago de Chile desempleado y sin dinero, por lo que me veia en la necesidad de trabajar en cualquier otra cosa para poder subsistir, fue un tiempo dificil jaja). Una vez que acud√≠ a la entrevista, pues fue bastante rapido todo y sencillo, no era algo tan loco como en otras empresas, posterior a eso me llamaron nuevamente para otra entrevista, pero esta vez era con un lider de √°rea el cual me pregunt√≥ bastantes cosas sobre programaci√≥n por ejemplo que lenguajes sabia, con cual me sentia mas comodo y cosas asi mas no me hizo realizar ninguna actividad practica, con eso concluy√≥ esa entrevista. A los d√≠as despues me vuelven a llamar para otra entrevista, ahora para otra √°rea dentro de la empresa (eso me di√≥ a entender que al se√±or no le agrade o quizas que otra cosa) la cual era el √°rea de seguridad de una plataforma que en mi vida habia oido pero que esa misma cambiaria mi vida para siempre, &lt;a href="https://www.sap.com/"&gt;SAP&lt;/a&gt;. el √°rea de seguridad era bastante orientada a ser algo mas funcional que de programaci√≥n, no me motivaba mucho a estar ahi por el hecho de que claro, no iba a poder realizar lo que yo queria hacer, programar, esa entrevista se di√≥ por concluida. A los d√≠as nuevamente me llamaron para otra entrevista en otra √°rea (en este punto yo ya pensaba en que no sabian donde ubicarme y hasta yo me empec√© a cuestionar mi existencia) y conoc√≠ a quien ser√≠a mi mentor, Don Yerlan, un gran programador, pero algo interesante habia sucedido, yo siempre crei que con lo que aprend√≠ en el instituto me bastaba y que esa era la verdad del universo &lt;strong&gt;&lt;em&gt;(alto idiota fu√≠)&lt;/em&gt;&lt;/strong&gt; pero no, tuve que aprender un nuevo lenguaje el cual hasta el d√≠a de hoy detesto pero fue con lo que empec√©, el gran y majestuoso &lt;a href="https://es.wikipedia.org/wiki/ABAP"&gt;ABAP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pasaron los d√≠as y me llamaron para decirme que hab√≠a quedado en el trabajo, supieran la felicidad que sent√≠ en ese momento, un joven desempleado, recien egresado que hab√≠a encontrado su primer trabajo en lo que estudi√≥.&lt;/p&gt;

&lt;p&gt;Ingres√© a esta empresa (la cual se me olvid√≥ comentar y es algo importante, esta empresa era una consultora multinacional, omitir√© el nombre solo por si a caso) y ahi comenz√≥ mi carrera, me entregaron un libro sobre este desconocido lenguaje para mi ABAP, era practicamente una biblia de 900 p√°ginas el cual no termin√© de leer por la sencilla raz√≥n de que no tenia tiempo para leerlo, me enviaron a trabajar de una vez. Pero aqui viene lo interesante, en ese entonces esta dichosa plataforma &lt;strong&gt;&lt;em&gt;SAP&lt;/em&gt;&lt;/strong&gt;, estaba haciendo cosas nuevas, estaban dejando un poco de lado lo tradicional para ellos, en ese entonces ABAP puro y duro, dando paso a nuevas herramientas en las cuales me pidieron que me empezace a involucrar, ahi fue donde conoc√≠ &lt;a href="https://www.sap.com/latinamerica/products/fiori.html"&gt;SAP FIORI&lt;/a&gt; una nueva UX para SAP el cual revolucionaria todo lo que era experiencia usuario (los que conocen SAP y creo que estar√°n de acuerdo conmigo, es un &lt;a href="https://es.wikipedia.org/wiki/Sistema_de_planificaci%C3%B3n_de_recursos_empresariales"&gt;ERP&lt;/a&gt; horrible en cuanto a experiencia usuaria) y lo mas genial de todo esto es que gracias a eso aprender√≠a un nuevo lenguaje y dejaria de lado lo ABAP por un buen tiempo, el cual fue &lt;strong&gt;&lt;em&gt;Javascript&lt;/em&gt;&lt;/strong&gt;, por que s√≠, SAP Fiori funcionaba con Javascript, con un framework que muy poca gente conoce pero que SAP adopt√≥ ve tu a saber por qu√©, el cual era &lt;a href="https://openui5.org/"&gt;OpenUI5&lt;/a&gt; un framework que nos ayudaria a armar tanto la interfaz como la programaci√≥n misma de las aplicaciones que se pudieran requerir. Fueron unos duros a√±os, no hab√≠a documentaci√≥n, no hab√≠a mucha informaci√≥n al respecto y la que hab√≠a estaba esparcida por varios lados, hasta tuve que realizar consultas en StackOverflow ya que no se pod√≠a encontrar mucha informaci√≥n sobre UI5 en general (el link de esa pregunta esta &lt;a href="https://stackoverflow.com/questions/42441931/how-to-recover-a-error-message-from-odata-response-sapui5"&gt;aqu√≠&lt;/a&gt; es la pregunta mas famosa que tengo en StackOverflow, 15k de visitas no es menor) con ese framework yo me empezar√≠a a hacer conocido en el mundo &lt;strong&gt;&lt;em&gt;SAP&lt;/em&gt;&lt;/strong&gt; ya que al menos aca en Chile, no es muy grande.&lt;/p&gt;

&lt;p&gt;Para no seguir alargando esta historia, pues loq ue paso despues era todo muy repetitivo, pasaron los a√±os, fui creciendo como profesional, pero lleg√≥ un punto en el que empec√© a sentir que la consultoria no era para mi, empec√© a enfermarme seguido, dolores de colon, estress, la vida ajetreada de la ciudad, todo eso empez√≥ a pasarme la cuenta. En el periodo de 2016 a 2021 cambie de trabajo 2 veces buscando nuevas oportunidades y menos carga laboral, atender muchos clientes a la vez es algo agotador y claro, es algo en lo cual yo me sent√≠a capaz pero que a largo plazo me pas√≥ la cuenta.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cuales-fueron-las-razones-de-dejar-mi-trabajo"&gt;
  &lt;/a&gt;
  Cuales fueron las razones de dejar mi trabajo.
&lt;/h2&gt;

&lt;p&gt;Hay dos razones por la cual dej√© mi trabajo, una m√©dica y otra profesional, mas abajo explicar√© ambas.&lt;/p&gt;

&lt;p&gt;En estos 2 ultimos a√±os por mi cuenta estuve indagando en lo que era programaci√≥n para dispositivos moviles, aprend√≠ algo de React Native y pues lo empec√© a poner en pr√°ctica, es m√°s, en mi ultimo trabajo pude lograr hacer una aplicaci√≥n movil en React Native con EXPO gracias al curso de Nicol√°s Schurmann, estaba un poco desactualizado, pero nada que no se pudiera solventar buscando un poco en la documentaci√≥n de EXPO o de React Native. En este proceso fue donde me empec√© a enamorar de la programaci√≥n movil, es algo para mi totalmente nuevo y algo que me est√° llamando tanto la atenci√≥n que empec√© a leer al respecto, &lt;a href="https://www.amazon.com/-/es/Dawn-Griffiths/dp/1491996692"&gt;Head First Kotlin&lt;/a&gt;, si estas interesado en aprender programaci√≥n movil nativa, te recomiendo ese libro al 100%, no te ense√±a Android, pero si las bases necesarias para entender el lenguaje Kotlin y poder aplicarlo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recomendar%C3%ADa-a-alguien-dejar-su-trabajo-por-aperender-algo-nuevo"&gt;
  &lt;/a&gt;
  ¬øRecomendar√≠a a alguien dejar su trabajo por aperender algo nuevo?.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Por supuesto que no&lt;/em&gt;&lt;/strong&gt;, una parte que no cont√© en la breve historia de mi carrera mas arriba, es que todo este estress me llev√≥ a acudir a un psiquiatra, por recomendaci√≥n del psiquiatra me vi en la obligaci√≥n de renunciar, si pueden mantener su trabajo y estudiar algo al mismo tiempo haganlo, pero jam√°s dejen su trabajo si no tienen alguna alternativa en su bolsillo.&lt;/p&gt;

</description>
      <category>android</category>
      <category>kotlin</category>
      <category>discuss</category>
      <category>career</category>
    </item>
    <item>
      <title>What's So Great About Next.js?</title>
      <author>Brian Rinaldi</author>
      <pubDate>Fri, 15 Oct 2021 12:50:56 +0000</pubDate>
      <link>https://dev.to/launchdarkly/whats-so-great-about-nextjs-21ji</link>
      <guid>https://dev.to/launchdarkly/whats-so-great-about-nextjs-21ji</guid>
      <description>&lt;p&gt;If you're working in web development today, chances are that you're aware of, curious about, or perhaps even used¬†&lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt;.¬†&lt;/p&gt;

&lt;p&gt;Next.js is what's often referred to as a "meta framework," in that it is a framework built upon one or more other frameworks. In the case of Next.js, it is built upon¬†&lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As React became the most widely adopted web framework, encompassing over 40% of developers in 2021¬†&lt;a href="https://www.statista.com/statistics/1124699/worldwide-developer-survey-most-used-frameworks-web/"&gt;according to Statista&lt;/a&gt;, Next.js adoption has also grown dramatically.¬†&lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt;, the company that maintains Next.js,¬†&lt;a href="https://venturebeat.com/2021/06/23/vercel-secures-102m-to-accelerate-next-js-adoption/"&gt;cites&lt;/a&gt;¬†over 6 million downloads since its launch and 50% usage growth in the top ten-thousand websites for the period of October 2020 to June 2021 alone.&lt;/p&gt;

&lt;p&gt;A big part of the reason that developers and companies are choosing Next.js for their web application development is because it is a full-stack framework (as in, it handles both the frontend and backend of your application) and offers support for a variety of rendering methods---even mixing and matching those methods as needed.¬†&lt;/p&gt;

&lt;p&gt;Let's take a brief look at how Next.js has evolved and, in particular, how the rendering methods within Next.js have evolved.&lt;/p&gt;

&lt;p&gt;And if you want a more detailed exploration of how to combine Next.js and &lt;a href="https://launchdarkly.com/"&gt;LaunchDarkly&lt;/a&gt; feature management, check out my new guide, "&lt;a href="https://docs.launchdarkly.com/guides/platform-specific/nextjs"&gt;Using LaunchDarkly with Next.js&lt;/a&gt;."&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-evolution-of-nextjs"&gt;
  &lt;/a&gt;
  The Evolution of Next.js
&lt;/h2&gt;

&lt;p&gt;Today, Next.js is frequently associated with the¬†&lt;a href="https://jamstack.org/"&gt;Jamstack&lt;/a&gt;¬†methodology for developing web applications. When it was¬†&lt;a href="https://vercel.com/blog/next"&gt;launched in early 2016&lt;/a&gt;, however, it was originally just for server-side rendered apps. At the time, what made Next.js unique was that it handled both the frontend and the backend of your application and both were built using JavaScript and React. This allows developers to build full-stack applications using a single language and toolset while delivering an improved user experience that typically results in a faster initial render of the page.&lt;/p&gt;

&lt;p&gt;Next.js also gained popularity because it simplified building full-stack applications using React. It provided automatic routing for pages and built-in methods for server-side rendering (SSR) and data fetching. All of these features still exist in Next.js today, but many new features have been added and the existing ones have been dramatically enhanced. In particular, Next.js now handles multiple types of rendering methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rendering-methods-in-nextjs"&gt;
  &lt;/a&gt;
  Rendering Methods in Next.js
&lt;/h2&gt;

&lt;p&gt;As we noted, Next.js started as simply a framework for server-side rendering (SSR) As its capabilities have expanded, even what SSR means in Next.js has changed. Let's look at the various rendering options available in Next.js today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#serverside-rendering-ssr"&gt;
  &lt;/a&gt;
  Server-side rendering (SSR)
&lt;/h3&gt;

&lt;p&gt;In SSR, content is generated on the server (which is Node.js) for every single request and then sent to the browser. Starting with the release of¬†&lt;a href="https://nextjs.org/blog/next-8"&gt;Next.js 8&lt;/a&gt;, every server-rendered page became a serverless function (also known as a lambda). For instance, when we call the page at¬†&lt;code&gt;/about&lt;/code&gt;, Next.js calls a serverless function that specifically handles returning the backend data necessary to render the "About" page. The data fetching is encapsulated in the¬†&lt;code&gt;getServerSideProps()&lt;/code&gt;¬†method in Next.js.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerendering"&gt;
  &lt;/a&gt;
  Pre-rendering
&lt;/h3&gt;

&lt;p&gt;With pre-rendering---also called static rendering or static site generation (SSG)---the page is rendered during a build that occurs before the application is deployed, usually as part of a CI/CD build process. This was originally added as an option in¬†&lt;a href="https://auth0.com/blog/nextjs-3-release-what-is-new/"&gt;Next.js 3&lt;/a&gt;¬†but the process was very manual. As of¬†&lt;a href="https://nextjs.org/blog/next-6"&gt;Next.js 6&lt;/a&gt;, routes became automatic for both SSR and SSG pages (though dynamic routes still need to provide paths programmatically via the¬†&lt;code&gt;getStaticPaths()&lt;/code&gt;¬†method).¬†&lt;a href="https://nextjs.org/blog/next-9"&gt;Next.js 9&lt;/a&gt;¬†introduced a feature called "Automatic Static Optimization" that automatically determines if a page can be rendered as static. The ability to mix server-side rendered pages/routes and pre-rendered pages/routes was unique to Next.js and has since been adopted by other tools frameworks like¬†&lt;a href="https://www.gatsbyjs.com/"&gt;Gatsby&lt;/a&gt;¬†and¬†&lt;a href="https://nuxtjs.org/"&gt;Nuxt&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deferred-rendering-isr"&gt;
  &lt;/a&gt;
  Deferred rendering (ISR)
&lt;/h3&gt;

&lt;p&gt;Within Next.js, deferred rendering is referred to as Incremental Static Regeneration (ISR), which was initially introduced in¬†&lt;a href="https://nextjs.org/blog/next-9-4"&gt;version 9.4&lt;/a&gt;. It is similar to pre-rendering, though the requested page isn't rendered during the initial build but instead when it is first requested by a user. Subsequent users will see the pre-rendered version of the page either until a new build occurs or until an optional cache timeout has passed. The goal of ISR is to eliminate the extremely long build time that large sites could often face by allowing the developer to defer building lower-trafficked pages. It also has the ability to be selectively used to render pages based upon user-generated content.&lt;/p&gt;

&lt;p&gt;Of course, as with any frontend framework, Next.js also has methods to assist with¬†client-side rendering, where content can be loaded, modified or updated via client-side JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#with-great-power"&gt;
  &lt;/a&gt;
  With Great Power...
&lt;/h2&gt;

&lt;p&gt;The ability to mix and match all of these rendering methods gives developers a lot of power, but it also presents a unique challenge. Developers now have to consider more than just how to render specific content, but¬†&lt;em&gt;when&lt;/em&gt;¬†to render it. While by no means comprehensive, here are a few things to consider:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Is this content the same for every user? Then pre-rendering or deferred rendering can offer the best performance.&lt;/li&gt;
&lt;li&gt;  Is this content user-specific or generated dynamically for each request? Then server-side rendering may be the best option, but, in some cases, deferred rendering may be able to achieve similar results.&lt;/li&gt;
&lt;li&gt;  Is this content user/request-specific but lightweight or does it require real-time updates to the page? Then this can probably be loaded via client-side rendering.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This also becomes complicated when integrating a tool like LaunchDarkly. Which SDK(s) should I use? How do I integrate the SDKs into Next.js code? How does LaunchDarkly work with pre-rendered or deferred rendered pages?¬†&lt;/p&gt;

&lt;p&gt;We answer all of these questions and more in my latest guide, "&lt;a href="https://docs.launchdarkly.com/guides/platform-specific/nextjs"&gt;Using LaunchDarkly with Next.js&lt;/a&gt;."&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>jamstack</category>
    </item>
    <item>
      <title>Free React Dashboards - Chakra, M-UI and Ant Design</title>
      <author>Sm0ke</author>
      <pubDate>Fri, 15 Oct 2021 12:43:11 +0000</pubDate>
      <link>https://dev.to/sm0ke/free-react-dashboards-chakra-m-ui-and-ant-design-3328</link>
      <guid>https://dev.to/sm0ke/free-react-dashboards-chakra-m-ui-and-ant-design-3328</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents a curated list with open-source &lt;strong&gt;&lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt;&lt;/strong&gt; styled with different &lt;code&gt;super-popular&lt;/code&gt; components libraries: &lt;code&gt;Chakra-UI&lt;/code&gt;, &lt;code&gt;M-UI&lt;/code&gt;, and &lt;code&gt;Ant.Design&lt;/code&gt;. All templates are released under permissive licenses that allow unlimited copied for hobby and commercial projects. For newcomers, &lt;strong&gt;React&lt;/strong&gt; is an &lt;strong&gt;open-source&lt;/strong&gt; JavaScript library for coding user interfaces baked by Facebook.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://www.admin-dashboards.com/"&gt;Admin Dashboards&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;‚ú® &lt;a href="https://www.creative-tim.com/product/purity-ui-dashboard"&gt;React Dashboard Purity&lt;/a&gt; - styled with &lt;code&gt;Chakra UI&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;‚ú® &lt;a href="https://berrydashboard.io/"&gt;React Dashboard Berry&lt;/a&gt; - &lt;code&gt;Material-UI&lt;/code&gt; design from CodedThemes&lt;/li&gt;
&lt;li&gt;‚ú® &lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard-react"&gt;React Dashboard Soft&lt;/a&gt; - styled with &lt;code&gt;M-UI&lt;/code&gt; (ex. Material-UI)&lt;/li&gt;
&lt;li&gt;‚ú® &lt;a href="https://www.creative-tim.com/product/muse-ant-design-dashboard"&gt;React Dashboard Muse&lt;/a&gt; - styled with &lt;code&gt;Ant Design&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#react-dashboard-purity"&gt;
  &lt;/a&gt;
  ‚ú® &lt;a href="https://www.creative-tim.com/product/purity-ui-dashboard"&gt;React Dashboard Purity&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Designed for those who like modern UI elements and beautiful websites &lt;strong&gt;Purity Dashboard&lt;/strong&gt; is made of hundreds of elements, designed blocks, and fully coded pages. Purity UI Dashboard is built with over 70 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, that you can easily modify using Chakra's style props.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;‚ú® &lt;a href="https://www.creative-tim.com/product/purity-ui-dashboard"&gt;React Dashboard Purity&lt;/a&gt; - &lt;strong&gt;product page&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;‚ú® &lt;a href="https://demos.creative-tim.com/purity-ui-dashboard/#/admin/dashboard"&gt;React Dashboard Purity&lt;/a&gt; - &lt;strong&gt;LIVE Demo&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4jyehW0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53lwd2lv50eiph4en3wi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4jyehW0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53lwd2lv50eiph4en3wi.gif" alt="Animated presentation of Purity Template, a free React Dashboard crafted on top of Chakra UI. "&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-dashboard-soft"&gt;
  &lt;/a&gt;
  ‚ú® &lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard-react"&gt;React Dashboard Soft&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Built with Soft UI Design system, probably the most innovative design system from Creative-Tim. This FREE Material-UI Dashboard is coming with prebuilt design blocks, so the development process is seamless, switching from our pages to the real website is very easy to be done.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;‚ú® &lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard-react"&gt;React Dashboard Soft&lt;/a&gt; - &lt;strong&gt;product page&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;‚ú® &lt;a href="https://demos.creative-tim.com/soft-ui-dashboard-react/#/dashboard"&gt;React Dashboard Soft&lt;/a&gt; - &lt;strong&gt;LIVE Demo&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aYhOqjbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjozpg24mncpdlmw6qml.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aYhOqjbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjozpg24mncpdlmw6qml.png" alt="Sample Page of Soft UI Template, a free React Dashboard crafted on top of Materui UI components library. "&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-dashboard-berry"&gt;
  &lt;/a&gt;
  ‚ú® &lt;a href="https://berrydashboard.io/"&gt;React Dashboard Berry&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Berry is a creative open-source admin dashboard template build using React and Material-UI library. It is a complete game-changer React Dashboard Template with an easy and intuitive responsive design as on retina screens or laptops.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;‚ú® &lt;a href="https://berrydashboard.io/"&gt;Berry Dashboard&lt;/a&gt; - &lt;strong&gt;product page&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;‚ú® &lt;a href="https://github.com/codedthemes/berry-free-react-admin-template"&gt;Berry Dashboard&lt;/a&gt; - &lt;strong&gt;source code&lt;/strong&gt; (published on Github)&lt;/li&gt;
&lt;li&gt;‚ú® &lt;a href="https://berrydashboard.io/free/dashboard/default"&gt;Berry Dashboard&lt;/a&gt; - &lt;strong&gt;LIVE Demo&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This free product might be a good choice for your next project based on the modern UI aesthetics, rich set of UI components, modern tooling, and a simple, intuitive codebase structure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TdMxIcLL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5sa8tv1ku9mbxrxuk8d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TdMxIcLL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5sa8tv1ku9mbxrxuk8d.png" alt="Dashboard Page of Berry Template, a free React Dashboard crafted on top of Materui UI components library. "&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-dashboard-muse"&gt;
  &lt;/a&gt;
  ‚ú® &lt;a href="https://www.creative-tim.com/product/muse-ant-design-dashboard"&gt;React Dashboard Muse&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Muse Ant Design Dashboard is a free Admin Template based on two popular front-end technologies: Ant Design &amp;amp; React. It was built to simplify the developer's work and is comes with a fresh design inspired by Ant Design. All its components are built to fit perfectly with each other while aligning to the Ant Design concepts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;‚ú® &lt;a href="https://www.creative-tim.com/product/muse-ant-design-dashboard"&gt;React Dashboard Muse&lt;/a&gt; - &lt;strong&gt;product page&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;‚ú® &lt;a href="https://demos.creative-tim.com/muse-ant-design-dashboard/#/dashboard"&gt;React Dashboard Muse&lt;/a&gt; - &lt;strong&gt;LIVE Demo&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This beautiful React Admin Template comes with 5 color filter choices for both the sidebar and the cards (blue, green, red, yellow, and black), an option to have a transparent or fill sidebar, and an option to have a fixed navbar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VE-guYHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ynvtek4hnqs06qaqgf5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VE-guYHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ynvtek4hnqs06qaqgf5.png" alt="Dashboard Page of Muse Template, a free React Dashboard crafted on top of Ant.Design components library. "&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;Free &lt;strong&gt;&lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt;&lt;/strong&gt; - article published on Dev.to.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://appseed.us/apps/react"&gt;React Apps&lt;/a&gt;&lt;/strong&gt; - a curated list with &lt;code&gt;full-stack starters&lt;/code&gt;. &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>opensource</category>
      <category>webdev</category>
      <category>dashboards</category>
    </item>
    <item>
      <title>Video Streaming Protocol‚Äì Everything You Must Know In 2021</title>
      <author>hermoni versa</author>
      <pubDate>Fri, 15 Oct 2021 12:21:45 +0000</pubDate>
      <link>https://dev.to/hermoniversa/video-streaming-protocol-everything-you-must-know-in-2021-4j0j</link>
      <guid>https://dev.to/hermoniversa/video-streaming-protocol-everything-you-must-know-in-2021-4j0j</guid>
      <description>&lt;p&gt;Video streaming is a popular term today which has a new technology whether in entertainment, e-commerce, or education. Today, you can share a video with millions of viewers around the world with just a few clicks on your computer or phone. How is it possible? Video streaming protocols allow you to stream and deliver videos to your device. What are Video Streaming Protocols? How do I select an appropriate video streaming protocol? What video streaming protocols are commonly used? Read on, as we talk about them in this guide.&lt;/p&gt;

&lt;p&gt;Are you eager to dive into &lt;strong&gt;&lt;a href="https://www.webnexs.com/vod-platform.php"&gt;video streaming&lt;/a&gt;&lt;/strong&gt; protocols?&lt;/p&gt;

&lt;p&gt;To better understand how to use video efficiently, it's essential to apprehend what number of protocols are affecting video streaming. So let's get into that. &lt;/p&gt;

&lt;p&gt;But first ... The easy definition of the streaming protocol is a set of rules that determines how information is transferred over the net irrespective of the type of streaming, audio or video. &lt;/p&gt;

&lt;p&gt;Rather, a video streaming protocol is a standardized approach for handing over video content material to users. In the case of video, the stream is split down into small portions and transmitted to the receiving end, reassembled in a single portion and fed to the user.&lt;/p&gt;

&lt;p&gt;When selecting the high-quality video streaming protocol for your use case, it‚Äôs essential to contemplate the following elements:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Scalability&lt;/li&gt;
&lt;li&gt;Kind of use&lt;/li&gt;
&lt;li&gt;Support and compatibility&lt;/li&gt;
&lt;li&gt;Codec requirements&lt;/li&gt;
&lt;li&gt;Latency&lt;/li&gt;
&lt;li&gt;Quality of experience (adaptive bitrate features, etc.)
Playback support&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By keeping in mind the elements above, companies can select applicable video streaming protocols based on their needs.&lt;br&gt;
Now that you get a better idea of the purpose of video streaming protocols, then, let us discuss a list of the most common protocols for video streaming today.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-different-types-of-video-streaming-protocols"&gt;
  &lt;/a&gt;
  The Different Types of Video Streaming Protocols
&lt;/h2&gt;

&lt;p&gt;All protocols serve their purpose and vary in terms of elements like latency and compatibility.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#legacy-protocols"&gt;
  &lt;/a&gt;
  Legacy Protocols
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#realtime-messaging-protocol-rtmp"&gt;
  &lt;/a&gt;
  Real-Time Messaging Protocol (RTMP)
&lt;/h3&gt;

&lt;p&gt;RTMP remains the most-used protocol. It is developed by Macromedia and acquired by Adobe in 2005. It keeps a persistent, strong connection and permits low-latency communication. This universally standard protocol is designed to keep low latency connections by transmitting video and audio records in small packets. However, this protocol evolved typically to work with the Flash player. Also, RTMP is supported by most streaming platforms and software due to the legacy factor. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Specifications:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Video Codecs:264, VP6, VP8&lt;/li&gt;
&lt;li&gt;Audio Codecs: AAC, AAC-LC, MP3,HE-AAC+ v1 &amp;amp; v2, Speex,Opus, Vorbis&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Low latency (approximately 5 seconds)&lt;/li&gt;
&lt;li&gt;No buffering required&lt;/li&gt;
&lt;li&gt;Multicast support&lt;/li&gt;
&lt;li&gt;Extensive platform support&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scalability is low&lt;/li&gt;
&lt;li&gt;Not optimized for quality&lt;/li&gt;
&lt;li&gt;Due to the death of Flash, it Will eventually become obsolete &lt;/li&gt;
&lt;li&gt;Low security&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#rtsp-realtime-streaming-protocol"&gt;
  &lt;/a&gt;
  RTSP ‚Äì Real-Time Streaming Protocol
&lt;/h3&gt;

&lt;p&gt;RTSP is famous for communication and entertainment systems. Its low latency additionally makes it famous for surveillance systems, drone streaming and different IoT devices as well.&lt;/p&gt;

&lt;p&gt;RTSP permits viewers to remotely pause, play, and stop video streams through the Internet without the need for local downloads. RTSP was most substantially used by RealNetworks Real Player and continues to be being implemented for various uses such as remote camera streams, online education and net radio. RTSP requires a devoted server for streaming.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Specifications:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Video Codecs:265 (preview), H.264, VP9, VP8&lt;/li&gt;
&lt;li&gt;Audio Codecs: AAC, AAC-LC,MP3, HE-AAC+ v1 &amp;amp; v2, Speex, Vorbis,Opus&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Low latency (approximately 2 seconds)&lt;/li&gt;
&lt;li&gt;Popular  among IP cameras and surveillance systems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scalability is low&lt;/li&gt;
&lt;li&gt;Not optimized for quality&lt;/li&gt;
&lt;li&gt;Dependent on other protocols (RTP &amp;amp; RTCP)&lt;/li&gt;
&lt;li&gt;Not commonly supported with many devices&lt;/li&gt;
&lt;li&gt;HTTP Based Protocols&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#hls-http-live-streaming"&gt;
  &lt;/a&gt;
  HLS ‚Äì HTTP Live Streaming
&lt;/h3&gt;

&lt;p&gt;HLS is an adaptive bitrate streaming protocol from Apple launched in 2009 to solve the problems of efficient live video and VOD delivery to viewers‚Äô devices, especially Apple devices. HLS content material is delivered from an internet server (or starting place server) and frequently via a CDN before it reaches a video participant. As an adaptive bitrate protocol, the video participant appears for adjustments in the bandwidth conditions and if there are fluctuations, it could seamlessly transfer to the ABR profile quality ideal at that given moment. HLS video streaming is well-matched with an extensive majority of devices and HTML5 players. The death of Flash has made maximum users transfer to HTML5 players, that's the primary reason for its extended popularity. As an Apple technology, HLS is the primary delivery protocol for iOS devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Specifications:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Video Codecs:265, H.264&lt;/li&gt;
&lt;li&gt;Audio Codecs: AAC-LC, xHE-AAC,HE-AAC+ v1 &amp;amp; v2, Apple Lossless, FLAC&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;High scalability&lt;/li&gt;
&lt;li&gt;High quality
*Widely popular and supported
*Adaptive bitrate streaming&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;*High latency with quality prioritized &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MPEG-DASH ‚Äì Dynamic Adaptive Streaming over HTTP&lt;/li&gt;
&lt;li&gt;MPEG-DASH  was advanced by the Moving Pictures Expert Group (MPEG), a global authority on digital audio and video standards, to supply video and audio to devices over net servers in the use of the DASH (Dynamic Adaptive Streaming over HTTP) protocol. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An open-supply option, it may be custom designed to support any audio or video codec. It additionally presents adaptive bitrate streaming which is typically used to supply stay and on-call for video content material over the net to viewers.&lt;/p&gt;

&lt;p&gt;MPEG-DASH is codec agnostic. In this manner, MPEG-DASH isn't limited to the use of H.264 or HEVC codecs however it can also support others consisting of VP8 or VP9 which might be high-quality for better quality broadcasts with lower bitrates. As an alternative ABR protocol to HLS, MPEG-DASH is extensively used on Android devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Specifications:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Video Codecs: codec-agnostic&lt;/li&gt;
&lt;li&gt;Audio Codecs: codec-agnostic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open-source protocol&lt;/li&gt;
&lt;li&gt;Codec-agnostic&lt;/li&gt;
&lt;li&gt;Adaptive bitrate streaming&lt;/li&gt;
&lt;li&gt;Optimized for user experience&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;High latency&lt;/li&gt;
&lt;li&gt;Not compatible with Apple software and devices&lt;/li&gt;
&lt;li&gt;Modern Protocols&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#web-realtime-communications-webrtc"&gt;
  &lt;/a&gt;
  Web Real-Time Communications (WebRTC)
&lt;/h3&gt;

&lt;p&gt;WebRTC is an open-source standard for real-time communication developed by Google and standardized in January 2021, which is often used for video conferences. It is one of the newest new video streaming protocols with the fastest video and audio transmission capabilities of any protocol in existence today. Record and play video and audio without downloading and installing additional plug-ins. It is compatible with almost all modern browsers including Safari, Google Chrome, Firefox, Opera, and others. &lt;/p&gt;

&lt;p&gt;It supports the high-quality VP8 and VP9 (in addition to the old H 264) as well as the Opus audio codec. Soon, the protocol will be compatible with a new AV1 video codec. The protocol is expected to replace telephony and become the mainstay of communications services. WebRTC is that it turns millions of browsers into streaming terminals without installing additional plug-ins. Finally, the protocol uses adaptive bit rate technology that allows you to automatically adjust the video quality and avoid dropouts and interruptions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Specifications:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Video Codecs:264, VP8, VP9(H.625 + AV1 in progress)&lt;br&gt;
Audio Codecs: Opus, iSAC, iLBC&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Superfast&lt;/li&gt;
&lt;li&gt;Browser-based protocol&lt;/li&gt;
&lt;li&gt;No plugins needed&lt;/li&gt;
&lt;li&gt;Sub-second latency&lt;/li&gt;
&lt;li&gt;supported codecs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Designed for video conferencing&lt;/li&gt;
&lt;li&gt;Not scalable&lt;/li&gt;
&lt;li&gt;Instability due to sub-second latency&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#secure-reliable-transport-srt"&gt;
  &lt;/a&gt;
  Secure Reliable Transport (SRT)
&lt;/h3&gt;

&lt;p&gt;This open-source protocol can offer excellent video streaming no matter the network conditions. This video streaming protocol has been identified as a competitive replacement for both RTMP and RTSP. It gives reliable stay video streaming with low latency over suboptimal networks. However, this protocol continues to be no longer extensively supported yet due to being a rising technology.&lt;/p&gt;

&lt;p&gt;It is broadly considered to be an alternative to RTMP shortly. It permits you to stay-stream your content material over suboptimal networks. The developers state that SRT protects your stay videos from jitters, bandwidth fluctuation, and packet loss. Besides, this protocol is codec-agnostic, which means it supports any current audio and video codec.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Specifications:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Video Codecs: Any since it‚Äôs codec-agnostic&lt;br&gt;
Audio Codecs: Any since it‚Äôs codec-agnostic&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;High-quality video support&lt;/li&gt;
&lt;li&gt;Low latency streaming over suboptimal networks&lt;/li&gt;
&lt;li&gt;Stability&lt;/li&gt;
&lt;li&gt;sub-second latency&lt;/li&gt;
&lt;li&gt;strong codec support&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not commonly supported with many devices&lt;/li&gt;
&lt;li&gt;Weak platform support&lt;/li&gt;
&lt;li&gt;No playback&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Finally, We have reviewed the most famous live-streaming protocols, which are RTMP, RTSP, HLS, MPEG-DASH, WebRTC, and SRT. Each has its pros and cons, which means you may use any protocol depending on your needs. I hope this blog will give you clear understandings of a protocol for video streaming and the relation between video streaming protocol, codec, and container format. I  am sure that you are &lt;strong&gt;&lt;a href="https://www.webnexs.com/vod-platform.php"&gt;ready to pick out and use the right protocol for your needs&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

</description>
      <category>videostreaming</category>
      <category>videostreamingprotocol</category>
      <category>livestreaming</category>
    </item>
    <item>
      <title>5 ways to merge arrays in JavaScript and their differences</title>
      <author>Tapas Adhikary</author>
      <pubDate>Fri, 15 Oct 2021 12:08:25 +0000</pubDate>
      <link>https://dev.to/atapas/5-ways-to-merge-arrays-in-javascript-and-their-differences-1h5n</link>
      <guid>https://dev.to/atapas/5-ways-to-merge-arrays-in-javascript-and-their-differences-1h5n</guid>
      <description>&lt;p&gt;An &lt;code&gt;array&lt;/code&gt; is a collection of elements or items. We use arrays to store data as elements and retrieve them back when we need them. The array is a data structure widely used in many programming languages, and JavaScript is not an exception.&lt;/p&gt;

&lt;p&gt;You may need to merge one or more arrays to combine all the elements from the individual arrays into one array. We face this need when we have data coming from different streams, and we want to merge them into one data structure.&lt;/p&gt;

&lt;p&gt;In this article, we will learn five different ways to merge arrays in JavaScript. We will also conclude which is the best way among all and when to use it.&lt;/p&gt;

&lt;p&gt;If you like to learn from video content as well, this article is also available as a video tutorial here: üôÇ&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IgJnnB1qoeI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please feel free to &lt;a href="https://www.youtube.com/tapasadhikary?sub_confirmation=1"&gt;subscribe&lt;/a&gt; for the future content&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Alright, let's get started.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-using-the-traditional-raw-for-endraw-loop"&gt;
  &lt;/a&gt;
  1. Using the traditional &lt;code&gt;for&lt;/code&gt; loop
&lt;/h1&gt;

&lt;p&gt;Using the &lt;code&gt;for&lt;/code&gt; loop to merge two or more array elements may be the most viable way. Most of us are aware of how to use for-loops in programming. So it is the easiest option to start with. However, it may not be the best solution for the problem at hand.&lt;/p&gt;

&lt;p&gt;To merge elements from one array to another, we must first iterate(loop) through all the array elements. In the loop, we will retrieve each element from an array and insert(using the array &lt;code&gt;push()&lt;/code&gt; method) to another array.&lt;/p&gt;

&lt;p&gt;Here is a JavaScript function doing the same,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;second&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;second&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, we can call the &lt;code&gt;merge()&lt;/code&gt; function and pass two arrays as the arguments for merging.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;As we expected, here is the output of the merged array,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Muk8g63J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633943984742/pbEcQ9p1t.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Muk8g63J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633943984742/pbEcQ9p1t.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alright, but how do we merge more than two arrays using the same &lt;code&gt;merge()&lt;/code&gt; function? Well, it may not be a very friendly way but, we can do something like this,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;So here, we first merge two arrays and merge the output of it with another array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nlLuePke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633944020947/YjzfmqoU3.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nlLuePke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633944020947/YjzfmqoU3.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can guess, as our requirement of the number of input arrays grows for merge, it will be a lesser friendly way to manage it. So, using the for-loop to merge two or more arrays is fine, to begin with, but may not be an excellent method to use in practice.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#2-using-the-raw-spread-endraw-operator"&gt;
  &lt;/a&gt;
  2. Using the &lt;code&gt;Spread&lt;/code&gt; operator
&lt;/h1&gt;

&lt;p&gt;Since ES6, we can use the &lt;code&gt;...&lt;/code&gt; (yes, three consecutive dots) as a spread operator to destructure arrays. We can use the spread operator on arrays within an array literal(&lt;code&gt;[]&lt;/code&gt;) to merge them. Let's see it with an example.&lt;/p&gt;

&lt;p&gt;First, we will take two arrays, &lt;code&gt;arr1&lt;/code&gt; and &lt;code&gt;arr2&lt;/code&gt;. Then merge the arrays using the spread operator(&lt;code&gt;...&lt;/code&gt;) within an array literal.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Merge arrays&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [1,2,3,4,5,6]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [1,2,3]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [4,5,6]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, notice the output of the merge. The arrays &lt;code&gt;arr1&lt;/code&gt; and &lt;code&gt;arr2&lt;/code&gt; are merged, and their elements are combined into a &lt;code&gt;new&lt;/code&gt; array. Please note, the input arrays are not changed here.&lt;/p&gt;

&lt;p&gt;Ok, so how do we merge more than two arrays using this method? Easy, pass as many arrays you want to merge as comma-separated.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Merge arrays&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [1,2,3,4,5,6,7,8,9]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This way of merging arrays is much convenient than using the traditional for-loop approach we have seen before. It is a go-to way to merge arrays in JavaScript except for a tiny gotcha that we will see in a while!&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#3-using-the-raw-concat-endraw-array-method"&gt;
  &lt;/a&gt;
  3. Using the &lt;code&gt;concat()&lt;/code&gt; array method
&lt;/h1&gt;

&lt;p&gt;JavaScript &lt;code&gt;Array&lt;/code&gt; object has several practical methods. One of them is the &lt;code&gt;concat()&lt;/code&gt; method. The primary usage of the concat method is to merge two arrays.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Merge arrays&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [1,2,3,4,5,6]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [1,2,3]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [4,5,6]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In the above code, we merge two arrays using the &lt;code&gt;concat()&lt;/code&gt; method. However, it is not my favorite syntax in merging arrays. We may misinterpret The syntax &lt;code&gt;arr1.concat(arr2)&lt;/code&gt; as we are merging &lt;code&gt;arr2&lt;/code&gt;'s element into &lt;code&gt;arr1&lt;/code&gt; and changing the array1 array itself. That's not the fact, though.&lt;/p&gt;

&lt;p&gt;Like we used the &lt;code&gt;spread&lt;/code&gt; operator, the &lt;code&gt;concat&lt;/code&gt; method will not change the input arrays. Rather, it creates a new array merging all the input arrays and returns it. So, a better way of writing the &lt;code&gt;concat()&lt;/code&gt; method to merge arrays is,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[].&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here, it is clear that we can concat multiple arrays to an empty array and return the merged array as a result. You can pass as many arrays as input arguments to the &lt;code&gt;concat()&lt;/code&gt; method.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#great-but-which-one-to-use-the-raw-spread-endraw-operator-or-the-raw-concat-endraw-method"&gt;
  &lt;/a&gt;
  Great, but which one to use? The &lt;code&gt;spread&lt;/code&gt; operator or the &lt;code&gt;concat()&lt;/code&gt; method?
&lt;/h2&gt;

&lt;p&gt;If you are sure the inputs are all arrays, please use the &lt;code&gt;spread&lt;/code&gt; operator. It is a very straightforward and modern way to merge arrays. But if you are unsure about the input element type, use the &lt;code&gt;concat()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;For example, let's take a string &lt;code&gt;tapas&lt;/code&gt; and use the spread operator on it with the array literals,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tapas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;What do you think the output will be? The string &lt;code&gt;tapas&lt;/code&gt; will be destructured into an array of characters it is made of,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lcm9NBvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634276624468/QU-LqK1Ie.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lcm9NBvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634276624468/QU-LqK1Ie.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="string destricturing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, when you merge it with other arrays, the final result may not be the one you were expecting,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tapas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The output,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nhhx54fe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634276766924/0uXdMqiWd.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nhhx54fe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634276766924/0uXdMqiWd.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="spread gotcha"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In such cases, use the &lt;code&gt;concat()&lt;/code&gt; method instead,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tapas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[].&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The output,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xn7Fm-R4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634296421384/egKKJwmd58.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xn7Fm-R4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634296421384/egKKJwmd58.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="concat over spread"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#4-using-the-raw-push-endraw-array-method"&gt;
  &lt;/a&gt;
  4. Using the &lt;code&gt;push()&lt;/code&gt; array method
&lt;/h1&gt;

&lt;p&gt;We use the &lt;code&gt;push()&lt;/code&gt; method to insert an element at the end of the array. We can use this method to merge two or more arrays as well. Please take a look,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Merge arrays&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 6&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [1,2,3,4,5,6]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [4,5,6]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;A few essential points to note here,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;push()&lt;/code&gt; method inserts an element into an array. The method changes the array and returns the number of elements of the array after insertion. So, in the example above, the first array, &lt;code&gt;arr1&lt;/code&gt;, will be changed to accommodate the new elements. The return value is &lt;code&gt;6&lt;/code&gt; from the &lt;code&gt;push()&lt;/code&gt; method is assigned to the &lt;code&gt;merged&lt;/code&gt; variable.&lt;/li&gt;
&lt;li&gt; We must spread the array while pushing its element to the other array, &lt;code&gt;arr1.push(...arr2)&lt;/code&gt;. Missing the spread operator will insert the entire array to the other array,
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="c1"&gt;// Merging without the ... on arr2&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 4&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [1,2,3,[4,5,6]]&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [4,5,6]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;So, how do we merge more than two arrays using the &lt;code&gt;push()&lt;/code&gt; method? Here it is,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Merge more than two arrays&lt;/span&gt;
&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(...[...&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// [1,2,3,4,5,6,7,8,9]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#5-using-the-raw-reduce-endraw-array-method"&gt;
  &lt;/a&gt;
  5. Using the &lt;code&gt;reduce()&lt;/code&gt; array method
&lt;/h1&gt;

&lt;p&gt;The last way to merge multiple arrays is using the &lt;code&gt;reduce()&lt;/code&gt; method.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This way of merging array is not recommended as it is closer to the &lt;code&gt;for-loop&lt;/code&gt; approach we have seen above with the extra headache of &lt;code&gt;reduce&lt;/code&gt;. We are discussing it here for the sake of building awareness!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With the &lt;code&gt;reduce&lt;/code&gt; method, we can initialize a variable(&lt;code&gt;arr&lt;/code&gt;) with the value of &lt;code&gt;arr1&lt;/code&gt; and then insert the elements of &lt;code&gt;arr2&lt;/code&gt; one by one to &lt;code&gt;arr&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The output,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KwxrOCFC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633945380274/mv_i5wmWF.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KwxrOCFC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633945380274/mv_i5wmWF.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="reduce output"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#in-summary"&gt;
  &lt;/a&gt;
  In Summary
&lt;/h1&gt;

&lt;p&gt;To Summarize,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There are more than a couple of ways to merge two or more arrays into one in JavaScript.&lt;/li&gt;
&lt;li&gt;Using the &lt;code&gt;spread operator&lt;/code&gt; or the &lt;code&gt;concat()&lt;/code&gt; method is the most optimal solution.&lt;/li&gt;
&lt;li&gt;If you are sure that all inputs to merge are arrays, use &lt;code&gt;spread operator&lt;/code&gt;. In case you are unsure, use the &lt;code&gt;concat()&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;You can use the &lt;code&gt;push()&lt;/code&gt; method to merge arrays when you want to change one of the input arrays to merge.&lt;/li&gt;
&lt;li&gt;Using the &lt;code&gt;reduce()&lt;/code&gt; method to merge arrays is a bit of overhead.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do you know any other ways to merge arrays in JavaScript? Please feel free to let us know in the comment section below.&lt;/p&gt;

&lt;p&gt;You can find all the source code used in this article from my GitHub repo,&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/atapas"&gt;
        atapas
      &lt;/a&gt; / &lt;a href="https://github.com/atapas/js-tips-tricks"&gt;
        js-tips-tricks
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      List of JavaScript tips and tricks I am learning everyday!
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;





&lt;br&gt;
I hope you found the article insightful and informative. Please like/share so that it reaches others as well.

&lt;p&gt;Let's connect. I share my learnings on JavaScript, Web Development, and Blogging on these platforms as well,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tapasadhikary"&gt;Follow me on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/tapasadhikary?sub_confirmation=1"&gt;Subscribe to my YouTube Channel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Work Life Balance While Working Remotely</title>
      <author>Vadim Atamanenko</author>
      <pubDate>Fri, 15 Oct 2021 12:01:49 +0000</pubDate>
      <link>https://dev.to/vadimatamanenko/work-life-balance-while-working-remotely-890</link>
      <guid>https://dev.to/vadimatamanenko/work-life-balance-while-working-remotely-890</guid>
      <description>&lt;h1&gt;
  &lt;a href="#how-to-keep-the-balance"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How to keep the balance?&lt;/strong&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#what-does-work-life-balance-mean"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What does work life balance mean?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;In theory, it seems that the concept of "balance between personal life and work" has a certain meaning - part of your time to work, but at the same time spending all your free time with friends, family, doing hobbies, sports or just watching TV. The idea behind work-life balance is to offer a connected and social work environment where creativity and career fulfillment will be encouraged, whether you work remotely or in the office, as well as provide a comprehensive personal life outside of their professional duties. In layman's terms, "work-life balance" means 40 hours of work per week, followed by unrelated weekends and vacations.&lt;/p&gt;

&lt;p&gt;The modern concept of work-life balance is based on empowering employees to work anywhere, anytime, leaving fewer fixed hours of work and more time for innovation and communication between team members.&lt;/p&gt;

&lt;p&gt;The emergence of cloud-based IT infrastructure and the prevalence of BYOD policies enable employees today to work from home or remotely and seamlessly collaborate with colleagues and management.&lt;/p&gt;

&lt;p&gt;As companies now become more dynamic, flexible, and have corporate social collaboration tools and BYOD at their disposal, the "mobile effect" will continue to tie employees' professional and personal lives together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-myths-surrounding-work-life-balance"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What are the myths surrounding work life balance?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;But what if everything you thought you knew about work-life balance is a myth? Some industry experts believe that such a concept no longer exists in its traditional sense. &lt;br&gt;
Traditionally, work and personal life have been viewed as competing activities that are fighting for our time. There is work and then there is "free time," meaning that work is not freedom. And the term "balance" implies that more work automatically means less personal life. But we have only one life - we just live one part of it, working, and the other - doing other things.&lt;br&gt;
The traditional concept of balance between personal life and work is not correct, since the development of global innovative companies has narrowed geographic boundaries and made time zones irrelevant. Consumers expect services and technical support to be provided 24 hours a day, 365 days a year, and most companies have either already switched to using mobile access or are migrating to it so that employees are always in touch and participate in the overall process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-dos-and-donts-surrounding-work-life-balance-when-working-remotely"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What are the do's and don‚Äôts surrounding work life balance when working remotely?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Technology can also offer concrete solutions to help employees and managers maintain an appropriate balance between their personal and professional lives. Experts recommend using social collaboration solutions that can help reduce the incessant flow of emails and lengthy meetings, give employees quick access to the information or authority they need, and enable them to interact within their ‚Äúvirtual workspace‚Äù rather than in a physical office. Managing your time and work effectively helps you free up more time for your personal life.&lt;br&gt;
According to experts, the ultimate goal is to avoid dividing work and life into separate areas, and to find the most promising moments that will allow you to do without prejudice to both. Think about it, because you are not leading a "work" and "personal" life - you have one life, it is simply expressed in different aspects. And these aspects are so intermingled and interdependent that there is no point in trying to separate them. They are already so intertwined with each other that there is no such moment in time when you devote 100% to work and 100% to weekends, it's just your life. And this is not about maintaining balance, but about being happy and living life to the fullest in all its manifestations.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>career</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Day 7 of 100 Days of Code &amp; Scrum: Panel Interviews, Dating Site Ad, and Networking</title>
      <author>Rammina</author>
      <pubDate>Fri, 15 Oct 2021 11:52:15 +0000</pubDate>
      <link>https://dev.to/rammina/day-7-of-100-days-of-code-scrum-panel-interviews-dating-site-ad-and-networking-6bo</link>
      <guid>https://dev.to/rammina/day-7-of-100-days-of-code-scrum-panel-interviews-dating-site-ad-and-networking-6bo</guid>
      <description>&lt;p&gt;Good day, everyone!&lt;/p&gt;

&lt;p&gt;Today was rather stressful, but I still managed to get my minimum required work done, along with some side Photoshop work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#panel-interview"&gt;
  &lt;/a&gt;
  Panel Interview
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--euGyY_KD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6hm32x9s9681zbn7hq5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--euGyY_KD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6hm32x9s9681zbn7hq5.png" alt="Panel Interview Meme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firstly, I had to go through a panel interview, which I find anxiety-inducing for an introvert like me.&lt;/p&gt;

&lt;p&gt;I don't really understand why businesses feel the need to have 5 people interview someone, each of them crossing their arms and taking turns to ask questions. In some places I've interviewed with, they invite someone that's not really relevant and doesn't even talk. I just think it's inefficient, but that's just my opinion anyway.&lt;/p&gt;

&lt;p&gt;I believe I did well in the interview (I think the wait drained me more than the interview itself), but I should've asked more questions to show interest in the job position or in the company. Not asking questions is a yellow flag that shows that a candidate is kind of apathetic with regard to the company and job position.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dating-site-ad"&gt;
  &lt;/a&gt;
  Dating Site Ad?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wRiic4Jo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k4qky7nrc96tco2hl0l9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wRiic4Jo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k4qky7nrc96tco2hl0l9.png" alt="Pair Programming Ad"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was practicing Photoshop on the side as well. Specifically, I tried to make a poster for &lt;a href="https://chingu.io/"&gt;Chingu.io&lt;/a&gt; for promoting the weekly pair programming matchups that they offer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-result"&gt;
  &lt;/a&gt;
  The result?
&lt;/h3&gt;

&lt;p&gt;It looks like a dating site ad, and I kind of cringed inside, to be honest. Maybe I will update it some more, but I could also just use this because it looks pretty nice anyway and the meme value might give it more attention.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I learned about &lt;code&gt;useLazyQuery&lt;/code&gt;, GraphQL &lt;code&gt;subscriptions&lt;/code&gt;, and &lt;code&gt;WebSocketLink&lt;/code&gt;. I also managed to finish the React + Apollo client tutorial at &lt;a href="https://www.howtographql.com/"&gt;https://www.howtographql.com/&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are some of the things I've learned/reviewed:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h3&gt;

&lt;p&gt;I'm reviewing everything I learned about GraphQL this week, especially the gaps in my knowledge. I'm also learning more about use cases and comparisons of REST and GraphQL.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;p&gt;The Scrum Master assists the Development Team in the following ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coaching the Development Team in self-organization and cross-functionality.&lt;/li&gt;
&lt;li&gt;Coaching the Development Team in organizational environments in which Scrum is not yet fully adopted and understood.&lt;/li&gt;
&lt;li&gt;Helping the Development Team to create high-value products.&lt;/li&gt;
&lt;li&gt;Removing impediments to the Development Team‚Äôs progress.&lt;/li&gt;
&lt;li&gt;Facilitating Scrum events as requested or needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.howtographql.com/"&gt;The Fullstack Tutorial for GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.apollographql.com/docs/"&gt;Apollo Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TgRYKBtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/45dwiwuygsppyz0cgfy1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TgRYKBtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/45dwiwuygsppyz0cgfy1.jpeg" alt="Dead Thumbsup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How is everyone doing in their learning journey? Feel free to chat with me in the comments and/via DM!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>Conditional border-radius and three future CSS features</title>
      <author>Stefan Judis</author>
      <pubDate>Fri, 15 Oct 2021 11:44:34 +0000</pubDate>
      <link>https://dev.to/stefanjudis/conditional-border-radius-and-three-future-css-features-1g1b</link>
      <guid>https://dev.to/stefanjudis/conditional-border-radius-and-three-future-css-features-1g1b</guid>
      <description>&lt;p&gt;Ahmad Shadeed's post &lt;a href="https://ishadeed.com/article/conditional-border-radius/"&gt;Conditional Border Radius In CSS&lt;/a&gt; is a wonderful example of CSS trickery that explains a fairly cryptic CSS snippet found on facebook.com.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.conditional-border-radius&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="m"&gt;100vw&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="m"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This snippet is quite hefty CSS, and if you want to learn how it works first, &lt;a href="https://ishadeed.com/article/conditional-border-radius/"&gt;head over to read Ahmad's post&lt;/a&gt;. It's a good hack, but it is also unreadable. Even if you understand this &lt;code&gt;border-radius&lt;/code&gt; declaration today, you have to write a lengthy comment so that your future self won't travel back in time to have a word with you.&lt;/p&gt;

&lt;p&gt;If you describe the CSS' functionality in JavaScript, that's how it would look like.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cardWidth&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;viewportWidth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's reasonable logic! It's readable and easy to understand. Can we have something like that in CSS? Maybe in the future?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The CSS code below is far away from being cross-browser supported, the specs are still edited, and it is not ready for production!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#media-query-ranges"&gt;
  &lt;/a&gt;
  Media query ranges
&lt;/h2&gt;

&lt;p&gt;Let's start with a common media query and make our way from there.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.contitional-border-radius&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://www.w3.org/TR/mediaqueries-4/#mq-range-context"&gt;The pretty new media query range context&lt;/a&gt; make things less verbose and more readable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="err"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* ... */&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;400px&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;1000px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* ... */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm a big fan of this syntax. Unfortunately, at the time of writing, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media#browser_compatibility"&gt;only Firefox supports media query ranges&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.contentful.com/f20lfrunubsq/2E5SoHxqwpl79kygGi6VCC/748d6e7f126b8970b6989756666b4a7e/Screen_Shot_2021-10-14_at_19.30.45.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.contentful.com/f20lfrunubsq/2E5SoHxqwpl79kygGi6VCC/748d6e7f126b8970b6989756666b4a7e/Screen_Shot_2021-10-14_at_19.30.45.png" alt="Browser support for media query ranges showing that it's only supported in Firefox."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the bright side: you can use media query ranges today &lt;a href="https://preset-env.cssdb.org/features#media-query-ranges"&gt;when PostCSS is embedded in your toolchain&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With media query ranges at our hands, what's next?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#container-queries"&gt;
  &lt;/a&gt;
  Container queries
&lt;/h2&gt;

&lt;p&gt;Let's bring in the new hotness ‚Äì container queries. Container queries allow you to style a container's children depending on its width. I'm not going into the great technical details here, but you can find plenty of resources by googling container queries. Many people are writing about it right now.&lt;/p&gt;

&lt;p&gt;Here's the syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@container&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="err"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.conditional-border-radius&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we're one step closer! &lt;code&gt;width&lt;/code&gt; defines the query container's content box width and &lt;a href="https://drafts.csswg.org/css-contain-3/#width"&gt;according to the spec&lt;/a&gt; it can be compared to &lt;a href="https://drafts.csswg.org/css-values-4/#relative-lengths"&gt;relative length units&lt;/a&gt; which include viewport units. Let's flip things around bring in the viewport width!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* If the containers width is equal or greater than 
   the viewport width, remove the border-radius */&lt;/span&gt;
&lt;span class="k"&gt;@container&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="err"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.conditional-border-radius&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This CSS looks excellent, but it's also future music due to the current browser support. &lt;a href="https://caniuse.com/css-container-queries"&gt;Container queries are pretty much a Chromium thing right now&lt;/a&gt;, they're in active development and &lt;a href="https://dev.tochrome://flags/#enable-container-queries"&gt;only supported by toggling a feature flag&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.contentful.com/f20lfrunubsq/75x0x77qAB5rMnRY8ZKft4/008a1f568a653649b021396ac421dc74/Screen_Shot_2021-10-14_at_19.43.04.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.contentful.com/f20lfrunubsq/75x0x77qAB5rMnRY8ZKft4/008a1f568a653649b021396ac421dc74/Screen_Shot_2021-10-14_at_19.43.04.png" alt="caniuse.com table for Container queries which shows only Chromium support behind a flag."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, it doesn't look like Chromium's experimental container query implementation supports viewport units yet (or am I using them wrong?). I created two CodePens to test things out. &lt;a href="https://codepen.io/stefanjudis/pen/PoKoQEY"&gt;The one using pixel units works fine&lt;/a&gt;, whereas &lt;a href="https://codepen.io/stefanjudis/pen/zYdvRZr"&gt;a container query using viewport units always matches&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.contentful.com/f20lfrunubsq/5dOaFtt94zlr1lb32kHn91/9283a5a4395574edee6d93fbd70d209a/Screen_Shot_2021-10-14_at_20.34.10.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.contentful.com/f20lfrunubsq/5dOaFtt94zlr1lb32kHn91/9283a5a4395574edee6d93fbd70d209a/Screen_Shot_2021-10-14_at_20.34.10.png" alt="Example showing that viewport units in container queries don't seem to work."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But could we come even closer to a readable CSS snippet as we're looking at future implementations anyway?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-css-when-proposal"&gt;
  &lt;/a&gt;
  The CSS @when proposal
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://css-tricks.com/proposal-for-css-when/"&gt;Chris Coyier recently shared a very new CSS conditionals proposal&lt;/a&gt;. &lt;code&gt;@when&lt;/code&gt; and &lt;code&gt;@else&lt;/code&gt; are ready for spec work and adoption. üéâ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@when&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="err"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.conditional-border-radius&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.conditional-border-radius&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's not much to say about &lt;code&gt;@when&lt;/code&gt; because no browser implements it, and it might take a while until we can use it. &lt;a href="https://tabatkins.github.io/specs/css-when-else/"&gt;The spec doesn't mention &lt;code&gt;@container&lt;/code&gt; yet&lt;/a&gt;, but it's logical to me to include container queries, too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;At least theoretically, we arrived at a few readable CSS lines that render something depending on viewport and(!) container width.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@when&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="err"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.conditional-border-radius&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.conditional-border-radius&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case you want to have a look, here are the specs again:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/mediaqueries-4/#mq-range-context"&gt;Media query ranges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drafts.csswg.org/css-contain-3/"&gt;CSS Containment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tabatkins.github.io/specs/css-when-else/"&gt;CSS When/Else Rules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's fantastic to see how CSS evolves, and I can't wait until browsers implement all this greatness. The future is bright, friends!&lt;/p&gt;

</description>
      <category>css</category>
    </item>
    <item>
      <title>Level up compliance confidence with AWS Config</title>
      <author>Michael Wu</author>
      <pubDate>Fri, 15 Oct 2021 11:23:31 +0000</pubDate>
      <link>https://dev.to/aws-builders/level-up-compliance-confidence-with-aws-config-15ne</link>
      <guid>https://dev.to/aws-builders/level-up-compliance-confidence-with-aws-config-15ne</guid>
      <description>&lt;p&gt;With the ever increasing adoption of moving workloads to public cloud providers like AWS, satisfying regulatory compliance has emerged as one of the most demanding requirements for businesses that operate on the cloud.&lt;/p&gt;

&lt;p&gt;As an AWS customer, this means that you need to establish a proper governance model for your business operations to continue, particularly for those that operate under specific regulations. This "model", is conceptualised under &lt;a href="https://docs.aws.amazon.com/controltower/latest/userguide/guardrails.html"&gt;AWS Control Tower&lt;/a&gt; as a collection of guardrails. A guardrail is simply a rule that describes what is allowed or disallowed in your AWS account. Now, a guardrail can be of two forms, a preventive guardrail or a detective guardrail.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A preventive guardrail basically &lt;strong&gt;enforces&lt;/strong&gt; a policy, such as using SCP to deny IAM users to specific APIs, so that those users in that AWS account cannot perform certain actions.&lt;/li&gt;
&lt;li&gt;On the other hand, a detective guardrail &lt;strong&gt;reports&lt;/strong&gt; a violation after evaluations of a resource deem it non-compliant under the rule.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, not every AWS customer uses Control Tower, or even AWS Organizations. This blog post aims at walking you through how to leverage AWS Config to set up &lt;strong&gt;detective&lt;/strong&gt; guardrails in your AWS account.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#config-rule"&gt;
  &lt;/a&gt;
  Config rule
&lt;/h2&gt;

&lt;p&gt;In order to detect non-compliant resources, you need to first define what a compliant resource &lt;em&gt;should&lt;/em&gt; look like, and this is done via a Config Rule.&lt;/p&gt;

&lt;p&gt;A config rule evaluates resources based on desired configuration settings. For example,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SNS topics should have at least one active subscriber.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;or, &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;IAM users should not be inactive for more than 90 days.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can define as many rules as you like. Since the main purpose of AWS Config is to track resource inventory and changes in an AWS account, it maintains an ever growing &lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"&gt;list of built-in rules&lt;/a&gt; that you can choose to enable to monitor resources of your interest.&lt;/p&gt;

&lt;p&gt;You can also create your own rules, backed by a lambda function. Custom rules offer greater flexibility to monitor resource types that are currently not supported by AWS Config. One thing worth noting in relation to security is that you can edit the lambda resource-based policy to restrict the lambda invocation permission only to the config rule that's calling it, instead of granting access to the entire Config service principal. AWS recommends it as a &lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules_nodejs.html#restricted-lambda-policy"&gt;security best practice for developing custom rules&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#okay-we-have-rules-now-what"&gt;
  &lt;/a&gt;
  Okay we have rules, now what?
&lt;/h2&gt;

&lt;p&gt;That's it! That's all you need to do to set up &lt;em&gt;detective guardrails&lt;/em&gt;. Now that you are armed with a bit of automation to monitor resources on your behalf, wouldn't it be nicer to take it further by rectifying the non-compliant resources found? This is called a &lt;strong&gt;remediation&lt;/strong&gt;. AWS Config allows you to apply remediation automation as an SSM document to respond to evaluation results from config rules. Like managed Config rules, SSM also maintains a list of automation runbooks that AWS Config can use for resource remediation. You are also free to create your own automation runbooks as SSM documents. How to create an automation runbook is outside the scope of this post, but AWS has an excellent walkthrough of &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-authoring-runbooks.html"&gt;authoring a custom runbook&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#combining-rules-and-remediation"&gt;
  &lt;/a&gt;
  Combining rules and remediation?
&lt;/h2&gt;

&lt;p&gt;Yes, AWS Config supports bringing config rules and remediation into one deployment, referred to as a &lt;strong&gt;conformance pack&lt;/strong&gt;. A conformance pack typically comprises a bunch of config rules and remediation actions, declared in a yaml file, similar to a Cloudformation template, but &lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/cpack-prerequisites.html"&gt;with a few catches&lt;/a&gt;. The deployment of a conformance pack is underpinned by Cloudformation, you can get the underlying stack arn by describing the conformance pack.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-if-i-have-multiple-accounts"&gt;
  &lt;/a&gt;
  What if I have multiple accounts?
&lt;/h2&gt;

&lt;p&gt;Both AWS Config rule and conformance pack deployments have APIs that target an AWS Organization. On top of simplified deployment, it has added benefits of bringing newly joined accounts into line automatically, and deleting the organizational guardrails when an account leaves the Organization. Organizational config rules and conformance packs are easily identifiable via a special prefix added to the resources deployed into a member account. Cleaning up organizational resources can sometimes get messy because you can only issue the delete API from the management account or the delegated admin account. Given my experience, oftentimes the org level delete API will report failed because of failures on deletion in one or more member accounts. You need to continuously issue the same API from the management or delegated admin account until all members are cleared.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>security</category>
      <category>devops</category>
      <category>compliance</category>
    </item>
    <item>
      <title>JavaScript Promises: Everything You Need to Know</title>
      <author>Aravind Sanjeev</author>
      <pubDate>Fri, 15 Oct 2021 10:55:08 +0000</pubDate>
      <link>https://dev.to/aravsanj/javascript-promises-everything-you-need-to-know-18cj</link>
      <guid>https://dev.to/aravsanj/javascript-promises-everything-you-need-to-know-18cj</guid>
      <description>&lt;p&gt;In today's post, I promise to give you the best article on JavaScript promises you ever read. See what I did there? A promise in JavaScript is an object that is returned after an asynchronous operation. The object will be returned regardless of whether the asynchronous operation was a success or failure. This is why it is called a &lt;strong&gt;promise&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The main purpose of using promise is to avoid &lt;em&gt;callback hell&lt;/em&gt;. In this post, we will learn about JavaScript promises, what they are, what they can do, and how to use them.&lt;/p&gt;

&lt;p&gt;To start off, we will discuss what existed before promise was introduced. Before promise, we used to pass callback functions directly as an argument.&lt;/p&gt;

&lt;p&gt;Let's take the example of an asynchronous function that downloads a certain image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;DownloadImageAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above function has to accept three arguments,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The url of the image&lt;/li&gt;
&lt;li&gt;A function that is executed after the image is successfully downloaded&lt;/li&gt;
&lt;li&gt;A function that is executed after the image download failed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The two functions are called callback functions. Without callback functions, we cannot act up on the result of an asynchronous operation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;failure&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;failure&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;DownloadImageAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;failure&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how a typical asynchronous operation is structured. The problem with this approach start when we try to run several asynchronous operations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;asyncFunctionOne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;asyncFunctionTwo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newResult&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;asyncFunctionThree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastResult&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastResult&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="nx"&gt;failure&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;failure&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;failure&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What you see above is called a callback hell. This will get worse as more asynchronous operations are added. This is where JavaScript promises sweeps in with a better syntax.&lt;/p&gt;

&lt;p&gt;As I already mentioned, a promise in JavaScript is an object that is returned after an asynchronous operation. We will get to creating promises later down the post. For now, let's rewrite the above code for promises.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;asyncFunctionOne&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;asyncFunctionTwo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newResult&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;asyncFunctionThree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newResult&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastResult&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastResult&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;failure&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each asynchronous functions above returns a promise. In a promise, we can attach the &lt;code&gt;then&lt;/code&gt; method where we pass the next function. From the above code you should take away three things,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Promises are far shorter and simpler in syntax&lt;/li&gt;
&lt;li&gt;You only need to pass the failure callback once&lt;/li&gt;
&lt;li&gt;A promise must always return results (check arrow function syntax, it is returning results which is passed to the next &lt;code&gt;then&lt;/code&gt; block)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;It is important to note that for most of our JavaScript life, we will be using already-made promises instead of creating them ourselves.&lt;/em&gt; With that being said, let's learn to create promises.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-promise"&gt;
  &lt;/a&gt;
  Creating a promise
&lt;/h2&gt;

&lt;p&gt;To create promises, we use the &lt;code&gt;Promise&lt;/code&gt; constructor object in JavaScript. The &lt;code&gt;new&lt;/code&gt; keyword is used to create a new instance of a user-defined object or constructor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A promise has to be resolved (success) or rejected (failure). In both cases, a function is executed (as demonstrated above). We pass these functions as arguments of an arrow function passed to the &lt;code&gt;Promise&lt;/code&gt; constructor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the arrow function, we create the definition and condition for resolve or reject to be executed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;failed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We already saw how to consume the promise. By using &lt;code&gt;then&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; methods.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;from then &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;from catch &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;// output: from then success&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the condition is satisfied (which it is), the resolve function is triggered and &lt;code&gt;then&lt;/code&gt; method is executed. Otherwise, the &lt;code&gt;catch&lt;/code&gt; method is executed.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;then&lt;/code&gt; method above itself returns another promise.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;from then &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;from catch &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use &lt;code&gt;then&lt;/code&gt; method again on the new promise object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promise2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;something&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;something&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Better way to do this is to just tuck in the &lt;code&gt;then&lt;/code&gt; methods one after another (as we saw in the first example).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;from then &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;something&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;something&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;from catch &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is called a promise chain.&lt;/p&gt;

&lt;p&gt;To recap,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;Promise&lt;/code&gt; is an object (constructor) in JavaScript&lt;/li&gt;
&lt;li&gt;An instance of the object is created using &lt;code&gt;new&lt;/code&gt; keyword&lt;/li&gt;
&lt;li&gt;A function is passed as an argument to the constructor&lt;/li&gt;
&lt;li&gt;The function accepts two other functions as arguments - resolve &amp;amp; reject&lt;/li&gt;
&lt;li&gt;Conditions and definitions for these functions are defined in the function definition&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;then&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; methods are executed for resolve and reject accordingly&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;then&lt;/code&gt; method itself returns a promise that can attach another &lt;code&gt;then&lt;/code&gt; method creating a promise chain&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#states-of-a-promise"&gt;
  &lt;/a&gt;
  States of a promise
&lt;/h2&gt;

&lt;p&gt;A promise always has to be in one of the following three states:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pending&lt;/li&gt;
&lt;li&gt;Fullfilled&lt;/li&gt;
&lt;li&gt;Rejected&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Pending&lt;/em&gt; is the initial state of the the promise. The promise is &lt;em&gt;fullfilled&lt;/em&gt; when it is a success. The promise is &lt;em&gt;rejected&lt;/em&gt; when it is a failure.&lt;/p&gt;

&lt;p&gt;When a promise is rejected, it is still returning another promise. That means we can also use &lt;code&gt;then&lt;/code&gt; method instead of &lt;code&gt;catch&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;promise&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onSuccess&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onSuccess&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onRejection&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onRejection&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But &lt;code&gt;then&lt;/code&gt; method in this case is used to execute another asynchronous operation. It should not be confused with &lt;code&gt;catch&lt;/code&gt; which is used for error handling. A &lt;code&gt;catch&lt;/code&gt; is always necessary.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;promise&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onSuccess&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onSuccess&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onRejection&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onRejection&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;catch&lt;/code&gt; method is instantly executed when confronted with an error. It doesn't matter how many &lt;code&gt;then&lt;/code&gt; methods it had to skip.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;catch&lt;/code&gt; method also returns a promise. So we can tuck in a &lt;code&gt;then&lt;/code&gt; method after the &lt;code&gt;catch&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;promise&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onSuccess&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onSuccess&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onRejection&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onRejection&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;somethingElse&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;somethingElse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way we can still trigger another asynchronous operation after error handling.&lt;/p&gt;

&lt;p&gt;If you want to execute something regardless of whether your promise is fulfilled or rejected, use &lt;code&gt;finally&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;promise&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;from then &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onRejection&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onRejection&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;from then &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;somethingElse&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;somethingElse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;whatever&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whatever goes in to the &lt;code&gt;finally&lt;/code&gt; block is always executed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-resolve-and-reject-methods"&gt;
  &lt;/a&gt;
  The resolve() and reject() methods
&lt;/h2&gt;

&lt;p&gt;When we created a promise earlier, we defined the condition for resolving or rejecting that promise. But there is a way to resolve or reject a promise unconditionally.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Promise.resolve()&lt;/code&gt; method returns a promise object that is already resolved by a given value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Promise.reject()&lt;/code&gt; method returns a promise object that is rejected with a given reason.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reason&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Creating promises that are unconditionally resolved or rejected is particularly useful when handling multiple independent promises.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#handling-multiple-independent-promises"&gt;
  &lt;/a&gt;
  Handling multiple independent promises
&lt;/h2&gt;

&lt;p&gt;We can handle multiple independent promises using &lt;code&gt;Promise.all()&lt;/code&gt; and &lt;code&gt;Promise.race()&lt;/code&gt; methods. Both methods accept an array of promises.&lt;/p&gt;

&lt;p&gt;While using &lt;code&gt;Promise.all()&lt;/code&gt;, the &lt;code&gt;then&lt;/code&gt; method is only triggered after the last promise is resovled.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;result1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;result2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;result3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;promise1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;promise1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;promise3&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// [ result1, result1, result3 ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While using &lt;code&gt;Promise.race()&lt;/code&gt;, the &lt;code&gt;then&lt;/code&gt; method is triggered the moment first promise is resolved.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;result1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;result2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;result3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;race&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;promise1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;promise1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;promise3&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// result1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since these are simple promises, &lt;code&gt;promise1&lt;/code&gt; will be resolved first. This may not be the case with complex ones. This enables us to run multiple asynchronous operations and act up on the one that finishes first.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>üî• How to create a Landing Page with Next JS in 5 minutes and deploy in production üöÄ</title>
      <author>Remi W.</author>
      <pubDate>Fri, 15 Oct 2021 10:45:28 +0000</pubDate>
      <link>https://dev.to/ixartz/how-to-create-a-landing-page-with-next-js-in-5-minutes-and-deploy-in-production-5e08</link>
      <guid>https://dev.to/ixartz/how-to-create-a-landing-page-with-next-js-in-5-minutes-and-deploy-in-production-5e08</guid>
      <description>&lt;p&gt;The first thing you do for your SaaS products is to create a landing page. It's also applied for open source projects, Startups, selling online products, etc. Building your Landing Page is the best way to promote your projects and find your audience.&lt;/p&gt;

&lt;p&gt;In this article, I'll show you how you can create and deploy your landing page in production. In 5 minutes, you'll have a marketing website where you can start promoting your projects or products.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-js-landing-page-template"&gt;
  &lt;/a&gt;
  Next JS Landing Page Template
&lt;/h2&gt;

&lt;p&gt;Recently, Next JS has grown among React community. With Next JS pre-render pages at build time (SSG), you are now able to write your React components for creating a Landing Page or marketing website.&lt;/p&gt;

&lt;p&gt;To create a landing page in 5 minutes and deploy it in production, you need to get some help. Otherwise, it'll take you several days or weeks to make it.&lt;/p&gt;

&lt;p&gt;I have built an open-source and free Next JS landing page with React, TypeScript and Tailwind CSS. So, you don't need to create and code the design yourself. The code is hosted on GitHub at &lt;a href="https://github.com/ixartz/Next-JS-Landing-Page-Starter-Template"&gt;Next JS Landing Page Template&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In one click, you'll able to deploy your landing page on Netlify. You'll find the &lt;a href="https://github.com/ixartz/Next-js-Boilerplate#deploy-to-netlify"&gt;one-click deploy button&lt;/a&gt; inside the REAMDE file of the project.&lt;/p&gt;

&lt;p&gt;After clicking on the Netlify button, you'll redirect to Netlify wizard to set up the landing page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--44n9TB-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/netlify-one-deploy-landing-page.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--44n9TB-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/netlify-one-deploy-landing-page.png" alt="Netlify one-click deploy Next JS Landing Page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everything should be already configured for you, you only need to indicate the name of your project. At the end of the setup wizard, you should see this UI:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wh7sgRr3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/netlify-dashboard-deployment.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wh7sgRr3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/netlify-dashboard-deployment.png" alt="Netlify one-click deploy Next JS Landing Page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wait until the landing page is deployed, you can now click the link to your website which follows this format &lt;code&gt;https://XXXXXXXX.netlify.app&lt;/code&gt;. Here is the final result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8QJkwaOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/next-js-landing-page-netlify.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8QJkwaOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/next-js-landing-page-netlify.png" alt="Next JS Landing Page Netlify"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  In conclusion
&lt;/h2&gt;

&lt;p&gt;By following this tutorial, you have created and deployed your landing page in production. Now, you can customize the page to meet your needs and requirements.&lt;/p&gt;

&lt;p&gt;You can also check out our other &lt;a href="https://creativedesignsguru.com/category/nextjs/"&gt;Next JS Landing Page Template&lt;/a&gt; with prebuilt premium components like Testimonials, Pricing cards, FAQs, or Stats.&lt;/p&gt;

&lt;p&gt;If you want to build SaaS products, I've also created a &lt;a href="https://nextlessjs.com"&gt;Next JS SaaS Boilerplate&lt;/a&gt;. It includes everything you need to build your SaaS products faster with authentication, Stripe integration, prebuilt landing page, prebuilt user dashboard, form and error handling, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextlessjs.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c1qKLlCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/nextless-react-saas-boilerplate.png" alt="Next JS SaaS Boilerplate Starter"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>nextjs</category>
      <category>jamstack</category>
    </item>
  </channel>
</rss>
