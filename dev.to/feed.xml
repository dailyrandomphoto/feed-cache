<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Delete Node Modules like a PRO üòé</title>
      <author>Yaman Sharma</author>
      <pubDate>Sat, 17 Jul 2021 19:39:15 +0000</pubDate>
      <link>https://dev.to/yaman27/delete-node-modules-like-a-pro-1m53</link>
      <guid>https://dev.to/yaman27/delete-node-modules-like-a-pro-1m53</guid>
      <description>&lt;p&gt;Node modules are famous for being the heaviest object in the universe üòÇ and deleting them is no joke. It takes a long of time and we even end up with freezed and unresponsive screens, but not anymore. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SAwxyw8y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqpdulrw4vi4ixw5ka0q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SAwxyw8y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqpdulrw4vi4ixw5ka0q.png" alt="node-modules joke"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is an npm package that could help us to delete node modules faster and without any hassle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/npkill"&gt;npkill&lt;/a&gt; comes to the rescue!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4z6eAikG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o10ebu73j9myoshw2mah.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4z6eAikG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o10ebu73j9myoshw2mah.PNG" alt="npkill logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You don't need to install npkill , just run npx npkill in your terminal&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pldz8wK6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/km2rl5f0u105qjx9g6kf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pldz8wK6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/km2rl5f0u105qjx9g6kf.PNG" alt="npx npkill"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will then scan for node_modules starting at the path where npkill command is executed and list them.&lt;/p&gt;

&lt;p&gt;Move between the listed node modules folders with arrow keys, and press Space to delete it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Js8URxv5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxgsuwz2u60gd00osjph.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Js8URxv5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxgsuwz2u60gd00osjph.PNG" alt="Select nodemodules and delete"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple, isn't it?&lt;/p&gt;

&lt;p&gt;Hope you liked the post and learned a trick along the way! üòÉ&lt;/p&gt;

&lt;p&gt;‚úã Hey! Before you go üèÉ‚Äç&lt;br&gt;
If you enjoyed this trick, You can also follow me on&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/yamansharma27/"&gt;LinkedIN&lt;/a&gt; | &lt;a href="https://dev.to/yaman27"&gt;Dev.to&lt;/a&gt; | &lt;a href="https://github.com/YyamanSharma"&gt;Github&lt;/a&gt; | &lt;a href="https://twitter.com/YyamanSharma"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Stay tuned for more such tricks ‚ú® &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>node</category>
      <category>npm</category>
    </item>
    <item>
      <title>Scrum: The Art of Doing Twice the Work in Half the Time by Jeff Sutherland</title>
      <author>Sandor Dargo</author>
      <pubDate>Sat, 17 Jul 2021 18:18:32 +0000</pubDate>
      <link>https://dev.to/sandordargo/scrum-the-art-of-doing-twice-the-work-in-half-the-time-by-jeff-sutherland-2073</link>
      <guid>https://dev.to/sandordargo/scrum-the-art-of-doing-twice-the-work-in-half-the-time-by-jeff-sutherland-2073</guid>
      <description>&lt;p&gt;I recently read &lt;a href="https://devreads.sandordargo.com/clean-agile-by-uncle-bob/"&gt;Clean Agile by Uncle Bob&lt;/a&gt; and probably that's why my Kindle recommended me to read &lt;a href="https://amzn.to/3bqM0uK"&gt;Scrum: The Art of Doing Twice the Work in Half the Time&lt;/a&gt; on Agile by another founder of &lt;a href="https://agilemanifesto.org/"&gt;the Agile Manifesto&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Well, if there is one person who is more equal among the 17 founders, maybe it's &lt;a href="https://twitter.com/jeffsutherland"&gt;Jeff Sutherland&lt;/a&gt;. At least in regards to Scrum. He clearly considers it the best way of doing things - if done right.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deliver-more-with-less"&gt;
  &lt;/a&gt;
  Deliver more with less
&lt;/h2&gt;

&lt;p&gt;He brings examples to support his points. Not one or two but many.&lt;/p&gt;

&lt;p&gt;The most fascinating one is probably the one of the FBI. The Federal Bureau of Investigation had been using an ancient computer system. Maybe it'd be better to say system, without "computer". They had most of their reports on paper, but anyways, they used a gigantic mainframe system that was built in the 80s.&lt;/p&gt;

&lt;p&gt;It was called the Automated Case Support system and often agents avoided using it as it was so cumbersome and slow. Many claim that even 9/11 could have been prevented with a modern system. In any case, by 2001 a new system called the Virtual Case File system was under development.&lt;/p&gt;

&lt;p&gt;But it was a disaster. The project ran late. It was budgeted for $100 million, then when the project was killed in 2005 they had already spent $170 million.&lt;/p&gt;

&lt;p&gt;A new project was announced, Sentinel for $451 million and was promised to be fully operational by 2009.&lt;/p&gt;

&lt;p&gt;In 2010 already $405 million was spent, but only half of the project was developed and independent analysts estimated an additional 6 to 8 years of development and at least $350 million.&lt;/p&gt;

&lt;p&gt;That's the point when agile got involved and the new project lead promised a delivery for the fall of 2011 with an ~80% staff reduction and with the remaining budget.&lt;/p&gt;

&lt;p&gt;The project got late, but finally, Sentinel was turned on in July 2012 that's years before the previous estimation with much fewer people and money.&lt;/p&gt;

&lt;p&gt;Those who were responsible to turn the project around consider the usage of the agile methodology a game-changer. &lt;/p&gt;

&lt;p&gt;Not relying on fixed ways of working, but constantly trying new things to eliminate impediments and inefficiencies of the processes made the teams more committed and faster.&lt;/p&gt;

&lt;p&gt;Not relying on made-up yet rigid plans, but having a constantly updated view on the status and always taking the tasks that would bring the most value added the feeling of success and predictability. &lt;/p&gt;

&lt;p&gt;It let the project go even faster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem-of-gantt-charts"&gt;
  &lt;/a&gt;
  The problem of Gantt charts
&lt;/h2&gt;

&lt;p&gt;Who hasn't see &lt;a href="https://en.wikipedia.org/wiki/Gantt_chart"&gt;Gantt charts&lt;/a&gt;? You know it's the popular chart diagram showing tasks displayed against time.  &lt;/p&gt;

&lt;p&gt;It was designed during the beginning of 1910s by a person called Henry Gantt and it was meant to represent plans for systematic routine operations. &lt;/p&gt;

&lt;p&gt;One of its first major use was in the First World War by the US Army. World War I doesn't have the reputation of an organizational success story, yet we use this tool in modern project management shamelessly.&lt;/p&gt;

&lt;p&gt;And do you know what's the main characteristic of these charts? They lie. They always do. The plans look good, but they always fall apart almost immediately. Reality is not taken into account and at the first delay, at the first tiniest change it loses its relevance and it has to be redone. According to Sutherland, there used to be people whose job consisted of nothing more than preparing these charts and keep them up to date.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-ooda-loop"&gt;
  &lt;/a&gt;
  The OODA loop
&lt;/h2&gt;

&lt;p&gt;Instead, Scrum is not about creating schedules in advance that cannot be hold. It's about adapting to a constantly changing environment.&lt;/p&gt;

&lt;p&gt;This need and the presented principles of adaption were extremely important at the Vietnam War where the author was a fighter pilot. &lt;/p&gt;

&lt;p&gt;At the US Air Force, he got a training that helped him (and many others) to never lose his cool. The four actions to follow was&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Observe&lt;/li&gt;
&lt;li&gt;Orient&lt;/li&gt;
&lt;li&gt;Decide&lt;/li&gt;
&lt;li&gt;Act&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's also called the &lt;a href="https://en.wikipedia.org/wiki/OODA_loop"&gt;OODA loop&lt;/a&gt; which was formalized by Colonel John Boyd.&lt;/p&gt;

&lt;p&gt;Take the 4 actions in loops. It's such an important concept that there is even a street in Alabama named after it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iuATLVE---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9lnp5icvtrm4xrs6g6mj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iuATLVE---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9lnp5icvtrm4xrs6g6mj.jpg" alt="OODA Loop, Alabama"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, both in warfare and business, you have to &lt;strong&gt;observe&lt;/strong&gt; the situation, you have to understand the big picture. Then you have to &lt;strong&gt;orient&lt;/strong&gt; yourself not just in a way to understand where you are, but you also have to take into account what you're capable of seeing.&lt;/p&gt;

&lt;p&gt;With proper observation and orientation, you can (and have to) quickly &lt;strong&gt;make decisions&lt;/strong&gt; and &lt;strong&gt;act&lt;/strong&gt; upon them and then start the loop over.&lt;/p&gt;

&lt;p&gt;In scrum, the result of such a loop is a working increment that helps the product owner to decide what's the next most important story to act upon, what will bring the most value to the customer.&lt;/p&gt;

&lt;p&gt;There is Gantt chart to follow, there is the constantly changing world around us that we have to observe and orient ourselves within.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#size-matters"&gt;
  &lt;/a&gt;
  Size matters
&lt;/h2&gt;

&lt;p&gt;One more interesting thing I wanted to mention from the book is that size matters and maybe a different way that you'd expect. I say maybe because if you've read the seminal book of Fred Brooks, &lt;a href="https://amzn.to/3uQ4sny"&gt;The Mythical Man-Month&lt;/a&gt; you probably remember that simply adding more people to a project will not make it go faster.&lt;/p&gt;

&lt;p&gt;Team dynamics form more difficult at scale. A lot.&lt;/p&gt;

&lt;p&gt;It seems that this has something to do with our short term memory. As it was shown by studies, an average person can retain about seven items in their short-term memory. That's also the ideal size of the team.&lt;/p&gt;

&lt;p&gt;You might err by +-2, but if you do, you should do on the negative side. Think about the number of communication channels in a team (n*(n-1)/2), where n is the number of members.&lt;/p&gt;

&lt;p&gt;I never understand when managers form 10+ agile teams. They never work, people usually don't even know who the others are (especially in remote teams), what they do, why they are there. If you have such a team, it will naturally break down into smaller entities, but it's not something positive either.&lt;/p&gt;

&lt;p&gt;Avoid it by forming small teams.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The end of the book could have been left out. No matter which side you are, you shouldn't involve politics in professional books I think and I say that as someone who was actively involved in politics. You have to be able to draw some borders. &lt;/p&gt;

&lt;p&gt;Apart from that, I think &lt;a href="https://amzn.to/3bqM0uK"&gt;it's an inspiring book&lt;/a&gt; with many real-life examples and pieces of advice. Some I'll follow, like the OODA principle and some I'd be happy if managers would follow such as the number of people on a team.&lt;/p&gt;

&lt;p&gt;And if you've never seen a successful agile project (like many of us), then at least you'll have a few references.&lt;/p&gt;

</description>
      <category>books</category>
      <category>watercooler</category>
      <category>agile</category>
      <category>projectmanagement</category>
    </item>
    <item>
      <title>Learnings from Javascript 30 - Building a JS Drum Kit</title>
      <author>Yaman Sharma</author>
      <pubDate>Sat, 17 Jul 2021 18:18:30 +0000</pubDate>
      <link>https://dev.to/yaman27/learnings-from-javascript-30-building-a-js-drum-kit-40dl</link>
      <guid>https://dev.to/yaman27/learnings-from-javascript-30-building-a-js-drum-kit-40dl</guid>
      <description>&lt;p&gt;This is the first post of the Learnings from Javascript30 Series where we will be covering what we learned from each day of Javascript30, a series by Wesbos.&lt;/p&gt;

&lt;p&gt;In the first lesson of Javascript30, We build a drum kit where user can create their own tunes by clicking alphabetic keys. Get the full Source Code &lt;a href="https://github.com/YyamanSharma/Javascript30/tree/master/01%20-%20JavaScript%20Drum%20Kit"&gt;here&lt;/a&gt; on my &lt;a href="https://github.com/YyamanSharma"&gt;Github&lt;/a&gt; Repo. &lt;/p&gt;

&lt;p&gt;The learnings from the project :-&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-datakey-attributes"&gt;
  &lt;/a&gt;
  1. Data-Key Attributes:
&lt;/h4&gt;

&lt;p&gt;data-* attributes allows us to store extra information on html elements. So, if there's a attribute on an HTML element which starts with data- , it's called a data-attribute.&lt;/p&gt;

&lt;p&gt;e.g. data-key=65 is a data-attribute for the below element&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MqB8od09--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/afl7obuko43szr7jzzji.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MqB8od09--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/afl7obuko43szr7jzzji.png" alt="Data-Key Attribute"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can get the value of data attribute by using getAttribute() or can read/write using dataset property.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OYs-r-c4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o444pntxnti77lxbvo8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OYs-r-c4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o444pntxnti77lxbvo8.png" alt="Accessing data-key attribute"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-audio-element"&gt;
  &lt;/a&gt;
  2. Audio Element:
&lt;/h4&gt;

&lt;p&gt;The audio element is used to add audio content in html pages.&lt;br&gt;
It can take multiple attributes but the most common and necessary one is the src attribute.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XaHTT_6U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/biebw92p16n5rr2wvpuy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XaHTT_6U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/biebw92p16n5rr2wvpuy.png" alt="Audio Element"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can even provide multiple source attributes so that if first one doesn't load, it can fall back to the others.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--63IMWlEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xb43er1p2t1mreevrzi8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--63IMWlEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xb43er1p2t1mreevrzi8.png" alt="Audio Element with multiple src"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Various methods associated with audio are play(), pause() etc and properties like muted, loop, currentTime etc which gives us more control over the audio element.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-transitionend-event"&gt;
  &lt;/a&gt;
  3. TransitionEnd Event
&lt;/h4&gt;

&lt;p&gt;The transitionend event is fired when a CSS transition is completed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yG-h08qr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1mh67meulnymjifaw09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yG-h08qr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1mh67meulnymjifaw09.png" alt="transitionend"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In our project, we wanted to remove the styling of the key once the css transform transition has ended. Hence we added the event listener on all the keys and checks if transform has occured. If yes, remove the styling.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PnLpSjCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qomi6d1rlbh37pri3yfj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PnLpSjCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qomi6d1rlbh37pri3yfj.png" alt="remove styling on transitionend"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are many other events like transitionstart, tranistioncancel etc which can be useful while working with animations.&lt;/p&gt;

&lt;p&gt;Javascript30 is a great learning series for a novice as well as an experienced developer because you will be learning a lot of stuffs which is either not known to you or can be helpful to fill the learning gaps.&lt;/p&gt;

&lt;p&gt;Hope you liked the post and learned something along the way! üòÉ&lt;/p&gt;

&lt;p&gt;‚úã Hey! Before you go üèÉ‚Äç&lt;br&gt;
If you enjoyed this article, You can also follow me on&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/yamansharma27/"&gt;LinkedIN&lt;/a&gt; | &lt;a href="https://dev.to/yaman27"&gt;Dev.to&lt;/a&gt; | &lt;a href="https://github.com/YyamanSharma"&gt;Github&lt;/a&gt; | &lt;a href="https://twitter.com/YyamanSharma"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the next blog, we will cover the learnings from second day of Javascript30, so stay tuned! ‚ú®&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>javascript30</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>How to deploy a ML model as an API using Google Compute engine, Docker and flask</title>
      <author>Nabil Alamin</author>
      <pubDate>Sat, 17 Jul 2021 18:12:25 +0000</pubDate>
      <link>https://dev.to/arndom/how-to-deploy-a-ml-model-as-an-api-using-google-compute-engine-docker-and-flask-3gab</link>
      <guid>https://dev.to/arndom/how-to-deploy-a-ml-model-as-an-api-using-google-compute-engine-docker-and-flask-3gab</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hello üëã&lt;/strong&gt;, this is a quick guide into deploying a ml model as an API, so lets get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;First of the model we are going to be making use of is a &lt;em&gt;Deepfake&lt;/em&gt; model by the name of &lt;a href="https://aliaksandrsiarohin.github.io/first-order-model-website/"&gt;First Order Motion&lt;/a&gt;. Deepfakes you allow you create an artificial version of a person saying or doing an action, I first found about this particular model on two minute papers (an awesome YT channel for lovers of AI ‚ö°) and wanted to try it for myself. The video below talks more about the model.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/mUfJOQKdtAk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this article we will be taking this model which could only be tested using the jupyter file in the &lt;a href="https://github.com/AliaksandrSiarohin/first-order-model"&gt;repo&lt;/a&gt; and through the power of python and cloud computing we can access it as an API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tools-used"&gt;
  &lt;/a&gt;
  Tools used
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Python and Flask: to make the API.&lt;/li&gt;
&lt;li&gt;Docker: to build the docker image of the API &lt;/li&gt;
&lt;li&gt;Google Account with Billing and Compute Engine enabled: To Create the VM instance where the container will be deployed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#details"&gt;
  &lt;/a&gt;
  Details
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Make the &lt;a href="https://gist.github.com/arndom/7a40bfd2a5ea9bbcd2f7076bb79ab638"&gt;app.py&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is the main file of the project, it is where the APIs default and post requests are defined. The route for the home page can be easily defined by routing  to "/" and defining a landing html file as can be shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@app.route("/")
def homepage():
    return render_template("index.html", title="JUST WORK")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next is defining the post request, which does the work of making the specified image mirror the specified video. The function to make this request is based on the inference of the model as seen in this colab &lt;a href="https://github.com/AliaksandrSiarohin/first-order-model/blob/master/old_demo.ipynb"&gt;notebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gqgqlMyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626526268602/vjsZEoXYsg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gqgqlMyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626526268602/vjsZEoXYsg.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This inference was then given the route "/post" and the appropriate headers as seen below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@app.route('/post', methods=['GET', 'POST'])
@cross_origin(origin='*',headers=['Content-Type','Authorization'])
def post():
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The post function has some alterations and tweaks from the original used in the notebook due handling the inputs and their processing after which it was basically the exact same use of the functions of  loading the model checkpoints and making the deepfake;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;generator, kp_detector = load_checkpoints(config_path='config/vox-256.yaml', checkpoint_path='../vox-cpk.pth.tar', cpu=True) # for gpu specify as false
print("generator done")

predictions = make_animation(source_image=image,driving_video=driving_video, generator=generator, kp_detector=kp_detector, relative=True, cpu=True
                                                  ) # for gpu specify as false

imageio.mimsave('generatedVideo.mp4', [img_as_ubyte(frame) for frame in predictions], fps=fps)    
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The full code can be found &lt;a href="https://gist.github.com/arndom/7a40bfd2a5ea9bbcd2f7076bb79ab638"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you followed the above, you can test it locally and see some nice results, here's an example test script &amp;amp; the result&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;test script ‚¨á&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import requests
resp = requests.post("http://localhost:5000/post",
                     files={"image": open('02.png','rb'), # 94kb file
                             "video": open('test.mp4','rb') # 10secs vid 
                            })
## output generation took 03m:03s on cpu (AMD ryzen 7 4800HS)
## for best result use a gpu
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;result ‚¨á&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/x7KkLzk3b5k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Make the &lt;a href="https://gist.github.com/arndom/e65617b4745d82c68ec26d3c4853e90f"&gt;Dockerfile&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There wasn't much to change from the dockerfile provided in the &lt;a href="https://github.com/AliaksandrSiarohin/first-order-model/blob/master/Dockerfile"&gt;repo&lt;/a&gt; except for some additions as seen below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM nvcr.io/nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04

RUN DEBIAN_FRONTEND=noninteractive apt-get -qq update \
 &amp;amp;&amp;amp; DEBIAN_FRONTEND=noninteractive apt-get -qqy install python3-pip ffmpeg git less nano libsm6 libxext6 libxrender-dev \
 &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/*

COPY . /app/
WORKDIR /app

RUN pip3 install --upgrade pip
RUN pip3 install \
  https://download.pytorch.org/whl/cu100/torch-1.0.0-cp36-cp36m-linux_x86_64.whl \
  git+https://github.com/1adrianb/face-alignment \
  -r requirements.txt

ENTRYPOINT [ "python3" ]

CMD [ "app.py" ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;### requirements.txt
imageio
imageio-ffmpeg
matplotlib
numpy
pandas
python-dateutil
pytz
PyYAML
scikit-image
scikit-learn
scipy
torch
torchvision
tqdm
IPython
flask
flask_cors
requests
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;NB: The best thing to do would be to edit the dockerfile  and requirements.txt(can be seen above) then add the app.py to a forked version of this &lt;a href="https://github.com/AliaksandrSiarohin/first-order-model"&gt;repo&lt;/a&gt; so the container image can be built successfully&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Deploy to google cloud platform as a VM instance on compute engine&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So first you need to have a google account, then if this your first time using the google cloud platform you would get $300 worth of cloud credit which comes in handy for this and any other projects later on. Let's get started:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a project on GCP(google cloud platform) eg: "photo-mirrors-video" &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J_-2c-Wo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626537867278/rxlMloIPy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J_-2c-Wo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626537867278/rxlMloIPy.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Open your cloud shell editor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zuZkxbO5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626537989419/F-pQ85uPn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zuZkxbO5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626537989419/F-pQ85uPn.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the cloud shell terminal copy the below to enter your current project. The project id in this case is "photo-mirrors-video"
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud config set project [PROJECT_ID]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cq0FwkrP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626538034481/t2OA-nntf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cq0FwkrP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626538034481/t2OA-nntf.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Upload a folder containing your version of this project. The uploaded folder should have a structure similar to this&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8jscMmr2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626538468694/MDa7mfsza.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8jscMmr2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626538468694/MDa7mfsza.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Make sure&lt;/strong&gt; you followed up till this point and enter this command in the terminal:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud builds submit --tag gcr.io/[PROJECT_ID]/chosen-image-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Once the container has finished building it will be deployed to your google container &lt;a href="https://cloud.google.com/container-registry"&gt;registry&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go back to the cloud console &lt;a href="https://console.cloud.google.com/"&gt;dashboard&lt;/a&gt; and navigate to the compute engine option and select vm instance. Once opened click create instance&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2T9euchN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626538746822/rj45z42gM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2T9euchN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626538746822/rj45z42gM.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Under machine configuration have a minimum of v8CPUs to run the container( A GPU would have  been ideal but the model was built with torch 1.0 so there are compatibility issues for the available configurations) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check the container and specify the address of your container. (also check all the boxes under advanced)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--00xajNZ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626539209563/l5y4WUMc3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--00xajNZ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626539209563/l5y4WUMc3.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Specify 30gb as the size of the container.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Allow http traffic for the firewall.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MtV17wjG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626539330516/FXYaViIH0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MtV17wjG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626539330516/FXYaViIH0.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Give it some minutes and your API should be &lt;strong&gt;live&lt;/strong&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;For the sake of this example go and edit this firewall http &lt;a href="https://console.cloud.google.com/networking/firewalls/details/default-allow-http"&gt;rule&lt;/a&gt; to allow all ports to access the IP.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_XGLIeut--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626540221402/CAi_ivg24.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_XGLIeut--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626540221402/CAi_ivg24.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can  go to the external IP and add port 5000 which will take you to the index and should display this: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GKqWMVV_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626539840944/vAgEH-vcT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GKqWMVV_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626539840944/vAgEH-vcT.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you've followed up to this point, you successfully made an ml model an API, Congratulations üëèüëè.  Thanks for sticking with me so far so and stay tuned for more how-to posts. Been a pleasure sharing what I've learnt this week üëã &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o6EhGvKschtbrRjX2/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o6EhGvKschtbrRjX2/giphy.gif" alt="giph"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>python</category>
      <category>cloud</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Managing remote servers with SSH connection: using Windows and Linux</title>
      <author>Lorenzo Costa</author>
      <pubDate>Sat, 17 Jul 2021 17:54:19 +0000</pubDate>
      <link>https://dev.to/costa86/managing-remote-servers-with-ssh-connection-using-windows-and-linux-45im</link>
      <guid>https://dev.to/costa86/managing-remote-servers-with-ssh-connection-using-windows-and-linux-45im</guid>
      <description>&lt;p&gt;Among the benefits to using SSH to manage remote machines, we can list:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No need for passwords&lt;/li&gt;
&lt;li&gt;Encrypted communication&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Many people, specially for &lt;code&gt;Windows OS&lt;/code&gt;, tend to recommend a GUI client called &lt;code&gt;PuTTY&lt;/code&gt; to set SSH connections. If you are on &lt;code&gt;Windows 10&lt;/code&gt;, &lt;code&gt;OpenSSH&lt;/code&gt; is already native on you computer, so do not bother installing &lt;code&gt;PuTTY&lt;/code&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By the end of this article you will have learned how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create remote &lt;code&gt;servers&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create SSH connection from &lt;code&gt;Windows/Linux&lt;/code&gt; devices to access these &lt;code&gt;servers&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Disable password authentication on the &lt;code&gt;servers&lt;/code&gt;, so they will become less vulnerable to brute-force attacks&lt;/li&gt;
&lt;li&gt;Transfer files back and forth between local devices and these &lt;code&gt;servers&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Host your custom website on remote &lt;code&gt;servers&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#creating-remote-servers"&gt;
  &lt;/a&gt;
  Creating remote servers
&lt;/h2&gt;

&lt;p&gt;We will use &lt;a href="https://cloud.digitalocean.com/"&gt;Digital Ocean&lt;/a&gt; for this part. Creating a &lt;code&gt;server&lt;/code&gt; is very straightforward. Look for a &lt;strong&gt;create droplet&lt;/strong&gt; option there. Here we have some settings suggestions for the new &lt;code&gt;server&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Choose a image/OS&lt;/strong&gt;: Ubuntu&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Choose plan&lt;/strong&gt;: The cheapest one&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Choose a datacenter&lt;/strong&gt;: Whichever is closer to you&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Authentication method&lt;/strong&gt;: Password. We will set SSH manually and then disable password authentication (save this password to a text file for now, though)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Number of droplets (servers)&lt;/strong&gt;: 1&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Choose a hostname&lt;/strong&gt;: ubuntu-one&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hit the "create droplet" button&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some reference screenshots:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FNEGYur5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pq08uz1awffw5ljcunov.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FNEGYur5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pq08uz1awffw5ljcunov.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_wfiih9b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2iw7gx1ghynsnln9ar2b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_wfiih9b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2iw7gx1ghynsnln9ar2b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the server is created, you will have access to its IP address. Mine was &lt;code&gt;142.93.169.195&lt;/code&gt;, and yours will be a different one.&lt;/p&gt;

&lt;p&gt;Check that the machine is "real" by verifying its IP address on this website:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;http://ifconfig.co/?ip=142.93.169.195&lt;/code&gt; (use your IP, not this one)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#accessing-the-remote-server-via-cmd-terminal-using-password"&gt;
  &lt;/a&gt;
  Accessing the remote server via cmd terminal (using password)
&lt;/h3&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh root@142.93.169.195
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Where:&lt;br&gt;
&lt;code&gt;root&lt;/code&gt;: user&lt;br&gt;
&lt;code&gt;142.93.169.195&lt;/code&gt;: server IP&lt;/p&gt;

&lt;p&gt;You will be prompted for a message regarding &lt;strong&gt;ECDSA key fingerprint&lt;/strong&gt;. Type &lt;strong&gt;"yes"&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Once you say &lt;strong&gt;yes&lt;/strong&gt; to this, notice that in &lt;code&gt;$HOME/.ssh&lt;/code&gt; there will be a &lt;code&gt;known_hosts&lt;/code&gt; file. This file "remembers" the &lt;code&gt;servers&lt;/code&gt; that the current &lt;code&gt;client&lt;/code&gt; device has previously connected to. Every time you connect to a new &lt;code&gt;server&lt;/code&gt;, its fingerprint will be saved here (and you will be notified of that). This is a mechanism to verify that the &lt;code&gt;server&lt;/code&gt; you are connecting to is actually the one you think it is.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You will be prompted for the password (the one you set when the &lt;code&gt;server&lt;/code&gt; was created). Paste it here.&lt;/p&gt;

&lt;p&gt;And there it is. If your terminal changed to &lt;code&gt;root@ubuntu-one&lt;/code&gt;, you are connected to the remote server!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#updating-packages-on-the-new-server"&gt;
  &lt;/a&gt;
  Updating packages on the new server
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is optional&lt;/strong&gt;, but recommended, as you problably will install additional softwares to this &lt;code&gt;server&lt;/code&gt;. Run on the &lt;code&gt;server&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apt update
apt upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#about-the-ssh-key"&gt;
  &lt;/a&gt;
  About the SSH key
&lt;/h3&gt;

&lt;p&gt;SSH is the authentication method that we will use as an alternative to using passwords when accessing remote &lt;code&gt;servers&lt;/code&gt;. The SSH key is a 2-part key. Here's how they differ:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Public:&lt;/strong&gt; It is intented to be shared, and placed on the &lt;code&gt;server&lt;/code&gt; you will connect to.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Private:&lt;/strong&gt; It is not supposed to be shared or even seen by anyone else. If it gets to the wrong hands, someone might be able to use it on their &lt;code&gt;client&lt;/code&gt; computer and access the &lt;code&gt;servers&lt;/code&gt; the key is intended for! ‚ö†Ô∏è
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can have multiple SSH keys stored on your device. Once you have one, send the &lt;code&gt;public&lt;/code&gt; part to the &lt;code&gt;server&lt;/code&gt;. There, it will be stored in a dedicated place. To establish a connection, you will select a &lt;code&gt;private&lt;/code&gt; key and the &lt;code&gt;server&lt;/code&gt; will check for a match with their pre-existing &lt;code&gt;public&lt;/code&gt; keys.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9llNx6_R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6sqzj5rl0hozt4gpbapq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9llNx6_R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6sqzj5rl0hozt4gpbapq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-ssh-keys"&gt;
  &lt;/a&gt;
  Creating SSH keys
&lt;/h3&gt;

&lt;p&gt;To make it easier, download and run one of the following scripts. They use the &lt;code&gt;ed25519&lt;/code&gt; algorithm to create the keys, since it provides a more sophisticated encryption and generates a smaller key as well.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When creating a SSH key, you will be prompted for an optional &lt;code&gt;passphrase&lt;/code&gt; that will be requested when you try to use it. It is &lt;strong&gt;highly&lt;/strong&gt; recommended that you set a &lt;code&gt;passphrase&lt;/code&gt;, because if your &lt;code&gt;private&lt;/code&gt; key gets leaked and it has no &lt;code&gt;passphrase&lt;/code&gt;, someone else can actually it on their &lt;code&gt;client&lt;/code&gt; computer and very likely will be able to access the &lt;code&gt;servers&lt;/code&gt; that the key has access to. üò± &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;
  &lt;a href="#windows-powershell"&gt;
  &lt;/a&gt;
  Windows (PowerShell)
&lt;/h4&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#linux-bash"&gt;
  &lt;/a&gt;
  Linux (bash)
&lt;/h4&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Tipically, the SSH keys are stored under the &lt;code&gt;$HOME/.ssh&lt;/code&gt; directory (the &lt;code&gt;.&lt;/code&gt; means that &lt;code&gt;.ssh&lt;/code&gt; is a hidden folder), but you can have them elsewhere. I created a SSH key named &lt;code&gt;costa&lt;/code&gt;, so here I can expect to see the 2-part key in 2 files: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;costa&lt;/code&gt; (private, with no extension)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;costa.pub&lt;/code&gt; (public)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#accessing-the-public-key"&gt;
  &lt;/a&gt;
  Accessing the public key
&lt;/h3&gt;

&lt;p&gt;See its contents with:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat costa.pub 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Or using a text editor, and you wil get something like this: &lt;code&gt;ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIN7ioJG5Axxcksw47AujdY/Lke8ZJoWRPSDsV6pc/reK costa&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#sending-the-public-key-to-a-remote-server"&gt;
  &lt;/a&gt;
  Sending the public key to a remote server
&lt;/h3&gt;

&lt;p&gt;Log in to the &lt;code&gt;server&lt;/code&gt;, then &lt;code&gt;cd /root/.ssh&lt;/code&gt;. There you will find the &lt;code&gt;authorized_keys&lt;/code&gt; file, which is where the &lt;code&gt;public&lt;/code&gt; keys must be inserted into. Paste it manually by opening the file using a text editor:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nano authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Or directly using the &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; command: &lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;echo &amp;lt;your_public_key_content&amp;gt; &amp;gt;&amp;gt; authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;If you use this second option, make sure you use &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; (append) and not &lt;code&gt;&amp;gt;&lt;/code&gt; (overwrite) ‚ö†Ô∏è&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Think of the &lt;code&gt;authorized_keys&lt;/code&gt; as a vault that holds all the &lt;code&gt;public&lt;/code&gt; keys from all devices authorized to SSH connect into this &lt;code&gt;server&lt;/code&gt; using a SSH key.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#accessing-the-remote-server-via-cmd-terminal-using-ssh-key"&gt;
  &lt;/a&gt;
  Accessing the remote server via cmd terminal (using SSH key)
&lt;/h3&gt;

&lt;p&gt;Now that the &lt;code&gt;public&lt;/code&gt; is on the &lt;code&gt;server&lt;/code&gt;, let's access it by using the SSH key! &lt;br&gt;
First, if you are on the &lt;code&gt;server&lt;/code&gt;, exit from it using the &lt;code&gt;exit&lt;/code&gt; command.&lt;br&gt;
Back on the &lt;code&gt;client&lt;/code&gt;, access the &lt;code&gt;server&lt;/code&gt; with the following command. This time you will not be prompted for the password.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh -i &amp;lt;private_key&amp;gt; &amp;lt;user&amp;gt;@&amp;lt;ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that you don't actually need to provide the &lt;code&gt;private&lt;/code&gt; key path using &lt;code&gt;-i&lt;/code&gt;, as the keys stored under &lt;code&gt;/.ssh&lt;/code&gt; are picked automatically.  But as you begin to add more keys, chances are that at some point you will start to get errors for unmatching keys. To avoid this kind of problem, I suggest that you &lt;strong&gt;specify&lt;/strong&gt; the key.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#sending-files-from-the-raw-client-endraw-to-the-raw-server-endraw-"&gt;
  &lt;/a&gt;
  Sending files from the &lt;code&gt;client&lt;/code&gt; to the &lt;code&gt;server&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Back on the &lt;code&gt;client&lt;/code&gt;, let us say I have &lt;code&gt;hello.txt&lt;/code&gt; in the current directory, and I want to send it to the &lt;code&gt;server&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;scp hello.txt root@142.93.169.195:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Where:&lt;br&gt;
&lt;code&gt;:&lt;/code&gt;: the directory where &lt;code&gt;hello.txt&lt;/code&gt; will be saved on the &lt;code&gt;server&lt;/code&gt;. In this case, the main/root folder.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#sending-files-from-the-raw-server-endraw-to-the-raw-client-endraw-"&gt;
  &lt;/a&gt;
  Sending files from the &lt;code&gt;server&lt;/code&gt; to the &lt;code&gt;client&lt;/code&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a little counter-intuitive, because you need to be on the &lt;code&gt;client&lt;/code&gt; side. It is as if you are &lt;em&gt;fetching&lt;/em&gt; a file previously stored on the &lt;code&gt;server&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Being on &lt;code&gt;client&lt;/code&gt;, I would like to have &lt;code&gt;hello.txt&lt;/code&gt; (the one already saved on the &lt;code&gt;server&lt;/code&gt;) sent to the &lt;code&gt;client&lt;/code&gt;. First, delete &lt;code&gt;hello.txt&lt;/code&gt; on the &lt;code&gt;client&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rm hello.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Now fetch &lt;code&gt;hello.txt&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;scp root@142.93.169.195:hello.txt .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Where:&lt;br&gt;
&lt;code&gt;:&lt;/code&gt;: indicates the file path on the &lt;code&gt;server&lt;/code&gt;&lt;br&gt;
&lt;code&gt;.&lt;/code&gt; (at the end): the path I want the file to be saved on the &lt;code&gt;client&lt;/code&gt;. Notice the space before the &lt;code&gt;.&lt;/code&gt;. Now, make sure you can see &lt;code&gt;hello.txt&lt;/code&gt; on the &lt;code&gt;client&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-a-user-on-the-server"&gt;
  &lt;/a&gt;
  Creating a user on the server
&lt;/h3&gt;

&lt;p&gt;The following script will create a new user, grant it &lt;code&gt;sudo&lt;/code&gt; permissions and grab a copy of the &lt;code&gt;root&lt;/code&gt; user's &lt;code&gt;authorized_keys&lt;/code&gt; file. Keep in mind that each user has its own &lt;code&gt;authorized_keys&lt;/code&gt; file. ‚ö†Ô∏è&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;From the &lt;code&gt;client&lt;/code&gt;, send &lt;code&gt;create-user.sh&lt;/code&gt; to the main folder on the &lt;code&gt;server&lt;/code&gt;:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;scp create-user.sh root@142.93.169.195:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Back on the &lt;code&gt;server&lt;/code&gt;, you will see that &lt;code&gt;create-user.sh&lt;/code&gt; is there. Run it to create a new user:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;. create-user.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Notice that your terminal changed to &lt;code&gt;&amp;lt;new_user&amp;gt;@ubuntu-one&lt;/code&gt;. Now check the contents of the &lt;code&gt;authorized_keys&lt;/code&gt; of the &lt;code&gt;&amp;lt;new_user&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat /home/&amp;lt;new_user&amp;gt;/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;You will see here the same &lt;code&gt;public&lt;/code&gt; key that you added to the &lt;code&gt;root&lt;/code&gt; user. That means that now you can SSH connect to this &lt;code&gt;server&lt;/code&gt; as &lt;code&gt;&amp;lt;new_user&amp;gt;&lt;/code&gt;, instead of &lt;code&gt;root&lt;/code&gt;, by using the same &lt;code&gt;private&lt;/code&gt; key.  &lt;/p&gt;

&lt;p&gt;Now you can replace &lt;code&gt;root&lt;/code&gt; for &lt;code&gt;&amp;lt;new_user&amp;gt;&lt;/code&gt; when connecting to the &lt;code&gt;server&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disabling-password-access-on-the-server"&gt;
  &lt;/a&gt;
  Disabling password access on the server
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not required&lt;/strong&gt;, but notice that if you try to connect to the &lt;code&gt;server&lt;/code&gt; without a SSH key, you will still be prompted for the password. We will disable that so the &lt;code&gt;server&lt;/code&gt; will be protected against brute-force attacks using passwords. On the &lt;code&gt;server&lt;/code&gt;, run:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo nano /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Notice that in order to change this file, you need &lt;code&gt;sudo&lt;/code&gt; permissions, hence the &lt;code&gt;sudo&lt;/code&gt; command. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This file contains settings regarding SSH. In its contents, look for &lt;code&gt;PasswordAuthentication&lt;/code&gt;. It is problably set to &lt;code&gt;yes&lt;/code&gt;, so change it to &lt;code&gt;no&lt;/code&gt;. Also, make sure it is &lt;strong&gt;not&lt;/strong&gt; commented as well (&lt;code&gt;#&lt;/code&gt;). Save the changes and close this file.&lt;br&gt;
Now you need to restart the SSH service for the changes to take effect: ‚ö†Ô∏è&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl restart sshd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;From this moment on, you will no longer be prompted for the password when trying to SSH connect to the &lt;code&gt;server&lt;/code&gt;!üòé&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The settings in the &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; file apply to all the users, as the &lt;code&gt;/etc&lt;/code&gt; folder in Linux has a global scope.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#disabling-root-access-on-the-server"&gt;
  &lt;/a&gt;
  Disabling root access on the server
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not required&lt;/strong&gt; either, but keep in mind that there are many security concerns about remote connecting to a server as the &lt;code&gt;root&lt;/code&gt; user. This user is a &lt;em&gt;god mode&lt;/em&gt; on Linux machines, so a lot of damage can be done by this user on the &lt;code&gt;server&lt;/code&gt;! ‚ö†Ô∏è&lt;/p&gt;

&lt;p&gt;To disable &lt;code&gt;root&lt;/code&gt; access, go back to:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo nano /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Set &lt;code&gt;PermitRootLogin&lt;/code&gt; to &lt;code&gt;no&lt;/code&gt;. Now restart the SSH Daemon service again: &lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl restart sshd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Now go ahead and try to access the &lt;code&gt;server&lt;/code&gt; as the &lt;code&gt;root&lt;/code&gt; user. You are &lt;strong&gt;not&lt;/strong&gt; supposed to be able to log in.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#create-a-raw-config-endraw-file-very-handy"&gt;
  &lt;/a&gt;
  Create a &lt;code&gt;config&lt;/code&gt; file (very handy)
&lt;/h3&gt;

&lt;p&gt;This file makes it easier to SSH connect to remote &lt;code&gt;servers&lt;/code&gt; without needing to type their IP and user.&lt;/p&gt;

&lt;p&gt;Use the following template to create a file named &lt;code&gt;config&lt;/code&gt;, and place it in your &lt;code&gt;/.ssh&lt;/code&gt; folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Host &amp;lt;custom_name&amp;gt;
    Hostname &amp;lt;ip&amp;gt;
    Port 22
    User &amp;lt;user&amp;gt;
    IdentityFile &amp;lt;private_key&amp;gt;

Host &amp;lt;another_custom_name&amp;gt;
    Hostname &amp;lt;ip&amp;gt;
    Port 22
    User &amp;lt;user&amp;gt;
    IdentityFile &amp;lt;private_key&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;In case you are wondering about the &lt;code&gt;Port&lt;/code&gt;, 22 is the default &lt;code&gt;port&lt;/code&gt; for SSH connections. It can be changed on the &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; file on the &lt;code&gt;server&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once this file is set, the SSH connections can be made as such:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh &amp;lt;custom_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;In short, now you can replace the &lt;strong&gt;user + IP address + private key + port&lt;/strong&gt; for merely a custom &lt;code&gt;alias&lt;/code&gt;. Very convenient, right? üòé&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hosting-a-website-on-the-server"&gt;
  &lt;/a&gt;
  Hosting a website on the server
&lt;/h3&gt;

&lt;p&gt;We will use &lt;code&gt;apache&lt;/code&gt; as a &lt;code&gt;HTTP server&lt;/code&gt;. Install it on the &lt;code&gt;server&lt;/code&gt;:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt install apache2 -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Now, go to your &lt;code&gt;browser&lt;/code&gt; and visit the IP address of the &lt;code&gt;server&lt;/code&gt; and you will see a page similar to this one:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_6aAlaxc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwnnq25cuk3ibpg15114.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_6aAlaxc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwnnq25cuk3ibpg15114.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next step is finding this page on the &lt;code&gt;server&lt;/code&gt; and replace it with our custom website content. Back on the &lt;code&gt;server&lt;/code&gt;, go to this directory:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd /var/www/html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;You will find a &lt;code&gt;index.html&lt;/code&gt; file here. This is the file you are seeing on the page above.&lt;/p&gt;

&lt;p&gt;We will use my personal portfolio website. Back on the &lt;code&gt;client&lt;/code&gt;, download it &lt;a href="https://github.com/costa86/portfolio/archive/refs/heads/master.zip"&gt;here&lt;/a&gt; as a &lt;code&gt;.zip&lt;/code&gt; file, and send it to the &lt;code&gt;server&lt;/code&gt; (main folder):&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;scp portfolio-master.zip &amp;lt;custom_name&amp;gt;:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Back on the &lt;code&gt;server&lt;/code&gt; and , having the &lt;code&gt;portfolio-master.zip&lt;/code&gt; file there, move it to the &lt;code&gt;/var/www/html/&lt;/code&gt; folder:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo mv portfolio-master.zip /var/www/html/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Go there:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd /var/www/html/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Install &lt;code&gt;unzip&lt;/code&gt; to unzip this file:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt install unzip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Now you can unzip it:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;unzip portfolio-master.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The files are in a &lt;code&gt;/portfolio-master&lt;/code&gt; folder. We do not need the folder, only its contents. So we will move them into the current folder (&lt;code&gt;/var/www/html/&lt;/code&gt;) &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo mv portfolio-master/* .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Where:&lt;br&gt;
&lt;code&gt;*&lt;/code&gt;: all the files in this folder&lt;br&gt;
&lt;code&gt;.&lt;/code&gt;: the current directory&lt;/p&gt;

&lt;p&gt;Now you are expected to see a bunch of files in &lt;code&gt;/var/www/html/&lt;/code&gt;, including a new &lt;code&gt;index.html&lt;/code&gt; file. Visit the IP address again on the &lt;code&gt;browser&lt;/code&gt; and you will see my portfolio page!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5TXh5jce--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tef21x0yccfz4u50u2cn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5TXh5jce--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tef21x0yccfz4u50u2cn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can safely delete the &lt;code&gt;/portfolio-master&lt;/code&gt; folder and&lt;code&gt;portfolio-master.zip&lt;/code&gt; file, as we do not need them anymore:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo rm -r portfolio-master/
sudo rm portfolio-master.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;That's it, people.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-the-time-reading-this"&gt;
  &lt;/a&gt;
  Thanks for the time reading this!
&lt;/h3&gt;

&lt;p&gt;Follow me:&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/costa86/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://dev.to/costa86"&gt;Dev.to&lt;/a&gt; | &lt;a href="https://www.buymeacoffee.com/costa86"&gt;Buy me a coffee&lt;/a&gt; | &lt;a href="https://github.com/costa86"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ssh</category>
      <category>key</category>
      <category>security</category>
      <category>devops</category>
    </item>
    <item>
      <title>Get Faster Creating React Project with Vite</title>
      <author>Moch Farras Fauzan</author>
      <pubDate>Sat, 17 Jul 2021 17:46:52 +0000</pubDate>
      <link>https://dev.to/frrsfuzn/get-faster-creating-react-project-with-vite-4gmf</link>
      <guid>https://dev.to/frrsfuzn/get-faster-creating-react-project-with-vite-4gmf</guid>
      <description>&lt;p&gt;I am new in react and also still learning how to use react. I'm using create-react-app to make react project. The first thing that I notice whenever I created react project with create-react-app are;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The time it took to make a single project .&lt;/li&gt;
&lt;li&gt;The time it took to start the project.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But all that changed when I got to know ViteJs&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-vitejs"&gt;
  &lt;/a&gt;
  What is ViteJs?
&lt;/h3&gt;

&lt;p&gt;According to vite website, Vite is a French word that means "Fast". So, vite is a build tool that aims to provide a faster and leaner development experience for modern web projects. ViteJs is made by the creator of VueJS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-using-vite"&gt;
  &lt;/a&gt;
  Why using Vite?
&lt;/h3&gt;

&lt;p&gt;When starting the project server, a bundler-based build setup has seek to your application and build entire application before it can be served.&lt;/p&gt;

&lt;p&gt;Vite improves the time that dev server took by dividing the modules in an application into two categories:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Dependencies, Vite pre-bundles dependencies using esbuild. Esbuild is written in Go and pre-bundles dependencies 10-100x faster than JavaScript-based bundlers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Source code often contains non-javascript like JSX, CSS, or React components that used to be edited very often. Vite only needs to transform and serve source code on demand, as the browser requests it. Code behind conditional dynamic imports is only processed if actually used on the current screen.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#performance-between-vite-vs-createreactapp"&gt;
  &lt;/a&gt;
  Performance between Vite vs create-react-app
&lt;/h3&gt;

&lt;p&gt;To do this testing, I measure the time that both of them took to create and launch react project. And here is the difference between both of them.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kLECixvM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l02ylqet3g3t5atqz05b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kLECixvM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l02ylqet3g3t5atqz05b.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
As you can see the result has significant difference. Either create project or launch project, Vite has a better performance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-create-react-with-vite"&gt;
  &lt;/a&gt;
  How to create react with Vite
&lt;/h3&gt;

&lt;p&gt;To make react project with Vite is very simple. All you need to do is follow this instruction.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;npm init vite@latest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enter project name and select framework (in this case I use React)
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xfTBZm-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/24ah47tekp8r3uxxb8yw.png" alt="image"&gt;
&lt;/li&gt;
&lt;li&gt;Then select react variant (I choose react)
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OBZcfBDY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jp1gvj3zha9yrw4qnsz.png" alt="image"&gt;
&lt;/li&gt;
&lt;li&gt;Go to your project app and enter &lt;code&gt;npm install&lt;/code&gt; command. Your project will be ready within a minute.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So that's it what I could share. I'm truly sorry if my English is not good because it isn't my mother tongue. But I keep learning English to make it better. Writing blog also my learning method to improve my English. So if you have any feedback related to the content or to my English, feel free to share!&lt;/p&gt;

&lt;p&gt;References&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=LQQ3CR2JTX8&amp;amp;ab_channel=codeSTACKr"&gt;Vite 2.0 Crash Course by codeSTACKr&lt;/a&gt;&lt;br&gt;
&lt;a href="https://medium.com/swlh/vitejs-and-react-eb3f1afc6e6"&gt;Vitejs and React by Roberto Butti&lt;/a&gt;&lt;br&gt;
&lt;a href="https://vitejs.dev/guide/#index-html-and-project-root"&gt;Getting Started by Vite&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vite</category>
      <category>react</category>
      <category>createreactapp</category>
    </item>
    <item>
      <title>manage the large code</title>
      <author>Palash Gupta</author>
      <pubDate>Sat, 17 Jul 2021 17:45:47 +0000</pubDate>
      <link>https://dev.to/palashgdev/manage-the-large-code-4705</link>
      <guid>https://dev.to/palashgdev/manage-the-large-code-4705</guid>
      <description>&lt;p&gt;When we are working on project there are some code which kept on re-using.&lt;/p&gt;

&lt;p&gt;So we make a function out of it. let's say we want to convert a number into the currency&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numberWithCurrencyAndComma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLocaleString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en-IN&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INR&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;currencyDisplay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;symbol&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;minimumFractionDigits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;currency&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and generally, with this, we try to keep this function in the lib/utils so we can import and use this function whenever we want&lt;/p&gt;

&lt;p&gt;that's how the beauty of the pure function üòç&lt;/p&gt;

&lt;p&gt;but let's say there is a another project and we want to get the same result then sharing the code would be the better approach as a module which &lt;a href="https://rushjs.io/"&gt;rushjs&lt;/a&gt; helps managing the code better&lt;/p&gt;

&lt;p&gt;so let's try our hands dirty&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; @microsoft/rushjs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir rush
cd rush
rush init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will configure the basic intial setup for our monorepo config&lt;/p&gt;

&lt;p&gt;i am using &lt;a href="https://pnpm.io/"&gt;pnpm&lt;/a&gt; (verify with this with rush.json) so start setting up different projects&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir apps
yarn create react-app my-app --template typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and add this project to rush by adding to the rush.json under projects&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"packageName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"my-app"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"projectFolder"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"apps/my-app"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then under the project root run this commands&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rush update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this will link all the projects to the rush and install all the dependencies&lt;/p&gt;

&lt;p&gt;now let's make the sharable code to this project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir utils
cd utils
npx tsdx create lib
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this will prompt you to choose &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;basic&lt;/li&gt;
&lt;li&gt;react&lt;/li&gt;
&lt;li&gt;react-with-storybook&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;let's choose basic this will configure the basic boilerplate.&lt;/p&gt;

&lt;p&gt;and add this project to the &lt;code&gt;rush.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"packageName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"@utils/lib"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"projectFolder"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"utils/lib"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now try to run this command one more time&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rush update --purge
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Note: if there is an permission issue try to run this command with sudo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now it's the time link the package to our own react app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rush add -p @utils/lib
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now you can import the function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;numberWithCurrencyAndComma&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@utils/lib&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This how we manage project with single one manager &lt;br&gt;
let me know down in the comments about your thoughts üòÑ&lt;/p&gt;

&lt;p&gt;Here is link for the sample repo &lt;code&gt;https://github.com/palashgdev/rushjs&lt;/code&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>node</category>
      <category>git</category>
    </item>
    <item>
      <title>Best Software Download Websites For PC</title>
      <author>Brand Soft Tech</author>
      <pubDate>Sat, 17 Jul 2021 17:26:45 +0000</pubDate>
      <link>https://dev.to/brandsofttech/best-software-download-websites-for-pc-5666</link>
      <guid>https://dev.to/brandsofttech/best-software-download-websites-for-pc-5666</guid>
      <description>&lt;p&gt;Mac users Looking to download their favorite free software applications often have a difficult time locating the best software download websites on the web. With millions of websites offering free downloads for everything from video games and music to special computer software, it can be quite difficult to decide which are the best downloads &lt;a href="https://notresponding.us/textra-desktop/"&gt;this website&lt;/a&gt;. In fact, you may find that your preference of free software is limited to a few specific types of downloads, or you may not even be interested in downloading any software at all.&lt;/p&gt;

&lt;p&gt;If you're a beginner with computers, the best software download websites will offer plenty of instructions and tips for new users. These tutorials are very helpful because they provide a step-by-step guide on how to download free softwares with specific end-user requirements. &lt;/p&gt;

&lt;p&gt;For example, some sites may only offer free versions of Office for Mac, while others provide several different versions of the popular word processing application. Some sites may even provide demonstrations on how to perform a specific task using a particular program. The tutorials also give valuable information on how to choose a compatible operating system.&lt;/p&gt;

&lt;p&gt;As an advanced user, however, you have more control over what software you want to download. For example, if you don't know much about computers at all, you'll want to opt for one of the best software download websites that only features tutorials and offers basic technical support. &lt;/p&gt;

&lt;p&gt;Some sites offer tutorials on installing and running different computer programs, but they don't provide detailed information on how to install softwares &lt;a href="https://pcsoftguru.blogspot.com/"&gt;&lt;/a&gt;&lt;a href="https://pcsoftguru.blogspot.com/"&gt;https://pcsoftguru.blogspot.com/&lt;/a&gt;. On the other hand, some sites have detailed step-by-step instructional manuals on how to use a particular piece of software. But apart from this basic feature, many sites offer free software for downloading Mac programs.&lt;/p&gt;

&lt;p&gt;When you need a specific software program but can't seem to find it among the offerings by the available free downloads, you can visit site offering paid downloads. It pays to be careful about these offers though, since most of them demand that you register or join their membership before you are allowed to download. &lt;/p&gt;

&lt;p&gt;Aside from giving you access to their database of software programs, these websites also offer added benefits. For instance, some offer free updates of their database of downloads. There are also some which allow members to post links and CDs that contain demo copies of their favorite softwares.&lt;/p&gt;

&lt;p&gt;If your computer is not yet updated to the latest version of windows 10, you may still want to download software from these websites. Although it takes longer to receive updates than the regular program updates via the internet, the downloading time would still be faster than what you experience while using the regular method. &lt;/p&gt;

&lt;p&gt;Windows Software Downloads&lt;/p&gt;

&lt;p&gt;Windows software downloads are a great way of getting hold of some of the best software programs for your Mac, and no matter what operating system you are using, you can download these files. Whether you want to download games, music, videos, or applications, you can visit any of these websites and start enjoying them within seconds.&lt;/p&gt;

&lt;p&gt;However, even if you have already obtained your software, there are chances that it won't work on your mac or android device . It is quite possible that the latest software will require an updated version in order to function properly on your mac or your android mobile. To make sure that your downloads work perfectly on all of your devices, you should join one of the many download crew websites that are available on the internet.&lt;/p&gt;

&lt;p&gt;Download Free MAC Software for Windows&lt;/p&gt;

&lt;p&gt;You can find the best websites that offer download free windows software by doing a simple search on your favourite search engine. Simply type in the search term "download free MAC OS X software for windows" and you will be able to see a long list of links. Among these, the two that stand out the most are the iTunes Store and the android apps gallery. These two websites have the largest number of MAC apps available for download free of charge. Not only that, they also offer a large collection of popular android apps.&lt;/p&gt;

&lt;p&gt;Another thing that you should do if you are looking to download free software is to register. Some softwares simply don't allow users to register without purchasing the product first. The more popular software download websites have different ways of assessing your registration. &lt;/p&gt;

&lt;p&gt;Final Words&lt;/p&gt;

&lt;p&gt;Some may ask you for a one-time fee, while others offer a membership option that allows users to become members for a longer period of time. If you are planning to use the software on a regular basis, it would be best if you get the long-term membership plan. This will allow you to update your downloads whenever there is a new version available in the market.&lt;/p&gt;

</description>
      <category>softwaredownloadwebsites</category>
      <category>softwaredownload</category>
    </item>
    <item>
      <title>How dev.to (occasionally) rubs me up the wrong way</title>
      <author>Pavel Morava</author>
      <pubDate>Sat, 17 Jul 2021 17:22:46 +0000</pubDate>
      <link>https://dev.to/hanpari/how-dev-to-occasionally-rubs-me-up-the-wrong-way-97c</link>
      <guid>https://dev.to/hanpari/how-dev-to-occasionally-rubs-me-up-the-wrong-way-97c</guid>
      <description>&lt;h2&gt;
  &lt;a href="#imposters-syndrome"&gt;
  &lt;/a&gt;
  Imposter's syndrome
&lt;/h2&gt;

&lt;p&gt;Recently, I've read several articles dealing with imposter syndrome. Full of optimism and reassurance, the papers try hard to soothe the irritated consciousness of poor souls that deemed themselves unworthy.&lt;/p&gt;

&lt;p&gt;People often need a gentle maternal caress, encouraging them to continue on the mournful journey through challenges and obstacles. Still, these motivational speeches often result in boosted egos of certain authors who do not hesitate to bring authoritative advice despite the minor issue of knowing nothing substantial.&lt;/p&gt;

&lt;p&gt;For instance, one of them has posted a mind-blowing list of how to learn Python in one week. If I were a beginner, I would greatly appreciate it since one week of my life is a reasonable price to pay. Unfortunately, after dabbling with Python for seven years, eight months, and 14 days (yes, I know the time span exactly because I can deduce it from my checkio account), I was rather enraged that nobody had informed me that Python was that easy.&lt;/p&gt;

&lt;p&gt;Trust me; I would rather have this author suffering from the imposter syndrome rather than sharing such wisdom here (or anywhere else). It feels like a blatant scam to me; I saw real-life newbies struggle with programming. One week is often not enough to run their first hello world, much less conquer the vast land of Python fundamentals.&lt;/p&gt;

&lt;p&gt;One girl whom I guided online failed even in downloading and installing Python under Windows. Which, by the way, brings me to another bullet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#programming-language-recommendation-for-beginners"&gt;
  &lt;/a&gt;
  Programming language recommendation for beginners
&lt;/h2&gt;

&lt;p&gt;Several times, I've encountered programmers, infatuated with their language of choice (sometimes, I even suspect them that the language of their choice is the only programming language they know) who do not shy away from recommending languages like C, C++, C#, Java, or JavaScript to beginners.&lt;/p&gt;

&lt;p&gt;There are several excellent reasons why not to do that. As I said before, many beginners do not manage basic things (considered commonplace by a slightly advanced IT student), so pushing them into gory details of hardware (C, C++), industry OOP (Java, C#), or sloppily designed (JavaScript) languages borders with a criminal offense.&lt;/p&gt;

&lt;p&gt;Even the arguments provided by their proponents feel otherworldly. Learn C or C++ because they are lightning-fast. I beg your pardon? Similarly, why not teach driving F1 racing cars to teenagers attempting to get their driving licenses? It would make sense because F1 racing cars trump the ordinary, slow, and safe hatchbacks, don't they?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vs-code-extensions-and-themes"&gt;
  &lt;/a&gt;
  VS Code extensions and themes
&lt;/h2&gt;

&lt;p&gt;The final bullet deals with the irritating, but a considerably less dangerous avalanche of articles, tirelessly repeating the same stuff over and over again.&lt;/p&gt;

&lt;p&gt;I would not mind, but the majority of these extensions, praised by their authors, are the first ones that appear as soon as one opens the extension sidebar in VS Code. Am I really the only one who bothers to check this very sidebar every now and then?&lt;/p&gt;

&lt;p&gt;But not only that, their authors, instead of naming these articles timidly like THE WELL KNOWN EXTENSIONS I USE AND YOU ALL PROBABLY KNOW, advertise them like THE EXTENSIONS YOU HAVE NEVER HEARD OF. Preposterous!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-by-writing"&gt;
  &lt;/a&gt;
  Learning by writing
&lt;/h2&gt;

&lt;p&gt;Ending my rant here, I would like to remind all online writers that there is nothing wrong with enforcing their knowledge and skills by writing articles.&lt;/p&gt;

&lt;p&gt;Even tens of thousands of write-ups are bearable, even if they bring nothing new to the table. I would suggest reconsidering the way of how to present them to the online audience.&lt;/p&gt;

&lt;p&gt;The title I SOMEHOW MANAGED TO IMPLEMENT THE SUPER SORT AND I LOVE TO HAVE FEEDBACK is more honest and less misleading than HOW TO WRITE THE SUPER SORT, especially if the super sort threatens to blow up at the first run.&lt;/p&gt;

&lt;p&gt;I may be spoiled by the time spent on checkio.org, where the most common thing was browsing and commenting on other people's code (I have not been an active member for several years), but what else are we supposed to do on the platform, mainly visited by developers?&lt;/p&gt;

&lt;p&gt;What do you think?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>rant</category>
    </item>
    <item>
      <title>What are Cookies?</title>
      <author>Aman Chourasia</author>
      <pubDate>Sat, 17 Jul 2021 16:44:23 +0000</pubDate>
      <link>https://dev.to/amanchourasia/what-are-cookies-4064</link>
      <guid>https://dev.to/amanchourasia/what-are-cookies-4064</guid>
      <description>&lt;p&gt;'&lt;strong&gt;What are Cookies?&lt;/strong&gt;'- this question has become ubiquitous ever since GDPR came into effect.&lt;/p&gt;

&lt;p&gt;Cookies have been of great importance in the tech industry since the advent of the digital world. However, now the scenario is changing and the reliance upon cookie-based information is about to fade, as Google‚Äôs decision to phase-out cookies will take effect in less than a year.&lt;/p&gt;

&lt;p&gt;But, before publishers start to look for other solutions, it is equally important for them to understand how cookies have been functioning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-cookies"&gt;
  &lt;/a&gt;
  What are Cookies?
&lt;/h2&gt;

&lt;p&gt;Cookies are small text files sent from the website to the person‚Äôs terminal (usually the browser), where they are stored before being transmitted again on the same website visited by the same user. &lt;/p&gt;

&lt;p&gt;A cookie cannot retrieve any other data from the user‚Äôs hard drive nor pass on computer viruses or capture email addresses. Each single cookie is unique to the user's web browser. &lt;/p&gt;

&lt;p&gt;Some of the cookies‚Äô functions can be transferred to other technologies. In this document the term 'cookie' refers to both cookies, as such, as well as all similar technologies.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://www.amanchourasia.in/2021/07/what-are-cookies.html"&gt;What are Cookies? Different Types of Web Cookies&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Read More:&lt;/em&gt; &lt;a href="https://www.amanchourasia.in/2021/07/what-are-cookies.html"&gt;https://www.amanchourasia.in/2021/07/what-are-cookies.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>php</category>
      <category>computerscience</category>
      <category>learning</category>
    </item>
    <item>
      <title>5 ultimate resources for git #1</title>
      <author>CodeOzz</author>
      <pubDate>Sat, 17 Jul 2021 16:27:42 +0000</pubDate>
      <link>https://dev.to/codeozz/5-ultimate-resources-for-git-1-20al</link>
      <guid>https://dev.to/codeozz/5-ultimate-resources-for-git-1-20al</guid>
      <description>&lt;p&gt;Welcome my friend !&lt;/p&gt;

&lt;p&gt;I will share with you some important resource that will improve your skill in git or teach you about git.&lt;/p&gt;

&lt;p&gt;If you don't know git, it's very important for every developer to control it. At least know the basic !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-git"&gt;
  &lt;/a&gt;
  Basic git üìö
&lt;/h3&gt;

&lt;p&gt;Check the basic command of git with this üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rogerdudler.github.io/git-guide/"&gt;https://rogerdudler.github.io/git-guide/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to learn git very fast with animation, I recommend you this üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://learngitbranching.js.org/"&gt;https://learngitbranching.js.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To be honest this is thanks to this that I learn git, if you need only one resource, take this ! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#commands-cheatlist-%F0%9F%95%B9"&gt;
  &lt;/a&gt;
  Commands cheatlist üïπ
&lt;/h3&gt;

&lt;p&gt;When you have the basic, you will need to learn a lot of command, be happy with this clean list of common &amp;amp; important git commands !&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/arslanbilal/git-cheat-sheet"&gt;https://github.com/arslanbilal/git-cheat-sheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Available in a lot of language !&lt;/p&gt;

&lt;p&gt;For people that use &lt;code&gt;oh-my-zsh&lt;/code&gt;, you can easily use &lt;code&gt;git command alias&lt;/code&gt; that can be very useful &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Cheatsheet"&gt;https://github.com/ohmyzsh/ohmyzsh/wiki/Cheatsheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For exemple you can use &lt;code&gt;gcmsg&lt;/code&gt; instead of &lt;code&gt;git commit -m&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-good-and-correct-git-commit-message"&gt;
  &lt;/a&gt;
  Make good and correct git commit message üé®
&lt;/h3&gt;

&lt;p&gt;It's important to make correct git commit message, if you work in other dev, you should have some &lt;strong&gt;convention name&lt;/strong&gt;, if it's not the case, i &lt;em&gt;recommend&lt;/em&gt; you to read the article bellow and use convention name ASAP !&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/i5han3/git-commit-message-convention-that-you-can-follow-1709"&gt;https://dev.to/i5han3/git-commit-message-convention-that-you-can-follow-1709&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


</description>
      <category>git</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>Discovering JavaScript: The JavaScript Engine &amp; Runtime</title>
      <author>Pawan Bhatt üë®‚Äçüíª</author>
      <pubDate>Sat, 17 Jul 2021 16:25:33 +0000</pubDate>
      <link>https://dev.to/bhattpawan/discovering-javascript-the-javascript-engine-runtime-5hia</link>
      <guid>https://dev.to/bhattpawan/discovering-javascript-the-javascript-engine-runtime-5hia</guid>
      <description>&lt;p&gt;Hey fellow developers, so as I started learning JavaScript, I came across some really important topics that every JavaScript developer must know. So in the "Discovering JavaScript" series, I will be covering these &lt;strong&gt;important&lt;/strong&gt; topics. So without any further delay, let's jump right in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-javascript-engine"&gt;
  &lt;/a&gt;
  What is a JavaScript Engine?
&lt;/h2&gt;

&lt;p&gt;JavaScript Engine is nothing but a program that executes JavaScript code. Every browser has its own JavaScript engine. Some of the well known JavaScript engines are V8, SpiderMonkey, Chakra etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#components-of-a-javascript-engine"&gt;
  &lt;/a&gt;
  Components of a JavaScript Engine
&lt;/h2&gt;

&lt;p&gt;Every JavaScript Engine has two components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;The Call Stack&lt;/strong&gt;: It is the portion of JavaScript Engine where our code is actually executed.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The Heap&lt;/strong&gt;: The heap section of JavaScript Engine is a memory pool that stores all the objects which out application needs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below is a diagram to depict the same:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--drJvIFd9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rz2bbtnfcnde5walng6j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--drJvIFd9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rz2bbtnfcnde5walng6j.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-is-the-code-compiled-to-machine-code"&gt;
  &lt;/a&gt;
  How is the code compiled to Machine Code?
&lt;/h2&gt;

&lt;p&gt;JavaScript uses &lt;em&gt;Just-in-time-compilation&lt;/em&gt; technique to execute the code which mainly consists of &lt;em&gt;converting all of the code into machine code at once and then executing the code immediately&lt;/em&gt;. &lt;br&gt;
So, it is a hybrid between compilation and interpretation (both the concepts are explained in detail later). For now, just note that in compilation, all the code is converted into machine code at once and is then executed later when needed. However, in interpretation the interpreter converts and executes each line of code simultaneously. Below diagram illustrates the &lt;em&gt;just-in-time&lt;/em&gt; execution procedure:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eIT_Pf3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ov93mydg8dchj07b4unn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eIT_Pf3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ov93mydg8dchj07b4unn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-involved-in-justintimecompilation-of-javascript"&gt;
  &lt;/a&gt;
  Steps involved in 'Just-In-Time-Compilation' of JavaScript
&lt;/h2&gt;

&lt;p&gt;Following are the steps involved in JavaScript's JIT compilation when any piece of JS code executes in JavaScript Engine:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Parsing&lt;/strong&gt;: Parsing means &lt;em&gt;reading the code&lt;/em&gt;. During this process, the code is parsed and converted to a &lt;em&gt;AST(Abstract Syntax Tree)&lt;/em&gt;. This is done by splitting the code into small meaningful pieces and then saving them all in the form of a tree. This is the step where syntactical errors are checked. This AST is later used to generate the machine code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Compilation&lt;/strong&gt;: In this step, the generated AST is compiled to a machine code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Execution&lt;/strong&gt;: The generated machine code is executed immediately.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Below figure depicts the process:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K9JF7Z3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ysb9tpl4rptxmec9nyp9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K9JF7Z3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ysb9tpl4rptxmec9nyp9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-what-is-the-difference-between-compilation-and-interpretation"&gt;
  &lt;/a&gt;
  Bonus: What is the difference between Compilation and Interpretation?
&lt;/h2&gt;

&lt;p&gt;Both Compilation and Interpretation convert our source code to machine code, however the way in which they do it differs. So here goes the detailed explanation for the same.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#compilation"&gt;
  &lt;/a&gt;
  Compilation:
&lt;/h3&gt;

&lt;p&gt;In compilation, the entire source code is converted into machine code at once, and is written into a file that can be executed by the computer. After the file is created, there is no need of the source code to run the code, the file created after compilation is used for running the code. In case of compilation, the code execution can take place way after the code has been compiled. For instance, when we run any application on our system, the file we run is actually an executable file that is made after compiling the source code required to perform the operation which our application is performing. Also, you don't even know when the file (say the .exe file) was actually compiled. It may have been compiled an year ago but still can be executed after such a long time. The below diagram explains compilation process:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j6s6mDJE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp7u558jptnbnemlczpp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j6s6mDJE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp7u558jptnbnemlczpp.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#interpretation"&gt;
  &lt;/a&gt;
  Interpretation:
&lt;/h3&gt;

&lt;p&gt;An Interpreter, works differently as compared to a compiler. Instead of compiling all the code at once, it executes the source code line by line. So that means, we do not have any concept of &lt;em&gt;intermediate file creation&lt;/em&gt; here. Simply put forward, it just takes the source code &lt;em&gt;one-line-at-a-time&lt;/em&gt;, and executes the code i.e., performs the function that the code is suppose to perform. So in interpretation, we will require the source code every time we need to run our code. Following is the diagram of how a interpretation works:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a-BF28Lt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlsl93hx9xahht7dpiqr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a-BF28Lt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlsl93hx9xahht7dpiqr.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So that's pretty much it about the JavaScript Engine &amp;amp; Runtime. We will cover more such interesting topics in upcoming blogs.&lt;/p&gt;

&lt;p&gt;Stay Safe &amp;amp; Happy Learning üôå.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
