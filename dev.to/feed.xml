<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>React JS create App. Part 2 of 10: Icon button</title>
      <author>101samovar</author>
      <pubDate>Wed, 29 Dec 2021 10:24:59 +0000</pubDate>
      <link>https://dev.to/101samovar/react-js-create-app-part-2-of-10-icon-button-3p7p</link>
      <guid>https://dev.to/101samovar/react-js-create-app-part-2-of-10-icon-button-3p7p</guid>
      <description>&lt;p&gt;In the previous video we created the layout of the Mind Map App.&lt;br&gt;
The layout is good.&lt;br&gt;
But it will be better with icons and icon buttons.&lt;/p&gt;

&lt;p&gt;Source code:&lt;br&gt;
&lt;a href="https://github.com/101samovar/react-mindmap.git"&gt;https://github.com/101samovar/react-mindmap.git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our channel:&lt;br&gt;
&lt;a href="https://youtu.be/i2sOS85Y_JM"&gt;https://youtu.be/i2sOS85Y_JM&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Deploy ASP.NET Web Applications For Free !</title>
      <author>Aimen Zairi</author>
      <pubDate>Wed, 29 Dec 2021 10:18:02 +0000</pubDate>
      <link>https://dev.to/zairiaimendev/deploy-aspnet-web-applications-for-free--5bda</link>
      <guid>https://dev.to/zairiaimendev/deploy-aspnet-web-applications-for-free--5bda</guid>
      <description>&lt;p&gt;Hello everyone, I Hope you are all doing well.&lt;br&gt;
there are a lot of ways to host and deploy you .net web apps but not all of them are free or are as easy to use as the tool i will be discussing today.&lt;br&gt;
SmarterASP offers 2 months for free for you to test out your app or even if you want to go into production.&lt;br&gt;
If you are interested I've made the following video to show the process.&lt;br&gt;
In this video i also show a lot of extra configurations for stuff like image uploading and database setup that you might not find straight forward.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hope you find it useful, don't forget to support me by subscribing :) (Hope we hit 100 Subs soon)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.SmarterASP.NET/index?r=ZairiAimen"&gt;Smarter ASP Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/JM5joh1n75U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#extra-notes"&gt;
  &lt;/a&gt;
  Extra Notes
&lt;/h2&gt;

&lt;p&gt;will add notes everytime i find something important&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#net-roles-"&gt;
  &lt;/a&gt;
  .NET Roles :
&lt;/h3&gt;

&lt;p&gt;the easiest solution i found was to copy the SQL creation code from your local database if you already have roles and role accounts and execute the query in SmarterASP.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>programming</category>
      <category>beginners</category>
      <category>dotnet</category>
    </item>
    <item>
      <title>Kotlin short recipes: Generating a chessboard for a console game</title>
      <author>Vic Sh√≥stak</author>
      <pubDate>Wed, 29 Dec 2021 09:35:54 +0000</pubDate>
      <link>https://dev.to/koddr/kotlin-short-recipes-generating-a-chessboard-for-a-console-game-3a98</link>
      <guid>https://dev.to/koddr/kotlin-short-recipes-generating-a-chessboard-for-a-console-game-3a98</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hello, DEV friends! üëã&lt;/p&gt;

&lt;p&gt;This series of a really short (&lt;em&gt;but useful&lt;/em&gt;) articles will aim at a general demonstration of how the &lt;a href="https://kotlinlang.org/docs/getting-started.html"&gt;Kotlin&lt;/a&gt; language can elegantly solve many of the (&lt;em&gt;non-&lt;/em&gt;)trivial problems.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üî• Disclaimer: The purpose of this article is to show the essence of the solution, not to dive into the subject in detail. For a deeper dive, links to the Kotlin documentation pages will be left.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yes, let's do it! üëá&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  üìù Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-result-of-our-efforts"&gt;The result of our efforts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#project-structure"&gt;Project structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-the-ui-package"&gt;Create the UI package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-the-entry-point"&gt;Create the entry point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#learn-kotlin"&gt;Learn Kotlin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-result-of-our-efforts"&gt;
  &lt;/a&gt;
  The result of our efforts
&lt;/h2&gt;

&lt;p&gt;Let's go backwards. This will help you better understand what we will be trying to get out of this. &lt;/p&gt;

&lt;p&gt;I chose a game of chess to show you how to work with repetitive elements and draw a console UI for your projects (or even games). This is what the result of our program will look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;Let's play Chess!
+---+---+---+---+---+---+---+---+
|   |   |   |   |   |   |   |   | 8
+---+---+---+---+---+---+---+---+
|   |   |   |   |   |   |   |   | 7
+---+---+---+---+---+---+---+---+
|   |   |   |   |   |   |   |   | 6
+---+---+---+---+---+---+---+---+
|   |   |   |   |   |   |   |   | 5
+---+---+---+---+---+---+---+---+
|   |   |   |   |   |   |   |   | 4
+---+---+---+---+---+---+---+---+
|   |   |   |   |   |   |   |   | 3
+---+---+---+---+---+---+---+---+
|   |   |   |   |   |   |   |   | 2
+---+---+---+---+---+---+---+---+
|   |   |   |   |   |   |   |   | 1
+---+---+---+---+---+---+---+---+
  a   b   c   d   e   f   g   h
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you may notice, the numbers are on the right, not on the left, as many people have used to. This is because it is much easier to position elements in a line-by-line printout. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚òùÔ∏è If you don't like it that much, you can always change just one line of code (&lt;em&gt;which I'll show below&lt;/em&gt;). That will be your homework! That's it, yeah.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="#toc"&gt;‚Üë Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-structure"&gt;
  &lt;/a&gt;
  Project structure
&lt;/h2&gt;

&lt;p&gt;The structure of the project (game) will be as Kotlin &lt;a href="https://kotlinlang.org/docs/idioms.html"&gt;idiomatic&lt;/a&gt; as possible. &lt;/p&gt;

&lt;p&gt;As always, the entry point will be in &lt;code&gt;Main.kt&lt;/code&gt;. All UI elements and the drawing class itself in the &lt;code&gt;ui&lt;/code&gt; package:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qE9yl3sX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aibm4u2ng3bz484z8sfy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qE9yl3sX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aibm4u2ng3bz484z8sfy.png" alt="project structure" width="664" height="277"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;‚Üë Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-the-ui-package"&gt;
  &lt;/a&gt;
  Create the UI package
&lt;/h2&gt;

&lt;p&gt;To improve reusability, let's immediately put some UI elements into the Kotlin's built-in &lt;a href="https://kotlinlang.org/docs/enum-classes.html"&gt;enum class&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ./src/main/kotlin/ui/Element.kt&lt;/span&gt;

&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;ui&lt;/span&gt;

&lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;view&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;EMPTY_CELL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nc"&gt;DIVIDER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+---+---+---+---+---+---+---+---+"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nc"&gt;ALPHABETICAL_INDEXES&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"a   b   c   d   e   f   g   h"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Okay, move on to the rendering engine itself. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üòâ By the way, I'll use a wonderful Kotlin &lt;a href="https://kotlinlang.org/docs/data-classes.html"&gt;data classes&lt;/a&gt; for it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, let's create an array-structure with the given number of rows and cells and display the entire assembled UI via &lt;code&gt;println()&lt;/code&gt; in our &lt;code&gt;draw()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Sounds like a plan, let's do it! üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ./src/main/kotlin/ui/Board.kt&lt;/span&gt;

&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;ui&lt;/span&gt;

&lt;span class="kd"&gt;data class&lt;/span&gt; &lt;span class="nc"&gt;Board&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Array for building the board:&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;board&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nc"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nc"&gt;Element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;EMPTY_CELL&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Function for forming and drawing the board with&lt;/span&gt;
    &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// 1Ô∏è‚É£&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;boardAsString&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;board&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;mapIndexed&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;cells&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;joinToString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" | "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="s"&gt;"| $cells | ${index + 1}\n${Element.DIVIDER}"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// print game's title&lt;/span&gt;
        &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;DIVIDER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// print starting divider&lt;/span&gt;

        &lt;span class="c1"&gt;// 2Ô∏è‚É£&lt;/span&gt;
        &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;boardAsString&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;reversed&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;joinToString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\n"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="c1"&gt;// print ending string with left padding&lt;/span&gt;
        &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"  ${Element.ALPHABETICAL_INDEXES}"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;1Ô∏è‚É£ : To simplify, we will expand our array with the function &lt;a href="https://kotlinlang.org/docs/collection-transformations.html#map"&gt;mapIndexed()&lt;/a&gt;, where each element will be a string with an already prepared UI.&lt;/p&gt;

&lt;p&gt;2Ô∏è‚É£ : To display line numbering reverse, we use Kotlin's built-in &lt;a href="https://kotlinlang.org/docs/collection-ordering.html#reverse-order"&gt;reversed()&lt;/a&gt; function. And then just output the result using the &lt;a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.sequences/join-to-string.html"&gt;joinToString()&lt;/a&gt; function, which specifies the string translation (&lt;code&gt;\n&lt;/code&gt;), as an element separator.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;‚Üë Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-the-entry-point"&gt;
  &lt;/a&gt;
  Create the entry point
&lt;/h2&gt;

&lt;p&gt;And, finally, let's create an entry point of our console game (&lt;code&gt;Main.kt&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ./src/main/kotlin/Main.kt&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ui.Board&lt;/span&gt;

&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;board&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Board&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Let's play Chess!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;board&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;üí° You can give your playing field any name you want. Just add it to the primary constructor of the &lt;code&gt;Board&lt;/code&gt; data class.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Run our program (Shift + Ctrl + R) and üí• BOOM üí• everything works the way we wanted it to:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y6qo6-zM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quf5uhy4u022hcxr9ezc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y6qo6-zM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quf5uhy4u022hcxr9ezc.png" alt="result" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;‚Üë Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-kotlin"&gt;
  &lt;/a&gt;
  Learn Kotlin
&lt;/h2&gt;

&lt;p&gt;Do you want to learn Kotlin? üë©‚Äçüéì üë®‚Äçüéì&lt;/p&gt;

&lt;p&gt;Then come to &lt;a href="https://hyperskill.org/join/9e07b927f"&gt;JetBrains Academy&lt;/a&gt;, where there is a free basic course in this language for free! There you will find both theoretical part and many practical tasks of any level of complexity.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;‚Üë Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#photos-and-videos-by"&gt;
  &lt;/a&gt;
  Photos and videos by
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Kotlin mascot authors &lt;a href="https://kotlinlang.org/docs/kotlin-mascot.html"&gt;https://kotlinlang.org/docs/kotlin-mascot.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Vic Sh√≥stak &lt;a href="https://shostak.dev"&gt;https://shostak.dev&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  P.S.
&lt;/h2&gt;

&lt;p&gt;If you want more articles like this on this blog, then post a comment below and subscribe to me. Thanks! üòò&lt;/p&gt;

&lt;p&gt;And, of course, you can support me by donating at &lt;a href="https://liberapay.com/koddr/donate"&gt;LiberaPay&lt;/a&gt;. &lt;em&gt;Each donation will be used to write new articles and develop non-profit open-source projects for the community.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://liberapay.com/koddr/donate"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qrXDZTNF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zq8442cqyjq2i1jdeay8.png" alt="Support author at LiberaPay" width="424" height="104"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>kotlin</category>
      <category>gamedev</category>
      <category>showdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Striver's SDE Sheet Journey - #8 Merge Overlapping Subintervals</title>
      <author>sachin26</author>
      <pubDate>Wed, 29 Dec 2021 09:14:24 +0000</pubDate>
      <link>https://dev.to/sachin26/strivers-sde-sheet-journey-8-merge-overlapping-subintervals-4jff</link>
      <guid>https://dev.to/sachin26/strivers-sde-sheet-journey-8-merge-overlapping-subintervals-4jff</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;u&gt;Problem Statement&lt;/u&gt; :-&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Given an array of intervals where &lt;code&gt;intervals[i] = [starti, endi]&lt;/code&gt;, merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: intervals=[[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Explanation :&lt;/strong&gt; &lt;em&gt;Since intervals [1,3] and [2,6] are overlapping we can merge them to form [1,6]&lt;br&gt;
 intervals.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So, in this problem, we need to merge those intervals which are overlapping, which means intervals that start point lies between the start &amp;amp; endpoint of another interval.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#solution-1"&gt;
  &lt;/a&gt;
  &lt;u&gt;Solution 1&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;step-1&lt;/strong&gt; first, we need to &lt;strong&gt;sort&lt;/strong&gt; the &lt;code&gt;intervals&lt;/code&gt; on the basis of their starting point. by doing this we can easily merge overlapping adjacent intervals.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;unsorted intervals&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wLFMUeZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7ahbqnqqn5rplzzmmq7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wLFMUeZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7ahbqnqqn5rplzzmmq7.png" alt="dsa" width="300" height="150"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sorted intervals&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3x74NnGF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iig6aamvyjncml77sgcm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3x74NnGF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iig6aamvyjncml77sgcm.png" alt="dsa" width="300" height="150"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-2&lt;/strong&gt; take the first interval and compare its &lt;code&gt;end&lt;/code&gt; with the next interval &lt;code&gt;start&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;if they overlap, update the &lt;code&gt;end&lt;/code&gt; of the first interval with the max end of overlapping intervals.&lt;/p&gt;

&lt;p&gt;if they do not overlap, move to the next interval.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;See below the java version of this approach.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Java&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;validIntervals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

        &lt;span class="c1"&gt;// sort the array by thier starting point&lt;/span&gt;
        &lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="o"&gt;,(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;)-&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;compare&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]));&lt;/span&gt;

        &lt;span class="c1"&gt;// store first interval as valid&lt;/span&gt;
        &lt;span class="n"&gt;validIntervals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;


        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;validInterval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;validIntervals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;validIntervals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

            &lt;span class="c1"&gt;// if intervals overlapping,then marge&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;validInterval&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;]){&lt;/span&gt;
               &lt;span class="n"&gt;validInterval&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;&lt;span class="n"&gt;validInterval&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt; 
            &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;validIntervals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;validIntervals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toArray&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;validIntervals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;][]);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thank you for reading this blog. if you find something wrongs, let me know in the comment section.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>dsa</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Anayo Debugging 1: java.lang.NoClassDefFoundError: &lt;clinit&gt; failed for class com.facebook.flipper.android.EventBase</title>
      <author>Anayo Oleru</author>
      <pubDate>Wed, 29 Dec 2021 09:06:11 +0000</pubDate>
      <link>https://dev.to/anayooleru/anayo-debugging-1-javalangnoclassdeffounderror-failed-for-class-comfacebookflipperandroideventbase-3pm5</link>
      <guid>https://dev.to/anayooleru/anayo-debugging-1-javalangnoclassdeffounderror-failed-for-class-comfacebookflipperandroideventbase-3pm5</guid>
      <description>&lt;h1&gt;
  &lt;a href="#bug"&gt;
  &lt;/a&gt;
  Bug
&lt;/h1&gt;

&lt;p&gt;Generating an Android build package(APK)from Android Studio builds successfully. But running the generated APK on a real device or device connected to Android Studio Crashes on launch and returns the following errors.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;getWifiLinkLayerStats_1_3_Internal(l.973) failed {.code = ERROR_NOT_SUPPORTED, .description = }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
/? E/studio.deploy: Could not get package user id: run-as: unknown package: com....
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
/? E/studio.deploy: Could not find apks for this package: com....
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
/? E/Finsky: [2] VerifyPerSourceInstallationConsentInstallTask.d(2): Package name null is not an installed package
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
/? E/installd: Couldn't opendir /data/app/vmdl1184715882.tmp: No such file or directory
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
/? E/installd: Failed to delete /data/app/vmdl1184715882.tmp: No such file or directory
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
/? E/ssioncontrolle: Not starting debugger since process cannot load the jdwp agent.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
java.lang.NoClassDefFoundError: &amp;lt;clinit&amp;gt; failed for class com.facebook.flipper.android.EventBase; see exception in other thread
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I read through all, trying to understand each of them. But what stood out from these errors, and that has some sort of clarity is the last one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java.lang.NoClassDefFoundError: &amp;lt;clinit&amp;gt; failed for class com.facebook.flipper.android.EventBase; see exception in other thread
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I was a bit skeptical, because it's getting really difficult to justify Flipper, a debug tool shouldn't crash and block the development process.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-i-solved-it"&gt;
  &lt;/a&gt;
  How I solved it
&lt;/h1&gt;

&lt;p&gt;After several trial and error, I was able to arrive at a solution that worked. I had to re-think, this particular error happens when after I try running the generated APK and not when I was generating a build. And I looked at how the Android build process works, the compiler converts the source code into DEX(whatever the name is) files, which include byte code that runs on android devices. So this would mean that while compiling, there was possibly a mix of old and new source code(which is possible since there is no such thing as a perfect compiler), or if there isn't no issue, then there must be something wrong with the compiled files. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;What is the best way to resolve something like this? As any other way, deleting the build and starting afresh as a new build.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is what I did, and it worked.&lt;/p&gt;

&lt;p&gt;Here is what I did, the steps I took:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deleted android build file, you can find this file in: 
android&amp;gt;app inside app delete build folder&lt;/li&gt;
&lt;li&gt;Then I cleaned the gradlew:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd android &amp;amp;&amp;amp;./gradlew clean
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Next I rebuilt the application again&lt;/li&gt;
&lt;li&gt;Then I ran the APK&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Voila! It solved all the above issues. I hope this will help you and save you time, if you face similar error or the same error.&lt;/p&gt;

&lt;p&gt;If it helps you, like this post.&lt;/p&gt;




&lt;p&gt;My name is &lt;strong&gt;Anayo Oleru&lt;/strong&gt;, I specialise in Backend Development(NodeJS &amp;amp; ExpressJS), but I am experienced with Web frontend(ReactJS) and mobile(React-native). And I am open to offers in these fields.&lt;/p&gt;

&lt;p&gt;You can follow me on Twitter at &lt;a href="https://twitter.com/AnayoOleru"&gt;@AnayoOleru&lt;/a&gt; or send an email to: &lt;a href="mailto:anayo_oleru@outlook.com"&gt;anayo_oleru@outlook.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cheers and take care.&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>androidstudio</category>
      <category>flipper</category>
      <category>unknownpackage</category>
    </item>
    <item>
      <title>Hyper QuickStart to MySQL</title>
      <author>cGIfl300</author>
      <pubDate>Wed, 29 Dec 2021 08:34:34 +0000</pubDate>
      <link>https://dev.to/cgifl300/hyper-quickstart-to-mysql-3c75</link>
      <guid>https://dev.to/cgifl300/hyper-quickstart-to-mysql-3c75</guid>
      <description>&lt;p&gt;Be straight, just do it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#mysql"&gt;
  &lt;/a&gt;
  MySQL
&lt;/h1&gt;

&lt;p&gt;MySQL is a SQL Database.&lt;br&gt;&lt;br&gt;
To connect to a MySQL Database you need:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The server adress
&lt;/li&gt;
&lt;li&gt;A username
&lt;/li&gt;
&lt;li&gt;A password
&lt;/li&gt;
&lt;li&gt;A database&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#admin-the-mysql"&gt;
  &lt;/a&gt;
  Admin the MySQL
&lt;/h1&gt;

&lt;p&gt;To enter the admin console you have 2 options.  &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#mysql"&gt;
  &lt;/a&gt;
  mysql
&lt;/h2&gt;

&lt;p&gt;As root, use mysql:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As user:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mysql &lt;span class="nt"&gt;-u&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;my_username &lt;span class="nt"&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;-p&lt;/strong&gt; means a password is required, you need to have a user account on the&lt;br&gt;
MySQL server to use it. &lt;br&gt;
To exit the shell, use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#mysql-workbench"&gt;
  &lt;/a&gt;
  MySQL Workbench
&lt;/h2&gt;

&lt;p&gt;A very good tool you can download with a GUI to remote control any MySQL&lt;br&gt;
server.&lt;br&gt;&lt;br&gt;
Using your user account you can manage everything with few clicks.  &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#users"&gt;
  &lt;/a&gt;
  Users
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#create-a-user"&gt;
  &lt;/a&gt;
  Create a user
&lt;/h2&gt;

&lt;p&gt;When you create a user account, it doesn't have any right, you have to add them&lt;br&gt;
to use a database or anything.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;USER&lt;/span&gt; &lt;span class="s1"&gt;'newuser'&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt; &lt;span class="n"&gt;IDENTIFIED&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;% as domain allow a connexion from anywhere&lt;br&gt;&lt;br&gt;
localhost as domain restrict the usage to a local connexion only.&lt;/em&gt;  &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#grant-a-user"&gt;
  &lt;/a&gt;
  Grant a user
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;GRANT&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt; &lt;span class="k"&gt;PRIVILEGES&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="s1"&gt;'newuser'&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;FLUSH&lt;/span&gt; &lt;span class="k"&gt;PRIVILEGES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#grant-different-user-permissions"&gt;
  &lt;/a&gt;
  Grant Different User Permissions
&lt;/h3&gt;

&lt;p&gt;Common possible permissions users can enjoy.  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;ALL PRIVILEGES&lt;/strong&gt; - as we saw previously, this would allow a MySQL user full
access to a designated database (or if no database is selected, global access
across the system)
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CREATE&lt;/strong&gt; - allows to create new tables or databases
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;DROP&lt;/strong&gt; - allows to them to delete tables or databases
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;DELETE&lt;/strong&gt; - allows to delete rows from tables
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;INSERT&lt;/strong&gt; - allows to insert rows into tables
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SELECT&lt;/strong&gt; - allows to use the SELECT command to read through databases
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;UPDATE&lt;/strong&gt; - allow to update table rows
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;GRANT OPTION&lt;/strong&gt; - allows to grant or remove other users‚Äô privileges
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can use this template to grant a permission to a user:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;GRANT&lt;/span&gt; &lt;span class="n"&gt;type_of_permission&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;database_name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;FLUSH&lt;/span&gt; &lt;span class="k"&gt;PRIVILEGES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#update-a-password"&gt;
  &lt;/a&gt;
  Update a password
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;USER&lt;/span&gt; &lt;span class="s1"&gt;'user-name'&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt; &lt;span class="n"&gt;IDENTIFIED&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="s1"&gt;'NEW_USER_PASSWORD'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;FLUSH&lt;/span&gt; &lt;span class="k"&gt;PRIVILEGES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#delete-a-user"&gt;
  &lt;/a&gt;
  Delete a user
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;USER&lt;/span&gt; &lt;span class="s1"&gt;'user'&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#databases"&gt;
  &lt;/a&gt;
  Databases
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#add-a-database-to-a-specific-user"&gt;
  &lt;/a&gt;
  Add a database to a specific user
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;USER&lt;/span&gt; &lt;span class="s1"&gt;'newuser'&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt; &lt;span class="n"&gt;IDENTIFIED&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;my_database&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;GRANT&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt; &lt;span class="k"&gt;PRIVILEGES&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;my_database&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="s1"&gt;'newuser'&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#delete-a-database"&gt;
  &lt;/a&gt;
  Delete a database
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;db_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Alternative:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;SCHEMA&lt;/span&gt; &lt;span class="n"&gt;db_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Both commands do the same.  &lt;/p&gt;

</description>
      <category>mysql</category>
      <category>note</category>
    </item>
    <item>
      <title>Aspect Ratio: no need for Container Units!</title>
      <author>Ingo Steinke</author>
      <pubDate>Wed, 29 Dec 2021 08:31:56 +0000</pubDate>
      <link>https://dev.to/ingosteinke/aspect-ratio-no-need-for-container-units-4bmn</link>
      <guid>https://dev.to/ingosteinke/aspect-ratio-no-need-for-container-units-4bmn</guid>
      <description>&lt;p&gt;When I first heard about &lt;a href="https://css-tricks.com/a-cornucopia-of-container-queries/"&gt;container queries&lt;/a&gt;, I was mistaken that there would be &lt;strong&gt;"container units"&lt;/strong&gt; in CSS, probably a unit like percent, but relative to the other axis. "100cw" would always be 100% of the container width, even if used insight a &lt;code&gt;height&lt;/code&gt; property.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trying-to-make-sense-of-a-misconception"&gt;
  &lt;/a&gt;
  Trying to make Sense of a Misconception ü§îü§ìü§£
&lt;/h2&gt;

&lt;p&gt;I tried to make sense of the hype. Container units could possibly a handy feature. I even had an actual use case in a customer project this year.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: there will be no container units in CSS in the near future (and probably never), because we probably don't need them. At least there have been &lt;a href="#aspect-ratio-as-an-elegant-alternative"&gt;alternatives&lt;/a&gt; for every of my use cases so far.&lt;/p&gt;




&lt;p&gt;Let's have a look at my recent use case:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-carousel-slideshow-inside-a-column"&gt;
  &lt;/a&gt;
  A Carousel Slideshow inside a Column üé†üé™
&lt;/h3&gt;

&lt;p&gt;This is an actual requirement I had in 2021. While I would rarely recommend using slideshow carousels at all, this is just my personal opinion as a front-end developer. I am no usability expert, and some of my customer (or rather the teams coming up with the designs) seem to love anything that moves on a website.&lt;/p&gt;

&lt;p&gt;Let's just imagine we want to style a slideshow.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamic-height-calculation-relative-to-container-width"&gt;
  &lt;/a&gt;
  Dynamic Height Calculation relative to Container Width
&lt;/h3&gt;

&lt;p&gt;The slideshow container is a block element that needs to keep its proportions without stretching or clipping its content, by setting the height in proportion to the width. Just like HTML image elements behave in the regular document flow.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"800"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"600"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"an image"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img.jpg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Unless they are taken out of the flow by using &lt;code&gt;position: absolute&lt;/code&gt; or a CSS transformation, which is a typical side effect of a slideshow / carousel. Have a look at this simplified code example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"canvas"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"800"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"600"&lt;/span&gt; &lt;span class="na"&gt;alt&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img.jpg"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"active"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"800"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"600"&lt;/span&gt; &lt;span class="na"&gt;alt&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img2.jpg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="nc"&gt;.canvas&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;.active&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a very basic abstraction of a slideshow markup. A series of images, usually only one of them (the "active" image) visible at a time, while the others will be revealed by scrolling, dragging, swiping or waiting for an automated animation.&lt;/p&gt;

&lt;p&gt;But this example is enough to reproduce a typical challenge that web developers face when &lt;a href="http://tympanus.net/codrops/css_reference/position/"&gt;dealing with absolutely positioned content&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#relatively-absolute-loss-of-height"&gt;
  &lt;/a&gt;
  Relatively absolute Loss of Height
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://codepen.io/openmindculture/pen/gOGoZJW"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J6HBmFie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfotf7ikzvatc5iu1k8j.png" alt="Codepen screenshot" width="880" height="578"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/openmindculture/pen/gOGoZJW"&gt;This codepen&lt;/a&gt; shows how our image container has lost its height instead of growing to the height of the images inside.&lt;/p&gt;

&lt;p&gt;Out of the flow, our images now behave like butterflies fyling over the content which they used to be a part of.&lt;/p&gt;

&lt;p&gt;üêõ ‚û§‚û§‚û§ ü¶ã‚ú® ‚û§‚û§‚û§ üé†üé™&lt;/p&gt;

&lt;p&gt;This is good for the images (because we are free to move and position them anywhere, which is necessary for the desired slideshow effect), but it' bad for our document. The content below our image container now overlaps our slideshow, while it should stay visually below like it did before.&lt;/p&gt;

&lt;p&gt;üöß üöß üöß üöß üöß&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keeping-the-distance"&gt;
  &lt;/a&gt;
  Keeping the Distance
&lt;/h3&gt;

&lt;p&gt;We can set a minimal height, but as the images are dynamically sized (they will shrink when the window is resized to prevent being cut off on small screens like on a mobile device), we can't use a static pixel value here.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adapting-to-the-viewport-width"&gt;
  &lt;/a&gt;
  Adapting to the Viewport Width
&lt;/h3&gt;

&lt;p&gt;As long as we only consider the viewport width, we could use viewport units inside a calculation. "Viewport" is the part of the browser that displays our current document. &lt;code&gt;100vw&lt;/code&gt; means 100% of the available viewport width. This is a simple rule of three calculation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.canvas&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;800&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;600&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Did this fix our problem?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/openmindculture/pen/bGoazdv"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ehs9vYwN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vos4miz3rpg7r4if1ye5.png" alt="Codepen: Regained Height thanks to the Rule of Three" width="634" height="597"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we have a height that behaves mostly as expected. We should to fix the additional space below the image, probably due to some unintended inline display behavior or whatever. But the basic concept does its job.&lt;/p&gt;

&lt;p&gt;Unless we want to adapt to a parent container.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#responsive-design-inside-container-elements"&gt;
  &lt;/a&gt;
  Responsive Design inside Container Elements
&lt;/h3&gt;

&lt;p&gt;Maybe our slideshow will be placed inside a column next to a navigation or some ad banners, so we must not rely on the &lt;code&gt;100vw&lt;/code&gt; viewport width.&lt;/p&gt;

&lt;p&gt;Let's just use percentage then, right? No!&lt;/p&gt;

&lt;p&gt;While &lt;code&gt;100vw&lt;/code&gt; is always 100% of the viewport width (don't care about the scrollbar details either), &lt;code&gt;100%&lt;/code&gt; is always 100% or the current axis, so&lt;/p&gt;

&lt;p&gt;&lt;code&gt;width: 100vw&lt;/code&gt; and &lt;code&gt;width: 100%&lt;/code&gt; are the same on a top level, but &lt;code&gt;height: 100vw&lt;/code&gt; vs. &lt;code&gt;height: 100%&lt;/code&gt; are totally different, as these 100% will be 100% of the height, not of the width!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#container-units"&gt;
  &lt;/a&gt;
  Container Units? üìäüìê
&lt;/h3&gt;

&lt;p&gt;One might conclude, that we need container units, similar to the viewport units, for our use case, like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BuPdTqq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zq3fkeeopoc4boayyy2e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BuPdTqq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zq3fkeeopoc4boayyy2e.png" alt="Screenshot with imaginary container units" width="509" height="143"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is no valid CSS (and will probably never be):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.canvas&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="n"&gt;cw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;this&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;NO&lt;/span&gt; &lt;span class="err"&gt;VALID&lt;/span&gt; &lt;span class="err"&gt;CSS&lt;/span&gt; &lt;span class="err"&gt;!!!&lt;/span&gt;
  &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;800&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="n"&gt;cw&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I just made up this pseudo-code. Don't copy!&lt;br&gt;
There is a better alternative!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#aspect-ratio-as-an-elegant-alternative"&gt;
  &lt;/a&gt;
  Aspect Ratio as an elegant Alternative
&lt;/h2&gt;

&lt;p&gt;A more elegant alternative to &lt;a href="https://stackoverflow.com/questions/70438272/set-a-div-height-from-its-width-and-vice-versa/"&gt;set a div height from its width&lt;/a&gt; is the &lt;code&gt;aspect-ratio&lt;/code&gt; property.&lt;/p&gt;

&lt;p&gt;Why is this elegant? We don't need to define calculations. Instead, we write compact code, that is easy to use and understand. Let's leave it to the browsers to do the proper math, just like they have been handling images properly for decades.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio"&gt;Aspect ratio&lt;/a&gt; makes any block element behave just like an image, so we can use it to adapt its width to the viewport and keep its ratio to figure out the appropriate height:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.canvas&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;aspect-ratio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;800&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;
  &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We still have one problem here: max width should be restricted both to the viewport or parent container width and to the image width.&lt;/p&gt;

&lt;p&gt;The code example above will make our &lt;code&gt;.canvas&lt;/code&gt; div too large when the container is wider than the image width:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RtVFUI_W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v87mzlbpf4a9qveh6sty.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RtVFUI_W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v87mzlbpf4a9qveh6sty.png" alt="The canvas is too large in this example." width="880" height="619"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have to set our container &lt;code&gt;width&lt;/code&gt; to the same width as that of our image element to make it work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/openmindculture/pen/vYepbWJ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GdhXpG79--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/clqmhg3zvbppzrej0k4k.png" alt="Working codepen screenshot" width="880" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will resize properly...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lGX46_EO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzi9ik4avtj6bgd4qcbo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lGX46_EO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzi9ik4avtj6bgd4qcbo.png" alt="Screenshot of the same codepen in a smaller viewport" width="595" height="562"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;... and it should also work inside of a column, when the parent container width is not the full viewport width. That's the use case I described at the beginning of this article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/openmindculture/pen/PoJEVyB"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OzUeB-FH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4xykl66qaqoll0zym99.png" alt="Codepen: CodePen Home&amp;lt;br&amp;gt;
Aspect Ratio inside a Column Container&amp;lt;br&amp;gt;
" width="880" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-i-use-aspectratio"&gt;
  &lt;/a&gt;
  Can I use aspect-ratio?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://caniuse.com/?search=aspect-ratio"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E1ul82la--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0oq06bai8pcn3cp0rvf.png" alt="caniuse.com/?search=aspect-ratio" width="880" height="472"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The CSS property &lt;code&gt;aspect-ratio&lt;/code&gt; has fairly good browser support. You could still use the min-height calculation as a fallback for unsupported browsers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;There is no need for container units.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What we do need for better responsive frontend web development are &lt;strong&gt;container queries&lt;/strong&gt;, one the most popular missing CSS language feature &lt;a href="https://2021.stateofcss.com/en-US/opinions/"&gt;according to the state of CSS survey 2021&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://2021.stateofcss.com/en-US/opinions/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lQu9lx3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Gxm1vcCZ--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q14f3xl4cs03t6v77gg8.png" alt="missing from css: container queries, parent selector, browser support, nesting. Screenshot from the 2021 state of CSS survey" width="880" height="401"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://css-tricks.com/a-cornucopia-of-container-queries/"&gt;cornucopia of container queries by CSS tricks&lt;/a&gt; is a good way to understand the upcoming update which can &lt;a href="https://caniuse.com/css-container-queries"&gt;already be tested after setting a feature flag&lt;/a&gt; in all Chromium-based browsers like Google Chrome, Microsoft Edge, Opera, and Vivaldi.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enable-css-container-queries"&gt;
  &lt;/a&gt;
  Enable CSS Container Queries
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;chrome://flags&lt;/code&gt; in the address bar, and switch "Enable CSS Container Queries" to "enabled".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fUySQOCE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/46f5b41nobvy8uqotn2h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fUySQOCE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/46f5b41nobvy8uqotn2h.png" alt="Screenshot of setting the feature flags in Vivaldi browser" width="880" height="524"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Restart your browser and you can start to experiment with container queries.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VdZONhBX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzob4sr0twj91nbvcs7y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VdZONhBX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzob4sr0twj91nbvcs7y.png" alt="Experimenting with container queries" width="655" height="132"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>webdev</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>5 WEB UX LAWS EVERY DEVELOPER SHOULD KNOW</title>
      <author>Visualway</author>
      <pubDate>Wed, 29 Dec 2021 08:21:55 +0000</pubDate>
      <link>https://dev.to/visualway/5-web-ux-laws-every-developer-should-know-f6h</link>
      <guid>https://dev.to/visualway/5-web-ux-laws-every-developer-should-know-f6h</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-jakobs-law"&gt;
  &lt;/a&gt;
  1. JAKOB‚ÄôS LAW
&lt;/h2&gt;

&lt;p&gt;Users spend most of their time on other sites. This means that users prefer your site to work the same way as all the other sites they already know. Websites do better the more standardized their design is.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GHzwAKIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://4ciipx2wt5iq3qj5qr4cu74k-wpengine.netdna-ssl.com/wp-content/uploads/2021/07/Jakobs-Law.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GHzwAKIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://4ciipx2wt5iq3qj5qr4cu74k-wpengine.netdna-ssl.com/wp-content/uploads/2021/07/Jakobs-Law.png" alt="jakob" width="880" height="609"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-fitts-law"&gt;
  &lt;/a&gt;
  2. FITT‚ÄôS LAW
&lt;/h2&gt;

&lt;p&gt;The time it takes someone to select an object in the screen depends on how far the cursor is from the object and the size of the object. Thus, the longer the distance and the smaller the target‚Äôs size, the longer it takes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PRvAjQVp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://4ciipx2wt5iq3qj5qr4cu74k-wpengine.netdna-ssl.com/wp-content/uploads/2021/07/Fittss-Law-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PRvAjQVp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://4ciipx2wt5iq3qj5qr4cu74k-wpengine.netdna-ssl.com/wp-content/uploads/2021/07/Fittss-Law-1.png" alt="fitt" width="880" height="609"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-millers-law"&gt;
  &lt;/a&gt;
  3. MILLER‚ÄôS LAW
&lt;/h2&gt;

&lt;p&gt;The average person can only keep 7 (plus or minus 2) items in their working memory. Organize content into smaller chunks to help users process, understand, and memorize easily.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YeGr_MSA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://4ciipx2wt5iq3qj5qr4cu74k-wpengine.netdna-ssl.com/wp-content/uploads/2021/07/Millerss-Law.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YeGr_MSA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://4ciipx2wt5iq3qj5qr4cu74k-wpengine.netdna-ssl.com/wp-content/uploads/2021/07/Millerss-Law.png" alt="miller" width="880" height="609"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-law-of-proximity"&gt;
  &lt;/a&gt;
  4. LAW OF PROXIMITY
&lt;/h2&gt;

&lt;p&gt;Objects that are near, or proximate to each other, tend to be grouped together.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Proximity helps to establish a relationship with nearby objects.&lt;/li&gt;
&lt;li&gt;Proximity helps users understand and organize information faster and more efficiently.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uVB_MSEn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://4ciipx2wt5iq3qj5qr4cu74k-wpengine.netdna-ssl.com/wp-content/uploads/2021/07/Law-of-Proximity.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uVB_MSEn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://4ciipx2wt5iq3qj5qr4cu74k-wpengine.netdna-ssl.com/wp-content/uploads/2021/07/Law-of-Proximity.png" alt="proximity" width="880" height="609"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-hicks-law"&gt;
  &lt;/a&gt;
  5. HICK'S LAW
&lt;/h2&gt;

&lt;p&gt;The time it takes to make a decision increases with the number and complexity of choices. Hick‚Äôs Law is a fairly commonsense idea: the more choices you present to a person, the longer they take to make a decision. It‚Äôs essentially a fancier way to describe the KISS rule: Keep It Simple, Stupid!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ZlfYtGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://4ciipx2wt5iq3qj5qr4cu74k-wpengine.netdna-ssl.com/wp-content/uploads/2021/07/Hicks-Law.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ZlfYtGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://4ciipx2wt5iq3qj5qr4cu74k-wpengine.netdna-ssl.com/wp-content/uploads/2021/07/Hicks-Law.png" alt="hick" width="880" height="609"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading
&lt;/h3&gt;

&lt;p&gt;If you liked this post, subscribe to our newsletter to never miss out on our blogs, product launches and tech news.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tinyletter.com/visualway"&gt;Subsribe to Visualway's newsletter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>design</category>
      <category>programming</category>
    </item>
    <item>
      <title>A11y tips: bind form controls and messages</title>
      <author>Carlos Espada</author>
      <pubDate>Wed, 29 Dec 2021 08:03:18 +0000</pubDate>
      <link>https://dev.to/carlosespada/a11y-tips-bind-form-controls-and-messages-2mb7</link>
      <guid>https://dev.to/carlosespada/a11y-tips-bind-form-controls-and-messages-2mb7</guid>
      <description>&lt;p&gt;&lt;a href="https://dev.to/carlosespada/a11y-tips-dont-use-links-buttons-or-headings-inside-labels-odp"&gt;As we saw before&lt;/a&gt;, the ARIA attribute &lt;code&gt;aria-describedby&lt;/code&gt; can be used to &lt;strong&gt;establish a relationship between a form control and an element&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It is very important to establish this connection since, when a form control receives focus, screen readers enter the so-called &lt;em&gt;form mode&lt;/em&gt; and from there &lt;strong&gt;only the control and its related elements are announced&lt;/strong&gt;, for which there must be a good relationship established between them so that the user has all the necessary information at the time of filling it in.&lt;/p&gt;

&lt;p&gt;This includes certain types of messages, such as hints about the format that the data must have (eg: passwords), links to other documents (eg: legal terms checkbox) or error messages of the data entered.&lt;/p&gt;

&lt;p&gt;And what is the correct way to do it? Assigning the &lt;code&gt;aria-describedby&lt;/code&gt; attribute of the form control the value of the &lt;code&gt;id&lt;/code&gt; attribute of the message that we want to relate, as in this example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;label for="password"&amp;gt;
  Password
&amp;lt;/label&amp;gt;
&amp;lt;input 
  type="password" 
  id="password"
  aria-describedby="password-desc" 
  autocomplete="off"&amp;gt;
&amp;lt;p id="password-desc"&amp;gt;
  Password must be at least 8 characters long and contain a number.
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case of having more than one related element, the &lt;code&gt;aria-describedby&lt;/code&gt; attribute &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-describedby_attribute"&gt;admits more than one value&lt;/a&gt;, separated with a space:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;label for="password"&amp;gt;
  Password
&amp;lt;/label&amp;gt;
&amp;lt;input 
  type="password" 
  id="password"
  aria-describedby="password-desc password-error" 
  autocomplete="off"&amp;gt;
&amp;lt;p id="password-desc"&amp;gt;
  Password must be at least 8 characters long and contain a number.
&amp;lt;/p&amp;gt;
&amp;lt;p id="password-error"&amp;gt;
  Your password does not comply with the required format
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>a11y</category>
      <category>tips</category>
      <category>html</category>
    </item>
    <item>
      <title>Custom Web Design and Development</title>
      <author>Ace Infoway</author>
      <pubDate>Wed, 29 Dec 2021 07:54:18 +0000</pubDate>
      <link>https://dev.to/ace_infoway/custom-web-design-and-development-4pl9</link>
      <guid>https://dev.to/ace_infoway/custom-web-design-and-development-4pl9</guid>
      <description>&lt;p&gt;&lt;strong&gt;Ace Infoway&lt;/strong&gt; has gained 21+ years of experience in a plethora of &lt;a href="https://www.aceinfoway.com/"&gt;&lt;strong&gt;Custom Web Design and Development&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://www.aceinfoway.com/"&gt;&lt;strong&gt;Custom Website Development Services&lt;/strong&gt;&lt;/a&gt;, IT Services and has access to resources and teams in the USA, UK, and India.&lt;/p&gt;

&lt;p&gt;We are proud to be an extended partner and offer &lt;a href="https://www.aceinfoway.com/website-development"&gt;&lt;strong&gt;Website Development Consultants&lt;/strong&gt;&lt;/a&gt; teams for over 50+ Web Agencies &amp;amp; Businesses in diverse industries. Ace‚Äôs value proposition lies in its diverse domain expertise, minimum learning curve period, and efficient turn-around time. We learn and invest for our customers and with an electrifying and eccentric team on board, we are ready to harness the force for good.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our Esteemed Services Include:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.aceinfoway.com/digital-transformation"&gt;Digital Transformation Consulting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.aceinfoway.com/"&gt;Custom Web Design and Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.aceinfoway.com/website-development"&gt;Website Development Consultants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.aceinfoway.com/ui-ux"&gt;UI UX Design Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.aceinfoway.com/product-engineering"&gt;Software Product Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.aceinfoway.com/web-application-development"&gt;Web Application Development Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.aceinfoway.com/mobile-app-development"&gt;Custom Mobile App Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.aceinfoway.com/qa-testing"&gt;Quality Assurance Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.aceinfoway.com/back-office-process"&gt;Back Office Solutions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Publishing Support&lt;/li&gt;
&lt;li&gt;Agencies and Marketing Tech Services&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Sales Contact:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Email:&lt;/strong&gt; &lt;a href="mailto:success@aceinfoway.com"&gt;success@aceinfoway.com&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Website:&lt;/strong&gt; &lt;a href="https://www.aceinfoway.com"&gt;https://www.aceinfoway.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>devops</category>
      <category>programming</category>
      <category>design</category>
    </item>
    <item>
      <title>How to handle loading progress flicker</title>
      <author>Giannis Koutsaftakis</author>
      <pubDate>Wed, 29 Dec 2021 07:37:48 +0000</pubDate>
      <link>https://dev.to/kouts/how-to-handle-loading-progress-flicker-11ne</link>
      <guid>https://dev.to/kouts/how-to-handle-loading-progress-flicker-11ne</guid>
      <description>&lt;p&gt;One of the most important things in our web apps UX is to provide a form of feedback when the app needs more time to process the user's action when e.g an ajax request is fired in the background. This is usually done using a progress bar, a spinner, or a combination of both. &lt;/p&gt;

&lt;p&gt;Have you ever noticed though a "flaky" behavior when a lot of API calls happen at the same time?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GeTkE3nv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbmtxd8cnngrcxaes4ok.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GeTkE3nv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbmtxd8cnngrcxaes4ok.gif" alt="Image description" width="724" height="54"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We can provide a smooth experience to our users, so let's fix that!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-well-build"&gt;
  &lt;/a&gt;
  What we'll build
&lt;/h2&gt;

&lt;p&gt;We'll create a simple loader handler function for &lt;code&gt;Promises&lt;/code&gt; that will make sure our loading indicator will disappear only when the last unresolved &lt;code&gt;Promise&lt;/code&gt; gets resolved. We'll also make sure that the function is &lt;strong&gt;reusable&lt;/strong&gt; so that it can be used with any project and with any progress loading indicator plugin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;createLoader.ts&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createLoader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;end&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;slackTime&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;promises&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;opts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...{&lt;/span&gt;
      &lt;span class="na"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
      &lt;span class="na"&gt;slackTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;promises&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;promises&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;promises&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;promises&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slackTime&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We created a factory function that takes an options object that defines which operations will be performed on loading start/end and optionally an operation to execute when a &lt;code&gt;Promise&lt;/code&gt; is resolved.&lt;/p&gt;

&lt;p&gt;We can also define a &lt;code&gt;slackTime&lt;/code&gt; that will be used as a delay to wait until the last &lt;code&gt;Promise&lt;/code&gt; is resolved. This is useful in cases that we have e.g an API call that starts shortly after another call has just finished, causing a "flickering" effect in our loader.&lt;/p&gt;

&lt;p&gt;The factory function will return our &lt;code&gt;load&lt;/code&gt; method which will accept a &lt;code&gt;Promise&lt;/code&gt; or a function that returns a &lt;code&gt;Promise&lt;/code&gt;. Instead of firing our &lt;code&gt;async&lt;/code&gt; functions directly, we'll pass them through our &lt;code&gt;load&lt;/code&gt; function instead. Our loader then will make sure that the loading progress ends when the last of the &lt;code&gt;Promises&lt;/code&gt; is resolved.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#options"&gt;
  &lt;/a&gt;
  Options
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;start&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A function to execute on loading start, this is where we start our progress loader&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;end&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A function to execute when loading ends, this is where we stop our progress loader&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;inc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An optional function to execute when a promise resolves (valid for all promises except the last one). We can use this function to increment our loading progress.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;() =&amp;gt; {}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;slackTime&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Time in &lt;code&gt;ms&lt;/code&gt; to wait until last promise is resolved as to enable multiple operations in a sequence without re-triggering a loader progress start&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#creating-our-loader"&gt;
  &lt;/a&gt;
  Creating our loader
&lt;/h2&gt;

&lt;p&gt;It's time to create our loader. Here we're using the popular &lt;a href="https://github.com/rstacruz/nprogress"&gt;nprogress&lt;/a&gt; library for our progress loading indicator as an example.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;loader.ts&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;NProgress&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nprogress&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createLoader&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./createLoader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;NProgress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;minimum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;NProgress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;NProgress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;NProgress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createLoader&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;slackTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;350&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inc&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have configured the &lt;code&gt;NProgress&lt;/code&gt; instance and setup a new loader that will start, end, or increment the &lt;code&gt;nprogress&lt;/code&gt; progress bar depending on the &lt;code&gt;Promises&lt;/code&gt;' state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use"&gt;
  &lt;/a&gt;
  How to use
&lt;/h2&gt;

&lt;p&gt;Using our loader is fairly simple, we just need to pass our &lt;code&gt;Promises&lt;/code&gt; into the &lt;code&gt;load&lt;/code&gt; function and our loader will take care of the rest. Here's an example using &lt;code&gt;axios&lt;/code&gt; that dispatches two requests so that they get registered in our loader.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://jsonplaceholder.typicode.com/todos`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://jsonplaceholder.typicode.com/todos/1`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;That's it&lt;/strong&gt;, no more loading progress flicker!&lt;/p&gt;

&lt;p&gt;If you want to see how this feels in a browser, checkout a live example of the loader that implements a global page progress bar (and some extra stuff too) in this stackblitz &lt;a href="https://stackblitz.com/edit/vitejs-vite-yv9gg4?"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure you open this with a Chromium-based browser (e.g Chrome) and run &lt;code&gt;npm run dev&lt;/code&gt; on the console.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>ux</category>
    </item>
    <item>
      <title>The Basics of Web Application Testing</title>
      <author> QAble Testlab Private Limited</author>
      <pubDate>Wed, 29 Dec 2021 07:18:20 +0000</pubDate>
      <link>https://dev.to/qablehq/the-basics-of-web-application-testing-5ha5</link>
      <guid>https://dev.to/qablehq/the-basics-of-web-application-testing-5ha5</guid>
      <description>&lt;p&gt;The development of any application is incomplete without proper testing. Testing has its own cycle that precisely monitors the performance of any web application. Further, it uncovers all the bugs and increases the potential of an application.&lt;/p&gt;

&lt;p&gt;Also, quality testing assures the performance of an application and enables you to deliver a great customer experience. We all know, the ultimate aim behind any application is client engagement.&lt;/p&gt;

&lt;p&gt;client engagement is always dependent upon the performance of an application. Being a &lt;strong&gt;&lt;a href="https://www.qable.io/"&gt;leading software testing company in India&lt;/a&gt;&lt;/strong&gt;, QAble keeps exploring the concepts in order to make your web application more reliable and goal-oriented.&lt;/p&gt;

&lt;p&gt;In this series, you will get to know about the &lt;strong&gt;&lt;a href="https://www.qable.io/the-basics-of-web-application-testing/"&gt;basics of web application testing&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-web-application-testing"&gt;
  &lt;/a&gt;
  What is Web application testing?
&lt;/h2&gt;

&lt;p&gt;Either we say &lt;a href="https://www.qable.io/web-application-testing-service/"&gt;web application testing&lt;/a&gt; or website application testing, both are the same. Analyzing the performance of a web application as per the requirement document comes under web application testing.&lt;/p&gt;

&lt;p&gt;The QA team highlights the bugs and reports them to the concerned developers. Also, identification of bugs at the earlier stage is beneficial for the company and developers because it saves cost and time.&lt;/p&gt;

&lt;p&gt;It is the reason, QA team performs the testing module-wise. It means, as soon as the developer has finished a module, the testing team checks it immediately.&lt;/p&gt;

&lt;p&gt;If you ignore it, the minute issue raises big problems in the end, and if this bug comes during production, it will definitely take ten times more cost and effort. Hence, we always recommend following testing protocol in a disciplined way to assure the performance of your web application.&lt;/p&gt;

&lt;p&gt;Following each testing step comes under the basics of web application testing, and ignoring the same will lead you in the wrong way&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-application-testing-example"&gt;
  &lt;/a&gt;
  Web application testing example
&lt;/h3&gt;

&lt;p&gt;Testing needs technical knowledge along with an imaginary approach. As you know, investors make applications for audiences only. Hence, you are required to test an application on behalf of the users.&lt;/p&gt;

&lt;p&gt;They can click anywhere, and you need to cover the maximum possible scenarios. While testing a web application, always keep one thing in mind. Your majority of the users are non-technical, so you need to keep things simple.&lt;/p&gt;

&lt;p&gt;We can explore the concept through one &lt;strong&gt;&lt;a href="https://www.qable.io/web-application-testing-service/"&gt;web application testing example&lt;/a&gt;&lt;/strong&gt;. Suppose a web application has these elements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Products Category&lt;/li&gt;
&lt;li&gt;Listing of Products&lt;/li&gt;
&lt;li&gt;Add to Cart&lt;/li&gt;
&lt;li&gt;Payment Gateway&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Testing Approaches:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To test the above-said application, you need to follow the pattern in a synchronized way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Firstly, check out the User-Interface (UI).&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check all the elements available on the screen such as scroll bar, font, text, font color, labels, description, description box, radio button (if available), etc.&lt;/li&gt;
&lt;li&gt;Also, check the display of all the icons, product images, price value, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Afterward, test if filters are performing properly or not?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As we know, the page has categories for the products, and it may be possible, the user tries to check the products category-wise, price-wise or popularity-wise, etc. Hence working of filters should be verified.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Result analysis&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Once you have checked the UI and Filters, move to the logical part. Check whether the cart is showing the correct value or not. Verify the calculation accurately.&lt;/li&gt;
&lt;li&gt;You should check Payment Gateway under various scenarios.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;For example, after adding a product to the cart, what will happen if&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Don‚Äôt make the final payment.&lt;/li&gt;
&lt;li&gt;He selects the option of COD.&lt;/li&gt;
&lt;li&gt;During online payment, his internet goes off.&lt;/li&gt;
&lt;li&gt;He makes the payment successfully.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope now you have some idea through this web application testing example. Also, these are some rough scenarios that should be followed while testing an application.&lt;/p&gt;

&lt;p&gt;Also, each application is different from others, hence the test cases vary based on the requirement of the web application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-application-testing-tools"&gt;
  &lt;/a&gt;
  Web application testing tools
&lt;/h3&gt;

&lt;p&gt;The era is too competitive, and everybody needs perfection. To meet the expectations technocrats keep launching new concepts. Nowadays, we have many excellent web application testing tools that have decreased the effort of manual testing by 90%.&lt;/p&gt;

&lt;p&gt;Means, can you imagine, just before a few years, a simple module takes many days to test, and with these automation testing concepts, we can test the complex application quickly. It is a technology-driven era, and we all should take its benefits.&lt;/p&gt;

&lt;p&gt;Let‚Äôs have a look at the leading web application testing tools and implement them in your upcoming project.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Selenium&lt;/li&gt;
&lt;li&gt;Ranorex&lt;/li&gt;
&lt;li&gt;TestComplete&lt;/li&gt;
&lt;li&gt;Watir&lt;/li&gt;
&lt;li&gt;Katalon Studio&lt;/li&gt;
&lt;li&gt;TestingWhiz&lt;/li&gt;
&lt;li&gt;HPE Unified Functional Testing (HP ‚Äì UFT formerly QTP)&lt;/li&gt;
&lt;li&gt;Tosca Testsuite&lt;/li&gt;
&lt;li&gt;Telerik TestStudio&lt;/li&gt;
&lt;li&gt;Sahi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All these testing tools are adopted worldwide as they have brought a revolution to the QA world. We are also a testing company in India, and we know the worth of web application testing tools.&lt;/p&gt;

&lt;p&gt;If you are looking for detailed information about these web testing tools, let us know.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#web-application-testing-checklist"&gt;
  &lt;/a&gt;
  Web application testing checklist
&lt;/h4&gt;

&lt;p&gt;A checklist is mandatory during testing. It keeps you assured of quality testing. Also, without checklists, the testers may forget any of the modules, etc.&lt;/p&gt;

&lt;p&gt;Here we are sharing an &lt;a href="https://www.qable.io/the-basics-of-web-application-testing/"&gt;effective web application testing checklist&lt;/a&gt; that will not only strengthen the testing process but also save your time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Focus on the minute errors:&lt;/strong&gt; Testing demands patience, and one should never dare to perform in a hurry because the consequences can be dangerous.&lt;/p&gt;

&lt;p&gt;Take your time to check out the minor errors with full conviction because this is something testers, miss. Even check out the typo errors and ask the concerned team member to fix the same. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Verify spam links on the website:&lt;/strong&gt; Being a user, you must know, the spam links irritate a user the most. We immediately leave the website if we see spam links. Hence always secure the website from spamming.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Analyze the usability of a website:&lt;/strong&gt; The usability of a website matters a lot because the conversion rate and quality of SEO depend on it. Always check the image optimization, call-to-action activity, user experience, login process, login credentials, user role, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Navigation process testing:&lt;/strong&gt; A web application has multiple pages, and users navigate frequently between them. Testers should check each navigation process from home to the thank you page because users have infinite options to roam on the website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Mobile responsiveness:&lt;/strong&gt; The website should be properly visible across all mobile devices. It is the mobile era, and the presence of your website on mobile devices should be accurate. Check its compatibility on Android, iOS, Windows devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Browser compatibility:&lt;/strong&gt; QA team must check the performance of a website across all possible web and mobile browsers like Chrome, Mozilla, Safari, IE, etc. We don‚Äôt know the user‚Äôs browser hence testing the website across all the platforms becomes mandatory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Loading Speed of a Website:&lt;/strong&gt; This we all have experienced for sure. For a website that takes too much time to load, we close them instantly. As we have said earlier, the present era is too competitive, and users have 100 more options.&lt;/p&gt;

&lt;p&gt;Hence always keep your website prompt so that your traffic could be yours only.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h5&gt;

&lt;p&gt;These are the basics of web application testing. Following the activities will definitely make you a reliable service provider for sure. QAble is the fastest-growing &lt;strong&gt;&lt;a href="https://www.qable.io/"&gt;QA company in Ahmedabad, India&lt;/a&gt;&lt;/strong&gt;. If you have any concerns or doubts, feel free to catch us.&lt;/p&gt;

</description>
      <category>testing</category>
      <category>career</category>
      <category>discuss</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
