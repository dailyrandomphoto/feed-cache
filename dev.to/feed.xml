<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top 20 JavaScript tips and tricks to increase your Speed and Efficiency</title>
      <author>Coder</author>
      <pubDate>Fri, 10 Sep 2021 06:33:27 +0000</pubDate>
      <link>https://dev.to/csscodesz/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-1bmc</link>
      <guid>https://dev.to/csscodesz/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-1bmc</guid>
      <description>&lt;p&gt;¬†&lt;/p&gt;
&lt;h3&gt;Convenient and useful techniques to reduce the lines of code and pace up your Dev Work!&lt;/h3&gt;
&lt;p&gt;In our daily tasks, we get to write functions such as sorting, searching, finding unique values, passing parameters, swapping values etc, so here I present my list of shorthand techniques to write all of them as a Pro!‚úåüèª&lt;/p&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;img alt="Increase Your Performance" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftNfvGUp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;JavaScript is truly an awesome languageüíõ to learn and work with. And there can be more than one approach to reach to the same solution for given problem. In this article, we will discuss only the quickest ones.üöÄ&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;These approaches will definitely help you in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reducing the number of LOC(lines of code),&lt;/li&gt;
&lt;li&gt;Coding Competitions,&lt;/li&gt;
&lt;li&gt;Hackathons or&lt;/li&gt;
&lt;li&gt;Other time bound tasks.‚è±&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of these JavaScript Hacks uses techniques from ECMAScript6(ES2015) onwards, though the latest version is ECMAScript11(ES2020).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: All below tricks have been tested on the Console of Google Chrome.¬†&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;br&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/top-20-javascript-tips-and-tricks/"&gt;Top 20 JavaScript tips and tricks to increase your Speed and Efficiency¬†&lt;/a&gt;&lt;/b&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;br&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;br&gt;&lt;/em&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Data Modelling &amp; Apps in Salesforce</title>
      <author>Sushrut Mishra</author>
      <pubDate>Fri, 10 Sep 2021 06:30:52 +0000</pubDate>
      <link>https://dev.to/sushrutkm/data-modelling-apps-in-salesforce-3dko</link>
      <guid>https://dev.to/sushrutkm/data-modelling-apps-in-salesforce-3dko</guid>
      <description>&lt;p&gt;&lt;strong&gt;NOTE -&lt;/strong&gt; If you are completely new to CRM &amp;amp; Salesforce, I recommend you check out the previous articles of this Salesforce Admin Series.&lt;/p&gt;

&lt;p&gt;I have already talked about Database tables and Salesforce Objects in my previous articles of this series. What I missed was to tell you about the concept of Data Modelling in Salesforce.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#data-modelling"&gt;
  &lt;/a&gt;
  Data Modelling
&lt;/h1&gt;

&lt;p&gt;Data Modelling is the term given to the feature of Salesforce where data is structured with the help of database tables, objects, various applications and methods. As we have talked about the first two, in this article I'll talk about Apps in Salesforce.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#apps-in-salesforce"&gt;
  &lt;/a&gt;
  Apps in Salesforce
&lt;/h1&gt;

&lt;p&gt;If I am to speak in the simplest words, an application is like a container of all the objects, functions, and records in Salesforce. Under one Salesforce App, there are several tabs that serve their own purpose.&lt;br&gt;
Remember that Salesforce is a CRM platform and it provides companies &amp;amp; businesses with pre-defined apps, objects to manage their customer relations.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#let-me-give-you-an-example-"&gt;
  &lt;/a&gt;
  Let me give you an example -
&lt;/h4&gt;

&lt;p&gt;There is a Sales App pre-configured in salesforce and is ready to use for anyone. When you open the sales app, you'll see a number of tabs. From Accounts, Contacts to Opportunity &amp;amp; Chatter tabs. You'll get everything. All these tabs collectively form a Sales management system.&lt;/p&gt;

&lt;p&gt;You can follow along - &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Log in to your salesforce org. On the home screen, you'll see a nine-dots button below the salesforce logo. Click on it.&lt;/li&gt;
&lt;li&gt;Type Sales in the appearing search box and click on the result Sales.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zB_fNvKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ti49d1x3z3zldjkri34c.png" alt="sales app"&gt;
&lt;/li&gt;
&lt;li&gt;Look at the image below. This is the sales app of salesforce. You see all sorts of tabs to run a sales system of any business. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sg6oDk9T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rkr5emj0eob4u0yz1krh.png" alt="tabs sales"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;From managing customers and products to preparing deals and opportunities, Sales app covers it all. Each task has separate task. However, we can bind any two tabs and objects with Salesforce Relationships (already talked about in previous article).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#types-of-apps-in-salesforce"&gt;
  &lt;/a&gt;
  Types of Apps in Salesforce
&lt;/h1&gt;

&lt;p&gt;There are two types of apps in SFDC - &lt;br&gt;
&lt;strong&gt;1. Standard apps&lt;/strong&gt; - Standard apps are pre-defined &amp;amp; pre-configured in a salesforce org. It includes App Launcher, Sales, Marketing, nd every available app. However, you can customize these according to your requirements.&lt;br&gt;
&lt;strong&gt;2. Custom apps&lt;/strong&gt; - The apps are built separately from scratch to meet certain requirements are the custom apps. You can define your own set of tabs, logo, and features in a custom app.&lt;/p&gt;

&lt;p&gt;There is one more term used for apps in salesforce - &lt;br&gt;
&lt;strong&gt;Console Apps -&lt;/strong&gt; Salesforce gives you the functionality to design and develop custom UI experiences. Mostly configured for fast-paced managements and service consoles.&lt;br&gt;
These apps are called Console Apps in Salesforce.&lt;/p&gt;

</description>
      <category>database</category>
      <category>codenewbie</category>
      <category>cloud</category>
    </item>
    <item>
      <title>10 VS Code extensions every Frontend Developer should Most Use</title>
      <author>Coder</author>
      <pubDate>Fri, 10 Sep 2021 06:22:17 +0000</pubDate>
      <link>https://dev.to/csscodesz/10-vs-code-extensions-every-frontend-developer-should-most-use-2002</link>
      <guid>https://dev.to/csscodesz/10-vs-code-extensions-every-frontend-developer-should-most-use-2002</guid>
      <description>&lt;p&gt;Hello everyone, my name is Vansh and I'm a frontend developer. In this blog post, I would like to share 10 VS code extensions that every frontend developer should use. The purpose of using these extensions is to write faster, cleaner, and more consistent code. Let's Jump in!¬†&lt;/p&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/10-vs-code-extensions-every-frontend-developer-should-use/"&gt;10 VS Code extensions every Frontend Developer should use&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
    <item>
      <title>AI Project For Beginners</title>
      <author>Coder</author>
      <pubDate>Fri, 10 Sep 2021 04:17:57 +0000</pubDate>
      <link>https://dev.to/csscodesz/ai-project-for-beginners-387e</link>
      <guid>https://dev.to/csscodesz/ai-project-for-beginners-387e</guid>
      <description>&lt;p&gt;Artificial Intelligence has made a significant impact on our daily lives. Every time you scroll through social media, open Spotify, or do a quick Google search, you are using an application of AI. The AI industry has expanded massively in the past few years and is predicted to grow even further, reaching around 126 billion U.S. dollars by 2025. Multinational companies like IBM, Accenture, and Apple are actively hiring AI practitioners. The¬†median salary of an AI engineer¬†as of 2021 is $171, 715 that can go over $250,000.&lt;/p&gt;
&lt;p&gt;The field of AI is vast, and there are many areas within the industry that you can choose to specialise. Say , if you are intrigued by facial recognition systems and image generation, you can choose to work in the field of¬†computer vision.¬†If you‚Äôd like to build models that can converse with people and learn human language, you can work in the field of¬†NLP (Natural Language Processing).&lt;/p&gt;
&lt;p&gt;There is a lot of work being done today for the advancement of Artificial Intelligence. Companies need AI specialists who can build and deploy scalable models to meet growing industry demands. It isn‚Äôt tough to get started in the field of AI. While there is the complexity involved in¬†building machine learning models from scratch,¬†most AI jobs in the industry today don‚Äôt require you to know the math behind these models. Many companies require individuals who can build AI solutions, scale them, and deploy them for the end-user. Many high-level libraries and frameworks can help you do this without an in-depth knowledge of how the models work.¬†&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/artificial-intelligence-project-for-beginners/"&gt;Artificial Intelligence Project For Beginners 2021&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>All CSS Properties Every Developer Should Must Know</title>
      <author>Coder</author>
      <pubDate>Fri, 10 Sep 2021 04:15:51 +0000</pubDate>
      <link>https://dev.to/csscodesz/all-css-properties-every-developer-should-must-know-2nln</link>
      <guid>https://dev.to/csscodesz/all-css-properties-every-developer-should-must-know-2nln</guid>
      <description>&lt;p&gt;Whether you're at the beginning of your CSS journey or somewhere else, you got to admit‚Ää-‚Ääa number of CSS properties is massive.&lt;/p&gt;
&lt;p&gt;And it's easy to confuse yourself in that vast sea.¬†&lt;/p&gt;
&lt;p&gt;You're copying code from StackOverflow until you find a solution that fits. But how will that scale? Why does it even work?&lt;/p&gt;
&lt;p&gt;Most of the time, you don't care about the answer. You just focus on the result.&lt;/p&gt;
&lt;p&gt;When building a website, some of the CSS properties are must-haves; yet, it's hard to recognize them.¬†&lt;/p&gt;
&lt;p&gt;This article exists to help you solve the most common CSS problems while building a website.&lt;/p&gt;
&lt;p&gt;Let's dive into properties you cannot avoid.¬†&lt;/p&gt;

&lt;p&gt;Read More: &lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/all-css-properties-you-need-to-know-to-build-a-website/&amp;amp;ved=2ahUKEwj-otjisOfyAhVJyzgGHXG4CUcQFnoECAMQBQ&amp;amp;usg=AOvVaw2_ALco9oEYEYfcDMBxpqL0&amp;amp;cshid=1630829382032"&gt;&lt;b&gt;All CSS Properties You Need to Know to Build a Website&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Learn Solidity, Blockchain, and Smart Contracts with this Full Free Course</title>
      <author>Patrick Collins</author>
      <pubDate>Fri, 10 Sep 2021 03:40:10 +0000</pubDate>
      <link>https://dev.to/patrickalphac/learn-solidity-blockchain-and-smart-contracts-with-this-full-free-course-2bgn</link>
      <guid>https://dev.to/patrickalphac/learn-solidity-blockchain-and-smart-contracts-with-this-full-free-course-2bgn</guid>
      <description>&lt;p&gt;FreeCodeCamp has just released an entire&lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ"&gt;Solidity, Blockchain, and Smart Contract Course ‚Äì Beginner to Expert Python Tutorial&lt;/a&gt; that goes over &lt;em&gt;everything&lt;/em&gt; a successful smart contract needs to learn, all jam packed into 1 free 16 hour course.&lt;/p&gt;

&lt;p&gt;Taught, by yours truly!&lt;/p&gt;

&lt;p&gt;Each section comes with either &lt;a href="https://github.com/smartcontractkit/full-blockchain-solidity-course-py"&gt;additional reading&lt;/a&gt; or &lt;a href="https://github.com/smartcontractkit/full-blockchain-solidity-course-py"&gt;code samples&lt;/a&gt; all available in the giant mega GitHub repo associated with the course: &lt;/p&gt;

&lt;p&gt;üë©‚Äçüíª GitHub Repo: &lt;a href="https://github.com/smartcontractkit/full-blockchain-solidity-course-py"&gt;https://github.com/smartcontractkit/full-blockchain-solidity-course-py&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The GitHub Repo has &lt;em&gt;everything&lt;/em&gt; you need to be successful in the tutorial and learn solidity. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K7VAoRwn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7daucnq5a8lpijqjcpj.jpeg" alt="Learn Solidity and Blockchain"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-is-this-for"&gt;
  &lt;/a&gt;
  Who is this for?
&lt;/h2&gt;

&lt;p&gt;This course is for ANYONE looking to either get started being a smart contract engineer or get better. If you already have some knowledge, skip to the sections you like! That's why they are timestamped! If you know nothing, then start from the start. &lt;/p&gt;

&lt;p&gt;If you don't want to become a developer, even YOU can learn a ton from watching specific sections like the "Welcome to Blockchain" section. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#course-layout"&gt;
  &lt;/a&gt;
  Course Layout
&lt;/h2&gt;

&lt;p&gt;The course is divided into "lessons", which each teach foundational concepts for blockchain development. &lt;/p&gt;

&lt;p&gt;‚≠êÔ∏è Course Contents ‚≠ê&lt;br&gt;
‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=0s"&gt;(00:00:00) Introduction&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We introduce the course, and what we are going to go over! We give some helpful resources on where to get help, how best to use the course, and how to pace yourself!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=393s"&gt;(00:06:33) Lesson 0: Welcome To Blockchain&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Foundational conceptual information about what &lt;a href="https://www.investopedia.com/terms/b/blockchain.asp"&gt;blockchains&lt;/a&gt; actually are, what makes smart contracts so special, and how hybrid smart contracts and &lt;a href="https://betterprogramming.pub/what-is-a-blockchain-oracle-f5ccab8dbd72"&gt;oracles&lt;/a&gt; make smart contracts even more impactful. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=5460s"&gt;(01:31:00) Lesson 1: Welcome to Remix! Simple Storage&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We finally start coding solidity! We learn about the Remix IDE, a powerful tool to deploy our smart contracts. We learn a lot of the basic syntax of solidity. We also learn how to deploy our smart contracts! We build a contract that can store very specific data. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=7772s"&gt;(02:09:32) Lesson 2: Storage Factory&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This shorter lesson we learn some advanced topics of solidity, like the factory pattern, where we can deploy smart contracts from other smart contracts. We build a contract that can deploy Simple Storage contracts!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=8795s"&gt;(02:26:35) Lesson 3: Fund Me&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We turn up the heat in this tutorial, where we learn how to deal with paying for things, getting pricing information, working with oracles, and importing code from outside our projects. We build a sample project that can be used to help fund future projects!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=12408s"&gt;(03:26:48) Lesson 4: Web3.py Simple Storage&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We level up our coding environments by moving from Remix to our own local text editors, and start using python and &lt;a href="https://web3py.readthedocs.io/en/stable/"&gt;web3.py&lt;/a&gt; to build and deploy our smart contracts. We use the same Simple Storage contract that we've been learning with, but with web3.py! Web3.py is a foundational technology to the main one we are going to be using...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=16075s"&gt;(04:27:55) Lesson 5: Brownie Simple Storage&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here is where we learn the most powerful tool that we are going to "live" in for the rest of the course, &lt;a href="https://eth-brownie.readthedocs.io/en/stable/"&gt;Brownie&lt;/a&gt;! This is a smart contract development framework for building, testing, and deploying smart contracts easily. We learn the basics of testing as well, and the layout of a brownie project, yummy!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=18394s"&gt;(05:06:34) Lesson 6: Brownie Fund Me&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We get even more familiar with brownie by going over our Fund Me project again, and learning things like verifying out contracts, importing dependencies, forking a blockchain, and more!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=22298s"&gt;(06:11:38) Lesson 7: SmartContract Lottery&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Boom! A whole lottery application that we build from scratch! We learn how to set an entrance fee for our lottery, get a random number for a winner, Openzeppelin contracts, events &amp;amp; logging, and more!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=30062s"&gt;(08:21:02) Lesson 8: Chainlink Mix&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This quick lesson shows the layout of the &lt;a href="https://github.com/smartcontractkit/chainlink-mix"&gt;chainlink-mix&lt;/a&gt; which is a &lt;a href="https://github.com/brownie-mix"&gt;brownie mix&lt;/a&gt; that allows us to start a hybrid smart contract project right from the get-go!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=30205s"&gt;(08:23:25) Lesson 9: ERC20s, EIPs, and Token Standards&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We learn how to create our own ERC20 blockchain token! We also learn about different versions of solidity, and more!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=30893s"&gt;(08:34:53) Lesson 10: Defi &amp;amp; Aave&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An incredible dive into the world of #DeFi and what makes it so special. We learn how to interact with the &lt;a href="https://aave.com/"&gt;Aave&lt;/a&gt; protocol and use it's composability for us to make incredibly powerful applications ourselves, even if it's 100% off-chain! We learn some advanced DeFi skills like short selling and depositing collateral. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=35420s"&gt;(09:50:20) Lesson 11: NFTs&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Art, art, art!! üé® We learn how to create art on the blockchain, but with unlimited customization, allowing us to make games, generative art, and more! We make a few adorable randomized dogs and deploy them to the blockchain and &lt;a href="https://opensea.io/"&gt;Opensea&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=42555s"&gt;(11:49:15) Lesson 12: Upgrades&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A very advanced tutorial on deploying contracts that can be upgraded using the &lt;a href="https://blog.openzeppelin.com/the-transparent-proxy-pattern/"&gt;transparent proxy pattern&lt;/a&gt;. This lesson goes a bit into Yul code, which is the low level code of solidity, and some of the dangers and advantages of &lt;code&gt;delegatecall&lt;/code&gt;.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=46086s"&gt;(12:48:06) Lesson 13: Full Stack Defi&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We now add a front-end! We don't go deep into how to create front-ends, so if you're a little new on typescript or javascript, you might want to watch &lt;a href="https://www.freecodecamp.org/news/learn-typescript-with-this-crash-course/"&gt;FreeCodeCamps Typescript crash course.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;‚å®Ô∏è &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ&amp;amp;t=58456s"&gt;(16:14:16) Closing and Summary&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;At long last, we end this tutorial, and you leave being an amazing smart contract engineer! We talk about joining the community, where to go next, and how to live with this newfound skill of yours!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can see a more detailed inventory in the &lt;a href="https://github.com/smartcontractkit/full-blockchain-solidity-course-py"&gt;GitHub repo&lt;/a&gt;, it's &lt;em&gt;very&lt;/em&gt; thorough. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-watch"&gt;
  &lt;/a&gt;
  How to watch
&lt;/h2&gt;

&lt;p&gt;This is a course that is long, so don't go through the whole thing in 1 go! 30 minutes at a time is perfect, and will give your brain plenty of time of absorb all the information you're getting and make you a better smart contract engineer. &lt;/p&gt;

&lt;p&gt;Maybe even grab a buddy to keep each other accountable, by the end of the course, you'll have years of experience under your belt already! This course is an entire data dump of knowledge from years of working with smart contracts. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-should-i-be-expected-to-use"&gt;
  &lt;/a&gt;
  What should I be expected to use?
&lt;/h2&gt;

&lt;p&gt;You'll want a text editor like &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt; and a number of dependencies installed. Don't worry, we go over everything!&lt;/p&gt;

&lt;p&gt;Be sure to @ me at &lt;a href="https://twitter.com/PatrickAlphaC"&gt;@patrickalphac&lt;/a&gt; if you enjoyed the content or learnt something. Joining the community is one of the best ways to continue learning, and put your skills to use!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Twitter - Just get on Twitter and say hi to someone!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/9zk7snTfWe"&gt;Brownie Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ethereum.org/en/"&gt;Ethereum Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/2YHSAey"&gt;Chainlink Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/ethdev/"&gt;Reddit ethdev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#hackathons"&gt;
  &lt;/a&gt;
  Hackathons
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chain.link/hackathon"&gt;CL Hackathon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ethglobal.co/"&gt;ETH Global&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ETHIndiaco"&gt;ETH India&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#learning-more"&gt;
  &lt;/a&gt;
  Learning More
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cryptozombies.io/"&gt;CryptoZombies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCY0xL8V6NzzFcwzHCgB8orQ"&gt;Dapp University&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.chainshot.com/courses"&gt;ChainShot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://academy.ivanontech.com/"&gt;Ivan on Tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCZM8XQjNOyG2ElPpEUtNasA"&gt;Eat the Blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCn-3f8tw_E1jZvhuHatROwA"&gt;Patrick Collins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC_HI2i2peo1A-STdG22GFsA"&gt;Austin Griffith&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/boyindasouth"&gt;Nader Dabit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ethereum.org/en/"&gt;Ethereum.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>solidity</category>
      <category>blockchain</category>
      <category>python</category>
      <category>ethereum</category>
    </item>
    <item>
      <title>700 problems to understand you complete algorithmic programming.</title>
      <author>Md Sagor Sarkar</author>
      <pubDate>Fri, 10 Sep 2021 03:37:50 +0000</pubDate>
      <link>https://dev.to/mdsagor07/700-problems-to-understand-you-complete-algorithmic-programming-m9a</link>
      <guid>https://dev.to/mdsagor07/700-problems-to-understand-you-complete-algorithmic-programming-m9a</guid>
      <description>&lt;p&gt;1.Segment Tree:&lt;/p&gt;

&lt;p&gt;To Read :&lt;br&gt;
&lt;a href="http://www.topcoder.com/tc?d1=tutorials&amp;amp;d2=lowestCommonAncestor&amp;amp;module=Static"&gt;http://www.topcoder.com/tc?d1=tutorials&amp;amp;d2=lowestCommonAncestor&amp;amp;module=Static&lt;/a&gt;&lt;br&gt;
&lt;a href="http://ronzii.wordpress.com/2011/07/08/segment-tree-tutorial/"&gt;http://ronzii.wordpress.com/2011/07/08/segment-tree-tutorial/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://se7so.blogspot.in/2012/12/segment-trees-and-lazy-propagation.html"&gt;http://se7so.blogspot.in/2012/12/segment-trees-and-lazy-propagation.html&lt;/a&gt;&lt;br&gt;
&lt;a href="http://olympiad.cs.uct.ac.za/presentations/camp3_2007/interval_trees.pdf"&gt;http://olympiad.cs.uct.ac.za/presentations/camp3_2007/interval_trees.pdf&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/blog/entry/6281"&gt;http://codeforces.com/blog/entry/6281&lt;/a&gt;&lt;br&gt;
&lt;a href="http://apps.topcoder.com/forums/?module=Thread&amp;amp;threadID=651820&amp;amp;start=0&amp;amp;mc=2#1146133"&gt;http://apps.topcoder.com/forums/?module=Thread&amp;amp;threadID=651820&amp;amp;start=0&amp;amp;mc=2#1146133&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.algorithmist.com/index.php/Segmented_Trees"&gt;http://www.algorithmist.com/index.php/Segmented_Trees&lt;/a&gt;&lt;br&gt;
&lt;a href="http://letuskode.blogspot.in/2013/01/segtrees.html"&gt;http://letuskode.blogspot.in/2013/01/segtrees.html&lt;/a&gt;&lt;br&gt;
&lt;a href="http://wcipeg.com/wiki/Heavy-light_decomposition"&gt;http://wcipeg.com/wiki/Heavy-light_decomposition&lt;/a&gt;&lt;br&gt;
&lt;a href="http://discuss.codechef.com/questions/5960/rnestescape-from-the-mines"&gt;http://discuss.codechef.com/questions/5960/rnestescape-from-the-mines&lt;/a&gt;&lt;br&gt;
&lt;a href="http://ideone.com/dPS5N"&gt;http://ideone.com/dPS5N&lt;/a&gt; (Heavy Light implementation).&lt;br&gt;
&lt;a href="https://sites.google.com/site/indy256/algo/heavy_light"&gt;https://sites.google.com/site/indy256/algo/heavy_light&lt;/a&gt; (Heavy Light implementation).&lt;/p&gt;

&lt;p&gt;Problems:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.spoj.com/problems/GSS1"&gt;http://www.spoj.com/problems/GSS1&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/GSS2"&gt;http://www.spoj.com/problems/GSS2&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/GSS3"&gt;http://www.spoj.com/problems/GSS3&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/GSS4"&gt;http://www.spoj.com/problems/GSS4&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/GSS5"&gt;http://www.spoj.com/problems/GSS5&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/GSS6"&gt;http://www.spoj.com/problems/GSS6&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/GSS7"&gt;http://www.spoj.com/problems/GSS7&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/ANDROUND/"&gt;http://www.spoj.com/problems/ANDROUND/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/BRCKTS/"&gt;http://www.spoj.com/problems/BRCKTS/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/DQUERY/"&gt;http://www.spoj.com/problems/DQUERY/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/FREQUENT/"&gt;http://www.spoj.com/problems/FREQUENT/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/HEAPULM/"&gt;http://www.spoj.com/problems/HEAPULM/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/HELPR2D2/"&gt;http://www.spoj.com/problems/HELPR2D2/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/KGSS/"&gt;http://www.spoj.com/problems/KGSS/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/MKTHNUM/"&gt;http://www.spoj.com/problems/MKTHNUM/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/NICEDAY/"&gt;http://www.spoj.com/problems/NICEDAY/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/YODANESS/"&gt;http://www.spoj.com/problems/YODANESS/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/INCSEQ/"&gt;http://www.spoj.pl/problems/INCSEQ/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/INCDSEQ/"&gt;http://www.spoj.pl/problems/INCDSEQ/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/KQUERY/"&gt;http://www.spoj.pl/problems/KQUERY/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/QTREE/"&gt;http://www.spoj.pl/problems/QTREE/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/QTREE2/"&gt;http://www.spoj.pl/problems/QTREE2/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/QTREE3/"&gt;http://www.spoj.pl/problems/QTREE3/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/QTREE4/"&gt;http://www.spoj.com/problems/QTREE4/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/QTREE5/"&gt;http://www.spoj.com/problems/QTREE5/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/CTRICK/"&gt;http://www.spoj.pl/problems/CTRICK/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/MATSUM/"&gt;http://www.spoj.pl/problems/MATSUM/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/RATING/"&gt;http://www.spoj.pl/problems/RATING/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/RRSCHED/"&gt;http://www.spoj.pl/problems/RRSCHED/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/SUPPER/"&gt;http://www.spoj.pl/problems/SUPPER/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/ORDERS/"&gt;http://www.spoj.pl/problems/ORDERS/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/MULTQ3/"&gt;http://www.spoj.com/problems/MULTQ3/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/RPAR/"&gt;http://www.spoj.com/problems/RPAR/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/PATULJCI/"&gt;http://www.spoj.com/problems/PATULJCI/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/DISUBSTR/"&gt;http://www.spoj.com/problems/DISUBSTR/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/HORRIBLE"&gt;http://www.spoj.com/problems/HORRIBLE&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/IOPC1207/"&gt;http://www.spoj.pl/problems/IOPC1207/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/SEGSQRSS/"&gt;http://www.spoj.com/problems/SEGSQRSS/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/ORDERSET/"&gt;http://www.spoj.com/problems/ORDERSET/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/HELPR2D2/"&gt;http://www.spoj.com/problems/HELPR2D2/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/TEMPLEQ"&gt;http://www.spoj.com/problems/TEMPLEQ&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.codechef.com/problems/QTREE"&gt;http://www.codechef.com/problems/QTREE&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.codechef.com/problems/LEBOBBLE"&gt;http://www.codechef.com/problems/LEBOBBLE&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.codechef.com/problems/DGCD"&gt;http://www.codechef.com/problems/DGCD&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.codechef.com/problems/QUERY"&gt;http://www.codechef.com/problems/QUERY&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/280/D"&gt;http://codeforces.com/problemset/problem/280/D&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/117/E"&gt;http://codeforces.com/problemset/problem/117/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/167/D"&gt;http://codeforces.com/problemset/problem/167/D&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/266/E"&gt;http://codeforces.com/problemset/problem/266/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/145/E"&gt;http://codeforces.com/problemset/problem/145/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/226/E"&gt;http://codeforces.com/problemset/problem/226/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/311/C"&gt;http://codeforces.com/problemset/problem/311/C&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/276/E"&gt;http://codeforces.com/problemset/problem/276/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/221/D"&gt;http://codeforces.com/problemset/problem/221/D&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/174/C"&gt;http://codeforces.com/problemset/problem/174/C&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/301/D"&gt;http://codeforces.com/problemset/problem/301/D&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/61/E"&gt;http://codeforces.com/problemset/problem/61/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/103/D"&gt;http://codeforces.com/problemset/problem/103/D&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/165/D"&gt;http://codeforces.com/problemset/problem/165/D&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/52/C"&gt;http://codeforces.com/problemset/problem/52/C&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/85/D"&gt;http://codeforces.com/problemset/problem/85/D&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/242/E"&gt;http://codeforces.com/problemset/problem/242/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/111/B"&gt;http://codeforces.com/problemset/problem/111/B&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/220/B"&gt;http://codeforces.com/problemset/problem/220/B&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/195/E"&gt;http://codeforces.com/problemset/problem/195/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/219/E"&gt;http://codeforces.com/problemset/problem/219/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/281/D"&gt;http://codeforces.com/problemset/problem/281/D&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/121/E"&gt;http://codeforces.com/problemset/problem/121/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/86/D"&gt;http://codeforces.com/problemset/problem/86/D&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/182/C"&gt;http://codeforces.com/problemset/problem/182/C&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/19/D"&gt;http://codeforces.com/problemset/problem/19/D&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/258/E"&gt;http://codeforces.com/problemset/problem/258/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/190/E"&gt;http://codeforces.com/problemset/problem/190/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/295/E"&gt;http://codeforces.com/problemset/problem/295/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/160/E"&gt;http://codeforces.com/problemset/problem/160/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/163/E"&gt;http://codeforces.com/problemset/problem/163/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/192/E"&gt;http://codeforces.com/problemset/problem/192/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/316/E3"&gt;http://codeforces.com/problemset/problem/316/E3&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/280/E"&gt;http://codeforces.com/problemset/problem/280/E&lt;/a&gt;&lt;br&gt;
&lt;a href="http://codeforces.com/problemset/problem/238/D"&gt;http://codeforces.com/problemset/problem/238/D&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SRM 310 -&amp;gt; Floating Median&lt;br&gt;
&lt;a href="http://acm.pku.edu.cn/JudgeOnline/problem?id=1986"&gt;http://acm.pku.edu.cn/JudgeOnline/problem?id=1986&lt;/a&gt;&lt;br&gt;
&lt;a href="http://acm.pku.edu.cn/JudgeOnline/problem?id=2374"&gt;http://acm.pku.edu.cn/JudgeOnline/problem?id=2374&lt;/a&gt;&lt;br&gt;
&lt;a href="http://acmicpc-live-archive.uva.es/nuevoportal/data/problem.php?p=2045"&gt;http://acmicpc-live-archive.uva.es/nuevoportal/data/problem.php?p=2045&lt;/a&gt;&lt;br&gt;
&lt;a href="http://acm.pku.edu.cn/JudgeOnline/problem?id=2763"&gt;http://acm.pku.edu.cn/JudgeOnline/problem?id=2763&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.pl/problems/QTREE2/"&gt;http://www.spoj.pl/problems/QTREE2/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://acm.uva.es/p/v109/10938.html"&gt;http://acm.uva.es/p/v109/10938.html&lt;/a&gt;&lt;br&gt;
&lt;a href="http://acm.sgu.ru/problem.php?contest=0&amp;amp;problem=155"&gt;http://acm.sgu.ru/problem.php?contest=0&amp;amp;problem=155&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;BIT (also called Fenwick Tree).
Mostly problems of BIT can also be solved by Segment Tree. But it is shorted and faster to code. Hence it is sometimes very easy.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To Read:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://community.topcoder.com/tc?module=Static&amp;amp;d1=tutorials&amp;amp;d2=binaryIndexedTrees"&gt;http://community.topcoder.com/tc?module=Static&amp;amp;d1=tutorials&amp;amp;d2=binaryIndexedTrees&lt;/a&gt;&lt;br&gt;
&lt;a href="http://p--np.blogspot.in/2011/04/binary-indexed-tree.html"&gt;http://p--np.blogspot.in/2011/04/binary-indexed-tree.html&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.algorithmist.com/index.php/Fenwick_tree"&gt;http://www.algorithmist.com/index.php/Fenwick_tree&lt;/a&gt;&lt;br&gt;
&lt;a href="http://en.wikipedia.org/wiki/Fenwick_tree"&gt;http://en.wikipedia.org/wiki/Fenwick_tree&lt;/a&gt;&lt;br&gt;
&lt;a href="http://pavelsimo.blogspot.in/2012/09/counting-inversions-in-array-using-BIT.html"&gt;http://pavelsimo.blogspot.in/2012/09/counting-inversions-in-array-using-BIT.html&lt;/a&gt;&lt;br&gt;
&lt;a href="http://petr-mitrichev.blogspot.in/2013/05/fenwick-tree-range-updates.html"&gt;http://petr-mitrichev.blogspot.in/2013/05/fenwick-tree-range-updates.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Problems:&lt;br&gt;
&lt;a href="http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=10976"&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=10976&lt;/a&gt;&lt;br&gt;
And try some earlier problems which are solvable by this data structure to practice more.&lt;br&gt;
Try mobile problem of IOI. 2D BIT.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Dynamic Programming (DP):&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To Read:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Edit_distance"&gt;http://en.wikipedia.org/wiki/Edit_distance&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.codechef.com/wiki/tutorial-dynamic-programming"&gt;http://www.codechef.com/wiki/tutorial-dynamic-programming&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Problems:&lt;/p&gt;

&lt;p&gt;SGU Problems :  269, 273, 304, 317, 356, 396, 445, 447, 458, 489, 494&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/SAMER08D/"&gt;http://www.spoj.com/problems/SAMER08D/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://acm.sgu.ru/problem.php?contest=0&amp;amp;problem=199"&gt;http://acm.sgu.ru/problem.php?contest=0&amp;amp;problem=199&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/MDOLLS/"&gt;http://www.spoj.com/problems/MDOLLS/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/MSTICK/"&gt;http://www.spoj.com/problems/MSTICK/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/MCARDS/"&gt;http://www.spoj.com/problems/MCARDS/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/MIXTURES/"&gt;http://www.spoj.com/problems/MIXTURES/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/SCUBADIV/"&gt;http://www.spoj.com/problems/SCUBADIV/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000355"&gt;http://z-trening.com/tasks.php?show_task=5000000355&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000286"&gt;http://z-trening.com/tasks.php?show_task=5000000286&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000465"&gt;http://z-trening.com/tasks.php?show_task=5000000465&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000310"&gt;http://z-trening.com/tasks.php?show_task=5000000310&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000778"&gt;http://z-trening.com/tasks.php?show_task=5000000778&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000363"&gt;http://z-trening.com/tasks.php?show_task=5000000363&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000001024"&gt;http://z-trening.com/tasks.php?show_task=5000001024&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/VOCV/"&gt;http://www.spoj.com/problems/VOCV/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/PT07F/"&gt;http://www.spoj.com/problems/PT07F/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/PT07X/"&gt;http://www.spoj.com/problems/PT07X/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000070"&gt;http://z-trening.com/tasks.php?show_task=5000000070&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000569"&gt;http://z-trening.com/tasks.php?show_task=5000000569&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000441"&gt;http://z-trening.com/tasks.php?show_task=5000000441&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000050"&gt;http://z-trening.com/tasks.php?show_task=5000000050&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/RENT/"&gt;http://www.spoj.com/problems/RENT/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/INCSEQ/"&gt;http://www.spoj.com/problems/INCSEQ/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/INCDSEQ/"&gt;http://www.spoj.com/problems/INCDSEQ/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000624"&gt;http://z-trening.com/tasks.php?show_task=5000000624&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000742"&gt;http://z-trening.com/tasks.php?show_task=5000000742&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000749"&gt;http://z-trening.com/tasks.php?show_task=5000000749&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000001044"&gt;http://z-trening.com/tasks.php?show_task=5000001044&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/SEQ/"&gt;http://www.spoj.com/problems/SEQ/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/SPP/"&gt;http://www.spoj.com/problems/SPP/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000078"&gt;http://z-trening.com/tasks.php?show_task=5000000078&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000543"&gt;http://z-trening.com/tasks.php?show_task=5000000543&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000718"&gt;http://z-trening.com/tasks.php?show_task=5000000718&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000237"&gt;http://z-trening.com/tasks.php?show_task=5000000237&lt;/a&gt;&lt;br&gt;
&lt;a href="http://z-trening.com/tasks.php?show_task=5000000311"&gt;http://z-trening.com/tasks.php?show_task=5000000311&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/MORSE/"&gt;http://www.spoj.com/problems/MORSE/&lt;/a&gt; (dp + trie) Very Hard.&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/MPOLY/"&gt;http://www.spoj.com/problems/MPOLY/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/CVXPOLY/"&gt;http://www.spoj.com/problems/CVXPOLY/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/MTRIAREA/"&gt;http://www.spoj.com/problems/MTRIAREA/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://acm.zju.edu.cn/onlinejudge/showContestProblem.do?problemId=2222"&gt;http://acm.zju.edu.cn/onlinejudge/showContestProblem.do?problemId=2222&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.lightoj.com/login_main.php?url=volume_showproblem.php?problem=1122"&gt;http://www.lightoj.com/login_main.php?url=volume_showproblem.php?problem=1122&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.lightoj.com/login_main.php?url=volume_showproblem.php?problem=1122"&gt;http://www.lightoj.com/login_main.php?url=volume_showproblem.php?problem=1122&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.lightoj.com/login_main.php?url=volume_showproblem.php?problem=1125"&gt;http://www.lightoj.com/login_main.php?url=volume_showproblem.php?problem=1125&lt;/a&gt;&lt;br&gt;
Game (IOI 2008, Practice session)&lt;br&gt;
&lt;a href="http://www.topcoder.com/tc?d1=tutorials&amp;amp;d2=dynProg&amp;amp;module=Static"&gt;http://www.topcoder.com/tc?d1=tutorials&amp;amp;d2=dynProg&amp;amp;module=Static&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Graph Theory:&lt;br&gt;
&lt;a href="http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=10736"&gt;http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=10736&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/TRAFFICN/"&gt;http://www.spoj.com/problems/TRAFFICN/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/PA06ANT/"&gt;http://www.spoj.com/problems/PA06ANT/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/PT07Z/"&gt;http://www.spoj.com/problems/PT07Z/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/EXPLOSN/"&gt;http://www.spoj.com/problems/EXPLOSN/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/BUGLIFE/"&gt;http://www.spoj.com/problems/BUGLIFE/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/SSORT/"&gt;http://www.spoj.com/problems/SSORT/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/ARBITRAG/"&gt;http://www.spoj.com/problems/ARBITRAG/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/CODE/"&gt;http://www.spoj.com/problems/CODE/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/FROGGER/"&gt;http://www.spoj.com/problems/FROGGER/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/GCPC11C/"&gt;http://www.spoj.com/problems/GCPC11C/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/GCPC11J/"&gt;http://www.spoj.com/problems/GCPC11J/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/GHOSTS/"&gt;http://www.spoj.com/problems/GHOSTS/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/MAKETREE/"&gt;http://www.spoj.com/problems/MAKETREE/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/PARADOX/"&gt;http://www.spoj.com/problems/PARADOX/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/QTREE/"&gt;http://www.spoj.com/problems/QTREE/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/QTREE2/"&gt;http://www.spoj.com/problems/QTREE2/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/QUEEN/"&gt;http://www.spoj.com/problems/QUEEN/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/ROBOTGRI/"&gt;http://www.spoj.com/problems/ROBOTGRI/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/ELEVTRBL/"&gt;http://www.spoj.com/problems/ELEVTRBL/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/TRIPINV/"&gt;http://www.spoj.com/problems/TRIPINV/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/CAPCITY/"&gt;http://www.spoj.com/problems/CAPCITY/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.spoj.com/problems/KOICOST/"&gt;http://www.spoj.com/problems/KOICOST/&lt;/a&gt;&lt;br&gt;
SHARE&lt;/p&gt;

</description>
    </item>
    <item>
      <title>To Do: Learn Vue</title>
      <author>Taylor Sieling</author>
      <pubDate>Fri, 10 Sep 2021 03:23:50 +0000</pubDate>
      <link>https://dev.to/taylorsieling/to-do-learn-vue-4kgj</link>
      <guid>https://dev.to/taylorsieling/to-do-learn-vue-4kgj</guid>
      <description>&lt;p&gt;To dip my toes into the ocean of Vue, I created a super simple, backend-less application. Here is a bit about my journey:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#setting-up-vue"&gt;
  &lt;/a&gt;
  Setting Up Vue
&lt;/h4&gt;

&lt;p&gt;I started by creating an index.html file and added the Vue.js script provided in the &lt;a href="https://vuejs.org/v2/guide/"&gt;Getting Started&lt;/a&gt; documentation. I decided to stick with this quick and easy "installation" as I was just starting out with the framework. However, I look forward to using NPM and CLI in the future. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#creating-a-vue-instance"&gt;
  &lt;/a&gt;
  Creating a Vue Instance
&lt;/h4&gt;

&lt;p&gt;As stated in the &lt;a href="https://vuejs.org/v2/guide/instance.html"&gt;documentation&lt;/a&gt;, "every Vue application starts by creating a new Vue instance with the Vue function". Mine looked like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const app = new Vue({

});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to tell Vue where to live on the page, I added an 'el' property to my Vue object and assigned it to the ID #app. In my index.html file, I created a main tag with an ID of app - and I was ready to roll!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.js

const app = new Vue({
 el: '#app'
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;index.html

&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
    //head stuff
 &amp;lt;/head&amp;gt;
 &amp;lt;body class="bg-black"&amp;gt;
    &amp;lt;main id="app"&amp;gt;
    &amp;lt;/main&amp;gt;
    &amp;lt;script src="https://cdn.jsdelivr.net/npm/vue@2". 
    &amp;lt;/script&amp;gt;
    &amp;lt;script src="app.js" charset="utf-8"&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#the-to-do-form"&gt;
  &lt;/a&gt;
  The To Do Form
&lt;/h4&gt;

&lt;p&gt;To start on my To Do App, I needed a To Do form. I won't get too into the HTML of it all, but I really enjoyed how Vue let me write more straight-forward HTML rather than JSX. I created a form, with a To Do input field and a Submit button.&lt;/p&gt;

&lt;p&gt;To call a Vue function when the form is submitted, I used the &lt;code&gt;v-on&lt;/code&gt; shorthand &lt;code&gt;@submit.prevent&lt;/code&gt; and set it equal to a function called &lt;code&gt;addTodo&lt;/code&gt;. &lt;code&gt;.prevent&lt;/code&gt; is a handy Vue modifier that tells the &lt;code&gt;v-on&lt;/code&gt; directive to call event.preventDefault() on the triggered event.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;index.html

&amp;lt;form @submit.prevent="addTodo"&amp;gt;
   &amp;lt;div class="subtitle"&amp;gt;&amp;lt;label for="newTodo"&amp;gt;Add Task&amp;lt;/label&amp;gt;&amp;lt;/div&amp;gt;
   &amp;lt;input v-model="newTodo" class="input" type="type" name="newTodo" id="newTodo"&amp;gt;
   &amp;lt;button type="submit" name="button"&amp;gt;+&amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To create the function, I added a methods object to my Vue instance and wrote a function called &lt;code&gt;addTodo&lt;/code&gt;. To use the function, I needed to store the user input into a Vue data object. I created an attribute called &lt;code&gt;newTodo&lt;/code&gt; and set it equal to an empty string, as well as an attribute called &lt;code&gt;todos&lt;/code&gt; set to an empty array. &lt;/p&gt;

&lt;p&gt;Now, I could store the title of my To Do input and push it to my Todos array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const app = new Vue({
    el: '#app',
    data: {
        title: 'Getting Stuff Done',
        newTodo: '',
        todos: [],
    },
    methods: {
        addTodo() {
            console.log(this.newTodo);
            this.todos.push({
                title: this.newTodo,
            });
            this.newTodo = '';
        },
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;v-model&lt;/code&gt; attribute on my input tag allowed me to link the user input to the Vue data object. As stated in the &lt;a href="https://vuejs.org/v2/guide/instance.html#Data-and-Methods"&gt;documentation&lt;/a&gt;, "When a Vue instance is created, it adds all the properties found in its data object to Vue‚Äôs reactivity system. When the values of those properties change, the view will ‚Äúreact‚Äù, updating to match the new values."&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#displaying-the-to-do-list"&gt;
  &lt;/a&gt;
  Displaying the To Do List
&lt;/h4&gt;

&lt;p&gt;Of course, after submitting a To Do item, you want the item to display on the page. With the use of "Mustache" syntax, I did some simple text interpolation to create my list. The &lt;code&gt;v-for&lt;/code&gt; directive on the list item is used to render the element or template block multiple times based on the source data. So, for each todo in my todos array, a new list item is created.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;index.html

&amp;lt;ul&amp;gt;
  &amp;lt;li v-for="todo in todos"&amp;gt;
    &amp;lt;input type="checkbox" v-model="todo.done"&amp;gt;
    &amp;lt;span :class="{ done: todo.done }"&amp;gt;{{todo.title}}&amp;lt;/span&amp;gt;
    &amp;lt;button @click="removeTodo(todo)" type="button" 
     name="remove"&amp;gt;Remove&amp;lt;/button&amp;gt;
  &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I also went ahead and added a checkbox to indicate when a task has been completed. This process involved giving my &lt;code&gt;newTodo&lt;/code&gt; a 'done' attribute initially set to false, creating a checkbox with a &lt;code&gt;v-model&lt;/code&gt; of 'todo.done', and setting my CSS to strikeout items when &lt;code&gt;todo.done&lt;/code&gt; is true.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#removing-todo-items"&gt;
  &lt;/a&gt;
  Removing Todo Items
&lt;/h4&gt;

&lt;p&gt;I wanted my app to have the option to remove Todo items. I started by adding a 'Remove' button to each Todo list item, as seen above. I used the &lt;code&gt;v-on&lt;/code&gt; shorthand &lt;code&gt;@click&lt;/code&gt; and set it equal to a function called &lt;code&gt;removeTodo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Just like with &lt;code&gt;addTodo&lt;/code&gt;, I created a &lt;code&gt;removeTodo&lt;/code&gt; function in my Vue methods object and removed individual Todos using the &lt;code&gt;.splice&lt;/code&gt; method. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#completing-all-todo-items"&gt;
  &lt;/a&gt;
  Completing All Todo Items
&lt;/h4&gt;

&lt;p&gt;Lastly, I wanted the ability to mark all Todos from the list as complete at once. I mean, everyone loves that feeling, right? &lt;/p&gt;

&lt;p&gt;Just like with my &lt;code&gt;removeTodo&lt;/code&gt; function, I created a button, set it equal to an &lt;code&gt;allDone&lt;/code&gt; function, and wrote the function in my Vue methods object. With a simple forEach loop, I set &lt;code&gt;todo.done&lt;/code&gt; to true for all of my todos. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reflection"&gt;
  &lt;/a&gt;
  Reflection
&lt;/h4&gt;

&lt;p&gt;Although this app is really simple, I really enjoyed playing around in Vue. I was surprised at just how easy it was to catch on to its syntaxes and functionality. I have a lot more research to do and many more apps to build, but I can definitely see myself falling in love with Vue as a framework.&lt;/p&gt;

&lt;p&gt;Thanks for following on my journey into the world of Vue! You can find the &lt;a href="https://github.com/taylorsieling/to-do-vue"&gt;Repo&lt;/a&gt; on my &lt;a href="https://github.com/taylorsieling"&gt;Github&lt;/a&gt;, as well as a &lt;a href="https://taylorsieling.dev/to-do-vue/"&gt;demo of the app here.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Updates on dev.to clone in Angular - Sept 10</title>
      <author>Ajit Singh</author>
      <pubDate>Fri, 10 Sep 2021 03:17:58 +0000</pubDate>
      <link>https://dev.to/this-is-angular/updates-on-dev-to-clone-in-angular-sept-10-22mj</link>
      <guid>https://dev.to/this-is-angular/updates-on-dev-to-clone-in-angular-sept-10-22mj</guid>
      <description>&lt;h5&gt;
  &lt;a href="#help-me-improve-these-updates-by-giving-suggestions"&gt;
  &lt;/a&gt;
  Help me improve these updates by giving suggestions.
&lt;/h5&gt;

&lt;p&gt;Github Repo - &lt;a href="https://github.com/ajitsinghkaler/devto-clone"&gt;https://github.com/ajitsinghkaler/devto-clone&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Deployed on Firebase - &lt;a href="https://dev-toclone.firebaseapp.com/"&gt;https://dev-toclone.firebaseapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Last week I did some research on how to implement login or signup in the clone but was to no avail the Oauth2 is still in private alpha. Then I tried keys with local storage too which did not work because the API does not allow you to make calls with the api_key header its allows in postman but nit in the browser. If it was allowed I would have saved the key in local storage and delete it on sign out but with that out of the window only a few things are left in this project&lt;/p&gt;

&lt;p&gt;Adding tests&lt;br&gt;
Tags Page&lt;br&gt;
Cleanup&lt;/p&gt;

&lt;p&gt;After understanding that I will not be able to add any post features to the app I was bit dejected that is why I did not post any updates last week.&lt;/p&gt;

&lt;p&gt;Now what I did this week I added a user details page and the top dropdown that is in the header. To implement the user details page was fairly simple as the api does not give much  details of the the user and does not even allow me signin. So I built a fairly simple webpage. There was only thing we have the article component in the home module and we needed it in the user module too so to separate them I used a module for one component ie SCAM. You can check it &lt;a href="https://github.com/ajitsinghkaler/devto-clone/blob/9fae16ddfe4d74818a63bf2265c927bb55449499/src/app/pages/home/articles/article-card/article-card.component.ts#L25"&gt;here&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Most of the stuff in my dev.to clone is finished. Next time I'll add tags and do finalization.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#issue"&gt;
  &lt;/a&gt;
  Issue
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/issues/37"&gt;Things left to do&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#commits"&gt;
  &lt;/a&gt;
  Commits
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/commit/ac0726293f86dac2131efcc539456a5462d68010"&gt;Header Dropdown&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/commit/9fae16ddfe4d74818a63bf2265c927bb55449499"&gt;User details page added&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We can only learn new things on this so suggest some cool new experiments that you want me to do on this repo.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>typescript</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Server-rendered modal forms on Rails with CableReady, Mrujs, Stimulus, and Tailwind</title>
      <author>David Colby</author>
      <pubDate>Fri, 10 Sep 2021 03:09:11 +0000</pubDate>
      <link>https://dev.to/davidcolbyatx/server-rendered-modal-forms-on-rails-with-cableready-mrujs-stimulus-and-tailwind-2mne</link>
      <guid>https://dev.to/davidcolbyatx/server-rendered-modal-forms-on-rails-with-cableready-mrujs-stimulus-and-tailwind-2mne</guid>
      <description>&lt;p&gt;The Rails ecosystem continues to thrive, and Rails developers have all the tools they need to build modern, reactive, scalable web applications quickly and efficiently. If you care about delivering exceptional user experiences, your options in Rails-land have never been better.&lt;/p&gt;

&lt;p&gt;Today we‚Äôre going to dive into this ecosystem and use two cutting edge Rails projects to allow users to submit forms that are rendered inside of a modal.&lt;/p&gt;

&lt;p&gt;The form will open in a modal with content populated dynamically by the server, the server will process the form submission, and the DOM will updated without a full-page turn.&lt;/p&gt;

&lt;p&gt;To accomplish this, we‚Äôll use &lt;a href="https://stimulus.hotwired.dev/"&gt;Stimulus&lt;/a&gt; for the front-end interactivity, &lt;a href="https://cableready.stimulusreflex.com/v/v5/"&gt;CableReady‚Äôs&lt;/a&gt; brand new &lt;a href="https://cableready.stimulusreflex.com/v/v5/cable-car"&gt;CableCar feature&lt;/a&gt; to send content back from the server, and &lt;a href="https://mrujs.com/"&gt;Mrujs&lt;/a&gt; to enable AJAX requests and to automatically process CableCar‚Äôs operations.&lt;/p&gt;

&lt;p&gt;It‚Äôll be pretty fancy.&lt;/p&gt;

&lt;p&gt;When we‚Äôre finished, our application will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dle6oOfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7k6dxxmvs81mb4ezy91.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dle6oOfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7k6dxxmvs81mb4ezy91.gif" alt="A screen recording of an initially empty web page with a header that reads Customers and a link to create new customers. The user clicks on the new customer link adn a pop-up modal displays on the screen. The user types in a name, creating a customer and the page updates automatically with the new customer's inforamtion. The user continues to add and update a few more customer records, each time the form opens in a modal and the page updates with the user's change immediately."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article includes a fair amount of JavaScript and assumes a solid understanding of the basics of Ruby on Rails.&lt;/p&gt;

&lt;p&gt;If you've never used Rails before, this article might move a little too quickly for you. While comfort with Rails and JavaScript are needed, you don't need to have any prior experience with CableReady or Stimulus.&lt;/p&gt;

&lt;p&gt;As usual, you can find the complete source code for this article on &lt;a href="https://github.com/DavidColby/tiny_crm/tree/implement-modals"&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's dive in!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;If you prefer to skip the setup steps and jump right in to coding, you can clone the main branch of &lt;a href="https://github.com/DavidColby/tiny_crm/tree/main"&gt;this repo&lt;/a&gt; and then scroll down to the Customers Layout section.&lt;/p&gt;

&lt;p&gt;To get everything installed, we‚Äôre going to walk on the wild side by using the newly released, very-much-still-alpha &lt;a href="https://github.com/rails/jsbundling-rails"&gt;jsbundling-rails&lt;/a&gt; and &lt;a href="https://github.com/rails/cssbundling-rails"&gt;cssbundling-rails&lt;/a&gt; gems.&lt;/p&gt;

&lt;p&gt;First, we‚Äôll create a Rails application and use the alpha js/cssbundling gems to install Webpack and Tailwind, from your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rails new tiny_crm --skip-webpack-install --skip-javascript
cd tiny_crm
bundle add jsbundling-rails cssbundling-rails
rails javascript:install:webpack
rails css:install:tailwind
bin/dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that these gems are VERY new, if you bump into errors, check the documentation to see if commands have changed or reach out to me and let me know what error you‚Äôre encountering.&lt;/p&gt;

&lt;p&gt;With Webpack and Tailwind installed, next we‚Äôll install the core dependencies for this guide, Stimulus, CableReady (plus Action Cable), and Mrujs, from your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bundle add hotwire-rails
be rails hotwire:install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then update your Gemfile to pull in the latest cable_ready.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"cable_ready"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;github: &lt;/span&gt;&lt;span class="s2"&gt;"stimulusreflex/cable_ready"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that if you're reading this in the future, we're using 5.0 for this guide.&lt;/p&gt;

&lt;p&gt;And then from your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bundle
yarn add mrujs cable_ready @rails/actioncable
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, update &lt;code&gt;app/javascript/packs/application.js&lt;/code&gt; like this, to pull in the new dependencies and configure Mrujs to use its &lt;a href="https://mrujs.com/how-tos/integrate-cablecar"&gt;CableCar plugin&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./controllers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;mrujs&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mrujs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;CableReady&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cable_ready&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;CableCar&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mrujs/plugins&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Turbo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@hotwired/turbo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Turbo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Turbo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;mrujs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CableCar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;CableReady&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next update &lt;code&gt;app/javascript/controllers/index.js&lt;/code&gt; to autoload all Stimulus controllers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;definitionsFromContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@hotwired/stimulus&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;application&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;// Configure Stimulus development experience&lt;/span&gt;
&lt;span class="nx"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;warnings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="nx"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;debug&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stimulus&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;application&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sr"&gt;/_controller&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;js$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;definitionsFromContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That‚Äôs a lot of dependencies to setup. Do we really need all of this to display a modal? No, no not really.&lt;/p&gt;

&lt;p&gt;The techniques we‚Äôll use in this article only require Action Cable (a core Rails library), CableReady, and Mrujs.&lt;/p&gt;

&lt;p&gt;Tailwind and Stimulus are requirements to follow along with the guide step-by-step, but we‚Äôre just using them to do things that can be done with your own CSS and vanilla JavaScript, if that‚Äôs your preference.&lt;/p&gt;

&lt;p&gt;Ultimately, the only UI component you need is a modal that can open and close. Stimulus and Tailwind are a simple way to get there, but they're not the only way!&lt;/p&gt;

&lt;p&gt;Moving on, to wrap up the copy/pasting setup work, we‚Äôll be creating and editing Customers in this application, so let‚Äôs scaffold up that resource:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rails g scaffold Customer name:string
rails db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Setup is complete! Great work so far. Now we can start writing code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customers-layout"&gt;
  &lt;/a&gt;
  Customers layout
&lt;/h2&gt;

&lt;p&gt;First, we‚Äôll apply some basic styling to the customers index page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"max-w-3xl mx-auto mt-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-controller=&lt;/span&gt;&lt;span class="s"&gt;"modal"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex justify-between items-baseline mb-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-3xl text-gray-900"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Customers&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="s1"&gt;'New Customer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_customer_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class: &lt;/span&gt;&lt;span class="s2"&gt;"text-blue-600"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;data: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;action: &lt;/span&gt;&lt;span class="s2"&gt;"click-&amp;gt;modal#open"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="s1"&gt;'modal'&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"customers"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex flex-col items-baseline space-y-6 p-4 shadow-lg rounded"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="vi"&gt;@customers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
      &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="s2"&gt;"customer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;customer: &lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The index view renders a list of customers, plus a header that includes a link to create a new customer.&lt;/p&gt;

&lt;p&gt;The header container div includes a &lt;code&gt;controller="modal"&lt;/code&gt; data attribute which is a reference to a Stimulus controller that doesn‚Äôt exist yet. Likewise, the new customer link references the same &lt;code&gt;modal&lt;/code&gt; controller in its &lt;code&gt;data-action&lt;/code&gt; attribute.&lt;/p&gt;

&lt;p&gt;We‚Äôll create that controller soon, for now though, clicking on the new customer link will navigate the browser to &lt;code&gt;customers/new&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The index view also renders two partials that don‚Äôt exist yet, &lt;code&gt;modal&lt;/code&gt; and &lt;code&gt;customer&lt;/code&gt;. Let‚Äôs create and fill those in next so that we can render the index page again.&lt;/p&gt;

&lt;p&gt;First, the customer partial:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch app/views/customers/_customer.html.erb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The customer partial just renders the customer‚Äôs name for now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-700 border-b border-gray-200 w-full pb-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next create the modal partial:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch app/views/customers/_modal.html.erb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And fill that in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-modal-target=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;
     &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hidden fixed inset-0 overflow-y-auto flex items-center justify-center"&lt;/span&gt;
     &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"z-index: 9999;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"max-w-lg max-h-screen w-full relative"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"m-1 bg-white rounded shadow"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"px-4 py-5 border-b border-gray-200 sm:px-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-lg leading-6 font-medium text-gray-900"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          Customer
        &lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"customer_form"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The important items here are the &lt;code&gt;modal-target="container"&lt;/code&gt;  data attribute, which the Stimulus controller will use to open/close the modal and the empty &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;This form element will eventually be filled in with content from the server when the user opens the modal.&lt;/p&gt;

&lt;p&gt;With the index markup in place and your server running via &lt;code&gt;bin/dev&lt;/code&gt;, head to &lt;a href="http://localhost:3000/customers"&gt;http://localhost:3000/customers&lt;/a&gt; and make sure everything is displaying as expected.&lt;/p&gt;

&lt;p&gt;Next we will create the &lt;code&gt;modal&lt;/code&gt; Stimulus controller and fill it in with content rendered from the server. I‚Äôm excited too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#showing-the-new-customer-modal"&gt;
  &lt;/a&gt;
  Showing the new customer modal
&lt;/h2&gt;

&lt;p&gt;First we need to create a new Stimulus controller:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch app/javascript/controllers/modal_controller.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And fill the controller in with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Credit: This controller is an edited-to-the-essentials version&lt;/span&gt;
&lt;span class="c1"&gt;// of the modal component created by @excid3 as part of the essential &lt;/span&gt;
&lt;span class="c1"&gt;// tailwind-stimulus-components package found here:&lt;/span&gt;
&lt;span class="c1"&gt;// https://github.com/excid3/tailwindcss-stimulus-components&lt;/span&gt;

&lt;span class="c1"&gt;// In production, use the full component from the &lt;/span&gt;
&lt;span class="c1"&gt;// library or expand this controller to allow for &lt;/span&gt;
&lt;span class="c1"&gt;// keyboard closing and dealing with scroll positions&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Controller&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@hotwired/stimulus&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Controller&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;targets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggleClass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;modal-background&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundHtml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_backgroundHTML&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;allowBackgroundClose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;disconnect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fixed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;inset-x-0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;overflow-hidden&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;containerTarget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggleClass&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertAdjacentHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;beforeend&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundHtml&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`#&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;containerTarget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggleClass&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;_backgroundHTML&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;div id="&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;" class="fixed top-0 left-0 w-full h-full" style="background-color: rgba(0, 0, 0, 0.7); z-index: 9998;"&amp;gt;&amp;lt;/div&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There‚Äôs a lot of JavaScript here, but it isn‚Äôt doing anything too fancy.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;connect&lt;/code&gt;, we set default values the controller needs to function. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;open&lt;/code&gt; simply applies classes to the body and the modal container to make the modal visible on the screen and apply the standard grayed-out background to the rest of the page.&lt;/p&gt;

&lt;p&gt;When &lt;code&gt;close&lt;/code&gt; is called, the background is removed and the modal is hidden.&lt;/p&gt;

&lt;p&gt;If you decide to use this approach in a real project, consider using the &lt;a href="https://github.com/excid3/tailwindcss-stimulus-components"&gt;Stimulus component&lt;/a&gt; this code is derived from. The above code was edited for brevity and the edits will introduce issues with scrolling and accessibility that the full component handles cleanly.&lt;/p&gt;

&lt;p&gt;With the Stimulus controller created, we‚Äôre almost ready to render the modal. Before we proceed, let‚Äôs step back and make sure we‚Äôre clear on what we want to achieve.&lt;/p&gt;

&lt;p&gt;Our goal is to create a server-rendered modal that allows a user to create a new customer. After the form in the modal is submitted, the newly created customer should be inserted into the list of customers, and the modal should close.&lt;/p&gt;

&lt;p&gt;The first task is to open the modal and display the content from the server, which means that when a user clicks on the New Customer link on the index page:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A request should be made to the server to retrieve the content for the customer form&lt;/li&gt;
&lt;li&gt;The content should replace the empty customer form that the modal partial renders on the initial page load&lt;/li&gt;
&lt;li&gt;The modal should open&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will be easier than it sounds.&lt;/p&gt;

&lt;p&gt;We‚Äôll use Mrujs to make an AJAX request to &lt;code&gt;customers#new&lt;/code&gt;, we‚Äôll queue up operations with CableCar, and Mrujs will automatically process those operations for us.&lt;/p&gt;

&lt;p&gt;First we need to tell Mrujs to convert the New Customer link to a CableCar-enabled link.&lt;/p&gt;

&lt;p&gt;As described in &lt;a href="https://mrujs.com/how-tos/integrate-cablecar"&gt;the documentation&lt;/a&gt;, we‚Äôll do that by updating the link on the index page like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="s1"&gt;'New Customer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_customer_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class: &lt;/span&gt;&lt;span class="s2"&gt;"text-blue-600"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;data: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;action: &lt;/span&gt;&lt;span class="s2"&gt;"click-&amp;gt;modal#open"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;cable_car: &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we‚Äôve added &lt;code&gt;data-cable-car=""&lt;/code&gt;, and Mrujs &lt;a href="https://mrujs.com/how-tos/integrate-cablecar#using-cablecar"&gt;takes care of the rest&lt;/a&gt; for us.&lt;/p&gt;

&lt;p&gt;With this change in place, when the user clicks on the New Customer link, an AJAX request will be sent to &lt;code&gt;customers#new&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since we‚Äôre going to be rendering the form partial shortly, let‚Äôs go ahead and update that partial now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;form_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;model: &lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;id: &lt;/span&gt;&lt;span class="s2"&gt;"customer_form"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"px-4 pt-5 pb-4 sm:p-6 sm:pb-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;any?&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"p-4 border border-red-600"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;
          Could not save customer
        &lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
          &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;full_messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;label&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
      &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;text_field&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"rounded-b mt-6 px-4 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;button&lt;/span&gt; &lt;span class="ss"&gt;class: &lt;/span&gt;&lt;span class="s2"&gt;"w-full sm:col-start-2 bg-blue-600 px-4 py-2 mb-4 text-white rounded-sm hover:bg-blue-700"&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;data-action=&lt;/span&gt;&lt;span class="s"&gt;"click-&amp;gt;modal#close"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mt-3 w-full sm:mt-0 sm:col-start-1 mb-4 bg-gray-100 hover:bg-gray-200 rounded-sm px-4 py-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      Cancel
    &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Most of this is standard Tailwind classes to apply some light styling to the form.&lt;/p&gt;

&lt;p&gt;The important pieces are the id of the form, assigned on line 1, and the &lt;code&gt;data-action&lt;/code&gt; assigned to the close button, which fires the &lt;code&gt;close&lt;/code&gt; function we defined in the &lt;code&gt;modal&lt;/code&gt; Stimulus controller earlier.&lt;/p&gt;

&lt;p&gt;We can also make the form look nicer with Tailwind‚Äôs form plugin. This is optional, but if you‚Äôd like to use it, first install it with yarn, from your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add @tailwindcss/forms
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then update &lt;code&gt;tailwind.config.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;purge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app/views/**/*.html.erb&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app/helpers/**/*.rb&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app/javascript/**/*.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tailwindcss/forms&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we need to update the &lt;code&gt;new&lt;/code&gt; method in the &lt;code&gt;CustomersController&lt;/code&gt; to render &lt;a href="https://cableready.stimulusreflex.com/v/v5/reference/operations"&gt;CableReady operations&lt;/a&gt;, using the newly introduced &lt;a href="https://cableready.stimulusreflex.com/v/v5/cable-car#ajax-mode"&gt;CableCar&lt;/a&gt;. To do that, we‚Äôll make two changes to the &lt;code&gt;CustomersController&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First update the controller to &lt;a href="https://cableready.stimulusreflex.com/v/v5/cableready-everywhere#controller-actions"&gt;include CableReady::Broadcaster&lt;/a&gt; to give the controller access to &lt;code&gt;cable_car&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomersController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationController&lt;/span&gt;
  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;CableReady&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Broadcaster&lt;/span&gt;
  &lt;span class="c1"&gt;# snip&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Feel free to place the &lt;code&gt;include&lt;/code&gt; in &lt;code&gt;ApplicationController&lt;/code&gt; if you prefer.&lt;/p&gt;

&lt;p&gt;Then update the &lt;code&gt;CustomersController&lt;/code&gt; new method as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;new&lt;/span&gt;
    &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;partial: &lt;/span&gt;&lt;span class="s1"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;locals: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;customer: &lt;/span&gt;&lt;span class="no"&gt;Customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;operations: &lt;/span&gt;&lt;span class="n"&gt;cable_car&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;outer_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#customer_form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;html: &lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we‚Äôre rendering the form partial to a string which we then pass to cable_car and use in an &lt;a href="https://cableready.stimulusreflex.com/v/v5/reference/operations/dom-mutations#outer_html"&gt;outer_html operation&lt;/a&gt;, targeting the (currently empty) customer form.&lt;/p&gt;

&lt;p&gt;With all this in place, head back to &lt;a href="http://localhost:3000/customers"&gt;http://localhost:3000/customers&lt;/a&gt; and click on the New Customer link. If all has gone well, you should see the modal open and the customer form render.&lt;/p&gt;

&lt;p&gt;Incredible work so far.&lt;/p&gt;

&lt;p&gt;Next up we'll use this same CableCar approach to handle form submissions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#submitting-the-form"&gt;
  &lt;/a&gt;
  Submitting the form
&lt;/h2&gt;

&lt;p&gt;This section is going to look pretty familiar. We‚Äôll start by updating the customer form with the cable car data attribute, just like we added to the new customer link in the last section:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;form_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;model: &lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;id: &lt;/span&gt;&lt;span class="s2"&gt;"customer_form"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;data: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;cable_car: &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, this tells Mrujs to submit the form with an AJAX request and to expect CableReady operations to perform in response.&lt;/p&gt;

&lt;p&gt;Next, head back to &lt;code&gt;customers_controller.rb&lt;/code&gt; and update the create method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create&lt;/span&gt;
  &lt;span class="vi"&gt;@customer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customer_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vi"&gt;@customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;
    &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;partial: &lt;/span&gt;&lt;span class="s1"&gt;'customer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;locals: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;customer: &lt;/span&gt;&lt;span class="vi"&gt;@customer&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;operations: &lt;/span&gt;&lt;span class="n"&gt;cable_car&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#customers'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;html: &lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="c1"&gt;# TODO: Handle errors&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we‚Äôre again rendering a partial to a string and passing that string to an operation (this time, &lt;code&gt;append&lt;/code&gt;). The target is the list of the customers rendered in the customers index view, where the newly created customer will be added to the bottom of the list. If you prefer, use &lt;a href="https://cableready.stimulusreflex.com/reference/operations/dom-mutations#prepend"&gt;prepend&lt;/a&gt; to add the customer to the top of the list instead.&lt;/p&gt;

&lt;p&gt;With this in place, open up the modal, type in a name, and submit the form. You should see the newly created customer get appended to the list like expected but the modal doesn‚Äôt close.&lt;/p&gt;

&lt;p&gt;That‚Äôs not ideal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dOjCSdr---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0mqjv6bi2d1n77iu8bt1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dOjCSdr---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0mqjv6bi2d1n77iu8bt1.gif" alt="A screen recording of a web page. The user clicks a link on the page that reads New Customer and a modal opens. The user submits the modal and the customer they created is added to the page but the modal stays open"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How do we close the modal when the form submission is successful? By tapping into some of what makes CableReady so powerful ‚Äî &lt;a href="https://cableready.stimulusreflex.com/v/v5/cableready-101#method-chaining"&gt;chaining operations&lt;/a&gt; and &lt;a href="https://cableready.stimulusreflex.com/v/v5/reference/operations/event-dispatch"&gt;emitting custom DOM events&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To make this work, we‚Äôll first add another operation to the operations chain sent back to Mrujs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create&lt;/span&gt;
    &lt;span class="c1"&gt;# snip&lt;/span&gt;
    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;operations: &lt;/span&gt;&lt;span class="n"&gt;cable_car&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#customers'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;html: &lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dispatch_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s1"&gt;'submit:success'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;dispatch_event&lt;/code&gt; &lt;a href="https://cableready.stimulusreflex.com/reference/operations/event-dispatch"&gt;operation&lt;/a&gt; allows us to emit whatever event we like. With this new event dispatched on successful submission, closing the modal is as simple as adding an event listener to the modal‚Äôs Stimulus controller, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit:success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;once&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="c1"&gt;// snip&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the modal opens, an event listener is created, tuned to the event name that is dispatched from the cable_car payload.&lt;/p&gt;

&lt;p&gt;Now when you submit the modal form, both the &lt;code&gt;append&lt;/code&gt; and the &lt;code&gt;dispatch_event&lt;/code&gt; operations are sent back in response to a successful form submission, Mrujs magic automatically performs the operations, and the &lt;code&gt;submit:success&lt;/code&gt; event listener closes the modal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#handling-errors"&gt;
  &lt;/a&gt;
  Handling errors
&lt;/h2&gt;

&lt;p&gt;Wonderful work stuff so far. Next we'll deal with form errors using &lt;code&gt;render operations&lt;/code&gt; again.&lt;/p&gt;

&lt;p&gt;First, make it possible for a customer submission to have a validation error by adding &lt;code&gt;validates_presence_of :name&lt;/code&gt; to &lt;code&gt;models/customer.rb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;With that in place, when the form is submitted with a blank name, the form submission will fail. When that happens, we want to render the customer form inside of the modal, with the validation errors attached.&lt;/p&gt;

&lt;p&gt;To render errors in response to a failed submission, update the create method like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create&lt;/span&gt;
  &lt;span class="vi"&gt;@customer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customer_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vi"&gt;@customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;
    &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;partial: &lt;/span&gt;&lt;span class="s1"&gt;'customer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;locals: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;customer: &lt;/span&gt;&lt;span class="vi"&gt;@customer&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;operations: &lt;/span&gt;&lt;span class="n"&gt;cable_car&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#customers'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;html: &lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dispatch_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s1"&gt;'submit:success'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;partial: &lt;/span&gt;&lt;span class="s1"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;locals: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;customer: &lt;/span&gt;&lt;span class="vi"&gt;@customer&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;operations: &lt;/span&gt;&lt;span class="n"&gt;cable_car&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inner_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#customer_form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;html: &lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="ss"&gt;status: :unprocessable_entity&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;else&lt;/code&gt; branch, we again render the partial to a string and render operations. This time, since we don‚Äôt want the modal to close and we don‚Äôt need to replace the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element itself, we can just use one &lt;code&gt;inner_html&lt;/code&gt;  operation. &lt;/p&gt;

&lt;p&gt;Open up the modal, submit a blank form, and see that the form is re-rendered with the errors as expected.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CVuJ0cdR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9k82d9qhkggex2mrw93e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CVuJ0cdR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9k82d9qhkggex2mrw93e.gif" alt="A screen recording of a web page. The user clicks a link on the page that reads New Customer and a modal opens. The user submits the form without typing anything in and the form updates with an error message that name is required"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You‚Äôre a star for making it this far. Let‚Äôs finish up by seeing how easy it is to reuse this modal for editing customers, and adding some small optimizations to the modal opening.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cable-car-customer-edits"&gt;
  &lt;/a&gt;
  Cable Car customer edits
&lt;/h2&gt;

&lt;p&gt;A cool thing about the empty customer form modal is that we can reuse it with no modifications for editing existing customers, leaving us with just one tiny modal container that we can reuse for any number of modals on the page.&lt;/p&gt;

&lt;p&gt;First, add a &lt;code&gt;cable_car&lt;/code&gt; enabled modal link to the &lt;code&gt;customer&lt;/code&gt; partial:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-700 border-b border-gray-200 w-full pb-2"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="s2"&gt;"customer-&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;edit_customer_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="ss"&gt;data: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;cable_car: &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;action: &lt;/span&gt;&lt;span class="s2"&gt;"click-&amp;gt;modal#open"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we setup the relevant data attributes on the link and, on the wrapper div, we added a unique id. We‚Äôll use that id to replace the content of the customer when the edit form is submitted.&lt;/p&gt;

&lt;p&gt;Next up, back to the &lt;code&gt;CustomersController&lt;/code&gt; to adjust the &lt;code&gt;edit&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; methods:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;edit&lt;/span&gt;
  &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;partial: &lt;/span&gt;&lt;span class="s1"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;locals: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;customer: &lt;/span&gt;&lt;span class="vi"&gt;@customer&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;operations: &lt;/span&gt;&lt;span class="n"&gt;cable_car&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#customer_form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;html: &lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vi"&gt;@customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customer_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;partial: &lt;/span&gt;&lt;span class="s1"&gt;'customer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;locals: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;customer: &lt;/span&gt;&lt;span class="vi"&gt;@customer&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;operations: &lt;/span&gt;&lt;span class="n"&gt;cable_car&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"#customer-&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;html: &lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dispatch_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s1"&gt;'submit:success'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;partial: &lt;/span&gt;&lt;span class="s1"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;locals: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;customer: &lt;/span&gt;&lt;span class="vi"&gt;@customer&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;operations: &lt;/span&gt;&lt;span class="n"&gt;cable_car&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inner_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#customer_form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;html: &lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="ss"&gt;status: :unprocessable_entity&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should look pretty familiar. The &lt;code&gt;edit&lt;/code&gt; method is a mirror of the &lt;code&gt;new&lt;/code&gt; method, and the &lt;code&gt;update&lt;/code&gt; method is a mirror of the &lt;code&gt;create&lt;/code&gt; method. Again, we dispatch the &lt;code&gt;submit:success&lt;/code&gt; event when the customer is updated, otherwise the form re-renders with errors.&lt;/p&gt;

&lt;p&gt;Finally, to use the same modal controller for every modal link on the page, we‚Äôll move the &lt;code&gt;data-controller="modal"&lt;/code&gt; declaration one level up the DOM tree. In &lt;code&gt;customers/index.html.erb&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"max-w-3xl mx-auto mt-8"&lt;/span&gt; &lt;span class="na"&gt;data-controller=&lt;/span&gt;&lt;span class="s"&gt;"modal"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex justify-between items-baseline mb-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Snip --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With these changes in place, refresh the customers index page, click on a customer‚Äôs name, and see that updating the customer happens in a modal, and the customer is updated in place in the list on a successful form submission.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#optimizing-modal-opening"&gt;
  &lt;/a&gt;
  Optimizing modal opening
&lt;/h2&gt;

&lt;p&gt;Something you may have noticed as you‚Äôve worked through this guide is that the modal opens before the content from the server has rendered, causing a very brief flash as the modal opens and then quickly replaces the empty form or the form‚Äôs previous contents:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y0YJl4Ct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4d7u1ml7pl6smiy2id8s.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y0YJl4Ct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4d7u1ml7pl6smiy2id8s.gif" alt="A screen recording of a web page. The user opens and closes a New Customer modal several times. Each time, for a brief moment, the modal displays the content it had the last time it was opened before the content is updated"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This happens because the modal opens instantly when a modal link is clicked but the round trip to the server to retrieve the form partial is not &lt;em&gt;quite&lt;/em&gt; instant.&lt;/p&gt;

&lt;p&gt;We have options for how to prevent this, including adding a loading state to the modal to make the re-render less jarring, but the method I‚Äôll demonstrate is keeping the modal hidden until the content has been retrieved from the server. This gives us another chance to use CableReady and Stimulus, and that‚Äôs what we‚Äôre all here for, right?&lt;/p&gt;

&lt;p&gt;First, add another event listener to the &lt;code&gt;modal&lt;/code&gt; controller:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;modal:loaded&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;containerTarget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggleClass&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;once&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit:success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;once&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fixed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;inset-x-0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;overflow-hidden&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertAdjacentHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;beforeend&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundHtml&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`#&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we updated &lt;code&gt;open&lt;/code&gt; to move the &lt;code&gt;containerTarget.classList.remove&lt;/code&gt; call from happening instantly to happening in response to &lt;code&gt;modal:loaded&lt;/code&gt; DOM event.&lt;/p&gt;

&lt;p&gt;This change means that all of the modal links are now broken because the &lt;code&gt;modal:loaded&lt;/code&gt; event never occurs and so &lt;code&gt;containerTarget.classList.remove&lt;/code&gt; never runs and the modal container stays hidden.&lt;/p&gt;

&lt;p&gt;We can fix the modal links by updating &lt;code&gt;CustomersController&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;new&lt;/span&gt;
  &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;partial: &lt;/span&gt;&lt;span class="s1"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;locals: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;customer: &lt;/span&gt;&lt;span class="no"&gt;Customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;operations: &lt;/span&gt;&lt;span class="n"&gt;cable_car&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;outer_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#customer_form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;html: &lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dispatch_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s1"&gt;'modal:loaded'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;edit&lt;/span&gt;
  &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;partial: &lt;/span&gt;&lt;span class="s1"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;locals: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;customer: &lt;/span&gt;&lt;span class="vi"&gt;@customer&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;operations: &lt;/span&gt;&lt;span class="n"&gt;cable_car&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;outer_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#customer_form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;html: &lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dispatch_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s1"&gt;'modal:loaded'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In both the &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;edit&lt;/code&gt; methods, we again take advantage of CableReady‚Äôs chainable operations to dispatch &lt;code&gt;modal:loaded&lt;/code&gt; after the &lt;code&gt;outer_html&lt;/code&gt; is replaced.&lt;/p&gt;

&lt;p&gt;With this change, the sequence of events when the user clicks on a modal link is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Request to server begins&lt;/li&gt;
&lt;li&gt;Open action is triggered&lt;/li&gt;
&lt;li&gt;Modal backdrop is applied to the page, no visible modal yet&lt;/li&gt;
&lt;li&gt;Form content is replaced&lt;/li&gt;
&lt;li&gt;Modal loaded event is dispatched&lt;/li&gt;
&lt;li&gt;Hidden class is removed from the modal, making it visible&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This sequence happens rapidly enough in our circumstances for the user to barely notice the delay between the backdrop being applied and the modal displaying. In a production environment, you may find that a loading state for an immediately-opened modal is a more scalable option, but we‚Äôre here to learn about CableReady and Mrujs, not build a production application.&lt;/p&gt;

&lt;p&gt;With these changes in place, the modal will open with the updated content already populated, eliminating the flash of old content.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---PWA3afW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9ivkgihj69ants97aqb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---PWA3afW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9ivkgihj69ants97aqb.gif" alt="A screen recording of an initially empty web page with a header that reads Customers and a link to create new customers. The user clicks on the new customer link adn a pop-up modal displays on the screen. The user types in a name, creating a customer and the page updates automatically with the new customer's inforamtion. The user continues to add and update a few more customer records, each time the form opens in a modal and the page updates with the user's change immediately."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The single &lt;code&gt;modal&lt;/code&gt; connected div can be used to display any number of modals, serving as a way to reduce the initial page load in a more traditional application which might pre-render each edit modal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;Today we learned how to build a server rendered modal form, powered by Stimulus, CableReady, and Mrujs. &lt;/p&gt;

&lt;p&gt;Stimulus and CableReady are two powerful, battle-tested tools with a mature feature set that should be considered for any modern Rails application. CableReady can stand alone as a way to deliver real-time updates to end users through a variety of methods or it can be powered-up with &lt;a href="https://docs.stimulusreflex.com/"&gt;StimulusReflex&lt;/a&gt; to deliver a SPA-link experience, minus the SPA.&lt;/p&gt;

&lt;p&gt;Mrujs is a newer tool, under active development, and is intended to serve as a modern, stable replacement for &lt;code&gt;rails/ujs&lt;/code&gt;, which is no longer under active development and which will be &lt;a href="https://github.com/rails/rails/pull/43112"&gt;deprecated&lt;/a&gt; when Rails 7 releases.&lt;/p&gt;

&lt;p&gt;In addition to the tight integration with CableReady‚Äôs Cable Car that we saw today, Mrujs gives &lt;a href="https://mrujs.com/tutorials/practical-guide-to-mrujs"&gt;you access&lt;/a&gt; to simple confirmation dialogs, disabled links, and the other niceties from Rails UJS, in a modern package.&lt;/p&gt;

&lt;p&gt;An important note before we go: we could build a very similar user experience with a variety of tools in the Rails ecosystem, including Turbo Streams (&lt;a href="https://www.colby.so/posts/handling-modal-forms-with-rails-and-hotwire"&gt;here's a guide&lt;/a&gt; for that).&lt;/p&gt;

&lt;p&gt;While the full &lt;a href="https://hotwired.dev/"&gt;Hotwire stack&lt;/a&gt; can deliver this experience with about the same amount of effort, the power and flexibility of CableReady's chainable operations makes CableReady + Mrujs a better fit for this particular use case than the full Hotwire stack, in my very, very humble opinion.&lt;/p&gt;

&lt;p&gt;What's really exciting about this is that as Rails developers, our cups are overflowing with powerful tools to build real-time, reactive applications. That means we all win, no matter which tool we reach for most often.&lt;/p&gt;

&lt;p&gt;Continue your journey with CableReady, Stimulus, and Mrujs with these resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://cableready.stimulusreflex.com/"&gt;CableReady documentation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://stimulus.hotwired.dev/reference/controllers"&gt;Stimulus docs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://mrujs.com/tutorials/getting-started"&gt;Mrujs docs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Explore the &lt;a href="https://docs.stimulusreflex.com/"&gt;StimulusReflex documentation&lt;/a&gt; when you‚Äôre ready&lt;/li&gt;
&lt;li&gt;Join the &lt;a href="https://discord.gg/stimulus-reflex"&gt;StimulusReflex discord&lt;/a&gt; if you get stuck with CableReady or StimulusReflex&lt;/li&gt;
&lt;li&gt;(Shameless plug) Subscribe to my monthly newsletter, &lt;a href="https://landing.mailerlite.com/webforms/landing/d7z0n0"&gt;Hotwiring Rails&lt;/a&gt;, to stay up to date on the latest on building modern, performant applications with Rails and tools like CableReady and Stimulus&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That‚Äôs all for today.&lt;/p&gt;

&lt;p&gt;As always, thanks for reading!&lt;/p&gt;

</description>
      <category>rails</category>
      <category>ruby</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Tips To Become Great Programmer</title>
      <author>Coder</author>
      <pubDate>Fri, 10 Sep 2021 02:59:38 +0000</pubDate>
      <link>https://dev.to/csscodesz/tips-to-become-great-programmer-39l6</link>
      <guid>https://dev.to/csscodesz/tips-to-become-great-programmer-39l6</guid>
      <description>&lt;p&gt;¬†A good programmer is someone who always looks both ways before crossing a one-way street. ~Doug Linder&lt;/p&gt;

&lt;p&gt;Let me start by saying that I do not consider myself to be a competent coder. I consider my coding abilities to be mediocre, and I am still learning and have a long way to go before I am even remotely satisfied with them.Yes, I am better at programming than a lot of others, but that is just because they are lazy and choose to sit about idle all day instead of programming. Their dreadful abilities make my less dreadful abilities appear fantastic.&lt;/p&gt;

&lt;p&gt;So most of the tips I will mention below are lessons learnt from failed endeavours, they are what I have wanted to be and I am not. So lets dive in.¬†&lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/tips-to-become-a-great-programmer/"&gt;Tips to become a great programmer&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>SHIFT15M: Multiobjective Large-scale Fashion Dataset with Distributional Shifts</title>
      <author>Masanari KIMURA</author>
      <pubDate>Fri, 10 Sep 2021 01:34:05 +0000</pubDate>
      <link>https://dev.to/nocotan/shift15m-multiobjective-large-scale-fashion-dataset-with-distributional-shifts-3ebp</link>
      <guid>https://dev.to/nocotan/shift15m-multiobjective-large-scale-fashion-dataset-with-distributional-shifts-3ebp</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DQqwUFzU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l72ux3fhh2mzreh3mtip.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DQqwUFzU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l72ux3fhh2mzreh3mtip.png" alt="Overview of the SHIFT15M dataset."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hi, everyone.&lt;/p&gt;

&lt;p&gt;We present a novel dataset aimed at properly evaluating machine learning models under distributional shifts.&lt;/p&gt;

&lt;p&gt;Our SHIFT15M dataset has several good properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Multiobjective. Each instance in the dataset has several numerical values that can be used as target variables.&lt;/li&gt;
&lt;li&gt;Large-scale. The SHIFT15M dataset consists of 15million fashion images.&lt;/li&gt;
&lt;li&gt;Coverage of types of dataset shifts. SHIFT15M contains multiple dataset shift problem settings (e.g., covariate shift or target shift). SHIFT15M also enables the performance evaluation of the model under various magnitudes of dataset shifts by switching the magnitude.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition, we provide software to handle SHIFT15M in a very simple way.&lt;/p&gt;

&lt;p&gt;If you are interested feel free to check out:&lt;/p&gt;

&lt;p&gt;Arxiv: &lt;a href="https://arxiv.org/abs/2108.12992"&gt;https://arxiv.org/abs/2108.12992&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href="https://github.com/st-tech/zozo-shift15m"&gt;https://github.com/st-tech/zozo-shift15m&lt;/a&gt;&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>deeplearning</category>
    </item>
  </channel>
</rss>
