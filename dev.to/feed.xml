<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Best under $100 earbuds to use! Suggestions + Tips and Tricks!</title>
      <author>Timothy Rowell</author>
      <pubDate>Thu, 13 May 2021 22:57:42 +0000</pubDate>
      <link>https://dev.to/codeboi/best-under-100-earbuds-to-use-suggestions-tips-and-tricks-41lb</link>
      <guid>https://dev.to/codeboi/best-under-100-earbuds-to-use-suggestions-tips-and-tricks-41lb</guid>
      <description>&lt;p&gt;photo credit (Geoffrey Morrison)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#price-table"&gt;
  &lt;/a&gt;
  Price Table
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Brand&lt;/th&gt;
&lt;th&gt;price&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;#1 AirPods (Refurbished)&lt;/td&gt;
&lt;td&gt;Apple&lt;/td&gt;
&lt;td&gt;$109.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Anker Soundcore Liberty 2&lt;/td&gt;
&lt;td&gt;Anker products&lt;/td&gt;
&lt;td&gt;$76.97&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JLab Epic Air Sport ANC&lt;/td&gt;
&lt;td&gt;JLab&lt;/td&gt;
&lt;td&gt;$59.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;House of Marley Champion&lt;/td&gt;
&lt;td&gt;House of Marley&lt;/td&gt;
&lt;td&gt;$69.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JLab Epic Air ANC&lt;/td&gt;
&lt;td&gt;JLab&lt;/td&gt;
&lt;td&gt;$99.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Anker Soundcore Life Dot 2&lt;/td&gt;
&lt;td&gt;Anker&lt;/td&gt;
&lt;td&gt;$40&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tribit FlyBuds NC&lt;/td&gt;
&lt;td&gt;Tribit&lt;/td&gt;
&lt;td&gt;$49.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1More ColorBuds&lt;/td&gt;
&lt;td&gt;1More&lt;/td&gt;
&lt;td&gt;$79.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Treblab X5&lt;/td&gt;
&lt;td&gt;Treblab&lt;/td&gt;
&lt;td&gt;$69.97&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Monoprice True Wireless Plus&lt;/td&gt;
&lt;td&gt;Monoprice&lt;/td&gt;
&lt;td&gt;$95.70&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sony WF-XB700&lt;/td&gt;
&lt;td&gt;Sony&lt;/td&gt;
&lt;td&gt;$99.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Skullcandy Sesh Evo&lt;/td&gt;
&lt;td&gt;Skullcandy&lt;/td&gt;
&lt;td&gt;$29.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OnePlus True Wireless&lt;/td&gt;
&lt;td&gt;OnePlus&lt;/td&gt;
&lt;td&gt;$39.99&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zy4m5Ssd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--jOrto73r--/b_white%2Cc_limit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Cq_auto%2Cw_792/https://reviewed-production.s3.amazonaws.com/attachment/8398ad425ade46da/Anker_Liberty_2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zy4m5Ssd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--jOrto73r--/b_white%2Cc_limit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Cq_auto%2Cw_792/https://reviewed-production.s3.amazonaws.com/attachment/8398ad425ade46da/Anker_Liberty_2.jpg" alt="Anker Soundcore Liberty 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#anker-soundcore-liberty-2"&gt;
  &lt;/a&gt;
  Anker Soundcore Liberty 2
&lt;/h1&gt;

&lt;p&gt;The Anker Soundcore Liberty 2 is the best of the bunch for most people thanks to a customizable fit, customizable sound, and above-average battery life. Multiple included ear tips and silicone wings mean that just about everyone can get a comfortable and secure fit and the Anker app lets you dial in the sound that you want. It’s possible another option here might sound better to you, or fit better, but the Liberty 2 are our favorite all-rounders.&lt;/p&gt;

&lt;p&gt;The sound is among the best we tested in this price range. It’s a bit bass-heavy, and a touch sharp in the upper register, but thanks to the EQ options in Anker’s app, you can tune the sound to be pretty close to whatever you personally prefer. In fact, the app has a feature called HearID that will help find the EQ settings best for your ears.&lt;/p&gt;

&lt;p&gt;Battery life was a bit less than claimed—we tracked 7 hours of playback per charge instead of 8. That’s mid-pack for this category, but still above average for many more popular true wireless headphones. The case should offer about 3 full charges. Speaking of the case, it feels a bit flimsy, with a thin plastic cover that slides to open and seems like it could get knocked open in a purse or backpack.&lt;/p&gt;

&lt;p&gt;The Liberty 2 are IPX5 Certified, which means they’re sealed against strong splashes, even tested to take on some light jets of the wet stuff. You can’t dunk them, but it’s enough to let you work out and get your sweat on without having to worry about damage.&lt;/p&gt;

&lt;p&gt;The Anker Soundcore Liberty 2 offers the most for the most people, and at a great price. You should be able to get a comfortable fit, and dial in a sound that you like.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Good sound you can EQ to taste&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multiple wings and ear tips&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Full-day battery&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Case feels flimsy&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VHOUwwtE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--m2eZznvy--/b_white%2Cc_limit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Cq_auto%2Cw_792/https://reviewed-production.s3.amazonaws.com/attachment/1fd26bfc82414c9b/JLab_Epic_Air_Sport.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VHOUwwtE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--m2eZznvy--/b_white%2Cc_limit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Cq_auto%2Cw_792/https://reviewed-production.s3.amazonaws.com/attachment/1fd26bfc82414c9b/JLab_Epic_Air_Sport.jpg" alt="JLab Audio Epic Air Sport ANC True Wireless Earbuds"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jlab-audio-epic-air-sport-anc-true-wireless-earbuds"&gt;
  &lt;/a&gt;
  JLab Audio Epic Air Sport ANC True Wireless Earbuds
&lt;/h1&gt;

&lt;p&gt;Just because the JLab Epic Air Sport ANC is our best sports pick doesn’t mean you should dismiss them if you’re not sporty. In fact, quite the opposite. These would be great for anyone worried about getting a good fit, especially those who struggle with traditional earbuds. They’re IP66 rated, meaning they’ve got good dust resistance and you can get them quite wet—but don’t submerge them. Of course, they’re also good if you’re an active type.&lt;/p&gt;

&lt;p&gt;One big reason for this is the over-ear loop design. It’s a soft silicone we never found annoying, fitting comfortably even with glasses. Some people aren’t a fan of this style, but it allows for a far more secure fit than any other option—we never once felt that they’d fall out and get lost. The loops aren’t removable (see the non-Sport sibling), but the Epic Air Sport comes with multiple silicone ear tip options, plus a very comfortable foam tip.&lt;/p&gt;

&lt;p&gt;Overall the sound is a bit bass-heavy, but like the Anker Liberty 2, there are extensive EQ options to help you fine-tune your preferred sound.&lt;/p&gt;

&lt;p&gt;Battery life was slightly less than claimed. We measured around 13 hours per charge to JLab’s claim of 15, but still, that’s a ton for true wireless headphones. If you enable features like noise-canceling, you’ll get less battery life. Speaking of noise-canceling, like all the NC offerings here, it’s very mild. It doesn’t hurt to have it, of course, but if you’re looking specifically for noise canceling, you’ll want to look at our top picks on our best wireless earbuds list or our best noise-canceling headphones list.&lt;/p&gt;

&lt;p&gt;Like the majority of newer true wireless earbuds, the Epic Air Sport ANC also offers adjustable transparency mode, which JLab calls Be Aware, letting you hear your environment in high-traffic areas.&lt;/p&gt;

&lt;p&gt;The case, a bit larger than the others in this category, also holds a big battery, offering about 3.5 additional charges. It has an attached USB cable, which is either a strength or a weakness depending on your gear. More importantly, it has wireless charging which is a great touch.&lt;/p&gt;

&lt;p&gt;If you’re headed out for a walk or hike, these are the ones you’d want to grab. If you don’t like the over-ear loops, however, the Anker Liberty 2 is the better choice.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Secure&lt;/li&gt;
&lt;li&gt;&lt;p&gt;adaptable fit&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multiple sound options&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Very long battery life&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;An over-ear loop isn't for everyone&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r6Fudu3s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--bnPlZu5F--/b_white%2Cc_limit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Cq_auto%2Cw_792/https://reviewed-production.s3.amazonaws.com/attachment/d9c429c42b2e4b68/JLab_Go_Air.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r6Fudu3s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--bnPlZu5F--/b_white%2Cc_limit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Cq_auto%2Cw_792/https://reviewed-production.s3.amazonaws.com/attachment/d9c429c42b2e4b68/JLab_Go_Air.jpg" alt="JLab Audio Go Air True Wireless Earbuds"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jlab-audio-go-air-true-wireless-earbuds"&gt;
  &lt;/a&gt;
  JLab Audio Go Air True Wireless Earbuds
&lt;/h1&gt;

&lt;p&gt;The JLab Go Air are impressive for one primary reason: a crazy-low price. Being the least expensive option isn’t, however, a guarantee of a “best value” superlative. Just because something is cheap doesn’t mean it’s a good value.&lt;/p&gt;

&lt;p&gt;Fortunately, the Go Air performed pretty well, or at least not bad, in most of our tests. Sound quality is mid-pack, not impressing in any particular way, but not overly disappointing in any way either.&lt;/p&gt;

&lt;p&gt;The fit is just OK. They’re very small and light, so if they fit your ears you’ll barely notice them. However, unlike many headphones we tested, the Go Air only comes with three sets of tips—no wings or different materials. This is understandable given their price, but something to keep in mind. If they don’t fit you, they might fall out and disappear.&lt;/p&gt;

&lt;p&gt;Battery life was a little better than advertised in our tests. JLab claims 5 hours and we got 5.5. This is low for our list, but on par with most of the popular true wireless headphones, including Apple’s AirPods Pro, Google’s Pixel Buds, and plenty of others. The case offers roughly 4 extra charges. Like other JLab models, the case has a built-in USB cable. Unlike some, however, this one doesn’t have wireless charging.&lt;/p&gt;

&lt;p&gt;Speaking of the case, it’s a bit…weird. It’s less a case than a cup to hold the earbuds. They lock in magnetically, but there’s no top to the case. So in a purse or backpack, for instance, we could imagine something pushing out one or both of the earbuds out of the case.&lt;/p&gt;

&lt;p&gt;For the price, though, all of these negatives can be largely forgiven. If you want a cheap option with a better chance to fit, and a bit better sound, check out the Tribit FlyBuds NC.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Tiny form factor&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Incredibly affordable&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sound is average&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open-top case&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hS4H745W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--ydaST9ol--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1619012777480/House-of-Marley-Champion.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hS4H745W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--ydaST9ol--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1619012777480/House-of-Marley-Champion.jpg" alt="House of Marley Champion True Wireless"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#house-of-marley-champion-true-wireless"&gt;
  &lt;/a&gt;
  House of Marley Champion True Wireless
&lt;/h1&gt;

&lt;p&gt;The House of Marley Champion are a tiny pair of earbuds made predominantly from sustainable and recycled materials. This includes bamboo, natural fibers, and silicone from post-consumer waste. Even the charging cable is “post-consumer recyclable polyester.” For anyone looking for a greener alternative in a sea of plastic headphones, these are a great place to start.&lt;/p&gt;

&lt;p&gt;Beyond their Earth-friendlier materials, the earbuds themselves are quite good. They aren’t right on par with our top picks, but they definitely hold their own—not a podium finish, but podium adjacent for sure. We got more than their claimed 8 hours of battery life in testing, and the tiny case can charge them back up more than twice. That case charges with USB-C, and, like the headphones themselves, has a small bamboo accent that looks great. The buds are IPX4 water-resistant, which means you can splash them but not submerge them.&lt;/p&gt;

&lt;p&gt;The sound quality is good, though the bass is a bit messy and there’s more emphasis on the treble than their more balanced competitors. They do especially well with podcasts and audiobooks. The biggest issue is that they only come with two sets of tips, and those with larger ears and/or ear canals might not be able to get a secure fit.&lt;/p&gt;

&lt;p&gt;That said, if you’re looking for a more planet-friendly pair of earbuds for your money, the House of Marley Champion may be the pick for you.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Eco-friendly design&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Comfortable&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wood offers a nice aesthetic&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Only two tips included&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It May not fit large ears&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wxs5jfha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--HohC_wI---/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602248676610/JLab-Audio-Epic-Air-ANC-True-Wireless-Earbuds.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wxs5jfha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--HohC_wI---/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602248676610/JLab-Audio-Epic-Air-ANC-True-Wireless-Earbuds.jpg" alt="JLab Audio Epic Air ANC True Wireless Earbuds"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jlab-audio-epic-air-anc-true-wireless-earbuds"&gt;
  &lt;/a&gt;
  JLab Audio Epic Air ANC True Wireless Earbuds
&lt;/h1&gt;

&lt;p&gt;The Epic Air ANC seems like they’d be the same as their siblings, the Epic Air Sport ANC, minus the over-ear loops. Performance is slightly different, however. Battery life for the buds is a bit lower, at 12 hours claimed versus 15 for the Sports. We measured a bit less. The case should recharge the buds around 3 times, the same as the Sport.&lt;/p&gt;

&lt;p&gt;Also, they’re IP55 rated instead of IP66, and the bass is less defined and sloppier. This might have to do with the fit. Lacking the over-ear loops of its sports sibling, the Epic Air feels loose. They’re light and comfortable, however.&lt;/p&gt;

&lt;p&gt;Whether the microphone is different, or it's the way they sit in your ears, those on the other end of the phone said voices weren’t as clear with these compared to nearly all the others.&lt;/p&gt;

&lt;p&gt;Like their Sports sibling, the noise canceling is very mild. The transparency mode, called Be Aware, is adjustable in the app and at its maximum actually increases the sound of the world around you; a sort of the opposite of noise-canceling that is useful in certain situations. Also like the Sport, the case has a built-in USB connector and has wireless charging. Unless you really hate over-ear loops, the Sport is the better option.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Light and comfortable&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Good battery life&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wireless charging case&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fit isn't particularly secure&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PakO4R1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--D6Oq2hpp--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602248076729/Anker-Soundcore-Life-Dot-2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PakO4R1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--D6Oq2hpp--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602248076729/Anker-Soundcore-Life-Dot-2.jpg" alt="Anker Soundcore Life Dot 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#anker-soundcore-life-dot-2"&gt;
  &lt;/a&gt;
  Anker Soundcore Life Dot 2
&lt;/h1&gt;

&lt;p&gt;At first glance, we didn’t expect the Life Dot 2 to fit well. However, their curved, shell-shaped “AirWings” fit quite well in testing. The best fit we got was with one of the larger AirWings which routinely slid down over the metal contacts that allowed the earbuds to charge. If we didn’t notice this when they were put away, they wouldn’t charge.&lt;/p&gt;

&lt;p&gt;Battery life is good, with a claimed 8 hours that’s right in line with what we tested. The case has a huge battery which should offer about 12 charges. They’re IPX5 certified, meaning there's no dust resistance and you shouldn't submerge them but splashing water (and even a bit more) should be OK.&lt;/p&gt;

&lt;p&gt;Performance, overall, is mid-tier. There's a bit too much sizzle to the Life Dot 2’s upper mid-range, which can be mildly unpleasant. Unlike the Liberty 2, you can’t connect the Dot 2 to Anker’s app to adjust this. The price, however, is great.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Tiny, yet comfy&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lots of battery in the case&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sound is so-so&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AirWings don't fit securely on buds&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n4MBQYOW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--vdPGXRmw--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602252504387/Tribit-FlyBuds-NC.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n4MBQYOW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--vdPGXRmw--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602252504387/Tribit-FlyBuds-NC.jpg" alt="Tribit FlyBuds NC"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tribit-flybuds-nc"&gt;
  &lt;/a&gt;
  Tribit FlyBuds NC
&lt;/h1&gt;

&lt;p&gt;We don’t have a “budget runner-up” category, but if we did, the FlyBuds would take it. They were among the few pairs we tried with the long pillar design that actually fit well, and they're regularly priced lower than most options on our list.&lt;/p&gt;

&lt;p&gt;The sound is quite good, a bit mid-heavy and a little brittle, but solidly above average. Like the other noise-canceling options, it’s mostly here in name only, with very little actual noise reduction. Battery life was very good. We measured 11 hours without NC active, higher than their claimed 10. The case should offer a bit more than 2 additional charges.&lt;/p&gt;

&lt;p&gt;They’re IPX4 rated, and you can toggle between the noise canceling and a transparency mode Tribit calls Ambient. This mode works fine, but the NC is mild enough that you might not need it. The voice prompts between modes are nicely clear.&lt;/p&gt;

&lt;p&gt;Their mid-pack performance, however, is greatly offset by their price which was below our test average. Roll all that together and these would be a great option for someone who wants something better than the very lowest priced buds, but doesn’t want to shell out for our pricier picks.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Good sound&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Comfortable&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Affordable&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Don't stand out in any category&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BVx2lj8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--nrFYX_sf--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602247359952/1MORE-ColorBuds.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BVx2lj8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--nrFYX_sf--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602247359952/1MORE-ColorBuds.jpg" alt="1More ColorBuds"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1more-colorbuds"&gt;
  &lt;/a&gt;
  1More ColorBuds
&lt;/h1&gt;

&lt;p&gt;The 1More ColorBuds are a stylish and tiny pair of available earbuds, as the name suggests, in a variety of colors including gold, green, pink, and of course, black. The earbuds and case are both among the smallest of any we tested.&lt;/p&gt;

&lt;p&gt;They don’t perform as well as we’d hoped, however. Their swoopy shape didn’t sit as comfortably or as well in our ears as other tiny buds. They are, for instance, only fractionally smaller than the House of Marley Champions, yet those are far more stable. They also lack any buttons on the buds, making you unable to easily pause or switch to a new track like most other earbuds. They do offer an IPX5 water resistance rating, though, which outdoes many budget true wireless headphones we’ve tested.&lt;/p&gt;

&lt;p&gt;The sound is also somewhat of a disappointment; it’s fairly brittle and sibilant and overall very tilted toward the high end. The sound quality overall sits somewhere in the middle when compared to the other budget true wireless earbuds we tested, though the ColorBuds were on the higher-end of the crowd when it comes to the price point.&lt;/p&gt;

&lt;p&gt;We did get better than expected battery life. 1More claims 6 hours, we got over 8. The small case can charge them back to full over 3 times. That said, in a crowded category, the Colorbuds fail to stand out for anyone feature and would be best purchased if you can find them on one of their fire sales.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Stylish design&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IPX5 water resistance&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;No onboard controls&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;So-so fit&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mediocre sound&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ROV3Uux0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--U5eJ8Ajz--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602251688825/TREBLAB-X5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ROV3Uux0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--U5eJ8Ajz--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602251688825/TREBLAB-X5.jpg" alt="Treblab X5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#treblab-x5"&gt;
  &lt;/a&gt;
  Treblab X5
&lt;/h1&gt;

&lt;p&gt;The X5 is the best of the rest. While they fit well enough, with the included wings attached they barely fit in their case. The sibilant (think harsh “S”) sound quality is not particularly pleasant. There’s just too much upper-midrange, especially notable with cymbals. The bass is tuneful, however. Some might feel there’s a bit too much, but it’s just right for bass lovers.&lt;/p&gt;

&lt;p&gt;They are among the few pairs of newer headphones that have a micro-USB connector for charging instead of the more modern USB-C, and unlike some competitors, there is no wireless charging. In addition, listeners on calls didn’t seem to like how voices sounded on the other end.&lt;/p&gt;

&lt;p&gt;On the bright side, the battery playback time of 7 hours beats out plenty of pricier options, including Apple’s AirPods Pro and Google’s latest Pixel Buds. The case also offers about 4 more charges, while IPX4 water resistance allows these earbuds to stand up to the basic elements (though you won’t want to dunk them).&lt;/p&gt;

&lt;p&gt;Overall the X5 isn’t bad, but there are better options for your money out there.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Compact case&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Solid features&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Sound quality underwhelms&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5lgFZ1Gd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--KEyTwG2u--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602250112358/889028126936.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5lgFZ1Gd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--KEyTwG2u--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602250112358/889028126936.jpg" alt="Monoprice TrueWireless Plus"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#monoprice-truewireless-plus"&gt;
  &lt;/a&gt;
  Monoprice TrueWireless Plus
&lt;/h1&gt;

&lt;p&gt;The Monoprice True Wireless Plus are also mid-level performers. They’re absolutely tiny, which can be both good and bad. You barely notice them in your ears, but unless you absolutely get a perfect fit, they’re not going to be in your ears for long. Making matters worse, there are only 3 tip sets available in the box, fewer than most of the other headphones we reviewed.&lt;/p&gt;

&lt;p&gt;For as small as they are, they produce prodigious bass. Snare drums are accentuated, but there’s not much in the way of high frequencies.&lt;/p&gt;

&lt;p&gt;The case is one of the only ones we've seen recently that does not have a modern USB-C connection, sporting instead micro-USB. However, it has wireless charging, which is nice to see at this price point. By far our favorite aspect is that when the earbuds are charging, they’re slightly visible through the translucent cover, looking like two glowing eyeballs.&lt;/p&gt;

&lt;p&gt;Battery life was a bit less than the 9 hours they claimed, at a little over 7. The case should offer at least 3 more charges. When it comes to water resistance, they offer the common IPX5 protection, so you can splash them without worry, but they can't be dunked.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Tiny&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Case offers wireless charging&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Interesting design&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Unimpressive sound quality&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Few fit options&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K944x8sq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--jibxGpn_--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1591631300670/Sony-WF-XB700.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K944x8sq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--jibxGpn_--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1591631300670/Sony-WF-XB700.jpg" alt="Sony WF-XB700"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sony-wfxb700"&gt;
  &lt;/a&gt;
  Sony WF-XB700
&lt;/h1&gt;

&lt;p&gt;The Sony WF-XB700 true wireless earbuds are an entry-level option within Sony's prodigious headphone lineup, offering a taste of Sony's sought-after sound design and quality construction at a more affordable price than high-end business like the WF-1000XM3.&lt;/p&gt;

&lt;p&gt;So what's the catch here? Basically, you're not getting high-tech features like noise-canceling, adjustable EQ, or any of the fancier features you'll find on the higher-end models. What you are getting is a workout-friendly pair of truly wireless earbuds with an accessible, very bass-forward sound profile. If the lack of features, limited controls, and inability to integrate these with Sony's Headphones Connect app isn't your cup of tea, you may have to spend a little more.&lt;/p&gt;

&lt;p&gt;The WF-XB700 isn't perfect, but no product is. If you've been wanting to dip your toes into true wireless earbuds but don't want to risk buying something that might sound terrible or break after a couple of months, Sony's WF-XB700 should be on your radar.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Workout ready&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Impressive playback time&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;No customization&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A bit bulky&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OhNbn9_s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--ANyHSuKK--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602251417394/Skullcandy-Sesh-Evo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OhNbn9_s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--ANyHSuKK--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602251417394/Skullcandy-Sesh-Evo.jpg" alt="Skullcandy Sesh Evo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#skullcandy-sesh-evo"&gt;
  &lt;/a&gt;
  Skullcandy Sesh Evo
&lt;/h1&gt;

&lt;p&gt;The Sesh Evo are among the smallest pairs of earbuds we tested. They feel a bit more secure than options like the tiny Monoprice True Wireless, but not by much. Like the Monoprice, they don’t come with wings, but the design might offer those with smaller ears an OK fit as the earbud itself looks like it would fill smaller ears.&lt;/p&gt;

&lt;p&gt;Our review sample, and their case, were a color Skullcandy calls “Bleached Blue” and it was a lovely alternative to the black-only options from most contenders we tested. They’re also available in green, red, and of course, black.&lt;/p&gt;

&lt;p&gt;Battery life is among the lowest in their class, even slightly worse than cheaper picks like the JLab Go Air. They claim 5 hours, and that’s what we measured. The case should offer 4-5 additional charges. The sound quality was tied with the Treblab X5 for the worst of the bunch. The bass is bloated and lacks definition, while at the same time there’s too much treble. Not a great mix.&lt;/p&gt;

&lt;p&gt;There are three EQ settings, including Music, Movie, and Podcast. The movie actually improves the bass a little, but makes the treble slightly worse, so it’s a bit of a wash. Podcast mostly accentuates the midrange, as you'd expect. They are IP55 rated, meaning they're secure against basic dust ingress and light jets of water.&lt;/p&gt;

&lt;p&gt;One last cool feature: they have a built-in Tile to help make them easier to find.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Available in lovely colors&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Compact&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Poor sound&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Only 3 tip options&lt;/p&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w7SNWQN1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--vUA9KJ9H--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602250784487/OnePlus-Buds.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w7SNWQN1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--vUA9KJ9H--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602250784487/OnePlus-Buds.jpg" alt="OnePlus Buds"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#oneplus-buds"&gt;
  &lt;/a&gt;
  OnePlus Buds
&lt;/h1&gt;

&lt;p&gt;The Apple AirPods are... wait hang on a minute… the OnePlus True Wireless is like a celebrity impersonator who doesn’t say they’re that specific actor, but still signs autographs if someone thinks they are. To say that the OnePlus TW are similar to the AirPods would be putting it mildly. It’d be putting it mildly to say it’s putting it mildly. Every person seeing you wearing these will think you have AirPods. If that’s what you want, without spending Apple money, go for it.&lt;/p&gt;

&lt;p&gt;They’re not great, however. Their smooth plastic and overall design never feel secure in your ears. The first night we got there, we put them on to listen to something while washing dishes. In less than a minute, the left one fell out, hit the counter, and plunked into the water. They’re IPX4 rated, meaning you shouldn’t dunk them, but they didn’t suffer any ill effects from our unexpected experiment. We don’t recommend trying it, however.&lt;/p&gt;

&lt;p&gt;If you don’t like the fit there’s no recourse. There are no tips or wings since they just hang off your ears like the “real” fruit ones. The sound is fairly balanced, better than you might expect given the hang-off-your-ears design, but is nothing impressive. Battery life is 7 hours, and the case should give you 3 additional charges.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AirPods style&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Better playback time than AirPods&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Balanced sound&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Prone to falling out&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unoriginal design&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#my-thoughts-on-air-pods"&gt;
  &lt;/a&gt;
  My thoughts on air pods!
&lt;/h1&gt;

&lt;p&gt;I too love the AirPods - I had the o.g. and then bought a pair of AP2s last fall b/c the originals were not working well anymore and I'm also a huge fan of what they provide. I've been exclusively on Bluetooth headphones since like 2016 or so - with the first Jaybirds and went through various versions up to the Kickstarter for a pair of 'truly wireless' headphones - but those were also just not good enough in the end.&lt;/p&gt;

&lt;p&gt;The AirPods have hit the mark for me since the beginning, tiny, solid sound, solid battery,"ok" mic, etc. That said - I tried my dad's AirPods on Christmas and I was IMMEDIATELY sold and ended up getting a pair before the end of my trip home. They hold in my ears, something the others never did, have ANC which I'd never had and is awesome (even if it may not be as amazing as a pair of over-the-ears or whatever), the mic is similarly good. I think they get much louder (perhaps that's just the seal), the sound and bass is significantly improved - I personally would absolutely recommend them!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tips-and-tricks-with-airpods"&gt;
  &lt;/a&gt;
  Tips and Tricks with AirPods
&lt;/h1&gt;

&lt;p&gt;Best Apple AirPod Features You Might Not Know About…&lt;br&gt;
airpods&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-the-easy-way-to-pair-with-your-iphone"&gt;
  &lt;/a&gt;
  1) The Easy Way To Pair With Your iPhone
&lt;/h1&gt;

&lt;p&gt;Apple has several ways you can pair your new AirPods to your iPhone, but most people look over the easiest. Simply make sure they are charged and inside the charging case. Then place the charging case with your AirPods inside right near your iPhone. Open the case and the iPhone will automatically detect the nearby AirPods. It will ask you to tap a button on the iPhone screen to pair them. That’s it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-easily-check-out-how-much-battery-life-is-left"&gt;
  &lt;/a&gt;
  2) Easily Check Out How Much Battery Life Is Left
&lt;/h1&gt;

&lt;p&gt;There’s actually TWO easy ways to check out your AirPod battery life remaining. The first tip here involves using the case right near your iPhone. Simply open the case and a battery status menu will appear on your iPhone telling you how much juice each AirPod has left.&lt;/p&gt;

&lt;p&gt;The second tip to do this involves simply ASKING your AirPods how much juice they have left. Simply double tp an AirPod and say “battery percentage” and Siri will tell you how much life your AirPods have left before they run out of power.&lt;/p&gt;

&lt;p&gt;Apple AirPods 2 Release Date-5&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-pair-airpods-with-android-phones"&gt;
  &lt;/a&gt;
  3) Pair AirPods With Android Phones
&lt;/h1&gt;

&lt;p&gt;While the big wireless feature of the AirPods is Apple’s new Apple H1 chip, which is how it connects to iOS devices, the AirPods also have your standard Bluetooth technology. This means that they can connect to any device that supports Bluetooth audio technology—like Android phones and Windows PCs.&lt;/p&gt;

&lt;p&gt;To do this, open the charging case and then press and hold the button until the indicator light blinks white. Now on your Android device, go into Bluetooth settings and tell it to connect to the AirPods via Bluetooth.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-charge-your-airpods-from-other-devices"&gt;
  &lt;/a&gt;
  4) Charge Your AirPods From Other Devices
&lt;/h1&gt;

&lt;p&gt;You normally charge the AirPods by placing them in the charging case and then plugging in a Lightning cable into it via a power source. However, you can also give juice to the case by docking it in other Lightning charging devices like iPhone docks and wireless speakers with built-in dock slots. Sure, this isn’t something you’ll be doing often, but if you’re in a pinch for some juice and the only thing around is a speaker dock with a Lightning port, well, you gotta do what you gotta do.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-change-the-name-of-your-airpods"&gt;
  &lt;/a&gt;
  5) Change The Name Of Your AirPods
&lt;/h1&gt;

&lt;p&gt;You can name your AirPods anything you want. While this is kind of pointless if you only have one pair, it’s helpful if you have more than one pair—so you can distinguish between the two—or if you live in a household where everyone has their own pair.&lt;/p&gt;

&lt;p&gt;To change the name of your AirPods on the iPhone go to Settings &amp;gt; Bluetooth and then tap your AirPods from the list of devices. On the next screen type in any name you want.&lt;/p&gt;

&lt;p&gt;airpods&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-disable-automatic-ear-detection"&gt;
  &lt;/a&gt;
  6) Disable Automatic Ear Detection
&lt;/h1&gt;

&lt;p&gt;AirPods are smart enough to know when they are in your ears and turn on. Automatic ear detection, when enabled, allows your iPhone to know when you’ve taken your AirPods out of your ears and thus pauses the music you were listening to. However, you can disable this feature by going to Settings &amp;gt; Bluetooth and then tap your AirPods from the list of devices. Now set automatic ear detection to “Off”.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-change-the-double-tap-settings"&gt;
  &lt;/a&gt;
  7) Change The Double Tap Settings
&lt;/h1&gt;

&lt;p&gt;The AirPods also have features that let you tap them to activate other actions. But you can change the action a double tap initiates. On the iPhone go to Settings &amp;gt; Bluetooth and then tap your AirPods from the list of devices. Now tap the double tap setting for both the Left and the Right AirPods and select your chosen actions.&lt;/p&gt;

&lt;p&gt;Your options include double-tapping an AirPod to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;activate Siri&lt;/li&gt;
&lt;li&gt;play/pause audio&lt;/li&gt;
&lt;li&gt;skip to the next track&lt;/li&gt;
&lt;li&gt;skip to the previous track
or you can also disable double-tap so it doesn’t do anything
And remember, you can set double-tap settings to be different for the Left and Right AirPods.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#8-assign-the-mic-to-a-specific-airpod"&gt;
  &lt;/a&gt;
  8) Assign The Mic To A Specific AirPod
&lt;/h1&gt;

&lt;p&gt;Each AirPod has a built-in mic and the devices are smart enough to know which mic to enable if you only put one AirPod in your ear. However, if you want to disable this feature for some reason go to Settings &amp;gt; Bluetooth and then tap your AirPods from the list of devices to find the option to set only a specific AirPod as your mic.&lt;/p&gt;

&lt;p&gt;A reason you might want to choose to only allow one AirPod (either your left or your right) to be your mic could be for privacy issues. For example, if you only have your left AirPod set to be your mic, then you can be assured if you remove your left AirPod from your ear, no one will hear what you’re saying even if you leave the right AirPod in.&lt;/p&gt;

&lt;p&gt;Apple AirPods 2 Release Date-5&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#9-ask-your-airpods-anything-you-want"&gt;
  &lt;/a&gt;
  9) Ask Your AirPods Anything You Want
&lt;/h1&gt;

&lt;p&gt;Of course, the big new feature of Apple’s second-generation AirPods is “Hey, Siri” support. You activate this simply by saying “Hey, Siri” and they asking whatever you want. If you aren’t a Siri fan, the new AirPods might change the way you think about Apple’s assistant. “Hey, Siri” support makes using Siri much more natural since you don’t need to take out your phone to interact with Siri.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#10-airpod-voice-commands-you-need-to-know"&gt;
  &lt;/a&gt;
  10) AirPod Voice Commands You Need To Know
&lt;/h1&gt;

&lt;p&gt;The latest generation AirPods lets you interact with them using a ton of voice commands. This is thanks to its “Hey Siri” support. Here are some of our favorite voice commands. To use them, simply say, “Hey Siri…” and then follow with any of the following commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;“Skip this song.”&lt;/li&gt;
&lt;li&gt;“Play my Party playlist.”&lt;/li&gt;
&lt;li&gt;“How is the battery on my AirPods?”&lt;/li&gt;
&lt;li&gt;“Turn down (or up) the volume.”&lt;/li&gt;
&lt;li&gt;“Raise the volume 25 percent.”&lt;/li&gt;
&lt;li&gt;“Call [name of contact].”&lt;/li&gt;
&lt;li&gt;“Pause music.”&lt;/li&gt;
&lt;li&gt;“Play country music.”&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclution"&gt;
  &lt;/a&gt;
  conclution
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#follow-for-more-content"&gt;
  &lt;/a&gt;
  Follow for more content!
&lt;/h3&gt;

&lt;p&gt;I put a lot of time into this, don't let this post flop. :D&lt;br&gt;
let me know if you're getting a pair. Or tell me your own experiences with any of the headphones listed above.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>audio</category>
      <category>cheap</category>
      <category>facts</category>
    </item>
    <item>
      <title>How To: CSS Table Swipe Interaction</title>
      <author>Eduardo Ferreira</author>
      <pubDate>Thu, 13 May 2021 21:59:47 +0000</pubDate>
      <link>https://dev.to/eduferfer/how-to-css-table-swipe-interaction-3ih3</link>
      <guid>https://dev.to/eduferfer/how-to-css-table-swipe-interaction-3ih3</guid>
      <description>&lt;p&gt;Table rows or list items often have actions associated to them, such as deleting, sharing and editing. When designing for touch devices, designers can take advantage of swipe gestures to allow users to quickly perform common actions without having to navigate to a different page or open drawers or modal dialogs.&lt;/p&gt;

&lt;p&gt;Gesture based interactions are supported by native mobile languages, but can be tricky to implement in HTML/CSS/JS and are often over-done with excessive use of JavaScript, which can cause low performance and chunky interactions.&lt;/p&gt;

&lt;p&gt;In this post, I will walk through 3 simple steps to build a swipe gesture interaction using solely HTML, CSS and a little bit of JS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note: the demos in this post should be used on touch devices.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;— &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-requirements"&gt;
  &lt;/a&gt;
  Basic requirements
&lt;/h2&gt;

&lt;p&gt;Let’s start by defining what we want to build. Our swipe snippet should allow the user to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use touch to swipe a table row either right or left.&lt;/li&gt;
&lt;li&gt;Unveil an action (icon and coloured background) when the user swipes.&lt;/li&gt;
&lt;li&gt;Automatically restore scroll position when the user releases the finger.&lt;/li&gt;
&lt;li&gt;Trigger an action when the user releases the finger (in case they have swiped far enough).&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#1-setting-the-swipeable-element"&gt;
  &lt;/a&gt;
  1. Setting the swipe-able element
&lt;/h2&gt;

&lt;p&gt;As a first step, let’s create our swipe-able element and add basic styles to it. To style it, it is given a class named &lt;code&gt;.swipe-element&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To set the stage for the swipe interaction, we can wrap the element around a div with the class name of &lt;code&gt;.swipe-container&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To reduce the visual clutter, the &lt;code&gt;.swipe-container&lt;/code&gt; should have the scrollbar hidden.&lt;/li&gt;
&lt;li&gt;To automatically restore scroll position, the &lt;code&gt;.swipe-container&lt;/code&gt; should have &lt;code&gt;scroll-snap-type: x mandatory&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;To indicate which element should be in focus when automatically restoring the scroll position, the &lt;code&gt;swipe-element&lt;/code&gt; should have &lt;code&gt;scroll-snap-align: start&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe src="https://stackblitz.com/edit/css-swipe-1?embed=1&amp;amp;&amp;amp;" width="100%" height="500"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2-adding-the-left-and-right-actions"&gt;
  &lt;/a&gt;
  2. Adding the left and right actions
&lt;/h2&gt;

&lt;p&gt;With the container and scrolling logic in place, the next step is to add the actions.&lt;/p&gt;

&lt;p&gt;The icons used in this example are from the Material Icons font.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As a wrapper for the icon, the &lt;code&gt;.action&lt;/code&gt; div, as well as the previously added &lt;code&gt;.swipe-element&lt;/code&gt; should have &lt;code&gt;min-width: 100%&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;i&lt;/code&gt; icon should have &lt;code&gt;position: sticky&lt;/code&gt; to ensure it is always visible as soon as the user starts swiping.&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;.right&lt;/code&gt; action should have &lt;code&gt;justify-content: flex-end&lt;/code&gt; to make the icon stick to the right side.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe src="https://stackblitz.com/edit/css-swipe-2?embed=1&amp;amp;&amp;amp;" width="100%" height="500"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3-triggering-the-action"&gt;
  &lt;/a&gt;
  3. Triggering the action
&lt;/h2&gt;

&lt;p&gt;When the user releases the finger, our element should check how far the user has swiped and trigger an action in case they have done it far enough.&lt;/p&gt;

&lt;p&gt;There should be a distinction between left and right swipe, so the application can handle them independently.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To start, an &lt;code&gt;ontouchend&lt;/code&gt; event listener should be added to the &lt;code&gt;.swipe-container&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In a function called &lt;code&gt;handleSwipe()&lt;/code&gt;, we should first define the &lt;code&gt;minDistance&lt;/code&gt; the user should swipe for the action to be triggered.&lt;/li&gt;
&lt;li&gt;After that, we should calculate the &lt;code&gt;swipeDistance&lt;/code&gt; by simply subtracting the container’s &lt;code&gt;clientWidth&lt;/code&gt; from its &lt;code&gt;scrollLeft&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;Negative values represent a left swipe, while positive ones indicate a right one. In case the &lt;code&gt;swipeDistance&lt;/code&gt; is smaller than &lt;code&gt;minDistance * -1&lt;/code&gt;, we should trigger the left action, and if it is greater than &lt;code&gt;minDistance&lt;/code&gt;, the right action should be triggered instead.&lt;/li&gt;
&lt;li&gt;In case the user hasn’t swiped either left or right further than the minDistance, nothing should be triggered.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe src="https://stackblitz.com/edit/css-swipe-3?embed=1&amp;amp;&amp;amp;" width="100%" height="500"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Using standard CSS selectors, we have built a swipe-able element that can be used for enhancing the user experience of lists and tables on mobile devices.&lt;/p&gt;

&lt;p&gt;With some tweaks and a little bit of imagination, this snippet can be modified or extended to show only one action or indicating visually whether the user has swiped far enough, for example.&lt;/p&gt;

&lt;p&gt;This component is also available as a plug-and-play in the &lt;a href="https://kor-ui.com/components/swipe-actions"&gt;Kor UI library&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>javascript</category>
      <category>ux</category>
    </item>
    <item>
      <title>ClassCord, verified student-focused discord bot made in Python</title>
      <author>Alex Craviotto</author>
      <pubDate>Thu, 13 May 2021 21:51:36 +0000</pubDate>
      <link>https://dev.to/alexcraviotto/classcord-verified-student-focused-discord-bot-made-in-python-35b9</link>
      <guid>https://dev.to/alexcraviotto/classcord-verified-student-focused-discord-bot-made-in-python-35b9</guid>
      <description>&lt;p&gt;A year ago, when I started programming and gained some concepts I decided to create a discord bot to improve my skills. &lt;br&gt;
I decided to create a bot focused on students and teachers and I didn't think at all that it would be used on so many servers!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-what-is-classcord"&gt;
  &lt;/a&gt;
  But... what is classcord?
&lt;/h3&gt;

&lt;p&gt;Classcord is a bot designed to focus on the world of education and improve productivity. With classcord we adapt discord to these areas so that any user without high technological knowledge can use it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-functions-does-it-have"&gt;
  &lt;/a&gt;
  What functions does it have?
&lt;/h3&gt;

&lt;p&gt;Currently it has functions such as a study tracking, the pomodoro method with access to statistics, a reminder system, events...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-have-i-learned-from-this-project"&gt;
  &lt;/a&gt;
  What have I learned from this project?
&lt;/h3&gt;

&lt;p&gt;Thanks to the development of classcord I have improved a lot, as it has made me take my first steps in deploys and configurations of VPS, databases, among others... as well as improvement in git.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#want-to-try-classcord"&gt;
  &lt;/a&gt;
  Want to try ClassCord?
&lt;/h3&gt;

&lt;p&gt;If you want to try ClassCord here is the &lt;a href="https://classcord.me/"&gt;website&lt;/a&gt; to add it!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#are-you-interested-in-contributing-to-the-project"&gt;
  &lt;/a&gt;
  Are you interested in contributing to the project?
&lt;/h3&gt;

&lt;p&gt;Currently the classcord code is private, but the website is open source so anyone can participate in improving it. I am totally inexperienced in web so any contribution would be great for me! Here is the repo: &lt;a href="https://github.com/classcord/classcord-website"&gt;https://github.com/classcord/classcord-website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>discord</category>
      <category>beginners</category>
      <category>bot</category>
    </item>
    <item>
      <title>How To Build A Virtual Event Site With Angular (Youtube-Live Clone)</title>
      <author>Gospel Darlington</author>
      <pubDate>Thu, 13 May 2021 21:44:10 +0000</pubDate>
      <link>https://dev.to/daltonic/how-to-build-a-virtual-event-site-with-angular-youtube-live-clone-356p</link>
      <guid>https://dev.to/daltonic/how-to-build-a-virtual-event-site-with-angular-youtube-live-clone-356p</guid>
      <description>&lt;p&gt;What you’ll be building. &lt;a href="https://clone-6fd6f.web.app/"&gt;Demo&lt;/a&gt;, Git Repo &lt;a href="https://github.com/Daltonic/youtube-live-clone"&gt;Here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nEZ2o_Ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jv71b6iu4sx0g894s6dg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nEZ2o_Ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jv71b6iu4sx0g894s6dg.gif" alt="Youtube-Live Clone"&gt;&lt;/a&gt;&lt;/p&gt;
Youtube-Live Clone



&lt;h4&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h4&gt;

&lt;p&gt;There is a real principle in life that states: "If you want to be great, then start by doing great things in little ways". This also applies to you as a developer aspiring to influence the industry in a great way, "You can start by building great things in a little way". One way to build great things is by starting small. And the &lt;a href="https://www.cometchat.com/"&gt;cometchat&lt;/a&gt; communication SDK offers you the opportunity to integrate some great messaging features into your apps such as text, audio, and video chatting features.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h4&gt;

&lt;p&gt;To follow this tutorial, you must have a basic understanding of the general principles of &lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt;. This will help you to speedily digest this tutorial.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#installing-the-app-dependencies"&gt;
  &lt;/a&gt;
  Installing The App Dependencies
&lt;/h4&gt;

&lt;p&gt;First, you need to have NodeJs installed on your machine, you can go to their &lt;a href="https://nodejs.org/"&gt;website&lt;/a&gt; to do that.&lt;/p&gt;

&lt;p&gt;Second, you need to also have the Angular-CLI installed on your computer using the command below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; @angular/cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Next, create a new project with the name youtube-live-clone.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ng new youtube-live-clone
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;ng new&lt;/code&gt; command prompts you for information about features to include in the initial app. Accept the defaults by pressing the Enter or Return key.&lt;/p&gt;

&lt;p&gt;The Angular CLI installs the necessary Angular npm packages and other dependencies. This can take a few minutes.&lt;/p&gt;

&lt;p&gt;Last, install these essential dependencies for our project using the command below.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ng add @angular/material
npm &lt;span class="nb"&gt;install&lt;/span&gt; @angular/youtube-player
npm &lt;span class="nb"&gt;install&lt;/span&gt; @angular/fire
ng add @angular/fire
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now that we're done with the installations, let's move on to building our youtube-live clone solution.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#installing-comet-chat-sdk"&gt;
  &lt;/a&gt;
  Installing Comet Chat SDK
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Head to CometChat Pro and create an account.&lt;/li&gt;
&lt;li&gt;From the dashboard, add a new app called "youtube-clone".&lt;/li&gt;
&lt;li&gt;Select this newly added app from the list.&lt;/li&gt;
&lt;li&gt;From the Quick Start copy the APP_ID, REGION and AUTH_KEY. These will be used later.&lt;/li&gt;
&lt;li&gt;Navigate to the Users tab, and delete all the default users and groups leaving it clean (very important).&lt;/li&gt;
&lt;li&gt;Get the Angular CLI installed on your machine by entering this command on your terminal. &lt;code&gt;npm install -g @angular/cli&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Open the "environment.ts" file in the project.&lt;/li&gt;
&lt;li&gt;Enter your secret keys from comet Chat and Firebase below on the next heading.&lt;/li&gt;
&lt;li&gt;Copy the same settings into the "environment.prod.ts" as well.&lt;/li&gt;
&lt;li&gt;Run the following command to install the comet chat SDK.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; @cometchat-pro/chat@2.3.0 &lt;span class="nt"&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#the-environment-variables"&gt;
  &lt;/a&gt;
  The Environment Variables
&lt;/h4&gt;

&lt;p&gt;The setup below spells out the format for configuring the environment.ts files for this project.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
firebase: &lt;span class="o"&gt;{&lt;/span&gt;
    apiKey: &lt;span class="s1"&gt;'xxx-xxx-xxx-xxx-xxx-xxx-xxx-xxx'&lt;/span&gt;,
    authDomain: &lt;span class="s1"&gt;'xxx-xxx-xxx-xxx-xxx-xxx-xxx'&lt;/span&gt;,
    databaseURL: &lt;span class="s1"&gt;'xxx-xxx-xxx-xxx-xxx-xxx-xxx-xxx-xxx'&lt;/span&gt;,
    projectId: &lt;span class="s1"&gt;'xxx-xxx-xxx'&lt;/span&gt;,
    storageBucket: &lt;span class="s1"&gt;'xxx-xxx-xxx-xxx-xxx'&lt;/span&gt;,
    messagingSenderId: &lt;span class="s1"&gt;'xxx-xxx-xxx'&lt;/span&gt;,
    appId: &lt;span class="s1"&gt;'xxx-xxx-xxx-xxx-xxx-xxx-xxx-xxx'&lt;/span&gt;,
    measurementId: &lt;span class="s1"&gt;'xxx-xxx-xxx'&lt;/span&gt;,
  &lt;span class="o"&gt;}&lt;/span&gt;,
  APP_ID: &lt;span class="s1"&gt;'xxx-xxx-xxx'&lt;/span&gt;,
  AUTH_KEY: &lt;span class="s1"&gt;'xxx-xxx-xxx-xxx-xxx-xxx-xxx-xxx'&lt;/span&gt;,
  APP_REGION: &lt;span class="s1"&gt;'xx'&lt;/span&gt;,
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#setting-up-firebase-project"&gt;
  &lt;/a&gt;
  Setting Up Firebase Project
&lt;/h4&gt;

&lt;p&gt;Head to Firebase create a new project and activate the email and password authentication service. This is how you do it.&lt;/p&gt;

&lt;p&gt;To begin using Firebase, you’ll need a Gmail account. Head over to Firebase and create a new project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J8JeuDz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8i1l211jn25943mtl2z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J8JeuDz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8i1l211jn25943mtl2z.png" alt="Firebase Console Create Project"&gt;&lt;/a&gt;&lt;/p&gt;
Firebase Console Create Project



&lt;p&gt;Firebase provides support for authentication using different providers. For example Social Auth, phone numbers as well as the standard email and password method. Since we’ll be using the email and password authentication method in this tutorial, we need to enable this method for the project we created in Firebase, as it is by default disabled.&lt;/p&gt;

&lt;p&gt;Under the authentication tab for your project, click the sign-in method and you should see a list of providers Firebase currently supports.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mW2ZYJEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5dmnx5ckfuqt4fa0gt9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mW2ZYJEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5dmnx5ckfuqt4fa0gt9.png" alt="Firebase Authentication Options"&gt;&lt;/a&gt;&lt;/p&gt;
Firebase Authentication Options



&lt;p&gt;Next, click the edit icon on the email/password provider and enable it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xk6fmHnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7dkr0ddis55pybi08n7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xk6fmHnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7dkr0ddis55pybi08n7.png" alt="Firebase Enabling Authentication"&gt;&lt;/a&gt;&lt;/p&gt;
Firebase Enabling Authentication



&lt;p&gt;Next, you need to go and register your application under your Firebase project. On the project’s overview page, select the add app option and pick web as the platform.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yASlV_IP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6q6pvwwks2sdcdrqos1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yASlV_IP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6q6pvwwks2sdcdrqos1.png" alt="Youtube-Live Clone Project Page"&gt;&lt;/a&gt;&lt;/p&gt;
Youtube-Live Clone Project Page



&lt;p&gt;Once you’re done registering the application, you’ll be presented with a screen containing your application credentials. Take note of the second script tag as we’ll be using it shortly in our Angular application.&lt;/p&gt;

&lt;p&gt;Congratulations, now that you're done with the installations, let's do some configurations.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#configuring-comet-chat-sdk"&gt;
  &lt;/a&gt;
  Configuring Comet Chat SDK
&lt;/h4&gt;

&lt;p&gt;Inside your project structure, open the &lt;code&gt;main.ts&lt;/code&gt; and paste these codes.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The main.ts file





&lt;p&gt;The above codes initialize comet chat in your app and before our app starts up. The main.ts entry file uses your comet chat API Credentials. The &lt;code&gt;environment.ts&lt;/code&gt; file also contains your Firebase Configurations variable file. Please do not share your secret keys on Github.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#setting-up-the-router"&gt;
  &lt;/a&gt;
  Setting Up The Router
&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;app-routing.module.ts&lt;/code&gt; file has all the routes available in our app along with their security clearance.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The App Routing Module file




&lt;h4&gt;
  &lt;a href="#project-structure"&gt;
  &lt;/a&gt;
  Project Structure
&lt;/h4&gt;

&lt;p&gt;The image below reveals the project structure. Make sure you see the folder arrangement before proceeding.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fNWR1ARK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lu3jsa3h2dcs8fqu7vxy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fNWR1ARK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lu3jsa3h2dcs8fqu7vxy.png" alt="Youtube-Live Clone Project Structure"&gt;&lt;/a&gt;&lt;/p&gt;
Youtube-Live Clone Project Structure



&lt;p&gt;Now let's make the rest of the project components as seen in the image above.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-app-component"&gt;
  &lt;/a&gt;
  The App Component
&lt;/h4&gt;

&lt;p&gt;The following code is a wrapper around our app within the &lt;code&gt;angular-router&lt;/code&gt; enabling swift navigation. For each route, this component navigates our app to the appropriate URL.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The app.component.ts file




&lt;p&gt;Replace everything in the &lt;code&gt;app.component.html&lt;/code&gt; file with &lt;code&gt;&amp;lt;router-outlet&amp;gt;&amp;lt;/router-outlet&amp;gt;&lt;/code&gt; and remove every style from the &lt;code&gt;app.component.css&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-angular-material-icons-setup"&gt;
  &lt;/a&gt;
  The Angular Material Icons Setup
&lt;/h4&gt;

&lt;p&gt;The following code will configure our app to harness the full power of material icons throughout our project.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The angular-material.module.ts file




&lt;h4&gt;
  &lt;a href="#the-app-module"&gt;
  &lt;/a&gt;
  The App Module
&lt;/h4&gt;

&lt;p&gt;Paste the codes in your &lt;code&gt;app.module.ts file&lt;/code&gt;, this is a very important file that bundles all the components we will be using for our project.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The app.module.ts




&lt;h4&gt;
  &lt;a href="#the-sidebar-component"&gt;
  &lt;/a&gt;
  The Sidebar Component
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tm3H8vJ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rjm29bqhvizj79b01f0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tm3H8vJ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rjm29bqhvizj79b01f0.png" alt="The Sidebar component"&gt;&lt;/a&gt;&lt;/p&gt;
The Sidebar component



&lt;p&gt;The sidebar component, beautifully crafted with sub-components mirrors the routes of the real &lt;strong&gt;YouTube live&lt;/strong&gt;. You must get to study the markup and styling structure on your own time. This component is reused across two other components in our app. Here is the code that sponsors its operation.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Sidebar Component




&lt;h4&gt;
  &lt;a href="#the-header-component"&gt;
  &lt;/a&gt;
  The Header Component
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DV7-dSjw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cfnskb2qhdhrn3hr12b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DV7-dSjw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cfnskb2qhdhrn3hr12b.png" alt="The Header component"&gt;&lt;/a&gt;&lt;/p&gt;
The Header component



&lt;p&gt;The header component, this single-file reusable component carries a bulk of vital features necessary for the functioning of our application. Besides being the navigational agent of our app, it also houses the search-bar component responsible for sorting out relevant events for the user. No big words, here are the codes responsible for its action.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Header Component file




&lt;h4&gt;
  &lt;a href="#the-video-components"&gt;
  &lt;/a&gt;
  The Video Components
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HU9sMVbP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29yei6faxadg4537k9mh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HU9sMVbP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29yei6faxadg4537k9mh.png" alt="The Video component"&gt;&lt;/a&gt;&lt;/p&gt;
The Video component



&lt;p&gt;This is a single-file component used across the app for listing events retrieved from firestore. It carries event information such as the title, description, image URL, and YouTube link. The success of this app owes a big thanks to this very component. The codes below clearly describe the functionality of this component.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Video Card component




&lt;h4&gt;
  &lt;a href="#the-related-video-component"&gt;
  &lt;/a&gt;
  The Related Video Component
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3hpaulMh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/locmmd2vj3vodvvg1fm5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3hpaulMh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/locmmd2vj3vodvvg1fm5.png" alt="The Related Video Component"&gt;&lt;/a&gt;&lt;/p&gt;
The Related Video Component



&lt;p&gt;Like the &lt;code&gt;video.component.ts&lt;/code&gt;, this component acts similarly. The only difference is that, while the video components list videos vertically, this component list videos horizontally. Here are the codes for that.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Related Videos component




&lt;h4&gt;
  &lt;a href="#the-rows-video-component"&gt;
  &lt;/a&gt;
  The Rows Video Component
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1zkukKpS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llfs2cphefdu1laz6pln.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1zkukKpS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llfs2cphefdu1laz6pln.png" alt="The Rows Video Component"&gt;&lt;/a&gt;&lt;/p&gt;
The Rows Video Component



&lt;p&gt;This component is responsible for making the sidebar routes look like the image above. It takes an Angular-Material Icon and a title to display what you see above. Below is the code for it.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Rows Video Component




&lt;h4&gt;
  &lt;a href="#the-registration-component"&gt;
  &lt;/a&gt;
  The Registration Component
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n4VESm8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7s3zgcmgd7uefjilcru.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n4VESm8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7s3zgcmgd7uefjilcru.png" alt="The Registration Component"&gt;&lt;/a&gt;&lt;/p&gt;
The Registration Component



&lt;p&gt;This component combines the power of firebase auth-service and comet chat such that whenever a new user signs up for our app, the user’s details are captured by firebase and also registered on our comet chat account. The code below explains it in detail.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fullname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fullname&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;avatar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;generateImageFromIntial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fullname&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createUserWithEmailAndPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;
          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateProfile&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fullname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;photoURL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;avatar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;})&lt;/span&gt;
          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;signUpWithCometChat&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;avatar&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;signUpWithCometChat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;apiKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;APP_KEY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;displayName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMetadata&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;avatar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;avatar&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;navigate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;So, whenever a user registers in our app, automatically, he is simultaneously registered on our comet chat account. Here is the full code that explains it all.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Registration Component TypeScript File






&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Registration Component HTML file





&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Registration Component CSS file




&lt;h4&gt;
  &lt;a href="#the-login-component"&gt;
  &lt;/a&gt;
  The Login Component
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nABQQsWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5d8bp16isp028iulmqsx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nABQQsWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5d8bp16isp028iulmqsx.png" alt="The Login Componentt"&gt;&lt;/a&gt;&lt;/p&gt;
The Login Component



&lt;p&gt;Apart from being gorgeously styled, the Login component follows the behavior of the Registration component. For example, if a user named Maxwell registered on our app, he is then navigated to the login page to sign in. Because comet chat also has his details, the moment he signs in, he will also be signed in by comet chat. The piece of code below demonstrates this process better.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;signInWithEmailAndPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loginCometChat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;loginCometChat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;apiKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;APP_KEY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;navigate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Once a user is successfully logged in, he is then redirected to the home page. The &lt;code&gt;route-guard&lt;/code&gt; within the &lt;code&gt;app.routing-module.ts&lt;/code&gt; ensures that only authenticated users are permitted to access the home page. The following scripts below describes the overall operations of the login component.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Login Component TypeScipt file






&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Login Component HTML file





&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Login Component CSS file




&lt;h4&gt;
  &lt;a href="#the-profile-component"&gt;
  &lt;/a&gt;
  The Profile Component
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E7fZUnRM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l405bqvh1brfnhf8mkn2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E7fZUnRM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l405bqvh1brfnhf8mkn2.png" alt="The Profile Component"&gt;&lt;/a&gt;&lt;/p&gt;
The Profile Component



&lt;p&gt;The profile component is charged with the responsibility of updating our data which will reflect across our app. One of the primary tasks of this component is to change a user's profile.&lt;/p&gt;

&lt;p&gt;In the registration component, once a user signs up, we generated a placeholder avatar for him using the initial of his name. The profile component allows a user to update their avatar to their preferred choice. Here is the full code performing this operation.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Profile Component TypeScript File





&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Profile Component HTML File





&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Profile Component CSS File




&lt;h4&gt;
  &lt;a href="#the-createevent-component"&gt;
  &lt;/a&gt;
  The Create-Event Component
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oPQnVFB4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69omdr155vq57vhaw48c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oPQnVFB4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69omdr155vq57vhaw48c.png" alt="The Create-Event Component"&gt;&lt;/a&gt;&lt;/p&gt;
The Create-Event Component



&lt;p&gt;This is a major component with many responsibilities associated with the success of our application. This component retains the duty of collecting an event’s information like the video title, link, image URL, description, and so on. The image above clearly describes it.&lt;/p&gt;

&lt;p&gt;You must understand some background activities that are transacted whenever an event is added to our platform.&lt;/p&gt;

&lt;p&gt;For instance, a user named Musa adds a new event to our platform, two operations were carried out behind the scene. One, firebase stored the details of that event, and comet chat created a group just for that event as well. The code below explains it better.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NgForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;valid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;views&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;randomNumber&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;authState&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firestore&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;events&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;groupName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toVideoId&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;videoId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;guid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cometChatCreateGroup&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;groupName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;guid&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;cometChatCreateGroup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GUID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;guid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;groupName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;groupType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GROUP_TYPE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PUBLIC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;group&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;GUID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;groupName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;groupType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createGroup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Group created successfully:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Group creation failed with exception:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now that you understand what is happening under the hood, let’s have a look at the full code of this component.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Create-Event TypeScript File






&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Create-Event HTML File





&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Create-Event CSS File




&lt;h4&gt;
  &lt;a href="#the-editevent-component"&gt;
  &lt;/a&gt;
  The Edit-Event Component
&lt;/h4&gt;

&lt;p&gt;Like the create-event component, the edit component those almost the same job, only that it modifies the details of the event you added to the platform.&lt;/p&gt;

&lt;p&gt;There is an important mode of operation that it does which can be best explained with the code snippets below.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Edit-Event TypeScript File





&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Edit-Event HTML File





&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Edit-Event CSS File




&lt;h4&gt;
  &lt;a href="#the-events-component"&gt;
  &lt;/a&gt;
  The Events Component
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jffitrws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfy0i4c2ad9gtly714y5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jffitrws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfy0i4c2ad9gtly714y5.png" alt="The Events Component"&gt;&lt;/a&gt;&lt;/p&gt;
The Events Component



&lt;p&gt;This is a big-player component in the overall success of our application. Its assignment is to list elegantly all the events we have created in our app.&lt;/p&gt;

&lt;p&gt;It employs the services of the video component for vertically rendering video cards to the view. No more talks, let’s see how it functions code-wise.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Events Component TypeScript File





&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Events Component HTML File





&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Events Component CSS File




&lt;h4&gt;
  &lt;a href="#the-event-component"&gt;
  &lt;/a&gt;
  The Event Component
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RZsEUZP0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddyqgfe3ka4atuun63dh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RZsEUZP0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddyqgfe3ka4atuun63dh.png" alt="The Event Component"&gt;&lt;/a&gt;&lt;/p&gt;
The Event Component



&lt;p&gt;This component may sound similar to the previous component, but they do totally different things. While the events component displays a list of events this component showcases a single event.&lt;/p&gt;

&lt;p&gt;Other than the cool design it features, the event component embodies a full catalog of mind-blowing responsibilities, let’s list them.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Event Video Streaming&lt;/li&gt;
&lt;li&gt;Live-Chatting Activity&lt;/li&gt;
&lt;li&gt;Related Videos Displaying&lt;/li&gt;
&lt;li&gt;Performs Real-Time Messaging&lt;/li&gt;
&lt;li&gt;Event Edit &amp;amp; Delete Abilities&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s some responsibilities don’t you think so? Allow me to discuss some of the functionalities with you in codes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// This method listens for a real-time message and renders it to view&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;listenForMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;guid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;listenerID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;guid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addMessageListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;listenerID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MessageListener&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;onTextMessageReceived&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollToEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// This method retreives all the messages for the current event&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;getMessages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;guid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;messagesRequest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MessagesRequestBuilder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setLimit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setGUID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;guid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;build&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;messagesRequest&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetchPrevious&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Message fetching failed with error:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// This method sends a new message into the group&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;sendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NgForm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;receiverID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;guid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;messageText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;receiverType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RECEIVER_TYPE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GROUP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;textMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TextMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;receiverID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;messageText&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;receiverType&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;textMessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollToEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Message sending failed with error:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;ngOnDestroy&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeMessageListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// This method joins a user into a group associated with an event&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;joinGroup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;guid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GUID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;guid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;groupType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GROUP_TYPE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PUBLIC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;CometChat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;joinGroup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;GUID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;groupType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Group joined successfully:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;navigate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;events&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;guid&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ERR_ALREADY_JOINED&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Group joining failed with exception:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;navigate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;events&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;guid&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now that you understand the background activities within this component, it’s time you see the full code.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Event Component TypeScript File






&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Event Component HTML File





&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Event Component CSS File




&lt;h4&gt;
  &lt;a href="#the-search-component"&gt;
  &lt;/a&gt;
  The Search Component
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zo5mSsub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xncq3fx9l1bmwywo9a8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zo5mSsub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xncq3fx9l1bmwywo9a8.png" alt="The Search Component"&gt;&lt;/a&gt;&lt;/p&gt;
The Search Component



&lt;p&gt;Lastly, let’s discuss how the search component resolves events sorting operations. Obviously, as events are added more into the platform, a threshold will come that will require an ability to search for events. This component offers that solution, let’s see the logic behind it in the codes below.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Event Component TypeScript File





&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Event Component HTML File





&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
The Event Component CSS File




&lt;p&gt;Once you are done pasting the codes as directed, run the command below to start your application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ng serve &lt;span class="nt"&gt;--open&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After a few seconds of building in the terminal, your app should be up and running.&lt;/p&gt;

&lt;p&gt;Congratulations, you just completed the clone of YouTube-Live, great job!!!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;In conclusion, building a virtual event site such as YouTube-Live is a fantastic idea to up your development skill. Especially, the integration of a live-chatting feature using the comet chat SDK makes a dream come true for a fellow like me.&lt;/p&gt;

&lt;p&gt;This tutorial has educated you with the abilities needed to pull together a clone of one of the most valuable applications of our time. It's time to get busy and replicate a YouTube-Live Clone.&lt;/p&gt;

</description>
      <category>youtube</category>
      <category>events</category>
      <category>cometchat</category>
      <category>angular</category>
    </item>
    <item>
      <title>Deploying a FastAPI backend using AWS Amplify Container-based REST APIs</title>
      <author>siegerts</author>
      <pubDate>Thu, 13 May 2021 21:17:35 +0000</pubDate>
      <link>https://dev.to/siegerts/deploying-a-fastapi-backend-using-aws-amplify-container-based-rest-apis-2f6i</link>
      <guid>https://dev.to/siegerts/deploying-a-fastapi-backend-using-aws-amplify-container-based-rest-apis-2f6i</guid>
      <description>&lt;p&gt;No surprise that it's a difficult process to go from development to production deployments in an organization 🤷. &lt;/p&gt;

&lt;p&gt;This is especially true for analytics and data science teams developing models or business logic. There's usually not a clear path or tooling to support application hand-offs or deployments across teams.&lt;/p&gt;

&lt;p&gt;One way to bridge the gap between applications is to allow for service-to-service communication. REST APIs are great for this type of use-case. Especially when auto-generated, interactive documentation, is available out-of-the-box 😉.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Amplify provides a great option for this - Serverless containers using API Gateway + AWS Fargate.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This guide will follow the steps outlined in the &lt;a href="https://docs.amplify.aws/cli/usage/containers"&gt;Serverless containers&lt;/a&gt; section of the Amplify documentation and the &lt;a href="https://fastapi.tiangolo.com/deployment/docker/"&gt;FastAPI Docker Deployment&lt;/a&gt; documentation to quickly create and deploy a production-ready, scalable REST API.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;p&gt;You'll need to have the below installed and configured.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.amplify.aws/cli/start/install#install-the-amplify-cli"&gt;AWS Amplify CLI&lt;/a&gt; - working with Amplify (I'm using &lt;code&gt;v4.50.2&lt;/code&gt; )&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.docker.com/products/docker-desktop"&gt;Docker&lt;/a&gt; - testing the APIs locally&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#fastapi"&gt;
  &lt;/a&gt;
  FastAPI
&lt;/h3&gt;

&lt;p&gt;As mentioned above, we'll use FastAPI as the backend framework. The application pattern will feel natural if you're familiar with &lt;a href="https://flask.palletsprojects.com/en/2.0.x/"&gt;Flask&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;FastAPI has quickly become a go-to framework for setting up APIs for data science and analytics-based workloads. From the project page: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Among some of the callouts:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Fast: Very high performance, on par with NodeJS and Go&lt;/em&gt; &lt;br&gt;
&lt;em&gt;Robust: Get production-ready code. With automatic interactive documentation.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is a great option for data science teams that want to focus on productionalizing APIs with the ability to scale in the future if needed.&lt;/p&gt;

&lt;p&gt;Also, as we'll see below, testing locally is a smooth process using Docker.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#serverless-containers-with-amplify"&gt;
  &lt;/a&gt;
  Serverless containers with Amplify
&lt;/h3&gt;

&lt;p&gt;If you need an escape hatch from just using Lambda then this may be a great option for you. We'll walk through a more basic set up below but the same approach can be leveraged for more complex backends using a &lt;strong&gt;docker-compose.yml&lt;/strong&gt; configuration.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Serverless containers provide the ability for you to deploy APIs and host websites using AWS Fargate. Customers with existing applications or those who require a lower level of control can bring Docker containers and deploy them into an Amplify project fully integrating with other resources.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#project-set-up"&gt;
  &lt;/a&gt;
  Project set up
&lt;/h2&gt;

&lt;p&gt;Okay, let's deploy an API.&lt;/p&gt;

&lt;p&gt;First, create a new directory and initialize the the Amplify project. In this example, I'm not hooking up a frontend so I just select the default options. &lt;strong&gt;But&lt;/strong&gt;, if a frontend is something that you're interested in, then it's possible to layer that on and have the UI (React, Vue, etc.) talk to the backend API that is being created.&lt;/p&gt;

&lt;p&gt;Make the directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; &lt;span class="nb"&gt;mkdir &lt;/span&gt;fastapi-amplify
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Initialize the Amplify project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;amplify init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;
  Terminal workflow
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Scanning for plugins...
Plugin scan successful
Note: It is recommended to run this command from the root of your app directory
? Enter a name for the project fastapiamplify
? Enter a name for the environment dev
? Choose your default editor: Visual Studio Code
? Choose the type of app that you're building javascript
Please tell us about your project
? What javascript framework are you using none
? Source Directory Path:  src
? Distribution Directory Path: dist
? Build Command:  npm run-script build
? Start Command: npm run-script start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enabling-containerbased-deployments"&gt;
  &lt;/a&gt;
  Enabling container-based deployments
&lt;/h2&gt;

&lt;p&gt;Now, with the project initialized, we need to enable the use of the container-based deployment options.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;amplify configure project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ggYljPnP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6vf5easxukau9cci35oz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ggYljPnP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6vf5easxukau9cci35oz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
  Terminal workflow
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;? Which setting do you want to configure? Advanced: Container-based deployments
Using default provider  awscloudformation
? Do you want to enable container-based deployments? Yes

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-api"&gt;
  &lt;/a&gt;
  Adding the API
&lt;/h2&gt;

&lt;p&gt;With the project configured, let's add the soon-to-be API.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;amplify add api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CHNFo92_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8i7rjcolbs8l229sxyx4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CHNFo92_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8i7rjcolbs8l229sxyx4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
  Terminal workflow
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;? Please select from one of the below mentioned services: REST
? Which service would you like to use API Gateway + AWS Fargate (Container-based)
? Provide a friendly name for your resource to be used as a label for this category in the project: fastapirest
? What image would you like to use Custom (bring your own Dockerfile or docker-compose.yml)
? When do you want to build &amp;amp; deploy the Fargate task On every "amplify push" (Fully managed container source)
? Do you want to restrict API access No
Successfully added resource fastapirest locally.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;p&gt;The CLI will output some next steps for setting up the API to use a bring-your-own-container setup.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Next steps:
- Place your Dockerfile, docker-compose.yml and any related container source files in "amplify/backend/api/fastapirest/src"
- Amplify CLI infers many configuration settings from the "docker-compose.yaml" file. Learn more: docs.amplify.aws/cli/usage/containers
- Run "amplify push" to build and deploy your image
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Following the above steps, the following &lt;strong&gt;app/&lt;/strong&gt; and &lt;strong&gt;Dockerfile&lt;/strong&gt; are added to the API directory in the Amplify backend.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  .
  ├── amplify/backend/api/&amp;lt;api-name&amp;gt;/src/
&lt;span class="gi"&gt;+ │   └── app
+ │       └── main.py
+ └────── Dockerfile
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#adding-the-dockerfile"&gt;
  &lt;/a&gt;
  Adding the Dockerfile
&lt;/h2&gt;

&lt;p&gt;This can be modified based on the needs and requirements of the project but the below default &lt;strong&gt;Dockerfile&lt;/strong&gt; will get you up-and-running immediately with FastAPI.  &lt;/p&gt;

&lt;p&gt;I've adjusted the example in the FastAPI docs to use &lt;code&gt;python3.8&lt;/code&gt; instead of &lt;code&gt;python3.7&lt;/code&gt; &lt;strong&gt;and&lt;/strong&gt; added the statement to expose port 80.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="c"&gt;# Dockerfile&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; tiangolo/uvicorn-gunicorn-fastapi:python3.8&lt;/span&gt;

&lt;span class="c"&gt;# for Amplify &lt;/span&gt;
&lt;span class="c"&gt;# https://docs.amplify.aws/cli/usage/containers#deploy-a-single-container&lt;/span&gt;
&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 80&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; ./app /app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure to add &lt;code&gt;EXPOSE 80&lt;/code&gt; to to specify a port to communicate with the container. Amplify will suggest to use port 80 if you don't provide one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-api"&gt;
  &lt;/a&gt;
  Setting up the API
&lt;/h2&gt;

&lt;p&gt;Now, we can add in the API logic in the &lt;strong&gt;main.py&lt;/strong&gt; file within &lt;strong&gt;app/&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# main.py
&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Optional&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read_root&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Hello"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"World"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/items/{item_id}"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Optional&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"item_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;item_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"q"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#testing-locally"&gt;
  &lt;/a&gt;
  Testing locally
&lt;/h2&gt;

&lt;p&gt;With everything in place, we can test the API using Docker. Jump into the backend API directory (i.e. where the &lt;code&gt;Dockerfile&lt;/code&gt; is) and build the image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd amplify/backend/api/&amp;lt;api-name&amp;gt;/src/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Build the image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker build -t fastapi .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, you can run the image locally, exposed on port 80 of your &lt;code&gt;localhost&lt;/code&gt; setup.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker run -d --name fastapi -p 80:80 fastapi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll see the auto-generated API documentation at &lt;a href="http://127.0.0.1/redoc"&gt;http://127.0.0.1/redoc&lt;/a&gt; or &lt;a href="http://127.0.0.1/docs"&gt;http://127.0.0.1/docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-to-amplify"&gt;
  &lt;/a&gt;
  Deploying to Amplify 🚀
&lt;/h2&gt;

&lt;p&gt;Awesome! Now let's push this to Amplify.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;amplify push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When prompted, select &lt;code&gt;Yes&lt;/code&gt; to &lt;strong&gt;Create&lt;/strong&gt; the new resource.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;(🚀 dev) 🐶 ➜  fastapi-amplify amplify push                                                                                  (main) ✗
✔ Successfully pulled backend environment dev from the cloud.

Current Environment: dev

| Category | Resource name | Operation | Provider plugin   |
| -------- | ------------- | --------- | ----------------- |
| Api      | fastapirest   | Create    | awscloudformation |
? Are you sure you want to continue? Yes


&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the process is complete. 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;✔ All resources are updated in the cloud

REST API endpoint: https://&amp;lt;id&amp;gt;.execute-api.&amp;lt;region&amp;gt;.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#testing-the-deployed-api"&gt;
  &lt;/a&gt;
  Testing the deployed API
&lt;/h2&gt;

&lt;p&gt;After being deployed, the API can be accessed using the endpoint above:&lt;/p&gt;

&lt;p&gt;Also, the live API documentation is live at the &lt;code&gt;https://&amp;lt;endpoint&amp;gt;/docs&lt;/code&gt; and &lt;code&gt;https://&amp;lt;endpoint&amp;gt;/redoc&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-docs-endraw-route"&gt;
  &lt;/a&gt;
  &lt;code&gt;/docs&lt;/code&gt; route
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ThD6pNrg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mm90ba156rd43tahh60o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ThD6pNrg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mm90ba156rd43tahh60o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#-raw-redoc-endraw-route"&gt;
  &lt;/a&gt;
  &lt;code&gt;/redoc&lt;/code&gt; route
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZBewi_pe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i15uizxwkq58plxqa79p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZBewi_pe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i15uizxwkq58plxqa79p.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;This is just scratching the surface of configuration options. Hope this helps you get running quickly with serverless FastAPI backends!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>fastapi</category>
      <category>amplify</category>
    </item>
    <item>
      <title>I prepared a portfolio with Nuxt.JS ...</title>
      <author>AdemCan</author>
      <pubDate>Thu, 13 May 2021 20:59:18 +0000</pubDate>
      <link>https://dev.to/ademcan/i-prepared-a-portfolio-with-nuxt-js-3k07</link>
      <guid>https://dev.to/ademcan/i-prepared-a-portfolio-with-nuxt-js-3k07</guid>
      <description>&lt;p&gt;It may be a little inexperienced but now I'm developing a new portfolio, yes it will be more professional. The same will happen for NuxtJS Vuejs. css famework also using tailwindcss windics sass in new portfolio&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oOsNojes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj4hot0m6gmg5ksbfgo3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oOsNojes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj4hot0m6gmg5ksbfgo3.png" alt="Portfolio"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/AdemCanCertel/website"&gt;Portfolio GitHub Repository&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ademcancertel.tech"&gt;Portfolio Website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>portfolio</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>XState: Why I Love Invoked Callbacks</title>
      <author>Matt Pocock</author>
      <pubDate>Thu, 13 May 2021 20:57:49 +0000</pubDate>
      <link>https://dev.to/mpocock1/xstate-why-i-love-invoked-callbacks-2f6i</link>
      <guid>https://dev.to/mpocock1/xstate-why-i-love-invoked-callbacks-2f6i</guid>
      <description>&lt;p&gt;XState offers several primitives for representing long-running application processes. These are usually expressed as &lt;a href="https://xstate.js.org/docs/guides/communication.html"&gt;services&lt;/a&gt;. I've written a bit about services &lt;a href="https://dev.to/mpocock1/xstate-should-this-be-an-action-or-a-service-2cp0"&gt;here&lt;/a&gt; - but today I wanted to talk about my favourite way of expressing services: the Invoked Callback.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://xstate.js.org/docs/guides/communication.html#invoking-callbacks"&gt;Invoked Callback&lt;/a&gt; combines immense flexibility with good readability and a solid Typescript experience. They look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;createMachine&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onReceive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Run any code you like inside here&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Any code inside here will be called when&lt;/span&gt;
        &lt;span class="c1"&gt;// you leave this state, or the machine is stopped&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's break this down. You get access to &lt;code&gt;context&lt;/code&gt; and &lt;code&gt;event&lt;/code&gt;, just like promise-based services. But &lt;code&gt;send&lt;/code&gt; is where things really get interesting. Let's break down what makes &lt;code&gt;send&lt;/code&gt; useful with an example.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#file-uploads"&gt;
  &lt;/a&gt;
  File Uploads
&lt;/h2&gt;

&lt;p&gt;Imagine you need to build a file uploader, and you have a handy function called &lt;code&gt;startUpload&lt;/code&gt; that uploads some data, and exposes an &lt;code&gt;onProgressUpdate&lt;/code&gt; parameter to update the progress.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;createMachine&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;progress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;idle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;states&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;idle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;START&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pending&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;pending&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;PROGRESS_UPDATED&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;progress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;progress&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;}),&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;CANCEL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;idle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uploader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;startUpload&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;onProgressUpdate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;progress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;PROGRESS_UPDATED&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;progress&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;

          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;uploader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cancel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
          &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This machine starts in the &lt;code&gt;idle&lt;/code&gt; state, but on the &lt;code&gt;START&lt;/code&gt; event begins its invoked service, which uploads the file. It then listens for &lt;code&gt;PROGRESS_UPDATED&lt;/code&gt; events, and updates the context based on its updates.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;CANCEL&lt;/code&gt; event will trigger the &lt;code&gt;uploader.cancel()&lt;/code&gt; function, which gets called when the state is left. React users may recognise this syntax - it's the same as the cleanup function in the &lt;a href="https://reactjs.org/docs/hooks-reference.html#useeffect"&gt;useEffect hook&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note how simple and idiomatic it is to cancel the uploader - just exit the state, and the service gets cleaned up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#event-listeners"&gt;
  &lt;/a&gt;
  Event Listeners
&lt;/h2&gt;

&lt;p&gt;The invoked callback's cleanup function makes it very useful for event listeners, for instance &lt;code&gt;window.addEventListener()&lt;/code&gt;. XState Catalogue's &lt;a href="https://xstate-catalogue.com/machines/tab-focus"&gt;Tab Focus Machine&lt;/a&gt; is a perfect example of this - copied here for ease:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;createMachine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;userIsOnTab&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;states&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;userIsOnTab&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;checkForDocumentBlur&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;REPORT_TAB_BLUR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;userIsNotOnTab&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;userIsNotOnTab&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;checkForDocumentFocus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;REPORT_TAB_FOCUS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;userIsOnTab&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;checkForDocumentBlur&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;REPORT_TAB_BLUR&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blur&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blur&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;checkForDocumentFocus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;REPORT_TAB_FOCUS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;focus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;focus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When in the &lt;code&gt;userIsOnTab&lt;/code&gt; state, we listen for the window's &lt;code&gt;blur&lt;/code&gt; event. When that happens, and &lt;code&gt;REPORT_TAB_BLUR&lt;/code&gt; is fired, we clean up the event listener and head right on over to &lt;code&gt;userIsNotOnTab&lt;/code&gt;, where we fire up the other service.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#websockets"&gt;
  &lt;/a&gt;
  Websockets
&lt;/h2&gt;

&lt;p&gt;Invoked callbacks can also receive events via the &lt;code&gt;onReceive&lt;/code&gt; function. This is perfect when you need to communicate to your service, such as sending events to websockets.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createMachine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;forwardTo&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;xstate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;createMachine&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;SEND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;websocket&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;websocket&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onReceive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;websocket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;connectWebsocket&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

      &lt;span class="nx"&gt;onReceive&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SEND&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;websocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;websocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disconnect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to receive events, services need an &lt;code&gt;id&lt;/code&gt;. Not all events are forwarded to the invoked service, only those which we select via the &lt;code&gt;forwardTo&lt;/code&gt; action.&lt;/p&gt;

&lt;p&gt;Here, we can connect to the websocket, establish two-way communication, and clean it up all in a few lines of code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-love-letter"&gt;
  &lt;/a&gt;
  My Love Letter
&lt;/h2&gt;

&lt;p&gt;Invoked callbacks are a concise, flexible method of invoking services in XState. There isn't a case they can't cover - and they're one of my favourite parts of the XState API.&lt;/p&gt;

</description>
      <category>xstate</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Strengths and Weaknesses of Online Bootcamps in 2021</title>
      <author>Anthony</author>
      <pubDate>Thu, 13 May 2021 20:48:43 +0000</pubDate>
      <link>https://dev.to/toymachine/strengths-and-weaknesses-of-online-bootcamps-in-2021-3pi</link>
      <guid>https://dev.to/toymachine/strengths-and-weaknesses-of-online-bootcamps-in-2021-3pi</guid>
      <description>&lt;p&gt;Just like every other teaching method, online education comes with its own set of pros and cons. With the "new normal" dictating increased usage of online tools, a better understanding of these tools helps educational institutions in devising better strategies for their students and students better strategies for learning. &lt;/p&gt;

&lt;p&gt;Let us discuss the various pros and cons of online education in detail, especially as the possibility of returning to in-person colleges, bootcamps, seminars, training sessions, tutors, and other modes of learning starts to open back up in 2021.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-online-learning"&gt;
  &lt;/a&gt;
  Advantages Of Online Learning
&lt;/h2&gt;

&lt;p&gt;With the shifting of dynamics in the post-pandemic era, online education has proved to be a boon for many. The advantages of this learning method are many and can be discussed as follows...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Efficient: In-person learning is limited to the size of the room and how far a teacher's voice will carry. When online one teacher can teach hundreds of people. This brings down costs and removes barriers. &lt;/li&gt;
&lt;li&gt;Asynchronous: In-person learning has to be done on a fixed, inflexible schedule. Online learning can be done in your time around working hours and household responsibilities. The online lectures can also be recorded, shared, and viewed for future reference at a time of their choice by the students.
Innovative: Online education offers teachers an efficient way of delivering lessons by incorporating a range of tools into lesson plans. These include podcasts, videos, online tools, and more. The tools are adapting with the times. &lt;/li&gt;
&lt;li&gt;Accessible: Online education allows students to attend classes irrespective of their location. It also helps the schools in building an extensive network of students without any geographical restrictions. Thus, it offers better accessibility in terms of both time and place.&lt;/li&gt;
&lt;li&gt;Affordable: Online education is also beneficial in terms of reduced financial costs in comparison to physical learning. This is because several cost points get eliminated in the process such as student meals, transportation, and real estate. All the course and study material is also available online thus creating a paperless environment making it all the more affordable for the students.&lt;/li&gt;
&lt;li&gt;Improved attendance: With the liberty of taking classes from any location, online classes have better attendance, leading to fewer students missing out on lectures.&lt;/li&gt;
&lt;li&gt;Universal: With a range of tools available for personalization and customization of online classes, they are suitable for students of all ages and styles.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-online-learning"&gt;
  &lt;/a&gt;
  Disadvantages Of Online Learning
&lt;/h2&gt;

&lt;p&gt;Though online learning platforms have flourished today, there are several disadvantages or weaknesses of this system that should be kept in mind. This helps in devising better teaching and learning strategies for the students and teachers alike.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inability to focus: One of the biggest challenges in the case of the online education system is the inability of the students to focus on the screen for long time periods. This inability also increases the risk of the student getting distracted by social media, &lt;a href="https://helpatmyhome.com/best-non-smart-tv/"&gt;a nearby TV&lt;/a&gt;, or the internet in general. In order to curb this problem, it is important for the teachers to keep the interaction going and keep their classes engaging and crisp.&lt;/li&gt;
&lt;li&gt;Technical issues: Another key weakness of this system is the over-dependence on technology. Though internet penetration has increased by leaps and bounds in the last few years, consistent internet connection is still a big problem in many towns and with some parts of the population for whom &lt;a href="https://55pl.us/affordable-home-internet-for-seniors/"&gt;affordable high-speed internet&lt;/a&gt; is still a challenge.&lt;/li&gt;
&lt;li&gt;Isolation: One of the major aspects of learning is not just the lectures but the peers. The online education model has reduced the physical interactions between teacher and student to a minimal level causing a &lt;a href="https://cyberbullying.org/coronavirus-online-learning-social-isolation-cyberbullying"&gt;sense of isolation among students&lt;/a&gt;. This affects adults just as much as it does children, even it adult students might be less likely to admit it (or even notice it)&lt;/li&gt;
&lt;li&gt;Managing screen time: Increased screen time has become a health hazard. This can also cause bad posture, lack of focus, headaches and several other issues. &lt;a href="https://dev.to/toymachine/secret-weapons-pen-and-paper-1nhb"&gt;Taking paper notes&lt;/a&gt; can help, but the build up of screen time is inevitable.&lt;/li&gt;
&lt;li&gt;Academic Integrity: This is more of an issue with college than with career-focused education, but the lack of classroom tests and in-person assignments means the temptation to look something up or get help on solo assignment is raised when you don't have the standard classroom environment. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;Remember, the online education system might never replace the physical learning system. However, they can be seen as their extension and can be used to complement the learning and understanding process of the students. This will help students in getting the best of all worlds.   &lt;/p&gt;

</description>
      <category>bootcamp</category>
      <category>education</category>
      <category>learning</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Better console experience for your DevTools!</title>
      <author>Arek Nawo</author>
      <pubDate>Thu, 13 May 2021 20:36:10 +0000</pubDate>
      <link>https://dev.to/areknawo/better-console-experience-for-your-devtools-4838</link>
      <guid>https://dev.to/areknawo/better-console-experience-for-your-devtools-4838</guid>
      <description>&lt;p&gt;As a web developer, your browser’s &lt;strong&gt;DevTools&lt;/strong&gt; are surely the most important working tool, right beside your IDE/code editor.&lt;/p&gt;

&lt;p&gt;But like all things, it’s not perfect. It’s generally fine - with a lot of features and no real alternatives, it’s the best it gets (though it varies between browsers). However, it all falls apart pretty quickly in simple &lt;strong&gt;console-focused scenarios&lt;/strong&gt;, when you don’t need the power of all the metric tools. Let me show you what I mean.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#compromised-view"&gt;
  &lt;/a&gt;
  Compromised view
&lt;/h1&gt;

&lt;p&gt;When working on a small (laptop) screen, your viewport becomes a &lt;strong&gt;limited real estate&lt;/strong&gt;. Whether you’ll dock your console left, right, or to the bottom, or into an entirely separate window, either your website preview or console viewing experience will get crippled. There’s no way around it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#compromised-editing"&gt;
  &lt;/a&gt;
  Compromised editing
&lt;/h1&gt;

&lt;p&gt;If you’re a long-time JavaScript fanboy like me, then you’ve most likely used your console to play around with some code. Sure, you can always go to a playground like &lt;a href="https://codepen.io/pen"&gt;CodePen&lt;/a&gt;, but you first have to go there; it needs to load, and in general, it’s much more of a hassle than just clicking a single button or a single key and being ready to go. Also, if you want to play around with a website, or preview-tweak something in your project, then there’s no other way than through the DevTools console.&lt;/p&gt;

&lt;p&gt;However, the editing experience in the console is heavily crippled. One-liners are fine, but anything longer is a pain to write. &lt;strong&gt;Multi-line mode&lt;/strong&gt; in Firefox or &lt;strong&gt;Snippets&lt;/strong&gt; in Chrome make it a bit easier, but they’re still a far cry from what you get in a modern IDE/code editor. Things like advanced &lt;strong&gt;code autocompletion&lt;/strong&gt;, suggestions, code collapsing, formatting and more, are what we’re used to when it comes to &lt;strong&gt;multi-line editing&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#compromised-language-support"&gt;
  &lt;/a&gt;
  Compromised language support
&lt;/h1&gt;

&lt;p&gt;Lastly, this might be a bit far-fetched, but I think many TypeScript lovers out there will relate.&lt;/p&gt;

&lt;p&gt;It would be handy if &lt;strong&gt;TypeScript&lt;/strong&gt;, or other JavaScript supersets, were supported in the console. Not necessarily natively, but through compilation. It would be great to just drop a TypeScript snippet into the console and have it execute, just like that - no workarounds needed.&lt;/p&gt;

&lt;p&gt;And while we’re talking about language support, why not through some CSS or even &lt;strong&gt;SCSS&lt;/strong&gt; in there? Having a proper editor for writing and injecting whole temporary stylesheets would be nice.&lt;/p&gt;

&lt;p&gt;So, essentially what I’ve described here is a coding playground - just one that you can open with a click of a button and on any website. One could argue - a perfect combination of DevTools console and standard coding playground. But is this even possible?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#introducing-betterconsole"&gt;
  &lt;/a&gt;
  Introducing BetterConsole
&lt;/h1&gt;

&lt;p&gt;As you might have guessed, if I present you a problem, I also have a solution. And you’re right.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BetterConsole&lt;/strong&gt; is a project I’ve been working for a while now is essentially what I’ve described before - a combination of a coding playground and DevTools console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s61nNguz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woihzplprtyygoilq1ao.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s61nNguz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woihzplprtyygoilq1ao.png" alt="BetterConsole in action"&gt;&lt;/a&gt;&lt;/p&gt;
BetterConsole in action



&lt;p&gt;The idea and architecture behind BetterConsole are relatively simple. It’s a &lt;strong&gt;browser extension&lt;/strong&gt; for Firefox and Chromium-based browsers, meant to solve all the mentioned issues.&lt;/p&gt;

&lt;p&gt;Starting from the placement and limited viewport argument, BetterConsole plugs right into your website, &lt;code&gt;fixed&lt;/code&gt;-positioned, so it doesn't affect the viewport’s dimensions - it’s part of it! Also, it’s a &lt;strong&gt;bubble&lt;/strong&gt; you can &lt;strong&gt;drag&lt;/strong&gt; all around the window and &lt;strong&gt;resize&lt;/strong&gt; the view to your needs - ultimate customizability. Check it out:&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pOBhQLuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1392081036008427522/pu/img/e7cs1-w2V9jhEHnm.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--_khqNHMx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1390236764908969987/lCUpPPRM_normal.png" alt="BetterConsole profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        BetterConsole
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @betterconsole
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      A browser console you can resize, drag, and drop, without interrupting your window?&lt;br&gt;How about that? 😏&lt;br&gt;&lt;a href="https://twitter.com/hashtag/webdev"&gt;#webdev&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/webdev"&gt;#webdev&lt;/a&gt;elopment &lt;a href="https://twitter.com/hashtag/javascript"&gt;#javascript&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/typescript"&gt;#typescript&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      11:36 AM - 11 May 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1392081295774294029" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1392081295774294029" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1392081295774294029" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
Next up, multi-line editing. Here, the deal’s even simpler - I’ve just dropped in &lt;strong&gt;VS Code&lt;/strong&gt; to do the work. That’s right - &lt;a href="https://microsoft.github.io/monaco-editor/"&gt;Monaco editor&lt;/a&gt; - the one extracted from VS Code - is what powers BetterConsole. With it comes all the &lt;strong&gt;intellisense&lt;/strong&gt;, code suggestions, code folding, and most of the stuff you love from VS Code. Additionally, I’ve added in &lt;strong&gt;Prettier&lt;/strong&gt; integration for quick formatting - you’re welcome!

&lt;p&gt;As for the language support - of course, &lt;strong&gt;TypeScript&lt;/strong&gt; is supported, I couldn’t help myself. There’s &lt;strong&gt;SCSS&lt;/strong&gt; too! Standard JavaScript, CSS, and HTML are naturally also supported. Dedicated &lt;strong&gt;editing tabs&lt;/strong&gt; for CSS and HTML means that you can append full-blown stylesheets and DOM elements right from the “console”!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#join-the-beta"&gt;
  &lt;/a&gt;
  Join the beta!
&lt;/h1&gt;

&lt;p&gt;So, you can see, I’m going pretty bonkers here. And the best part is - I’m not over yet!&lt;/p&gt;

&lt;p&gt;BetterConsole is still in development - finishing and refining the &lt;strong&gt;MVP&lt;/strong&gt; features. I’ve already started sharing some details over on &lt;a href="https://twitter.com/BetterConsole"&gt;Twitter&lt;/a&gt;, which means that the &lt;strong&gt;beta&lt;/strong&gt; will launch really soon! And I want you to come to the party!&lt;/p&gt;

&lt;p&gt;Beta tests will be conducted over on the &lt;a href="//discord.gg/YmxC34EDBV"&gt;BetterConsole Discord server&lt;/a&gt;. The official beta announcement will also appear when the time comes. However, the server is already opened, and I’m welcoming early visitors to share their &lt;strong&gt;ideas&lt;/strong&gt; and be among &lt;strong&gt;the first&lt;/strong&gt; few to use BetterConsole!&lt;/p&gt;

&lt;p&gt;Every beta-tester will get full access to all BetterConsole functionality for the duration of testing and a discount of &lt;strong&gt;up to 100%&lt;/strong&gt; (depending on your engagement in the beta tests) on the final product. Yes, it’ll end up being a paid extension, but with no subscription - just a one-time payment to cover the costs and development and 1 year of guaranteed support.&lt;/p&gt;

&lt;p&gt;However, if you’ll join the &lt;a href="//discord.gg/YmxC34EDBV"&gt;Discord server&lt;/a&gt; today and become a beta-tester soon, there’s a high chance you’ll enjoy all the benefits of BetterConsole completely &lt;strong&gt;free&lt;/strong&gt; - for life!&lt;/p&gt;

&lt;p&gt;So, I guess all that’s left to say is join the &lt;a href="//discord.gg/YmxC34EDBV"&gt;Discord server&lt;/a&gt;, follow BetterConsole on &lt;a href="https://twitter.com/BetterConsole"&gt;Twitter&lt;/a&gt; for continuous updates, and also consider following me for more web dev products and content on &lt;a href="https://twitter.com/areknawo"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.facebook.com/areknawoblog"&gt;Facebook&lt;/a&gt;, or &lt;a href="https://areknawo.com#newsletter"&gt;my newsletter&lt;/a&gt;. Thanks for reading, and again, &lt;a href="//discord.gg/YmxC34EDBV"&gt;join the BetterConsole beta&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>typescript</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Creating a Form with React Hook Form</title>
      <author>Simon Xiong</author>
      <pubDate>Thu, 13 May 2021 20:24:33 +0000</pubDate>
      <link>https://dev.to/simonxcode/creating-a-form-with-react-hook-form-3595</link>
      <guid>https://dev.to/simonxcode/creating-a-form-with-react-hook-form-3595</guid>
      <description>&lt;p&gt;In this tutorial we will build a form with React Hook Form allowing users to create an account. We will also be styling our form with Styled Components. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://react-hook-form.com/"&gt;React Hook Form&lt;/a&gt; is a library for creating forms utilizing concepts from React and HTML. Key features and benefits of React Hook Form includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hooks for reusable state logic&lt;/li&gt;
&lt;li&gt;HTML client-side validations&lt;/li&gt;
&lt;li&gt;minimal rendering(uncontrolled form)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below are the &lt;a href="https://react-hook-form.com/api"&gt;APIs&lt;/a&gt; we will be using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;useForm:&lt;/strong&gt; hook with access to different methods from library&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;register:&lt;/strong&gt; method to register inputs and apply validation rules&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;handleSubmit&lt;/strong&gt;: function that will pass data after validation
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;errors&lt;/strong&gt;: object containing error message corresponding to input field&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;reset&lt;/strong&gt;: method to reset all fields on form &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://styled-components.com/"&gt;Styled Components&lt;/a&gt; is a library for styling UI components. It utilizes template literals for declaring styling directly to a component. Key features and benefits of Styled Components includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ease of maintenance with styling bound to component
&lt;/li&gt;
&lt;li&gt;dynamic styling using props or global themes&lt;/li&gt;
&lt;li&gt;compatible with HTML and CSS naming standards &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below are the &lt;a href="https://styled-components.com/docs/api"&gt;APIs&lt;/a&gt; we will be using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;styled:&lt;/strong&gt; default export for using library&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TaggedTemplateLiteral:&lt;/strong&gt; CSS properties and values passed into styled calls&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;createGlobalStyle:&lt;/strong&gt; function that generates a global styling component&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are links to the &lt;a href="https://github.com/simonxcode/hook-form"&gt;repo&lt;/a&gt; and &lt;a href="https://hook-form.netlify.app/"&gt;live site&lt;/a&gt; to get a better idea on what will be built. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#setting-up-project"&gt;
  &lt;/a&gt;
  Setting Up Project
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;My IDE setup and package manager for this project was VSCode and Yarn. If you are using a different setup your commands will be slightly different. &lt;/p&gt;

&lt;p&gt;This project was built with React Hook Form &lt;em&gt;6.13.0&lt;/em&gt; and Styled Components &lt;em&gt;5.2.1&lt;/em&gt;. Keep this in mind as syntax may be different from other versions. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The quickest way to get started is with &lt;a href="https://github.com/facebook/create-react-app"&gt;Create React App&lt;/a&gt;. This will allow us to work on the project right away without having to install preliminary dependencies and make configurations. On the command line in VSCode navigate to the directory where you would like to have the project stored. Type &lt;code&gt;yarn create react-app "project name"&lt;/code&gt; to initialize the project.&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NEK1DKLk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyp7bmefva3ps2sngsjy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NEK1DKLk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyp7bmefva3ps2sngsjy.png" alt="Command Line"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting Up Component&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We are going to make some minor changes to our files and create a function component that will render a basic form. Below are key highlights along with code snippet and DOM output:  &lt;/p&gt;

&lt;p&gt;Key Highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rename &lt;strong&gt;App.js&lt;/strong&gt; file to &lt;strong&gt;Form.js&lt;/strong&gt; file&lt;/li&gt;
&lt;li&gt;rename &lt;strong&gt;App&lt;/strong&gt; component to &lt;strong&gt;Form&lt;/strong&gt; and have it return a basic form containing

&lt;ul&gt;
&lt;li&gt;title, username, email, password and submit button &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;rename &lt;strong&gt;App&lt;/strong&gt; component to &lt;strong&gt;Form&lt;/strong&gt; component in &lt;strong&gt;index.js&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Code Snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Form.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Almost&lt;/span&gt; &lt;span class="nx"&gt;There&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Create Account&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//index.js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Form&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Form&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;DOM Output:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HURnsLnt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3duzu0mw2xrsj5nqk4c8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HURnsLnt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3duzu0mw2xrsj5nqk4c8.png" alt="Basic Form"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#using-react-hook-form"&gt;
  &lt;/a&gt;
  Using React Hook Form
&lt;/h3&gt;

&lt;p&gt;To get started with React Hook Form we will install the library with &lt;code&gt;yarn add react-hook-form&lt;/code&gt;. We then import &lt;code&gt;useForm&lt;/code&gt; Hook into &lt;strong&gt;Form.js&lt;/strong&gt;. Now we can start integrating some of the features from this library into our project. Below are key highlights along with code snippet: &lt;/p&gt;

&lt;p&gt;Key Highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;import and use &lt;code&gt;register&lt;/code&gt;, &lt;code&gt;handleSubmit&lt;/code&gt;, &lt;code&gt;errors&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods&lt;/li&gt;
&lt;li&gt;assign register for each input field to track changes to inputs &lt;/li&gt;
&lt;li&gt;setup validation rules and error handling within input fields&lt;/li&gt;
&lt;li&gt;declare &lt;code&gt;onSubmit&lt;/code&gt; event listener that will log data to console&lt;/li&gt;
&lt;li&gt;reset all data after form is submitted&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Code Snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Form.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useForm&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-hook-form&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reset&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useForm&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Almost&lt;/span&gt; &lt;span class="nx"&gt;There&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
              &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/^&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;a-z&lt;/span&gt;&lt;span class="se"&gt;][&lt;/span&gt;&lt;span class="sr"&gt;a-z0-9&lt;/span&gt;&lt;span class="se"&gt;]{3,14}&lt;/span&gt;&lt;span class="sr"&gt;$/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Username must be 5 - 15 characters long, must start with a letter, only alphanumeric characters allowed, only lowercase letters allowed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;})}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;em&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/em&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
              &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/^&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;A-Z0-9._%+-&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+@&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;A-Z0-9.-&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;\.[&lt;/span&gt;&lt;span class="sr"&gt;A-Z&lt;/span&gt;&lt;span class="se"&gt;]{1,64}&lt;/span&gt;&lt;span class="sr"&gt;$/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Please enter a valid email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;})}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;em&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/em&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
              &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/^&lt;/span&gt;&lt;span class="se"&gt;(?=&lt;/span&gt;&lt;span class="sr"&gt;.*&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;a-z&lt;/span&gt;&lt;span class="se"&gt;])(?=&lt;/span&gt;&lt;span class="sr"&gt;.*&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;A-Z&lt;/span&gt;&lt;span class="se"&gt;])(?=&lt;/span&gt;&lt;span class="sr"&gt;.*&lt;/span&gt;&lt;span class="se"&gt;\d)(?=&lt;/span&gt;&lt;span class="sr"&gt;.*&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;@$!%*?&amp;amp;&lt;/span&gt;&lt;span class="se"&gt;])[&lt;/span&gt;&lt;span class="sr"&gt;A-Za-z&lt;/span&gt;&lt;span class="se"&gt;\d&lt;/span&gt;&lt;span class="sr"&gt;@$!%*?&amp;amp;&lt;/span&gt;&lt;span class="se"&gt;]{8,15}&lt;/span&gt;&lt;span class="sr"&gt;$/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Password must be 8 - 15 characters long, must contain one UPPERCASE letter, must contain one lowercase letter, must contain one number, must contain one special character: @$! % * ? &amp;amp;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;})}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;em&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/em&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Create Account&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Testing the Form&lt;/strong&gt;&lt;br&gt;
Now we will test the form to make sure the following functionalities are working properly: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;error handling for empty fields&lt;/li&gt;
&lt;li&gt;error handling for invalid fields&lt;/li&gt;
&lt;li&gt;data logging after validation
&lt;/li&gt;
&lt;li&gt;reset of all fields after validation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dom Output:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;error handling for empty fields&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3imEnyrr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okq2mcw6lftnj2094rsl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3imEnyrr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okq2mcw6lftnj2094rsl.png" alt="Empty Field Error Message"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;error handling for invalid fields&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WXPUvivX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1hg9swkgxpwk3sqw0fn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WXPUvivX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1hg9swkgxpwk3sqw0fn.png" alt="Invalid Field Error Message"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;data logging to Console&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aPHq4BjY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jfg6r9fazsjcn7qnnpxc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aPHq4BjY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jfg6r9fazsjcn7qnnpxc.png" alt="Data Logging to Console"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;reset of all fields after validation&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RiYep8R4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a7u56jubrl2dhc6n8ctr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RiYep8R4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a7u56jubrl2dhc6n8ctr.png" alt="Form Reset"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#using-styled-component"&gt;
  &lt;/a&gt;
  Using Styled Component
&lt;/h3&gt;

&lt;p&gt;To get started with Styled Component we will install the Styled Component library with &lt;code&gt;yarn add styled-components&lt;/code&gt;. We then import &lt;code&gt;styled&lt;/code&gt; method into &lt;strong&gt;Form.js&lt;/strong&gt;. As noted in the &lt;a href="https://styled-components.com/docs/basics#installation"&gt;documentation&lt;/a&gt;, if using Yarn, it is recommended to include a resolution field in &lt;strong&gt;package.json&lt;/strong&gt;. This will help prevent issues that may result from having multiple versions installed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//package.json&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resolution&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;^5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Below are key highlights along with code snippet and DOM output for styling the &lt;strong&gt;Title&lt;/strong&gt; of the form. The same work flow can be applied to all other elements. &lt;/p&gt;

&lt;p&gt;Key Highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;declare a &lt;strong&gt;Title&lt;/strong&gt; container and assign it to the styled method&lt;/li&gt;
&lt;li&gt;attach &lt;strong&gt;h1&lt;/strong&gt; to styled method to define the element type&lt;/li&gt;
&lt;li&gt;define the CSS properties values within template literal &lt;/li&gt;
&lt;li&gt;In the return statement replace h1 tag with &lt;strong&gt;Title&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Code Snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Form.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="s2"&gt;`
  color: #00805b;
  font-size: 3rem;
  letter-spacing: 0.0625rem;
  margin-bottom: 0rem;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt; 
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Almost&lt;/span&gt; &lt;span class="nx"&gt;There&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Title&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;DOM Output:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VHJ-hmqM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iamrmhpccpiiwjgpbpjv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VHJ-hmqM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iamrmhpccpiiwjgpbpjv.png" alt="Styled Title"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#styling-font"&gt;
  &lt;/a&gt;
  Styling Font
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;This step is optional and is not required if you are planing to use default &lt;a href="https://www.w3schools.com/cssref/css_websafe_fonts.asp"&gt;Web Safe Fonts&lt;/a&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Styling the fonts for this project was a little tricky because I wanted to use the &lt;em&gt;Roboto&lt;/em&gt; from &lt;a href="https://fonts.google.com/"&gt;Google Fonts&lt;/a&gt;. From Styled Component's &lt;a href="https://styled-components.com/docs/faqs#note-regarding-css-import-and-createglobalstyle"&gt;documentation&lt;/a&gt; it was not recommended to use &lt;code&gt;@import&lt;/code&gt; CSS Rule with version(5.2.1). The work around was to install &lt;a href="https://github.com/nfl/react-helmet"&gt;React Helmet&lt;/a&gt; in order to reference the url to in a Link tag. &lt;br&gt;
Here are key highlights along with code snippet and DOM output:&lt;/p&gt;

&lt;p&gt;Key Highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;install React Helmet library and import into &lt;strong&gt;Form.js&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;reference Google Font urls in Link tags&lt;/li&gt;
&lt;li&gt;import createGlobalStyle method from Styled Component library&lt;/li&gt;
&lt;li&gt;declare &lt;code&gt;GlobalStyle&lt;/code&gt; container with font family property and values&lt;/li&gt;
&lt;li&gt;import self-enclosed &lt;code&gt;GlobalStyle&lt;/code&gt; element into &lt;strong&gt;Form&lt;/strong&gt; return statement &lt;/li&gt;
&lt;li&gt;make changes to font weight in the &lt;strong&gt;Title&lt;/strong&gt; container&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Code Snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Helmet&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-helmet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createGlobalStyle&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GlobalStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createGlobalStyle&lt;/span&gt;&lt;span class="s2"&gt;`
  body {
    font-family: 'Roboto', sans-serif;
  };
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="s2"&gt;`
  color: #00805b;
  font-size: 3rem;
  font-weight: 500
  letter-spacing: 0.0625rem;
  margin-bottom: 0rem;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;GlobalStyle&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Helmet&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;preconnect&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://fonts.gstatic.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;
          &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;500&amp;amp;display=swap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stylesheet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Helmet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Almost&lt;/span&gt; &lt;span class="nx"&gt;There&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Title&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;DOM Output:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--754pNUQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xe1xy1ozpr3d9vn59uib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--754pNUQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xe1xy1ozpr3d9vn59uib.png" alt="Styled With Google Font"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#final-touches"&gt;
  &lt;/a&gt;
  Final Touches
&lt;/h3&gt;

&lt;p&gt;To make sure that our form renders consistently across multiple browsers we will use &lt;a href="https://github.com/necolas/normalize.css/"&gt;Normalize.CSS&lt;/a&gt;. This library will preserve user defaults styling and help maintain cross browser consistency. Install the library with &lt;code&gt;yarn add Normalize.CSS&lt;/code&gt; and import it into &lt;strong&gt;Form.js.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Form.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;normalize.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Final Testing&lt;/strong&gt; &lt;br&gt;
Now that our form application is complete we are going to perform the same test from &lt;strong&gt;Testing the Form&lt;/strong&gt;. The purpose of performing the test again is to verify that layout and UI components are functioning and rendering correctly after styling. Here was the list of requirements for testing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;error handling for empty fields&lt;/li&gt;
&lt;li&gt;error handling for invalid fields&lt;/li&gt;
&lt;li&gt;data logging after validation
&lt;/li&gt;
&lt;li&gt;reset of all fields after validation &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dom Output:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;error handling for empty fields&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vfd-Nxhp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/koc209wdtlmqtuirmv73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vfd-Nxhp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/koc209wdtlmqtuirmv73.png" alt="Empty Field Error Message"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;error handling for invalid fields&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d_i6ZwUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olgztq1296y1pjv79u76.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d_i6ZwUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olgztq1296y1pjv79u76.png" alt="Invalid Field Error Message"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;data logging to Console&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tur9VADQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2itcg7k864f4wxwbkuwr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tur9VADQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2itcg7k864f4wxwbkuwr.png" alt="Data Logging to Console"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;reset of all fields after validation&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R2U5CHoW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkbcr3940msm2gndmc96.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R2U5CHoW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkbcr3940msm2gndmc96.png" alt="Form Reset"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps:
&lt;/h3&gt;

&lt;p&gt;Forms are the most common and effective tools for collecting data from users. This form can be integrated into any website or full stack application. For best practice in development lifecycle, I am planning to write either an integration or unit test for this project. Stay Tuned! 🙌&lt;/p&gt;

</description>
      <category>reacthookform</category>
      <category>formvalidations</category>
      <category>styledcomponents</category>
    </item>
    <item>
      <title>How to Speed Up Load Times In A Rails App - What I Wish I Knew Four Months Ago </title>
      <author>nicklevenson</author>
      <pubDate>Thu, 13 May 2021 19:55:33 +0000</pubDate>
      <link>https://dev.to/nicklevenson/how-to-speed-up-load-times-in-a-rails-app-what-i-wish-i-knew-four-months-ago-28g0</link>
      <guid>https://dev.to/nicklevenson/how-to-speed-up-load-times-in-a-rails-app-what-i-wish-i-knew-four-months-ago-28g0</guid>
      <description>&lt;p&gt;Not too long ago I was introduced to Ruby on Rails through my time as a Flatiron student. To those familiar with the Ruby framework, Rails makes creating complex MVC web applications very simple. It wasn't long before I started developing fairly complicated apps with Rails. However, after gaining a fair amount of users on my Heroku hosted app &lt;a href="https://memix.herokuapp.com/"&gt;MeMix&lt;/a&gt;, I ran into some big problems. My application kept crashing. It hadn't been crashing before, and after some diagnostics with the &lt;a href="https://one.newrelic.com/"&gt;New Relic&lt;/a&gt; analytics tool, the problem became clear - slow database loading times. Heroku will automatically crash you app if your load time takes more than 30 seconds. I clearly had a big problem with my database queries, something that is referred to as N+1 queries. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Problem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A big cog in the Rails machine is something called Active Record. Let's say we had two models that are associated with each other: (I actually made a &lt;a href="https://github.com/nicklevenson/includes-blog"&gt;Github repo&lt;/a&gt; with this sample so you can easily try it yourself)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class User &amp;lt; ActiveRecord::Base
  has_many :posts
end

class Post &amp;lt; ActiveRecord::Base
  belongs_to :user
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With Active Record, a typical and easy way to access a list of a user's posts, and what I learned at bootcamp, would be to write &lt;code&gt;User.posts&lt;/code&gt;. But what if we want to iterate over a list of Users and then iterate over each user's posts? We could write something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;User.all.each do |user|
  user.posts.each do |post|
    puts post.content
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will work just fine. However for each user we are querying the database for their posts. Which means our query complexity has become N+1. N being the number of users, since for each user we make a request to the database for its associated posts, and plus one query for getting all users. &lt;/p&gt;

&lt;p&gt;This is totally fine if you have a small database. However, once your database grows, and if you have complicated associations, it will start to slow down. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Solution&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guides.rubyonrails.org/active_record_querying.html#eager-loading-multiple-associations"&gt;ActiveRecord has a method&lt;/a&gt; called includes. Basically it allows you to load a model's associations in a single query. So in our example before, you would write:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;User.includes(:posts).all.each do |user|
  user.posts.each do |post|
    post.content
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's the difference between the queries when looking at the database output in the console:&lt;/p&gt;

&lt;p&gt;Bad Query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;User.bad_query
  User Load (0.2ms)  SELECT "users".* FROM "users"
  Post Load (0.1ms)  SELECT "posts".* FROM "posts" WHERE "posts"."user_id" = ?  [["user_id", 1]]
hello
  Post Load (0.1ms)  SELECT "posts".* FROM "posts" WHERE "posts"."user_id" = ?  [["user_id", 2]]
hello
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good Query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;User.good_query
  User Load (0.2ms)  SELECT "users".* FROM "users"
  Post Load (0.2ms)  SELECT "posts".* FROM "posts" WHERE "posts"."user_id" IN (?, ?)  [[nil, 1], [nil, 2]]
hello
hello
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Can you spot the extra db call in the bad query? This is just with two users, but its easy to imagine a complicated db structure causing major speed issues. The cool thing about includes is that you can chain on as many associations as you want - &lt;code&gt;User.includes(:posts, :followers, :likes).all&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Sometimes, however, using this handy active record method could slow down your app if the database query is very complicated (e.g. nested associations, many-to-many, etc). It can be hard to know when it is more efficient to use it. However, there is a gem called &lt;a href="https://github.com/flyerhzm/bullet"&gt;Bullet&lt;/a&gt; that is designed to help with this exact issue. It will tell you when your query chains are inefficient and what to do about it. &lt;/p&gt;

&lt;p&gt;After implementing this technique on my slow Rails app, the average load time went down from 10-15 seconds to 2-3 seconds. So if you're experiencing slow load times, please consider checking your query methods, and look for N+1 queries. I wish I knew this when I built my first Rails app.  &lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>database</category>
      <category>activerecord</category>
    </item>
    <item>
      <title>Work Smarter, Not Harder With ReacType</title>
      <author>Kevin Park</author>
      <pubDate>Thu, 13 May 2021 19:49:07 +0000</pubDate>
      <link>https://dev.to/xkevinpark/work-smarter-not-harder-with-reactype-49mg</link>
      <guid>https://dev.to/xkevinpark/work-smarter-not-harder-with-reactype-49mg</guid>
      <description>&lt;h1&gt;
  &lt;a href="#excited-to-announce-the-launch-of-reactype"&gt;
  &lt;/a&gt;
  Excited to announce the launch of ReacType!
&lt;/h1&gt;

&lt;p&gt;This morning, my team released ReacType 7.0, a rapid prototyping tool that enables developers to build React components via an intuitive drag-and-drop canvas, apply CSS styles, and generate custom boilerplates.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="https://xkevinpark.medium.com/work-smarter-not-harder-to-create-a-react-app-with-reactype-94dd60be5873" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lsD7VqJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/fit/c/56/56/1%2A90I88K-dmoUsyf4TQ8E-nA.jpeg" alt="Kevin Park"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="https://xkevinpark.medium.com/work-smarter-not-harder-to-create-a-react-app-with-reactype-94dd60be5873" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Work Smarter, Not Harder To Create A React App With ReacType | by Kevin Park | May, 2021 | Medium&lt;/h2&gt;
      &lt;h3&gt;Kevin Park ・ &lt;time&gt;May 13, 2021&lt;/time&gt; ・ 
      &lt;div class="ltag__link__servicename"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ze5yh_2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/medium_icon-90d5232a5da2369849f285fa499c8005e750a788fdbf34f5844d5f2201aae736.svg" alt="Medium Logo"&gt;
        xkevinpark.Medium
      &lt;/div&gt;
    &lt;/h3&gt;
&lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;HOW DOES IT WORK?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build React components via drag-and-drop interface&lt;/li&gt;
&lt;li&gt;Generate code dynamically in a real-time code preview&lt;/li&gt;
&lt;li&gt;Design collaboratively via built-in annotations&lt;/li&gt;
&lt;li&gt;Save &amp;amp; share templates&lt;/li&gt;
&lt;li&gt;Pass props and manage state in table view&lt;/li&gt;
&lt;li&gt;Customize styles via CSS editor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;WHY REACTYPE?&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Eases learning curve for developers new to React frameworks&lt;/li&gt;
&lt;li&gt;Accelerates development while maintaining product vision&lt;/li&gt;
&lt;li&gt;Streamlines communication between developers and designers&lt;/li&gt;
&lt;/ol&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/open-source-labs"&gt;
        open-source-labs
      &lt;/a&gt; / &lt;a href="https://github.com/open-source-labs/ReacType"&gt;
        ReacType
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🧪 Prototyping Tool for exporting React/Typescript Applications!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/331b486f2bf536524639521506ae8de9b5c26ec3cb57979f6f940d4b5a1b6a1d/68747470733a2f2f692e696d6775722e636f6d2f596e37307471492e706e67"&gt;&lt;img width="50" src="https://camo.githubusercontent.com/331b486f2bf536524639521506ae8de9b5c26ec3cb57979f6f940d4b5a1b6a1d/68747470733a2f2f692e696d6775722e636f6d2f596e37307471492e706e67"&gt;&lt;/a&gt;
  &lt;/p&gt;

&lt;h1&gt;
ReacType &lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/team-reactype/ReacType/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/b0ad703a46e8b249ef2a969ab95b2cb361a2866ecb8fe18495a2229f5847102d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667" alt="PRs Welcome"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5fab2edf3816ef9fb3ebcaf6e613fa7b40ff7652ec69e5f6e7f695aa24bf5ce6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/5fab2edf3816ef9fb3ebcaf6e613fa7b40ff7652ec69e5f6e7f695aa24bf5ce6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667" alt="License: MIT"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1a264f94a05d257e45805d5ab7650c122c930003e11e06eccf9607a6008a2eae/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52656c656173652d372e302e302d6c69676874677265792e737667"&gt;&lt;img src="https://camo.githubusercontent.com/1a264f94a05d257e45805d5ab7650c122c930003e11e06eccf9607a6008a2eae/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52656c656173652d372e302e302d6c69676874677265792e737667" alt="Version 7.0.0"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ReacType&lt;/strong&gt; is a rapid prototyping tool for developers employing &lt;strong&gt;React&lt;/strong&gt; component architecture alongside the comprehensive type-checking of &lt;strong&gt;TypeScript&lt;/strong&gt;
In other words, &lt;strong&gt;you can draw prototypes and export React / TypeScript code!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ReacType&lt;/strong&gt; allows users to &lt;em&gt;visualize&lt;/em&gt; their application architecture dynamically, employing a &lt;em&gt;drag-and-drop canvas display&lt;/em&gt; , a &lt;em&gt;real-time demo render&lt;/em&gt; , a &lt;em&gt;real-time component code preview&lt;/em&gt;. Users can create components and drag &lt;em&gt;instances&lt;/em&gt; of these components, as well as HTML elements, onto the canvas. This architecture can then be &lt;em&gt;exported&lt;/em&gt; as TypeScript application files to be used as a starter template for any repository.&lt;/p&gt;

&lt;p&gt;Download for &lt;a href="https://github.com/team-reactype/ReacType/releases"&gt;MacOS&lt;/a&gt;, &lt;a href="https://github.com/team-reactype/ReacType/releases/"&gt;Windows&lt;/a&gt;, &lt;a href="https://github.com/team-reactype/ReacType/releases/"&gt;Linux&lt;/a&gt;.&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;Mac users&lt;/strong&gt;: After opening the dmg and dragging ReacType into your Applications folder, ctrl+click the icon and select 'Open' from the context menu to run the app. This extra step is necessary since we don't have an Apple developer license yet.&lt;/p&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;Windows users&lt;/strong&gt;…&lt;/p&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/open-source-labs/ReacType"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Cheers!

</description>
      <category>react</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
