<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to upload a JSON file to firebase and access it as list items from the web?</title>
      <author>Sharjeel Yunus</author>
      <pubDate>Sun, 18 Apr 2021 11:09:23 +0000</pubDate>
      <link>https://dev.to/sharjeelyunus/how-to-upload-a-json-file-to-firebase-and-access-it-as-list-items-from-the-web-20o8</link>
      <guid>https://dev.to/sharjeelyunus/how-to-upload-a-json-file-to-firebase-and-access-it-as-list-items-from-the-web-20o8</guid>
      <description>&lt;p&gt;If you have a large JSON file and you wanna upload it to a database, &lt;strong&gt;Firebase Realtime Database&lt;/strong&gt; would be your first choice. But how can you import that large file directly without doing everything manually? And how can you fetch this data to as List items via Vanilla JavaScript?&lt;/p&gt;

&lt;p&gt;Let's start with JSON =&amp;gt; (JavaScript Object Notation) is used when data is sent from a server to a web page.&lt;/p&gt;

&lt;p&gt;Here's how our JSON file looks like!⤵&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Certificates-List"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"courseName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Elements of AI: Introduction to AI"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"institute"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"University of Helsinki"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;

        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"courseName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Javascript Beginner"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"institute"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Udemy"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;

        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"courseName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Introduction to Flutter Development"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"institute"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"App Brewery"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First of all Configure your Firebase project for the web &lt;a href="https://www.youtube.com/watch?v=q5tAUb_bvqg&amp;amp;ab_channel=TACV-TheAmazingCode-Verse"&gt;How to Configure Google Firebase for Web&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now click on 3 dots and select import JSON, select your file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OLDNJepI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5v7xmtbxk3bg9v2oniz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OLDNJepI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5v7xmtbxk3bg9v2oniz.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Ahhan! your JSON file is now uploaded to Firebase Realtime Database.&lt;br&gt;
Now your database should look like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KxkBxomr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c44ft10clmdrq9jv83ta.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KxkBxomr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c44ft10clmdrq9jv83ta.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To see this as an API, Copy the URL of the database and write the folder name .json after it. Like this =&amp;gt; &lt;a href=""&gt;https://test-45959-default-rtdb.firebaseio.com/Certificates-List.json&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now how can we access this data to a webpage using Vanilla JavaScript?&lt;br&gt;
Create a ul tag with id="Certificates-List".&lt;br&gt;
Your Project should look like this⤵&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HAnFpidI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3avjywcrphwedpd3erq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HAnFpidI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3avjywcrphwedpd3erq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Time for the real part: &lt;strong&gt;Access data from Firebase to Web&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a function to add items to the list like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addItemsToList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;courseName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;institute&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ul&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Certificates-List&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;_courseName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;li&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;_institute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;li&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nx"&gt;_courseName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CourseName: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;courseName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;_institute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Institute: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;institute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_courseName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_institute&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we grab the &lt;code&gt;ul&lt;/code&gt; tag by id and then create the list items via &lt;code&gt;li&lt;/code&gt; tag. Using appendChild store the grabbed data to list items.&lt;/p&gt;

&lt;p&gt;Now create a function to fetch data from database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;FetchAllData&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;firebase&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Certificates-List&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snapshot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;snapshot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ChildSnapshot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;courseName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ChildSnapshot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;courseName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;institute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ChildSnapshot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;institute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;addItemsToList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;courseName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;institute&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we're fetching our data from Firebase Realtime Database with the ref of database folder name i.e Certificates-List. And then calling the &lt;code&gt;addItemsToList()&lt;/code&gt; to get the data.&lt;/p&gt;

&lt;p&gt;Now to load data&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;FetchAllData&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your code should be like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L-VfN8fI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rs3wrcvawahay8yaswj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L-VfN8fI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rs3wrcvawahay8yaswj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here's how your web page should look like:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JHD2EcF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kvfgfhmmcyrqpk9wmald.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JHD2EcF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kvfgfhmmcyrqpk9wmald.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it. We're all OK. Now you can customize this data and webpage however you like.👋&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>json</category>
      <category>firebase</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>4 speed run challenges ⌚ on DEV.TO!  Can you beat my times? 🏆🏆</title>
      <author>InHuOfficial</author>
      <pubDate>Sun, 18 Apr 2021 11:00:03 +0000</pubDate>
      <link>https://dev.to/inhuofficial/4-speed-run-challenges-on-dev-to-can-you-beat-my-times-30a4</link>
      <guid>https://dev.to/inhuofficial/4-speed-run-challenges-on-dev-to-can-you-beat-my-times-30a4</guid>
      <description>&lt;p&gt;A slightly less silly post today! &lt;/p&gt;

&lt;p&gt;I am writing a series on accessibility on dev.to and I have recently been testing the keyboard usability of the site.&lt;/p&gt;

&lt;p&gt;I realised I could turn this into a fun game while also hopefully giving people valuable insight into what it is like using a site with a keyboard.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is not bashing dev.to&lt;/strong&gt; - they are making a real effort to improve accessibility and are really responsive to suggestions, it is just a great exercise you should perform on your own applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#on-with-the-challenges"&gt;
  &lt;/a&gt;
  On with the challenges
&lt;/h2&gt;

&lt;p&gt;So there are 4 challenges, time yourself doing each of them and then leave a comment with your time for each. &lt;/p&gt;

&lt;p&gt;After a week I will list the winners for each challenge and overall.&lt;/p&gt;

&lt;p&gt;I will assume you are honourable and don't cheat 😀&lt;/p&gt;

&lt;p&gt;Here are the rules:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;No screen reader shortcuts (if you use one) or other plugins etc that add shortcuts that do not normally exist in the browser.&lt;/li&gt;
&lt;li&gt;Keyboard only commands - if you use your mouse or another input device your run is void! **&lt;/li&gt;
&lt;li&gt;You can try each challenge as many times as you want and submit your best time!&lt;/li&gt;
&lt;li&gt;If you can't complete a challenge then you can record a Did Not Finish (DNF) and that will count as 2 minutes towards your total time.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;All challenges start on the home page&lt;/strong&gt; - and your cursor should be in the URL bar in your web browser before you start.&lt;/li&gt;
&lt;li&gt;Touch screen devices are not allowed (unless they have a Bluetooth keyboard you can use) - so if you are viewing this on mobile try it when you get in front of a PC.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;** If you use other assistive tech such as "Sip-Puff" or "eye-gaze technology" etc. then you can use those! The ideas is no mouse or pointer devices!&lt;/p&gt;

&lt;p&gt;All good? Let's go!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#challenge-1"&gt;
  &lt;/a&gt;
  Challenge 1
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qbdb8ze5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4yax8g9ynqymtdwx461.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qbdb8ze5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4yax8g9ynqymtdwx461.jpg" alt='dev.to footer showing the location of the "forem" link within the text "Built on Forem"'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the footer of the site there is a link to "Forem". &lt;/p&gt;

&lt;p&gt;The first challenge is to navigate to and click on the "Forem" link in the sentence "Built on &lt;strong&gt;Forem&lt;/strong&gt; - the open source....etc" located in the footer of the site.&lt;/p&gt;

&lt;p&gt;My best time is 9 seconds - but I did  have to think about this one and I only got it right 70% of the time when I tried to repeat it!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#challenge-2"&gt;
  &lt;/a&gt;
  Challenge 2
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x7p4MOiD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os0fzqtletao3uubfsip.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x7p4MOiD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os0fzqtletao3uubfsip.jpg" alt='Podcast page of "script" listing all of their podcasts'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one is simple - I want you to go to the podcast list page of "Script". (The list of all their podcasts).&lt;/p&gt;

&lt;p&gt;There are actually 2 variations of this challenge.&lt;/p&gt;

&lt;p&gt;The "easy" challenge is for people who already follow "Script" podcasts.&lt;/p&gt;

&lt;p&gt;The "hard" challenge is for people who do not follow "Script".&lt;/p&gt;

&lt;p&gt;The final URL you are trying to reach is &lt;a href="https://dev.to/scriptpodcast"&gt;https://dev.to/scriptpodcast&lt;/a&gt; - but you cannot just write that into your URL bar! Play fair people 😋&lt;/p&gt;

&lt;p&gt;Also you have to assume that you do not know the name of any of their podcasts each run. You have to try and find them as if you have never listened to them before.&lt;/p&gt;

&lt;p&gt;Make sure you end on the list of their podcasts.&lt;/p&gt;

&lt;p&gt;First time this took me about a minute, but in the end I got it down to 14 seconds (on the hard version as I don't follow them 😋)!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#challenge-3"&gt;
  &lt;/a&gt;
  Challenge 3
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wn5460nu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzbcs1n0h5qf4h6b83j4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wn5460nu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzbcs1n0h5qf4h6b83j4.jpg" alt='Screenshot of the header for the article "101 tips for being a great programmer"'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ok now the challenges are getting tougher. Don't forget you have to start at the home page with your focus in the URL bar!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; find the article "101 Tips For Being A Great Programmer (&amp;amp; Human)" - &lt;a href="https://dev.to/emmabostian/101-tips-for-being-a-great-programmer-human-36nl"&gt;https://dev.to/emmabostian/101-tips-for-being-a-great-programmer-human-36nl&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; write "hello" in the comments box at the bottom of the page (you do not need to submit it)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I couldn't find a good workaround for this one so it took me 48 seconds (and that was tabbing ridiculously fast).&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#challenge-4"&gt;
  &lt;/a&gt;
  Challenge 4
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V-2HFX92--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3w71da5guiwaujucpm01.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V-2HFX92--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3w71da5guiwaujucpm01.jpg" alt="Code newbie challenge, top right of the dev.to homepage (next column after the feed)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The final challenge&lt;/p&gt;

&lt;p&gt;Navigate to "the code newbie challenge" home page. &lt;/p&gt;

&lt;p&gt;Remember you can't just put the URL in, in fact in this challenge I want you to assume that you do not know it exists. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The real purpose of this challenge is to get to the top of the right hand side bar on the home page and click the link "Sign up today!".&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This one took some doing as at first I thought it was impossible (you will soon see why!) but in the end I got a respectable 22 seconds. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So my times were:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;9 seconds&lt;/li&gt;
&lt;li&gt;14 seconds&lt;/li&gt;
&lt;li&gt;48 seconds&lt;/li&gt;
&lt;li&gt;22 seconds (seriously could I not get 21 seconds so I can sing "I got 21 seconds to go" in my head? 🤣🤣)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Total time 1min 33 seconds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But that was after multiple attempts, some of them took me over a minute to complete the first time until I found better ways to do them.&lt;/p&gt;

&lt;p&gt;Obviously this is all a bit of fun but the underlying message is a serious one. &lt;strong&gt;make sure your sites are easy to use with a keyboard!&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Dev.to are improving accessibility rapidly, but the keyboard operability of the site is still quite difficult. &lt;/p&gt;

&lt;p&gt;In my next article in the dev.to accessibility series I will cover how dev.to can improve the keyboard experience on the site (and other sites built with forem) very easily! &lt;/p&gt;

&lt;p&gt;Be sure to check out the first article in the series as it may give you some ideas of what to look for on your own site and some ideas for simple fixes:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/fixing-dev-to-accessibility-4-fixes-that-would-take-less-than-10-minutes-11nj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Fixing dev.to accessibility [part 1] - 4 fixes that would take less than 10 minutes!&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ Mar 24 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#inclusion&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;So the question is "can you beat me time?" and more importantly "did this challenge make you think about your own website's accessibility?"&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>webdev</category>
      <category>watercooler</category>
      <category>competition</category>
    </item>
    <item>
      <title>Dynamic Dimension React Container with Transition Effect - Part 1</title>
      <author>AnxinYang</author>
      <pubDate>Sun, 18 Apr 2021 10:54:26 +0000</pubDate>
      <link>https://dev.to/anxinyang/dynamic-dimension-react-container-with-transition-effect-47a9</link>
      <guid>https://dev.to/anxinyang/dynamic-dimension-react-container-with-transition-effect-47a9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-issue"&gt;
  &lt;/a&gt;
  The Issue
&lt;/h2&gt;

&lt;p&gt;Sometimes, we want our container to dynamically fit the size of its content, such as navigation bar with dropdown menu. &lt;/p&gt;

&lt;p&gt;The size of the content may not always be a fixed value, and CSS transition hates that. &lt;/p&gt;

&lt;p&gt;We know CSS style like this will create a smooth transition.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.menu&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.menu&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, this will not work since css transition needs a numeric value to work with.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.menu&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.menu&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;fit-content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#method-1"&gt;
  &lt;/a&gt;
  Method 1
&lt;/h2&gt;

&lt;p&gt;We can use &lt;code&gt;ref&lt;/code&gt; and &lt;code&gt;getBoundingClientRect&lt;/code&gt; to get the content's dimension&lt;/p&gt;

&lt;p&gt;Here is a demo: &lt;br&gt;
&lt;iframe src="https://codesandbox.io/embed/p13vj"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;and the code of the container:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;DynamicContainer&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setRect&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getBoundingClientRect&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;//Only update dimension when children change&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;
      &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
        &lt;span class="na"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.3s&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;
      &lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* The inter container for calculating the content dimension*/&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;
        &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
          &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fit-content&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fit-content&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Noted: This container will only work well when the dimension of each child is static.&lt;/p&gt;

&lt;p&gt;We will talk how to handle child components with dynamic dimension next time.&lt;/p&gt;

&lt;p&gt;Thanks All.&lt;/p&gt;

</description>
      <category>css</category>
      <category>react</category>
      <category>javascript</category>
      <category>transition</category>
    </item>
    <item>
      <title>Are you using these Code Editors?</title>
      <author>CristoferK</author>
      <pubDate>Sun, 18 Apr 2021 09:26:02 +0000</pubDate>
      <link>https://dev.to/cristoferk/are-you-using-these-code-editors-2b9d</link>
      <guid>https://dev.to/cristoferk/are-you-using-these-code-editors-2b9d</guid>
      <description>&lt;p&gt;Are you suing these Code Editors?&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/eC8mO6iqUCk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Don't forget to like, share and subscribe!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Journey of Hackathon</title>
      <author>Vilsi Jain</author>
      <pubDate>Sun, 18 Apr 2021 08:58:26 +0000</pubDate>
      <link>https://dev.to/vilsi12/journey-of-hackathon-1m1k</link>
      <guid>https://dev.to/vilsi12/journey-of-hackathon-1m1k</guid>
      <description>&lt;p&gt;What is a hackathon?&lt;br&gt;
Hackathon which makes ideas into real world problem solutions , which make you connect with like minded people it make you a good team leader , grow your skills and work with different partners.&lt;br&gt;
I started my journey of hackathon in 1st year itself without knowing much, just made my team and started that time I am not a winner. I am a learner and then till now I take part in an 8+ hackathon and now I am a mentor in a hackathon.&lt;br&gt;
Who can join — In mostly Hackathon is beginner friendly everyone can participate in that just you need to make a good team and develop technical skills or if you don’t have just give it and learn the working pattern.&lt;/p&gt;

&lt;p&gt;Getting Started: Find Your Hackathon best fits on you From what I observed I found that the best profile of hackers are people who:&lt;br&gt;
They are highly competitive with a hunger to win&lt;br&gt;
bored by “just talking about it” and have the passion to see real results&lt;br&gt;
get energized by pressure deadlines&lt;br&gt;
fueled by finding like-minded people to idea to and work with&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First Decided to make a team of technical and good leader.
FORMING TEAM:
Team chemistry and makeup is one of the most important factors not only in winning, but also in making sure that you don’t burn out. To ensure that you have a chance, here are some tips:
Pitch your idea during the initial pitching session and get folks to buy-in on sharing your vision.
Join a team that already has a front-end engineer. This is a key role that I’ll describe in further detail below.
Have a team of friends or previous hackers to participate with. Knowing each member’s strengths and weaknesses beforehand gives you an advantage in preparation and execution.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;3.Employ These Strategies to Be Part of the Best Team- Make good strategies and make everyone on your team give their points and if you have a good team you will always have a chance to make sure that you are in the right direction.&lt;br&gt;
4.Understanding the Judges Panel is Key How to work — this is the best which help me to win understand the background of Judges what they want from you or in which field they are more proficient with this you will get idea that in which field you should focus more and pitch your idea.&lt;br&gt;
5.Decide Your Approach your topic and according to your skills divide it — Yes, always problem or field is given or open to all in that situation                                            1)team member should meet and discuss the innovative idea 2)approach how to make it skills required3)Divide the work on the skills of person.&lt;br&gt;
6.It’s for good time Utilize it best Hackathons typically last 24–48 hours, and the time will fly (especially if you want time for meals and sleep!).Get a general sense of who on your team will work on what, and approximately how long you expect it to take. Timebox tasks, noting when you will “just move on,” even if you can’t get things to work. Bugs can creep up anywhere — and a hackathon is no exception. Deciding in advance how much time you’ll allow for the different parts of your project, and when you’ll move on to a plan B, will help ensure that you have something to demo come pitch time.&lt;br&gt;
7.Learn How to Effectively Validate Your Idea and present it presentation is main to win means putting your ideas in front of judges is most important and you&lt;br&gt;
It’s for good time Utilize it best Hackathons typically last 24–48 hours, and the time will fly (especially if you want time for meals and sleep!).Get a general sense of who on your team will work on what, and approximately how long you expect it to take. Time box tasks, noting when you will “just move on,” even if you can’t get things to work. Bugs can creep up anywhere — and a hackathon is no exception. Deciding in advance how much time you’ll allow for the different parts of your project, and when you’ll move on to a plan B, will help ensure that you have something to demo come pitch time.&lt;br&gt;
Learn How to Effectively Validate Your Idea and present it presentation is main to win means putting your ideas in front of judges is most important and you&lt;br&gt;
8.Always write your mistake which you done and work upon it —&lt;/p&gt;

&lt;p&gt;This is the most important one “Learn from your mistake and try not to revise that in next”&lt;br&gt;
My best experience of winning Hackathon from Incubateind ,Code-n-build ,CIS, Github and my other Hackathon experience is also cool as we always learn from that&lt;br&gt;
IncubatedInd make best experience of your Hackathon I think you once checkout.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>10 Best Google Chrome Extensions for Web Developers in 2021</title>
      <author>Pawan Bhayde</author>
      <pubDate>Sun, 18 Apr 2021 08:55:54 +0000</pubDate>
      <link>https://dev.to/pawanbhayde/10-best-google-chrome-extensions-for-web-developers-in-2021-239i</link>
      <guid>https://dev.to/pawanbhayde/10-best-google-chrome-extensions-for-web-developers-in-2021-239i</guid>
      <description>&lt;p&gt;Whether you're a beginner Programmer or a seasoned programmer, you spend most of some time on Google. If you've got used Google Chrome Extensions a couple of years back, you almost certainly are avoiding it now or not even realizing its existence. But within the previous couple of years, there are many good Google Chrome developer extensions specifically made for Programmers and Software Developers to assists in their work.&lt;/p&gt;

&lt;p&gt;We often download multiple tools for various purposes and spend tons of space for storing . So why not use a Google Chrome Extension to try to to an equivalent job and reduce the work to manage multiple tools. Here we've cumulated an inventory of the simplest Chrome extensions that are very helpful for you as a developer and with these built-in developer tools, there seems to be no further need for more tools.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Daily.dev –&lt;/strong&gt;&lt;br&gt;
If you're a busy developer who cannot continue with the happenings of the programming and development world, then &lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for.html"&gt;Daily.dev&lt;/a&gt; is perhaps the simplest Chrome extension for you. Its creators also are professional web developers and that they created it because they were spending an excessive amount of time checking out the newest dev news.&lt;/p&gt;

&lt;p&gt;It comes with a default opening tab that shows you the foremost awesome dev news with zero efforts. it's an extension which will surely boost your professional growth with content from many qualified sources for you. Simply open a replacement tab, and you’re done. Being an open-source extension, Daily.dev helps an enormous community of developers round the world to remain in-tuned with the newest news.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Wappalyzer –&lt;/strong&gt;&lt;br&gt;
Developed by Elbert Alias in 2009, &lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for.html"&gt;Wappalyzer&lt;/a&gt; may be a Chrome extension that permits the developer to spot the various technologies that constitute the rear end of an internet site .&lt;/p&gt;

&lt;p&gt;Wappalyzer identifies the online technologies used on an internet site detecting web servers, frameworks, installed analytics tools, libraries, CMS, plugins, databases, widgets, and lots of more.&lt;/p&gt;

&lt;p&gt;It is an open-source extension and it uncovers quite thousand technologies which make it a real lifeline for developers and designers within the quest of creating appealing websites.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. sitemode.io –&lt;/strong&gt;&lt;br&gt;
This is certainly one among the simplest Chrome extensions out there for web developers since it allows them to switch , save, and share any website which too in real-time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for.html"&gt;Sitemod.io&lt;/a&gt; extension allows developers to switch an internet site without having access to the ASCII text file and also to make a shareable link to the modified website.&lt;/p&gt;

&lt;p&gt;It is an excellent tool if you're an internet designer and have ideas for a prospective customer's website.&lt;/p&gt;

&lt;p&gt;It uses Chrome Developer Tools to edit an internet page's HTML, CSS, or JS code, and make it possible to feature your code to the online page. Sitemod.io may be a must-have extension in your developer toolkit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Devo –&lt;/strong&gt;&lt;br&gt;
Devo may be a new tab extension that shows GitHub Trending topics, Product Hunts, Hacker News, and lots of different platforms’ front pages on every new tab, with no-login required.&lt;/p&gt;

&lt;p&gt;Users have the liberty of adjusting the location of the cards, display whatever platform they might wish to in several orders. it's an excellent tool for developers who got to stay updated with the newest changes in various tech-related fields.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for.html"&gt;Devo&lt;/a&gt; uses specially-built web crawlers for every of the platforms and designs the info within the way of the first platform. it's an open-source extension.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Marmoset&lt;/strong&gt;&lt;br&gt;
User appeal is extremely important for developer projects and lots of times developers might encounter the necessity to make snapshots for his or her codes in their projects for aesthetics or other representation purposes.&lt;/p&gt;

&lt;p&gt;Using &lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for.html"&gt;Marmoset&lt;/a&gt;, it's possible to make beautiful code snapshots, in only seconds, that are useful for either creating graphical representations of your work to be used on social media or in your portfolio website or elsewhere . it's a must have tool for web developers and designers.&lt;/p&gt;

&lt;p&gt;Marmoset- Best Google Chrome Extensions for Software Developers&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. JSON Viewer&lt;/strong&gt;&lt;br&gt;
If you're currently working or have previously worked with anything involving plenty of JSON code like API's (especially RestFul APIs), then you would possibly be totally conscious of the very fact that how clumsy and unreadable the JSON code is usually .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for.html"&gt;JSON Viewer&lt;/a&gt; may be a visually stunning JSON highlighter and beautifier tool that serves an excellent purpose as a Chrome extension for developers.&lt;/p&gt;

&lt;p&gt;It helps during arranging the JSON data in a visually appealing tree format which may be viewed directly within the browser window. it's an open-source extension for inspecting JSON data.&lt;/p&gt;

&lt;p&gt;Related: Learn to Code, Make Money: the way to Turn Programming Skills Into Income&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. SAML Tracer&lt;/strong&gt;&lt;br&gt;
As an internet developer, one has got to handle large amounts of knowledge that circulates through the whole project and between various others.&lt;/p&gt;

&lt;p&gt;Security Assertion Mark-up Language (SAML) which is an open standard allowing the exchange of authorization credentials between a service provider and an identity provider comes into action here.&lt;/p&gt;

&lt;p&gt;Thus, a developer often has the necessity to trace the SAML traffic. With the assistance of the &lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for.html"&gt;SAML Tracer&lt;/a&gt; Chrome extension, developers can easily trace and highlight SAML traffic.&lt;/p&gt;

&lt;p&gt;It traces the small print of SAML Request and Response and may also trace the small print of HTTP requests or browser traffic including requests like GET, POST, PUT, DELETE, login and logout responses, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. actiTime&lt;/strong&gt;&lt;br&gt;
Any developer round the globe knows that point may be a vital factor for the success of their projects and keeping a track of their development time is important for the project's progress and growth.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for.html"&gt;actiTime&lt;/a&gt; extension makes time tracking easier and allows you to trace your hours directly from Chrome with a timer.&lt;/p&gt;

&lt;p&gt;It is an excellent tool for developers to stay a track of their work hours and is employed by companies and freelancers to research their performance and manage their project's progress and profitability.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Ghostery&lt;/strong&gt;&lt;br&gt;
Ghostery may be a powerful privacy protection extension for Chrome developers. It not only blocks ads but also detects and stops trackers, pixels, or the other embedded snippet ultimately speeding up websites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for.html"&gt;Ghostery&lt;/a&gt; eliminates annoying advertisements from an internet site and provides tracking protection to guard your data by blocking 3rd party websites from tracking you. it's freed from cost and requires no sign-up or registration to urge started.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Full-Stack Developer Tools&lt;/strong&gt;&lt;br&gt;
In the past few years, the demand for full-stack developers has risen exponentially within the market then has the demand for full-stack development tools.&lt;/p&gt;

&lt;p&gt;There are an outsized number of tools for full-stack development but it's very tedious work to fetch them from different locations. &lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for.html"&gt;Full-Stack Assistant - Developer Tools&lt;/a&gt; has made this task easier for developers by bringing the foremost used tools for full-stack development under one chrome extension.&lt;/p&gt;

&lt;p&gt;It consists of useful Development Tools and resources in one organized place.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>design</category>
    </item>
    <item>
      <title>C++ vs Python</title>
      <author>Konchada Sai Ansul</author>
      <pubDate>Sun, 18 Apr 2021 08:31:05 +0000</pubDate>
      <link>https://dev.to/saiansulsblog/c-vs-python-47ki</link>
      <guid>https://dev.to/saiansulsblog/c-vs-python-47ki</guid>
      <description>&lt;p&gt;Hello Guys, Welcome back to another post of &lt;strong&gt;Sai Ansul's Blog&lt;/strong&gt;.&lt;br&gt;
In this blog we are gonna find which programming language is better.&lt;/p&gt;

&lt;p&gt;So let's start,&lt;/p&gt;

&lt;p&gt;Firstly let us know what is programming? &lt;br&gt;&lt;br&gt;
Programming is the way we can make the computer perform various tasks.&lt;/p&gt;

&lt;p&gt;What is programming language? &lt;br&gt;&lt;br&gt;
It is a formal language to perform various tasks, there are several protocols and algorithms to be followed.&lt;/p&gt;

&lt;p&gt;Let us know the types of programming languages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Procedural Programming Language. &lt;/li&gt;
&lt;li&gt;Functional Programming Language. &lt;/li&gt;
&lt;li&gt;Object-oriented Programming Language. &lt;/li&gt;
&lt;li&gt;Scripting Programming Language. &lt;/li&gt;
&lt;li&gt;Logic Programming Language.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some names of programming language are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;C++ Language. &lt;/li&gt;
&lt;li&gt;C Language. &lt;/li&gt;
&lt;li&gt;Pascal Language.&lt;/li&gt;
&lt;li&gt;Python Language.&lt;/li&gt;
&lt;li&gt;Java Language.&lt;/li&gt;
&lt;li&gt;Perl Language&lt;/li&gt;
&lt;li&gt;Lisp Language&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, now lets us know something about both the programming language:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C++
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VxdIrASp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618658101893/6ORZL3PNI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VxdIrASp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618658101893/6ORZL3PNI.png" alt="White Photo Gaming YouTube Thumbnail.png"&gt;&lt;/a&gt;&lt;br&gt;
It is programming language used for building high level programmed applications, developed by Bjarne Stroustrup as an extension of the C programming language, or "C with Classes". C++ supports different ways of programming like: object-oriented, functional, procedural and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DY94aMkV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618657361352/knijkR4X1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DY94aMkV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618657361352/knijkR4X1.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
It is a programming language, it's object oriented, it's a interpreter language which is easy to learn. This can be used for software and web development also for data science.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#now-let-us-know-some-of-the-of-the-difference-between-two-programming-language"&gt;
  &lt;/a&gt;
  Now let us know some of the  of the difference between two programming language
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;C++&lt;/th&gt;
    &lt;th&gt;Pyhton&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;It is statically typed &lt;/td&gt;
    &lt;td&gt;It is dynamically typed &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;No scope as an backend developer &lt;/td&gt;
    &lt;td&gt;Good option for backend developer &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; Need to write a lot of lines of code&lt;/td&gt;
    &lt;td&gt;Less lines of codes required &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;It is pre; compiled&lt;/td&gt;
    &lt;td&gt;It uses interpreter&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Looks messy but manageable as compared to python&lt;/td&gt;
    &lt;td&gt;It is easy since its object-oriented and simpler to use&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;C++ is faster than python  &lt;/td&gt;
    &lt;td&gt;Python is slower because it uses interpreter, it also determines on the type of data while running &lt;/td&gt;
  &lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; It doesn't support garbage collection &lt;/td&gt;
&lt;td&gt; It supports garbage collection &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; TIOBE rating is 4 &lt;/td&gt;
&lt;td&gt; TIOBE rating is 3 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Variables are limited within loops &lt;/td&gt;
&lt;td&gt; Variables are also accessible outside loops &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Rapid Prototyping not possible because of larger code size&lt;/td&gt;
&lt;td&gt; Rapid Prototyping is possible because of the small size of the code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Not easy in contrast to Python because of its complex syntax. &lt;/td&gt;
&lt;td&gt; Program is easier to type &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;These were some of the differences between these 2 programming language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#now-let-us-know-some-advantage-amp-disadvantages-of-python-amp-c"&gt;
  &lt;/a&gt;
  Now let us know some advantage &amp;amp; disadvantages of Python &amp;amp; C++
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--clb38g54--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618729828057/Hy85WdYbD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--clb38g54--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618729828057/Hy85WdYbD.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-python"&gt;
  &lt;/a&gt;
  Advantages of Python
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Its portable&lt;/li&gt;
&lt;li&gt;Its free and open sourced&lt;/li&gt;
&lt;li&gt;Easy to use and fast to develop language&lt;/li&gt;
&lt;li&gt;It has all the libraries that each requires&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#disadvantage-of-python"&gt;
  &lt;/a&gt;
  Disadvantage of Python
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Speed is slower than C++&lt;/li&gt;
&lt;li&gt;There are sometimes runtime errors&lt;/li&gt;
&lt;li&gt;Its not a good choice for mobile development&lt;/li&gt;
&lt;li&gt;Its used for functional programming&lt;/li&gt;
&lt;li&gt;Its not a good choice for memory intensive tasks&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-c"&gt;
  &lt;/a&gt;
  Advantages of C++
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It is also portable&lt;/li&gt;
&lt;li&gt;Object oriented&lt;/li&gt;
&lt;li&gt;Low-level Manipulation&lt;/li&gt;
&lt;li&gt;Memory Management&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-c"&gt;
  &lt;/a&gt;
  Disadvantages of C++
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It does not have any security feature&lt;/li&gt;
&lt;li&gt;It can't support garbage collection&lt;/li&gt;
&lt;li&gt;Difficult to debug while used for web applications&lt;/li&gt;
&lt;li&gt;It becomes complex while in a very big and high level programming&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, since we have covered what is python &amp;amp; C++, its difference and its advantages and disadvantages.&lt;/p&gt;

&lt;p&gt;Now lets proceed towards the conclusion&lt;/p&gt;

&lt;p&gt;So, if you have read this, you might have a clear idea about which programming language is better and which one you should use.&lt;br&gt;
Python is better beginners because of  its easy code and syntax, its a good for who want to choose their  career  in backend web development.&lt;br&gt;
Python is also leading language for data analytics and machine learning .&lt;br&gt;
But, if you want to develop applications or software then C++ is a good programming language to go for.&lt;/p&gt;

&lt;p&gt;Now, at the end you have to decide for what purpose which one you have to choose.&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Solution: Remove Nth Node From End of List</title>
      <author>seanpgallivan</author>
      <pubDate>Sun, 18 Apr 2021 08:12:33 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-remove-nth-node-from-end-of-list-4njl</link>
      <guid>https://dev.to/seanpgallivan/solution-remove-nth-node-from-end-of-list-4njl</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/remove-nth-node-from-end-of-list/discuss/1164542"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-19-medium-remove-nth-node-from-end-of-list"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/remove-nth-node-from-end-of-list/"&gt;Leetcode Problem #19 (&lt;em&gt;Medium&lt;/em&gt;): Remove Nth Node From End of List&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given the &lt;code&gt;head&lt;/code&gt; of a linked list, remove the &lt;code&gt;n&lt;/code&gt;th node from the end of the list and return its &lt;code&gt;head&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow up&lt;/strong&gt;: Could you do this in one pass?&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;head = [1,2,3,4,5], n = 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[1,2,3,5]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zVNBh1PE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2020/10/03/remove_ex1.jpg" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;head = [1], n = 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;head = [1,2], n = 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[1]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The number of nodes in the list is &lt;code&gt;sz&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= sz &amp;lt;= 30&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= Node.val &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= n &amp;lt;= sz&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;With a singly linked list, the &lt;em&gt;only&lt;/em&gt; way to find the end of the list, and thus the &lt;strong&gt;n&lt;/strong&gt;'th node from the end, is to actually iterate all the way to the end. The challenge here is attemping to find the solution in only one pass. A naive approach here might be to store pointers to each node in an array, allowing us to calculate the &lt;strong&gt;n&lt;/strong&gt;'th from the end once we reach the end, but that would take &lt;strong&gt;O(M) extra space&lt;/strong&gt;, where &lt;strong&gt;M&lt;/strong&gt; is the length of the linked list.&lt;/p&gt;

&lt;p&gt;A slightly less naive approach would be to only store only the last &lt;strong&gt;n+1&lt;/strong&gt; node pointers in the array. This could be achieved by overwriting the elements of the storage array in circlular fashion as we iterate through the list. This would lower the &lt;strong&gt;space complexity&lt;/strong&gt; to &lt;strong&gt;O(N+1)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In order to solve this problem in only one pass and &lt;strong&gt;O(1) extra space&lt;/strong&gt;, however, we would need to find a way to &lt;em&gt;both&lt;/em&gt; reach the end of the list with one pointer &lt;em&gt;and also&lt;/em&gt; reach the &lt;strong&gt;n&lt;/strong&gt;'th node from the end simultaneously with a second pointer.&lt;/p&gt;

&lt;p&gt;To do that, we can simply stagger our two pointers by &lt;strong&gt;n&lt;/strong&gt; nodes by giving the first pointer (&lt;strong&gt;fast&lt;/strong&gt;) a head start before starting the second pointer (&lt;strong&gt;slow&lt;/strong&gt;). Doing this will cause &lt;strong&gt;slow&lt;/strong&gt; to reach the &lt;strong&gt;n&lt;/strong&gt;'th node from the end at the same time that &lt;strong&gt;fast&lt;/strong&gt; reaches the end.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jnoNPYoY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BSiLKj0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jnoNPYoY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BSiLKj0.png" alt="Visual 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since we will need access to the node &lt;em&gt;before&lt;/em&gt; the target node in order to remove the target node, we can use &lt;strong&gt;fast.next == null&lt;/strong&gt; as our exit condition, rather than &lt;strong&gt;fast == null&lt;/strong&gt;, so that we stop one node earlier.&lt;/p&gt;

&lt;p&gt;This will unfortunately cause a problem when &lt;strong&gt;n&lt;/strong&gt; is the same as the length of the list, which would make the first node the target node, and thus make it impossible to find the node &lt;em&gt;before&lt;/em&gt; the target node. If that's the case, however, we can just &lt;strong&gt;return head.next&lt;/strong&gt; without needing to stitch together the two sides of the target node.&lt;/p&gt;

&lt;p&gt;Otherwise, once we succesfully find the node &lt;em&gt;before&lt;/em&gt; the target, we can then stitch it together with the node &lt;em&gt;after&lt;/em&gt; the target, and then &lt;strong&gt;return head&lt;/strong&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;There are only minor differences between the code of all four languages.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;removeNthFromEnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;slow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;head&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;fast&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;slow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;slow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;
    &lt;span class="nx"&gt;slow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;slow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;head&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;removeNthFromEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;
        &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;ListNode&lt;/span&gt; &lt;span class="nf"&gt;removeNthFromEnd&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ListNode&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;ListNode&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;slow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;removeNthFromEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;slow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Nginx Cheatsheet</title>
      <author>Vishnu Chilamakuru</author>
      <pubDate>Sun, 18 Apr 2021 08:09:56 +0000</pubDate>
      <link>https://dev.to/vishnuchilamakuru/nginx-cheatsheet-24ph</link>
      <guid>https://dev.to/vishnuchilamakuru/nginx-cheatsheet-24ph</guid>
      <description>&lt;p&gt;Nginx is open-source software for web serving, reverse proxying, caching, load balancing, media streaming, and more. In this post, I will mention few Nginx configurations which we use frequently.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#index"&gt;
  &lt;/a&gt;
  Index
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#listen-to-port"&gt;Listen To Port&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access-logging"&gt;Access Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#domain-name"&gt;Domain Name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#static-assets"&gt;Static Assets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#redirect"&gt;Redirect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reverse-proxy"&gt;Reverse Proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#load-balancing"&gt;Load Balancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl"&gt;SSL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#listen-to-port"&gt;
  &lt;/a&gt;
  Listen To Port
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;# Standard HTTP Protocol&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;# Standard HTTPS Protocol&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt; &lt;span class="s"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;# Listen on 80 using IPv6&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="s"&gt;[::]:80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;# Listen only on using IPv6&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="s"&gt;[::]:80&lt;/span&gt; &lt;span class="s"&gt;ipv6only=on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#access-logging"&gt;
  &lt;/a&gt;
  Access Logging
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;# Relative or full path to log file&lt;/span&gt;
  &lt;span class="kn"&gt;access_log&lt;/span&gt; &lt;span class="n"&gt;/path/to/file.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;# Turn 'on' or 'off'&lt;/span&gt;
  &lt;span class="kn"&gt;access_log&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#domain-name"&gt;
  &lt;/a&gt;
  Domain Name
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;# Listen to yourdomain.com&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;yourdomain.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;# Listen to multiple domains&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;yourdomain.com&lt;/span&gt; &lt;span class="s"&gt;www.yourdomain.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;# Listen to all domains&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;*.yourdomain.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;# Listen to all top-level domains&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;yourdomain.*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;# Listen to unspecified Hostnames (Listens to IP address itself)&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#static-assets"&gt;
  &lt;/a&gt;
  Static Assets
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;yourdomain.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="n"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="n"&gt;/path/to/website&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#redirect"&gt;
  &lt;/a&gt;
  Redirect
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;www.yourdomain.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt; &lt;span class="s"&gt;http://yourdomain.com&lt;/span&gt;&lt;span class="nv"&gt;$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;www.yourdomain.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="n"&gt;/redirect-url&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt; &lt;span class="s"&gt;http://otherdomain.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reverse-proxy"&gt;
  &lt;/a&gt;
  Reverse Proxy
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;yourdomain.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="n"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://0.0.0.0:3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="c1"&gt;# where 0.0.0.0:3000 is your application server (Ex: node.js) bound on 0.0.0.0 listening on port 3000&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#load-balancing"&gt;
  &lt;/a&gt;
  Load Balancing
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;upstream&lt;/span&gt; &lt;span class="s"&gt;node_js&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;server&lt;/span&gt; &lt;span class="nf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server&lt;/span&gt; &lt;span class="nf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="s"&gt;.131.121.122&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;yourdomain.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="n"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://node_js&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#ssl"&gt;
  &lt;/a&gt;
  SSL
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt; &lt;span class="s"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;yourdomain.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;ssl&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;ssl_certificate&lt;/span&gt; &lt;span class="n"&gt;/path/to/cert.pem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;ssl_certificate_key&lt;/span&gt; &lt;span class="n"&gt;/path/to/privatekey.pem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;ssl_stapling&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;ssl_stapling_verify&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;ssl_trusted_certificate&lt;/span&gt; &lt;span class="n"&gt;/path/to/fullchain.pem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;ssl_protocols&lt;/span&gt; &lt;span class="s"&gt;TLSv1&lt;/span&gt; &lt;span class="s"&gt;TLSv1.1&lt;/span&gt; &lt;span class="s"&gt;TLSv1.2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;ssl_connection_timeout&lt;/span&gt; &lt;span class="s"&gt;1d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;ssl_session_cache&lt;/span&gt; &lt;span class="s"&gt;shared:SSL:50m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;Strict-Transport-Security&lt;/span&gt; &lt;span class="s"&gt;max-age=15768000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Permanent Redirect for HTTP to HTTPS&lt;/span&gt;
&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;yourdomain.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt; &lt;span class="s"&gt;https://&lt;/span&gt;&lt;span class="nv"&gt;$host$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;







&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#if-you-like-what-you-read-and-want-to-see-more-please-support-me-with-coffee-or-a-book-"&gt;
  &lt;/a&gt;
  If you like what you read and want to see more, please support me with  &lt;a href="https://www.buymeacoffee.com/vishnuchi"&gt;coffee or a book&lt;/a&gt;  ;)
&lt;/h3&gt;

</description>
      <category>tutorial</category>
      <category>nginx</category>
      <category>devops</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Introduction to Microservice Architecture</title>
      <author>Tamerlan Gudabayev</author>
      <pubDate>Sun, 18 Apr 2021 08:01:00 +0000</pubDate>
      <link>https://dev.to/tamerlang/introduction-to-microservice-architecture-1p8h</link>
      <guid>https://dev.to/tamerlang/introduction-to-microservice-architecture-1p8h</guid>
      <description>&lt;p&gt;It can be very intimidating designing a backend system. There are many different variations and so many buzz words such as: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Monolith&lt;/li&gt;
&lt;li&gt;Macroservices&lt;/li&gt;
&lt;li&gt;Miniservices&lt;/li&gt;
&lt;li&gt;Microservices&lt;/li&gt;
&lt;li&gt;Serverless&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As it turns out, the process of choosing an architecture is a lot simpler. You just gotta know the pros and cons of each one and pick the one that suits your project needs. But first, you need to have a solid understanding of each architectural pattern, so this is why in this post we cover one of the most popular architectural patterns, the microservice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You'll learn:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basics of software architecture&lt;/li&gt;
&lt;li&gt;Pros and cons of the monolith architecture&lt;/li&gt;
&lt;li&gt;Pros and cons of microservices&lt;/li&gt;
&lt;li&gt;Basics of design pattern&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#terminology"&gt;
  &lt;/a&gt;
  Terminology
&lt;/h2&gt;

&lt;p&gt;Before we move on to the gritty details of microservices, we first have to cover the basic terminology.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-software-architecture"&gt;
  &lt;/a&gt;
  What is software architecture?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Architecture, in a nutshell, is the decisions that you wish you had made early on in the project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Architecture is the skeleton of the project. It is the hard decisions you make early on that determine the foundation of the project. It's this foundation that greatly influences the quality of code, ease of development and deployment, maintainability, and evolvability.&lt;/p&gt;

&lt;p&gt;Examples of architecture:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Client-Server&lt;/li&gt;
&lt;li&gt;Monolith&lt;/li&gt;
&lt;li&gt;Model-View-Controller (MVC)&lt;/li&gt;
&lt;li&gt;Event-Driven&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-monolith-architecture"&gt;
  &lt;/a&gt;
  What is monolith architecture?
&lt;/h3&gt;

&lt;p&gt;You might be thinking, &lt;em&gt;isn't this post about microservices, why is this idiot talking about monolith?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The reason is that to understand what problems does the microservice architecture fix, we gotta first understand the problems that the old traditional monolithic architecture give.&lt;/p&gt;

&lt;p&gt;Okay, moving on. &lt;/p&gt;

&lt;p&gt;The word monolith means "composed all in one place", in software terms it means having a single application, made up of different components, combined into a single program from a single platform.&lt;/p&gt;

&lt;p&gt;Components may include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Authorization - responsible for authorizing the user&lt;/li&gt;
&lt;li&gt;Presentation - responsible for handling HTTP requests, and responding back with HTML or JSON/XML (if it's an API)&lt;/li&gt;
&lt;li&gt;Business logic - the business logic of the application&lt;/li&gt;
&lt;li&gt;Database layer - responsible for communicating with the database&lt;/li&gt;
&lt;li&gt;Application integration - responsible for integrating with other services (using REST API or messaging) or any other data source.&lt;/li&gt;
&lt;li&gt;Notification module - responsible for sending notifications.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UVGm_Jeq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxhmz7z95897fdv67r7t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UVGm_Jeq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxhmz7z95897fdv67r7t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For years monolithic applications have been industry default because it's simple. All code is in one place, it's simple to test, and deploy. But as application size grows, there are some major drawbacks that get introduced.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-problems-with-monolithic-architecture"&gt;
  &lt;/a&gt;
  What are the problems with monolithic architecture?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Maintenance - as the codebase increases, it becomes harder to make changes.&lt;/li&gt;
&lt;li&gt;The large code base intimidates developers, especially new ones. Which will lead to decreased productivity.&lt;/li&gt;
&lt;li&gt;Overloaded IDE - the larger the code base, the slower the IDE and the less productive developers will be.&lt;/li&gt;
&lt;li&gt;Startup time - the larger the application, the more time it will take to launch the application, in turn will lead to decreased productivity.&lt;/li&gt;
&lt;li&gt;Deployment - in order to update one component, your gonna have to redeploy the whole application. This might interrupt background tasks, and possibly cause problems.&lt;/li&gt;
&lt;li&gt;Scaling - monolithic applications are hard to scale because different modules may have different resource requirements.&lt;/li&gt;
&lt;li&gt;Scaling to development teams - as an application gets bigger, it would be advisable to separate developers into teams per module. For example, a team for the payments module, and another team for the products module. In a monolithic architecture, everything is coupled together, making it hard for teams to work independently. This forces the teams to coordinate their development and deployments. In turn, making it difficult to make changes and update production.&lt;/li&gt;
&lt;li&gt;Tech stack - Monolithic architecture forces you to stick to one technology (sometimes even a specific version of that technology). It's very hard to adopt new technology due to the fact that changing the language or framework will affect the whole application.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-microservice"&gt;
  &lt;/a&gt;
  What is a microservice?
&lt;/h3&gt;

&lt;p&gt;The microservice architecture is an approach to software development, in which a large application is made up of a suite of modular services (i.e loosely coupled modules/components). A good analogy would be legos, where each set of blocks corresponds to a component. Additionally, a group of connected components would create a full-fledged application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9MQRi63M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bar48ltpk20zacd7bthj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9MQRi63M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bar48ltpk20zacd7bthj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each module/service has a single business goal and uses simple interfaces to communicate with other services. Another feature of services is that, unlike the monolith application where you share a single database, microservices follow the approach of database per service. This ensures loose coupling, and the service can use the database that best suits its needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-of-microservices"&gt;
  &lt;/a&gt;
  Pros of Microservices
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Enable the continuous development and deployment of large complex applications.

&lt;ul&gt;
&lt;li&gt;Improves maintainability - each service is small, so it's much easier to make changes.&lt;/li&gt;
&lt;li&gt;Better testability - services are smaller and faster to test.&lt;/li&gt;
&lt;li&gt;Better deployability - each service can be deployed independently&lt;/li&gt;
&lt;li&gt;Enables teams to be independent - teams can get full responsibility for a single or set of services. Each team can develop, test, deploy, and scale their services independently of all other teams.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Each microservice is relatively small:

&lt;ul&gt;
&lt;li&gt;Less complexity, easier to understand&lt;/li&gt;
&lt;li&gt;Smaller code base, making the IDE fast.&lt;/li&gt;
&lt;li&gt;The application starts faster, which makes developers much more productive, and speeds up deployments.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Improved fault isolation. If one service faces issues, then only that service will be affected. The other services will continue normally. Unlike monolithic architecture, one misbehaving component can bring down the entire system.&lt;/li&gt;
&lt;li&gt;Better evolvability - when developing a new service, you can use a new technology stack. Similarly, when making major changes to an existing service, you can rewrite the whole service in a new stack.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cons-of-microservices"&gt;
  &lt;/a&gt;
  Cons of Microservices
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Developers must deal with the additional complexity of creating a distributed system:

&lt;ul&gt;
&lt;li&gt;Developers must implement the inter-service communication mechanism and deal with partial failure&lt;/li&gt;
&lt;li&gt;Implementing requests that span multiple services is more difficult.&lt;/li&gt;
&lt;li&gt;Testing the interactions between services is more difficult.&lt;/li&gt;
&lt;li&gt;Implementing requests that span multiple services requires careful coordination between the teams.&lt;/li&gt;
&lt;li&gt;Developer tools/IDEs are oriented toward building monolithic applications and don’t provide explicit support for developing distributed applications.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Deployment complexity - in production, there is additional complexity in deploying and managing a system compromised of many different services.&lt;/li&gt;
&lt;li&gt;Increased memory consumption. The microservice architecture replaces N monolithic application instances with NxM services instances. If each service runs in its own JVM (or equivalent), which is usually necessary to isolate the instances, then there is the overhead of M times as many JVM runtimes. Moreover, if each service runs on its own VM (e.g. EC2 instance), as is the case at Netflix, the overhead is even higher.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#microservice-design-patterns"&gt;
  &lt;/a&gt;
  Microservice Design Patterns
&lt;/h2&gt;

&lt;p&gt;You cannot use the microservice architecture alone, there are many different design patterns that solve the same problems in different ways, and it's your job as the developer to choose which one best fits your project. &lt;/p&gt;

&lt;p&gt;An example may be:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How to decompose the application into services?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here you can use different design patterns:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Decompose by business capability and define services corresponding to business capabilities.&lt;/li&gt;
&lt;li&gt;Decompose by domain-driven design subdomain.&lt;/li&gt;
&lt;li&gt;Decompose by verb or use case and define services that are responsible for particular actions. e.g. a &lt;code&gt;Shipping Service&lt;/code&gt; that’s responsible for shipping complete orders.&lt;/li&gt;
&lt;li&gt;Decompose by nouns or resources by defining a service that is responsible for all operations on entities/resources of a given type.
e.g. an &lt;code&gt;Account Service&lt;/code&gt; that is responsible for managing user accounts.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-are-patterns"&gt;
  &lt;/a&gt;
  What are patterns?
&lt;/h3&gt;

&lt;p&gt;Design patterns are typical solutions to commonly occurring problems in software design. They are like pre-made blueprints that you can customize to solve a recurring design problem in your code.&lt;/p&gt;

&lt;p&gt;You can't just find and copy a pattern. Patterns do not provide any code but provide a general concept for solving a specific problem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-types-of-microservices-patterns"&gt;
  &lt;/a&gt;
  What are the types of microservices patterns?
&lt;/h3&gt;

&lt;p&gt;Microservices have lots of patterns, to make it easier, we have separated the patterns into three categories based on their relationships to one another.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Predecessor – a predecessor pattern is a pattern that motivates the need for this pattern. For example, the Microservice Architecture pattern is the predecessor to the rest of the patterns in the pattern language except the monolithic architecture pattern.&lt;/li&gt;
&lt;li&gt;Successor – a pattern that solves an issue that is introduced by this pattern. For example, if you apply the Microservice Architecture pattern you must then apply numerous successor patterns including service discovery patterns and the Circuit Breaker pattern.&lt;/li&gt;
&lt;li&gt;Alternative – a pattern that provides an alternative solution to this pattern. For example, the Monolithic Architecture pattern and the Microservice Architecture pattern are alternative ways of architecting an application. You pick one or the other. These relationships provide valuable guidance when using a pattern language. Applying a pattern creates issues that you must then address by applying successor patterns. The selection of patterns continuously recursively until you reach patterns with no successor. If two or more patterns are alternatives then you must typically pick just one. In many ways, this is similar to traversing a graph.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Congratulations, you now know enough to go forth in your journey of being a software architect. The journey doesn't stop here, make sure to check out &lt;a href="http://microservices.io"&gt;microservices.io&lt;/a&gt; for more details on microservices.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>architecture</category>
      <category>computerscience</category>
      <category>microservices</category>
    </item>
    <item>
      <title>Basic Game Development</title>
      <author>Tom Morris</author>
      <pubDate>Sun, 18 Apr 2021 07:41:05 +0000</pubDate>
      <link>https://dev.to/wifiguard/basics-game-development-339o</link>
      <guid>https://dev.to/wifiguard/basics-game-development-339o</guid>
      <description>&lt;h1&gt;
  &lt;a href="#how-beginners-learn-game-programming"&gt;
  &lt;/a&gt;
  How Beginners Learn Game Programming
&lt;/h1&gt;

&lt;p&gt;Anyone who likes to play video games may have thought about programming your own game and then making it available to others for play.&lt;/p&gt;

&lt;p&gt;However, this project can be a little more demanding than you initially endo. What types of video games can be created, how games work and what you need to know about programming, you will learn in this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-programming-of-video-games"&gt;
  &lt;/a&gt;
  What is the programming of video games?
&lt;/h2&gt;

&lt;p&gt;The creation of a game depends primarily on what kind of game you want to program. From simple 2D games to 3D graphic pops, everything is possible, but also different laborious. Casino Games are also developed in a similar way and you can find out more here: &lt;a href="https://casinokix.com"&gt;Casinokix&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A mobile quiz game is programmed faster than a 2D multiplayer game with realistic physics. This also recognizes that the game genre alone influences what effort you have to make to be able to implement the game at all. In addition, there are which platforms you want to operate: From consoles, handhelds to PC and mobile devices, everything is possible, but also different time consuming. You might know it from exclusive titles for consoles. &lt;/p&gt;

&lt;p&gt;It takes quite a while to release a single-console game for other consoles or PC. The best known and most elaborate example is GTA5. This game was released for the Xbox 360 and Playstation 3 in 2013. Xbox One and Playstation 4 followed in 2014 and only in April 2015 the game was released for PC.&lt;/p&gt;

&lt;p&gt;If you are thinking that you want your game to be as large as a GTA5, you should know that more than 1000 people were involved in the development of GTA5 and the development of the game is said to have cost the equivalent of €191.2 million. It is the most complex and expensive game development ever, showing exactly how hard it can be to program games.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-video-game-work"&gt;
  &lt;/a&gt;
  How does a video game work
&lt;/h2&gt;

&lt;p&gt;The complexity of a game is evident when you take a closer look under the hood. When you play video games you often hear about the term FPS. This is the abbreviation for frames per second. But what does this term mean? If you look at the game mechanics, see the following sequence:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;input&lt;/li&gt;
&lt;li&gt;workmanship&lt;/li&gt;
&lt;li&gt;output&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Information about the gameplay is collected in the input. This means evaluating keyboard and mouse input or retrieving GameController data. You may even need data from the Internet, for example in multiplayer games.&lt;/p&gt;

&lt;p&gt;Then, of course, there is information about the current score, so where are the players, who performed what action last, and which animations were active in the last step.&lt;/p&gt;

&lt;p&gt;This information must be available for the next step. After all, everything is then calculated in the processing step: the next player position and animation, the game rules, are evaluated. Has a player already won, or has just done something else. Can an object through a wall or does it have to bounce off? So effects, rules of the game, physics and movements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#games-calculations"&gt;
  &lt;/a&gt;
  Games Calculations
&lt;/h2&gt;

&lt;p&gt;All these calculations are evaluated in this 2nd step, the result is then a game state that can be spent. And so you have already arrived in the third step: the edition. Now the required objects are drawn on the screen, sound effects or music are played, controllers are activated to vibrate, and the current data is sent to the server for multiplayer games. And then the whole thing starts from scratch. This is called the GameLoop.&lt;/p&gt;

&lt;p&gt;How many times do you think this needs to happen so you can gamble a smooth game? These 3 steps must be completed at least 24 times a second, otherwise it will look to your eye as if the game is stumbling. Better is 30, 60 and even 90 passes per second for 3D/VR games.&lt;/p&gt;

&lt;p&gt;In the end, an image is created with each pass, in English it is called one frame. 24 calculated frames per second result in 24 fps. The cool thing about programming is that there are so-called game engines that make your work easier.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-video-game"&gt;
  &lt;/a&gt;
  Create a video game
&lt;/h2&gt;

&lt;p&gt;As fast as the gameloop conjures frames per second on the screen, unfortunately, creating a game is not at all. Even if you already know all the necessary details of programming and have enough experience, the effort is high.&lt;/p&gt;

&lt;p&gt;You go through a typical software development process and have to do a few additional things.&lt;/p&gt;

&lt;p&gt;If you liked this article, here is a place where you can learn how to code. &lt;a href="https://www.codecademy.com/learn/learn-how-to-code"&gt;Code Academy&lt;/a&gt;&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>games</category>
      <category>development</category>
    </item>
    <item>
      <title>Setting up my Windows Coding Environment </title>
      <author>Hritik Pawar</author>
      <pubDate>Sun, 18 Apr 2021 07:31:41 +0000</pubDate>
      <link>https://dev.to/iamhritikpawar/setting-up-my-windows-coding-environment-2c7e</link>
      <guid>https://dev.to/iamhritikpawar/setting-up-my-windows-coding-environment-2c7e</guid>
      <description>&lt;p&gt;So a few days back I whipped my Computer so that I can do all clean start with all the latest version software and apps. So while doing the process I noted down everything I downloaded, so that if I do it again I just have to run all these commands once and it's done.&lt;br&gt;
It's a very effective method and time-saving I definitely recommend it to document everything you use.&lt;br&gt;
Here are some basic software commands to quickstart your setup.&lt;/p&gt;

&lt;p&gt;Also at the end are some tools I have listed that are very useful.&lt;/p&gt;

&lt;p&gt;Run the commands mentioned to install everything&lt;/p&gt;

&lt;p&gt;choco install  : To Install&lt;/p&gt;

&lt;p&gt;choco upgrade  : To upgrade&lt;/p&gt;

&lt;p&gt;choco uninstall  : To uninstall&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install a package manager&lt;/p&gt;

&lt;p&gt;Chocolatey :  &lt;a href="https://chocolatey.org/"&gt;https://chocolatey.org/&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; @&lt;span class="s2"&gt;"%SystemRoot%&lt;/span&gt;&lt;span class="se"&gt;\S&lt;/span&gt;&lt;span class="s2"&gt;ystem32&lt;/span&gt;&lt;span class="se"&gt;\W&lt;/span&gt;&lt;span class="s2"&gt;indowsPowerShell&lt;/span&gt;&lt;span class="se"&gt;\v&lt;/span&gt;&lt;span class="s2"&gt;1.0&lt;/span&gt;&lt;span class="se"&gt;\p&lt;/span&gt;&lt;span class="s2"&gt;owershell.exe"&lt;/span&gt; &lt;span class="nt"&gt;-NoProfile&lt;/span&gt; &lt;span class="nt"&gt;-InputFormat&lt;/span&gt; None &lt;span class="nt"&gt;-ExecutionPolicy&lt;/span&gt; Bypass &lt;span class="nt"&gt;-Command&lt;/span&gt; &lt;span class="s2"&gt;"[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))"&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; SET &lt;span class="s2"&gt;"PATH=%PATH%;%ALLUSERSPROFILE%&lt;/span&gt;&lt;span class="se"&gt;\c&lt;/span&gt;&lt;span class="s2"&gt;hocolatey&lt;/span&gt;&lt;span class="se"&gt;\b&lt;/span&gt;&lt;span class="s2"&gt;in"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Install latest python&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; choco &lt;span class="nb"&gt;install &lt;/span&gt;python 

&lt;span class="c"&gt;#check python version after install&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; python &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;install latest Java&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; choco &lt;span class="nb"&gt;install &lt;/span&gt;jdk8

&lt;span class="c"&gt;#check Java version after install&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; java &lt;span class="nt"&gt;-version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Install Hyper ( Hyper is a good looking command-line tool similar to Command line or Powershell)&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; choco &lt;span class="nb"&gt;install  &lt;/span&gt;hyper
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;install Wox ( Wox is a quick search and launch tool similar to Alfred on Mac )&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; choco &lt;span class="nb"&gt;install &lt;/span&gt;wox
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Install node.js&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; choco &lt;span class="nb"&gt;install &lt;/span&gt;nodejs.install

&lt;span class="c"&gt;#check version after install&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; node &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; npm &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Install sticky notes&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; choco &lt;span class="nb"&gt;install &lt;/span&gt;simple-sticky-notes
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Install VS code&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;choco &lt;span class="nb"&gt;install &lt;/span&gt;vscode.install

&lt;span class="c"&gt;#for specific version specify the version&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; choco &lt;span class="nb"&gt;install &lt;/span&gt;vscode.install &lt;span class="nt"&gt;--version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1.40.0
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;/ul&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;```bash
#VS-CODE Extensions

1. AutoComplete Tag - sporiley.css-auto-prefix
2. CSS-Auto-Prefix - sporiley.css-auto-prefix
3. Live Server - ritwickdey.liveserver
4. Material Icon Theme - pkief.material-icon-theme
5. Adrian Theme - adriantheme.adrian-theme
6. Bunch of Language Support Apps (For any Language you use)
```
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install SublimeText3&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; choco &lt;span class="nb"&gt;install &lt;/span&gt;sublimetext3
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Firefox&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; choco &lt;span class="nb"&gt;install &lt;/span&gt;firefox

&lt;span class="c"&gt;#Also install some extensions for firefox&lt;/span&gt;

1. Privacy Badger
2. HTTPS everywhere
3. Ublock origin
4. Grammarly
5. Hotspot Shield
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#other-tools-i-use"&gt;
  &lt;/a&gt;
  Other Tools I use.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://devdocs.io/"&gt;DevDocs&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://carbon.now.sh/"&gt;Carbon&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://replit.com/"&gt;The collaborative browser based IDE&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://devhints.io/"&gt;Devhints - TL;DR for developer documentation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://devhints.io/"&gt;Devhints - TL;DR for developer documentation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://jdan.github.io/98.css/"&gt;98.css&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.ucraft.com/free-logo-maker"&gt;Free Logo Maker | Create Your Logo Online with Ucraft&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://getterms.io/"&gt;getterms.io&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.grammarly.com/"&gt;Write your best with Grammarly.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.notion.so/"&gt;Notion - The all-in-one workspace for your notes, tasks, wikis, and databases.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A better-looking version of this post available here 😁: &lt;a href="https://www.notion.so/hritikpawar/Coding-Setup-64e514417d3240ccb03e6480d6da72dc"&gt;https://www.notion.so/hritikpawar/Coding-Setup-64e514417d3240ccb03e6480d6da72dc&lt;/a&gt;&lt;/p&gt;

</description>
      <category>setup</category>
    </item>
  </channel>
</rss>
