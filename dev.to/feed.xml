<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Adding port "8080/tcp" using UFW</title>
      <author>Ritabrata Das</author>
      <pubDate>Mon, 10 May 2021 11:10:35 +0000</pubDate>
      <link>https://dev.to/ritabratadas343/adding-port-8080-tcp-using-ufw-4bbe</link>
      <guid>https://dev.to/ritabratadas343/adding-port-8080-tcp-using-ufw-4bbe</guid>
      <description>&lt;p&gt;Hello there!!1 &lt;br&gt;
I have recently done a research on &lt;strong&gt;how to add the port 8080/tcp&lt;/strong&gt; in my system and list all the active ports in a text file called &lt;strong&gt;"zones.txt"&lt;/strong&gt;. I use a Linux Mint 20.1 XFCE system and I came across the apt-package named &lt;strong&gt;Uncomplicated Firewall&lt;/strong&gt;. This package allows you to open ports on your system and makes them ready for use using ssh. &lt;br&gt;
&lt;em&gt;Here is a screenshot on how to progress with the procedures.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Dx9E-_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ar7rvd8m6l3dizzlpthx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Dx9E-_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ar7rvd8m6l3dizzlpthx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I am also attaching my GitHub gist which provides an detailed explanation on how to implement this in your system.&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
 

&lt;h4&gt;
  &lt;a href="#best-of-luck-and-may-the-source-be-with-you-"&gt;
  &lt;/a&gt;
  Best of Luck and May the Source be with You üêßüíó.
&lt;/h4&gt;

</description>
      <category>linux</category>
      <category>ubuntu</category>
    </item>
    <item>
      <title>Censorship on DEV Community üò∂ü§ê</title>
      <author>Amelia Vieira Rosado</author>
      <pubDate>Mon, 10 May 2021 11:08:26 +0000</pubDate>
      <link>https://dev.to/technoglot/censorship-on-dev-community-11de</link>
      <guid>https://dev.to/technoglot/censorship-on-dev-community-11de</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@markuswinkler?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Markus Winkler&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer üö®&lt;/strong&gt;: No, despite the possibly misleading title of my post, I am NOT suggesting in ANY way that the team behind this platform is full of tyrants. Now, proceed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hey there üëãüèª I'd like to start the week at a different pace this time. Hence this post.&lt;/p&gt;

&lt;p&gt;As of late, I took notice of some posts around here where the author has chosen to hide certain comments. I can imagine that this has been around since the very inception of this platform. However, hear me out. &lt;/p&gt;

&lt;p&gt;I'm not entirely okay with the practice of hiding comments. I am, however, fully onboard with the idea of fostering a safe, inclusive and respectful community on this platform. I follow the Code of Conduct (CoC) almost to the letter and I understand and acknowledge the need for the CoC in the first place.&lt;/p&gt;

&lt;p&gt;Here's the deal. Imagine that I post a blog here and someone leaves a comment I disagree with. As the author I have the "power" to hide this comment for whatever reason I see fit, even if the opinion expressed in the comment/by the commenter didn't violate the CoC in any way. &lt;/p&gt;

&lt;p&gt;I will be honest with you all. On more than one occasion I felt tempted to hide a comment or two on my posts (especially the unsolicited and shameless self promo). But I chose not to do so. However, I am seeing more and more folks hiding comments on their posts. Yes, their posts are sometimes controversial and hence elicit really candid responses from other members of the community. In my experience, it would have been great to see the hidden comments. I want to see the bigger picture, not just what the author wants me to see. That's it. That's the "issue" I have with this. &lt;/p&gt;

&lt;p&gt;Now let me be very clear, before anybody jumps to conclusions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I have no intention of telling people how to "moderate" the comments on their posts. &lt;/li&gt;
&lt;li&gt;I understand that the CoC is there for a reason and that it will be enforced no matter what. That's great. No objections there.&lt;/li&gt;
&lt;li&gt;No, despite the possibly misleading title of my post, I am NOT suggesting in ANY way that the team behind this platform is full of tyrants. They have noble intentions and are doing their absolute best to make and keep this place wonderful and welcoming.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The bottom-line is this: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do we want authors to possibly misuse the "Hide comment" feature? Do we want authors to hide comments that disagree with their narrative but are otherwise respectful, constructive and abiding to the CoC?&lt;/li&gt;
&lt;li&gt;Can we, as users late to the party, have a way of seeing the hidden comments? Never mind deleted comments, these are gone for good. (P.S. if there's a way of reading hidden comments, by all means please enlighten me.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I am missing something and this is already being enforced whatsoever, please share the relevant docs to such information. I am genuinely curious and just trying to contribute to making this corner of the net a little more wholesome. Would be a shame to see people getting censored just because an author fails to take criticism like a grown up. I've seen it countless of times across various platforms and would hate to see this take DEV.to by storm.&lt;/p&gt;

&lt;p&gt;By all means, drop your comments and thoughts below. I won't hide them (no matter how great the temptation). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NXBRybF6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fmedia1.tenor.com%252Fimages%252F1f795c93fd3fbf1d6027cbd9093cc99e%252Ftenor.gif%253Fitemid%253D11745137%26f%3D1%26nofb%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NXBRybF6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fmedia1.tenor.com%252Fimages%252F1f795c93fd3fbf1d6027cbd9093cc99e%252Ftenor.gif%253Fitemid%253D11745137%26f%3D1%26nofb%3D1" alt="cambio y fuera"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Have a nice week folks!&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;&lt;br&gt;
Still here? Catch me on &lt;a href="https://twitter.com/technoglot"&gt;Twitter&lt;/a&gt; or find me &lt;a href="https://linktr.ee/technoglot"&gt;elsewhere&lt;/a&gt;! If you like my blogs and are feeling generous, kindly consider to üëáüèª&lt;br&gt;&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/technoglot"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQYkOYbQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9olbzsmrxb3tksl6iqf.png"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cftknAn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8iwes672pxpljtq7z6oy.png" alt="technoglot footer banner"&gt;

</description>
      <category>meta</category>
      <category>discuss</category>
      <category>watercooler</category>
      <category>healthydebate</category>
    </item>
    <item>
      <title>Creative-Tim - Open-Source Products</title>
      <author>Sm0ke</author>
      <pubDate>Mon, 10 May 2021 10:55:05 +0000</pubDate>
      <link>https://dev.to/sm0ke/creative-tim-open-source-products-4jgj</link>
      <guid>https://dev.to/sm0ke/creative-tim-open-source-products-4jgj</guid>
      <description>&lt;p&gt;This article presents a curated list with open-source products crafted and released for free by &lt;strong&gt;Creative-Tim&lt;/strong&gt;. All templates can be downloaded directly from Github and the permissive license allows usage for unlimited hobby and commercial products.  For newcomers, &lt;strong&gt;Creative-Tim&lt;/strong&gt; is a popular web agency that provides open-source and commercial products in many technologies like React, Vue, Svelte Bootstrap, and Tailwind.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; Content provided by &lt;strong&gt;&lt;a href="https://www.admin-dashboards.com/"&gt;Admin Dashboards&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;Latest Free Products: &lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard"&gt;Soft UI Dashboard&lt;/a&gt; and &lt;a href="https://www.creative-tim.com/product/soft-ui-design-system"&gt;Soft UI Kit&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Free React Dashboards - &lt;a href="https://www.creative-tim.com/product/material-dashboard-react"&gt;Material Design&lt;/a&gt;, &lt;a href="https://www.creative-tim.com/product/argon-dashboard-material-ui"&gt;Argon&lt;/a&gt;, &lt;a href="https://www.creative-tim.com/product/black-dashboard-react"&gt;Black Dashboard&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Free Vue Templates - &lt;a href="https://www.creative-tim.com/product/vue-black-dashboard"&gt;Vue Black&lt;/a&gt;, &lt;a href="https://www.creative-tim.com/product/vue-light-bootstrap-dashboard"&gt;Light Bootstrap&lt;/a&gt; and &lt;a href="https://www.creative-tim.com/product/vuetify-material-dashboard"&gt;Material&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Free NextJs Templates - &lt;a href="https://www.creative-tim.com/product/nextjs-material-dashboard"&gt;Material Dashboard&lt;/a&gt;, &lt;a href="https://www.creative-tim.com/product/notus-nextjs"&gt;Notus NextJS&lt;/a&gt; and &lt;a href="https://www.creative-tim.com/product/nextjs-argon-dashboard"&gt;Argon&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#soft-ui-dashboard"&gt;
  &lt;/a&gt;
  Soft UI Dashboard
&lt;/h2&gt;

&lt;p&gt;Soft UI Dashboard is built with over 70 frontend individual elements, like buttons, inputs, navbars, navtabs, cards or alerts, giving you the freedom of choosing and combining. All components can take variations in colour, that you can easily modify using SASS files and classes.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard"&gt;Soft UI Dashboard&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/soft-ui-dashboard/pages/dashboard.html"&gt;Soft UI Dashboard&lt;/a&gt; - LIVE Deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4eBTXL7n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36ej6wqnw766n5ga2306.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4eBTXL7n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36ej6wqnw766n5ga2306.png" alt="Creative-Tim - Soft UI Dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#soft-ui-design-system"&gt;
  &lt;/a&gt;
  Soft UI Design System
&lt;/h2&gt;

&lt;p&gt;Most complex and innovative Design System made by Creative-Tim built with Bootstrap 5 and released under the MIT License on Github. Designed for those who like bold elements and beautiful websites. Made of hundred of elements, designed blocks and fully coded pages, Soft UI Design System is ready to help you create stunning websites and webapps.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/soft-ui-design-system"&gt;Soft UI Design System&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/soft-ui-design-system/index.html"&gt;Soft UI Design System&lt;/a&gt; - LIVE Deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u4U9Ry6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rayd4p3ki66edad7v6z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4U9Ry6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rayd4p3ki66edad7v6z.png" alt="Creative-Tim - Soft UI Design System."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-material-dashboard"&gt;
  &lt;/a&gt;
  React Material Dashboard
&lt;/h2&gt;

&lt;p&gt;Material Dashboard React is a free Material-UI Admin with a fresh, new design inspired by Google's Material Design. We are very excited to introduce our take on the material concepts through an easy to use and beautiful set of components. Material Dashboard React was built over the popular Material-UI v4.1.0 framework.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/material-dashboard-react"&gt;React Material Dashboard&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/material-dashboard-react/"&gt;React Material Dashboard&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gd_d9DgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sftl4d95wwqfeg8kl3m1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gd_d9DgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sftl4d95wwqfeg8kl3m1.png" alt="Creative-Tim - React Material Dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-argon-dashboard"&gt;
  &lt;/a&gt;
  React Argon Dashboard
&lt;/h2&gt;

&lt;p&gt;Argon Dashboard React is built with over 100 individual components, giving you the freedom of choosing and combining. All components can take variations in color, that you can easily modify using SASS files.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/argon-dashboard-material-ui"&gt;React Argon Dashboard&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/argon-dashboard-material-ui"&gt;React Argon Dashboard&lt;/a&gt; - LIVE Deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nwQf9xRC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/euqrvlu1waqemv3u6mtd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nwQf9xRC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/euqrvlu1waqemv3u6mtd.png" alt="Creative-Tim - React Argon Dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-black-dashboard"&gt;
  &lt;/a&gt;
  React Black Dashboard
&lt;/h2&gt;

&lt;p&gt;Black Dashboard React is a beautiful Bootstrap 4 (Reactstrap) Admin Dashboard with a huge number of components built to fit together and look amazing. If you are looking for a tool to manage and visualize data about your business, this dashboard is the thing for you. It combines colors that are easy on the eye, spacious cards, beautiful typography, and graphics.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/black-dashboard-react"&gt;React Black Dashboard&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/black-dashboard-react/"&gt;React Black Dashboard&lt;/a&gt; - LIVE Deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M1UOS-2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/roor14tl3g1tm0qujsqc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M1UOS-2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/roor14tl3g1tm0qujsqc.png" alt="Creative-Tim - React Black Dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#vue-light-bootstrap"&gt;
  &lt;/a&gt;
  Vue Light Bootstrap
&lt;/h2&gt;

&lt;p&gt;Vue Light Bootstrap Dashboard is a beautiful resource built over Bootstrap 4 and Vuejs. It will help you get started developing dashboards in no time. Vue Light Bootstrap Dashboard is the official Vuejs version of the Light Bootstrap Dashboard. Using the Dashboard is pretty simple but requires basic knowledge of Javascript, Vue and Vue-Router.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/vue-light-bootstrap-dashboard"&gt;Vue Light Bootstrap&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/vue-light-bootstrap-dashboard/"&gt;Vue Light Bootstrap&lt;/a&gt; - LIVE deployment &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z-MHJXcG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wcgfhu4y6e48jb43083p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z-MHJXcG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wcgfhu4y6e48jb43083p.png" alt="Creative-Tim - Vue Light Bootstrap."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#vuetify-material-dashboard"&gt;
  &lt;/a&gt;
  Vuetify Material Dashboard
&lt;/h2&gt;

&lt;p&gt;Vuetify is developed exactly according to Material Design spec. Every component is handcrafted to bring you the best possible UI tools to your next great app. The development doesn't stop at the core components outlined in Google's spec. Through the support of community members and sponsors, additional components will be designed and made available for everyone to enjoy.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/vuetify-material-dashboard"&gt;Vuetify Material Dashboard&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/vuetify-material-dashboard"&gt;Vuetify Material Dashboard&lt;/a&gt; - LIVE Deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pmHxcf9g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hro8u0nl2wd6icotbz12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pmHxcf9g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hro8u0nl2wd6icotbz12.png" alt="Creative-Tim - Vuetify Material Dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#vue-black-dashboard"&gt;
  &lt;/a&gt;
  Vue Black Dashboard
&lt;/h2&gt;

&lt;p&gt;Vue Black Dashboard is a beautiful Bootstrap 4 and Vue.js Admin Dashboard with a huge number of components built to fit together and look amazing. If you are looking for a tool to manage and visualize data about your business, this dashboard is the thing for you. It combines colors that are easy on the eye, spacious cards, beautiful typography, and graphics.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/vue-black-dashboard"&gt;Vue Black Dashboard&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/vue-black-dashboard"&gt;Vue Black Dashboard&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FMK70PI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15rvfch285mftgd4gzp9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FMK70PI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15rvfch285mftgd4gzp9.png" alt="Creative-Tim - Vue Black Dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#nextjs-material-dashboard"&gt;
  &lt;/a&gt;
  NextJS Material Dashboard
&lt;/h2&gt;

&lt;p&gt;NextJS Material Dashboard is a free Material-UI, NextJS and React Admin with a fresh, new design inspired by Google's Material Design. We are very excited to introduce our take on the material concepts through an easy to use and beautiful set of components. NextJS Material Dashboard was built over the popular Material-UI, NextJS and React frameworks.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/nextjs-material-dashboard"&gt;NextJS Material Dashboard&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/nextjs-material-dashboard/admin/dashboard"&gt;NextJS Material Dashboard&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SLZIdbuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q6lqegkifsmtbn1n1d06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SLZIdbuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q6lqegkifsmtbn1n1d06.png" alt="Creative-Tim - NextJS Material Dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#notus-tailwind-css"&gt;
  &lt;/a&gt;
  Notus Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;Start your development with a Free Tailwind CSS and NextJS UI Kit and Admin. Let Notus NextJS amaze you with its cool features and build tools and get your project to a whole new level. &lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/notus-nextjs"&gt;Notus NextJS&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/notus-nextjs/"&gt;Notus NextJS&lt;/a&gt; - LIVE Deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DUhtVwn1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bvsmygav89cwpwrjf27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DUhtVwn1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bvsmygav89cwpwrjf27.png" alt="Creative-Tim - Notus Tailwind CSS."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#nextjs-argon-dashboard"&gt;
  &lt;/a&gt;
  NextJS Argon Dashboard
&lt;/h2&gt;

&lt;p&gt;NextJS Argon Dashboard is built with over 100 individual components, giving you the freedom of choosing and combining. All components can take variations in color, that you can easily modify using SASS files. You will save a lot of time going from prototyping to full-functional code, because all elements are implemented. This Dashboard is coming with pre-built examples, so the development process is seamless, switching from our pages to the real website is very easy to be done.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/nextjs-argon-dashboard"&gt;NextJS Argon Dashboard&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/nextjs-argon-dashboard/admin/dashboard"&gt;NextJS Argon Dashboard&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rtpEN9La--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4zqf3etqhv7nz72j9rt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rtpEN9La--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4zqf3etqhv7nz72j9rt.png" alt="Creative-Tim - NextJS Argon Dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;More &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - a curated list published here on Dev.&lt;/li&gt;
&lt;li&gt;Free &lt;a href="https://dev.to/sm0ke/vue-dashboard-open-source-apps-1gd1"&gt;Vue Dashboards&lt;/a&gt; - a curated list with open-source Templates&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>creativetim</category>
    </item>
    <item>
      <title>React Hooks Part 2 - Understanding the Context API and The useContext Hook</title>
      <author>The Nerdy Dev</author>
      <pubDate>Mon, 10 May 2021 10:54:35 +0000</pubDate>
      <link>https://dev.to/thenerdydev/react-hooks-part-2-understanding-the-context-api-and-the-usecontext-hook-4hcf</link>
      <guid>https://dev.to/thenerdydev/react-hooks-part-2-understanding-the-context-api-and-the-usecontext-hook-4hcf</guid>
      <description>&lt;p&gt;In the first part of the Hooks article series, we covered about the basic React Hooks in great depth - The &lt;strong&gt;useState&lt;/strong&gt; and the &lt;strong&gt;useEffect&lt;/strong&gt; hooks. In this article, let us cover yet another important topic which is regarding the Context API, a concept that is used in state management in applications. But before we understand what the &lt;strong&gt;Context API&lt;/strong&gt; is, let us first understand why do we need this &lt;strong&gt;Context API&lt;/strong&gt; in the first place. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#need-for-the-context-api"&gt;
  &lt;/a&gt;
  Need for the Context API
&lt;/h2&gt;

&lt;p&gt;Now it is quite common that you pass data to components through &lt;strong&gt;props&lt;/strong&gt;, but it's always a problem if you forward state through multiple components. This is called as prop drilling which means that there is no direct established connection between the component from where a certain state is present and the component to which we want that state or data to reach. So with prop drilling, we first pass a prop from the source component to an intermediate component and then from that intermediate component we funnel the prop down till it reaches the destination component where it is required. So it is where the React Context comes into picture. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-react-context-"&gt;
  &lt;/a&gt;
  What is React Context ?
&lt;/h2&gt;

&lt;p&gt;React Context is some component-wide under the hood managed form of state storage. So we have this concept of React Context which then allows us to trigger some action in that context where we house our state and methods pertaining to a certain feature of the application and it is then made to directly pass to the component where it is required without building such long &lt;strong&gt;prop chains&lt;/strong&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-context"&gt;
  &lt;/a&gt;
  Using Context
&lt;/h2&gt;

&lt;p&gt;To use Context, you need to do two things&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You basically need to provide it (You need to declare globally - "Hey this is the file that houses a specific feature context.". All the components that are wrapped by this feature context will be able to &lt;strong&gt;access&lt;/strong&gt; it. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Besides providing, you also need to setup a way so that you can consume the feature context wherever required. So in essence, you need to hook into it. You need to listen to it.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Step 1: Providing the Context&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Providing means that you wrap in JSX code i.e all the components that should be able to tap into that context. Any component that is not wrapped will not be able to listen or subscribe to the Context.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2: Consuming the Context&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Next we can also leverage the &lt;strong&gt;useContext&lt;/strong&gt; Hook to consume instead of the Consumer. It allows us to tap into context and listen to changes on it. Remember that our context that we define can be dynamic meaning that we don't just pass data to our components but also the functions which technically of course work with this data. &lt;/p&gt;

&lt;p&gt;Remember that in most cases you would just use &lt;strong&gt;props&lt;/strong&gt; to pass data to other components because props are your mechanism to configure components and make them reusable. &lt;/p&gt;

&lt;p&gt;Only if you have something which you would forward through a lot of components and you are forwarding it to a component that does something very specific would you use the Context API.&lt;/p&gt;

&lt;p&gt;So now let us see an example to understand the Context API: &lt;br&gt;
So inside the App.js file, the very first step is to import React. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TI9FA0nx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48ndou41yj9g639p26mz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TI9FA0nx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48ndou41yj9g639p26mz.png" alt="carbon (51)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next we setup a piece of state to manage some company details inside the App component. So we first make use of the useState React Hook to setup an initial state companyDetails and we also get the handler (state updating function) to work with the companyDetails state. &lt;/p&gt;

&lt;p&gt;Now if you see in the above image, to setup a Provider we first need to create a context so we create &lt;strong&gt;CompanyContext&lt;/strong&gt; and on that we can access the Provider. &lt;/p&gt;

&lt;p&gt;To create a Context, all we have to say is : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xSerjpUT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fq184zpg5p4pc4immav5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xSerjpUT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fq184zpg5p4pc4immav5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next we setup the provider in the App component and we pass a special &lt;strong&gt;value&lt;/strong&gt; prop to which we specify all the properties and functions to the JSX code that gets wrapped by the provider. So all the components (here Company) that are wrapped by the Provider will listen to changes in Context and will directly be able to access the exposed data and functions that we specify in the value prop. &lt;/p&gt;

&lt;p&gt;Next let us see how we can consume the Context that was setup. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#consuming-context"&gt;
  &lt;/a&gt;
  Consuming Context
&lt;/h2&gt;

&lt;p&gt;So it is the Company Component that we need to define which will access the Context. &lt;br&gt;
So here is the code for the Company Component: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w7vQtvWP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvj4x5ajhmq8guntpgz9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w7vQtvWP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvj4x5ajhmq8guntpgz9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So all we do here is that we setup a Consumer on the &lt;strong&gt;CompanyContext&lt;/strong&gt; and here we have two ways of consuming the context. &lt;/p&gt;

&lt;p&gt;Let us first see the first approach : &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;APPROACH 1&lt;/strong&gt; &lt;br&gt;
The approach 1 is shown in the above image where we have receive an anonymous arrow function within the Consumer. Since the arrow function represents a JavaScript expression, we need to wrap this in curly braces in our JSX code. Now in the arrow function, all we get is a single context object from which we can destructure the data that we want. So here we want the &lt;strong&gt;companyName&lt;/strong&gt;, &lt;strong&gt;employees&lt;/strong&gt; and &lt;strong&gt;teams&lt;/strong&gt; and it is this data that we render in our Company Component. So we are directly getting this from Context and not via a prop chain. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;APPROACH 2&lt;/strong&gt; &lt;br&gt;
The approach 2 is to make use of the special React Hook - &lt;strong&gt;useContext&lt;/strong&gt;. I strongly recommend that you use useContext Hook for consuming the context instead of APPROACH 1. It is more elegant and quite straight forward. So we get access to the feature context that we have using the useContext hook and directly access the data on the context object. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KtYrfWgw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39swaukx7hvm26hv8764.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KtYrfWgw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39swaukx7hvm26hv8764.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to play with the code : &lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/stoic-wing-2fn5v"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So this is it for the second part of React Hooks article series. In the next article, we will learn about other React Hooks. So stay tuned ! &lt;/p&gt;

&lt;p&gt;Check out the first article of this React Hooks series: &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/react-hooks-part-1-understanding-usestate-and-useeffect-hooks-1k6f" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;React Hooks Part 1 - Understanding useState and useEffect Hooks&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª May 9 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#100daysofcode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Apr 28 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;If you have spare 2 hours, then utilize them by creating these &lt;strong&gt;10 JavaScript Projects in under 2 Hours&lt;/strong&gt; &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/10-javascript-projects-in-2-hours-3p1c" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 JavaScript Projects in 2 Hours&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Oct 26 '20 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;üëâüèª Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;br&gt;
üëâüèª Check out my YouTube Channel : &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt; &lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>100daysofcode</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Have you learned Rust?</title>
      <author>Madza</author>
      <pubDate>Mon, 10 May 2021 10:53:24 +0000</pubDate>
      <link>https://dev.to/madza/have-you-learned-rust-55b5</link>
      <guid>https://dev.to/madza/have-you-learned-rust-55b5</guid>
      <description>&lt;p&gt;According to StackOverflow &lt;a href="https://insights.stackoverflow.com/survey/2020#most-loved-dreaded-and-wanted"&gt;survey&lt;/a&gt;, Rust has been the most loved lang for multiple consecutive years.&lt;/p&gt;

&lt;p&gt;Have you learned it and maybe you can share some awesome projects that you have built with it?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>rust</category>
      <category>programming</category>
    </item>
    <item>
      <title>Nobody cares about who you are in the open market, as a software engineer (Developer)...</title>
      <author>Ankur Tyagi</author>
      <pubDate>Mon, 10 May 2021 10:28:58 +0000</pubDate>
      <link>https://dev.to/tyaga001/nobody-cares-about-who-you-are-in-the-open-market-as-a-software-engineer-developer-4had</link>
      <guid>https://dev.to/tyaga001/nobody-cares-about-who-you-are-in-the-open-market-as-a-software-engineer-developer-4had</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Nobody cares about who you are in the open market, as a software engineer (Developer)&lt;br&gt;&lt;br&gt;You don't want to play a perfect developer; no one cares about that.&lt;br&gt;&lt;br&gt;A Thread... &lt;a href="https://t.co/ipTAbM84Ql"&gt;pic.twitter.com/ipTAbM84Ql&lt;/a&gt;&lt;/p&gt;‚Äî Ankurüíªüéßüí™ (@TheAnkurTyagi) &lt;a href="https://twitter.com/TheAnkurTyagi/status/1391690079244980226?ref_src=twsrc%5Etfw"&gt;May 10, 2021&lt;/a&gt;
&lt;/blockquote&gt;  

&lt;p&gt;Nobody cares about who you are in the open market, as a software engineer (Developer)&lt;/p&gt;

&lt;p&gt;You don't want to play a perfect developer; no one cares about that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#early-in-my-career-the-fear-of-failure-drove-most-of-my-decisions"&gt;
  &lt;/a&gt;
  Early in my career, the fear of failure drove most of my decisions.
&lt;/h2&gt;

&lt;p&gt;How would I look?&lt;/p&gt;

&lt;p&gt;What would people think?&lt;/p&gt;

&lt;p&gt;I lived in a constant state of anxiety about the judgments of others.&lt;/p&gt;

&lt;p&gt;Would I ever get a second chance if I failed?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nobody-cares-about-who-you-are-as-a-dev-in-the-open-market"&gt;
  &lt;/a&gt;
  Nobody cares about who you are, as a dev in the open market.
&lt;/h2&gt;

&lt;p&gt;Which school/college you went to.&lt;/p&gt;

&lt;p&gt;What you have gone through to come to this point.&lt;/p&gt;

&lt;p&gt;They only care about your skills.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An average dev can work in a good team. But a good dev can't work in a bad team.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It's a team game.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#programming-is-fucking-hard-unless-youre-born-as-ninja"&gt;
  &lt;/a&gt;
  Programming is fucking hard unless you're born as Ninja.
&lt;/h2&gt;

&lt;p&gt;Early excitement of learning a new language, building a portfolio, Udemy tutorials, will fade away.&lt;/p&gt;

&lt;p&gt;So there is only one thing that will help you to keep going, keep moving forward.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Consistency is a real thing!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#your-emotional-and-mental-state-as-a-dev-has-a-direct-impact-on-your-work"&gt;
  &lt;/a&gt;
  Your emotional and mental state as a dev has a direct impact on your work.
&lt;/h2&gt;

&lt;p&gt;Let them know when you are depressed &amp;amp; feel low.&lt;/p&gt;

&lt;p&gt;Don't pretend to be superman/spiderman.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We all are human. &lt;br&gt;
Let Be human. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It's ok - no one was born knowing how to become a coder.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-people-who-know-you-will-continue-to-define-success-and-failure-for-you"&gt;
  &lt;/a&gt;
  The people who know you will continue to define success and failure for you.
&lt;/h2&gt;

&lt;p&gt;Got the JOB - success &lt;br&gt;
Got the RAISE - success &lt;br&gt;
Started YOUTUBE/BLOGS - success &lt;br&gt;
Fired - failure &lt;br&gt;
Took a Break - failure &lt;br&gt;
Not growing - failure&lt;/p&gt;

&lt;p&gt;Never live someone else life, start living yours now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nothing-pisses-the-world-off-more-than-you-being-comfortable-with-who-you-are"&gt;
  &lt;/a&gt;
  Nothing pisses the world off more than you being comfortable with who you are.
&lt;/h2&gt;

&lt;p&gt;Money buys freedom. &lt;br&gt;
Freedom is a privilege.&lt;/p&gt;

&lt;p&gt;Failure is just a state of mind. &lt;br&gt;
No measurement scale I even see to measure failure/success.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don't look to measure failure, just enjoy life.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#losing-your-temper-is-a-sign-that-you-have-a-long-way-to-go-in-life-as-a-devhuman"&gt;
  &lt;/a&gt;
  Losing your temper is a sign that you have a long way to go in life as a dev/human.
&lt;/h2&gt;

&lt;p&gt;The world will always keep you in the news if you do the unexpected.&lt;/p&gt;

&lt;p&gt;No one covers the expected.&lt;/p&gt;

&lt;p&gt;No one cares.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-complain-that-has-never-ever-got-someone-to-the-solution"&gt;
  &lt;/a&gt;
  Don't Complain that has never ever got someone to the solution.
&lt;/h2&gt;

&lt;p&gt;Change is the only constant. Look at you&lt;/p&gt;

&lt;p&gt;We all have adopted the WFH.&lt;/p&gt;

&lt;p&gt;Did you see we all are at home for 1.5 years, more in other places?&lt;/p&gt;

&lt;p&gt;You know few are still complaining.&lt;/p&gt;

&lt;p&gt;They are also the most energy-sucking&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-you-treat-someone-who-has-nothing-to-offer-defines-your-value-system"&gt;
  &lt;/a&gt;
  How you treat someone who has nothing to offer defines your value system.
&lt;/h2&gt;

&lt;p&gt;Your values don‚Äôt help you grow. But in times of shit, they hold you together.&lt;/p&gt;

&lt;p&gt;Don't forget your roots in life, from where you started.&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/TheAnkurTyagi"&gt;Twitter&lt;/a&gt; if you like the content.&lt;/p&gt;

&lt;p&gt;That's it for today &amp;amp; Thanks for reading. &lt;/p&gt;

&lt;p&gt;I have recently written a book for developer growth &amp;amp; shared my 11+ years of experience.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are serious to grow as a developer. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Grab the book now for just $20 &lt;a href="https://gumroad.com/l/nextgendev/grow"&gt;The Prime Guide&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0QSnKm7j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619958998661/st8Eq0o8b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0QSnKm7j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619958998661/st8Eq0o8b.png" alt="book.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Join 110+ developers who already bought &amp;amp; growing better. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KFCrNgLt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/beojtaoajaziwv46rkdi.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KFCrNgLt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/beojtaoajaziwv46rkdi.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-write-more-about-code-life-and-fitness-in-my-211-newsletter"&gt;
  &lt;/a&gt;
  I write more about code life and fitness in my 2-1-1 newsletter.
&lt;/h3&gt;

&lt;p&gt;I encourage you to sign up for my weekly:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚Äú2-1-1‚Äù Friday newsletter:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Check out the latest edition: üëá&lt;/p&gt;

&lt;p&gt;It's free.  &lt;a href="https://codelifefitness.com/2-1-1/"&gt;CLF&lt;/a&gt; &lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>career</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>AWS CloudFormation vs. Terraform: Which One Should You Choose?</title>
      <author>Adit Modi</author>
      <pubDate>Mon, 10 May 2021 10:28:02 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-cloudformation-vs-terraform-which-one-should-you-choose-1h0j</link>
      <guid>https://dev.to/aws-builders/aws-cloudformation-vs-terraform-which-one-should-you-choose-1h0j</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;The Comparison between Different AWS Services is a Series containing different blog posts that provide a basic understanding of key differences Between different aws services. Each post covers the detailed guide on difference between the AWS Services and Which is preferred more . This series aims at providing "Comparison Between Different AWS Services."&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Infrastructure as code [IaC]&lt;/strong&gt; is a big buzzword these days, and it‚Äôs no mystery why. IaC, referred to as software-defined infrastructure, is defined as an IT setup wherein developers or operations teams automatically manage and provision the technology stack for an application through software, rather than using a manual process to configure discrete hardware devices and operating systems. It‚Äôs a cornerstone of DevOps, designed to boost the agility, productivity and quality of work within organizations.&lt;/p&gt;

&lt;p&gt;When people look for tools to implement infrastructure as code on AWS, they often narrow the choice between AWS CloudFormation or the open-source tool Terraform. Let‚Äôs review the differences between the two so you can determine which is right for your needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GjbgmPYF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxyj39005us8i9308ist.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GjbgmPYF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxyj39005us8i9308ist.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;My Background: I am Cloud , DevOps &amp;amp; Big Data Enthusiast | 4x AWS Certified | 3x OCI Certified | 3x Azure Certified .&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PMKVl8rj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xx5nd97sf7xub58rahyx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PMKVl8rj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xx5nd97sf7xub58rahyx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloudformation"&gt;
  &lt;/a&gt;
  CloudFormation
&lt;/h2&gt;

&lt;p&gt;AWS CloudFormation is a managed AWS service with a common language for you to model and provision AWS and third-party application resources for your cloud environment in a secure and repeatable manner. This provides a single reference point for both AWS infrastructure mapping and development.  &lt;/p&gt;

&lt;p&gt;CloudFormation abstracts away many of the subtleties involved in managing dependencies between AWS resources. Additionally, CloudFormation allows for the modification and destruction of provisioned resources in a prescribed and predictable manner, making versioning and iterating on your infrastructure much more accessible. CloudFormation is AWS-focused, and AWS-native. &lt;/p&gt;

&lt;p&gt;With CloudFormation, you don‚Äôt need to figure out which AWS services need to be provisioned or the subtleties of how to make these dependencies connect together  ‚Äî CloudFormation takes care of this for you in a siloed kind of manner. Once deployed, you can destroy and modify AWS resources in a controlled and predictable way within CloudWatch, allowing you to version control your own AWS infrastructure. This allows for iterative testing, as well as rollback (when configured properly).  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#terraform%E2%80%8D"&gt;
  &lt;/a&gt;
  Terraform‚Äç
&lt;/h2&gt;

&lt;p&gt;Created by HashiCorp, Terraform is an open-source infrastructure-as-code software tool that helps users with the task of setting up and provisioning datacenter infrastructure. A cloud-agnostic tool, Terraform codifies APIs into declarative configuration files that can be shared amongst team members, treated as code, edited, reviewed, and versioned.&lt;/p&gt;

&lt;p&gt;Now that we‚Äôve defined these two IaC platforms, let‚Äôs review some of the key differences in more depth. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#state-management"&gt;
  &lt;/a&gt;
  State Management
&lt;/h2&gt;

&lt;p&gt;With both CloudFormation and Terraform, you need to keep track of all resources under management.&lt;/p&gt;

&lt;p&gt;With CloudFormation, users can perform regular drift detection on their entire provisioned infrastructure, and receive detailed responses if anything has changed. Some resources in a CloudFormation stack are able to have parameters changed without destroying and rebuilding the targeted resource, while others are considered immutable and will be rebuilt.  Additionally, before CloudFormation will delete a resource, it will determine dependencies and fail the command if any exist (which would remain after resource removal). &lt;/p&gt;

&lt;p&gt;Terraform stores the state of the infrastructure on the provisioning computer, or in a remote site (for team use). This state file is a custom JSON format which serves as a map for Terraform, describing which resources it manages, and how those resources should be configured.&lt;/p&gt;

&lt;p&gt;Since CloudFormation is a managed AWS service, it does this for you. CloudFormation will consistently check infrastructure it has provisioned to detect if it is maintaining that state and configuration.  If you‚Äôre using Terraform, it stores its state on a local disk, and there is a remote state option, which writes the state data to a remote data store, to be shared between all members of a team. Remote state supports Amazon S3, but you need to configure it yourself.&lt;/p&gt;

&lt;p&gt;Now that we‚Äôve covered differences in state management, let‚Äôs move on to the topic of modularity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#modularity"&gt;
  &lt;/a&gt;
  Modularity
&lt;/h2&gt;

&lt;p&gt;In the constantly changing world of infrastructure requirements,  flexibility is key. CloudFormation and Terraform have unique ways of addressing this need.&lt;/p&gt;

&lt;p&gt;Terraform has a modules, which are containers for multiple resources that are used together. Modules allow developers to abstract their infrastructure into reusable, shareable code and increases iteration speed for teams (much like functions do in a programming language like Ruby).&lt;/p&gt;

&lt;p&gt;CloudFormation utilizes a system called ‚Äúnested stacks.‚Äù That is, CloudFormation  templates being called from within CloudFormation templates. These nested stacks can further be abstracted into StackSets. It should be noted that StackSets require additional permissions, beyond those of normal AWS CloudFormation.  &lt;/p&gt;

&lt;p&gt;A benefit of Terraform is increased flexibility over CloudFormation with regards to modularity. Terraform modules can be pulled in for any provider supported, or organizations can roll their own.&lt;/p&gt;

&lt;p&gt;Conversely, in a multi-cloud or hybrid environment, CloudFormation doesn‚Äôt easily allow users to provision or natively coordinate non-AWS resources. It‚Äôs not impossible, as there is a custom resources feature in CloudFormation, but it requires additional templating and design to bring in third party resources, or those AWS services not available organically.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuration"&gt;
  &lt;/a&gt;
  Configuration
&lt;/h2&gt;

&lt;p&gt;CloudFormation and Terraform differ in how they handle configuration and parameters.&lt;/p&gt;

&lt;p&gt;Terraform uses provider specific data sources. The implementation is in a modular fashion, allowing data to be fetched or computed for use elsewhere in a Terraform configuration. This lets a Terraform configuration make use of information defined outside of Terraform (such as an Elastic IP address), to update or provision infrastructure.&lt;/p&gt;

&lt;p&gt;CloudFormation uses parameters, and has a maximum of 60 parameters per template. Each parameter must have a logical and unique ID among all others in the template. The parameters must be of a type supported by CloudFormation and they have to be provided at the stack‚Äôs runtime. Additionally, each parameter must be declared and referenced from within the same template. CloudFormation does have the capability to use Dynamic References to retrieve parameters at runtime from AWS Systems Manager parameter store, if one has been configured properly. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#language%E2%80%8D"&gt;
  &lt;/a&gt;
  Language‚Äç
&lt;/h2&gt;

&lt;p&gt;Terraform uses HashiCorp Configuration Language (HCL), a language built by HashiCorp. It is fully compatible with JSON, and was created to strike a balance between human-friendly and machine-friendly languages, while remaining interpretable to humans.&lt;/p&gt;

&lt;p&gt;AWS CloudFormation utilizes either JSON or YAML, with the YAML version being slightly easier to read (as well as more compact). CloudFormation also has a limit of 51,000 bytes for the template body itself. If a larger template is needed, AWS advises developers to separate resources into nested stacks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JnQwfMoT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3p6pm88p29jl5mqwo4op.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JnQwfMoT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3p6pm88p29jl5mqwo4op.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-bigger-picture-cloudformation-or-terraform%E2%80%8D"&gt;
  &lt;/a&gt;
  The Bigger Picture ‚Äî CloudFormation or Terraform‚Äç
&lt;/h2&gt;

&lt;p&gt;Both are powerful cloud infrastructure management tools. If you‚Äôre already on AWS and using all AWS tools, CloudFormation may be more convenient, especially if you have no external tie ins from 3rd parties. However, if you‚Äôre looking for additional flexibility from a cloud-agnostic platform that integrates with AWS services (and those of all other popular providers), Terraform might be of greater utility for your organization. It‚Äôs important to not only look at what is working currently - but what the future state of any infrastructure might be. There are long-term benefits with both toolsets, and the final decision may come down to simple usability and developer comfort. Whichever choice you make, using either of these ‚Äúswiss army knives‚Äù of AWS infrastructure is sure to increase productivity, portability, and efficiency.&lt;/p&gt;

&lt;p&gt;Hope this guide helps you understand the key differences between AWS CloudFormation and Terraform, feel free to connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn.&lt;/a&gt;&lt;br&gt;
You can view my badges &lt;a href="https://www.youracclaim.com/users/adit-modi/badges"&gt;here.&lt;/a&gt;&lt;br&gt;
If you are interested in learning more about AWS then follow me on &lt;a href="https://github.com/AditModi"&gt;github.&lt;/a&gt;&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>devops</category>
      <category>aws</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Why it's so important to create a personal brand</title>
      <author>Andrew Baisden</author>
      <pubDate>Mon, 10 May 2021 10:21:34 +0000</pubDate>
      <link>https://dev.to/andrewbaisden/why-it-s-so-important-to-create-a-personal-brand-2501</link>
      <guid>https://dev.to/andrewbaisden/why-it-s-so-important-to-create-a-personal-brand-2501</guid>
      <description>&lt;p&gt;Whether you choose to accept it or not the fact remains that as we go through life we are all displaying our personal brand. Be it the clothes you wear, the way you talk, your interests or any infinite amount of choices. You are who you are and that is what makes everyone so unique and special. So then why is it that when it comes to programming a lot of people tend to go against their own trends and act differently? If you are a programmer then it is highly likely that you are either going to be doing freelance work or employed at a company. In the first case knowing your worth and personal brand is extremely important. You will want to have a consistent message throughout all of your work for example your portfolio website, social media accounts, blogs and logo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brand-styling-guide"&gt;
  &lt;/a&gt;
  Brand styling guide
&lt;/h2&gt;

&lt;p&gt;Creating a brand style guide is something that you should be high on your list. If you are just starting out as a freelancer then it might not be too important to begin with as your main priority will be finding clients and creating as many Minimum viable products (MVP) as you can. Having a website or app that just works and meets the clients expectations should definitely be the focus. However as your reputation grows as does your strive for being a professional. So eventually you will want to be taken more seriously and come across as a well rounded experienced individual.&lt;/p&gt;

&lt;p&gt;Coming up with a logo, brand colors, font selection as well as the other requirements for a brand is the first step in the right direction. You are your own company that is the way you should be looking at it. So make sure that you remain professional and put your best work forward. Think about it how many commercial brands have become iconic because they had a great marketing team behind them. If you want to be successful then you should be working to ensure that your content and profile is something to be proud of.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-importance-of-social-media"&gt;
  &lt;/a&gt;
  The importance of social media
&lt;/h2&gt;

&lt;p&gt;If you are serious about being a developer then in my opinion you really should have a presence on social media. I remember years ago when I was having an interview at a company. The developers who I interviewed with told me that they hated Twitter because they had used it far too much to develop apps which required the API. Something along those lines of it. Fair enough but these days having an active presence on social media can lead to many doors opening there is such a huge potential for any developer to get some gains. I have had so many opportunities happen just because of the content that I was posting on Twitter.&lt;/p&gt;

&lt;p&gt;The same is true for LinkedIn and blogs like DEV, Hashnode and CodeNewbie. These platforms are more than just tools for networking they are the portals which can help you realize your dreams. I also like the fact that you can count them as full blown learning tools. When you have access to an infinite collection of curated resources and many highly rated developers who create course content in addition to being successful in their careers. It is just too good to pass on.&lt;/p&gt;

&lt;p&gt;If you want to reach such heights all you have to do is create a tech focused Twitter and LinkedIn account and post relevant content. It is extremely important that you stay to your brand as closely as possible because that is what is going to lead to high engagement. So for example you should be posting at least 90% programming and tech related content and then the other 10% can be your other hobbies and interests. Some people make the mistake of going completely off brand and talking too much about stuff that their audience does not care about. This is what leads to lost engagement and followers. It is the equivalent of a huge sports brand suddenly changing their narrative to house and decorating products for example. Going completely off brand.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I really hope that you enjoyed reading this article and learned something from it. As a content creator and technical writer I am passionate about sharing my knowledge and helping other people reach their goals. Let's connect across social media you can find all of my social media profiles and blogs on &lt;a href="https://linktr.ee/andrewbaisden"&gt;linktree&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Peace ‚úåÔ∏è&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>career</category>
    </item>
    <item>
      <title>Do you track your expenses/income?</title>
      <author>Madza</author>
      <pubDate>Mon, 10 May 2021 10:13:30 +0000</pubDate>
      <link>https://dev.to/madza/do-you-track-your-expenses-income-1n4g</link>
      <guid>https://dev.to/madza/do-you-track-your-expenses-income-1n4g</guid>
      <description>&lt;p&gt;One of the cornerstones of successful budgeting is tracking the expenses and income.&lt;/p&gt;

&lt;p&gt;Do you keep a log for that? Maybe you have an app you can recommend?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>business</category>
      <category>finances</category>
    </item>
    <item>
      <title>[21] Top 10 Must-Have Web Dev Tools ‚Äì May 2021</title>
      <author>MV</author>
      <pubDate>Mon, 10 May 2021 09:35:01 +0000</pubDate>
      <link>https://dev.to/villivald/21-top-10-must-have-web-dev-tools-may-2021-27m6</link>
      <guid>https://dev.to/villivald/21-top-10-must-have-web-dev-tools-may-2021-27m6</guid>
      <description>&lt;p&gt;It seems that it is the perfect time to continue my recent &lt;a href="https://create-react-app.com/category/top-10-web-dev-tools/"&gt;blog post series&lt;/a&gt; - Top 10 Best Web Dev Tools. Every month I will try to pick the most intriguing and handy tools that I believe are must-haves for every web developer. This time there are: &lt;/p&gt;

&lt;h2&gt;1).  Vercel&lt;/h2&gt;

&lt;p&gt;A very impressive and easy-to-use deployment and collaboration platform for front-end developers from creators of &lt;a href="https://nextjs.org/"&gt;NextJS&lt;/a&gt;. Vercel enables developers to host websites and web services that deploy instantly and scale automatically ‚Äì all without any configuration. So far, I have been using it for a couple of weeks, and it really feels like a &lt;a href="https://heroku.com/"&gt;Heroku&lt;/a&gt; or &lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt; on steroids.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_UbILbsN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.11.06-1024x664.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_UbILbsN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.11.06-1024x664.png" alt="Top 10 Must-Have Web Dev Tools"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vercel.com/dashboard"&gt;https://vercel.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;2). Color Leap&lt;/h2&gt;

&lt;p&gt;Color Leap is a very beautiful and well-designed resource on the history of colors. It is perfect for looking for inspiration, so choose your favorite era and dig into its colors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NSlWatDO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.23.09-1024x531.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NSlWatDO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.23.09-1024x531.png" alt="Top 10 Must-Have Web Dev Tools"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://colorleap.app/home"&gt;https://colorleap.app&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;3). HTML DOM&lt;/h2&gt;

&lt;p&gt;A handy DOM-related knowledge database from creators of &lt;a href="https://thisthat.dev/"&gt;this vs that&lt;/a&gt; which I mentioned &lt;a href="https://create-react-app.com/top-15-best-developer-resources-part2/"&gt;last year&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---HXMBwSO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.30.20-1024x523.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---HXMBwSO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.30.20-1024x523.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://htmldom.dev/"&gt;https://htmldom.dev/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;4). Keyframes&lt;/h2&gt;

&lt;p&gt;A couple of very user-friendly and simple visual tools to help you generate CSS (animations, shadows, colors) for your projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---xoCPJQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.32.50-1024x707.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---xoCPJQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.32.50-1024x707.png" alt="Top 10 Must-Have Web Dev Tools"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://keyframes.app/"&gt;https://keyframes.app/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;5). GRID&lt;/h2&gt;

&lt;p&gt;A simple visual cheatsheet for CSS Grid Layout.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_qED6Nhi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.37.50-1024x597.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_qED6Nhi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.37.50-1024x597.png" alt="Top 10 Must-Have Web Dev Tools"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://grid.malven.co/"&gt;https://grid.malven.co/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;6). CSS Stats&lt;/h2&gt;

&lt;p&gt;CSS Stats provides a report with deep analytics and visualizations for your stylesheets.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4XFQ9Rbq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.46.09-1024x327.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4XFQ9Rbq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.46.09-1024x327.png" alt="Top 10 Must-Have Web Dev Tools"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;7). Yellow Lab Tools&lt;/h2&gt;

&lt;p&gt;Yellow Lab Tools is a free online page speed audit tool and a web performance analyzer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GkAAX-s3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.48.46-1024x618.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GkAAX-s3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.48.46-1024x618.png" alt="Top 10 Must-Have Web Dev Tools"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://yellowlab.tools/"&gt;https://yellowlab.tools/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;8). Figma Crash&lt;/h2&gt;

&lt;p&gt;Actually, this pick is not a tool but a study resource. It helps you to dive deep into powerful Figma features. The course is totally free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OPkTxtyL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.54.48-1024x937.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OPkTxtyL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-11.54.48-1024x937.png" alt="Top 10 Must-Have Web Dev Tools"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.figmacrashcourse.com/"&gt;https://www.figmacrashcourse.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;9). CSS Hell&lt;/h2&gt;

&lt;p&gt;I could not describe this resource better than their official site does - The collection of common CSS mistakes and how to fix them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPXGku7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-12.02.59-1024x753.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPXGku7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-12.02.59-1024x753.png" alt="css hell"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://csshell.dev/"&gt;https://csshell.dev/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;10). Readme.so&lt;/h2&gt;

&lt;p&gt;This resource provides you the easiest way to create a brilliant README for your next project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--42NbzUFL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-12.04.15-1024x533.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--42NbzUFL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://create-react-app.com/wp-content/uploads/2021/05/Screenshot-2021-05-10-at-12.04.15-1024x533.png" alt="readme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://readme.so/"&gt;https://readme.so/&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;P.S. Please feel free to complete the list by replying to this post. Which web dev tools do you like best?&lt;/h4&gt;






&lt;p&gt;&lt;a href="https://create-react-app.com/top-10-web-dev-tools-05-2021/"&gt;Original post @ create-react-app.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My Site &lt;a href="https://villivald.com/"&gt;https://villivald.com/&lt;/a&gt;&lt;br&gt;
GitHub &lt;a href="https://github.com/villivald"&gt;https://github.com/villivald&lt;/a&gt;&lt;br&gt;
Twitter &lt;a href="https://twitter.com/crapp_blog"&gt;https://twitter.com/crapp_blog&lt;/a&gt;&lt;br&gt;
Hashnode &lt;a href="https://proj.ninja"&gt;https://proj.ninja&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Deploying Single Page App with AWS CDK V2</title>
      <author>Jaypee Ignacio</author>
      <pubDate>Mon, 10 May 2021 09:26:11 +0000</pubDate>
      <link>https://dev.to/awscommunity-asean/deploying-single-page-app-with-aws-cdk-v2-3o1a</link>
      <guid>https://dev.to/awscommunity-asean/deploying-single-page-app-with-aws-cdk-v2-3o1a</guid>
      <description>&lt;p&gt;In this post, we will be developing a single-page application using &lt;a href="https://nuxtjs.org/"&gt;Nuxt.js&lt;/a&gt;. A higher-level framework implementation built on top of &lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt; and has a bunch of production features that we can leverage on - like routing, code-splitting, full static implementation, and more.&lt;/p&gt;

&lt;p&gt;We will be also using Github for our code repository and AWS CDK (&lt;a href="https://docs.aws.amazon.com/cdk/latest/guide/work-with-cdk-v2.html"&gt;Version 2&lt;/a&gt;) to create the development pipeline and S3 that will host static files for our SPA. Basically, the CDKv2 consolidates the construct libraries into a single package but at the time that I am writing this, it is still on developer preview.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cYVRx1rV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8og5tooeifgiguv35zu7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cYVRx1rV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8og5tooeifgiguv35zu7.png" alt="DEV.to SPA CDK"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To start, we need to make sure we have these items prepared in this development:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node.js and package manager (&lt;code&gt;npm, yarn or npx&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;AWS CLI configured with the right access&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token"&gt;Github Personal Access Token&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's install CDK and bootstrap our nuxt spa application. My preference, I'll separate the repository for the CDK SPA pipeline (&lt;code&gt;hello-cdk-infra&lt;/code&gt;) and nuxt application (&lt;code&gt;hello-cdk&lt;/code&gt;) but placing the buildspec file on the nuxt app so that it will be easier to update once we add things like env configs, static code analysis and etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; aws-cdk@next

npm init nuxt-app hello-cdk
&lt;span class="nb"&gt;cd &lt;/span&gt;hello-cdk
&lt;span class="nb"&gt;mkdir &lt;/span&gt;codebuild &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; curl &lt;span class="nt"&gt;-L&lt;/span&gt; https://git.io/J3xII &lt;span class="nt"&gt;-o&lt;/span&gt; codebuild/builspec.yml

git checkout &lt;span class="nt"&gt;-b&lt;/span&gt; develop
git add &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Initialize spa repository"&lt;/span&gt;
git remote add origin git@github.com:username/hello-cdk
git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin develop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Builspec details can be found in this &lt;a href="https://gist.githubusercontent.com/jaypeeig/0152c5a081b89904d304bac0e327c9dc/raw/09939e1443a75587d24fdc144e88ab00e2533b0e/buildspec.yml"&gt;gist&lt;/a&gt; and the screenshot below are the options I selected for our SPA.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lDIf3yN4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmiv94c590n1o9p988tw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lDIf3yN4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmiv94c590n1o9p988tw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Test the app by executing &lt;code&gt;npm run dev&lt;/code&gt;, it should build the project and render our SPA in the browser.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rgxIQC3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xrqgxpuq8rkcz5lv2nj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rgxIQC3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xrqgxpuq8rkcz5lv2nj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now we are done with the SPA part, let's create the pipeline and the S3 bucket that will host our application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;hello-cdk-infra &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;hello-cdk-infra
cdk init app &lt;span class="nt"&gt;--language&lt;/span&gt; typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's define our github config and region preference, update the file on the &lt;code&gt;bin&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bin/hello-cdk-infra.ts&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;region&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tryGetContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;region&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ap-northeast-1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;github&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jaypeeig&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello-cdk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;region&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HelloCdkInfraStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;HelloCdkInfraStack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;synth&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we will define an interface for our Props and add the services we need for our spa pipeline, which by default is located in the &lt;code&gt;lib&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;lib/hello-cdk-infra-stack.ts&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;StackProps&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-cdk-lib&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Construct&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;constructs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;PipelineProps&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;StackProps&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;github&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="na"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HelloCdkInfraStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;PipelineProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// The code that defines your stack goes here&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's import S3 from the construct library and add the bucket. Basically, this is the notable change on CDK v2, you don't have to manually install the libraries you need per service, you just have to pull it in &lt;code&gt;aws-cdk-lib&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;RemovalPolicy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;CfnOutput&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;aws_s3&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-cdk-lib&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bucketWebsite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;websiteBucket&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;websiteIndexDocument&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;index.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;websiteErrorDocument&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;index.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;publicReadAccess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;removalPolicy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RemovalPolicy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DESTROY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;cors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="na"&gt;allowedOrigins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="na"&gt;allowedMethods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HttpMethods&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GET&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CfnOutput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;WebsiteURL&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;bucketWebsite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bucketWebsiteUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;'Website URL',&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then, let's initialize our pipeline and add our Github repository (&lt;code&gt;hello-cdk&lt;/code&gt;) as the source stage of it. We will be needing the Github Access Token for this to work. To keep it secure, I will be using the &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html"&gt;SSM Paratemer store&lt;/a&gt; to keep the token and we will be pulling it once we deploy the infrastructure. It should be placed in the same region where you will deploy the CDK infrastructure.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SSM Parameter Key for our token: &lt;code&gt;/Demo/Github/AccessToken&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="p"&gt;....&lt;/span&gt;
  &lt;span class="nx"&gt;SecretValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;aws_codepipeline&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;codepipeline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;aws_ssm&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;ssm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;aws_codepipeline_actions&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;codepipeline_actions&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-cdk-lib&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;outputSources&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codepipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Artifact&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;outputBuilds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codepipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Artifact&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;githubToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ssm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StringParameter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromStringParameterAttributes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AccessToken&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;parameterName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/Demo/Github/AccessToken&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;stringValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codepipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Pipeline&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;pipelineName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`HelloCDK`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;restartExecutionOnUpdate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addStage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;stageName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Source&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codepipeline_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GitHubSourceAction&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;actionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Merged&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;oauthToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SecretValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;plainText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;githubToken&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="na"&gt;branch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;develop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;outputSources&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;codepipeline_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GitHubTrigger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WEBHOOK&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have the codepipeline and the github source defined, let us add a stage to build the SPA using codebuild and deploy the generated artifact to S3 bucket.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="p"&gt;....&lt;/span&gt;
  &lt;span class="nx"&gt;aws_codebuild&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;codebuild&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-cdk-lib&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buildProject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codebuild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PipelineProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Build Nuxt SPA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;projectName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`HelloCDK-Build`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;buildSpec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;codebuild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;BuildSpec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromSourceFilename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./codebuild/buildspec.yml&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;buildImage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;codebuild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LinuxBuildImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STANDARD_4_0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addStage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;stageName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Build&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codepipeline_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CodeBuildAction&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;actionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Build&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;project&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;buildProject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;outputSources&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;outputBuilds&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addStage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;stageName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Deploy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codepipeline_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;S3DeployAction&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;actionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Website&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;outputBuilds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;bucketWebsite&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, we will deploy our CDK stack in cli. This will deploy our infrastructure using cloudformation under the hood, but first we can check our code using &lt;code&gt;cdk synth&lt;/code&gt;, if no error found, it will emit a valid cloudformation template, meaning our code is valid.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;cdk bootstrap&lt;/code&gt; first (required in version 2)&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;cdk deploy&lt;/code&gt; to provision our pipeline&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iMO4wKA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vdm82nk1sanlvvahhx7l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iMO4wKA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vdm82nk1sanlvvahhx7l.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When finished, the URL of S3 static website is returned in CLI. Now we have a complete pipeline that automatically builds our SPA once our develop branch is updated.&lt;/p&gt;

&lt;p&gt;Thanks for reading and happy coding :)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#repositories"&gt;
  &lt;/a&gt;
  Repositories
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jaypeeig/hello-cdk"&gt;Nuxt SPA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jaypeeig/hello-cdk-infra"&gt;CDK Pipeline&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




</description>
      <category>aws</category>
      <category>nuxt</category>
    </item>
    <item>
      <title>Style your frontend with an engineering flavour by using JSS</title>
      <author>Damir Drempetiƒá</author>
      <pubDate>Mon, 10 May 2021 09:19:20 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/style-your-frontend-with-a-engineering-flavour-by-using-jss-4h06</link>
      <guid>https://dev.to/bornfightcompany/style-your-frontend-with-a-engineering-flavour-by-using-jss-4h06</guid>
      <description>&lt;p&gt;Choosing between numerous options for styling your app could be a project in and of itself. ü§Ø&lt;/p&gt;

&lt;p&gt;I've tried several styling solutions and approaches on frontend like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Vanilla CSS&lt;/li&gt;
&lt;li&gt;CSS extensions like &lt;a href="https://sass-lang.com/"&gt;Sass&lt;/a&gt; or &lt;a href="https://lesscss.org/"&gt;Less&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/css-modules/css-modules"&gt;CSS modules&lt;/a&gt; (and Sass)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Projects which used them were written either with Vanilla JS or with some modern JavaScript frameworks like AngularJS, Angular 4, React ‚öõÔ∏è or even React Native.&lt;/p&gt;

&lt;p&gt;After all I have a huge favourite regarding styling options world which is not mentioned above. I would vote for it on new project anytime (sorry, there are local elections üó≥Ô∏è soon here in Croatia).&lt;/p&gt;

&lt;p&gt;To finally get closer to the point, I like to write my styles just as rest of the app. In JavaScript. Which means I use the same programming language and the same syntax both for logic and for styles. This is really cool, but it's not the main motive behind it. It's because I find JavaScript much more powerful üí™ and capable than CSS. &lt;/p&gt;

&lt;p&gt;JavaScript brings more of the engineering flavour into the app styling process. And it's possible with &lt;a href="https://cssinjs.org/"&gt;CSS-in-JS&lt;/a&gt; solutions, or shorter JSS.&lt;/p&gt;

&lt;p&gt;I used JSS for the first time while I was working on projects built with Material UI. In their &lt;a href="https://material-ui.com/styles/basics/#why-use-material-uis-styling-solution"&gt;docs&lt;/a&gt;, you can find out why they use such approach after abandoning Less and custom solution inline-styles. Actually they did some &lt;a href="https://github.com/oliviertassinari/a-journey-toward-better-style"&gt;pretty interesting comparison üìä when choosing styling solution&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I've mentioned engineering flavour so let's show some examples of what I thought.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#variables"&gt;
  &lt;/a&gt;
  Variables
&lt;/h2&gt;

&lt;p&gt;You can simply keep any style in a variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;COLOR_PRIMARY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;black&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;COLOR_SECONDARY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#f0f0f0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also group them into a JS object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;baseTitle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;COLOR_PRIMARY&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You could think now: nothing special, I can do that with extended CSS too. Be patient... üòÉ &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spreading-default-properties-and-overriding"&gt;
  &lt;/a&gt;
  Spreading, default properties and overriding
&lt;/h2&gt;

&lt;p&gt;Let's say we want to extend this basic title for some other use.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;sectionTitle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;baseTitle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;//override font weight from base title&lt;/span&gt;
  &lt;span class="nx"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="c1"&gt;//extend base title&lt;/span&gt;
  &lt;span class="nx"&gt;fontFamily&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;"Roboto", "Helvetica", "Arial", sans-serif&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;fontStyle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;italic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Notice that you don't need to learn any new syntax, you actually write CSS but you just use &lt;code&gt;camelCase&lt;/code&gt; instead of the &lt;code&gt;kebab-case&lt;/code&gt;: &lt;code&gt;font-size&lt;/code&gt; ‚û°Ô∏è &lt;code&gt;fontSize&lt;/code&gt;. And have JS power on top of it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#themes"&gt;
  &lt;/a&gt;
  Themes
&lt;/h2&gt;

&lt;p&gt;Then, you could also keep all your &lt;strong&gt;reusable&lt;/strong&gt; styles in one place and build your whole theme - which is simply JS object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;COLOR_PRIMARY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;COLOR_SECONDARY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That theme could be considered a config file but for styles üíÖ. Use &lt;a href="https://material-ui.com/customization/default-theme/#explore"&gt;Material UI theme&lt;/a&gt; for inspiration. From breakpoints, typography to colour palette and spacings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integrate-jss-with-react"&gt;
  &lt;/a&gt;
  Integrate JSS with React
&lt;/h2&gt;

&lt;p&gt;There is a &lt;a href="https://cssinjs.org/jss-api"&gt;JSS Core&lt;/a&gt; library which can be used in any Javascript app, but React developers will be more interested in &lt;a href="https://cssinjs.org/react-jss"&gt;React-JSS&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamic-values"&gt;
  &lt;/a&gt;
  Dynamic Values
&lt;/h3&gt;

&lt;p&gt;Give attention to &lt;a href="https://cssinjs.org/react-jss#dynamic-values"&gt;Dynamic values&lt;/a&gt; . &lt;/p&gt;

&lt;p&gt;JSS uses Hooks API where you can use hooks like &lt;code&gt;createUseStyles&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;There is a cool example I will borrow from JSS docs about how to start with it. I will just separate a style from components, because it is always a good practice not to make a big clutter in one file. Also, it reminds of the CSS modules approach which have a separate isolated style for each component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;createUseStyles&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-jss&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useStyles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createUseStyles&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;myButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spacing&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;myLabel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;labelColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontStyle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fontStyle&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice how elegantly you can change the style depending on props values passed from the component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;classes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStyles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;classes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myButton&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;classes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myLabel&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bold&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;labelColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="nx"&gt;fontStyle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;italic&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Submit&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#theming"&gt;
  &lt;/a&gt;
  Theming
&lt;/h3&gt;

&lt;p&gt;Besides hook for creating style there is the &lt;code&gt;useTheme&lt;/code&gt; combined with a &lt;code&gt;ThemeProvider&lt;/code&gt; wrapper. It also provides a &lt;a href="https://cssinjs.org/react-jss/#theming"&gt;theming solution&lt;/a&gt; which makes it a lot easier to start writing themed apps with reusable styles, and to quick start your new project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#would-you-give-it-a-try"&gt;
  &lt;/a&gt;
  Would you give it a try?
&lt;/h2&gt;

&lt;p&gt;‚ùì What are you thoughts? &lt;br&gt;
‚ùì Which styling solution do you prefer?&lt;br&gt;
‚ùì How do you deal with theming and reusable styles?&lt;/p&gt;

</description>
      <category>engineeringmonday</category>
      <category>javascript</category>
      <category>css</category>
      <category>react</category>
    </item>
  </channel>
</rss>
