<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How Does a YouTube Video Go Viral</title>
      <author>Ander Rodriguez</author>
      <pubDate>Wed, 16 Jun 2021 12:19:03 +0000</pubDate>
      <link>https://dev.to/anderrv/how-does-a-youtube-video-go-viral-3067</link>
      <guid>https://dev.to/anderrv/how-does-a-youtube-video-go-viral-3067</guid>
      <description>&lt;p&gt;Have you ever wondered how a viral video grows? We've tracked Top Youtubers to see how they spread their content. They tend to publish videos regularly at times that work best for them. There is work behind every video, but there is also data and analysis.&lt;/p&gt;

&lt;p&gt;Traditional media does not seem to be disappearing any time soon. But on the other hand, YouTube and other media stars are not a tendency but a reality. And the undeniable truth is that they are here to stay - and grow their audiences.&lt;/p&gt;

&lt;p&gt;That's what we'll be covering in this post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#views-count-per-hour"&gt;
  &lt;/a&gt;
  Views count per hour
&lt;/h2&gt;

&lt;p&gt;In our first graph, we show the progression of the last published videos. We collected data every 30 minutes, so the timing is as accurate as possible. For a more detailed explanation and dataset, check this small repo we published with the &lt;a href="https://github.com/ZenRows/youtube-video-viral"&gt;demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here we see the almost exponential growth of some videos in the first hours, some of them reaching a million views in less than a day. Charts are not interactive here, so visit the &lt;a href="(https://www.zenrows.com/blog/how-does-a-youtube-video-go-viral?utm_source=devto&amp;amp;utm_medium=blog&amp;amp;utm_campaign=youtube_videos)"&gt;original post&lt;/a&gt; if you want to show or hide videos. Axes will adjust and make it easier to view some trends. Viral videos cause the vertical axis to grow fast. As you can see, that's more than a million views in a few days - even for the ones at the bottom.&lt;/p&gt;

&lt;p&gt;After the first explosion, the curve stabilizes, and the growth slows down until it's almost irrelevant. Well, down to "only" hundreds of thousand views per day. These channels keep a short publishing period of under a week, in some cases almost daily. Thus the moment that one of the videos decays, there is another one on the rise. In this way, they may stay trending forever.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D2ZZQZ28--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anf7froiiwpthr60ro2b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D2ZZQZ28--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anf7froiiwpthr60ro2b.jpg" alt="Views count per hour&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#latest-videos-by-pewdiepie"&gt;
  &lt;/a&gt;
  Latest videos by PewDiePie
&lt;/h2&gt;

&lt;p&gt;To emphasize this point, we isolated PewDiePie's videos over a few days. He is one of the &lt;a href="https://en.wikipedia.org/wiki/List_of_most-subscribed_YouTube_channels"&gt;most followed YouTubers&lt;/a&gt; ever with 110 million subscribers at the moment of writing.&lt;/p&gt;

&lt;p&gt;As we can see, many people are watching the previous one while the new one is already available. By doing this, they keep steady traffic every day and maintain their position as top content creators. Anyway, this is a clear example of almost-instantly consumed content. Still some views after a few days, but rapidly declining.&lt;/p&gt;

&lt;p&gt;The graph shows similar trends between videos, even if they behave differently. Not all of them achieve the same success or go viral. Either way, they all share rapid growth and slowly decay, getting virtually no visits after a week or two.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SHBVxImt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qknwilhsqj6ixd351fbp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SHBVxImt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qknwilhsqj6ixd351fbp.jpg" alt="Latest videos by PewDiePie"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#channel-views-per-day"&gt;
  &lt;/a&gt;
  Channel views per day
&lt;/h2&gt;

&lt;p&gt;Following the last point mentioned, we group the data per channel and the sum of the visits for the latest fifteen videos. It gives us a reference to the number of people watching them every day. As we've seen previously, each video gets fewer views as time goes by, so we can assume that the latest ones are the right choice to express our point.&lt;/p&gt;

&lt;p&gt;There are evident differences from day to day, but the trend is stable. We cannot see the whole picture here, but when a new channel enters with a vast growth is due to a new video - only for channels that do not publish almost daily. Apart from that, there are not many surprises here, and if we were to rank them, there wouldn't be many variations per day.&lt;/p&gt;

&lt;p&gt;Unless MrBeast enters the list with a new video that gets ten million views in less than ten hours. Remember that you can click on the channel name above the chart to remove it and readjust the axes on the &lt;a href="https://www.zenrows.com/blog/how-does-a-youtube-video-go-viral?utm_source=devto&amp;amp;utm_medium=blog&amp;amp;utm_campaign=youtube_videos"&gt;original post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j_n8Z37L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rdy10sbcnz35qz2z9mj5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j_n8Z37L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rdy10sbcnz35qz2z9mj5.jpg" alt="Channel views per day"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#daily-views-per-video-by-pewdiepie"&gt;
  &lt;/a&gt;
  Daily views per video by PewDiePie
&lt;/h2&gt;

&lt;p&gt;In this last graph, we highlight how some videos carry a lot of weight in the daily views, but they decay fast over time. To clarify, we are talking about a Youtuber that generates content daily. That might not apply to different regularities.&lt;/p&gt;

&lt;p&gt;In case it wasn't clear yet, we can see the fleeting nature of the content. By following the colors associated with each video, our verdict remains - high spikes after a few hours of being published and slow decay over time. Then a new video comes and takes the bar even higher, maintaining the daily views reasonably stable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5CJkEJAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1vhd9eqyry7m0jy0fkpr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5CJkEJAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1vhd9eqyry7m0jy0fkpr.jpg" alt="Daily views per video by PewDiePie"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-we-obtained-the-data"&gt;
  &lt;/a&gt;
  How we obtained the data
&lt;/h2&gt;

&lt;p&gt;YouTube used to show video and channel statistics publicly, but they stopped in 2018. Now we have no official source of information, and many people and companies have been trying to fill that void. There is no easy task to get all this information since they won't just publish it.&lt;/p&gt;

&lt;p&gt;With that in mind, we decided to create a recurring &lt;a href="https://www.zenrows.com/blog/how-does-a-youtube-video-go-viral?utm_source=devto&amp;amp;utm_medium=blog&amp;amp;utm_campaign=youtube_videos"&gt;Task in Zenrows&lt;/a&gt; for top Youtubers. It works almost the same as a one-time task, like the one we show in the &lt;a href="https://dev.to/anderrv/collecting-data-to-map-housing-prices-1omh"&gt;Housing Prices&lt;/a&gt; article. In this case, we collect less info, just one entry per channel. But we do that over time, gathering data every 30 minutes.&lt;/p&gt;

&lt;p&gt;Here is a snippet of the data. The loaded file is incomplete due to its size; we will publish an example dataset in the &lt;a href="https://github.com/ZenRows/youtube-video-viral"&gt;demo repository&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"channelName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"✿ Kids Diana Show"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Diana and Roma Cheer Up Baby Oliver with Music"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"videoId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"SqiyEsUBe4o"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"viewCount"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;172723&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;162289398009&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"channelId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"UCk8GzjMOrta8yxDcKfylJYw"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#other-use-cases"&gt;
  &lt;/a&gt;
  Other use cases
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Track and rank influencers&lt;br&gt;
As we've seen in these examples, there are several ways of using influencers' collected data over time. More and more companies each day are paying YouTubers and Instagrammers to advertise their products. Knowing which one to contact for a campaign is crucial, and data can help them or marketing agencies decide.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SEO and SEM&lt;br&gt;
Wouldn't it be great if we could conveniently position or pay for all the right keywords? Usually, all the competition think the same, so not so convenient after all. That betting war only raises the price without adding any value. But with the correct data, seeing those lowly priced keywords or new similar ones become a great opportunity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;News aggregation&lt;br&gt;
What better source of up-to-date texts than news sites? Be it for natural language processing or any other learning mechanism, tons of documents can be gathered daily. By picking the best sources, you can guarantee that the content is high quality and trustworthy.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Line and bar charts are an easy and traditional way of displaying data. The critical point here is the quality of data and how it is processed. It differentiates a mediocre chart from a great source of information that is effortlessly understandable.&lt;/p&gt;

&lt;p&gt;Recurrent collection tasks are a great way to gather data points over time for time graphs or comparisons. There are several ways to make the most out of it. Don't hesitate to &lt;a href="https://app.zenrows.com/register?task=youtube&amp;amp;utm_source=devto&amp;amp;utm_medium=blog&amp;amp;utm_campaign=youtube_videos"&gt;give it a try&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Keycloak: REST API for Realm Role</title>
      <author>rounakcodes</author>
      <pubDate>Wed, 16 Jun 2021 11:34:52 +0000</pubDate>
      <link>https://dev.to/rounakcodes/keycloak-rest-api-for-realm-role-5hgp</link>
      <guid>https://dev.to/rounakcodes/keycloak-rest-api-for-realm-role-5hgp</guid>
      <description>&lt;h3&gt;
  &lt;a href="#get-access-token"&gt;
  &lt;/a&gt;
  Get access token
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  curl &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s2"&gt;"client_id=admin-cli"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s2"&gt;"username=admin"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s2"&gt;"password=admin"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s2"&gt;"grant_type=password"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="s2"&gt;"http://localhost:8080/auth/realms/master/protocol/openid-connect/token"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-realm-role"&gt;
  &lt;/a&gt;
  Create a Realm Role
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  curl &lt;span class="nt"&gt;-X&lt;/span&gt; POST http://localhost:8080/auth/admin/realms/&amp;lt;realm-id&amp;gt;/roles &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Authorization: Bearer &lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TOKEN&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;'{"name": "&amp;lt;role-name&amp;gt;"}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#get-all-realm-roles"&gt;
  &lt;/a&gt;
  Get all Realm Roles
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  curl &lt;span class="nt"&gt;-X&lt;/span&gt; GET http://localhost:8080/auth/admin/realms/&amp;lt;realm-id&amp;gt;/roles &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Authorization: Bearer &lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TOKEN&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>keycloak</category>
      <category>realm</category>
      <category>authentication</category>
      <category>authorization</category>
    </item>
    <item>
      <title>I made a complex Design System For Figma with 2000+ Components! Also, a Free Version is available.</title>
      <author>Fredy Andrei</author>
      <pubDate>Wed, 16 Jun 2021 11:34:38 +0000</pubDate>
      <link>https://dev.to/fredy/i-made-a-complex-design-system-for-figma-with-2000-components-also-a-free-version-is-available-4e9k</link>
      <guid>https://dev.to/fredy/i-made-a-complex-design-system-for-figma-with-2000-components-also-a-free-version-is-available-4e9k</guid>
      <description>&lt;p&gt;I’m Fredy Andrei, the Founder of Simmmple. Today I’m excited to introduce our new product, Venus Design System, a complex &amp;amp; premium design system tool which comes with more than 2000+ Components states and more than 250+ Global Styles for Figma! ❤️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://venusdesignsystem.com"&gt;https://venusdesignsystem.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The main idea of doing this tool was to help designers &amp;amp; developers reduce hours of time wasted wireframing and building UI projects. Venus Design System will increase cohesion, collaboration, and focus your creativity where it matters!&lt;/p&gt;

&lt;p&gt;We realized these ready-to-use components can help you to make a premium project very quickly.&lt;/p&gt;

&lt;p&gt;While designing Venus, there were a few things we knew we had to get right:&lt;/p&gt;

&lt;p&gt;• Making sure it was easy for anyone, not just designers, but for developers to learn and use&lt;br&gt;
• Connecting Venus with Figma features like Variants, Auto Layout V3.0 &amp;amp; many other cool features (we’re just getting started here!)&lt;br&gt;
• Make Venus as a library of UI components and styles to help you use them &amp;amp; deliver your work faster&lt;br&gt;
• Keep Venus design consistent, accessible and well-documented&lt;/p&gt;

&lt;p&gt;For the moment, Venus comes just in Figma Version at $99 for Freelancer license, but we are working and we plan to launch Venus as a React Library to be more useful and to be easier to bring the design to life.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Try Free Version of Venus:&lt;/strong&gt; &lt;a href="https://bit.ly/venusdesign-free"&gt;https://bit.ly/venusdesign-free&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Venus Design System PRO&lt;/strong&gt;: &lt;a href="https://bit.ly/venusdesign-pro"&gt;https://bit.ly/venusdesign-pro&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>design</category>
      <category>html</category>
      <category>systems</category>
    </item>
    <item>
      <title>Keycloak: REST API for new Realm</title>
      <author>rounakcodes</author>
      <pubDate>Wed, 16 Jun 2021 11:09:48 +0000</pubDate>
      <link>https://dev.to/rounakcodes/keycloak-create-a-new-realm-using-rest-api-2fab</link>
      <guid>https://dev.to/rounakcodes/keycloak-create-a-new-realm-using-rest-api-2fab</guid>
      <description>&lt;h3&gt;
  &lt;a href="#get-access-token"&gt;
  &lt;/a&gt;
  Get access token
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  curl &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s2"&gt;"client_id=admin-cli"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s2"&gt;"username=admin"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s2"&gt;"password=admin"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s2"&gt;"grant_type=password"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="s2"&gt;"http://localhost:8080/auth/realms/master/protocol/openid-connect/token"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-realm-json-file"&gt;
  &lt;/a&gt;
  Create realm json file
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Sample
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"newrealm"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"realm"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"newrealm"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"displayName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"New Realm"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"enabled"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"sslRequired"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"external"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"registrationAllowed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"loginWithEmailAllowed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"duplicateEmailsAllowed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"resetPasswordAllowed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editUsernameAllowed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"bruteForceProtected"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-realm"&gt;
  &lt;/a&gt;
  Create realm
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  curl &lt;span class="nt"&gt;-v&lt;/span&gt; POST &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Authorization: Bearer &amp;lt;access-token&amp;gt;"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Content-Type: application/json"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s2"&gt;"@&amp;lt;realm-file&amp;gt;"&lt;/span&gt; &lt;span class="se"&gt;\ &lt;/span&gt;http://localhost:8080/auth/admin/realms
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>keycloak</category>
      <category>realm</category>
      <category>authorization</category>
      <category>authentication</category>
    </item>
    <item>
      <title>Những lý do khiến Startup thất bại</title>
      <author>HRchannels</author>
      <pubDate>Wed, 16 Jun 2021 10:40:09 +0000</pubDate>
      <link>https://dev.to/hrchannels/nh-ng-ly-do-khi-n-startup-th-t-b-i-2fgc</link>
      <guid>https://dev.to/hrchannels/nh-ng-ly-do-khi-n-startup-th-t-b-i-2fgc</guid>
      <description>&lt;p&gt;Những lý do khiến Startup thất bại&lt;br&gt;
20 năm trước, tôi thành lập Idealab, và trong vòng 12 năm qua chúng tôi lập ra hơn 100 công ty, đạt được nhiều thành công và cũng vướng phải nhiều thất bại lớn. Chúng tôi đã học được nhiều bài học từ những thất bại đó. Qua đó tôi lọc ra những yếu tố tôi cho rằng có ảnh hưởng lớn nhất đến sự thành công và thất bại của một công ty. Đó là:&lt;br&gt;
Thứ nhất là “Ý tưởng” (Idea). &lt;br&gt;
Tôi đã từng nghĩ rằng ý tưởng là quan trọng nhất. Tôi đặt tên công ty của mình là Idealab vì tôi tôn thờ khoảnh khắc một ý tưởng loé lên trong tâm trí mình.&lt;br&gt;
Nhóm làm việc (Team)&lt;br&gt;
Những người thực hiện, và khả năng thích ứng môi trường làm việc còn quan trọng hơn cả những ý tưởng. Tôi chưa từng tưởng tượng rằng sẽ có ngày mình trích dẫn lời của võ sĩ đấm bốc nổi tiếng Mike Tyson, rằng: “Ai cũng tự lên sẵn một kế hoạch của riêng mình cho đến khi họ bị đấm một phát vào mặt”. Và tôi nghĩ rằng điều đó cũng hoàn toàn đúng trong kinh doanh. Điều mà nhóm làm việc có thể đem lại chính là khả năng thích ứng khi bạn bị khách hàng “đấm vào mặt”. Khách hàng chính là thực tại. Vì thế mà tôi đã cho rằng chính nhóm làm việc mới là yếu tố quan trọng nhất.&lt;br&gt;
Tìm hiểu về CEO tại Việt Nam &amp;gt;&amp;gt;&amp;gt; &lt;a href="http://hrchannels.com/uptalent/ceo-la-gi-ceo-can-so-huu-to-chat-nao.html"&gt;http://hrchannels.com/uptalent/ceo-la-gi-ceo-can-so-huu-to-chat-nao.html&lt;/a&gt; &amp;lt;&amp;lt;&amp;lt;&lt;br&gt;
Mô hình kinh doanh&lt;br&gt;
Công ty đã có đường hướng rõ ràng hay chưa? Có tạo được thu nhập từ khách hàng được không? Điều đó bắt đầu tiến lên vị trí đầu trong danh sách những yếu tố quan trọng nhất của tôi.&lt;br&gt;
Khoản đầu tư&lt;br&gt;
Đôi khi công ty bạn nhận được một khoản đầu tư lớn và có khi đó mới là điều quan trọng nhất.&lt;br&gt;
Tham khảo Top website đăng tin tuyển dụng miễn phí &lt;a href="http://hrchannels.com/uptalent/top-5-website-dang-tin-tuyen-dung-mien-phi-uy-tin-nhat.html"&gt;http://hrchannels.com/uptalent/top-5-website-dang-tin-tuyen-dung-mien-phi-uy-tin-nhat.html&lt;/a&gt; &amp;lt;&amp;lt;&amp;lt;&lt;br&gt;
Thời điểm Startup&lt;br&gt;
Ý tưởng bạn đưa ra có là quá sớm hay không? Thế giới đã sẵn sàng cho ý tưởng mới đó chưa? Bạn có phải hướng dẫn họ hiểu về nó trước không? Thời điểm này là thích hợp nhất hay đã quá muộn và bạn đã có quá nhiều đối thủ cạnh tranh?&lt;br&gt;
Đối với trường hợp công ty đạt được thành công lớn như airbnb, nó đã bị bỏ qua bởi rất nhiều nhà đầu tư vì mọi người đều nghĩ rằng không ai sẽ cho một người lạ thuê một phần không gian trong nhà họ. Tất nhiên, điều đó đã được chứng minh ngược lại. Nhưng điều tạo nên thành công cho công ty này, bên cạnh mô hình kinh tế hiệu quả, ý tưởng tuyệt vời, và phương pháp thực hiện tốt, chính là sự lựa chọn thời điểm hợp lý của họ. Công ty được thành lập ngay vào thời điểm suy thoái kinh tế, khi mà mọi người đều rất cần thêm thu nhập, và điều đó khiến họ bỏ qua thành kiến về việc cho người lạ thuê nhà của họ.&lt;br&gt;
Trường hợp của Uber cũng tương tự. Uber, với ý tưởng, mô hình kinh tế, và phương pháp thực hiện tuyệt vời, được thành lập tại thời điểm không thể hợp lý hơn khi mục tiêu hàng đầu của các tài xế là tìm kiếm thêm thu nhập.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://hrchannels.com/uptalent/quan-ly-du-an-project-manager-la-gi-lam-trong-linh-vuc-nao.html"&gt;https://hrchannels.com/uptalent/quan-ly-du-an-project-manager-la-gi-lam-trong-linh-vuc-nao.html&lt;/a&gt;&lt;br&gt;
Chỉ 2 năm sau, khi AdobeFlash xuất hiện, giải quyết các vấn đề liên quan đến việc cài đặt hệ thống trên vi tính, và hệ thống liên kết mạng tăng trưởng đến 50% tại Mỹ, YouTube ra mắt. YouTube thật ra còn chưa có một mô hình kinh tế lúc nó bắt đầu, nhưng việc chọn thời điểm lúc này để ra mắt quá tuyệt vời!&lt;br&gt;
Nói tóm lại, phương pháp thực hiện chắc chắn là quan trọng, nhưng sự lựa chọn thời điểm hợp lý là yếu tố quan trọng hơn cả. Cách để bạn chọn thời điểm hợp lý chính là tìm hiểu xem khách hàng của mình đã thật sự sẵn sàng cho sản phẩm của bạn hay chưa. Hãy thành thật với chính bản thân mình, đừng cố chối bỏ bất cứ kết quả nào bạn nhận được chỉ bởi vì bạn muốn thúc đẩy ý tưởng mà bạn cho là tuyệt&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;
&lt;br&gt;
&lt;/blockquote&gt;

</description>
    </item>
    <item>
      <title>Generate dynamic social images with Nuxt, Cloud functions and Cloudinary</title>
      <author>Jozef Maxted 👻</author>
      <pubDate>Wed, 16 Jun 2021 10:20:51 +0000</pubDate>
      <link>https://dev.to/jozefmaxted/generate-dynamic-social-images-with-nuxt-cloud-functions-and-cloudinary-25jm</link>
      <guid>https://dev.to/jozefmaxted/generate-dynamic-social-images-with-nuxt-cloud-functions-and-cloudinary-25jm</guid>
      <description>&lt;p&gt;More and more, we are noticing websites with really slick automatically generated social sharing images, like the ones below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q8l9rIaZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjn8ez8ll3bze8unwuu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q8l9rIaZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjn8ez8ll3bze8unwuu2.png" alt="Social_image_example_0569df04d7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This can really make your content stand ou and boost engagement when sharing.  &lt;/p&gt;

&lt;p&gt;We have created a tutorial on how to dynamically generate these images using Nuxt, Firebase cloud functions and Cloudinary. Follow along in the video below, or if you prefer learning in text format, we have written it up on our blog too. &lt;a href="https://www.pixelhop.io/writing/dynamic-social-images-with-nuxt-cloud-functions-and-cloudinary/"&gt;Dynamic social images with Nuxt, Cloud functions and Cloudinary&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-DOgxnzSzX8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Let us know what you think, and we look forward to seeing your awesome sharing images soon! If you have any questions feel free to reach out to us on Twitter: &lt;a href="https://twitter.com/pixelhopio"&gt;@pixelhopio&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vue</category>
      <category>nuxt</category>
      <category>cloudinary</category>
      <category>firebase</category>
    </item>
    <item>
      <title>Top Youtube Channels To Learn Django For Everyone.</title>
      <author>Shivam Rohilla</author>
      <pubDate>Wed, 16 Jun 2021 09:50:00 +0000</pubDate>
      <link>https://dev.to/shivamrohilllaa/top-youtube-channels-to-learn-django-for-everyone-358l</link>
      <guid>https://dev.to/shivamrohilllaa/top-youtube-channels-to-learn-django-for-everyone-358l</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Real Post:- https://webdevcodes.com/django/top-youtube-channels-to-learn-django-for-everyone/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hello Devs, In this tutorial, I'm gonna tell you the top 10 youtube channels or playlists for Django.&lt;br&gt;
As we know Django is the most powerful backend framework, you can create applications very rapidly or fast, large community, best community support, easy to use. Django is a python web framework, and you can also implement Machine Learning, Data Science, Data Analysis with Django, and that makes Django a great framework.&lt;/p&gt;

&lt;p&gt;You can also integrate Django with javascript frameworks like React js or Angular, Vue for creating a scalable application.&lt;/p&gt;

&lt;p&gt;Here is a list of the top 10 youtube channels.&lt;/p&gt;

&lt;p&gt;For Beginners&lt;/p&gt;

&lt;p&gt;1)  CodingEntrepreneurs&lt;/p&gt;

&lt;p&gt;2) Corey Schafer&lt;/p&gt;

&lt;p&gt;3) Dennis Ivy&lt;/p&gt;

&lt;p&gt;4) Programming with Harry&lt;/p&gt;

&lt;p&gt;5) freeCodeCamp.org&lt;/p&gt;

&lt;p&gt;For Pro Developers:&lt;/p&gt;

&lt;p&gt;6) JustDjango&lt;/p&gt;

&lt;p&gt;You can access their playlist if you want to learn Django with react js or want to build some advanced projects in Django.&lt;/p&gt;

&lt;p&gt;7) Codemy.com&lt;/p&gt;

&lt;p&gt;If you want to build some creative projects in Django then choose this channel, his playlist is really awesome.&lt;/p&gt;

&lt;p&gt;8) Code With Stein &lt;/p&gt;

&lt;p&gt;If you want to learn Django or Django Rest Framework with Vue js so this is the best youtube channel for you, this channel playlist is really awesome.&lt;/p&gt;

&lt;p&gt;9) Very Academy&lt;/p&gt;

&lt;p&gt;10) Telusko&lt;/p&gt;

&lt;p&gt;Now go and checkout their playlists.&lt;/p&gt;

&lt;p&gt;Thank You&lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
    </item>
    <item>
      <title>5 resources I use as a  front end developer that you probably need</title>
      <author>Benedict Steven </author>
      <pubDate>Wed, 16 Jun 2021 09:31:03 +0000</pubDate>
      <link>https://dev.to/bmsteven/5-resources-i-use-as-a-front-end-developer-that-you-probably-need-1odj</link>
      <guid>https://dev.to/bmsteven/5-resources-i-use-as-a-front-end-developer-that-you-probably-need-1odj</guid>
      <description>&lt;p&gt;Cover photo credit: &lt;a href="https://unsplash.com/photos/bq31L0jQAjU?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditShareLink"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a frontend developer, you have probably struggled to find images, svgs or icons to add to your application and sometimes the images you have are of high resolution that it takes a lot of time to paint when the website renders thus hindering website's performance or couldn't find high quality images. Here are &lt;strong&gt;five(5) resources&lt;/strong&gt; which you might need while developing your application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-free-icons"&gt;
  &lt;/a&gt;
  1. Free Icons
&lt;/h2&gt;

&lt;p&gt;Icons are known to express some information while providing good UI. These are used in many websites and as a frontend developer you probably need them in any website you'll be making. Here are some free icons resources.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Font Awesome: &lt;a href="http://https//fontawesome.com/v4.7/icons"&gt;Font awesome&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Bootstrap icons: &lt;a href="http://icons.getbootstrap.com"&gt;Bootstrap icons&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-free-svg-illustration"&gt;
  &lt;/a&gt;
  2. Free SVG illustration
&lt;/h2&gt;

&lt;p&gt;Svg are essential part of modern websites and we no longer need to create them from scratch using html/css or other design tools like figma.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Undraw: &lt;a href="http://undraw.co"&gt;Undraw&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Freepik: &lt;a href="http://freepik.com"&gt;Freepik&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-free-high-quality-images"&gt;
  &lt;/a&gt;
  3. Free High Quality Images
&lt;/h2&gt;

&lt;p&gt;If you are wondering where to get free high quality images for your backgrounds, nature, people etc here are good sources&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unsplash: &lt;a href="http://unsplash.com"&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Pexels: &lt;a href="http://pexels.com"&gt;Pexels&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;NB: These images are of high resolution which can hinder the performance of your website but luckily there are tools for that! 👇&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-free-image-resolution-compressor"&gt;
  &lt;/a&gt;
  4. Free image resolution compressor
&lt;/h2&gt;

&lt;p&gt;These tools will compress your images to reduce resolution and thus helps better your site's performance without affecting image quality.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tinyPNG: &lt;a href="http://tinypng.com"&gt;TinyPNG&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Img2go: &lt;a href="http://img2go.com/compress-image"&gt;Img2go&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-remove-background"&gt;
  &lt;/a&gt;
  5. Remove Background
&lt;/h2&gt;

&lt;p&gt;Lets look at this image&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KtZ2z8w4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1daxkc77bhwfigibazq.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KtZ2z8w4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1daxkc77bhwfigibazq.jpeg" alt="Random image"&gt;&lt;/a&gt;&lt;br&gt;
I wanna put it somewhere in my website where the pink color will result into bad UI, Removing the pink background and decide to add my own or just put it without background will be better solution, but I don't know photoshop - here is where I go&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove.bg: &lt;a href="http://remove.bg"&gt;Remove.bg&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now I get this😊&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nREtSbgz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4lzbv0wq30enmm237up.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nREtSbgz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4lzbv0wq30enmm237up.png" alt="Random image without background"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope these resources save you a lot effort, happy coding!! 😊&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>frontend</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Top 10 open source development tools (tried and tested)</title>
      <author>Budibase</author>
      <pubDate>Wed, 16 Jun 2021 09:30:11 +0000</pubDate>
      <link>https://dev.to/budibase/top-10-open-source-development-tools-tried-and-tested-2774</link>
      <guid>https://dev.to/budibase/top-10-open-source-development-tools-tried-and-tested-2774</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Va0zXnlT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctiow9q2l1ygn9n31u3v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Va0zXnlT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctiow9q2l1ygn9n31u3v.png" alt="Budibase design UI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Software is eating the world, and there are not enough developers to fulfil demand. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The U.S. Bureau of Labor Statistics projects that employment for software developers, which includes software engineers, will grow 22%, substantially faster than the 4% average for all careers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As developers and IT professionals, this demand results in pressure. We are often given impossible deadlines, velocity goals and expected to deliver at breakneck speeds, with zero bugs. This is exactly why we need the support and acceleration of good development tools. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-makes-for-a-good-development-tool"&gt;
  &lt;/a&gt;
  What makes for a good development tool?
&lt;/h2&gt;

&lt;p&gt;Although the term "developer tool" is very general and can apply to a wide range of services, there are a few key features that your top developer tools should have.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It saves you time&lt;/li&gt;
&lt;li&gt;Good documentation&lt;/li&gt;
&lt;li&gt;It integrates well with other tooling&lt;/li&gt;
&lt;li&gt;Good community&lt;/li&gt;
&lt;li&gt;Regular releases and updates&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#top-10-open-source-development-tools"&gt;
  &lt;/a&gt;
  Top 10 open source development tools
&lt;/h2&gt;

&lt;p&gt;Below we'll cover the top open-source development tools you should be using in 2021. Without these tools, the work we do, the deadlines we hit, the bugs we find and squash before release would be impossible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vs-code"&gt;
  &lt;/a&gt;
  VS Code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--itDc2qGq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnyildnhtd5uwl0vb37y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--itDc2qGq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnyildnhtd5uwl0vb37y.png" alt="VS Code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS, and Linux. It comes with built-in support for JavaScript, TypeScript, and Node.js and has a rich ecosystem of extensions for other languages (such as C++, C#, Java, Python, PHP, Go).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-vs-code-is-in-our-top-10"&gt;
  &lt;/a&gt;
  Why VS Code is in our top 10
&lt;/h4&gt;

&lt;p&gt;Personally, it's been my go-to editor for over three years. I moved from Sublime to Atom to VS Code, and I'd never looked back. Feature-wise, UX-wise, and extensions-wise, it's the best. In addition, the team behind VS Code releases new features and functionality through &lt;a href="https://code.visualstudio.com/updates/v1_57"&gt;monthly updates&lt;/a&gt;. It's been exciting to watch the editor grow from strength to strength, and I'd like to thank the team and community behind the product for their effort. These are the reasons why VS Code is the best editor and worth a try if you've never developed with it before.&lt;/p&gt;

&lt;p&gt;Time-saving: 8/10&lt;br&gt;
Documentation: 9/10&lt;br&gt;
Integrations: 10/10&lt;br&gt;
Community: 8/10&lt;br&gt;
Release/Updates: 10/10&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/microsoft/vscode"&gt;Visit Github Repo&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#budibase"&gt;
  &lt;/a&gt;
  Budibase
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cl8FDk-9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h03esysw0x4aboujbkef.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cl8FDk-9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h03esysw0x4aboujbkef.png" alt="Budibase UI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/budibase/budibase"&gt;Budibase&lt;/a&gt; is an open source low-code platform, bringing together everything required to build internal tools and custom business apps, such as; dashboards, admin panels, approval apps, customer portals, and everything in between. Within minutes, transform data and processes into powerful internal tools.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-budibase-is-in-our-top-10"&gt;
  &lt;/a&gt;
  Why Budibase is in our top 10
&lt;/h4&gt;

&lt;p&gt;Budibase is the leading open source low code platform. Low code platforms are trending at the moment and for sound reasoning. As previously mentioned, the demand for software development is proliferating, with no sign of stopping. Low code platforms, such as Budibase, allow IT professionals and developers to deliver internal tools and CRUD apps in a fraction of the time. They also remove a lot of the repetition and grunt work experienced when developing such tools, leading to a more satisfying dev process in some cases.&lt;/p&gt;

&lt;p&gt;Budibase outshines its competition for several reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;users can self-host their apps on their own infrastructure&lt;/li&gt;
&lt;li&gt;users can create internal and external tools&lt;/li&gt;
&lt;li&gt;Budibase has an automation layer, allowing users to automate tasks such as email notifications, triggering webhooks, sending a report&lt;/li&gt;
&lt;li&gt;Budibase exports real single-page applications providing end-users with a better, more performant experience.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you've not tried Budibase, give it a try - it's simple to &lt;a href="https://www.budibase.com"&gt;get started&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Time-saving: 10/10&lt;br&gt;
Documentation: 6/10&lt;br&gt;
Integrations: 8/10&lt;br&gt;
Community: 7/10&lt;br&gt;
Release/Updates: 10/10&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/budibase/budibase"&gt;Visit Github Repo&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#posthog"&gt;
  &lt;/a&gt;
  Posthog
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SmPnvdNN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0uvvhcas8qelphi909w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SmPnvdNN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0uvvhcas8qelphi909w.png" alt="Posthog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PostHog is a product analytics platform built for the enterprise, with the differentiators of being open source and having a broader view of the tools needed to make a product successful.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-posthog-is-in-our-top-10"&gt;
  &lt;/a&gt;
  Why Posthog is in our top 10
&lt;/h4&gt;

&lt;p&gt;PostHog can be deployed on your infrastructure and provides a large set of tools to help improve your product, such as session recording, heatmaps, and feature flags, that are unique to PostHog in the product analytics space. Posthog is a young product, like Budibase, but its community and team are responsive and helpful.&lt;/p&gt;

&lt;p&gt;Time-saving: 6/10&lt;br&gt;
Documentation: 7/10&lt;br&gt;
Integrations: 6/10&lt;br&gt;
Community: 8/10&lt;br&gt;
Release/Updates: 7/10&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/posthog/posthog"&gt;View Github Repo&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#snyk"&gt;
  &lt;/a&gt;
  Snyk
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6PRotu2B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sfcrem90iaxz94u6ugxh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6PRotu2B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sfcrem90iaxz94u6ugxh.png" alt="Snyk"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Snyk is a developer-first platform for building cloud-native applications securely. In addition, it helps and encourages developers to remediate open source vulnerabilities during the development process.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-snyk-is-in-our-top-10"&gt;
  &lt;/a&gt;
  Why Snyk is in our top 10
&lt;/h4&gt;

&lt;p&gt;Software composition analysis is a pain. Not many developers like doing it. Or at least, in my experience, I didn't like doing it until Snyk came along. &lt;/p&gt;

&lt;p&gt;Snyk offers direct integration into your software development life cycle, supporting all the major IDEs, auto-remediation of security vulnerabilities, and visualization of dependencies. Snyk also provides custom patching. &lt;/p&gt;

&lt;p&gt;Time-saving: 7/10&lt;br&gt;
Documentation: 9/10&lt;br&gt;
Integrations: 9/10&lt;br&gt;
Community: 8/10&lt;br&gt;
Release/Updates: 7/10&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/snyk/snyk"&gt;View Github Repo&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#prisma"&gt;
  &lt;/a&gt;
  Prisma
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--71NMsaU_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzz4lwh1bfbnzcp9at3d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--71NMsaU_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzz4lwh1bfbnzcp9at3d.png" alt="Prisma"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Prisma is an open source next-generation ORM. It consists of the following parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Prisma Client&lt;/strong&gt;: Auto-generated and type-safe query builder for Node.js &amp;amp; TypeScript&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Prisma Migrate&lt;/strong&gt;: Migration system&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Prisma Studio&lt;/strong&gt;: GUI to view and edit data in your database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can use the Prisma Client in &lt;em&gt;any&lt;/em&gt; Node.js or TypeScript backend application. &lt;/p&gt;

&lt;p&gt;In other words, it's an ORM that turns your database into a REST/GraphQL API, which is fantastic!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-prisma-is-in-our-top-10"&gt;
  &lt;/a&gt;
  Why Prisma is in our top 10
&lt;/h4&gt;

&lt;p&gt;I love how Prisma provides a type-safe API that users can use across the frontend and backend. It also takes an SDL-first approach which is easier to understand and great for building things quickly.&lt;/p&gt;

&lt;p&gt;Time-saving: 6/10&lt;br&gt;
Documentation: 8/10&lt;br&gt;
Integrations: 8/10&lt;br&gt;
Community: 9/10&lt;br&gt;
Release/Updates: 8/10&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/prisma/prisma"&gt;Visit Github Repo&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#storybook"&gt;
  &lt;/a&gt;
  Storybook
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--436NQeZg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alwccruxexxg7tcsc3qg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--436NQeZg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alwccruxexxg7tcsc3qg.png" alt="Storybook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Storybook is a tool for UI development. It makes development faster and easier by isolating components, allowing developers to work on one component at a time. As a result, you can develop entire UIs without needing to start up a complex dev stack, force specific data into your database, or navigate around your application.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-storybook-is-in-our-top-10"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why Storybook is in our top 10&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Storybook integrates with all popular frontend frameworks, including React, Vue, and Svelte. It's also got a great library of add-ons, and the community is extensive and helpful. But, most importantly, the tool is excellent and allows me to present components in an isolated environment. With Storybook, I've found developers are also more aware of the components at their disposal, leading to less duplication and repetition.&lt;/p&gt;

&lt;p&gt;Time-saving: 4/10&lt;br&gt;
Documentation: 8/10&lt;br&gt;
Integrations: 9/10&lt;br&gt;
Community: 9/10&lt;br&gt;
Release/Updates: 7/10&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/storybookjs/storybook/"&gt;Visit Github Repo&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#vercel"&gt;
  &lt;/a&gt;
  Vercel
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m-Kg5wgA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pbcpfqg6vj61olk1gzf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m-Kg5wgA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pbcpfqg6vj61olk1gzf.png" alt="Vercel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vercel is a deployment and collaboration platform for frontend developers. Vercel puts the frontend developer first, giving them comprehensive tools to build high-performance websites and applications.&lt;/p&gt;

&lt;p&gt;Vercel enables developers to host websites and web services that deploy instantly and scale automatically – all without any configuration.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-vercel-is-in-our-top-10"&gt;
  &lt;/a&gt;
  Why Vercel is in our top 10
&lt;/h4&gt;

&lt;p&gt;Vercel is a joy to use. They truly accel at developer experience, performance, and UI design. Their community is one of the largest and fastest-growing on Github, and their forums are active and welcoming. They're also the creators of Next.js, which, in my opinion, is the second-best static site generator after Hugo.&lt;/p&gt;

&lt;p&gt;Time-saving: 7/10&lt;br&gt;
Documentation: 8/10&lt;br&gt;
Integrations: 8/10&lt;br&gt;
Community: 10/10&lt;br&gt;
Release/Updates: 10/10&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/vercel/vercel"&gt;Visit Github Repo&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#oh-my-zsh"&gt;
  &lt;/a&gt;
  Oh My Zsh
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bOMegRCF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mqhq9a23vgl1wto5b9rf.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bOMegRCF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mqhq9a23vgl1wto5b9rf.jpeg" alt="Oh My Zsh"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oh My Zsh is an open source, community-driven framework for managing your Zsh configuration. It's great if you use the command line often.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-oh-my-zsh-is-in-our-top-10"&gt;
  &lt;/a&gt;
  Why Oh My Zsh is in our top 10
&lt;/h4&gt;

&lt;p&gt;It, in my opinion, makes the command line more exciting.  It also comes bundled with over 275 plugins that's make your life as a software developer easier. It also comes with themes contributed by the community.&lt;/p&gt;

&lt;p&gt;Time-saving: 1/10&lt;br&gt;
Documentation: 6/10&lt;br&gt;
Integrations: 10/10&lt;br&gt;
Community: 10/10&lt;br&gt;
Release/Updates: 9/10&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ohmyzsh/ohmyzsh"&gt;Visit Github Repo&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#gitlab"&gt;
  &lt;/a&gt;
  Gitlab
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dwhhq_iO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zndky3btejmti7vebpi6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dwhhq_iO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zndky3btejmti7vebpi6.png" alt="Gitlab"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitLab is a single application that spans the entire software development lifecycle. If you're not using GitLab, your DevOps lifecycle is likely spread across any number of applications. These silos take overhead to integrate, manage, configure, and maintain, slowing down your team and your deployments. Moving to a single application will speed up your workflow and help you deliver better software faster. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-gitlab-is-in-our-top-10"&gt;
  &lt;/a&gt;
  Why Gitlab is in our top 10
&lt;/h4&gt;

&lt;p&gt;I prefer Github for version control. But, as the post suggests, this list comprises of open source development tools only. Gitlab is a close second and one I have used for 5+ years. Gitlab has additional features that Github does not, including; Code analytics, Service Desk, Design Management, Secrets management, and time tracking. In addition, it focuses more on the entire DevOps lifecycle, which is helpful if you prefer to only interact with one platform for a vast number of functions.&lt;/p&gt;

&lt;p&gt;Gitlab is particularly strong when it comes to package management. GitLab enables teams to package their dependencies, manage containers, and build artifacts with relative simplicity. The private, container, and package registry are built-in and preconfigured out-of-the-box to work seamlessly with GitLab source code management and CI/CD pipelines. Once again, Gitlab shines when you use all its tooling together - but this makes it hard to switch workflow due to lock-in. Gitlab is a behemoth in the open-source developer world, and if you have not tried it, I recommend you give it a go.&lt;/p&gt;

&lt;p&gt;Time-saving: 9/10&lt;br&gt;
Documentation: 10/10&lt;br&gt;
Integrations: 9/10&lt;br&gt;
Community: 9/10&lt;br&gt;
Release/Updates: 8/10&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#supabase"&gt;
  &lt;/a&gt;
  Supabase
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TLytFrUt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/puwl07sm0lgiipcq1yn1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TLytFrUt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/puwl07sm0lgiipcq1yn1.png" alt="Supabase"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Supabase is an open source Firebase alternative. Rather than one platform, Supabase is a 'suite of open source tools, stitched together to build a seamless developer experience.'&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-supabase-is-in-our-top-10"&gt;
  &lt;/a&gt;
  Why Supabase is in our top 10
&lt;/h4&gt;

&lt;p&gt;Supabase is packed full of features, including authentification, storage, and soon-to-be-released functions. Another reason I prefer Supabase is that its closed source competitor Firebase charges for API calls, leading to a few uneasy bills at the end of the month.&lt;/p&gt;

&lt;p&gt;Time-saving: 5/10&lt;br&gt;
Documentation: 6/10&lt;br&gt;
Integrations: 6/10&lt;br&gt;
Community: 10/10&lt;br&gt;
Release/Updates: 9/10&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/supabase/supabase"&gt;Visit Github Repo&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Open source development tools come in many shapes and sizes, and it's often a complex process when selecting the right tool for a new project. I hope my list helps you on your development journey.&lt;/p&gt;

&lt;p&gt;I would also like to share my thanks to the creators and communities of the platforms above. They all make the internet and the development process better - and that's truly wonderful, in my opinion.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to filter entries by linked references in GraphQL</title>
      <author>Salma Alam-Naylor</author>
      <pubDate>Wed, 16 Jun 2021 09:12:44 +0000</pubDate>
      <link>https://dev.to/contentful/how-to-filter-entries-by-linked-references-in-graphql-887</link>
      <guid>https://dev.to/contentful/how-to-filter-entries-by-linked-references-in-graphql-887</guid>
      <description>&lt;p&gt;Have you ever been frustrated by not being able to filter a collection by a linked entry value using the GraphQL API? For example, do you want to filter your blog posts by linked topics such as “javascript” or “tutorial”? Check out this quick guide that shows you how to get the data you need using the linkedFrom field in your query — it’s pretty nice!&lt;/p&gt;

&lt;p&gt;Let’s say you’re making great progress on building your new blog site. You’re using Contentful’s GraphQL API and it’s a good time. You’ve written some great blog posts — and now you want a way to categorize them in your front-end application. For example, you want to show posts tagged with “JavaScript” on a single URL. Nice.&lt;/p&gt;

&lt;p&gt;You create a new “Topic” content type, which contains text fields for &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;slug&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JNbx64Sy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj50x831n3p6glyuch4q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JNbx64Sy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj50x831n3p6glyuch4q.png" alt="Screenshot of a Topic content type in Contentful, showing name and slug fields."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You update your blog post content model with a new field called &lt;code&gt;topics&lt;/code&gt;, which is an array of linked references (remember &lt;code&gt;type: Array&amp;lt;Link&amp;gt;&lt;/code&gt; for later).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N0cer0HO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dl7h6p1wb6dcezo9h2xn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N0cer0HO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dl7h6p1wb6dcezo9h2xn.png" alt="A screenshot of a Blog Post content type in Contentful showing a Topic field which is an array of linked references."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You add the relevant topics as links to each blog post entry. Beautiful.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yKYF7DFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bfsltpijlm917hx3rev9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yKYF7DFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bfsltpijlm917hx3rev9.png" alt="A screenshot of the Topics field on a Blog Post entry, showing the linked topics Jamstack, Tutorials, Contentful and JavaScript."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here’s how the content model might look, visualized by &lt;a href="https://contentmodel.io/"&gt;contentmodel.io&lt;/a&gt;. The blog post has a field &lt;code&gt;topics&lt;/code&gt;, which is a reference to many (n) “Topic” content types, which have fields &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;slug&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wwqaOj21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0f33ej8et37wq168ymma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wwqaOj21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0f33ej8et37wq168ymma.png" alt="Screenshot of Contentful content model as visualised on contentmodel.io."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here’s how you might display collections of blog posts per topic in your web application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VQPmWjA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czxnz52h2ogm342955ua.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQPmWjA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czxnz52h2ogm342955ua.png" alt="A screenshot of a JavaScript topic page on my blog site."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now it’s time to construct the GraphQL query. Let’s search the docs to see how we can query the blog post collection and filter by linked topic!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XtZwk4Fu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4f5ehdd07ypdd3ezg9dz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XtZwk4Fu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4f5ehdd07ypdd3ezg9dz.png" alt="Screenshot of collection filter Contentful docs."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But what’s this? &lt;a href="https://www.contentful.com/developers/docs/references/graphql/#/reference/collection-filters/limitations"&gt;The documentation&lt;/a&gt; states that it is not possible to filter on fields of Type Array! &lt;strong&gt;So, what do we do?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xcsxh8rc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yhba5vukszy725aqy1x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xcsxh8rc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yhba5vukszy725aqy1x.png" alt="Screenshot of Contentful GraphQL filter limitations."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#theres-no-need-to-rage-quit"&gt;
  &lt;/a&gt;
  There’s no need to rage quit!
&lt;/h3&gt;

&lt;p&gt;This type of query is made possible with the &lt;strong&gt;linkedFrom&lt;/strong&gt; field! Let’s take a look at how it works.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-the-graphql-playground-app"&gt;
  &lt;/a&gt;
  Install the GraphQL Playground App
&lt;/h2&gt;

&lt;p&gt;Let’s investigate how we can build this query in the Contentful GraphQL Playground App within the Contentful web app. Install the app by navigating to Apps and follow the instructions for installation. Authorize the app to access your Contentful account and provide it with a Content Preview API key. Click save.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MBAot1Sl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtf3adsyw5f988z0s3xe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MBAot1Sl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtf3adsyw5f988z0s3xe.png" alt="Screenshot showing how to install GraphQL playground app in Contentful."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After installing the GraphQL Playground App, navigate to it via Apps in the navigation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--szHUPjeR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zwhli54ephbud9knsnxl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--szHUPjeR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zwhli54ephbud9knsnxl.png" alt="Screenshot of Contentful app navigation showing the GraphQL playground link."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What I love about GraphQL is that it’s self-documenting. Tools such as GraphQL Playground allow you to explore what data and types of queries are available on your content model. You can read the provided in-app documentation or use nifty auto-completion (we’ll do that later in the post). All this functionality is made possible by GraphQL Introspection Queries. &lt;a href="https://www.youtube.com/watch?v=udou5eV9QFw"&gt;Check out this video from Shy on Introspection Queries&lt;/a&gt; to learn more. It’s definitely worth a watch — I learned a lot!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-build-a-linkedfrom-query"&gt;
  &lt;/a&gt;
  How to build a linkedFrom query
&lt;/h2&gt;

&lt;p&gt;I like to think of a linkedFrom query as “reversing” the query you actually want to make. Instead of querying blog posts and filtering the results by linked topic, we’re going to query a single topic and fetch the blog posts that contain that topic as a linked reference.&lt;/p&gt;

&lt;p&gt;Let’s start by querying our topicCollection. If you’ve set up the topic content type as described above with the fields &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;slug&lt;/code&gt;, paste the query below into the GraphQL Playground App.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;topicCollection&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The response will include an array of items containing the name and slug properties as requested.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5bG_WmjW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1b5wyq07r99lemy47lts.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5bG_WmjW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1b5wyq07r99lemy47lts.png" alt="Screenshot of the topic collection query in the GraphQL playground app."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s update the query to fetch a single topic by slug — &lt;code&gt;javascript&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;topicCollection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"javascript"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here’s the updated response.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nk4BPSe2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhcb5w63yybwg0xvqxb7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nk4BPSe2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhcb5w63yybwg0xvqxb7.png" alt="A screenshot of a topicCollection query by slug javascript in the GraphQL playground."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What we really want to return in our query is a list of blog posts that contain the referenced topic &lt;code&gt;javascript&lt;/code&gt;. Here’s where we can use &lt;strong&gt;linkedFrom&lt;/strong&gt; — and thanks to Introspection Queries — the GraphQL Playground gives us some hints!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iF7CGRNs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wplrqgk1sdtstxt7f3m9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iF7CGRNs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wplrqgk1sdtstxt7f3m9.png" alt="Screenshot of linkedfrom popup helper in the GraphQL playground."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s request some fields from the &lt;code&gt;blogPostCollection&lt;/code&gt; items that reference the &lt;code&gt;javascript&lt;/code&gt; topic using the query below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;topicCollection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"javascript"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;linkedFrom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;blogPostCollection&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here’s the response:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--liutn7d2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7ndhogou84z3htzwc91.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--liutn7d2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7ndhogou84z3htzwc91.png" alt="A screenshot of a linkedFrom query in the GraphQL playground, fetching blog posts that have linked tags of JavaScript."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And there you have it! &lt;/p&gt;

&lt;p&gt;Using the linkedFrom field is an effective way to request all entries that reference entries of Type Array. I’ve really enjoyed learning about this!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-realworld-example"&gt;
  &lt;/a&gt;
  A real-world example
&lt;/h2&gt;

&lt;p&gt;If you’d like to see the complete query for my topics pages, &lt;a href="https://github.com/whitep4nth3r/p4nth3rblog/blob/1d4cce53ea440e6dabb1eaa52c4c5322eac08ce4/contentful/BlogPost.js#L381"&gt;take a look at this file in the code&lt;/a&gt; for my personal blog site. &lt;a href="https://whitep4nth3r.com/topics/javascript"&gt;The statically generated page is available to view here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Is there something you’d like to learn more about to get the most out of Contentful? Come and let us know in the &lt;a href="https://www.contentful.com/slack"&gt;Community Slack&lt;/a&gt;. We’re a friendly bunch!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>graphql</category>
    </item>
    <item>
      <title>Write a VS Code extension in JavaScript, not TypeScript ^</title>
      <author>Rob OLeary</author>
      <pubDate>Wed, 16 Jun 2021 08:44:11 +0000</pubDate>
      <link>https://dev.to/robole/write-a-vs-code-extension-in-javascript-not-typescript-727</link>
      <guid>https://dev.to/robole/write-a-vs-code-extension-in-javascript-not-typescript-727</guid>
      <description>&lt;p&gt;&lt;small&gt;^ Write an extension in TypeScript or JavaScript or CoffeeScript - whatever script you prefer! This is not meant to be contentious.&lt;/small&gt; &lt;/p&gt;

&lt;p&gt;The &lt;a href="https://code.visualstudio.com/api"&gt;official docs for the VS Code API&lt;/a&gt; are oriented towards TypeScript and &lt;a href="https://github.com/microsoft/vscode-extension-samples"&gt;all of the examples&lt;/a&gt; are written in TypeScript. Microsoft is behind VS Code and TypeScript, so that is not unexpected. If you read the docs, it may not be apparent that you &lt;em&gt;can&lt;/em&gt; build an extension in JavaScript. &lt;/p&gt;

&lt;p&gt;If you are more experienced, you may be saying "duh", that's obvious it's an &lt;a href="https://www.electronjs.org/"&gt;electron&lt;/a&gt; app. But not everyone has the experience to make this corollary, and I think it would be a shame if that fact passes people by. Being able to hack your code editor in a language that &lt;em&gt;you know already&lt;/em&gt; is a great opportunity. Customizing something you use a lot can be enormously rewarding. 🏆&lt;/p&gt;

&lt;p&gt;So, the purpose of this article is to offer a JavaScript alternative to the official examples, and offer some insight and opinions on building extensions. Like me, you may want to write an extension, but may not know TypeScript. It would have been a detour for me to learn TypeScript when I just wanted to scratch an itch I had. I think taking on too many new things in one project is a recipe for frustration and failure!&lt;/p&gt;

&lt;p&gt;Here is a repo of examples.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/robole"&gt;
        robole
      &lt;/a&gt; / &lt;a href="https://github.com/robole/vscode-javascript-extensions"&gt;
        vscode-javascript-extensions
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      VS Code extension examples written in in JavaScript
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
VS Code Extension Examples&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/robole/vscode-javascript-extensions/main/banner.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YY0NSUxZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/robole/vscode-javascript-extensions/main/banner.png" alt="banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository contains &lt;strong&gt;example extensions written in JavaScript&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The VS Code docs &lt;a href="https://github.com/microsoft/vscode-extension-samples"&gt;examples&lt;/a&gt; are written in TypeScript. The purpose of this repo is to provide clear, simple JavaScript alternatives to these.&lt;/p&gt;
&lt;p&gt;Each folder contains a complete extension that explains one topic from the &lt;a href="https://code.visualstudio.com/api/references/vscode-api" rel="nofollow"&gt;VS Code API&lt;/a&gt; or VS Code's &lt;a href="https://code.visualstudio.com/api/references/contribution-points" rel="nofollow"&gt;Contribution Points&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can expect the following from each example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An explanation of its functionality&lt;/li&gt;
&lt;li&gt;A gif or screenshot demonstrating its usage&lt;/li&gt;
&lt;li&gt;Listing of used VS Code API and Contribution Points&lt;/li&gt;
&lt;li&gt;Link to a guide on VS Code website, if it has one&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;You can read this guide &lt;a href="https://blog.logrocket.com/writing-vs-code-extensions-in-javascript/" rel="nofollow"&gt;Writing VS Code extensions in JavaScript&lt;/a&gt; to get up and running quickly.&lt;/strong&gt; It gives a clear overview of the important namespaces and breaks down some of the jargon of the API. It covers some of the examples from this repo.&lt;/p&gt;
&lt;h2&gt;
Prerequisites&lt;/h2&gt;
&lt;p&gt;You need to have &lt;a href="https://nodejs.org/en/" rel="nofollow"&gt;Node&lt;/a&gt; and…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/robole/vscode-javascript-extensions"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I duplicated the format of Microsoft's repo, but with one big exception. They have a table listing the examples with 3 short fields, I made a short section for each example with a screenshot, a description, and a few other relevant fields. So what? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JwxffcpE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/66ww73fxolucsd23jbq3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JwxffcpE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/66ww73fxolucsd23jbq3.png"&gt;&lt;/a&gt;&lt;/p&gt;
JavaScript examples (L), TypeScript examples (R)



&lt;p&gt;I found it a slog to understand what example correlated to what part of the UI, you have to click on each folder to find out if you are not sure. There isn't a good guide to give an overview of the UI. You may not be able to guess where a &lt;code&gt;progress&lt;/code&gt; lives or what a &lt;code&gt;webview&lt;/code&gt; is, without digging deeper. There has been some recent efforts to improve this in the docs, but the info is still spread out and lacks screenshots.&lt;/p&gt;

&lt;p&gt;To help with this, I wrote &lt;a href="https://blog.logrocket.com/writing-vs-code-extensions-in-javascript/"&gt;a more complete introductory guide&lt;/a&gt;. What I found was really missing in the docs, was a clear overview of the architecture of the API, and tying the API to actual UI. It can be a guessing sometimes to find out what functions you would use to modify some part of the UI. You can find this in the section &lt;em&gt;Architecture overview of the API&lt;/em&gt;. The guide also covers getting a project set-up,and how to interpret the API without any TypeScript knowledge.&lt;/p&gt;

&lt;p&gt;If you want an example of a small and relatively simple example of an extension written in JavaScript, you can look at the source code for &lt;a href="https://github.com/robole/vscode-marky-stats"&gt;Marky Stats&lt;/a&gt;. The extension adds a status bar item giving some stats about the active markdown document (as below).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PPbF_4j9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yxlb946naqvqjb8ezpyr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PPbF_4j9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yxlb946naqvqjb8ezpyr.gif" alt="marky stats"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-word-on-understanding-the-api"&gt;
  &lt;/a&gt;
  A word on understanding the API
&lt;/h2&gt;

&lt;p&gt;If you look closer at the TypeScript examples, the first two are : &lt;code&gt;Webview&lt;/code&gt; and a &lt;code&gt;Webview View&lt;/code&gt;. That's not a mistake. They are 2 different things. They are named that way in the API! 🤔&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cx2uNF1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gcypscgukxnpisubp4d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cx2uNF1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gcypscgukxnpisubp4d.png" alt="naming webview webview view"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is a &lt;a href="https://code.visualstudio.com/api/extension-guides/overview"&gt;guides section&lt;/a&gt; in the docs that has guides that cover different aspects of the API with varying degrees of detail and clarity. The &lt;a href="https://code.visualstudio.com/api/extension-guides/webview"&gt;webview API guide&lt;/a&gt; is one of the most detailed and probably will clear things up for you, but it's not the easiest of reads. I found myself sleuthing around quite a bit to figure out how things worked. 🕵️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9E-S84x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cq0pemuv6fngkmybmt81.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9E-S84x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cq0pemuv6fngkmybmt81.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to see a more advanced JavaScript example of a &lt;code&gt;webview&lt;/code&gt;, you can look at the source code of my extension &lt;a href="https://github.com/robole/vscode-snippets-ranger"&gt;Snippets Ranger&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9z6fYnFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p28wyj9mo244ugotdhl2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9z6fYnFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p28wyj9mo244ugotdhl2.gif" alt="Snippets Ranger"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Often, it is easier to look at a good example than the &lt;a href="https://code.visualstudio.com/api/references/vscode-api"&gt;API reference&lt;/a&gt;. You only get the minimum info in an function description. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z9D1GCjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qi4qahubdsf4dmp97n0d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z9D1GCjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qi4qahubdsf4dmp97n0d.png" alt="createwebviewpanel api reference"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I had to see an example to understand what the &lt;code&gt;viewType&lt;/code&gt; was exactly. 🤦 Really it is an ID. Just keep this in mind when you are looking through different parts of the API. You may ping pong around a bit to find all the answers you need.&lt;/p&gt;

&lt;p&gt;I don't want to be hard on anyone who builds a big product like this. It is hard to build good APIs, and documentation often is the last thing to do on the back of a lot of other stuff. But I did find it hard to get to grips with the Extension API. It did not feel intuitive. &lt;/p&gt;

&lt;p&gt;It could be me, of course, but I don't think it's just me! A good API breathes an easy familiarity that gives you the power to guess function names without needing them look it up. I had to most things up. &lt;/p&gt;

&lt;p&gt;I did break through to the other side eventually. Now I can say that I have a good understanding of big portions of the API, but the knowledge was won the hard way. I did have fun making some extensions, but it was peppered with frustration also.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-word-on-publishing-extensions"&gt;
  &lt;/a&gt;
  A word on publishing extensions
&lt;/h2&gt;

&lt;p&gt;There is a CLI tool called &lt;a href="https://github.com/microsoft/vscode-vsce"&gt;vsce&lt;/a&gt; for packaging and publishing extensions. It's easy to use. This will create a &lt;code&gt;vsix&lt;/code&gt; package that can be installed as an extension.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;myExtension
vsce package
&lt;span class="c"&gt;# myExtension.vsix generated&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;a href="https://code.visualstudio.com/api/working-with-extensions/publishing-extension"&gt;Publishing Extension&lt;/a&gt; guide covers the bases for learning how to publish an extension but people do trip up along the way (I did). I contributed to the docs to try to make a couple of steps clearer!&lt;/p&gt;

&lt;p&gt;It's not complicated but you have to follow the steps closely to succeed. You need to have a microsoft account and pick some settings in an azure dashboard. You'll get a publisher ID and key, and with them you can use &lt;code&gt;vsce&lt;/code&gt; to publish the extension. &lt;/p&gt;

&lt;p&gt;The problem is that a couple of the steps seem arbitrary and you may be tempted to leave something out. Just check the boxes like the guide says! If you get stuck, you can always upload your &lt;code&gt;vsix&lt;/code&gt; file to the marketplace dashboard at &lt;a href="https://marketplace.visualstudio.com/manage/"&gt;https://marketplace.visualstudio.com/manage/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pztRmgud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n35fmzepjvaksy4lrh0o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pztRmgud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n35fmzepjvaksy4lrh0o.png" alt="manage dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For VS Codium, the marketplace is &lt;a href="https://open-vsx.org/"&gt;Open VSX Registy&lt;/a&gt;. The process has changed since I did it, but I found the registration a smoother experience than with Microsoft - less steps, less info required. Now, it is part of the Eclipse Foundation, read &lt;a href="https://www.eclipse.org/legal/open-vsx-registry-faq/#faq-4"&gt;here for more info on publishing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I use this &lt;a href="https://github.com/HaaLeo/publish-vscode-extension"&gt;github action&lt;/a&gt; to automate publishing of  an extension to both marketplaces, publication is triggered when the &lt;code&gt;main&lt;/code&gt; branch is updated. There a couple of other github actions for &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-word-on-bundling"&gt;
  &lt;/a&gt;
  A word on bundling
&lt;/h2&gt;

&lt;p&gt;Like any JavaScript project, you can use any bundler you wish. Bundling can make even an extension with just a few modules load considerably faster. I looked at this with &lt;a href="https://github.com/robole/vscode-marky-stats"&gt;Marky Stats&lt;/a&gt; which has 3 short modules, and it improved the loading time. This is optimization, if you are beginner, do not feel obligated to do it. Pace yourself!&lt;/p&gt;

&lt;p&gt;There is a &lt;a href="https://code.visualstudio.com/api/working-with-extensions/bundling-extension"&gt;guide&lt;/a&gt; that discusses using webpack and ESBuild. A simple config will is sufficient for most cases, if you make a &lt;code&gt;webview&lt;/code&gt; the config needs more effort to handle images and CSS files. Most of &lt;a href="https://marketplace.visualstudio.com/publishers/robole"&gt;my published extensions&lt;/a&gt; use webpack if you want to see a real example. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope the info I provided here will give you a gentler learning curve for building an extension in JavaScript. It can be a fun and rewarding experience, but it require some patience and persistence to get to grips with the API. If you have questions, you can raise an issue on the repo, I will help you if I can. I hope to see a cool extension from you soon! 🤓&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;You can subscribe to my &lt;a href="https://roboleary.net/feed.xml"&gt;RSS feed&lt;/a&gt; to get my latest posts.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>javascript</category>
      <category>node</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Solution: Generate Parentheses</title>
      <author>seanpgallivan</author>
      <pubDate>Wed, 16 Jun 2021 08:42:44 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-generate-parentheses-52dk</link>
      <guid>https://dev.to/seanpgallivan/solution-generate-parentheses-52dk</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/generate-parentheses/discuss/1276139"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-22-medium-generate-parentheses"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/generate-parentheses/"&gt;Leetcode Problem #22 (&lt;em&gt;Medium&lt;/em&gt;): Generate Parentheses&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given &lt;code&gt;n&lt;/code&gt; pairs of parentheses, write a function to &lt;em&gt;generate all combinations of well-formed parentheses&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;n = 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;["((()))","(()())","(())()","()(())","()()()"]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;n = 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;["()"]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= n &amp;lt;= 8&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;We can make short work of this problem with a basic branching &lt;strong&gt;recursive&lt;/strong&gt; function (&lt;strong&gt;dfs&lt;/strong&gt;). Our recursive function will iterate through the index positions (&lt;strong&gt;pos&lt;/strong&gt;) of a possible result. At each &lt;strong&gt;pos&lt;/strong&gt;, we can add an open parenthesis if there's more remaining space than unclosed parentheses (&lt;strong&gt;open&lt;/strong&gt;) and we can add a closed parenthesis if there are any unclosed parentheses. Once we reach the end of the result, we can add it to our answer array (&lt;strong&gt;ans&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;To make things easier, we can use &lt;strong&gt;bit manipulation&lt;/strong&gt; to pass the sequence of parentheses (&lt;strong&gt;seq&lt;/strong&gt;) for our potential result as an integer to each new recursion level. Then we just have to translate &lt;strong&gt;seq&lt;/strong&gt; to a parentheses string before adding it to &lt;strong&gt;ans&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Once we're all done, we can just &lt;strong&gt;return ans&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O((2 * N)!/(N! * N!)&lt;/strong&gt; reflecting the &lt;strong&gt;2N choose N&lt;/strong&gt; possible arrangements of parentheses&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(N)&lt;/strong&gt; for the recursion stack and &lt;strong&gt;res&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;generateParenthesis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dfs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;seq&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;seq&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generateParenthesis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"("&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s"&gt;")"&lt;/span&gt;
                &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;opn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opn&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;generateParenthesis&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;dfs&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;StringBuilder&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;StringBuilder&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
                &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;append&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;seq&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s"&gt;"("&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;")"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;generateParenthesis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nl"&gt;private:&lt;/span&gt;
    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s"&gt;"("&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;")"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
  </channel>
</rss>
