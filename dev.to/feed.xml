<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Node.JS - Foal framework - Version 2.3 release notes</title>
      <author>Lo√Øc Poullain</author>
      <pubDate>Mon, 26 Apr 2021 05:31:45 +0000</pubDate>
      <link>https://dev.to/loicpoullain/node-js-foal-framework-version-2-3-release-notes-50mc</link>
      <guid>https://dev.to/loicpoullain/node-js-foal-framework-version-2-3-release-notes-50mc</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This article was originally published on &lt;a href="https://foalts.org/blog/2021/04/22/version-2.3-release-notes"&gt;https://foalts.org/blog/2021/04/22/version-2.3-release-notes&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Version 2.3 of Foal has been released! Here are the improvements that it brings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GragriQL&lt;/li&gt;
&lt;li&gt;Support for &lt;code&gt;.env.local&lt;/code&gt; files&lt;/li&gt;
&lt;li&gt;Prisma documentation&lt;/li&gt;
&lt;li&gt;Social auth fixes&lt;/li&gt;
&lt;li&gt;Service available during authentication&lt;/li&gt;
&lt;li&gt;Streams and base64 encoding utilities&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#graphiql"&gt;
  &lt;/a&gt;
  GraphiQL
&lt;/h2&gt;

&lt;p&gt;From version 2.3, it is possible to generate a GraphiQL page in one line of code. This can be useful if you quickly need to test your API.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; @foal/graphiql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fb-e6wi1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://foalts.org/assets/images/graphiql-f099ed2191f41190bd6569d1b5cd1267.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fb-e6wi1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://foalts.org/assets/images/graphiql-f099ed2191f41190bd6569d1b5cd1267.png" alt="GraphiQL"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;app.controller.ts&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GraphiQLController&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@foal/graphiql&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GraphqlApiController&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./services&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AppController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;subControllers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
    &lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/graphql&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GraphqlApiController&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/graphiql&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GraphiQLController&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The page is also customizable and you can provide additional options to change the UI or the API endpoint.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;GraphiQL2Controller&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;GraphiQLController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;cssThemeURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.23.0/theme/solarized.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;apiEndpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nl"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;GraphiQLControllerOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;docExplorerOpen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;editorTheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;solarized light&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#support-for-raw-envlocal-endraw-files"&gt;
  &lt;/a&gt;
  Support for &lt;code&gt;.env.local&lt;/code&gt; files
&lt;/h2&gt;

&lt;p&gt;Foal's configuration system already supported &lt;code&gt;.env&lt;/code&gt; files in previous versions. As of version 2.3, the framework also supports &lt;code&gt;.env.local&lt;/code&gt; files.&lt;/p&gt;

&lt;p&gt;This can be useful in case you want to have two &lt;code&gt;.env&lt;/code&gt; files, one to define the default env vars needed by the application and another to override these values on your local machine.&lt;/p&gt;

&lt;p&gt;If a variable is defined in both files, the value in the &lt;code&gt;.env.local&lt;/code&gt; file will take precedence.&lt;/p&gt;

&lt;p&gt;Similarly, you can also define environment-specific local files (&lt;code&gt;.env.development.local&lt;/code&gt;, &lt;code&gt;.env.production.local&lt;/code&gt;, etc).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prisma-documentation"&gt;
  &lt;/a&gt;
  Prisma documentation
&lt;/h2&gt;

&lt;p&gt;The documentation has been expanded to include &lt;a href="https://foalts.org/docs/databases/using-another-orm"&gt;examples&lt;/a&gt; of how to use Prisma with Foal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#base-64-and-base-64-url-utilities"&gt;
  &lt;/a&gt;
  Base 64 and base 64 URL utilities
&lt;/h2&gt;

&lt;p&gt;Two functions are provided to convert base64 encoded strings to base64url encoded strings and vice versa.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;convertBase64ToBase64url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;convertBase64urlToBase64&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@foal/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;convertBase64ToBase64url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;base64Str&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;str2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;convertBase64urlToBase64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;base64urlStr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#converting-streams-to-buffers"&gt;
  &lt;/a&gt;
  Converting Streams to Buffers
&lt;/h2&gt;

&lt;p&gt;In case you need to convert a readable stream to a concatenated buffer during testing, you can now use the &lt;code&gt;streamToBuffer&lt;/code&gt; function for this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;streamToBuffer&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@foal/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;streamToBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#accessing-services-during-authentication"&gt;
  &lt;/a&gt;
  Accessing services during authentication
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;user&lt;/code&gt; option of &lt;code&gt;@JWTRequired&lt;/code&gt; and &lt;code&gt;@UseSessions&lt;/code&gt; now gives you the possibility to access services.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;UserService&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;JWTRequired&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;services&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;UserService&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ApiController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;getProducts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ctx.user is the object returned by UserService.&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#bug-fixes"&gt;
  &lt;/a&gt;
  Bug Fixes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#social-authentication"&gt;
  &lt;/a&gt;
  Social authentication
&lt;/h3&gt;

&lt;p&gt;Social authentication controllers could sometimes return 500 errors, depending on the social provider you were using. This was due to a problem of string encoding in the callback URL. This bug has been fixed in this version.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>React setup with webpack for beginners</title>
      <author>Deepanjan Ghosh</author>
      <pubDate>Mon, 26 Apr 2021 04:36:50 +0000</pubDate>
      <link>https://dev.to/deepanjangh/react-setup-with-webpack-for-beginners-2a8k</link>
      <guid>https://dev.to/deepanjangh/react-setup-with-webpack-for-beginners-2a8k</guid>
      <description>&lt;p&gt;There are many ways to set up a react project and the popular ones you may hear of create-react-app and webpack. So today we'll see how to set up a react project with webpack and babel in a simple way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-is-webpack"&gt;
  &lt;/a&gt;
  So what is Webpack?
&lt;/h2&gt;

&lt;p&gt;The definition says Webpack is a static module bundler for modern JavaScript applications and what do we mean by that?&lt;/p&gt;

&lt;p&gt;Webpack is a bundler that bundles all the javascript files and internally it makes a dependencies graph that is responsible for mapping all your modules and depending on this graph it creates a bundle.js file that can be plugged into your HTML file. &lt;/p&gt;

&lt;p&gt;So in this article, I want to show you how to set up your first react app with webpack and this will be a very minimal setup and afterward, you'll be able to extend the features depending on your needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1initial-phase-folder-setup"&gt;
  &lt;/a&gt;
  1.Initial Phase (Folder Setup)
&lt;/h2&gt;

&lt;p&gt;First, we'll start by creating a Project folder and then a &lt;em&gt;public&lt;/em&gt; and &lt;em&gt;src&lt;/em&gt; folder inside it. Public folder will be used to serve the application and this folder will be everything to publish your application. In the src folder, all the javascript files will be there and this folder will be bundled into a single javascript file and will be placed automatically in the public folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir webpack-react
cd webpack-react
mkdir public src 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we'll create an index.html file inside the public folder with the following content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd public
touch index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;React with webpack&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello Webpack&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./bundle.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-setting-up-webpack"&gt;
  &lt;/a&gt;
  2. Setting up Webpack
&lt;/h2&gt;

&lt;p&gt;Now before we start installing webpack and other npm packages we need to set up package.json first. Setting up package.json is easy either you can do it manually by running &lt;code&gt;npm init&lt;/code&gt; by this you can fill in all the details by yourself or you can let npm handle it by simply adding -y at the end like &lt;code&gt;npm init -y&lt;/code&gt;. This will create the package.json in the root folder.&lt;br&gt;
Let's install some packages first and I'll explain each one by one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i webpack webpack-cli webpack-dev-server --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;We need &lt;code&gt;webpack&lt;/code&gt; to bundle all our javascript code to single and to build our application.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;webpack-dev-server&lt;/code&gt; is needed to serve the application in the local web server for development purposes.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;webpack-cli&lt;/code&gt; provides a flexible set of commands for developers to increase speed when setting up a custom webpack project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;(Note: Add a .gitignore file to avoid node_modules to push in git)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let's add a &lt;code&gt;start&lt;/code&gt; script now in &lt;em&gt;package.json&lt;/em&gt; to run &lt;code&gt;web-dev-server&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"webpack serve --mode development"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can run &lt;code&gt;npm start&lt;/code&gt; on your command line to start the application on your local server. Now let's generate &lt;em&gt;bundle.js&lt;/em&gt; and see how we can bundle all the javascript code into a single file. Now we need to add a webpack configuration so now we will add &lt;em&gt;webpack.config.js&lt;/em&gt; in the root folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch webpack.config.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and update the &lt;code&gt;start&lt;/code&gt; script in &lt;em&gt;package.json&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;start:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"webpack serve --config ./webpack.config.js --mode development"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, let's create an index.js file inside src where all the javascript code will be linked.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd src
touch index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and add a simple log inside it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now will add an entry point inside the webpack configuration to bundle in our case it is &lt;em&gt;src/index.js&lt;/em&gt; and if &lt;em&gt;index.js&lt;/em&gt; imports another javascript file it bundles them too.&lt;br&gt;
The next step is to add an output file which will be &lt;em&gt;bundle.js&lt;/em&gt; and this file is linked to the &lt;em&gt;public/index.html&lt;/em&gt; and third step is to add a folder that will be used by the webpack dev server to serve our application to the browser. The content will look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/index.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bundle.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;devServer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;contentBase&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;(Note: path is used to resolve them properly across the operation system)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now run &lt;code&gt;npm start&lt;/code&gt; in your command line you'll see Hello World logged in your browser console.&lt;/p&gt;

&lt;p&gt;Now we will add Babel to transpile back the modern javascript features (ES6 and others) to vanilla javascript. Let's install some packages for babel.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i @babel/core @babel/preset-env babel-loader --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;@babel/preset-env&lt;/code&gt; is a smart preset that allows you to use the latest JavaScript without needing to micromanage which syntax transforms (and optionally, browser polyfills) are needed by your target environment(s).&lt;/li&gt;
&lt;li&gt;Loaders tell webpack how to interpret and translate files. The transformation happens on a per-file basis before adding to the dependency graph.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We need to add the babel in the build process in &lt;em&gt;webpack.config.js&lt;/em&gt;. Your &lt;em&gt;webpack.config.js&lt;/em&gt; will look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/index.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.(&lt;/span&gt;&lt;span class="sr"&gt;js&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/node_modules/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;babel-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bundle.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;devServer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;contentBase&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;(Note: module is added in which we have rules which will test all the .js file and exclude node_modules and will be using babel-loader for it)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now let's add a babel configuration for that let's create a &lt;em&gt;.babelrc&lt;/em&gt; file in the root folder and add the below configuration inside.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch .babelrc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;presets&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@babel/preset-env&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-react-with-webpack"&gt;
  &lt;/a&gt;
  3. React with webpack
&lt;/h2&gt;

&lt;p&gt;Till now we have set up the webpack and babel configuration to successfully bundle our javascript code but react is not all javascript, therefore, we need to support react syntax which is the .jsx file. So we need babel again to transpile the code. Let's add some more dependencies for that&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i @babel/preset-react --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and also add the configuration to &lt;em&gt;./babelrc&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;presets&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@babel/preset-env&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@babel/preset-react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to add rules in &lt;em&gt;webpack.config.js&lt;/em&gt; to make jsx file transpile.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/index.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.(&lt;/span&gt;&lt;span class="sr"&gt;js|jsx&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/node_modules/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;babel-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.jsx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bundle.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;devServer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;contentBase&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can write React with jsx code. Let's add the react packages and create a component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i react react-dom --save
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Creating a Home component inside a component folder in src.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd src
mkdir components
touch Home.jsx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Home.jsx&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;Application&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update the &lt;code&gt;src/index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Home&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And at last, let's update the index.html&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Hello React&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./bundle.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run &lt;code&gt;npm start&lt;/code&gt; again and you'll able to see the &lt;code&gt;Home&lt;/code&gt; component render and there it is how you can set up react with webpack. Although this is a very basic setup, this will give you an idea of how to add more loader and plugin and set it up according to your needs. I'll be writing more about the advanced features and how to make it work with your webpack in the upcoming posts.&lt;/p&gt;

&lt;p&gt;Don't forget to give a ‚ù§Ô∏è if you liked it and thanks for reading. Happy coding!! üñ• &lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Note: I have not shown how to use CSS with webpack, I will explain those step in a future post and will also share a boilerplate of react with webpack soon.)&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>webpack</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Introducing Berry React - Material Design Admin Template</title>
      <author>Rakesh S Nakrani</author>
      <pubDate>Mon, 26 Apr 2021 04:08:13 +0000</pubDate>
      <link>https://dev.to/rakesh_nakrani/introducing-berry-react-material-design-admin-template-27dk</link>
      <guid>https://dev.to/rakesh_nakrani/introducing-berry-react-material-design-admin-template-27dk</guid>
      <description>&lt;p&gt;I‚Äôm pleased to announce our brand new product in the season of spring. &lt;a href="http://berrydashboard.io"&gt;Berry&lt;/a&gt; - The complete React Admin Template package for making beautiful web applications faster.&lt;/p&gt;

&lt;p&gt;Crafting a Dashboard Template is not a small task, each aspect needs to be carefully designed &amp;amp; developed. There are hundreds of pages, components, 3‚Äôrd party plugins &amp;amp; lots of external factors like browser compatibility, cross-device testing, etc, and each of these needs attention in detail.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pain Points&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Knowing about your user needs is the key thing before launching any great product.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have been developing Dashboards for 7 years &amp;amp; seen hundreds of templates and found the most common issues in major templates like inconsistent UI, lack of performance, outdated code, missing components, incomplete documentation, no knowledge base, buggy code without any standard, support issues, etc. Here, at CodedThemes we are seriously considering these issues &amp;amp; putting a positive effort to resolve them through the entire Berry project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our Goal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Our goal is to reduce end-user efforts by catering above pain points. We have created new features, app pages, plugin integration which makes Berry unique in the crowd. It is always updated for our beloved users with the latest technologies &amp;amp; trends. While designing the Berry, we are always committed to quality work with high code standards &amp;amp; UI design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The team behind Berry Project&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p18TXs_z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/unzrxhfhba0zitv4nn85.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p18TXs_z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/unzrxhfhba0zitv4nn85.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We adopt the mantra ‚ÄúSmall team, big dream‚Äù and keep our team small and agile.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Berry is managed by the team &lt;a href="http://codedthemes.com"&gt;CodedThemes&lt;/a&gt;. We believe that effective communication is the key to building a great product as a team. Berry is carefully designed by our team for you to be our customer forever. Berry is developed while we all work from home which proves that we are a great team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why Berry Dashboard Template?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Berry is a complete package for your end-to-end solution. We are considering it as a long-run product with continuous development with plenty of features and ready-to-use components. Berry v1.0 brings everything you need for dashboard development. We have added the following high-end features in the initial release.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Modern aesthetics UI design&lt;/li&gt;
&lt;li&gt;Quick Start with Skeleton version&lt;/li&gt;
&lt;li&gt;Hundreds of UI components &amp;amp; Elements&lt;/li&gt;
&lt;li&gt;Apps &amp;amp; Pre-build useful pages&lt;/li&gt;
&lt;li&gt;Fully Responsive, all modern browser supported&lt;/li&gt;
&lt;li&gt;Easy to use code structure&lt;/li&gt;
&lt;li&gt;Flexible &amp;amp; High-Performance code&lt;/li&gt;
&lt;li&gt;Easy Documentation Guide&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;V1.0 Key Features Highlight&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Following are features that make Berry a top-class React Material Dashboard Template.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;100+ Ready to use pages&lt;/li&gt;
&lt;li&gt;Built with Material-UI v5 components library to achieve the best Material Design experience in React Dashboard Template.&lt;/li&gt;
&lt;li&gt;Figma design files&lt;/li&gt;
&lt;li&gt;Authentication Methods - Auth0, Firebase, JWT&lt;/li&gt;
&lt;li&gt;Built with React Hooks API&lt;/li&gt;
&lt;li&gt;Easy to Folder Structure&lt;/li&gt;
&lt;li&gt;Redux &amp;amp; React Context API as State Manager&lt;/li&gt;
&lt;li&gt;React Router for Navigation Routing&lt;/li&gt;
&lt;li&gt;Axios&lt;/li&gt;
&lt;li&gt;Create React App&lt;/li&gt;
&lt;li&gt;Code Splitting&lt;/li&gt;
&lt;li&gt;Dark / Light Mode&lt;/li&gt;
&lt;li&gt;Live customizer - Font Selection &amp;amp; other Layout options&lt;/li&gt;
&lt;li&gt;CSS-in-JS where CSS is composed using JavaScript instead of defined in external files&lt;/li&gt;
&lt;li&gt;Multi-Language Support&lt;/li&gt;
&lt;li&gt;LTR / RTL (Right to Left) Mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;About launch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We are planning to launch the open-source version of Berry at the end of April 2021 &amp;amp; you can download it from your &lt;a href="https://github.com/codedthemes"&gt;GitHub&lt;/a&gt; account. Also, it is expected to launch the Premium version of Berry Template in the first week of May 2021 at Material-UI &lt;a href="https://material-ui.com/store/"&gt;Store&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pre-launch offer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We are giving away the pre-launch introductory offer of up to 30% for the Dev.to the community. Stay connected and do not forget to &lt;a href="https://landing.mailerlite.com/webforms/landing/c4r3r1"&gt;subscribe&lt;/a&gt; for avail offer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Next Plan&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Considering Berry a long-run project we are continuously make effort to make Berry a really high-end react dashboard template involving the following activities for future plans.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Knowledge Base for more easiness for users&lt;/li&gt;
&lt;li&gt;Video tutorial series - Guided Installation videos, detailed setup process that makes less burden to work with Berry&lt;/li&gt;
&lt;li&gt;Roadmap for future releases&lt;/li&gt;
&lt;li&gt;Focus on detailing the Documentation&lt;/li&gt;
&lt;li&gt;&amp;amp; lots more to come&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Summer up&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To summer up this post, This post gives the context idea of the Berry Project. I'll share you more detailed post once we launch the product.&lt;/p&gt;

&lt;p&gt;I would like to know your feedback/suggestions on our upcoming product Berry. You can comment here or contact us via social handles. I'm happy to serve you well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Social Handles&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Website - &lt;a href="http://berrydashboard.io"&gt;http://berrydashboard.io&lt;/a&gt;&lt;br&gt;
Blog - &lt;a href="https://blog.berrydashboard.io"&gt;https://blog.berrydashboard.io&lt;/a&gt;&lt;br&gt;
Facebook - &lt;a href="https://www.facebook.com/codedthemes"&gt;https://www.facebook.com/codedthemes&lt;/a&gt;&lt;br&gt;
Twitter - &lt;a href="https://twitter.com/codedthemes"&gt;https://twitter.com/codedthemes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Many Thanks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I'm very grateful to &lt;a href="https://twitter.com/olivtassinari"&gt;Olivier&lt;/a&gt; co-founder at &lt;a href="https://material-ui.com"&gt;Material-UI&lt;/a&gt; for his help in creating Berry. On the other ends, I'm very thankful for team &lt;a class="mentioned-user" href="https://dev.to/codedthemes"&gt;@codedthemes&lt;/a&gt;
 to give tremendous effort to this project.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Contributing to Prometheus</title>
      <author>Atibhi Agrawal</author>
      <pubDate>Mon, 26 Apr 2021 03:45:43 +0000</pubDate>
      <link>https://dev.to/asquare14/contributing-to-prometheus-5f11</link>
      <guid>https://dev.to/asquare14/contributing-to-prometheus-5f11</guid>
      <description>&lt;p&gt;Hello everyone! I am Atibhi Agrawal, a final year student from&lt;a href="https://www.iiitb.ac.in/"&gt;¬†IIIT-Bangalore&lt;/a&gt;¬†pursuing my Integrated Masters in Technology. This blog is about my experience contributing to&lt;a href="https://prometheus.io/"&gt;¬†Prometheus&lt;/a&gt;¬†as a part of my internship at&lt;a href="https://grafana.com/"&gt;¬†Grafana Labs.&lt;/a&gt;¬†It is not going to be a technical blog. The objective of this blog is to document my own journey as well as help others contribute to Prometheus or any large open source project.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#learning-about-prometheus"&gt;
  &lt;/a&gt;
  Learning about Prometheus
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/prometheus"&gt;Prometheus&lt;/a&gt;¬†is an open-source systems monitoring and alerting toolkit. It has a query language PromQL and a powerful data model that allows us to monitor our applications and infrastructure. In recent times, it has become the de-facto standard for application monitoring in the cloud-native space.&lt;/p&gt;

&lt;p&gt;I had never ventured into the monitoring domain or heard about Prometheus before this internship. To get started with it, my mentors&lt;a href="https://www.linkedin.com/in/davidk/?originalSubdomain=uk"&gt;¬†David Kitchen&lt;/a&gt;¬†and&lt;a href="https://www.linkedin.com/in/beorn7/?originalSubdomain=de"&gt;¬†Bj√∂rn "Beorn" Rabenstein&lt;/a&gt;¬†suggested some videos and documents that would help me learn about Prometheus.&lt;/p&gt;

&lt;p&gt;Here are a some helpful resources :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=cwRmXqXKGtk&amp;amp;ab_channel=RobustPerception"&gt;Prometheus: A Next Generation Monitoring System&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=mC6Zt5Ga9UQ&amp;amp;ab_channel=CNCF%5BCloudNativeComputingFoundation%5D"&gt;Intro: Prometheus --- Matt Layher, Fastly &amp;amp; Ganesh Vernekar, Grafana Labs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Me-kZi4xkEs&amp;amp;ab_channel=CNCF%5BCloudNativeComputingFoundation%5D"&gt;Prometheus Deep Dive&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://prometheus.io/"&gt;Official Website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/roaldnefs/awesome-prometheus"&gt;Awesome Prometheus&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apart from watching videos and reading, I suggest getting your hands dirty and setting up Prometheus to gain a better understanding.&lt;a href="https://github.com/yolossn/Prometheus-Basics"&gt;¬†Prometheus basics by yolossn&lt;/a&gt;¬†is a great tutorial that was very helpful for me. After I got familiar with Prometheus, I was assigned a task. My task was to&lt;a href="https://github.com/prometheus/prometheus/issues/535"&gt;¬†Add Backfilling support for Prometheus&lt;/a&gt;. The codebase of Prometheus is in Go, and since I had no prior experience with Go, I started learning the language.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#learning-golang"&gt;
  &lt;/a&gt;
  Learning Golang
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TQYosPlQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/4800/0%2AkNOh_dqjEoLOIPk3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TQYosPlQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/4800/0%2AkNOh_dqjEoLOIPk3.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whenever I learn a new programming language, I start by building a small project or follow along with interactive tutorials/videos. While coding along, I almost always run into errors. Debugging and trying to fix those errors helps me explore the language more. I also&lt;a href="https://www.notion.so/asquare14/Golang-Dump-61e156993ec943e5b2d8a4836ae54d39"&gt;¬†document&lt;/a&gt;¬†the errors or new concepts that I come across in any programming language so that the next time something similar comes up, I can refer to my notes rather than hunt for the solution on stack overflow.&lt;/p&gt;

&lt;p&gt;To learn Go, here are some free resources that I used :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tour.golang.org/"&gt;A Tour of Go&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=YS4e4q9oBaU&amp;amp;ab_channel=freeCodeCamp.org"&gt;Learn Go Programming --- Golang Tutorial for Beginners&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also made use of the free Udemy subscription offered by Grafana Labs to its employees and completed a¬†&lt;a href="https://www.udemy.com/course/go-the-complete-developers-guide/"&gt;paid course&lt;/a&gt;.This course was very helpful.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#my-first-pull-request-to-prometheus"&gt;
  &lt;/a&gt;
  My first Pull request to Prometheus
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xB8KrQWQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/4800/1%2AKRTkcK6FLogv9MYbABWyOA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xB8KrQWQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/4800/1%2AKRTkcK6FLogv9MYbABWyOA.jpeg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After learning more about the project and the language, I started the work. I first created a¬†&lt;a href="https://docs.google.com/document/d/1MbBjxOVmZBGUyOvPLWtBEawpJoq1GP6iMurcsmLJzBQ/edit?usp=sharing"&gt;design document&lt;/a&gt;¬†that I mailed to the&lt;a href="https://groups.google.com/g/prometheus-developers/c/fsw9W7ONxtM/m/NCvG4zCSCAAJ"&gt;¬†prometheus-developers mailing list&lt;/a&gt;. A design document is a high-level solution to a problem, it generally contains the design decisions, trade-offs and an overview of the implementation. It is similar to the concept of&lt;a href="https://en.wikipedia.org/wiki/Request_for_Comments"&gt;¬†RFC's.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After getting approval from the Prometheus community, I started coding. I opened a PR after getting the basic structure in place. This PR certainly started small but it slowly kept growing. Initially, a few changes were requested in the PR but as the PR progressed more and more feedback was given and more changes were requested. In the end the PR had 275+ discussions. A lot of them revolved around Go and coding best practices. My mentor Beorn also sent me this when the reviews were constantly coming in.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--93uDwC6M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/4800/1%2AZI7Wwz75nkiDbXjaFUCRbw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--93uDwC6M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/4800/1%2AZI7Wwz75nkiDbXjaFUCRbw.jpeg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code reviews taught me a lot and really helped me grow. Here are some of my key learnings :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Keep PRs small.&lt;/li&gt;
&lt;li&gt;  Add lots of unit tests, this helps in avoiding bugs in production.&lt;/li&gt;
&lt;li&gt;  Learn about DRY software practice which stands for "Do not Repeat Yourself" and refers to avoiding code duplication.&lt;/li&gt;
&lt;li&gt;  Code should be modular and readable.&lt;/li&gt;
&lt;li&gt;  Searching for examples in the code base teaches the idiomatic way to do something quicker than other resources. Follow the conventions in the rest of the code base.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally after multiple iterations my first PR to Prometheus was merged. It was so satisfying üíÉ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oblMXCh8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1196/1%2AaxbWnkRdHb3av2O28fcqgQ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oblMXCh8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1196/1%2AaxbWnkRdHb3av2O28fcqgQ.jpeg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First PR merged on Nov 26&lt;/p&gt;

&lt;p&gt;I even got the opportunity to give a lightning talk about my work at ObservabilityCon.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-prometheus-community"&gt;
  &lt;/a&gt;
  The Prometheus community
&lt;/h1&gt;

&lt;p&gt;Since I contributed to Prometheus as a part of my internship, I was lucky to have direct access to the Prometheus developers working at Grafana Labs whenever I had any questions. Initially, I was very hesitant to ask for help for fear of sounding stupid but my mentors Beorn, Ganesh and Goutham were very kind and encouraged me to ask questions. They answered my queries and provided me feedback that allowed me to improve.&lt;/p&gt;

&lt;p&gt;We also set up a common time every week with the CNCF mentee¬†&lt;a href="https://github.com/JessicaGreben"&gt;Jess&lt;/a&gt;, who was working on something similar at the time, and Bartek, another Prometheus developer, to discuss anything that might be blocking us. They were also very kind and helpful and I enjoyed interacting with them. I really thank them for their time and help.&lt;/p&gt;

&lt;p&gt;If you are an external contributor, there are many options as well, like the Prometheus contributor hours every Monday where anyone contributing to Prometheus can join in to ask for help when facing an issue. One can also hop on to¬†IRC:&lt;a href="https://webchat.freenode.net/?channels=#prometheus"&gt;¬†#prometheus&lt;/a&gt;¬†on&lt;a href="https://freenode.net/"&gt;¬†irc.freenode.net&lt;/a&gt;¬†(for the easiest start,&lt;a href="https://app.element.io/#/room/#prometheus:matrix.org"&gt;¬†join via Element&lt;/a&gt;) which is more for users. Developers can ask for help on¬†&lt;a href="https://webchat.freenode.net/?channels=#prometheus-dev"&gt;#prometheus-dev&lt;/a&gt;¬†on IRC. Most of the maintainers are friendly and encouraging.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h1&gt;

&lt;p&gt;I learnt a lot by contributing to Prometheus. It gave me an opportunity to learn about monitoring, distributed systems, Go, cloud-native technologies etc. Prometheus is a popular open-source project that takes part in the Google Summer of Code and Cloud Native Computing Foundation Mentorship program every year and I highly recommend you to contribute to the project. It will hopefully be a good learning experience for you too.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>opensource</category>
      <category>go</category>
      <category>programming</category>
    </item>
    <item>
      <title>How I Prepared for the Google Internship Interview.</title>
      <author>Atibhi Agrawal</author>
      <pubDate>Mon, 26 Apr 2021 03:32:08 +0000</pubDate>
      <link>https://dev.to/asquare14/how-i-prepared-for-the-google-internship-interview-2fno</link>
      <guid>https://dev.to/asquare14/how-i-prepared-for-the-google-internship-interview-2fno</guid>
      <description>&lt;p&gt;Hey everyone, I'm Atibhi, I interned with Google as a Summer Intern in 2020. After I got the internship, a lot of people asked me about my preparation strategy.&lt;/p&gt;

&lt;p&gt;In this blog post, I have tried to clear some of the common questions every student has regarding interview preparation. I have also included resources that helped me during my preparation!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-site-of-choice-leetcode"&gt;
  &lt;/a&gt;
  My site of choice - Leetcode
&lt;/h3&gt;

&lt;p&gt;I have explored many sites and in the end, I found Leetcode to be the best.&lt;br&gt;
Sites like CodeChef, Codeforces, SPOJ are really good but they are not interview/job-focused, they lean more towards competitive programming. If your aim is to go compete at ACM ICPC, by all means, practice at those sites.&lt;br&gt;
For interview preparation, the top sites are Leetcode, GeeksForGeeks and Interview Bit. Leetcode beats the other two sites hands down. While the theory in GeeksForGeeks is good (it is often coded inefficiently) and their practice platform has weak test cases. InterviewBit has a good collection of questions but their list is limited, also they do not have a vibrant community.&lt;br&gt;
Leetcode has everything that a good site should, an amazing list of questions, good editorials, really good test cases as well as a community(best thing). The discussion section has amazing discussions, sometimes the solutions here are better than those in the editorial.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-am-intimidated-by-the-list-of-questions-where-should-i%C2%A0start"&gt;
  &lt;/a&gt;
  I Am Intimidated by the List of Questions, Where Should I¬†Start?
&lt;/h3&gt;

&lt;p&gt;First and foremost, there is no reason to be intimidated, we all have to start somewhere¬†:) If you are a complete beginner, start with Top 100 Liked Questions and Top Interview Questions. Sort them by difficulty level and do the easy ones, followed by medium and then hard.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-should-i-solve-each-question"&gt;
  &lt;/a&gt;
  How Should I Solve Each Question?
&lt;/h3&gt;

&lt;p&gt;Everyone has a different way of approaching problems, I initially looked up the solution to every problem but when I gave the Weekly Contests(another amazing feature! more about it later) I realized my technique wasn't working. I then thought about a question and worked out a basic algorithm and then coded. If it took more than a certain amount of time, I saw the solution. I also went through Leetcode discuss to see different approaches.&lt;br&gt;
Here is a curated list of "how to Leetcode" from various people, do give it a read! It is helpful¬†:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/r/?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fcscareerquestions%2Fcomments%2F6luszf%2Fa_leetcode_grinding_guide%2F"&gt;Leetcode Grinding Guide on Reddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@sourabreddy"&gt;Patterns on Leetcode Problems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/algorithms-and-leetcode/want-to-crack-leetcode-problems-easily-dc825e27e423"&gt;Want to crack Leetcode problems easily?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/r/?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fcscareerquestions%2Fcomments%2Fbc85gv%2Fi_have_to_literally_lookup_up_every_leetcode%2F%3Futm_medium%3Dandroid_app%26utm_source%3Dshare%5D%28https%3A%2F%2Fwww.reddit.com%2Fr%2Fcscareerquestions%2Fcomments%2Fbc85gv%2Fi_have_to_literally_lookup_up_every_leetcode%2F%3Futm_medium%3Dandroid_app%26utm_source%3Dshare%29"&gt;r/cscareerquestions‚Ää-‚ÄäI have to literally look up up every Leetcode solution. Is it normal?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/r/?url=https%3A%2F%2Fleetcode.com%2Fdiscuss%2Fgeneral-discussion%2F443629%2Fhow-to-leetcode-effectively"&gt;how-to-leetcode-effectively&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-do-i-measure-my-performance-i-am-solving-questions-but-am-i-improving"&gt;
  &lt;/a&gt;
  How Do I Measure My Performance, I Am Solving Questions but Am I Improving?
&lt;/h3&gt;

&lt;p&gt;ONE WORD‚Ää-‚Ää&lt;strong&gt;WEEKLY CONTESTS.&lt;/strong&gt; Initially, when I started giving weekly contests I would not be able to solve even a single question, but with practice, I started solving two to three. It motivated me to work harder every week and manage time better. I also maintained an excel sheet where I kept track of the questions that I solved in contests.&lt;/p&gt;

&lt;p&gt;How my contest excel sheet looked¬†like.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rePzDZ_c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619156276988/htWnZq5Pi.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rePzDZ_c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619156276988/htWnZq5Pi.jpeg" alt="1_3f_EiTbcnQKg3ofw4RFwyw.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-many-questions-should-i%C2%A0solve"&gt;
  &lt;/a&gt;
  How "MANY" Questions Should I¬†Solve?
&lt;/h3&gt;

&lt;p&gt;It is not about the number of questions rather it is about "how" well you understand the concepts and are able to approach new problems. In spite of that, doing the Top Interview Questions should be a must.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-tips"&gt;
  &lt;/a&gt;
  Other Tips
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Read as many interview experiences of people as you can from Leetcode Discuss.&lt;/li&gt;
&lt;li&gt;Ask doubts in Leetcode Discuss for each question.&lt;/li&gt;
&lt;li&gt;If your interview is nearing, take Leetcode Premium and do company-wise questions (very helpful).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-important-topics-i-should-study-"&gt;
  &lt;/a&gt;
  What are the important topics I should study ?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Big O Notation&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://web.mit.edu/16.070/www/lecture/big_o.pdf"&gt;Theory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Practice problems from Cracking the Coding Interview&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Arrays and Maths&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Practice a lot of Questions on Arrays and Maths. Some important topics are mentioned below.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/next-greater-element-ii/discuss/98262/typical-ways-to-solve-circular-array-problems-java-solution"&gt;Circular Arrays - Typical ways to solve on Leetocode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://leetcode.com/problems/majority-element-ii/discuss/63520/Boyer-Moore-Majority-Vote-algorithm-and-my-elaboration"&gt;Boyer Moore Voting Algorithm Leetcode&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/two-sum/"&gt;Two Sum Problem - Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/3sum/"&gt;Three Sum Problem - Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/4sum/"&gt;Four Sum Problem - Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock/"&gt;Buy and Stock problem - Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/"&gt;Buy and Stock problem II - Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/"&gt;Buy and Stock problem III - Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/"&gt;Buy and Stock problem IV - Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/"&gt;Buy and Stock With Cooldown - Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Questions relating to Palindromes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/longest-palindromic-subsequence/"&gt;Longest Palindromic Subsequence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/sqrtx/"&gt;Finding square root of a number in logn time - Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Subarray and Subsequence problems.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Binary Search&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.topcoder.com/community/competitive-programming/tutorials/binary-search"&gt;Binary Search from Topcoder(MUST)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Bitwise manipulation&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/sum-of-two-integers/discuss/84278/A-summary%3A-how-to-use-bit-manipulation-to-solve-problems-easily-and-efficiently"&gt;A summary: how to use bit manipulation to solve problems easily and efficiently - LeetCode Discuss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bitwisecmd.com/"&gt;Good website to visualize bitwise operations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/bits-manipulation-important-tactics/"&gt;https://www.geeksforgeeks.org/bits-manipulation-important-tactics/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Trees&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/binary-tree-preorder-traversal/"&gt;Pre-order(BOTH recursive and iterative)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/binary-tree-postorder-traversal/"&gt;Post-order(BOTH recursive and iterative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/binary-tree-inorder-traversal/"&gt;In-order(BOTH recursive and iterative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/n-ary-tree-preorder-traversal/"&gt;N-ary Tree Pre-order Traversal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/n-ary-tree-postorder-traversal"&gt;N-ary Tree Pre-order Traversal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/n-ary-tree-level-order-traversal"&gt;N-ary Tree Level Order Traversal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/maximum-depth-of-n-ary-tree"&gt;Maximum Depth of N-ary Tree    &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/serialize-and-deserialize-binary-tree/"&gt;Serialization and deserialization of trees - Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Binary Search Tree&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/"&gt;Lowest Common Ancestor - Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Morris In-order traversal by Tushar Roy (Video)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://algorithms.tutorialhorizon.com/introduction-to-threaded-binary-tree/"&gt;Threaded Binary Tree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Recursion and Backtracking&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.hackerearth.com/practice/basic-programming/recursion/recursion-and-backtracking/tutorial/"&gt;Recursion and Backtracking Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/leetcode-patterns/leetcode-pattern-3-backtracking-5d9e5a03dc26?source=---------6------------------"&gt;Blog by csgator(BEST)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.interviewbit.com/courses/programming/topics/backtracking/"&gt;Interview Bit Theory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Turnpike problem&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/word-break/"&gt;Word break Problem Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/word-break-ii/"&gt;Word break Problem 2 Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/letter-combinations-of-a-phone-number/"&gt;Letter combinations of a phone-number Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Graphs&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.khanacademy.org/computing/computer-science/algorithms/graph-representation/a/representing-graphs"&gt;Representing graphs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/leetcode-patterns/leetcode-pattern-1-bfs-dfs-25-of-the-problems-part-1-519450a84353"&gt;DFS, BFS Explanation by csgator(BEST)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Topological Sorting&lt;/li&gt;
&lt;li&gt;Prims and Kruskal&lt;/li&gt;
&lt;li&gt;Dijikstra&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cp-algorithms.com/graph/dijkstra_sparse.html"&gt;Dijkstra on sparse graphs - Competitive Programming Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/number-of-islands/"&gt;Number of Islands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/friend-circles/"&gt;Friend Circles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/decode-string/"&gt;Decode String&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Geometry&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/geometric-algorithms/"&gt;Geometric Algorithms - GeeksforGeeks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Hashing&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/map-vs-unordered_map-c/"&gt;map vs unordered_map in C++ - GeeksforGeeks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/design-hashmap/"&gt;Design HashMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/design-hashset/"&gt;Design Hashset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/find-all-anagrams-in-a-string/discuss/92007/sliding-window-algorithm-template-to-solve-all-the-leetcode-substring-search-problem"&gt;Sliding Window algorithm template to solve all the Leetcode substring search problem. - LeetCode Discuss (This is important !)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cp-algorithms.com/string/string-hashing.html"&gt;String Hashing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Linked List&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Insertion &lt;/li&gt;
&lt;li&gt;Deletion of Node&lt;/li&gt;
&lt;li&gt;Reverse Linked List (iterative and recursive)&lt;/li&gt;
&lt;li&gt;Circular Linked List&lt;/li&gt;
&lt;li&gt;Doubly Linked List&lt;/li&gt;
&lt;li&gt;Floyd's Cycle Detection Algorithm&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/linked-list-cycle-ii/"&gt;Linked List Cycle - Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bhrigu.me/blog/2017/01/22/lru-cache-c-plus-plus-implementation/"&gt;LRU Cache - C++ Implementation - Bhrigu Srivastava&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/copy-list-with-random-pointer/"&gt;Copy list with random-pointer (BEAUTIFUL QUESTION!)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.topcoder.com/community/competitive-programming/tutorials/dynamic-programming-from-novice-to-advanced/"&gt;TopCoder Article (VERY IMPORTANT!!! MUST)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/top-20-dynamic-programming-interview-questions/"&gt;Top 20 DP questions(Geeks for geeks) Important!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr"&gt;Tushar Roy DP playlist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Do Questions from Interview Bit (Good List) :P&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@codingfreak/top-50-dynamic-programming-practice-problems-4208fed71aa3"&gt;Top 50 DP questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/13538459/difference-between-divide-and-conquer-algo-and-dynamic-programming"&gt;Difference between DP and Divide and Conquer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Disjoint Set Union&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cp-algorithms.com/data_structures/disjoint_set_union.html"&gt;DSU CP-Algorithm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Sorting&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be clear with the basic algorithm and time complexity of all sorting algorithms.&lt;/li&gt;
&lt;li&gt;Additionally read up to count sort, bucket sort and radix sort.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Greedy&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/tutorial/"&gt;Basics of Greedy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;System Design&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/discuss/interview-question/system-design?currentPage=1&amp;amp;orderBy=hot&amp;amp;query="&gt;Leetcode System Design Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX"&gt;System Design Videos (Sufficient for prep)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tiancao.me/blog/2016/02/system-design/"&gt;System Design Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.pramp.com/how-to-succeed-in-a-system-design-interview-27b35de0df26"&gt;How to succeed in a System Design Interview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For now, these are the topics that I feel are important for an interview, obviously, this is not an exhaustive list :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#google-specific-interview-tips"&gt;
  &lt;/a&gt;
  Google Specific Interview Tips
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; Practice coding on google docs.&lt;/li&gt;
&lt;li&gt; Write variable and function names that are descriptive.&lt;/li&gt;
&lt;li&gt; Be honest. Do not bluff.&lt;/li&gt;
&lt;li&gt; Be vocal, explain your approach while coding.&lt;/li&gt;
&lt;li&gt; Give a lot of mock interviews to friends in a real environment.&lt;/li&gt;
&lt;li&gt; Do a lot of leetcode.&lt;/li&gt;
&lt;li&gt; Be confident!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope this blog post helped you! All the best! Feel free to post any questions :)&lt;/p&gt;

</description>
      <category>programming</category>
      <category>algorithms</category>
      <category>computerscience</category>
      <category>googlecloud</category>
    </item>
    <item>
      <title>What Software Engineering Universities Don't Teach You</title>
      <author>Sonny Alves Dias</author>
      <pubDate>Mon, 26 Apr 2021 03:22:19 +0000</pubDate>
      <link>https://dev.to/sonny_ad/what-software-engineering-universities-don-t-teach-you-50jc</link>
      <guid>https://dev.to/sonny_ad/what-software-engineering-universities-don-t-teach-you-50jc</guid>
      <description>&lt;p&gt;With almost 10 years of working experience, I played several roles as a software engineer. And I am currently CTO of a video game company. Thinking back about my time at university, there are tons of subjects I wish I had been taught properly.  Here is my list... &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time-and-task-management"&gt;
  &lt;/a&gt;
  Time and task management ‚è≤Ô∏è
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Partitioning time (ex Pomodoro) &lt;/li&gt;
&lt;li&gt;Avoid distractions, getting into the flow state&lt;/li&gt;
&lt;li&gt;Inbox Zero&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tooling"&gt;
  &lt;/a&gt;
  Tooling üõ†Ô∏è
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Hardware: computers, input devices, and network devices&lt;/li&gt;
&lt;li&gt;Tools to increase productivity, shortcuts&lt;/li&gt;
&lt;li&gt;Shell: bash, zsh, vi, or others&lt;/li&gt;
&lt;li&gt;Mastering IDE&lt;/li&gt;
&lt;li&gt;Test framework and test automation&lt;/li&gt;
&lt;li&gt;IT: resources inventory, resources management&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#communication"&gt;
  &lt;/a&gt;
  Communication üí¨
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;With your technical colleagues&lt;/li&gt;
&lt;li&gt;With your non-technical colleagues&lt;/li&gt;
&lt;li&gt;With clients and customers: be confident and assertive&lt;/li&gt;
&lt;li&gt;Marketing: Self and Company promotion&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#project-management"&gt;
  &lt;/a&gt;
  Project Management üíº
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Agile: Scrum, Kanban&lt;/li&gt;
&lt;li&gt;Stories, task definition &lt;/li&gt;
&lt;li&gt;Task estimation&lt;/li&gt;
&lt;li&gt;TDD, DDD&lt;/li&gt;
&lt;li&gt;Performance monitoring&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#leading-mentoring"&gt;
  &lt;/a&gt;
  Leading / Mentoring ü¶∏
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Onboarding people&lt;/li&gt;
&lt;li&gt;Mentoring people&lt;/li&gt;
&lt;li&gt;Documentation&lt;/li&gt;
&lt;li&gt;Code reviews&lt;/li&gt;
&lt;li&gt;Peer reviews, Pair programming&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#management"&gt;
  &lt;/a&gt;
  Management üë®‚Äçüíº
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;1-on-1&lt;/li&gt;
&lt;li&gt;Delegation&lt;/li&gt;
&lt;li&gt;Feedback and Performance reviews&lt;/li&gt;
&lt;li&gt;Career management, coaching&lt;/li&gt;
&lt;li&gt;Personalized communication based on DISC assessment or others&lt;/li&gt;
&lt;li&gt;Objectives definition: OKR, KPI, SMART, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#budget-management"&gt;
  &lt;/a&gt;
  Budget Management üí∞
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Definition of budget&lt;/li&gt;
&lt;li&gt;Expenses monitoring&lt;/li&gt;
&lt;li&gt;Accounting&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#entrepreneurship"&gt;
  &lt;/a&gt;
  Entrepreneurship üè¢
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Corporate governance and the basics of corporate law&lt;/li&gt;
&lt;li&gt;Business development&lt;/li&gt;
&lt;li&gt;Business plan&lt;/li&gt;
&lt;li&gt;Business monitoring&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do you agree? Share your comments below. I also invite you to make your list and share it as well.  &lt;/p&gt;




&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@awcreativeut?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Adam Winger&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/boy-reading?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>management</category>
      <category>codenewbie</category>
      <category>startup</category>
    </item>
    <item>
      <title>12 Simple CSS Hover Effects</title>
      <author>Kiran Raj R</author>
      <pubDate>Mon, 26 Apr 2021 03:12:13 +0000</pubDate>
      <link>https://dev.to/kiranrajvjd/12-simple-css-hover-effects-95d</link>
      <guid>https://dev.to/kiranrajvjd/12-simple-css-hover-effects-95d</guid>
      <description>&lt;p&gt;Here is the list of 12 simple beginner level CSS menu button hover  animation, it use simple CSS animation techniques. I tried to explain how the animation works as comments inside the code. It is not made responsive and the styling of components is minimal so as to avoid complexities. I just want to show that these techniques can be used as hover effect, use your creativity to make it awesome. If you find any errors let me know, Happy Coding.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/yLgZmJp?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/abpXeBP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/poRGMPa?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/MWJLNoX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G9HawTiT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--1Hvny-t9--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/312f532e-2252-4e12-88a4-d0425041c3cc.jpeg" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/7-simple-menu-icon-animation-for-beginners-25oa" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;7 Simple Menu Icon Animation For Beginners &lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª Apr 24 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#animation&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G9HawTiT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--1Hvny-t9--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/312f532e-2252-4e12-88a4-d0425041c3cc.jpeg" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/10-simple-navigation-bar-hover-animations-1980" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 Simple Navigation Bar Hover Animations&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª Apr 25 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G9HawTiT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--1Hvny-t9--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/312f532e-2252-4e12-88a4-d0425041c3cc.jpeg" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/awesome-css-layout-resources-for-beginners-508a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Awesome CSS Layout Resources For Beginners&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª Apr 18 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G9HawTiT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--1Hvny-t9--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/312f532e-2252-4e12-88a4-d0425041c3cc.jpeg" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/15-awesome-css-animation-resources-4mhi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;15+ Awesome CSS Animation Resources&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª Apr 21 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>css</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Converting Markdown to Epub or Mobi </title>
      <author>Sumit Kumar Singh</author>
      <pubDate>Mon, 26 Apr 2021 03:09:55 +0000</pubDate>
      <link>https://dev.to/sks147/converting-markdown-to-epub-or-mobi-32fj</link>
      <guid>https://dev.to/sks147/converting-markdown-to-epub-or-mobi-32fj</guid>
      <description>&lt;p&gt;In this blog post, I will show you the process of combining and converting a list of markdown files into kindle supported ebook (.mobi) format. &lt;/p&gt;

&lt;p&gt;In this example I would be converting official documentation of Docker website into an ebook for offline use.&lt;/p&gt;

&lt;p&gt;I will use Pandoc to combine and convert the markdown (.md) files into .epub format. Then I will use Calibre to convert it to .mobi format.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YiSqemhb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themythicalengineer.com/assets/images/converting-markdown-to-epub-mobi/workflow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YiSqemhb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themythicalengineer.com/assets/images/converting-markdown-to-epub-mobi/workflow.png" alt="workflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can follow the steps and modify the linux commands according to your needs.&lt;/p&gt;

&lt;p&gt;If you don't have a linux machine, you can use &lt;a href="https://deepnote.com/"&gt;Deepnote&lt;/a&gt; platform to run linux commands in jupyter notebook.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Note: If you're running this in Deepnote, you need to append "!" as prefix to each command, so that deepnote can identify it as bash command. If running in linux machine, remove "!" from all commands written below.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Here is a small video tutorial of the working script.&lt;br&gt;
Video Link: &lt;a href="https://www.youtube.com/watch?v=L4hGDPLMPcw"&gt;https://www.youtube.com/watch?v=L4hGDPLMPcw&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Steps to be followed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Download Pandoc executable&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt;wget https://github.com/jgm/pandoc/releases/download/2.11.3.2/pandoc-2.11.3.2-1-amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Install pandoc&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;dpkg &lt;span class="nt"&gt;-i&lt;/span&gt; pandoc-2.11.3.2-1-amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Clone Docker CLI documentation github repository&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt;git clone https://github.com/docker/cli.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Verify the list of markdown files and contents of files&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;cli/docs/reference/commandline &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nt"&gt;-la&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Generate ebook from markdown files, *.md picks up all the files with .md as extension&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;cli/docs/reference/commandline &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; pandoc &lt;span class="nt"&gt;-o&lt;/span&gt; docker_cli.epub &lt;span class="nt"&gt;--metadata&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Docker CLI Docs"&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt;.md
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Move generated file to required location&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;mv &lt;/span&gt;cli/docs/reference/commandline/docker_cli.epub ~/work/docker_cli.epub
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Install required dependencies for Calibre&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt;apt update &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;libgl1-mesa-glx &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Download and install calibre command line utility&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt;wget &lt;span class="nt"&gt;-q&lt;/span&gt; &lt;span class="nt"&gt;-O-&lt;/span&gt; https://download.calibre-ebook.com/linux-installer.sh | &lt;span class="nb"&gt;sudo &lt;/span&gt;sh /dev/stdin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Convert ebook to kindle supported .mobi format&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt;ebook-convert docker_cli.epub docker_cli.mobi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can transfer generated .mobi file to your kindle device.&lt;/p&gt;

&lt;p&gt;There is also a browser extension called &lt;a href="https://epub.press/"&gt;EpubPress&lt;/a&gt;, which can convert any webpage into a kindle book in a single click. You can use it convert any webpage or blogs to read on Kindle.&lt;/p&gt;

&lt;p&gt;You can follow the discussion thread on &lt;a href="https://news.ycombinator.com/item?id=26898591"&gt;Hackernews&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://themythicalengineer.com"&gt;https://themythicalengineer.com&lt;/a&gt; on Apr 21, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>pandoc</category>
      <category>kindle</category>
      <category>ebook</category>
    </item>
    <item>
      <title>How to Create News Tickers in WordPress</title>
      <author>GretaThemes</author>
      <pubDate>Mon, 26 Apr 2021 03:03:01 +0000</pubDate>
      <link>https://dev.to/gretathemes/how-to-create-news-tickers-in-wordpress-2kf3</link>
      <guid>https://dev.to/gretathemes/how-to-create-news-tickers-in-wordpress-2kf3</guid>
      <description>&lt;p&gt;If you already have a WordPress website for magazines, newspapers, or reading blogs..., you may have difficulty in drawing visitors' attention to outstanding posts because your site is crammed with too much information. To solve this, news tickers are definitely a perfect feature to make your reading site more readable, informative and outstanding!&lt;/p&gt;

&lt;p&gt;In this post, we will show you &lt;strong&gt;what news tickers are, why we should use them&lt;/strong&gt;, and &lt;strong&gt;how to create an impressive news ticker&lt;/strong&gt; with only a few simple quick steps.&lt;/p&gt;

&lt;p&gt;Let's get started!&lt;/p&gt;

&lt;h2&gt;What are News Tickers?&lt;/h2&gt;

&lt;p&gt;On some types of websites like online magazines, online newspapers, you may see some news slides scrolling at the bottom or the header, footer or sidebar. These news slides look like those in TV news programs.&lt;/p&gt;

&lt;p&gt;By glancing at the news ticker on a TV news program or a magazine website, viewers can get the hottest and most noticeable information. There are usually many pieces of information, which are called &lt;strong&gt;ticks&lt;/strong&gt;, in one news ticker.&lt;/p&gt;

&lt;p&gt;As in the gif below, do you see the headline news running? That is how a news ticker works.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zZ9KDMaG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/qvyDLkC.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zZ9KDMaG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/qvyDLkC.gif" alt="The news ticker runs in the heading WordPress website." width="1888" height="856"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Why Should We Use News Tickers?&lt;/h2&gt;

&lt;p&gt;News tickers have various benefits for different types of website:&lt;/p&gt;

&lt;ul&gt;

¬†  &lt;li&gt;For &lt;a href="https://gretathemes.com/minimalist-magazine-wordpress-themes/"&gt;magazines&lt;/a&gt;, news tickers help you highlight what information and posts to be noticed.&lt;/li&gt;

¬†  &lt;li&gt;For &lt;a href="https://gretathemes.com/minimalistic-portfolio-wordpress-theme/"&gt;portfolios&lt;/a&gt;, they draw recruiters' attention to noticeable work experience and rewards of yours.&lt;/li&gt;

¬†  &lt;li&gt;For other kinds of websites, news tickers themselves will become a highlight of the sites, to &lt;a href="https://gretathemes.com/create-a-website-wordpress/"&gt;make your blogs&lt;/a&gt;, for example, more attractive and professional.&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;Thus, news tickers are clearly a useful tool for websites' owners. More than that, it's very easy to add news tickers to your WordPress website. Let's move to the next part and get one for yourself!&lt;/p&gt;

&lt;h2&gt;How to Add News Tickers in WordPress?&lt;/h2&gt;

&lt;p&gt;There are many ways to add a news ticker.&lt;/p&gt;

&lt;p&gt;You can use a &lt;strong&gt;theme pre-built with news tickers&lt;/strong&gt; in the beginning; that would be the easiest. Just read the theme's documentation carefully.&lt;/p&gt;

&lt;p&gt;However, not every theme has a pre-made news ticker like that. So in these cases, you can think about using &lt;a href="https://gretathemes.com/free-website-builders-for-beginners/"&gt;page builders&lt;/a&gt; or plugins.&lt;/p&gt;

&lt;p&gt;In this post, we will use a free plugin called&lt;strong&gt; Ditty News Ticker plugin&lt;/strong&gt;. It is &lt;strong&gt;free, very easy to use&lt;/strong&gt; and &lt;strong&gt;highly customizable&lt;/strong&gt;. You just need to download and activate it on Dashboard.&lt;/p&gt;

&lt;p&gt;You can read more about how to install a plugin &lt;a href="https://gretathemes.com/install-wordpress-plugin/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mig-7n7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/HEUsktY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mig-7n7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/HEUsktY.png" alt="Ditty News Ticker is a free plugin that helps you make news tickers." width="1894" height="862"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let's hesitate no more and follow our 3 steps to have an amazing news ticker on your site:&lt;/p&gt;

&lt;h3&gt;Step 1: Add a New News Ticker&lt;/h3&gt;

&lt;p&gt;First, go to &lt;strong&gt;News Ticker&lt;/strong&gt; &amp;gt; &lt;strong&gt;Add New&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZiIgGQhL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/a23LpJE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZiIgGQhL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/a23LpJE.png" alt="Add a new news ticker" width="1894" height="863"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the next screen, you will see 5 tabs below:&lt;strong&gt; Add Title, Shortcode, Ticker Mode, Ticker Type and Global Settings&lt;/strong&gt;. These tabs are used to configure and display your news tickers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lU4TDzeS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/XOAlxjf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lU4TDzeS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/XOAlxjf.png" alt="These tabs are used to configure and display your news tickers in your WordPress website." width="1891" height="860"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you think there are too many things to keep in mind? Don't worry, we will make it short and clear for you:&lt;/p&gt;

&lt;p&gt;First, give your ticker a name. Type the name in the &lt;strong&gt;Add Title&lt;/strong&gt; tab. The title is usually displayed on the top of the ticker, so try to come up with an attractive name to draw visitors' attention.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r5u8USP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6F7nPNK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r5u8USP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6F7nPNK.png" alt="Name your news tickers" width="1890" height="859"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, click &lt;strong&gt;Ticker Type&lt;/strong&gt;, then add the content to display in the news ticker (with a link if necessary) in the &lt;strong&gt;Ticker Text&lt;/strong&gt; section.&lt;/p&gt;

&lt;p&gt;As I mentioned above, your news ticker may contain many &lt;strong&gt;ticks&lt;/strong&gt;. Just click the (&lt;strong&gt;+&lt;/strong&gt;) button to add one, and click the (&lt;strong&gt;x&lt;/strong&gt;) button to delete.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---F30jHVG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/JqDT7ks.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---F30jHVG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/JqDT7ks.png" alt="Customize quantity of ticks in your news tickers." width="1890" height="860"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 2: Configure News Ticker&lt;/h3&gt;

&lt;p&gt;After having a new news ticker, you need to make it more eye-catching by configuring it.&lt;/p&gt;

&lt;p&gt;First of all, choose how your news tickers will be displayed. Click &lt;strong&gt;Ticker Mode&lt;/strong&gt;, you will see 3 options: &lt;strong&gt;Scroll, Rotate&lt;/strong&gt;, and &lt;strong&gt;List&lt;/strong&gt;. In fact, &lt;strong&gt;Scroll&lt;/strong&gt; is the most common option, but you can decide what is the most suitable one for your site.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I6vERhyj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/B19Rc16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I6vERhyj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/B19Rc16.png" alt="Choose how your news tickers will be displayed" width="1893" height="865"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once choosing one of the three options above, you can adjust the behaviour of the tickers by various tabs below.&lt;/p&gt;

&lt;p&gt;Personally, I chose &lt;strong&gt;Scroll&lt;/strong&gt; mode, so I will adjust the scrolling action. There are two important things to notice: &lt;strong&gt;Scroll Speed&lt;/strong&gt; and &lt;strong&gt;Tick Space&lt;/strong&gt;. Actually, you have to try many times to find out the most suitable parameters. For me, I prefer the scroll speed of 8 and the tick space of 10 pixels.&lt;/p&gt;

&lt;p&gt;Besides, I also tick &lt;strong&gt;Pause on mouse over&lt;/strong&gt; option, so that the news ticker will stop moving when I want to click on a tick.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fm1m_asN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9MlbjBy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fm1m_asN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9MlbjBy.png" alt=" The ticker will stop moving on clicking." width="1880" height="860"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition, when clicking &lt;strong&gt;Global Settings&lt;/strong&gt;, you will see some other options to customize the tickers. For example, if you want tickers' title to be on the top of them, tick on &lt;strong&gt;Display title&lt;/strong&gt;. Or if you want to hide the tickers when there are no ticks, tick on the option like in the picture below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pB5EsFy2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/trfXGKI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pB5EsFy2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/trfXGKI.png" alt="When clicking Global Settings, you will see some other options to customize the tickers" width="1892" height="865"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now your news ticker is ready to be displayed!&lt;/p&gt;

&lt;h3&gt;Step 3: Display News Tickers&lt;/h3&gt;

&lt;p&gt;Let's come back to the &lt;strong&gt;Shortcode&lt;/strong&gt; tab at the top of the screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lirixlNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sOG5vvf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lirixlNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sOG5vvf.png" alt=" The Shortcode tab is at the top of the screen" width="1893" height="862"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The news ticker will be displayed at where you insert this shortcode. You can add it to any position: homepage's footer, post, sidebar widget,...&lt;/p&gt;

&lt;p&gt;Normally, we do not use news tickers for the content of a post. It would be better if you place news tickers on the header, footer or sidebar. I can give you an example of a sidebar's news ticker. First, I choose a random page, go to its &lt;strong&gt;Preview&lt;/strong&gt; &amp;gt; &lt;strong&gt;Customize&lt;/strong&gt; &amp;gt; &lt;strong&gt;Widget&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z5vf91_N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/M2xBWPO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z5vf91_N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/M2xBWPO.png" alt="Go to Widget" width="1889" height="865"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, go to &lt;strong&gt;Sidebar&lt;/strong&gt; &amp;gt; &lt;strong&gt;Add a Widget&lt;/strong&gt;. You will see a lot of options for additional sidebars like Audio, Calendar,... Choose &lt;strong&gt;Text,&lt;/strong&gt; then you will see a small box to add the sidebar's name and paste your shortcode:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F76QuNn4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/1tK8gMT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F76QuNn4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/1tK8gMT.png" alt="Paste your short code in Text box." width="1886" height="864"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You have done many steps, right? But if you want to make your news tickers more beautiful, with custom colors, font size, opacity,..., you still have a little work to do. The free version of this plugin does not support users to adjust those parameters. So we only have result like the gif below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--27LPKK1y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/I7gLHMp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--27LPKK1y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/I7gLHMp.gif" alt="Here is the news tickers display." width="1885" height="862"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The news tickers don't look so beautiful, so I styled it a bit with CSS. Go to &lt;strong&gt;Customize&lt;/strong&gt; &amp;gt; &lt;strong&gt;Additional CSS&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fsMzT9a1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/D3n2FOb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fsMzT9a1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/D3n2FOb.png" alt="Style news tickers by CSS" width="1884" height="858"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There you will see a small box to add code. These codes will change the appearance of your news tickers.&lt;/p&gt;

&lt;p&gt;I'm using &lt;a href="https://gretathemes.com/wordpress-themes/memory/"&gt;Memory&lt;/a&gt; theme with the main palette of blue and white. Therefore, I added this CSS to have a news ticker of blue color:&lt;/p&gt;

&lt;pre&gt;.mtphr-dnt-tick-contents a {

color: var(--main-color);

}

.mtphr-dnt-tick-contents a:hover {

color: #000;

}

&lt;/pre&gt;

&lt;p&gt;Click &lt;strong&gt;Publish&lt;/strong&gt;, and see what we've got:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c_JyPTlo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/AmUyXyF.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c_JyPTlo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/AmUyXyF.gif" alt="Result of styling it." width="1886" height="861"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is just a simple example for you. I'm sure that you can make a much more stunning news ticker by yourself. Let's give it a try!&lt;/p&gt;

&lt;h2&gt;Last Words&lt;/h2&gt;

&lt;p&gt;So that's all about &lt;strong&gt;adding a news ticker to your WordPress website by Ditty News Ticker plugin&lt;/strong&gt;. We have tried our best to make it short and clear, so we hope that this post is useful for you.&lt;/p&gt;

&lt;p&gt;Maybe you might have some wonders or questions about our tutorial, so feel free to tell us in the comment section. We are willing to show you a more detailed tutorial about advanced options in this plugin, or other methods to add news tickers without using plugins. Thus, don't forget to connect us!&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>newstickers</category>
      <category>plugin</category>
    </item>
    <item>
      <title>What's in the TensorFlow Federated Box?</title>
      <author>Bala Priya</author>
      <pubDate>Mon, 26 Apr 2021 02:49:02 +0000</pubDate>
      <link>https://dev.to/balapriya/what-s-in-the-tensorflow-federated-box-5b5f</link>
      <guid>https://dev.to/balapriya/what-s-in-the-tensorflow-federated-box-5b5f</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Krzysztof Ostrowski is a Research Scientist at Google, where he leads the TensorFlow Federated development team. This blog post is inspired by his talk at the OpenMined Privacy Conference.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#what-is-tensorflow-federated"&gt;
  &lt;/a&gt;
  What is TensorFlow Federated?
&lt;/h2&gt;

&lt;p&gt;TensorFlow Federated(TFF) is a new development framework for Federated Computations, that typically involve computations on data that is born decentralized and stays decentralized. TFF provides a common framework for federated computations in both research and production and is an open source project within the TensorFlow ecosystem.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#whats-in-the-tensorflow-federated-library"&gt;
  &lt;/a&gt;
  What‚Äôs in the TensorFlow Federated library?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Federated Computation API(FC API) that provides new abstractions, execution models and language designed for federated computations.&lt;/li&gt;
&lt;li&gt;Higher-level libraries and canned APIs that provide implementations of federated learning algorithms.&lt;/li&gt;
&lt;li&gt;Runtime and Simulation Components that provide datasets, canned training loops and single to multi-machine runtime, including flexible integration points for custom backend.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#design-goals-for-tff"&gt;
  &lt;/a&gt;
  Design Goals for TFF
&lt;/h2&gt;

&lt;p&gt;The TFF library has been designed so as to facilitate an easy path from research to production. In TFF, the code is serialized into a portable, language-independent and platform-independent representation.&lt;br&gt;
The design is, therefore, motivated by the dictum:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Write code once, and deploy it anywhere;&lt;br&gt;
Your code shouldn‚Äôt have to change!&lt;/p&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#understanding-the-characteristics-of-federated-computationsfc"&gt;
  &lt;/a&gt;
  Understanding the characteristics of Federated Computations(FC)
&lt;/h2&gt;

&lt;p&gt;In this section, we shall seek to understand some of the characteristics of federated computations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Distributed Programming for privacy, anonymity and scale&lt;/strong&gt;: In such systems, the client stays on-device, because it‚Äôs very sensitive. We can have millions of clients coming and going continuously. The clients are assumed to be anonymous, unreliable and stateless. No client IDs are allowed in computation. There are no one-to-one interactions between clients, only collective operations are involved.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us consider the following example. Let us assume that temperature sensor readings of client devices are sensitive; The server wishes to get the percentage of client devices whose temperature sensor readings exceed a certain threshold. There‚Äôs federated broadcast of the threshold to all client devices. The client devices run a simple threshold check and send out a &lt;code&gt;1/0&lt;/code&gt; depending on whether &lt;code&gt;temperature &amp;gt; threshold&lt;/code&gt; is &lt;code&gt;True/False&lt;/code&gt; respectively. The server then does federated averaging on the values from the clients, which gives the fraction of devices whose temperature exceeds the threshold.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Clients and Server bear complementary responsibilities&lt;/strong&gt;‚Ää‚Äî‚Ääthe server orchestrates the training process, while the clients perform the bulk of processing, such as model training.
Slicing and Dicing distributed (federated) values: A value is ‚Äòfederated‚Äô if it can exist in multiple places. In our example, we may think of ‚Äòtemperature readings‚Äô as &lt;code&gt;federated float32@clients&lt;/code&gt;
Involves communication and orchestration ‚Ää‚Äî‚Ää collective operations, known as federated ops, rather than dealing with individual client‚Äôs data.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;
  &lt;a href="#tffs-federated-computation-api"&gt;
  &lt;/a&gt;
  TFF‚Äôs Federated Computation API
&lt;/h2&gt;

&lt;p&gt;The program flow is expressed in a Pythonic way for better interpretability; As stated in an earlier section, all code is traced and serialized at definition time to a platform-independent representation. Here‚Äôs the code snippet showing the collective operations and on-device processing for the temperature sensor example discussed above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exceeds_threshold_fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#on-device processing    
&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reading&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;tff&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;federated_computation&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_fraction_over_threshold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;readings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tff&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;federated_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="c1"&gt;#collective operations                           
&lt;/span&gt;       &lt;span class="n"&gt;tff&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;federated_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="c1"&gt;#collective communication                     
&lt;/span&gt;            &lt;span class="n"&gt;tff&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tf_computation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exceeds_threshold_fn&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                       
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;readings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tff&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;federated_broadcast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;)]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#tffs-canned-and-simulation-apis"&gt;
  &lt;/a&gt;
  TFF‚Äôs Canned and Simulation APIs
&lt;/h2&gt;

&lt;p&gt;We shall enumerate some of the features of TFF‚Äôs Canned and Simulation APIs.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One-line call to create portable TFF code for federated training.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Just plug in your Keras model
&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tff&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;learning&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build_federated_averaging_process&lt;/span&gt;&lt;span class="p"&gt;(...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To run a simulation, we can invoke just like a Python function, similar to the example below; By default, a single-machine in-process TFF runtime is spawned in the background.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initilaize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    
    &lt;span class="n"&gt;train_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="c1"&gt;#pick random clients    
&lt;/span&gt;    &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;metrics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;metrics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#canned-tff-executors"&gt;
  &lt;/a&gt;
  Canned TFF Executors
&lt;/h2&gt;

&lt;p&gt;Canned TFF Executors provide support for the most common scenarios. A single-machine, multi-threaded execution is spawned by default in the background, and the Canned TFF Executors facilitate remote and distributed execution. TFF executor building blocks are reusable, stackable modules that add to individual capabilities and are specifically designed for extensibility and customizability.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#collaboration-opportunities-for-open-source-contributors"&gt;
  &lt;/a&gt;
  Collaboration opportunities for Open Source contributors
&lt;/h2&gt;

&lt;p&gt;There are opportunities to contribute to the federated algorithms suite, simulation infrastructure and more flexible runtime integrations.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;[1] &lt;a href="https://www.tensorflow.org/federated"&gt;https://www.tensorflow.org/federated&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Create Native Apps with React Native and Android Studio</title>
      <author>MichaelPaulKunz</author>
      <pubDate>Mon, 26 Apr 2021 02:12:29 +0000</pubDate>
      <link>https://dev.to/michaelpaulkunz/create-native-apps-with-react-native-and-android-studio-37ja</link>
      <guid>https://dev.to/michaelpaulkunz/create-native-apps-with-react-native-and-android-studio-37ja</guid>
      <description>&lt;p&gt;If you've been making web pages with JavaScript and React, and you want to try apps that users can download and install onto their phones, then React Native is the path of least resistance. React Native is a library that converts JavaScript and React code into the native langauges used by both Android and Mac devices. It takes the place of ReactDOM, which you use for regular web pages. You can install it globally with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -g react-native-cli&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;This tutorial won't cover deploying your app to the Mac or Android store where a user can download it. But we will go over getting started, explore some basic React Native syntax, and test our code with Android Studio. I'm working in Ubuntu 18.04 and some of my commands are Linux specific. Also, I'll focus on running an Android app instead of an iOS app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#android-studio"&gt;
  &lt;/a&gt;
  Android Studio
&lt;/h3&gt;

&lt;p&gt;Since we're not making web pages that will render in a browser, we won't be able to simply run a local server and test our code in Chrome. Instead we'll use &lt;a href="https://linuxize.com/post/how-to-install-android-studio-on-ubuntu-18-04/"&gt;Android Studio&lt;/a&gt; to display our output to a cell phone emulator. To run Android Studio, you'll first need a Java Development Kit. Linux users can install OpenJDK and Android STudio with the following two commands:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo apt install openjdk-8-jdk&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;sudo snap install android-studio --classic&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;I should mention that installing Android Studio is not always easy. You can find more detailed instructions for installing to Ubuntu 18.04 &lt;a href="https://linuxize.com/post/how-to-install-android-studio-on-ubuntu-18-04/"&gt;here&lt;/a&gt;, but even then, you'll probably do a good bit of troubleshooting. I tried to keep a log of all the error messages I received along the way and the steps I took to fix them, but it proved too exhaustive. You'll deal with your own unique bouquet of complications anyway, so just know that having set-backs doesn't mean you're doing it wrong.&lt;/p&gt;

&lt;p&gt;One thing you'll probably want to do is configure a hardware accelerator for your virtual machine. The Android developer page provides &lt;a href="https://developer.android.com/studio/run/emulator-acceleration?utm_source=android-studio"&gt;detailed instructions&lt;/a&gt; for how to do that on Mac, Windows, or Linux. Android Studio can really slow your computer down without an accelerator. &lt;/p&gt;

&lt;p&gt;Once it's fully installed, running the command &lt;code&gt;android-studio&lt;/code&gt; in your terminal will bring up this window:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cJSad7jo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9dc33astqfev2tux058y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cJSad7jo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9dc33astqfev2tux058y.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Click configure on the bottom right and choose "AVD Manager" to set up your Android Virtual Device. One may already be created for you, or you may need to make your own. I created a Pixel 2. Once it's created, you should have a line in your window displaying its name, resolution properties, and some other attributes. All the way to the right of the line are the actions. If everything is configured right, hitting the play button in actions launches your virtual machine. But you might still have to set up some environment variables. You're doing it right if you see a replica of an Android phone on your screen:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J2Bm7Rk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn1jfb29kvf2kqwb4pkl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J2Bm7Rk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn1jfb29kvf2kqwb4pkl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;React Native&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
You're pretty much finished with Android Studio at this point. The rest is in VS Code with React Native. Once you have it installed globally, you can initiate a React-Native app with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;react-native init &amp;lt;projectName&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;It will create a folder named after whatever you put for projectName. You can &lt;code&gt;cd&lt;/code&gt; into that folder and run &lt;code&gt;code .&lt;/code&gt; to explore your boilerplate app. There will be a lot of folders and a few dependencies installed for React-Native. Go into package.json to and check your scripts object to see what commands you need to run in the terminal. You'll be running "start" and "android" if you're working on an Android app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start
npm android
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything is configured properly, your cell phone emulator will pop up whether you have Android Studio running or not, and you'll see some sample text on the cell phone screen. But it probably won't be configured properly. I know I got at least four errors when initially running the commands. Three saying I didn't have an emulator, or that it couldn't find the emulator. And one saying I had the wrong version of OpenJDK-- I had only just installed it specifically to work on this very project. In a lot of cases, getting these errors to go away was a matter of searching them on Google, finding solutions on Stack Overflow and other help forums, and trying them out until one worked. More often than not, the changes wouldn't take until I rebooted my computer, so keep that in mind if it seems like nothing's working. You've officially made it if you see your virtual cell phone running this screen:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pinR9GWY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8mxhk4s342tmy2o4sih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pinR9GWY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8mxhk4s342tmy2o4sih.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow the instructions on the screen and make some minor edits to App.js so you can see the results change. Coding in React Native isn't much different from coding in React. You can still use classes or functions with hooks. You import and export files the same. Your return statement will still be JSX rendering. One big difference is you can't use &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tags. Instead of traditional html &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tags, React Native provides us with a predefined library of components that we need to wrap around our code. You'll import them from 'react-native' at the top of the file and use them like you'd use any other React Component. Wrap your text in &lt;code&gt;&amp;lt;Text&amp;gt;&amp;lt;/Text&amp;gt;&lt;/code&gt; component tags and then wrap that in &lt;code&gt;&amp;lt;View&amp;gt;&amp;lt;/View&amp;gt;&lt;/code&gt; tags to control screen placement. Use a &lt;code&gt;&amp;lt;TextInput /&amp;gt;&lt;/code&gt; component for a form. And &lt;code&gt;&amp;lt;TouchableOpacity /&amp;gt;&lt;/code&gt; to make an item that responds visually to being pressed on the touch screen. Give it an &lt;code&gt;onPress&lt;/code&gt; property to make it dynamic.&lt;/p&gt;

&lt;p&gt;Traversy Media has a very good &lt;a href="https://www.youtube.com/watch?v=Hf4MJH0jDb4&amp;amp;ab_channel=TraversyMedia"&gt;React Native Crash Course&lt;/a&gt; where they walk you through building a Shopping List. You can pull or peak at their code &lt;a href="https://github.com/bradtraversy/react_native_shopping_list"&gt;here&lt;/a&gt; to see the way these Native components are used. Or check out my &lt;a href="https://github.com/MichaelPaulKunz/ToDoListReactNative"&gt;not-at-all derivative to-do list code&lt;/a&gt; instead. &lt;/p&gt;

&lt;p&gt;I hope you've found this helpful. It's far from exhaustive, and you'll definitely need to supplement it with other sources to get up and running. React Native is a pretty useful skill to have. It can almost certainly get you hired. Here's a list of some of the resources I used to build my first React Native app and write this article. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cites"&gt;
  &lt;/a&gt;
  Cites:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Hf4MJH0jDb4&amp;amp;ab_channel=TraversyMedia"&gt;React Native Crash Course&lt;/a&gt;&lt;br&gt;
&lt;a href="https://reactnative.dev/docs/environment-setup"&gt;React Native Docs&lt;/a&gt;&lt;br&gt;
&lt;a href="https://linuxize.com/post/how-to-install-android-studio-on-ubuntu-18-04/"&gt;Install Android Studio&lt;/a&gt;&lt;br&gt;
&lt;a href="https://developer.android.com/studio/run/emulator-acceleration?utm_source=android-studio#vm-linux"&gt;Install KVM Acceleration&lt;/a&gt;&lt;br&gt;
&lt;a href="https://help.ubuntu.com/community/KVM/Installation"&gt;KVM Acceleration Ubuntu&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>LeetCode 46. Permutations (javascript solution)
</title>
      <author>codingpineapple</author>
      <pubDate>Mon, 26 Apr 2021 01:56:17 +0000</pubDate>
      <link>https://dev.to/cod3pineapple/leetcode-46-permutations-javascript-solution-4552</link>
      <guid>https://dev.to/cod3pineapple/leetcode-46-permutations-javascript-solution-4552</guid>
      <description>&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description:
&lt;/h3&gt;

&lt;p&gt;Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution:
&lt;/h3&gt;

&lt;p&gt;Time Complexity : O(n!)&lt;br&gt;
Space Complexity: O(n)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;permute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="nx"&gt;permutations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Base case &lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="nx"&gt;permutations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;([...&lt;/span&gt;&lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; 

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="c1"&gt;// Create new array without current letter&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newChoices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;// Add current to the temp array which is our current permutation&lt;/span&gt;
        &lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="nx"&gt;permute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newChoices&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;permutations&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;// Once we have explored options remove the current letter from our current permuataion&lt;/span&gt;
        &lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;permutations&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
