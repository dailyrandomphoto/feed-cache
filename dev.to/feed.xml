<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How To Use Vibration API in Your Website</title>
      <author>Bibek</author>
      <pubDate>Wed, 05 May 2021 18:14:39 +0000</pubDate>
      <link>https://dev.to/bibekkakati/how-to-use-vibration-api-in-your-website-4dp4</link>
      <guid>https://dev.to/bibekkakati/how-to-use-vibration-api-in-your-website-4dp4</guid>
      <description>&lt;p&gt;Hello everyone 👋&lt;/p&gt;

&lt;p&gt;In this article, we will see how can we use &lt;code&gt;Vibration API&lt;/code&gt; in our websites.&lt;/p&gt;

&lt;p&gt;We can use the &lt;code&gt;Vibration API&lt;/code&gt; to provide haptic or vibration feedback to the user using the website for their actions.&lt;/p&gt;

&lt;p&gt;Most modern mobile devices include vibration hardware, which lets software code provide physical feedback to the user by causing the device to shake. So this API works well with mobile devices only and targeted for the same.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Vibration API&lt;/code&gt; allows the web apps to access the vibration hardware if it exists.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation 👨‍💻
&lt;/h3&gt;

&lt;p&gt;Let's explore the API.&lt;/p&gt;

&lt;p&gt;We can access the API from the browser's &lt;code&gt;window.navigator&lt;/code&gt; object.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#check-raw-vibration-api-endraw-support"&gt;
  &lt;/a&gt;
  Check &lt;code&gt;Vibration API&lt;/code&gt; Support
&lt;/h4&gt;

&lt;p&gt;It is always a good idea to check for API support.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// It Supports&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;vibrate&lt;/code&gt; is a method that is responsible for the vibration.&lt;/li&gt;
&lt;li&gt;It expects one argument.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Argument is a number or an array of numbers for a series of vibrations. Those numbers are considered as &lt;code&gt;milliseconds&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If the method was unable to vibrate because of invalid parameters, it will return &lt;code&gt;false&lt;/code&gt; else it returns &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#single-vibration"&gt;
  &lt;/a&gt;
  Single Vibration  📳
&lt;/h4&gt;

&lt;p&gt;For a single vibration, we can pass a single number directly or in an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Will vibrate the device for 500ms&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Same as the above line&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#pattern-vibration"&gt;
  &lt;/a&gt;
  Pattern Vibration  📳 📳 📳
&lt;/h4&gt;

&lt;p&gt;To vibrate the device in a pattern, we can pass an array of numbers.&lt;/p&gt;

&lt;p&gt;Even indices numbers are responsible for the vibration and odd indices numbers will delay that much millisecond before the next vibration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Vibrate for 500ms, Wait for 200ms, Vibrate for 800ms&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#cancelling-vibrations"&gt;
  &lt;/a&gt;
  Cancelling Vibrations
&lt;/h4&gt;

&lt;p&gt;To cancel an ongoing vibration pattern, we need to pass a &lt;code&gt;0&lt;/code&gt; or an empty array or an array containing all zeroes to the &lt;code&gt;vibrate&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#fun-example"&gt;
  &lt;/a&gt;
  Fun Example ✨
&lt;/h3&gt;

&lt;p&gt;Vibrate &lt;strong&gt;&lt;code&gt;SOS&lt;/code&gt;&lt;/strong&gt; in morse code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Enjoyed? Give it a thumbs-up 👍&lt;/p&gt;

&lt;p&gt;Thank you for reading | Feel free to &lt;a href="https://bibekkakati.me"&gt;connect&lt;/a&gt; 👋&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/bibekkakati"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Open letter to AWS: Please, give us a price cap</title>
      <author>Ibrahim Cesar</author>
      <pubDate>Wed, 05 May 2021 17:58:45 +0000</pubDate>
      <link>https://dev.to/aws-builders/open-letter-to-aws-please-give-us-price-cap-4ge6</link>
      <guid>https://dev.to/aws-builders/open-letter-to-aws-please-give-us-price-cap-4ge6</guid>
      <description>&lt;p&gt;Hello AWS,&lt;/p&gt;

&lt;p&gt;One book (which I bought for my kindle in amazon.com.br) changed my life. No, it wasn’t “The Secret”. As I stated so many times before this book was &lt;em&gt;&lt;a href="https://amzn.to/2Rh9paY"&gt;Accelerate: The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organizations&lt;/a&gt;&lt;/em&gt; by &lt;a href="https://twitter.com/nicolefv"&gt;Dr. Nicole Forsgren&lt;/a&gt; &lt;em&gt;et al.&lt;/em&gt; Delivering software quickly, reliably, and safely is at the heart of technology transformation and organizational performance and &lt;strong&gt;All paths start on creating a culture of psychological safety&lt;/strong&gt; (Other resource to read along with her &lt;em&gt;magnus opum&lt;/em&gt; is &lt;a href="https://services.google.com/fh/files/misc/state-of-devops-2019.pdf"&gt;The State of DevOps 2019&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We cannot have psychological safety with the risk of being charged hundreds of dollars&lt;/strong&gt;. I certainly can. I speak as a Brazilian, a developer from the Global South. And I, in my context, have several privileges myself. I lead a (small) team. I’m male and I have a stable job as stable as the new media industry is.&lt;/p&gt;

&lt;p&gt;I was thinking about this a lot when yesterday &lt;a href="https://twitter.com/forrestbrazeal"&gt;Forrest Brazeal&lt;/a&gt;, whose surname sounds a lot like of the name of my country, published his rant &lt;a href="https://cloudirregular.substack.com/p/please-fix-the-aws-free-tier-before"&gt;Please fix the AWS Free Tier before somebody gets hurt&lt;/a&gt;. I want to add weight and my perspective on this.&lt;/p&gt;

&lt;p&gt;Last year, as part of a hiring process I gave as assignment follow the &lt;a href="https://aws.amazon.com/getting-started/hands-on/build-serverless-web-app-lambda-apigateway-s3-dynamodb-cognito/?nc1=h_ls"&gt;“Build a Serverless Web Application”&lt;/a&gt; and then send me a narrative of the process on so on. To eliminate any doubts, I asked them to send me the last links I would avail under 24 hours and made sure any expenses they could have we would have paid them. One of our prospects never answered back. But this kind of “ghosting” is normal, and we moved on. Months later, we reconnect. And I learned that this person at that moment didn’t have a credit card.&lt;/p&gt;

&lt;p&gt;When I open an account, I’m on some cases “awarded” with the possibility of gain some credits. Sometimes I got the credits. Sometimes not. Even when I didn’t get the credits, AWS called me back to talk with me - in Brazilian Portuguese, which is great. But to be in this position, to get some credits, I had to add my credit card and validate its funds. And yes, I have times in my life my credit card at certain times didn’t validate me in “free trials”.&lt;/p&gt;

&lt;p&gt;There are great initiatives, as I learned, the &lt;a href="https://aws.amazon.com/education/awseducate/aws-educate-faqs/"&gt;AWS Educate&lt;/a&gt; which I definitely need to know more about and will apply.&lt;/p&gt;

&lt;p&gt;There are two things, I always say in the trainings with people in my team, you &lt;strong&gt;must&lt;/strong&gt; do when create the account: Lock the account (MFA for root and do not use root, create an iam_admin with billing access turned on and MFA in it too) and the other thing is... Create the CloudWatch billing alarm. We put in $5 USD per month usually (which at the time of writing is $26,89 BRL. An accident of 100 USD would be $537,87 BRL. Just for reference, the monthly minimum wage, here is $1.100 BRL (also today, would be $204,54 USD). As defined by &lt;a href="https://br.indeed.com/career/programador-j%C3%BAnior/salaries"&gt;Indeed&lt;/a&gt; the medium junior developer has a monthly salary of $2.459 BRL (but this can vary widely depending on where you live in the country) - 456,94 USD. What if the dollar prices rises and rises?&lt;/p&gt;

&lt;p&gt;And this is my reality from Brazil. Latin America is huge and has several countries. There are Asia, Africa and inside each developed country there are people trying to get better and learn cloud skills. Besides limitations with the &lt;a href="https://www.lastweekinaws.com/blog/is-the-aws-free-tier-really-free/"&gt;Free Tier&lt;/a&gt; - and thank Bezos we have 1 million Lambda invocations free per month because I use half of them just testing. &lt;/p&gt;

&lt;p&gt;I will not forget to remember we had some good advancements. Now in Brazil we can pay AWS with other forms besides Credit Card. This was a huge thing they added in the last year. Our billings are in BRL (which is great, but the base services still in USD and still depending on the current price of conversion). We can paid by TED now. And they are still reviewing the payment in our &lt;a href="https://aws.amazon.com/pt/legal/aws-sbl/"&gt;beloved Boleto&lt;/a&gt;. But to open the account, we still having to have a credit card.&lt;/p&gt;

&lt;p&gt;They had to worry about the bill. What if the alarm be too slow?. Or you add a resource so pricey that will blowout any expectations you had? Remember, a lot of “warnings” put in place are great. But sometimes people are following some instructions and they &lt;em&gt;don’t read it&lt;/em&gt;. We can blame users all day. But I saw people with Doctor’s degree that get the error message or the warning in the screen, &lt;em&gt;in plain English&lt;/em&gt;, and they just don’t read. The console is the first way to interact with the Cloud and UX and other factors will pile up here but simply put, some people just don't read. &lt;strong&gt;Yes, I read the terms of use&lt;/strong&gt; and every other warning is the biggest lie we tell our systems or worse, we are just blind, following the golden blocks click in everything on the way. This is what is expected of a Cloud Developer? An Architect? No. definitely no. I'm here talking for people that wants to learn, that are trying for the first time. The builders of tomorrow. &lt;/p&gt;

&lt;p&gt;Now think in someone with a cognitive load of learning Cloud. Cloud is big, right? Every day a new service. Every region a different price (&lt;em&gt;fun fact&lt;/em&gt;: for several projects we pay more to run here in Sao Paulo than anywhere else)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#please-put-a-price-cap"&gt;
  &lt;/a&gt;
  Please, put a price cap.
&lt;/h2&gt;

&lt;p&gt;Just let us say how far we can pay. Could be an opt-in type of account, very limited. But we need a playground. Learning cloud is a burden enough to worry if it will blow up in our faces. There really does need to be more protection against running up a large unexpected bill.&lt;/p&gt;

&lt;p&gt;And &lt;em&gt;we mean business&lt;/em&gt;, right? Is from the Global South the promised &lt;a href="https://nextbillionusers.google/"&gt;“Next Billion Users”&lt;/a&gt; will be. We don’t have all that is needed to run our &lt;em&gt;on premises&lt;/em&gt; resources like the Basecamp guys, we need the Cloud to empower us and our economies, and I believe I speak for many people when I say this would help us a lot. A LOT. We need psychological safety to deliver better software, to comply with the Well-Architected Framework and even more, when we are learning.&lt;/p&gt;

&lt;p&gt;Please take into consideration AWS!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#signed"&gt;
  &lt;/a&gt;
  Signed:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://ibrahimcesar.cloud"&gt;Ibrahim Cesar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to sign in with me? Please leave your name and link in the comments, thanks!&lt;/p&gt;

&lt;p&gt;Or just help spread the word!&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Cover is a detail from photo by &lt;a href="https://unsplash.com/@sahand_hoseini?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Sahand Hoseini&lt;/a&gt; on &lt;a href="https://unsplash.com/images/things/money?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Transforming Types in TypeScript with Utility Types</title>
      <author>Maina Wycliffe</author>
      <pubDate>Wed, 05 May 2021 17:44:10 +0000</pubDate>
      <link>https://dev.to/this-is-learning/transforming-types-in-typescript-with-utility-types-3mhl</link>
      <guid>https://dev.to/this-is-learning/transforming-types-in-typescript-with-utility-types-3mhl</guid>
      <description>&lt;p&gt;Every once in a while, you end up in a situation where you need some variation of a type. For instance, you might want to omit some keys, retain some keys only, or even mark all keys as undefined or required on a type, among other use cases.&lt;/p&gt;

&lt;p&gt;Typescript offers Utility Types, which are intended to solve this particular problem. In this article, we are going to have a look at these built-in utility types and a third-party library (with examples) that offers more utilities you might find helpful in achieving the above goal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#builtin-utility-types"&gt;
  &lt;/a&gt;
  Built-in Utility Types
&lt;/h2&gt;

&lt;p&gt;This section focuses on TypeScript built-in utility types, they are numerous and I won't be able to cover all of them, I will just look at a few key ones, with examples, in my own opinions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#partial"&gt;
  &lt;/a&gt;
  Partial
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type from an existing one, with the keys at the top level being marked as optional &lt;code&gt;(?)&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Type {
    field: string;
}

type Type2 = Partial&amp;lt;Type&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YZ9c7sl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/partial_type.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YZ9c7sl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/partial_type.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; This only runs one level, meaning keys below one level will not be affected. If you want to mark all keys as optional, regardless the level they are in, check out PartialDeep below. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#required"&gt;
  &lt;/a&gt;
  Required
&lt;/h3&gt;

&lt;p&gt;This utility type does the opposite of the above, constructing a new type with all keys from the old type that are optional being marked as required.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Type {
    field?: string;
    optional?: string;
}

type Type2 = Required&amp;lt;Type&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HrM7yNmV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/required_utility_type.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HrM7yNmV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/required_utility_type.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#omit"&gt;
  &lt;/a&gt;
  Omit
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type from an existing type while omitting specified keys from the new type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Type {
    field1?: string;
    field2: string;
    field3: string;
}

type Type2 = Omit&amp;lt;Type, "field3" | "field1"&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FDsd9Zo8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/omit_utility_type.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FDsd9Zo8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/omit_utility_type.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pick"&gt;
  &lt;/a&gt;
  Pick
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type by picking keys specified from the old type. It does the opposite of Omit, as described above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Type {
    field1?: string;
    field2: string;
    field3?: string;
    field4: string;
    field5?: string;
}

type Type2 = Pick&amp;lt;Type, "field2" | "field3"&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lov-hnLe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/pick_utility_type.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lov-hnLe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/pick_utility_type.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#readonly"&gt;
  &lt;/a&gt;
  Readonly
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type from an existing one and marks all keys as read-only i.e. they cannot be re-assigned. This is useful for types of a frozen object - i.e. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze"&gt;&lt;code&gt;Object.freeze()&lt;/code&gt;&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Type {
    field1?: string;
    field2: string;
    field3: string;
}

type Type2 = Readonly&amp;lt;Type&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FZJpJs-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/readonly_utility_types.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FZJpJs-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/readonly_utility_types.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#record"&gt;
  &lt;/a&gt;
  Record
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type with union members as keys and the type as the type of the keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Name {
    firstName: string;
    lastName: string;
}

type Names = "user1" | "user2";

type Type2 = Record&amp;lt;Names, Name&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KbMNXbb3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/record_utility_type.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KbMNXbb3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/record_utility_type.png" alt="Record Utility Type"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Above are a few built-in utility types that I find very useful, you can find out more about built-in utility types in the official documentation &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#extending-builtin-utility-types"&gt;
  &lt;/a&gt;
  Extending Built-in Utility Types
&lt;/h2&gt;

&lt;p&gt;While the above built-in utility types are amazing, they don't cover all use cases, and this is where libraries that provide more utilities fill in the gap. A good example of such a library is &lt;a href="https://github.com/sindresorhus/type-fest"&gt;type-fest&lt;/a&gt;, which provides even more utilities. &lt;/p&gt;

&lt;p&gt;While I won't look in to all utilities provided by type-fest, I will highlight a few that are quite help and build on the built-in types utilities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#except"&gt;
  &lt;/a&gt;
  Except
&lt;/h3&gt;

&lt;p&gt;This is a variation of the Omit utility type described above, but stricter. It constructs a new type by omitting specified keys from a Type, but unlike Omit, the keys being emitted must strictly exist in the Type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// import { Except } from "type-fest"

interface X {
  a: string;
  b: string;
  c: string;
}

// Omit Example
type Y = Omit&amp;lt;X, "d"&amp;gt;

// Except Example
type Z = Except&amp;lt;X, "d" &amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in the image below, Except throws an error if you provide a Key that doesn't exist.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--flpIMmZ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-except-example.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--flpIMmZ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-except-example.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#merge"&gt;
  &lt;/a&gt;
  Merge
&lt;/h3&gt;

&lt;p&gt;Constructs a new type by merging two Types, with keys of the second type overriding the keys of the first type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// import { Merge } from "type-fest"

interface X {
  a: string;
  b: string;
  c: string;
}

interface Y {
  c: number;
  d: number;
  e: number;
}

type Z = Merge&amp;lt;X, Y&amp;gt;

const x : Z = {
  a: "is string",
  b: "is string",
  c: 1,
  d: 2,
  e: 3,
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lgtANnOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-merge-type.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lgtANnOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-merge-type.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#partialdeep"&gt;
  &lt;/a&gt;
  PartialDeep
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type where all keys in all levels are optional. This is quite similar to the &lt;code&gt;Partial&lt;/code&gt; built-in utility type, with one significant difference, it runs deeply to all levels, while the former does it at the first level.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// import { PartialDeep } from "type-fest";

interface X {
  a: string;
  b: string;
  c: string;
}

interface Y {
  c: number;
  d: number;
  e: number;
  f: X;
}

type Z = PartialDeep&amp;lt;Y&amp;gt;;

const x: Z = {};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CmI1EtZo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-partial_deep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CmI1EtZo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-partial_deep.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#readonlydeep"&gt;
  &lt;/a&gt;
  ReadonlyDeep
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type with all keys on all levels marked as required. This is also similar to the built-in &lt;code&gt;Readonly&lt;/code&gt; utility type, but unlike the built-in utility type, this one goes down to all keys in all levels, making them immutable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h2Lwd-Lh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-readonlydeep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h2Lwd-Lh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-readonlydeep.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mutable"&gt;
  &lt;/a&gt;
  Mutable
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a type that strips out &lt;code&gt;readonly&lt;/code&gt; from a keys in a type, essentially the opposite of what the built-in utility type &lt;code&gt;Readonly&lt;/code&gt; does.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// import { Mutable } from "type-fest";

interface X {
  readonly a: string;
  readonly d: string;
}

type Y = Mutable&amp;lt;X&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BCbxTWK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-mutable.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BCbxTWK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-mutable.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, I looked into typescript utility types and how they can help you automatically create types from existing ones without resulting to duplicating eliminating the need to keep related types in sync. &lt;/p&gt;

&lt;p&gt;I highlighted a few built-in utility types that I find particularly useful on my day to day job as a developer. On top of that, we looked into type-fest, a library with a lot of utility types that extends the built-in types, and highlighted just a few.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html"&gt;Utility Types - Typescript Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest"&gt;type-fest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>typescript</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>A Visual Guide To: Sustainability City (Minecraft)</title>
      <author>Nitya Narasimhan</author>
      <pubDate>Wed, 05 May 2021 17:25:16 +0000</pubDate>
      <link>https://dev.to/azure/a-visual-guide-to-sustainability-city-minecraft-597e</link>
      <guid>https://dev.to/azure/a-visual-guide-to-sustainability-city-minecraft-597e</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Things you can do to improve your GreenTech IQ&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Learn &lt;a href="https://aka.ms/visual-greentech"&gt;The Principles Of Sustainable Software Engineering&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Watch the &lt;a href="https://channel9.msdn.com/Shows/Hello-World/Hello-World-April-22-2021-Special-Hello-Earth?WT.mc_id=mobile-24661-ninarasi"&gt;#EarthDay Special&lt;/a&gt; episode of Hello World!&lt;/li&gt;
&lt;li&gt;Read the &lt;a href="https://techcommunity.microsoft.com/t5/green-tech-blog/a-visual-guide-to-sustainabilitycity-let-s-talk-minecraft/ba-p/2326878"&gt;Tech Community&lt;/a&gt; post on this #SustainabilityCity guide&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#exploring-sustainability-through-minecraft"&gt;
  &lt;/a&gt;
  Exploring Sustainability Through Minecraft
&lt;/h2&gt;

&lt;p&gt;Did you know Minecraft has an &lt;a href="https://education.minecraft.net/how-it-works/what-is-minecraft"&gt;Education Edition&lt;/a&gt; with &lt;a href="https://education.minecraft.net/class-resources/worlds"&gt;crafted worlds&lt;/a&gt; that help students (K-12) and adults explore various environments or concepts interactively? &lt;/p&gt;

&lt;p&gt;Many of these come with lessons for educators to use to define activities and facilitate discussions that enhance learning. I was particularly excited to realize they had a dedicated &lt;a href="https://education.minecraft.net/earth-day"&gt;EarthDay&lt;/a&gt; with worlds and lesson plans that are perfect for parent-child or teacher-student contexts. &lt;/p&gt;

&lt;p&gt;In my case, I realized that as a Microsoft employee, I had access to the Microsoft Education Edition. So I did what any parent would do - I enlisted my 12yo to help me navigate Minecraft!&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jZlslFRn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Ex-yhOLWUAg6Rz-.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hCF7KqCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1336782118924455944/K4ZDwHHg_normal.png" alt="Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/nitya"&gt;@nitya&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      What we're doing on my wellness day off .. goldfish-sittong for neighbors and starting off a &lt;a href="https://twitter.com/PlayCraftLearn"&gt;@PlayCraftLearn&lt;/a&gt; learning journey.&lt;br&gt;&lt;br&gt;Bonus: I earned huge cred with 12yo when we realized my work account gave me access to Education Edition. I am such a fan and can't wait to learn &amp;amp;share 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:07 PM - 02 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1378016297590661122" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1378016297590661122" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1378016297590661122" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;h2&gt;
  &lt;a href="#visual-guide-to-sustainability-city"&gt;
  &lt;/a&gt;
  Visual Guide To Sustainability City
&lt;/h2&gt;

&lt;p&gt;This is the visual guide that I created based on our exploration together. Check out my &lt;a href="https://techcommunity.microsoft.com/t5/green-tech-blog/a-visual-guide-to-sustainabilitycity-let-s-talk-minecraft/ba-p/2326878"&gt;Tech Community&lt;/a&gt; for a longer post on how you can navigate the visual guide, and what you can learn in the process. Plus links to resources for you to explore this Minecraft world on your own.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aoD8_UGp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lz2rca6kmciiyu4mnp49.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aoD8_UGp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lz2rca6kmciiyu4mnp49.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Curious to know how the visual guide was built? Here's a time lapse video showing how the information was synthesized and composed into a single visual sketchnote.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eggNm_UF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1389389274743726083/pu/img/9Dqh9ghbEFFLlW3g.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hCF7KqCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1336782118924455944/K4ZDwHHg_normal.png" alt="Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/nitya"&gt;@nitya&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/hashtag/VisualGuide"&gt;#VisualGuide&lt;/a&gt; to &lt;a href="https://twitter.com/Minecraft"&gt;@Minecraft&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/SustainabilityCity"&gt;#SustainabilityCity&lt;/a&gt; from &lt;a href="https://twitter.com/MicrosoftEDU"&gt;@MicrosoftEDU&lt;/a&gt; &lt;br&gt;Spent April working with 12yo on this as part of &lt;a href="https://twitter.com/hashtag/VisualGreenTech"&gt;#VisualGreenTech&lt;/a&gt;. Hugely recommend it to parents &amp;amp; teachers as a great way to learn/teach sustainable living!&lt;br&gt;&lt;br&gt;Hi-res image coming tomorrow!! (watch &lt;a href="https://twitter.com/sketchthedocs"&gt;@sketchthedocs&lt;/a&gt;) 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      01:22 AM - 04 May 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1389389953826754560" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1389389953826754560" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1389389953826754560" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;h2&gt;
  &lt;a href="#background-context"&gt;
  &lt;/a&gt;
  Background Context
&lt;/h2&gt;

&lt;p&gt;April 22 was Earth Day. People around the world used this as a day to drive awareness, engagement, and action, around climate action, sustainable development, and green technology. At Microsoft, I was thrilled to co-host a special episode of Hello World focused entirely on green technology topics. You can learn more about it here:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/fboucheros" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6H48P7M0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--YHmzziYF--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/140121/dc4cba6f-e82f-44cc-a754-d7c803bad6d3.jpg" alt="fboucheros image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/azure/hello-world-hello-earth-1f8l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Hello World, Hello Earth&lt;/h2&gt;
      &lt;h3&gt;Frank Boucher ☁ ・ Apr 22 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#news&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#podcast&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#technology&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cloud&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;In reality though, we need to treat every day as Earth Day and take measures to actively educate ourselves, our families, and communities, about sustainability challenges and best practices for reducing our carbon footprint. Earlier this year, I released the Visual Guide to Sustainable Software Engineering, illustrating the 2 core philosophies and 8 core principles defined in &lt;a href="https://aka.ms/visual-greentech"&gt;this Learn module&lt;/a&gt;.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/nitya" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vOJaOvLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--bjwYsbM9--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/8619/686ae69d-8c31-462d-bd5e-c373a688e99d.png" alt="nitya image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/azure/a-visual-guide-to-sustainable-software-engineering-53hh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A Visual Guide To: Sustainable Software Engineering&lt;/h2&gt;
      &lt;h3&gt;Nitya Narasimhan ・ Feb 12 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#greentech&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#azure&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#sustainability&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#sketchnote&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#the-visualgreentech-challenge"&gt;
  &lt;/a&gt;
  The #VisualGreenTech challenge
&lt;/h2&gt;

&lt;p&gt;One of those philosophies states that &lt;code&gt;everyone has a part to play&lt;/code&gt; in driving better sustainability practices. It was this philosophy that motivated us to launch the #VisualGreenTech challenge in the lead-up to #EarthDay&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--60hripa1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EyYP_42VcAIaeAb.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftMgimRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1142087623109779457/WVm78Lez_normal.png" alt="Rae Lyon profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Rae Lyon
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/raerlyon"&gt;@raerlyon&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      🌍Join the &lt;a href="https://twitter.com/hashtag/EarthDay"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/EarthDay"&gt;#EarthDay&lt;/a&gt; challenge and learn to sketch!🌏&lt;br&gt;🌟We'll post one action prompt daily with a resource link&lt;br&gt;🌟Visit the link &amp;amp; answer the prompt *with a sketch*&lt;br&gt;🌟Tag your sketch &lt;a href="https://twitter.com/hashtag/VisualGreenTech"&gt;#VisualGreenTech&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/EarthDay"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/EarthDay"&gt;#EarthDay&lt;/a&gt; &lt;br&gt;🌟 We'll plant 1,000 trees 🌲🌳🌲&lt;br&gt;Visit: &lt;a href="https://t.co/Mcg31vsJ51"&gt;aka.ms/earthday-Visua…&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:47 PM - 07 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1379808135162982405" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1379808135162982405" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1379808135162982405" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The challenge consisted of 24 prompts asking readers to explore the linked resources, then share their learnings using a simple visual. You can find all the images shared by the community in &lt;a href="https://twitter.com/i/events/1379862491656781825"&gt;this Twitter moment&lt;/a&gt; and read an early &lt;a href="https://sketchthedocs.dev/visual-green-tech/post/challenge-retro/"&gt;retrospective&lt;/a&gt; on the outcomes.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UAuMOZ05--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EyZCNvrW8AQypg9.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hCF7KqCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1336782118924455944/K4ZDwHHg_normal.png" alt="Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/nitya"&gt;@nitya&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      The first prompt goes live in just 30 minutes or so - but thought I'd give a sneak peek at what we have in store for the next &lt;a href="https://twitter.com/hashtag/30Days"&gt;#30Days&lt;/a&gt; - leading up to &lt;a href="https://twitter.com/hashtag/EarthDay"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/EarthDay"&gt;#EarthDay&lt;/a&gt; and extending just a bit beyond that ...&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/VisualGreenTech"&gt;#VisualGreenTech&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/HelloWorldLive"&gt;#HelloWorldLive&lt;/a&gt; &lt;br&gt;&lt;a href="https://twitter.com/hashtag/EarthDay"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/EarthDay"&gt;#EarthDay&lt;/a&gt; &lt;a href="https://t.co/8dKAXhCqbs"&gt;twitter.com/nitya/status/1…&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:30 PM - 07 Apr 2021
    &lt;/div&gt;

      &lt;div class="ltag__twitter-tweet__quote"&gt;
        &lt;div class="ltag__twitter-tweet__quote__header"&gt;
          &lt;span class="ltag__twitter-tweet__quote__header__name"&gt;
            Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎
          &lt;/span&gt;
          &lt;a class="mentioned-user" href="https://dev.to/nitya"&gt;@nitya&lt;/a&gt;

        &lt;/div&gt;
        IT'S LIVE!
Join the challenge and let's educate ourselves on Sustainability this April 
🌟 One action prompt daily with resource link
🌟 Visit link, answer prompt *with a sketch!*
🌟 Tag it #VisualGreenTech #EarthDay 

We'll plant 1000 trees!😍
Learn more: https://t.co/obmhF1fzvt https://t.co/gA21CUu7Fc https://t.co/vpuYbw0lk4
      &lt;/div&gt;

    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1379864083525156865" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1379864083525156865" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1379864083525156865" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#my-moment-of-zen"&gt;
  &lt;/a&gt;
  My Moment of Zen
&lt;/h2&gt;

&lt;p&gt;The prompt for #SustainabilityCity exploration &lt;a href="https://twitter.com/nitya/status/1386005767195561987"&gt;happened on April 24&lt;/a&gt;. By then my 12yo and I had finished exploring Sustainability City and I wanted to motivate him to translate awareness to some kind of action.&lt;/p&gt;

&lt;p&gt;So we taught ourselves to use a Stop-Motion-Animation app and created this animated film, hopefully the first of many. And we published it on Apr 24 - right on time!&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YXId8-If--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1386110558668214280/pu/img/EBi5EboBwEB7Y6EH.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hCF7KqCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1336782118924455944/K4ZDwHHg_normal.png" alt="Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/nitya"&gt;@nitya&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/hashtag/VisualGreenTech"&gt;#VisualGreenTech&lt;/a&gt; &lt;br&gt;&lt;br&gt;The Battle For Planet Earth&lt;br&gt;An AJ-NN Animated Film&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/Sketchmation"&gt;#Sketchmation&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      00:12 AM - 25 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1386110718143959044" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1386110718143959044" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1386110718143959044" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;p&gt;I hope this inspires you to check out Minecraft Sustainability City. And don't forget:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Things you can do to improve your GreenTech IQ&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Learn &lt;a href="https://aka.ms/visual-greentech"&gt;The Principles Of Sustainable Software Engineering&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Watch the &lt;a href="https://channel9.msdn.com/Shows/Hello-World/Hello-World-April-22-2021-Special-Hello-Earth?WT.mc_id=mobile-24661-ninarasi"&gt;#EarthDay Special&lt;/a&gt; episode of Hello World!&lt;/li&gt;
&lt;li&gt;Read the &lt;a href="https://techcommunity.microsoft.com/t5/green-tech-blog/a-visual-guide-to-sustainabilitycity-let-s-talk-minecraft/ba-p/2326878"&gt;Tech Community&lt;/a&gt; post on this #SustainabilityCity guide&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

</description>
      <category>azure</category>
      <category>sketchnote</category>
      <category>greentech</category>
      <category>sustainability</category>
    </item>
    <item>
      <title>Announcing Demo Day! 🎉</title>
      <author>Arit Amana</author>
      <pubDate>Wed, 05 May 2021 17:18:02 +0000</pubDate>
      <link>https://dev.to/ourtimefortech/announcing-demo-day-c4c</link>
      <guid>https://dev.to/ourtimefortech/announcing-demo-day-c4c</guid>
      <description>&lt;p&gt;For almost 12 weeks, as part of our CodeCollab track, early-career developers Timi (&lt;a class="mentioned-user" href="https://dev.to/timilehin08"&gt;@timilehin08&lt;/a&gt;
), Gabrielle (&lt;a class="mentioned-user" href="https://dev.to/gabrielleeaston"&gt;@gabrielleeaston&lt;/a&gt;
), Sara (&lt;a class="mentioned-user" href="https://dev.to/saradotlog"&gt;@saradotlog&lt;/a&gt;
) and Cam (&lt;a class="mentioned-user" href="https://dev.to/dordsichord"&gt;@dordsichord&lt;/a&gt;
) have been building The Shiftwork App from scratch.&lt;/p&gt;

&lt;p&gt;The process has been exciting. 🥳&lt;/p&gt;

&lt;p&gt;It has also been challenging. 😭&lt;/p&gt;

&lt;p&gt;Above all, this project has expanded the team's technical, communication and collaborations skills like never before. &lt;/p&gt;

&lt;p&gt;On March 27th, the team shall present The Shiftwork App at Our Time For Tech's first-ever Demo Day!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And YOU are invited!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.tickettailor.com/events/ourtimefortech/519355"&gt;&lt;strong&gt;Grab a free ticket here&lt;/strong&gt;&lt;/a&gt; and please show up to support our hard-working fellows! 🙏🏾&lt;/p&gt;

&lt;p&gt;At the virtual event, the team will summarize the app's features, share on what they learned and how they grew, and entertain questions from the audience.&lt;/p&gt;

&lt;p&gt;We hope you will join us! 🧡&lt;/p&gt;

</description>
      <category>womenintech</category>
      <category>codenewbie</category>
      <category>rails</category>
    </item>
    <item>
      <title>TypeScript:  What's the Point?</title>
      <author>Shaundai Person</author>
      <pubDate>Wed, 05 May 2021 17:10:08 +0000</pubDate>
      <link>https://dev.to/shaundai/typescript-what-s-the-point-51l6</link>
      <guid>https://dev.to/shaundai/typescript-what-s-the-point-51l6</guid>
      <description>&lt;p&gt;TypeScript is just a superset of JavaScript, meaning it's &lt;em&gt;just&lt;/em&gt; JavaScript - but with enhanced functionality.  When you run an application built in TypeScript, the code is compiled into the same JavaScript you know and love before being run in your browser.  &lt;em&gt;(btw - for this reason, you can use TypeScript anywhere you’d normally use JavaScript – on the frontend &lt;strong&gt;and&lt;/strong&gt; on the backend!)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The only issue with is that TypeScript - to someone who has never used a statically-typed language - is annoying af.  When you’re used to the carefree life of declaring variables without having to worry about their future, what they’ll eventually become, and the functions they’ll have to interact with, adding types to your code just seems like a bunch of extra work for little reward.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-why-not-just-use-javascript"&gt;
  &lt;/a&gt;
  So, Why Not Just Use JavaScript?
&lt;/h2&gt;

&lt;p&gt;The short answer is: TypeScript makes code &lt;strong&gt;less error prone&lt;/strong&gt; and &lt;strong&gt;more readable&lt;/strong&gt; than JavaScript.  It was designed especially for projects that meet the following criteria:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Large or complex (enterprise-level applications)&lt;/li&gt;
&lt;li&gt;Maintained by multiple people&lt;/li&gt;
&lt;li&gt;Will evolve or be updated over time&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#less-error-prone"&gt;
  &lt;/a&gt;
  Less Error Prone
&lt;/h4&gt;

&lt;p&gt;The big difference between TypeScript and JavaScript is &lt;strong&gt;when typechecking happens&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;First, what is &lt;em&gt;&lt;strong&gt;typechecking&lt;/strong&gt;&lt;/em&gt;?  &lt;strong&gt;Typecheckers&lt;/strong&gt; are type police built into JavaScript to enforce the type laws (for example, it’s against the rules to multiply a string with an array).  Typechecking is the process where typecheckers verify that your code follows all of the rules of the language.&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;dynamically-typed languages&lt;/strong&gt; like JavaScript, typechecking occurs during &lt;em&gt;runtime&lt;/em&gt;.  This means you’ll find out about your mistakes when you run your program.  This may happen locally as you’re testing, during your unit tests or smoke tests, or even in production after you’ve shipped it to your customers.&lt;/p&gt;

&lt;p&gt;By contrast, &lt;strong&gt;statically-typed languages&lt;/strong&gt; like TypeScript check types during &lt;em&gt;compile time&lt;/em&gt; - right in your text editor!  This means that you’ll instantaneously see mistakes that could potentially break your code &lt;em&gt;as you make them&lt;/em&gt;.  Not only does this prevent you from shipping a buggy app, it also closes the gap between when you &lt;strong&gt;make&lt;/strong&gt; the mistake and when you &lt;strong&gt;find out&lt;/strong&gt; you’ve made a mistake, getting you to a fix, faster.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#more-readable"&gt;
  &lt;/a&gt;
  More Readable
&lt;/h4&gt;

&lt;p&gt;With explicitly typed code, others can look at your code and easily understand what it’s meant to do.  If you’re working in a huge code base with other engineers, this added level of readability is crucial for preventing new type errors.&lt;/p&gt;

&lt;p&gt;Once you’ve got a solid understanding of how to use TypeScript, you’ll also notice that the way you think about code will start to change.  Because static typing forces you to think about types before you’ve even declared any values, you'll get great at mapping out the relationships between your components and their functions in your head before you even declare any variables!  You'll be able to identify and account for new edge cases before deploying to production.  Overall, you can expect that your code will be sturdier and much easier to maintain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-vs-typescript"&gt;
  &lt;/a&gt;
  JavaScript vs TypeScript
&lt;/h2&gt;

&lt;p&gt;Now let's look at some examples.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-1"&gt;
  &lt;/a&gt;
  Example 1:
&lt;/h3&gt;

&lt;h5&gt;
  &lt;a href="#adding-two-numbers-to-calculate-padding-on-a-button"&gt;
  &lt;/a&gt;
  Adding two numbers to calculate padding on a button.
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buttonPadding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You wrote the above code earlier today to calculate the amount of padding for buttons in your app.  If the button does not have an icon, we want 6px of extra padding.  &lt;code&gt;const a&lt;/code&gt; is the potential amount of padding we’ll have, and we’ll concatenate &lt;code&gt;a&lt;/code&gt; and ‘px’ before plugging it into our CSS.&lt;/p&gt;

&lt;p&gt;As long as &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are both numbers, &lt;code&gt;buttonPadding&lt;/code&gt; will work fine!  But let’s say that you’re coding along and accidentally change &lt;code&gt;a&lt;/code&gt; to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;4px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buttonPadding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's a small mistake, but now &lt;code&gt;a&lt;/code&gt; will return a string.  If you’re using JavaScript, this may still &lt;em&gt;run&lt;/em&gt; just fine, but you’ll wonder why you're not getting &lt;em&gt;any&lt;/em&gt; of that extra padding on that button.  It's because buttonPadding is now &lt;code&gt;undefined&lt;/code&gt;.  &lt;strong&gt;And let’s be honest - it’s always silly little code errors like that these take up &lt;em&gt;so&lt;/em&gt; much of our debugging time and patience to try to resolve!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you instead used TypeScript, though, you would’ve gotten one of those &lt;del&gt;annoying&lt;/del&gt; super helpful red squigglies under &lt;code&gt;buttonPadding&lt;/code&gt; &lt;b&gt;as you were coding&lt;/b&gt;, letting you know that we expected &lt;code&gt;a&lt;/code&gt; to be a number, but it’s a string.  When you hover over the squiggly, you will see this error message:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;4px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buttonPadding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
  &lt;span class="c1"&gt;// error: Type 'string' is not assignable to type 'number'.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;TypeScript gives you the context you need to easily find out what’s wrong and where the mistake happened, saving you a huge headache.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-2"&gt;
  &lt;/a&gt;
  Example 2:
&lt;/h3&gt;

&lt;h5&gt;
  &lt;a href="#calling-an-array-method"&gt;
  &lt;/a&gt;
  Calling an array method
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;southernBreakfastItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;biscuits&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gravy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sausage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;grits&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;breakfastList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;southernBreakfast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;food&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;food&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You wrote this block of code 6 months ago.  &lt;code&gt;breakfastList&lt;/code&gt; maps over this array (&lt;code&gt;southernBreakfastItems&lt;/code&gt;) of food items you’ve gotten back from a menu API (let's just imagine that this is what your Promise is returning) and just returns the name of each item.&lt;/p&gt;

&lt;p&gt;Your colleague opens the codebase today and starts working with this old component.  They unknowingly change the Promise returned in &lt;code&gt;southernBreakfast&lt;/code&gt; to a single string:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;southernBreakfast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;biscuits&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;breakfastList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;southernBreakfast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;food&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;food&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A type error like this has the potential to break your app.  Without static types, it can be really difficult to track down where the source of the issue is coming from.&lt;/p&gt;

&lt;p&gt;If you use explicit types instead, you get a helpful error line under the &lt;code&gt;.map&lt;/code&gt; in the text editor letting you know that you're trying to run a &lt;code&gt;.map&lt;/code&gt; on a string instead of an array.  TypeScript once again saves you from 3 hours of &lt;code&gt;console.log&lt;/code&gt;-ing. 🙌&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Property 'map' does not exist on type 'string'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#example-3"&gt;
  &lt;/a&gt;
  Example 3:
&lt;/h3&gt;

&lt;h5&gt;
  &lt;a href="#accessing-the-properties-on-an-object"&gt;
  &lt;/a&gt;
  Accessing the properties on an object
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;musician&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;Duke&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;Ellington&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;genre&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;jazz&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;birthplace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;Washington&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;D&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;placeOfBirth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;musician&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;brthplace&lt;/span&gt; &lt;span class="c1"&gt;//typo&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;yearsActive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;musician&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;years&lt;/span&gt; &lt;span class="c1"&gt;// years does not exist on this object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Neither &lt;code&gt;placeOfBirth&lt;/code&gt; or &lt;code&gt;yearsActive&lt;/code&gt; will actually work, but if you’re using JavaScript you won’t &lt;em&gt;find out&lt;/em&gt; that they don’t work until you run your app locally (or worse - after you ship it to the customer).  By contrast, TypeScript gives you helpful and specific feedback within your text editor &lt;em&gt;as you type&lt;/em&gt;!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;placeOfBirth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;musician&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;brthplace&lt;/span&gt;
&lt;span class="c1"&gt;// Property 'brthplace' does not exist on type `'{ firstName: string; lastName: string; genre: string; birthplace: string; }'`. Did you mean 'birthplace'?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above, TypeScript sees that you made a small spelling typo and tries to gently guide you toward the error as you’re coding.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;yearsActive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;musician&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;years&lt;/span&gt;
&lt;span class="c1"&gt;// Property 'years' does not exist on type '{ firstName: string; lastName: string; genre: string; birthplace: string; }'.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, TypeScript tells you that this won’t work because you said &lt;code&gt;musician&lt;/code&gt; would have 4 key-value pairs, none of which have &lt;code&gt;years&lt;/code&gt; as a key.&lt;/p&gt;

&lt;p&gt;I hope this post has convinced you that TypeScript is a worthwhile tool for scaling and managing large apps.  Now go add some static ⚡ to your app!&lt;/p&gt;

&lt;p&gt;Connect with me on &lt;a href="https://www.twitter.com/shaundai"&gt;Twitter&lt;/a&gt; and on &lt;a href="https://www.linkedin.com/in/shaundai"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>typescript</category>
      <category>javascript</category>
    </item>
    <item>
      <title>The Curse of the A-word</title>
      <author>Sergey Bykov</author>
      <pubDate>Wed, 05 May 2021 17:04:53 +0000</pubDate>
      <link>https://dev.to/temporalio/the-curse-of-the-a-word-1o7i</link>
      <guid>https://dev.to/temporalio/the-curse-of-the-a-word-1o7i</guid>
      <description>&lt;p&gt;I wanted to write this post ever since I saw David Fowler's tweet and the discussion it triggered.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---A5bMP84--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt8irq2n337p5tsf7u4i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---A5bMP84--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt8irq2n337p5tsf7u4i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
While it may have taken me quite some time to get around to answering it, 2020 wasn't an ordinary year by any measure.&lt;/p&gt;

&lt;p&gt;I took my first steps into the Actor Model space more than a decade ago, when I started working on the Orleans project. I have been and will continue to be an enthusiast of actors. We published a few papers and I gave a number of talks about them. However, over time I gradually stopped using the term 'actors' even when explaining the properties and benefits of the Actor Model. This post is an attempt to explain why.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#minefield-of-conflations"&gt;
  &lt;/a&gt;
  Minefield of Conflations
&lt;/h2&gt;

&lt;p&gt;When we open-sourced Orleans in January of 2015, I was surprised by the amount of debate it generated on the seemingly trivial topic. The debate was about whether or not Orleans was in fact a faithful implementation of the Actor Model and if grains were actors at all. Even though we published the tech report "&lt;a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/Orleans-MSR-TR-2014-41.pdf"&gt;Orleans: Distributed Virtual Actors for Programmability and Scalability&lt;/a&gt;" nine months beforehand, it didn't seem to help much in those discussions.&lt;/p&gt;

&lt;p&gt;It honestly took us more than a year to reach a point when Virtual Actors of Orleans were generally recognized as a legitimate interpretation of the Actor Model. It was not just another interpretation, but one that has its unique benefits, especially for high-scale applications like cloud services. I was shocked by the uphill battle it took to get there. Over time, I came to realize that a big reason for these debates is the fact that actors are inherently a minefield of conflations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conflation-1-distributed-amp-local"&gt;
  &lt;/a&gt;
  Conflation #1: Distributed &amp;amp; Local
&lt;/h3&gt;

&lt;p&gt;Whenever somebody would say "we are using actors", I learned to first ask, "is it for a distributed system or a single-process?" This question was necessary because many developers use actors as a concurrency mechanism, leveraging their "processes one message at a time" property. The Orleans team was coming from the C#/.NET background where there was already a strong support for concurrency and asynchrony, with features like Promises (Tasks) and await. So from our vantage point, there was little reason to use actors just for basic concurrency. However, in languages with less native support for concurrency (ie: Java), local actors (used within a single process) continue to be a useful mechanism for concurrency and asynchrony.&lt;/p&gt;

&lt;p&gt;Both local and distributed actors adhere to the same three rules of the Actor Model definition — in response to a message, an actor can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Send messages to other actors&lt;/li&gt;
&lt;li&gt;Create actors&lt;/li&gt;
&lt;li&gt;Change its behavior for next message&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, distributed actors that live in a cluster of servers exist in a very different and more hostile environment; an environment of network messages, latencies, failure modes, and uncertainty about their state.&lt;/p&gt;

&lt;p&gt;Despite the commonality of the core three rules that apply to both, I would argue there's very little else in common between local and distributed actors, especially when it comes to application design, tradeoffs, failure modes, and major aspects of how actors supporting runtimes are implemented.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conflation-2-supervision-trees-amp-actors"&gt;
  &lt;/a&gt;
  Conflation #2: Supervision Trees &amp;amp; Actors
&lt;/h3&gt;

&lt;p&gt;Erlang was the first popular implementation of the Actor Model. Arguably, it was Erlang that is responsible for bringing actors into the mainstream and pioneering a number of important design choices. One of them was the idea of supervisors which are actors that are responsible for handling failures of other actors by recreating or restarting them, etc. Supervisors are usually used in hierarchies, known as supervision trees. These trees make it easy to reset a system of interconnected actors into a known state after a failure.&lt;/p&gt;

&lt;p&gt;Akka, being a faithful adaptation of Erlang ideas to the JVM world, also implemented supervision trees as the key failure handling mechanism. When your goal is to build a resilient system that cleanly resets chunks of its state in response to a failure this makes a ton of sense. The subtlety of the fact that supervision trees of Erlang and Akka are just a way to implement actors was lost on many people. In their minds, supervisors and supervision trees became part of the Actor Model itself.&lt;/p&gt;

&lt;p&gt;It took us a lot of effort to explain why we chose a different approach (Virtual Actors) to handling failures in Orleans. The Virtual Actor method of automatic lifecycle management by the runtime doesn't use supervisors and has its benefits, especially in many cloud scenarios. Keep in mind that the supervision tree approach may be superior in other cases, such as where you have a hierarchy of actors and need the ability to reset it. The point is that "actors" ≠ "supervision trees", and it's a tax having to explain it to new people coming from the Erlang/Akka background.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conflation-3-message-passing-amp-oneway-messages"&gt;
  &lt;/a&gt;
  Conflation #3: Message Passing &amp;amp; One-Way Messages
&lt;/h3&gt;

&lt;p&gt;In the world of traditional actors, it is more common to send one-way messages without expecting an immediate response. More than that, the request-response (RPC) pattern is considered dangerous. Actor developers are told to use it with extra care because the calling actor will be blocked until a response is received.&lt;/p&gt;

&lt;p&gt;In Orleans, we chose the opposite default, with asynchronous RPC being the primary way of invoking actors. Each such RPC call has a built-in timeout. That removes the need for developers to worry about their actor getting blocked forever. Actors can also be marked as reentrant, so that they aren’t blocked from processing other calls at all while awaiting for a response.&lt;/p&gt;

&lt;p&gt;Multiple asynchronous RPC calls can be made by an actor concurrently, e.g. to fan out to a number of other actors. The elegance of async/await makes merging of the resulting promises in a desired way and awaiting a joint Promise for the whole fan-out operation a trivial pattern.&lt;/p&gt;

&lt;p&gt;One-way messages are also supported in Orleans, but they are not the primary pattern because in most cases developers want to know at least if a call successfully arrived to the caller or failed or timed out.&lt;/p&gt;

&lt;p&gt;This is yet another fundamental area with a significant "explanation tax", incurred by the different choices other implementations of the Actor Model have made. I suspect that if we had not used the term "actor" in defining Orleans from the beginning, we wouldn't have spent so much effort explaining ourselves. The async/await pattern for efficiently managing asynchrony had been established in the .NET ecosystem a long time ago, and there's no expectation of supervision trees in that developer community.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conflation-4-state-transition-amp-become"&gt;
  &lt;/a&gt;
  Conflation #4: State transition &amp;amp; Become
&lt;/h3&gt;

&lt;p&gt;This is a smaller issue. However, I’ve had several conversations with people who insisted on a specific interpretation of the third rule of actors (that they can change their behavior of processing subsequent messages). They interpreted it to mean that there must be an explicit way to tell an actor to become something different. The claim was that if your actors don't support an explicit feature like that, they are not real actors.&lt;/p&gt;

&lt;p&gt;In my opinion, this rule simply means that an actor can change its internal state, whether it’s a formal state machine or a boolean/enum flag that will define how the actor should process another call. For example, Digital Twins are a mainstream pattern to model program entities that shadow physical IoT devices in order to reflect their state and to communicate with them. Actors are an obvious fit to implement Digital Twins.&lt;/p&gt;

&lt;p&gt;When a Digital Twin actor receives a "turn device off" command, it is very natural for the actor to flip an internal state variable that reflects the “off” state. In that state, the actor ignores or rejects all commands except for a "turn device on", which flips that variable back to “on”.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#elephant-in-the-room-actors-amp-models"&gt;
  &lt;/a&gt;
  Elephant in the Room: Actors &amp;amp; Models
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U4bGulFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hgwatx1rr8zxfamkbnx0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U4bGulFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hgwatx1rr8zxfamkbnx0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I've seen a number of presentations about actors that start with a meme slide showing some famous actor’s photo. This is because the vast majority of developers have never heard of the Actor Model. This would be ok if the term "actor" carried some intuitive connotation for them. In my experience, it does not. Even worse, when presenting about Orleans, the minority of the audience that knew about actors often had the above listed conflations in mind. It was a no-win situation, for both parts of the audience. Every time I presented, I had to spend energy and time pushing that boulder up the hill. At some point I stopped doing that by avoiding talking about actors altogether.&lt;/p&gt;

&lt;p&gt;Instead, I started describing grains in Orleans as objects that live somewhere within a cluster of servers. These objects have stable identities and are always available for an invocation. Objects are a widely understood concept. It is easy to build on the concept by adding that each such object has a unique identifier of your choosing, hides (encapsulates) its state, and is only accessible via asynchronous method calls defined as part of an interface. Object, interface, method call — these are no new concepts to grasp. You just have to imagine objects working transparently across machine boundaries in the combined memory and compute space of a cluster. This approach was more effective, catering to a wide range of audiences, from academic to experienced cloud developers to “I want to learn about building scalable applications” developers.&lt;/p&gt;

&lt;p&gt;I'm happy that we chose to call Orleans actors "grains", not "actors". "Grain" is not a perfect term by any means, but at least it conveys the general idea of a rather small piece of an application. I would argue it is much better than "actor".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dotnet.github.io/orleans/docs/index.html"&gt;The landing page of Orleans documentation&lt;/a&gt; nowadays only mentions actors once — in reference to our &lt;a href="https://www.microsoft.com/en-us/research/publication/orleans-distributed-virtual-actors-for-programmability-and-scalability/"&gt;Orleans: Distributed Virtual Actors for Programmability and Scalability&lt;/a&gt; 2014 paper. This is a result of our conscious effort of reducing the cognitive load on people that come to the page to learn about Orleans.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/reubenbond"&gt;Reuben Bond&lt;/a&gt; recently started describing grains as Cloud Native Objects. Again, not a perfect term. But I like it because it tries to convey the benefits of the model and where it is most applicable. &lt;a href="https://twitter.com/RogerAlsing"&gt;Roger Johansson&lt;/a&gt; even suggested a CNOB acronym for it. 🙂&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--150LKncU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjtxg7phtl0vu8yfk6jh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--150LKncU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjtxg7phtl0vu8yfk6jh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I am a big fan of the Actor Model as a simple and clean model of computations. In particular, it is an excellent fit for building distributed systems, whether it be on premises or in the cloud. I am forever grateful to Carl Hewitt, Peter Bishop, and Richard Steiger for their original insight, and to many subsequent followers that pushed those ideas forward. Implementations of the Actor Model and the ideas it pioneered power many high-scale and mission-critical systems today.&lt;/p&gt;

&lt;p&gt;At the same time, I’m convinced now that the name of the term "actor" was a rather unfortunate choice. It took me years to gradually arrive to this realization.  In my view, the very word “actor” continues to be a major barrier for adoption of the Actor Model ideas for the broader population of developers. I cannot formally prove it. This is just my speculation, of course. I listed several other contributing factors that in my opinion add to this confusion.&lt;/p&gt;

&lt;p&gt;Remember that old saying about two hard things in computer science: naming things and cache invalidation? I believe it is part of the answer to the question, “Why aren’t actor frameworks more popular?&lt;/p&gt;

&lt;p&gt;In my opinion, the Cloudflare folks made a pragmatic choice to call their (for all practical purposes) virtual actors "durable objects." Once again not perfect, but much more developer friendly than "actors." I like Reuben's idea of calling grains Cloud Native Objects. It helps people quickly get a high-level intuitive understanding of what it is and decide if it's relevant to them.&lt;/p&gt;

&lt;p&gt;If there’s a better term, I'm open to your ideas. Just not "actors", please.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>discuss</category>
      <category>career</category>
      <category>architecture</category>
    </item>
    <item>
      <title>9 Games Every Programmer Should Play !!!</title>
      <author>Rishabh Singh ⚡</author>
      <pubDate>Wed, 05 May 2021 16:54:36 +0000</pubDate>
      <link>https://dev.to/basecampxd/9-games-every-programmer-should-play-fab</link>
      <guid>https://dev.to/basecampxd/9-games-every-programmer-should-play-fab</guid>
      <description>&lt;p&gt;Learning to code is hard especially when you are just starting out but it becomes a lot more fun when you start to enjoy the learning process. And games are a great way to achieve the same.&lt;/p&gt;

&lt;p&gt;So here's a list of 9 Coding based games you should start playing to help improve your coding skills and have a lot of fun in the process.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#codemonkey"&gt;
  &lt;/a&gt;
  Codemonkey
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i2mpQZBV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9vobeqei3sghgqz2iwng.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i2mpQZBV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9vobeqei3sghgqz2iwng.png" alt="2021-05-04 21_50_54-(3) 8 Games to improve your coding skills"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Codemonkey teaches coding using CoffeeScript, a real programming language, to teach you to build your own games in HTML5. It's aimed at coding for kids, but it's definitely fun for adults, too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visit Codemonkey here - &lt;a href="https://www.codemonkey.com/"&gt;https://www.codemonkey.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#codingame"&gt;
  &lt;/a&gt;
  CodinGame
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eCMlZBrB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ythrvcik0p6bf1tn3dbs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eCMlZBrB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ythrvcik0p6bf1tn3dbs.png" alt="2021-05-04 21_51_23-Coding Games and Programming Challenges to Code Better - Brave"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for a way to improve your coding skills as well as learn new concepts but are tired of the regular tutorials and want something fun and interesting then you should definitely try CodinGame. It is a platform providing interactive and free games to help learn more than 25 popular programming languages including JavaScript, Ruby, Java, Rust, C# and PHP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visit CodinGame here - &lt;a href="https://www.codingame.com/"&gt;https://www.codingame.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#flexbox-froggy"&gt;
  &lt;/a&gt;
  Flexbox Froggy
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wXi8vl3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/keww3kjym1jph5p4ksl8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wXi8vl3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/keww3kjym1jph5p4ksl8.png" alt="2021-05-04 21_51_48-(3) 8 Games to improve your coding skills"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to learn how CSS flexbox works? Check out Flexbox Froggy. It has a simple interface that teaches you the basics of how things align in flexbox while you help Froggy and his friends.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visit Flexbox Froggy here - &lt;a href="https://flexboxfroggy.com/"&gt;https://flexboxfroggy.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#code-combat"&gt;
  &lt;/a&gt;
  Code Combat
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yht1p6EI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wl7uzoyevx0rhhgynplx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yht1p6EI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wl7uzoyevx0rhhgynplx.png" alt="2021-05-04 21_52_18-CodeCombat - Coding games to learn Python and JavaScript _ CodeCombat - Brave"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code Combat is aimed at teachers and students, but anyone can play. Learn Python, JavaScript, CoffeeScript, or the Lua game scripting language. On the beginner Dungeon level, you'll move your Hero through the game using some basic commands according to the tutorial alongside the game.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visit Code Combat here - &lt;a href="https://codecombat.com/"&gt;https://codecombat.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#untrusted"&gt;
  &lt;/a&gt;
  Untrusted
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hwPHrm95--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b8tg79jf2hx77rsmtivi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hwPHrm95--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b8tg79jf2hx77rsmtivi.png" alt="2021-05-04 21_53_49-(3) 8 Games to improve your coding skills"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Untrusted is a meta-JavaScript adventure game that tests your JavaScript skills to solve problems. You use Javascript to guide Dr Eval through a machine continuum and alter his reality to move between levels. It's a free fun game for practising Javascript skills.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visit Untrusted here - &lt;a href="https://www.playuntrusted.com/"&gt;https://www.playuntrusted.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cyber-dojo"&gt;
  &lt;/a&gt;
  Cyber Dojo
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nhRKw4wS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ucw7y66s25blb5a6uksu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nhRKw4wS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ucw7y66s25blb5a6uksu.png" alt="2021-05-04 21_52_56-(3) 8 Games to improve your coding skills"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cyber Dojo has practise exercises and challenges for dozens of coding languages including Ruby, JavaScript, PHP, Python and more. Each exercise spells out a challenge to complete with an example showing what the end result should look like. It's a great way to practice your code skills.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visit Cyber Dojo here - &lt;a href="https://www.cyber-dojo.org/creator/home"&gt;https://www.cyber-dojo.org/creator/home&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#elevator-saga"&gt;
  &lt;/a&gt;
  Elevator Saga
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mzmbTH-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/om8olmh2wz8l4snyolj1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mzmbTH-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/om8olmh2wz8l4snyolj1.png" alt="2021-05-04 21_54_13-Elevator Saga - the elevator programming game - Brave"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Elevator Saga tests your Javascript knowledge with challenges related to moving an elevator and transporting people in the most efficient manner possible. It starts out with a challenge to move 15 people in less than a minute, with challenges getting progressively harder from there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visit Elevator Saga here - &lt;a href="https://play.elevatorsaga.com/"&gt;https://play.elevatorsaga.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#vim-adventures"&gt;
  &lt;/a&gt;
  Vim Adventures
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kz6ek252--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ks9wbjy4gmft8blal6uk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kz6ek252--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ks9wbjy4gmft8blal6uk.png" alt="2021-05-04 21_54_38-(3) 8 Games to improve your coding skills (Small)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vim is a highly configurable text editor used by programmers. If you want to learn how to use Vim, then VIM Adventures is a great place to start! Use common VIM keyboard shortcuts to navigate your way through a Zelda-like adventures game.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visit Vim Adventures here - &lt;a href="https://vim-adventures.com/"&gt;https://vim-adventures.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#ai-gaming"&gt;
  &lt;/a&gt;
  AI Gaming
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AOixh3cz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72r7lepxyrliiruijo84.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AOixh3cz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72r7lepxyrliiruijo84.png" alt="2021-05-04 21_59_58-Home Page - aigaming.com - Brave"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Last but not the least, we have Microsoft's AI Gaming Platform where you can code bots in python and compete against your friends on 30+ different games &amp;amp; challenges. You can also participate in tournaments to win some really cool prizes. Along with learning to code a bot in Python, you will also get hands-on practice in using Microsoft's Cloud Platform, Azure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visit AI Gaming here - &lt;a href="https://www.aigaming.com/"&gt;https://www.aigaming.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  Support
&lt;/h2&gt;

&lt;p&gt;Thank you so much for reading! I hope you learnt something new today. Please leave a like, a lovely comment or feedback &amp;amp; also consider following me as I regularly post useful &amp;amp; informative articles to help you become a better programmer. &lt;/p&gt;

&lt;p&gt;If you like my work please consider &lt;a href="https://buymeacoff.ee/mindninjaX"&gt;Buying me a Coffee&lt;/a&gt; so that I can bring more projects, more articles for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SNezDmj5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5irx7eny4412etlwnc64.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SNezDmj5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5irx7eny4412etlwnc64.png" alt="https://dev-to-uploads.s3.amazonaws.com/i/5irx7eny4412etlwnc64.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  Connect with me
&lt;/h2&gt;

&lt;p&gt;If you have any questions or doubts feel free to contact me on &lt;a href="https://twitter.com/mindninjaX"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/mindninjax/"&gt;LinkedIn&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mindninjaX"&gt;GitHub&lt;/a&gt;. Or you can also post a comment/discussion here &amp;amp; I will try my best to help you :D&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>watercooler</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Tech Stack to build your crypto, NFT or Apps</title>
      <author>sydneylai</author>
      <pubDate>Wed, 05 May 2021 16:34:05 +0000</pubDate>
      <link>https://dev.to/sydneylai/tech-stack-to-build-your-crypto-nft-or-apps-3hpa</link>
      <guid>https://dev.to/sydneylai/tech-stack-to-build-your-crypto-nft-or-apps-3hpa</guid>
      <description>&lt;h1&gt;
  &lt;a href="#tech-stack-to-build-your-crypto-nft-or-apps"&gt;
  &lt;/a&gt;
  Tech Stack to build your crypto, NFT or Apps
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#pick-a-blockchain-protocol"&gt;
  &lt;/a&gt;
  Pick a blockchain protocol
&lt;/h2&gt;

&lt;p&gt;You've heard of it. You want it. You have some. How are NFTs and crypto built? These web3 (blockchain) and decentralized applications are built on an architecture that is alien from what I've learned in my classic developer bootcamp.&lt;/p&gt;

&lt;p&gt;I'll provide an intro to beginner tools you can use to get started. We will focus on the Ethereum protocol (there are many others) as it's the main protocol that crypto (built on ERC-20), dApps (decentralized apps) (built on ERC-20), and NFTs (built on ERC-721, ERC-1155) are built on. The adoption rate for the Ethereum protocol is staggering in comparison to other protocols, with 3000+ applications and overall Q1 NFT sales for 2021 topping $2B.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/sydneylai/status/1389261566051340292"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VrjoGHGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/dLupgtD.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Growth of Ethereum)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-the-same-compared-to-traditional-programming"&gt;
  &lt;/a&gt;
  What's the same compared to traditional programming
&lt;/h2&gt;

&lt;p&gt;Compared to traditional programming, testing and integration are reasonably similar. The languages used are the same in addition to Solidity, an object-oriented programming language for writing smart contracts. The languages a developer should be familiar with are C++, Python, and JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-different-compared-to-traditional-programming"&gt;
  &lt;/a&gt;
  What's different compared to traditional programming
&lt;/h2&gt;

&lt;p&gt;Deployment is very different, and because the blockchain is immutable, every time you deploy it's permanent. A developer will need to audit code to ensure the security of code and certainty. Therefore data storage and maintenance differ as well.&lt;/p&gt;

&lt;p&gt;One important difference compared to traditional development is that the data with which the contract interacts must already be on the blockchain. &lt;/p&gt;

&lt;p&gt;To inject data onto the blockchain requires an oracle, which allows other contracts to consume it. An oracle must be secure or vulnerabilities will be exposed and attacked. &lt;/p&gt;

&lt;p&gt;If the oracle is faulty or compromised, the &lt;a href="https://docs.chain.link/"&gt;Chainlink SDK&lt;/a&gt; can be used as a network of nodes that provide data and information from off-blockchain sources to on-blockchain smart contracts via oracles.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"Instead of calling an API to your backend, it's going to call an API to the blockchain and it's going to read off whatever the state of that blockchain is. It's going to be a different environment just because you don't have the kind of ownership of your smart contracts on your backend as you do in the traditional sense." - Patrick Collins, Developer Advocate at Chainlink&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Listen to a Patrick Collins explain securing oracles on Decoded Podcast &lt;a href="https://open.spotify.com/episode/3AD34nKzqCMoWk4OcJAdx0?si=B7fak7v-Q1afadUTH1A30A"&gt;[&lt;strong&gt;Spotify&lt;/strong&gt;]&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tools-for-web3-developers-build-an-app-or-crypto"&gt;
  &lt;/a&gt;
  Tools for Web3 Developers (Build an app or crypto)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#frameworks"&gt;
  &lt;/a&gt;
  Frameworks
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.trufflesuite.com/"&gt;Truffle&lt;/a&gt;&lt;/strong&gt; - Most popular smart contract development, testing, and deployment framework. The Truffle suite includes Truffle, Ganache, and Drizzle. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://hardhat.org/"&gt;Hardhat&lt;/a&gt;&lt;/strong&gt; - Flexible, extensible and fast Ethereum development environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://openzeppelin.com/sdk/"&gt;OpenZeppelin SDK&lt;/a&gt;&lt;/strong&gt; - A suite of tools to help you develop, compile, upgrade, deploy and interact with smart contracts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/iamdefinitelyahuman/brownie"&gt;Brownie&lt;/a&gt;&lt;/strong&gt; - Brownie is a Python framework for deploying, testing, and interacting with Ethereum smart contracts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootstrapoutofbox-tools"&gt;
  &lt;/a&gt;
  Bootstrap/Out-of-Box tools
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.trufflesuite.com/boxes"&gt;Truffle boxes&lt;/a&gt;&lt;/strong&gt; - Packaged components for the Ethereum ecosystem&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#communicating-with-ethereum"&gt;
  &lt;/a&gt;
  Communicating with Ethereum
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/dfuse-io/client-js"&gt;dfuse&lt;/a&gt;&lt;/strong&gt; - A TypeScript library to use dfuse Ethereum API&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://ethereum.stackexchange.com/"&gt;Ethereum Stack Exchange&lt;/a&gt;&lt;/strong&gt; - Post and search questions to help your development life cycle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.metacartel.org/"&gt;MetaCartel 💰&lt;/a&gt;&lt;/strong&gt; - If you have a project built on Ethereum and need $5K - $10K in developer grants, you can apply &lt;a href="https://forum.metacartel.org/t/guide-how-to-post-a-funding-proposal/74"&gt;here&lt;/a&gt; or any Q&amp;amp;A DM &lt;a href="https://twitter.com/sydneylai"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#optional-build-for-web2-developers-build-an-app"&gt;
  &lt;/a&gt;
  Optional Build for Web2 Developers (Build an app)
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.outsystems.com/pro-developers/?utm_source=outsystems&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Evangelist_devto_20210505"&gt;OutSystems&lt;/a&gt;&lt;/strong&gt; full-stack platform for the development of mobile and web enterprise applications, which run in the cloud, on-premises, or in hybrid environments.&lt;/p&gt;

&lt;p&gt;If the web3 stack set-up is too complex and you want something up and running you can build as a solo dev with &lt;a href="https://www.outsystems.com/pro-developers/?utm_source=outsystems&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Evangelist_devto_20210505"&gt;OutSystems&lt;/a&gt;, a developer platform that allows you to build web and mobile applications on the enterprise level. This allows you to quickly build a full-stack application regardless of your framework, as long as you know basic application architecture. &lt;/p&gt;

&lt;p&gt;Here's a video where I will walk you through how to connect a database, manage dependencies for plugins, and replicate a full-stack build of a mobile wallet to hold your ETH and various tokens. This app is easy to build with the OutSystems developer platform and you will have yourself a super sweet personal wallet!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/_K0BVsi9OjA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;What you will learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Introduction to rapid development for mobile&lt;/li&gt;
&lt;li&gt;How to quickly build applications with developer tools&lt;/li&gt;
&lt;li&gt;Walkthrough of how to create API integrations in-app with AI scripts&lt;/li&gt;
&lt;li&gt;Introduction to ERC20, wallets, and other blockchain token protocols&lt;/li&gt;
&lt;li&gt;Enjoy the ease of building and implementing your own private wallet&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#building-nfts"&gt;
  &lt;/a&gt;
  Building NFTs
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.opensea.io/docs/opensea-sdk"&gt;&lt;strong&gt;OpenSea SDK&lt;/strong&gt;&lt;/a&gt; - A peer-to-peer marketplace for rare digital items. Buy, sell, auction, and discover collectibles.&lt;/p&gt;

&lt;p&gt;ERC-721: “Single” if you want your collectible to be one of a kind &lt;br&gt;
ERC-1155: “Multiple” if you want to sell one collectible multiple times&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#blockchain-for-all"&gt;
  &lt;/a&gt;
  Blockchain for all
&lt;/h2&gt;

&lt;p&gt;Building applications (crypto, NFT, dApps) on blockchain is becoming more accessable and there are various ways for developers of all skill levels to get started. Feel free to reach out on Dev.To or Twitter if you need any help! 👋 &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#extra-content"&gt;
  &lt;/a&gt;
  Extra Content
&lt;/h2&gt;

&lt;p&gt;Listen to Patrick Collins, developer advocate at Chainlink explain securing oracles on Decoded Podcast.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/3AD34nKzqCMoWk4OcJAdx0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>blockchain</category>
    </item>
    <item>
      <title>10+ Best React Material-UI Admin Template</title>
      <author>Rakesh S Nakrani</author>
      <pubDate>Wed, 05 May 2021 15:36:52 +0000</pubDate>
      <link>https://dev.to/rakesh_nakrani/10-best-react-material-ui-admin-template-51ob</link>
      <guid>https://dev.to/rakesh_nakrani/10-best-react-material-ui-admin-template-51ob</guid>
      <description>&lt;p&gt;Here I am coming up with the collection of best &lt;em&gt;react material-UI admin template&lt;/em&gt; of 2021. All are built with &lt;a href="https://material-ui.com/getting-started/installation/"&gt;Material-UI&lt;/a&gt;, a top-rated components library that strictly follows Material Design Guidelines. Also, it is quite a popular &lt;a href="https://github.com/mui-org/material-ui"&gt;repository&lt;/a&gt; in GitHub for a long period of time.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To make this post worth for you I have filtered the list with its Usability, Flexibility, and compatibility criteria. So you can get a powerful template for your project. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Few templates are newbies but those are in high demand to fulfill your backend needs.&lt;/p&gt;

&lt;p&gt;Almost all templates have common features like Axios, React Hooks, React-Redux, Authentication methods like Auth0, Firebase, and JWT. Few of them support both JavaScript &amp;amp; TypeScript language.&lt;/p&gt;

&lt;p&gt;Based upon my research, I found the below react templates. Hope you like this post and find your desired react dashboard template.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Template List&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Materially&lt;/li&gt;
&lt;li&gt;Devias&lt;/li&gt;
&lt;li&gt;Minimal&lt;/li&gt;
&lt;li&gt;Fuse React&lt;/li&gt;
&lt;li&gt;Berry React&lt;/li&gt;
&lt;li&gt;Material Dashboard Pro&lt;/li&gt;
&lt;li&gt;Jumbo&lt;/li&gt;
&lt;li&gt;Tokyo&lt;/li&gt;
&lt;li&gt;Material App Pro&lt;/li&gt;
&lt;li&gt;React Material Admin by FlatLogic&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#materially"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Materially&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XlK2bGoQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcrl07qykfv2dhaaixi3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XlK2bGoQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcrl07qykfv2dhaaixi3.jpg" alt="Materially React Dashboard Template"&gt;&lt;/a&gt;&lt;br&gt;
The reason to choose Materially is for its Simplicity and flexibility. If you want a Material design-specific admin template then you can go with Materially. Its color, card styles, shadow, pages are similar to material design guidelines. On the other hand, You can get a lot of pages, as well as pre-build apps like sass, e-commerce, chat, mail, and many more. The materially react dashboard template is a perfect duo of user experience design and coding standards.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-materially-react"&gt;
  &lt;/a&gt;
  Why Choose Materially React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Pure Material Look and feel.&lt;/li&gt;
&lt;li&gt;5+ Working Apps and Advance UI components.&lt;/li&gt;
&lt;li&gt;Authentication Methods - Auth0, JWT, Firebase.&lt;/li&gt;
&lt;li&gt;Multilanguage and RTL Support.&lt;/li&gt;
&lt;li&gt;Form components and included 3’rd party plugins like MUI Data Table, Modal, Formik, and many more.&lt;/li&gt;
&lt;li&gt;Easy to access Documentation guide.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://codedthemes.com/demos/admin-templates/materially/react/default"&gt;Live Preview&lt;/a&gt; &lt;a href="https://codedthemes.com/item/materially-reactjs-admin-dashboard/"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://codedthemes.com"&gt;CodedThemes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devias"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Devias&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Edm3abhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wt4iz41zv1cmy39yszwp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Edm3abhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wt4iz41zv1cmy39yszwp.jpg" alt="Devias material-ui admin template"&gt;&lt;/a&gt;&lt;br&gt;
If you want a professional backend template then Devias is the priority choice for you. I am considering Devias for its performance and highly flexible code structure along with always updated code. Devias also serve you better if you consider complex projects. It has ready-to-use Material-UI components developed with one common goal in mind, to help you build faster &amp;amp; beautiful applications. &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-devias-material-kit"&gt;
  &lt;/a&gt;
  Why Choose Devias Material Kit?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Error Free tested design &amp;amp; pure code.&lt;/li&gt;
&lt;li&gt;The design follows all the Material design guidelines.&lt;/li&gt;
&lt;li&gt;TypeScript support along with Figma &amp;amp; Sketch Design resource files.&lt;/li&gt;
&lt;li&gt;Authentication Methods with Amplify Auth support.&lt;/li&gt;
&lt;li&gt;Ready to deploy Folder structure.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://react-material-kit.devias.io/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://material-ui.com/store/items/devias-kit-pro/"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;strong&gt;Devias&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#minimal"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Minimal&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yFY-uoyH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6qnb073dd17iwol4hnd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yFY-uoyH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6qnb073dd17iwol4hnd.jpg" alt="minimal react"&gt;&lt;/a&gt;&lt;br&gt;
Minimal is worth it for its UI and excellent user experience. You must say “WOW! What a masterpiece” when you see it. Minimal React is not just the ordinary backend template, It has everything that makes your project finish. From UI components to working apps you feel the Minimal experience is the same as its name. &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-minimal-react"&gt;
  &lt;/a&gt;
  Why Choose Minimal React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Minimal design &amp;amp; timely support.&lt;/li&gt;
&lt;li&gt;Strong components and utility foundation.&lt;/li&gt;
&lt;li&gt;Working apps Mail, Chat, Calendar, and many more.&lt;/li&gt;
&lt;li&gt;Organized Structuring patterns in code and folder directory.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://minimals.cc/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://material-ui.com/store/items/minimal-dashboard/"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;strong&gt;Trinh Minimal&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fuse-react"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Fuse React&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bHyYj1_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qeupqegn7sz0t0lrtnqo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bHyYj1_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qeupqegn7sz0t0lrtnqo.jpg" alt="Fuse React Dashboard"&gt;&lt;/a&gt;&lt;br&gt;
Fuse React is top selling Material-UI Admin Template in Themeforest. It includes 5 example apps, 20+ pages, lots of reusable react components, and more. If you're looking for a powerful and professional admin template for Web Applications, CRM, CMS, Admin Panels then you may choose Fuse. This template isn't only a good place to start, but it also has a bunch of advanced stuff to learn.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-fuse-react"&gt;
  &lt;/a&gt;
  Why Choose Fuse React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Private GitHub Repository access.&lt;/li&gt;
&lt;li&gt;Multiple Layouts &amp;amp; Theme Styling options with having Multilanguage &amp;amp; RTL Support.&lt;/li&gt;
&lt;li&gt;E-commerce, Academy, To-do, File Manager, Mail, Contact, Chat, Srumboard, and many more full-featured applications.&lt;/li&gt;
&lt;li&gt;Extensive Documentation.&lt;/li&gt;
&lt;li&gt;Helper classes and Authentication Methods support.&lt;/li&gt;
&lt;li&gt;Typography font size selection.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="http://react-material.fusetheme.com/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://themeforest.net/item/fuse-react-react-redux-material-design-admin-template/21769397"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="http://www.withinpixels.com/"&gt;withinpixels&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#berry-react"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Berry React&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--li8gWwAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5g4ol0lkpce8o5bqh4t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--li8gWwAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5g4ol0lkpce8o5bqh4t.jpg" alt="berry react material-ui admin template"&gt;&lt;/a&gt;&lt;br&gt;
Berry is the newly launched Admin Template build for simplifying your development by having performance-centric code. Also, You can build your web applications faster and beautifully. At first glance, you definitely fall in love with Berry’s design. Berry gives you wings to fly high with your project for their standardized code structure, beautiful user interface, and feature-rich material-UI react admin template.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-berry-react"&gt;
  &lt;/a&gt;
  Why Choose Berry React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Simple yet minimal Design with warm color palettes gives you the best User Experience.&lt;/li&gt;
&lt;li&gt;TypeScript Support.&lt;/li&gt;
&lt;li&gt;Figma Design resource file.&lt;/li&gt;
&lt;li&gt;Light/Dark Layouts with RTL and Multi-Language support.&lt;/li&gt;
&lt;li&gt;5+ working Apps for User Management, Customer, Email, Chat, Calendar, Contact.&lt;/li&gt;
&lt;li&gt;Material UI extended and advanced form components.&lt;/li&gt;
&lt;li&gt;Supports Auth0, JWT, Firebase Authentication Methods.&lt;/li&gt;
&lt;li&gt;Easy folder structure and well-optimized code standard.&lt;/li&gt;
&lt;li&gt;Knowledgebase, Tutorials series, and extensive Documentation guide.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://berrydashboard.io"&gt;Live Preview&lt;/a&gt; &lt;a href="https://berrydashboard.io"&gt;Soon available for Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://codedthemes.com"&gt;CodedThemes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#material-dashboard-pro"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Material Dashboard Pro&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qjYDLe8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7x35wfqc3s5qrxl4r5d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qjYDLe8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7x35wfqc3s5qrxl4r5d.jpg" alt="material dashboard pro by creative-tim"&gt;&lt;/a&gt;&lt;br&gt;
If you know the Creative-Tim, then I guarantee that you know the Material Dashboard PRO template. It is out of the box and a popular material admin template. Material Dashboard Pro has a simple structure and minimal pages with stylish cards. The smooth animation flows make a super-intuitive user experience.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-material-dashboard-pro"&gt;
  &lt;/a&gt;
  Why Choose Material Dashboard Pro?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;If you are a novice developer, You can easily make work using Material Dashboard Pro.&lt;/li&gt;
&lt;li&gt;Sidebar filters with options of color, image, layout variants.&lt;/li&gt;
&lt;li&gt;Extended Forms and Form wizard pages.&lt;/li&gt;
&lt;li&gt;UI Components with extra useful pages like Pricing, Authentication, Maps, Charts, and many more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://demos.creative-tim.com/material-dashboard-pro-react/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://www.creative-tim.com/product/material-dashboard-pro-react"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://www.creative-tim.com"&gt;Creative-Tim&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jumbo-react"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Jumbo React&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oceaIQBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brsusojnrcv81tn4imaa.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oceaIQBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brsusojnrcv81tn4imaa.jpg" alt="Jumbo react"&gt;&lt;/a&gt;&lt;br&gt;
I love the Jumbo React for its jumbo features like theme &amp;amp; sidebar variants, 8+ Layout options, 3 Container settings, Sidebar sizes, theme color presets with RTL support. “You demand &amp;amp; Jumbo have it” - all combo in just one template. G-axon is a team passionate about helping others get results and have fun doing it.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-jumbo-react"&gt;
  &lt;/a&gt;
  Why Choose Jumbo React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Multi variants of Pages &amp;amp; Color Presets.&lt;/li&gt;
&lt;li&gt;Along with Material-UI components, Jumbo has Coremat components included.&lt;/li&gt;
&lt;li&gt;360 Degree after-sales support - Video Tutorials, Slack community, Online documentation, and ticket support system.&lt;/li&gt;
&lt;li&gt;Private GitHub Repo Access.&lt;/li&gt;
&lt;li&gt;Useful widgets and apps like Social, wall, chat, contact, and many more.&lt;/li&gt;
&lt;li&gt;Multi-Language support&lt;/li&gt;
&lt;li&gt;Layout Builder&lt;/li&gt;
&lt;li&gt;Micro Interaction-based Interactivity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://jumbo.g-axon.work/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://themeforest.net/item/react-material-bootstrap-4-admin-template/20978545"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://g-axon.com/"&gt;g-axon&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tokyo-react"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Tokyo React&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vembLE3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2lr260p599xod95dz6wj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vembLE3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2lr260p599xod95dz6wj.jpg" alt="tokyo material-ui backend template"&gt;&lt;/a&gt;&lt;br&gt;
If you ever need the app pages for your project then Tokyo React is your one-stop admin template. Featured with 12 niche dashboard pages, 6 applications, 5 Management sections, Multiple Auth methods, Translations ready text, and lots more make Tokyo a really powerful react backend template.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-tokyo-react"&gt;
  &lt;/a&gt;
  Why Choose Tokyo React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Best Google Lighthouse performance, SEO-ready pages.
PWA optimized.&lt;/li&gt;
&lt;li&gt;Starter Kit.&lt;/li&gt;
&lt;li&gt;Figma design resource file.&lt;/li&gt;
&lt;li&gt;TypeScript supported react admin template.&lt;/li&gt;
&lt;li&gt;Multiple Layout options with RTL Support.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://bloomui.com/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://material-ui.com/store/items/tokyo-react-admin-dashboard/"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://bloomui.com/"&gt;bloom-ui&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#material-app-pro"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Material App Pro&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PH-LGlGs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emn1m1flgepko059v8eq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PH-LGlGs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emn1m1flgepko059v8eq.jpg" alt="material app pro"&gt;&lt;/a&gt;&lt;br&gt;
Material App Pro is a damn good full-fledged template built on top of the most popular front-end React Material-UI library in the world. You can say, It is a professional grade admin template in terms of usability and flexibility. It featured up to 50+ pages that give you the freedom of choosing and combining. If you're familiar with Material-UI, then you'll certainly love this theme!. They said - “The sky is the limit!”&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-material-app-pro-react"&gt;
  &lt;/a&gt;
  Why Choose Material App Pro React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Professional design with a sense of Typography and spacing.&lt;/li&gt;
&lt;li&gt;Figma/Sketch design resource files that easing your pre-development plan.&lt;/li&gt;
&lt;li&gt;Besides the components, it has Dashboards, Settings, Pricing,
&lt;/li&gt;
&lt;li&gt;Project, Task, Calendar, and many more pages included.&lt;/li&gt;
&lt;li&gt;Free updates and 12 months support.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://material-app.bootlab.io/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://material-ui.com/store/items/material-app/"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://bootlab.io/"&gt;BootLab&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-material-admin-by-flatlogic"&gt;
  &lt;/a&gt;
  &lt;strong&gt;React Material Admin by FlatLogic&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qus0SSuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qiuj8raf3vwu1uiwp8kg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qus0SSuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qiuj8raf3vwu1uiwp8kg.jpg" alt="react material admin"&gt;&lt;/a&gt;&lt;br&gt;
FlatLogic is one of the top players in the template market. They make enterprise-grade admin templates and UI kits. “React Material Admin” which is very easy to get started with your project in no time. They are committed to constantly update their portfolio on a regular basis. So you can always get updated code. &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-it"&gt;
  &lt;/a&gt;
  Why Choose it?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Private GitHub repo access to receive future updates.&lt;/li&gt;
&lt;li&gt;Various Chart Libraries.&lt;/li&gt;
&lt;li&gt;Fully Documented Codebase.&lt;/li&gt;
&lt;li&gt;The Perfect Folder Structure.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://flatlogic.github.io/react-material-admin-full"&gt;Live Preview&lt;/a&gt; &lt;a href="https://flatlogic.com/templates/react-material-admin-full"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://flatlogic.com"&gt;FlatLogic&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you have any other Material-UI Admin Template that is likely to add to this post. Please comment here with the link. I would love to see it.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>typescript</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Benchmark: Mezon Router is up to 699 times faster then Danny VanKooten Router</title>
      <author>alexdodonov</author>
      <pubDate>Wed, 05 May 2021 15:30:11 +0000</pubDate>
      <link>https://dev.to/alexdodonov/benchmark-mezon-router-is-up-to-699-times-faster-then-danny-vankooten-router-4hce</link>
      <guid>https://dev.to/alexdodonov/benchmark-mezon-router-is-up-to-699-times-faster-then-danny-vankooten-router-4hce</guid>
      <description>&lt;p&gt;Hi all! Today we have one more benchmark.&lt;/p&gt;

&lt;p&gt;As usual we have two cases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;http server accepts request, launches php script, which handles this request, and then all script data is removed from memory. All following requests are processed in the same way. In this case very critical to launch script as soon as possible and we do not have time for long pre-compilations and preparations. Because all of it will be lost after the script will finish working;&lt;/li&gt;
&lt;li&gt;php script is launching, initiating all internal components (and router is one of them) and then starting processing requests. This case can be organized via for example react-php. It differs from the previous case because we can spend reasonable time to pre-compile routes for faster processing.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#the-first-case"&gt;
  &lt;/a&gt;
  The first case
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// static routes&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateDVKStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/0'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;matchCurrentRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateDVKStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/99'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;matchCurrentRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateDVKStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/199'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;matchCurrentRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// and so on till the URL '/static/999' will be dispatched&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// non static routes&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateDVKNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/0/1'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;matchCurrentRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateDVKNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/99/1'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;matchCurrentRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateDVKNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/199/1'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;matchCurrentRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// and so on till /param/999/1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#the-second-case"&gt;
  &lt;/a&gt;
  The second case
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// static routes&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateDVKStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/0'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;matchCurrentRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/99'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;matchCurrentRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/199'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;matchCurrentRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// and so on till '/static/999'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For non static routes the code will be almost the same:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// noon static routes&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateDVKNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/0/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;matchCurrentRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/99/1'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;matchCurrentRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/199/1'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;matchCurrentRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// and so on till '/param/999/1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#ok-what-do-we-have"&gt;
  &lt;/a&gt;
  OK What do we have?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#the-first-case-static-routes"&gt;
  &lt;/a&gt;
  The first case + static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+-------------------------------+-------------+-----+------+-----+------------+--------------+--------------+--------------+---------------+--------------+--------+-------+
| benchmark                     | subject     | set | revs | its | mem_peak   | best         | mean         | mode         | worst         | stdev        | rstdev | diff  |
+-------------------------------+-------------+-----+------+-----+------------+--------------+--------------+--------------+---------------+--------------+--------+-------+
| DVKSingleRequestStaticBench   | benchStatic | 0   | 10   | 10  | 3,164,904b | 26,676.000μs | 37,299.030μs | 32,646.041μs | 72,208.700μs  | 12,914.306μs | 34.62% | 2.82x |
| HoaSingleRequestStaticBench   | benchStatic | 0   | 10   | 10  | 3,767,208b | 45,560.200μs | 67,694.660μs | 51,770.530μs | 129,072.800μs | 30,490.339μs | 45.04% | 5.12x |
| MezonSingleRequestStaticBench | benchStatic | 0   | 10   | 10  | 2,206,672b | 9,709.900μs  | 13,222.950μs | 11,321.774μs | 24,963.000μs  | 4,410.786μs  | 33.36% | 1.00x |
+-------------------------------+-------------+-----+------+-----+------------+--------------+--------------+--------------+---------------+--------------+--------+-------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-first-case-nonstatic-routes"&gt;
  &lt;/a&gt;
  The first case + non-static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+-------+
| benchmark                    | subject    | set | revs | its | mem_peak     | best          | mean          | mode          | worst         | stdev        | rstdev | diff  |
+------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+-------+
| DVKSingleRequestParamBench   | benchParam | 0   | 10   | 10  | 3,157,288b   | 33,162.900μs  | 52,719.290μs  | 39,991.057μs  | 97,777.500μs  | 21,746.969μs | 41.25% | 1.00x |
| HoaSingleRequestParamBench   | benchParam | 0   | 10   | 10  | 4,086,136b   | 48,539.900μs  | 55,639.510μs  | 52,388.467μs  | 82,447.100μs  | 9,470.701μs  | 17.02% | 1.06x |
| MezonSingleRequestParamBench | benchParam | 0   | 10   | 10  | 139,428,024b | 136,006.900μs | 197,098.140μs | 149,144.021μs | 345,790.300μs | 71,218.783μs | 36.13% | 3.74x |
+------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+-------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-second-case-static-routes"&gt;
  &lt;/a&gt;
  The second case + static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+-----------------------+-------------+-----+------+-----+------------+--------------+--------------+--------------+--------------+-------------+--------+---------+
| benchmark             | subject     | set | revs | its | mem_peak   | best         | mean         | mode         | worst        | stdev       | rstdev | diff    |
+-----------------------+-------------+-----+------+-----+------------+--------------+--------------+--------------+--------------+-------------+--------+---------+
| DVKReactStaticBench   | benchStatic | 0   | 100  | 10  | 2,424,208b | 11,048.590μs | 15,240.144μs | 12,817.814μs | 22,492.560μs | 3,833.736μs | 25.16% | 699.12x |
| HoaReactStaticBench   | benchStatic | 0   | 100  | 10  | 2,813,280b | 3,766.940μs  | 4,199.743μs  | 3,987.875μs  | 5,587.870μs  | 524.565μs   | 12.49% | 192.66x |
| MezonReactStaticBench | benchStatic | 0   | 100  | 10  | 1,827,504b | 18.830μs     | 21.799μs     | 19.519μs     | 27.630μs     | 3.473μs     | 15.93% | 1.00x   |
+-----------------------+-------------+-----+------+-----+------------+--------------+--------------+--------------+--------------+-------------+--------+---------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-second-case-non-static-routes"&gt;
  &lt;/a&gt;
  The second case + non static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------------+------------+-----+------+-----+------------+--------------+--------------+--------------+--------------+-----------+--------+--------+
| benchmark            | subject    | set | revs | its | mem_peak   | best         | mean         | mode         | worst        | stdev     | rstdev | diff   |
+----------------------+------------+-----+------+-----+------------+--------------+--------------+--------------+--------------+-----------+--------+--------+
| DVKReactParamBench   | benchParam | 0   | 100  | 10  | 2,428,600b | 13,478.530μs | 14,429.128μs | 14,759.621μs | 15,486.620μs | 636.758μs | 4.41%  | 12.53x |
| HoaReactParamBench   | benchParam | 0   | 100  | 10  | 3,281,496b | 3,659.830μs  | 3,723.384μs  | 3,697.556μs  | 3,874.030μs  | 60.340μs  | 1.62%  | 3.23x  |
| MezonReactParamBench | benchParam | 0   | 100  | 10  | 3,048,784b | 1,094.830μs  | 1,151.188μs  | 1,112.331μs  | 1,263.570μs  | 59.018μs  | 5.13%  | 1.00x  |
+----------------------+------------+-----+------+-----+------------+--------------+--------------+--------------+--------------+-----------+--------+--------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h1&gt;

&lt;p&gt;More articles can be found in my &lt;a href="https://twitter.com/mezonphp"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-mezonrouter"&gt;
  &lt;/a&gt;
  What is mezon/router?
&lt;/h1&gt;

&lt;p&gt;mezon/router now is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;framework for routing with &lt;strong&gt;100% code coverage&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;10.0 points&lt;/strong&gt; on scrutinizer-ci.com&lt;/li&gt;
&lt;li&gt;router is a part of the &lt;a href="https://github.com/alexdodonov/mezon"&gt;Mezon Project&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Repo on github.com: &lt;a href="https://github.com/alexdodonov/mezon-router"&gt;https://github.com/alexdodonov/mezon-router&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#it-will-be-great-if-you-will-contribute-something-to-this-project-documentation-sharing-the-project-in-your-social-media-bug-fixing-refactoring-or-even-submitting-issue-with-question-or-feature-request-thanks-anyway-"&gt;
  &lt;/a&gt;
  It will be great if you will contribute something to this project. Documentation, sharing the project in your social media, bug fixing, refactoring, or even &lt;strong&gt;&lt;a href="https://github.com/alexdodonov/mezon-router/issues"&gt;submitting issue with question or feature request&lt;/a&gt;&lt;/strong&gt;. Thanks anyway )
&lt;/h1&gt;

</description>
      <category>php</category>
      <category>router</category>
      <category>benchmark</category>
      <category>mezon</category>
    </item>
    <item>
      <title>How to prevent a developer's burnout?</title>
      <author>Eleftheria Batsou</author>
      <pubDate>Wed, 05 May 2021 15:22:33 +0000</pubDate>
      <link>https://dev.to/eleftheriabatsou/how-to-prevent-a-developer-s-burnout-1fhc</link>
      <guid>https://dev.to/eleftheriabatsou/how-to-prevent-a-developer-s-burnout-1fhc</guid>
      <description>&lt;p&gt;Burnout is a real thing! A few days ago I asked on Twitter how you prevent it and I have to admit I got some great ideas and some tips I didn't think of!&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;How do you prevent &lt;a href="https://twitter.com/hashtag/softwaredeveloper?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#softwaredeveloper&lt;/a&gt; burnout?😳&lt;a href="https://twitter.com/hashtag/DEVCommunity?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#DEVCommunity&lt;/a&gt;&lt;/p&gt;— Eleftheria Batsou (@BatsouElef) &lt;a href="https://twitter.com/BatsouElef/status/1386961061790711811?ref_src=twsrc%5Etfw"&gt;April 27, 2021&lt;/a&gt;
&lt;/blockquote&gt; 

&lt;p&gt;Burn-out is defined in  &lt;a href="https://www.who.int/news/item/28-05-2019-burn-out-an-occupational-phenomenon-international-classification-of-diseases#:~:text=%E2%80%9CBurn%2Dout%20is%20a%20syndrome,related%20to%20one's%20job%3B%20and"&gt;ICD-11&lt;/a&gt;  as follows:&lt;/p&gt;

&lt;p&gt;“Burn-out is a syndrome conceptualized as resulting from chronic workplace stress that has not been successfully managed. It is characterized by three dimensions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;feelings of energy depletion or exhaustion;&lt;/li&gt;
&lt;li&gt;increased mental distance from one’s job, or feelings of negativism or cynicism related to one's job; and&lt;/li&gt;
&lt;li&gt;reduced professional efficacy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Burn-out refers specifically to phenomena in the occupational context and** should not be applied to describe experiences in other areas of life**.”&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#here-are-a-few-of-the-things-you-can-do-to-prevent-it"&gt;
  &lt;/a&gt;
  Here are a few of the things you can do to prevent it:
&lt;/h1&gt;

&lt;p&gt;😉 By far the most common answer was: Take Breaks!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Take a stroll in the garden. Smell some roses. Relax. The world is not running away. Look at the night sky and ponder.&lt;/p&gt;

&lt;p&gt;You need to have something in your life that is valuable and you want to protect. For me that's my family and hobbies, but everyone needs to find that out for themselves.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#tips-and-activities"&gt;
  &lt;/a&gt;
  Tips and activities
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ask for help. &lt;/li&gt;
&lt;li&gt;Don't try to fix everything; not everything is your responsibility. &lt;/li&gt;
&lt;li&gt;Be adamant and consistent about your boundaries.&lt;/li&gt;
&lt;li&gt;Set realistic expectations.&lt;/li&gt;
&lt;li&gt;Don’t feel pressured to work more than your job requires.&lt;/li&gt;
&lt;li&gt;Aim for a healthy lifestyle.&lt;/li&gt;
&lt;li&gt;Find hobbies that you can look forward to and find happiness in when you’re not working on software development.&lt;/li&gt;
&lt;li&gt;Make a conscious decision to balance work.&lt;/li&gt;
&lt;li&gt;Practicing mindfulness/meditation/ yoga.&lt;/li&gt;
&lt;li&gt;Reading books / Listening to audiobooks.&lt;/li&gt;
&lt;li&gt;Spending time with friends.&lt;/li&gt;
&lt;li&gt;Be in touch with nature, go to waterfalls, parks, the countryside. &lt;/li&gt;
&lt;li&gt;Keep a healthy work schedule.&lt;/li&gt;
&lt;li&gt;Learn to say NO.&lt;/li&gt;
&lt;li&gt;Building lego.&lt;/li&gt;
&lt;li&gt;Building things with your hands.&lt;/li&gt;
&lt;li&gt;Gardening on the backyard.&lt;/li&gt;
&lt;li&gt;If Vitamin D gets low, will most likely result in an anxious/depressed person. Sunlight through glass doesn't work, so you really do need to be outside during daylight hours. 20 mins minimum.&lt;/li&gt;
&lt;li&gt;Have "no screen" time.&lt;/li&gt;
&lt;li&gt;Having a REAL-WORLD hobby. For this reason, I don't recommend video games (though I know that many developers play after labor day). Just need some rest from these hellish machines.&lt;/li&gt;
&lt;li&gt;Lifting weights/cardio, stretching.&lt;/li&gt;
&lt;li&gt;Doing the chores.&lt;/li&gt;
&lt;li&gt;Drawing.&lt;/li&gt;
&lt;li&gt;Sleep well! / Take short naps!&lt;/li&gt;
&lt;li&gt;Solve basic math problems/do puzzles (check the method  &lt;a href="https://www.healthline.com/health/grounding-techniques#physical-techniques"&gt;here&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Prioritize your health; eat well, rest well, take breaks, get a new hobby. Life is not 24/7 development &amp;amp; coding.&lt;/p&gt;

&lt;p&gt;One way to avoid it yourself is to help others avoid it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Help others where you can. Encourage your teammates to take breaks and get sleep. Build excellent knowledge to make learning simple. Make routine tasks easy - if not automated. Your team will help you back when you need it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ws9mGgzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620223447608/jA29TUNsy.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ws9mGgzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620223447608/jA29TUNsy.jpeg" alt="pexels-nataliya-vaitkevich-6837648.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use the word "burnout" only according to the definition provided at the top of the article. Maybe you feel stressed or tired, this doesn't mean you have been burned-out. If things are not working well for you you could always ask for professional help. I hope these tips can help you. Stay safe.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Take mental health days.&lt;/p&gt;

&lt;p&gt;TAKE 👏 THAT 👏 VACAY&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thank you everyone for participating in Twitter :)&lt;/p&gt;

&lt;p&gt;If you want to take part in these questions make sure to follow me on  &lt;a href="https://twitter.com/BatsouElef"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.instagram.com/elef_in_tech"&gt;Instagram&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;👋Hello, I'm Eleftheria, a developer, public speaker, and chocolate lover.&lt;/p&gt;

&lt;p&gt;🥰If you liked this post please share.&lt;/p&gt;

&lt;p&gt;🍩Would you care about buying me a coffee? You can do it &lt;a href="https://www.buymeacoffee.com/elef/"&gt;here&lt;/a&gt; but If you can't that's ok too!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.paypal.com/paypalme/eleftheriabatsou"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7QXiTcCu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616336641314/ycZgZ44G3.gif" alt="cofGif.gif"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;🙏It would be nice to subscribe to my &lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; channel. It’s free and it helps to create more content.&lt;/p&gt;

&lt;p&gt;🌈&lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; | &lt;a href="https://codepen.io/EleftheriaBatsou"&gt;Codepen&lt;/a&gt; | &lt;a href="https://github.com/EleftheriaBatsou"&gt;GitHub&lt;/a&gt; | &lt;a href="https://twitter.com/BatsouElef"&gt;Twitter&lt;/a&gt; | &lt;a href="http://eleftheriabatsou.com/"&gt;Site&lt;/a&gt; | &lt;a href="https://www.instagram.com/elef_in_tech"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>burnout</category>
      <category>workaholic</category>
    </item>
  </channel>
</rss>
