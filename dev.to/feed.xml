<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What are Video on Demand (Vod)?</title>
      <author>Sagar Kava</author>
      <pubDate>Sat, 24 Jul 2021 09:16:08 +0000</pubDate>
      <link>https://dev.to/sagarkava/what-are-video-on-demand-vod-4gag</link>
      <guid>https://dev.to/sagarkava/what-are-video-on-demand-vod-4gag</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cQ5aYFT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://eastceylon.com/images/2021/07/24/Upload-video-from-anywhere.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cQ5aYFT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://eastceylon.com/images/2021/07/24/Upload-video-from-anywhere.jpg" alt="Upload-video-from-anywhere.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.videosdk.live/"&gt;Video on Demand&lt;/a&gt; (VoD) creates an online video library for the viewers, which they can access anytime at their ease with any compatible device. Unlike the traditional media broadcasting channels, which demanded viewers to watch videos at the time of broadcast only, VoD is different. It allows viewers to view content at their comfort.&lt;/p&gt;

&lt;p&gt;Video on Demand technology, the future of online content delivery has witnessed a rapid engagement in the current times. Today, the majority of the content is found attractive when it is in video format. There comes the idea of VoD. VoD is an abbreviation for Video on Demand. This system provides the technology of storing video content on the cloud in a compressed file format. Researchers have found that more than a written article or an e-mail, today, video content looks more alluring to the reader who has turned into a viewer. It is well said that whatever we visualize has more worth than whatever we read or listen to. The content visualized always holds more significance.&lt;/p&gt;

&lt;p&gt;With the increasing global population, the use of smartphones and internet connection has also increased. This has in turn led to an increase in demand for online digital content. Today the businesses have witnessed a rise in demand for videos, and to assure you, this is a never-ending demand which is creating endless opportunities. Video on Demand is a technology that serves to reap benefits to the content creators as well. It allows users to view videos at their comfort, whenever they want, and in whatsoever manner they choose to view them. Video on Demand allows flexible viewing facilities to the users. This blog explains the term Video on Demand in detail, about what it is, how it works, and its benefits.&lt;/p&gt;

&lt;p&gt;On a Video on Demand platform, one can play videos, seek the video forward and backward, pause and play, and watch later. It helps in managing videos, and deliver the content with the help of CDNs, which helps in providing fast and reliable content delivery to the businesses. Professionally, it also helps businesses to have full control over the content delivery and its distribution. It helps to customize the content delivery for businesses to deliver the apt data consensual by them. It sets an arrangement of pre-recorded data, which can be reviewed in the future.&lt;/p&gt;

&lt;p&gt;Often live streaming and VoD are considered similar but in reality, they are pretty different. Let us understand what is live streaming.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-live-streaming"&gt;
  &lt;/a&gt;
  What is Live Streaming?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.videosdk.live/"&gt;Live streaming&lt;/a&gt; is a concept that allows businesses to stream their content online. Viewers can watch the content on a real-time basis. The viewers can watch the streaming which is happening live and can also watch them later, if recorded, using VoD. &lt;/p&gt;

&lt;p&gt;live stream, the viewers can also pause, play, and make the videos play backward. Live streaming is valuable as it connects to its customers, creating a live bond with them. It also allows live chat with the viewers. VoD lacks a live chat facility, though it allows a well-versed playback video facility for the same recorded live stream.&lt;/p&gt;

&lt;p&gt;Live streaming helps businesses to make announcements for the public, media releases, and press conferences to increase their PR activity with the external environment. Live streaming is a beneficial tool as it helps businesses to boost their marketing and branding strategies too. A live stream can be later accessed as a VoD. the stream can also be accessed later with the help of the VoD facility.&lt;br&gt;
Content creators can reach out to audiences by live streaming:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#a-behindthescenes-look-at-your-business-or-daily-routine"&gt;
  &lt;/a&gt;
  A behind-the-scenes look at your business or daily routine.
&lt;/h4&gt;

&lt;p&gt;Q&amp;amp;A session.&lt;br&gt;
Tutorials (makeup, yoga poses).&lt;br&gt;
Skills demonstrations (cooking, eLearning).&lt;br&gt;
Tips, tricks, and advice.&lt;br&gt;
Webinars.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-choose-an-ideal-video-on-demand-facility"&gt;
  &lt;/a&gt;
  How to choose an ideal Video on Demand facility?
&lt;/h3&gt;

&lt;p&gt;Choosing an ideal VoD facility is a must as it helps in making engagements better. The viewers are generally consumer-oriented which leads to a raised concern of security and a good system workforce, which doesn’t lag or create unusual issues for the general viewers. Analyzing business trends, good branding is necessary, but in the current trends, businesses have turned customer-oriented, where the features have been designed in accordance to the customer ease.&lt;/p&gt;

&lt;p&gt;Videosdk.live makes the client experience better. We infuse all the features of live streaming as well as video-on-demand at one platform. We make your experience worth sharing with others. We keep up with a huge product range, starting from&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Customizable API and SDK with UI library&lt;/li&gt;
&lt;li&gt;Low-latency scalable live streaming&lt;/li&gt;
&lt;li&gt;Video-on-demand facility&lt;/li&gt;
&lt;li&gt;Content Delivery Networks and more&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;All these products we serve to our clients on a single platform enhancing the consumer-development opportunities and user-friendly approach.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#video-on-demand-facilities"&gt;
  &lt;/a&gt;
  video on demand facilities
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;(1) Whitelabel&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can host your videos on live streaming with the Whitelabel facility, engaging the screen with your branding and logo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(2) Scalable streaming&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We cater to flawless, uninterrupted streaming, with the stream recording facility. We help you engage a million users&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(3) Compatibility&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We are compatible with 98% of devices, including Android, iOS, and more. All we aim is to provide maximum engagement to your application&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(4) Customizable APIs and SDKs&lt;/strong&gt;&lt;br&gt;
Videosdk.live develop APIs and SDKs designed on the demand of its clients in any manner they wish&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(5) Video on demand facility&lt;/strong&gt;&lt;br&gt;
With the facility of live streaming, videosdk.live also allows a flexible VoD feature, where the clients can view the content at their ease.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(6) Video playback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We also offer a facility of video playback, where the viewers get an option to loop the video, play and pause, and make their video fasten or slow as for their comfort.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(7) Secured accessibility&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We ensure secured access to your platform for your customers to make a better engagement platform for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(8) Adaptive Live Streaming&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Videosdk.live caters to scalable streaming based on the device, supportive quality, and  internet bandwidth&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;(9) Adaptive Video Streaming&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We also provide services for streaming videos, with effective scalability and VoD facility, supporting the majority of devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(10) Encoding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Videosdk.live helps in encoding videos and images, compressing them into digital format, saving them as fluid data making them compatible with all mobile devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(11) Hosting&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We provide the facility of hosting videos, which are uploaded by the clients with us. We help in uploading the videos and hosting them to online platforms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(12) Content Delivery Network&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We provide a global CDN with global geo-replication and edge location delivery. Protected with DDos, we ensure faster delivery with enterprise-grade security.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(13) Multi-platform Streaming&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Stream live on several social media platforms all at once. Enjoy going live, consuming less time. Build a strong branding strategy with us.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#tips-for-starting-a-successful-vod-business"&gt;
  &lt;/a&gt;
  Tips for Starting a Successful VOD Business
&lt;/h4&gt;

&lt;p&gt;Whether you’re a professional content creator considering a video-based business or transitioning your company online to keep up with the times, streaming video can work for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vod-business-models"&gt;
  &lt;/a&gt;
  VOD Business Models
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-svod-subscription-videoondemand"&gt;
  &lt;/a&gt;
  (1) SVOD (Subscription Video-On-Demand)
&lt;/h4&gt;

&lt;p&gt;The SVOD, or Subscription Video-On-Demand, model gives viewers full access to a video library for a recurring monthly or annual fee.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Netflix&lt;br&gt;
Amazon Prime &lt;br&gt;
Disney+&lt;br&gt;
Hulu&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-tvod-transactional-videoondemand"&gt;
  &lt;/a&gt;
  (2) TVOD (Transactional Video-On-Demand)
&lt;/h4&gt;

&lt;p&gt;TVOD, or Transactional Video-On-Demand, uses a pay-per-view format. Customers make one-time purchases to access specific content. &lt;/p&gt;

&lt;p&gt;For example, buying full seasons or individual episodes of your favorite tv shows through Amazon Prime or iTunes.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-avod-advertising-videoondemand"&gt;
  &lt;/a&gt;
  (3) AVOD (Advertising Video-On-Demand)
&lt;/h4&gt;

&lt;p&gt;AVOD, or Advertising Video-On-Demand, is essentially “free” for viewers because there’s no up-front cost to watch.&lt;/p&gt;

&lt;p&gt;AVOD revenue comes from businesses paying to advertise with short commercials throughout your videos.&lt;/p&gt;

&lt;p&gt;For viewers, this is a familiar setup because it feels like cable TV,  where they tune in to watch shows for the “price” of watching ads. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.videosdk.live/"&gt;Videosdk.live&lt;/a&gt; is an ideal platform for users to develop their streaming platforms flawless with no extra effort. We customize our APIs and SDKs according to client preferences to increase their app engagement. The CDNs we use for storing the digital content are exclusively secured enabling reliable and scalable streaming.Videosdk.live excels in its features.&lt;/p&gt;

&lt;p&gt;Apart from the above facilities, we also deliver some additional features making ourselves a reliable platform to use. Connect with us and explore what you never explored before.&lt;/p&gt;

&lt;p&gt;Reach us and get enriched with more such value content and an everlasting business corporate relation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#build-your-own-netflix"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.videosdk.live/"&gt;(Build Your Own Netflix)&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>webdev</category>
      <category>devops</category>
      <category>rails</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to Fix Brightness Controller Missing on Linux XFCE Desktop?</title>
      <author>Mir Rahed Uddin</author>
      <pubDate>Sat, 24 Jul 2021 08:53:33 +0000</pubDate>
      <link>https://dev.to/rahedmir/how-to-fix-brightness-controller-missing-on-linux-xfce-desktop-269o</link>
      <guid>https://dev.to/rahedmir/how-to-fix-brightness-controller-missing-on-linux-xfce-desktop-269o</guid>
      <description>&lt;p&gt;XFCE is one of the most lightweight desktop environment among other Linux desktops, resource-friendly suitable for old PC/Computers. XFCE removed most of the non-essential elements such as glossy desktop design, animations, etc in terms of making it more resource-friendly. But the problem is, in the process of doing that sometimes they also removed some essential components, and one of the such components is &lt;code&gt;brightness controller&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you are also not able to adjust your screen brightness due to this missing component follow these steps below to fix it.   &lt;/p&gt;

&lt;p&gt;1| Open your terminal and execute the following command...&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo apt-get install xfce4-power-manager-plugins&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Git_sHNK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jbo8dteazaezun5veqs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Git_sHNK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jbo8dteazaezun5veqs.png" alt="Linux Terminal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2| Enter your password and press the &lt;code&gt;y&lt;/code&gt; key to continue (if asked)&lt;/p&gt;

&lt;p&gt;3| Now, Right-click on the panel, Panel-&amp;gt; Add New Items...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bUtUACyo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mstginb461dtfjdsjsjq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bUtUACyo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mstginb461dtfjdsjsjq.png" alt="Add New Items"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4| From the "Add New Items" list, search for &lt;code&gt;Power Manager Plugin&lt;/code&gt;, select it then click on the Add button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ygC_bru--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbkwdqv8wvvhxkyyibfa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ygC_bru--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbkwdqv8wvvhxkyyibfa.png" alt="Power Manager Plugins"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5| Now, you will see the &lt;code&gt;Power Manager icon&lt;/code&gt; appear on your panel, just click on that to begin adjusting your screen brightness. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rzOhXS6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c19kke2ecrcdus2yvoi1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rzOhXS6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c19kke2ecrcdus2yvoi1.png" alt="Adjust screen brightness"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Share your thoughts if you find any other essential components which are missing from the XFCE desktop...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#watch-on-youtube"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/watch?v=237Sngl9N2I"&gt;Watch on YouTube&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Thanks for reading. Have a great day :)&lt;/p&gt;

&lt;p&gt;Coffee &lt;a href="https://www.buymeacoffee.com/rahedmir"&gt;https://www.buymeacoffee.com/rahedmir&lt;/a&gt; &lt;/p&gt;

</description>
      <category>linux</category>
      <category>devops</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>AngularJs Fully Explained</title>
      <author>Rocky</author>
      <pubDate>Sat, 24 Jul 2021 08:30:02 +0000</pubDate>
      <link>https://dev.to/codelivly/angularjs-fully-explained-26bp</link>
      <guid>https://dev.to/codelivly/angularjs-fully-explained-26bp</guid>
      <description>&lt;h3&gt;What is AngularJS?&lt;/h3&gt;
&lt;p&gt;AngularJS is an open source Model-View-Controller framework which is similar to the JavaScript framework.&lt;/p&gt;
&lt;p&gt;Angular JS is probably one of the most popular modern day web frameworks available today. This framework is used for developing mostly Single Page applications. This framework has been developed by a group of developers from Google itself.&lt;/p&gt;
&lt;p&gt;Because of the sheer support of Google and ideas from a wide community forum, the framework is always kept up to date. Also, it always incorporates the latest development trends in the market.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;b&gt;Read More&lt;/b&gt;: &lt;/span&gt;&lt;a href="https://bit.ly/3BF157E"&gt;&lt;b&gt;&lt;span&gt;Angular Js Explained&lt;/span&gt;&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Absorb Knowledge in 30 Seconds | Brain Bytes #3</title>
      <author>Loïc Boset</author>
      <pubDate>Sat, 24 Jul 2021 08:27:48 +0000</pubDate>
      <link>https://dev.to/loicboset/absorb-knowledge-in-30-seconds-brain-bytes-3-4del</link>
      <guid>https://dev.to/loicboset/absorb-knowledge-in-30-seconds-brain-bytes-3-4del</guid>
      <description>&lt;h1&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap 🧠
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.brainbytes.dev/"&gt;Brain Bytes&lt;/a&gt; is a knowledge platform where you can learn new things about software development in less than 30 seconds.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bytes-of-the-week"&gt;
  &lt;/a&gt;
  Bytes of the Week
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#dont-forget-about-raw-finally-endraw-in-your-promises"&gt;
  &lt;/a&gt;
  Don't forget about &lt;code&gt;.finally()&lt;/code&gt; in your Promises
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;.finally()&lt;/code&gt; method is useful to execute any function that needs to be executed after a Promise has been resolved (whether successfully or not).&lt;/p&gt;

&lt;p&gt;As an example for a React app, it can be used to update the loading state.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;getData()
  .then((res) =&amp;gt; {
    setData(res.data);
  })
  .catch((err) =&amp;gt; {
    setError(err);
  })
  .finally(() =&amp;gt; {
    setIsLoading(false);
  });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#javascript-variable-assignment-value-vs-reference"&gt;
  &lt;/a&gt;
  Javascript variable assignment (value vs reference)
&lt;/h3&gt;

&lt;p&gt;JS has 5 primitive types: &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, and &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When you assign a primitive type to a variable, the actual value is assigned, such as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let string1 = 'hello world'
let string2 = string1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, &lt;code&gt;string2&lt;/code&gt; is assigned the value of &lt;code&gt;string1&lt;/code&gt;, being hello world.&lt;/p&gt;

&lt;p&gt;Assigning a new value to &lt;code&gt;string2&lt;/code&gt; won't affect &lt;code&gt;string1&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;string2 = 'foor bar'

console.log(string1)
// 'hello world'
console.log(string2)
// 'foo bar'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, when the assigned value is an &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, or &lt;code&gt;Object&lt;/code&gt; a reference to the object in memory is assigned.&lt;/p&gt;

&lt;p&gt;Leading to unexpected situations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let object1 = { name: 'Alan Grant' }
let object2 = object1

object2.name = 'John Wick'

console.log(object1)
// { name: 'John Wick' }
console.log(object2)
// { name: 'John Wick' }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#javascript-closures-advanced-concept"&gt;
  &lt;/a&gt;
  Javascript Closures (Advanced Concept)
&lt;/h3&gt;

&lt;p&gt;Closures are frequently used in JavaScript for object data privacy, in event handlers and callback functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A closure gives you access to an outer function’s scope from an inner function.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To use a closure, define a function inside another function and expose it. To expose a function, return it or pass it to another function.&lt;/p&gt;

&lt;p&gt;Closures can be useful to create private variables or functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function OuterFunction() {

    let outerVariable = 1;

    function InnerFunction() {
        console.log(outerVariable);
    }

    return InnerFunction;
}

const innerFunc = OuterFunction();

innerFunc(); 
// 100
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you call &lt;code&gt;innerFunc()&lt;/code&gt;, it can still access &lt;code&gt;outerVariable&lt;/code&gt; which is declared in &lt;code&gt;OuterFunction()&lt;/code&gt;. This is called Closure.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#type-coercion"&gt;
  &lt;/a&gt;
  Type coercion
&lt;/h3&gt;

&lt;p&gt;In javascript, type coercion is the automatic process of converting a value from one type to another (for example, from string to integer).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2 * "3"
// 6

"12" / 4
// 3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#crosssite-request-forgery-csrf"&gt;
  &lt;/a&gt;
  Cross-Site Request Forgery (CSRF)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Website_security"&gt;CSRF attacks&lt;/a&gt; allow a malicious user to execute actions using the credentials of another user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; John is evil. He knows that a particular site allows logged-in users to transfer money using an HTTP POST request that includes the account name and an amount of money.&lt;/p&gt;

&lt;p&gt;John builds a form that includes his bank details and an amount of money as hidden fields, and emails it to other site users (with the Submit button disguised as a link to a "get rich quick" site).&lt;/p&gt;

&lt;p&gt;Each time a user clicks on the submit button, an HTTP POST request is sent to the server containing the transaction details and any client-side cookies that the browser associated with the site (adding associated site cookies to requests is normal browser behavior). The server will check the cookies, and use them to determine whether or not the user is logged in and will authorize the transaction if so.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#progressive-web-app-pwa"&gt;
  &lt;/a&gt;
  Progressive Web App (PWA)
&lt;/h3&gt;

&lt;p&gt;A PWA is a web application that displays a website in the form of an app on smartphones. It is fast and can work with a poor internet connection.&lt;/p&gt;

&lt;p&gt;Part of the magic of a PWA is based on &lt;em&gt;Service Workers&lt;/em&gt;. Thanks to them, a PWA can store HTML files, CSS files, and images in the browser cache, and developers can fully control network communications, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Offline_Service_workers"&gt;making PWAs work offline&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Twitter, Airbnb and Spotify are examples of PWAs.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#come-and-participate"&gt;
  &lt;/a&gt;
  Come and participate!
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.brainbytes.dev/"&gt;Brain Bytes&lt;/a&gt; is an open source project, so reach out to me to participate in its development! There is plenty to do!&lt;/p&gt;

&lt;p&gt;Come now and &lt;a href="https://www.brainbytes.dev/"&gt;share your knowledge&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Thanks for reading 🙏 ❤️&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Top Python developer Skills you need to know</title>
      <author>Rocky</author>
      <pubDate>Sat, 24 Jul 2021 07:44:18 +0000</pubDate>
      <link>https://dev.to/codelivly/top-python-developer-skills-you-need-to-know-2n9h</link>
      <guid>https://dev.to/codelivly/top-python-developer-skills-you-need-to-know-2n9h</guid>
      <description>&lt;p&gt;&lt;span&gt;Python is not the mostly used language in the web&lt;span&gt;, however, it is constantly growing - especially in a startup environment where time and budget are usually limited. As a language, it is aspect-oriented which means there are modules with different functionality. So first the developer has to create the modules and afterwards, based on the “if then” action, depending on the user’s action, the algorithm triggers a particular block and brings the result. The Python developer is usually dealing with backend components, apps connection with third-party web services and giving support to frontend developers in web applications. Of course, you might create applications with use of different languages but pretty often Python is the language chosen for it - and there are reasons for that! You can read more about&lt;/span&gt;&lt;span&gt; &lt;/span&gt;what is Python used for &lt;span&gt;and how does stack up against &lt;/span&gt;PHP&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;Read More&lt;/b&gt;:&lt;/span&gt; &lt;a href="https://bit.ly/2UJIrun"&gt;&lt;span&gt;&lt;b&gt;Python Developer Skill&lt;/b&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>How to get a free domain and DNS hosting?</title>
      <author>Patrick</author>
      <pubDate>Sat, 24 Jul 2021 07:16:58 +0000</pubDate>
      <link>https://dev.to/patik123/how-to-get-a-free-domain-and-dns-hosting-49i7</link>
      <guid>https://dev.to/patik123/how-to-get-a-free-domain-and-dns-hosting-49i7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-domain"&gt;
  &lt;/a&gt;
  What is a domain?
&lt;/h2&gt;

&lt;p&gt;A domain is a name on the Internet that can represent an organization, an individual, or something else. We associate IP addresses with this name, as a domain is easier to remember than an IP address.&lt;/p&gt;

&lt;p&gt;Example of a domain and its IP address&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; https://google.com        74.125.205.113 (IP address valid on the day of publication)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each domain consists of a suffix (com) and a name (any name for example hashnode). There is always a dot between the suffix and the name.&lt;/p&gt;

&lt;p&gt;The most common domain extensions&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;.com commercial domains&lt;/li&gt;
&lt;li&gt;.net network services&lt;/li&gt;
&lt;li&gt;.org non-profit organizations&lt;/li&gt;
&lt;li&gt;.eu European domain (limited to European Union citizens and organisations)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These domains can be registered by anyone according to the “first come, first served” rule. However, there are domain extensions that can only be registered by certain organizations.&lt;/p&gt;

&lt;p&gt;Examples of such domains are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;.edu for US educational institution&lt;/li&gt;
&lt;li&gt;.gov for US government organizations&lt;/li&gt;
&lt;li&gt;.mil for U.S. military&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We register the domain at the domain registration emphasis, some of which are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.namecheap.com/"&gt;Namecheap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://domains.google/"&gt;Google Domains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://uk.godaddy.com/"&gt;GoDaddy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.name.com/"&gt;Name&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have to pay a certain amount to register and after the purchase, we become the happy owner of the domain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-dns-server"&gt;
  &lt;/a&gt;
  What is a DNS server?
&lt;/h2&gt;

&lt;p&gt;The DNS server allows us to store DNS records. It works in a very simple way to connect an IP address to a domain.&lt;/p&gt;

&lt;p&gt;There are several types of DNS records:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;A record&lt;/strong&gt; - a record that has an IPv4 domain address.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;AAAA record&lt;/strong&gt; - a record that has an IPv6 domain address.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CNAME record&lt;/strong&gt; - Forwards one domain or subdomain to another domain, does not provide an IP address.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;MX record&lt;/strong&gt; - Directs mail to the email server.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TXT record&lt;/strong&gt; - Allows the administrator to save text notes in a record.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SOA record&lt;/strong&gt; - Stores administrator information about the domain.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SRV record&lt;/strong&gt; - Specifies the port for certain services.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;PTR record&lt;/strong&gt; - Provides a domain name in reverse lookup paths.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#free-domain-and-dns-hosting"&gt;
  &lt;/a&gt;
  Free domain and DNS hosting
&lt;/h2&gt;

&lt;p&gt;When a developer needs a free domain to test a particular service or doesn't have the money to register a domain. Therefore, there are options on how to obtain a free domain.&lt;/p&gt;

&lt;p&gt;One commonly known domain that you can get for free is the .tk domain but it is not exactly popular among web service providers (because they are used by many hackers and spammers). So today I’m going to show you another way to get a free subdomain with extensions eu.org.&lt;/p&gt;

&lt;p&gt;In my opinion, this is one of the better domains that we can use for websites. Currently, I also use this domain for my sites because I don’t have the money to register a domain.&lt;/p&gt;

&lt;p&gt;.eu.org domain can be obtained at &lt;a href="https://nic.eu.org/"&gt;https://nic.eu.org/&lt;/a&gt; (I know the site looks very outdated but works 😂).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zPGBOWKK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eo38fwfv7y3pawa6xxte.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zPGBOWKK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eo38fwfv7y3pawa6xxte.png" alt="First site of eu.org domain register"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's go to the &lt;a href="https://nic.eu.org/arf/en/contact/create/"&gt;website&lt;/a&gt; where we register and get a new account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gZYsB17z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hh7i72rxihog5vdf1r9o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gZYsB17z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hh7i72rxihog5vdf1r9o.png" alt="Register form on eu.org"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After creating the account, we will receive a message (check spam folder) at the previously entered e-mail address with a link to confirm our user account. Then we can sign up.&lt;/p&gt;

&lt;p&gt;Upon registration, we will see all the domains we own (none yet).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yRCPapn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9km52v920rhuyaa1ud9v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yRCPapn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9km52v920rhuyaa1ud9v.png" alt="List of domains"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we create an account and log in for the first time, a list of domains we own is displayed.&lt;/p&gt;

&lt;p&gt;Now the time has come when we can create our domain. We press the “New Domain” button and a page will open where we can create and register our new domain.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fhhcn4Fn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6no4xn4yon9tpyuzjuu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fhhcn4Fn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6no4xn4yon9tpyuzjuu.png" alt="Create new domain form"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fill in the required information. Enter the following two from Cloudflare next to the name of the DNS servers&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NS1 elaine.ns.cloudflare.com
NS2 sage.ns.cloudflare.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IO8l-Cl_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3y4wx21tlzqgvu11pae9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IO8l-Cl_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3y4wx21tlzqgvu11pae9.png" alt="Add DNS nameservers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And press the "Submit" key. This will send a request for a new domain.&lt;/p&gt;

&lt;p&gt;We'll receive a domain creation confirmation in a few days after approval, and we'll be able to add it to Cloudflare, to host DNS records.&lt;/p&gt;

&lt;p&gt;Cloudflare provides free DDOS protection, free SSL certificates, site rules, caching and minimization of static web files, easy site analysis ...&lt;/p&gt;

&lt;p&gt;We simply create an account by going to their &lt;a href="https://dash.cloudflare.com/sign-up"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ro3m4UzD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g60i6mnq9cz2hy8qnb83.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ro3m4UzD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g60i6mnq9cz2hy8qnb83.png" alt="Cloudflare register page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And we enter our email address and come up with a secure password. We receive a confirmation email and our account has been created.&lt;/p&gt;

&lt;p&gt;We can now add our domain. This is simply done by clicking “Add a Site”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGWNrr-k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmaorjyj2ptf0020jml8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGWNrr-k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmaorjyj2ptf0020jml8.png" alt="Add site button click"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then in the next window that opens, enter the domain name you want to add.&lt;/p&gt;

&lt;p&gt;We choose the package we want to use, it will probably be free, because it is enough for basic needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--faQQPhd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bl1fct8s1fa9v4owcy8c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--faQQPhd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bl1fct8s1fa9v4owcy8c.png" alt="Select package of Cloudflare domain"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the next step, the wizard itself will automatically scan for existing DNS records and overwrite them if they exist.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R4gQOJaI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mnjvj1om6bbc25x8lhgr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R4gQOJaI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mnjvj1om6bbc25x8lhgr.png" alt="Check for DNS records"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, we will be prompted to change the DNS server names and that’s it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UzzWeNZ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k82lhety090s8pe1ysm6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UzzWeNZ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k82lhety090s8pe1ysm6.png" alt="Prompt for update DNS records"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For eu.org domain, we change the DNS server by simply clicking on our domain.&lt;/p&gt;

&lt;p&gt;Find the “Nameservers” key and replace the existing ones with new ones.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f8hRXU7C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzfg35ooeajorl96vfrw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f8hRXU7C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzfg35ooeajorl96vfrw.png" alt="Update DNS nameserver - stap 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now enter the first required server address in the Name1 field in Name2, the other required address.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DjMF4QbS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7v3zcok90zef1hg9b5eo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DjMF4QbS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7v3zcok90zef1hg9b5eo.png" alt="Update DNS nameserver - stap 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, we set up our domain and now we have to wait for all the indirect servers to update (this can take up to 24 hours).&lt;/p&gt;

&lt;p&gt;What are DNS records are can be checked with a tool like &lt;a href="https://www.whatsmydns.net/"&gt;What is my DNS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to set up a website for free, read more about the providers in this post &lt;a href="https://inshaweb.hashnode.dev%20/%20want-to-host-your-website-for-free"&gt;Want to Host Your Website for free?&lt;/a&gt; by @Inshaweb&lt;/p&gt;

&lt;p&gt;If you found the post useful, you can comment or share the post with others 🤗. Don't forget like it 😊.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>domain</category>
      <category>dns</category>
      <category>cloudflare</category>
    </item>
    <item>
      <title>Moderating Image Content in Slack with Amazon Rekognition and Amazon AppFlow | AWS White Paper Summary</title>
      <author>Salah Elhossiny</author>
      <pubDate>Sat, 24 Jul 2021 07:13:02 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/moderating-image-content-in-slack-with-amazon-rekognition-and-amazon-appflow-aws-white-paper-summary-2plf</link>
      <guid>https://dev.to/awsmenacommunity/moderating-image-content-in-slack-with-amazon-rekognition-and-amazon-appflow-aws-white-paper-summary-2plf</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This document shows you how to use Amazon Rekognition and Amazon AppFlow to build a fully serverless content moderation pipeline for messages posted in a Slack channel. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The content moderation strategy identiﬁes images that violate sample chosen guidelines:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Images that contain themes of tobacco or alcohol.&lt;/li&gt;
&lt;li&gt;Images that contain the following disallowed words:

&lt;ul&gt;
&lt;li&gt;medical&lt;/li&gt;
&lt;li&gt;private&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon Rekognition content moderation is a deep learning-based service that can detect inappropriate, or oﬀensive images &amp;amp; videos, making it easier to ﬁnd and remove such content at scale.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It provides a detailed taxonomy of moderation categories. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Such as Explicit Nudity, Suggestive, Violence, and Visually Disturbing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can now detect six new categories: Drugs, Tobacco, Alcohol, Gambling, Rude Gestures, and Hate Symbols.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between Software-as-a-Service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and AWS services like S3, Redshift, in just a few clicks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This solution leverages Amazon AppFlow to capture the content posted in Slack channels for analysis using Amazon Rekognition.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It's supposed that reader of this document has an account/workspace on AWS and Slack, also S3 bucket accessibility.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Also, client credetials for this services will be used.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This solution doesn't require any prior machine learning (ML) expertise, or development of your own custom ML models.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#architecture-overview"&gt;
  &lt;/a&gt;
  Architecture overview
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;This solution uses serverless technologies and managed services to be scalable and cost-eﬀective.&lt;/li&gt;
&lt;li&gt; By using an event-driven architecture that incorporates AWS Lambda and SQS, you can decouple image detection and image processing without provisioning or managing any servers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6JANqtNJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126063940-44fdd366-c750-4643-9dd7-ccf5bfd0ca69.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6JANqtNJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126063940-44fdd366-c750-4643-9dd7-ccf5bfd0ca69.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-amazon-appflow-integration-with-your-slack-workspace"&gt;
  &lt;/a&gt;
  Create Amazon AppFlow Integration with your Slack workspace
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;First you have to create a Slack app, &lt;a href="https://api.slack.com/authentication/basics"&gt; for more details &lt;/a&gt; . &lt;/li&gt;
&lt;li&gt;Now follow these steps to conﬁgure the Amazon AppFlow integration: 

&lt;ol&gt;
&lt;li&gt;Navigate to the Amazon AppFlow console and choose Create ﬂow.&lt;/li&gt;
&lt;li&gt;In Step 1 of the creation process, enter a Flow name, and optionally, a description. &lt;/li&gt;
&lt;li&gt;For the purposes of this demo, leave the Data  encryption setting as it is.&lt;/li&gt;
&lt;li&gt;Optionally, enter any tags you’d like for the ﬂow.&lt;/li&gt;
&lt;li&gt;Choose Next.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b4ImxjSG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126064238-b2f9535e-6989-4941-b5e0-f2dfbe7d13eb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b4ImxjSG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126064238-b2f9535e-6989-4941-b5e0-f2dfbe7d13eb.png" alt="2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In Step 2 (Conﬁgure ﬂow), choose the Source name dropdown list and choose Slack from the list of options:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z8uUh2sN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126064279-d5b32388-de1a-4216-b1c2-27d485cfaf3f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z8uUh2sN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126064279-d5b32388-de1a-4216-b1c2-27d485cfaf3f.png" alt="3"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A Choose Slack connection dropdown list appears. From this list, choose Create new connection:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rtvXhssn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126064307-fdc5e466-2301-4358-89c1-9a69d651ec10.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rtvXhssn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126064307-fdc5e466-2301-4358-89c1-9a69d651ec10.png" alt="4"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enter your Slack workspace address (for example, testingslackdevgroup.slack.com), and Client ID and Client Secret generated when created the Slack App.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Give your connection a name on the Connect to Slack popup window.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose Continue.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPbtMtCw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126064352-d3841ee3-5111-485a-bf60-40e9a4785111.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPbtMtCw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126064352-d3841ee3-5111-485a-bf60-40e9a4785111.png" alt="5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A window pops up with a conﬁrmation prompt to allow permissions. Choose Allow.&lt;/li&gt;
&lt;li&gt;Your new connection is conﬁgured &amp;amp; displayed in the Choose Slack connection dropdown list, and a new Choose Slack object dropdown list appears directly below it. Choose Conversations.&lt;/li&gt;
&lt;li&gt;A new dropdown appears directly below Choose Slack channel. From this list, choose the Slack channel that you would like to perform content moderation on.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8DNYQqD1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126064515-dfbdbdcf-4ae2-4925-93ad-f48d08e7bb4d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8DNYQqD1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126064515-dfbdbdcf-4ae2-4925-93ad-f48d08e7bb4d.png" alt="6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;With the Slack workspace connected, and the channel for moderation selected, you can move on to conﬁguring the Destination details. First, choose Amazon S3 from the Destination name dropdown list. Select S3. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--soi7Hz71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126064535-32d96be2-af4f-46b7-85f4-79dd2e178748.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--soi7Hz71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126064535-32d96be2-af4f-46b7-85f4-79dd2e178748.png" alt="7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A new section titled Flow trigger appears with two options: Run on demand or Run ﬂow on schedule. Choose the second option, and conﬁgure the schedule to run every one (1) minute.&lt;/li&gt;
&lt;li&gt;When you choose this option, the Incremental Transfer option is auto-selected. Enter a value for Starting at and Start date.&lt;/li&gt;
&lt;li&gt;In Step 3 (Map data ﬁelds), you have the option to perform transformations on the data ﬁelds. Choose Manually map ﬁelds.&lt;/li&gt;
&lt;li&gt;From the Source ﬁeld name dropdown, select Map all ﬁelds directly. This creates a mapping of all the ﬁelds without any transformations.&lt;/li&gt;
&lt;li&gt;Choose Next.&lt;/li&gt;
&lt;li&gt;In Step 4 (Add ﬁlters), you have the option to perform ﬁltering on the data. Do not add any ﬁlters here, simply choose Next to continue.&lt;/li&gt;
&lt;li&gt;On the Review and Create screen, a summary of all your selections from previous steps is shown. Review these for accuracy, then scroll to the bottom of page and choose Create ﬂow.
22.After the ﬂow has been created, on the following screen, choose the Activate ﬂow button.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#create-a-lambda-function-to-process-%EF%AC%81les-in-the-s3-bucket-that-contain-new-slack-messages"&gt;
  &lt;/a&gt;
  Create a Lambda function to process ﬁles in the S3 bucket that contain new Slack messages
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Because the Lambda function needs to store the image URLs it ﬁnds into a new SQS queue, ﬁrst create that queue by following the steps outlined in &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-getting-started.html"&gt; Getting started with Amazon SQS &lt;/a&gt; . Name this queue new-image-findings.&lt;/li&gt;
&lt;li&gt;Navigate to the Lambda console. Choose Create Function and choose the option to Use a blueprint, then provide a ﬁlter called hello. This displays the hello-world-python blueprint in the results at the bottom.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose configure button. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pdCzOzca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126112592-817babf5-ac06-454d-b011-a9461f09c8da.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pdCzOzca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126112592-817babf5-ac06-454d-b011-a9461f09c8da.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On the next screen, provide a name for your new function called process-new-messages, and create a new IAM role called process-new-messages-lambda-role using the available “Amazon S3 object read-only permissions” template. This role will need to be customized in a later step.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bk8WbAEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126112771-428e2b13-8607-41d0-95bd-d260feb831e8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bk8WbAEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126112771-428e2b13-8607-41d0-95bd-d260feb831e8.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After the function has been created, choose the Permissions tab. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose the role name to open a second window where you can view the two policies applied to this role.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R45XoRN2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126113013-01ef6b4c-2c16-4a9b-a380-00545db4f01f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R45XoRN2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126113013-01ef6b4c-2c16-4a9b-a380-00545db4f01f.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Expand each policy to view the permissions details. The policy named AWSLambdaBasicExecutionRole-* grants the necessary permissions for the function to log&lt;br&gt;
information in CloudWatch. The policy named AWSLambdaS3ExecutionRole-* provides S3 permissions and needs to be modiﬁed. To modify the policy, choose Edit Policy and switch to the JSON view to customize this policy. The ﬁnal permissions statement should appear as follows:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"Statement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="s2"&gt;"s3:GetObject*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="s2"&gt;"s3:GetBucket*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="s2"&gt;"s3:List*"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Resource"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="s2"&gt;"arn:aws:s3:::slack-moderation-output"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="s2"&gt;"arn:aws:s3:::slack-moderation-output/*"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The preceding statement follows the principle of least privilege, and limits the permissions of this Lambda function to only the bucket you created for this exercise. Save the change you’ve made to this policy.&lt;/p&gt;

&lt;p&gt;For this function to write messages to the new-image-findings SQS queue, an additional minimally scoped IAM policy needs to be added to this role.&lt;/p&gt;

&lt;p&gt;To add the IAM policy:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Choose Add inline policy and switch to the JSON view to create the following permissions. Note that the following Resource element needs to be updated with the correct Amazon Resource Name (ARN) for the new-image-findings SQS queue which contains your actual account number.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2012-10-17"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"Statement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="s2"&gt;"sqs:SendMessage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="s2"&gt;"sqs:GetQueueAttributes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="s2"&gt;"sqs:GetQueueUrl"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; 
  &lt;/span&gt;&lt;span class="nl"&gt;"Resource"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"arn:aws:sqs:us-east-1:111111111111:new-image-findings"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Choose Review policy, then enter a name for this policy and choose Create policy.&lt;/li&gt;
&lt;li&gt;With the permissions properly conﬁgured, switch back to the Conﬁguration tab in the Lambda function window, and paste the following code into the Function code section:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;boto3&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib.parse&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unquote_plus&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="n"&gt;s3_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'s3'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'s3'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sqs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'sqs'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sendToSqS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;queueurl&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;sqs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;QueueUrl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;queueurl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;MessageBody&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Image to Check'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;MessageAttributes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;"StringValue"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"image_url"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;"DataType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'String'&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s"&gt;"slack_msg_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;"StringValue"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"client_msg_id"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;"DataType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'String'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;lambda_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

  &lt;span class="n"&gt;image_processing_queueurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://queue.amazonaws.com/111111111111/new-image-findings”

  for record in event['Records']:
    bucket = record['s3']['bucket']['name']
    key = unquote_plus(record['s3']['object']['key'])
    file_lines = s3.Object(bucket, key).get()\['Body'].read().decode('utf-8').splitlines()

    attachment_list = []
    for line in file_lines:
        if line: # Check for blank lines
          jsonline = json.loads(line)
          if "&lt;/span&gt;&lt;span class="n"&gt;attachments&lt;/span&gt;&lt;span class="s"&gt;" in jsonline.keys(): # Check for lines with attachements
            for attachment in jsonline["&lt;/span&gt;&lt;span class="n"&gt;attachments&lt;/span&gt;&lt;span class="s"&gt;"]:
              if "&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="s"&gt;" in attachment.keys():
                if "&lt;/span&gt;&lt;span class="n"&gt;client_msg_id&lt;/span&gt;&lt;span class="s"&gt;" in jsonline.keys():
                    thisdict = {
                      "&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="s"&gt;": attachment["&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="s"&gt;"],
                      "&lt;/span&gt;&lt;span class="n"&gt;client_msg_id&lt;/span&gt;&lt;span class="s"&gt;": jsonline["&lt;/span&gt;&lt;span class="n"&gt;client_msg_id&lt;/span&gt;&lt;span class="s"&gt;"]
                   }
                    attachment_list.append(thisdict.copy())
                else:
                    thisdict = {
                      "&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="s"&gt;": attachment["&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="s"&gt;"],
                      "&lt;/span&gt;&lt;span class="n"&gt;client_msg_id&lt;/span&gt;&lt;span class="s"&gt;": "&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt; &lt;span class="n"&gt;Found&lt;/span&gt;&lt;span class="s"&gt;"
                    }
                    attachment_list.append(thisdict.copy())
                    for item in attachment_list:
                      sendToSqS(item, image_processing_queueurl)



&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;After you have pasted the code, update the image_processing_queueurl variable in the function handler with the correct ARN for the new-image-findings SQS queue which contains your actual account number.&lt;/li&gt;
&lt;li&gt;Choose Deploy to deploy the updated code.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#con%EF%AC%81gure-the-lambda-function-to-be-invoked-when-new-objects-are-added-to-your-s3-bucket"&gt;
  &lt;/a&gt;
  Conﬁgure the Lambda function to be invoked when new objects are added to your S3 bucket
&lt;/h3&gt;

&lt;p&gt;With your Lambda function (process-new-messages) created, the next step is to conﬁgure bucket notiﬁcations on your S3 bucket, and subscribe this Lambda function to the notiﬁcations.&lt;/p&gt;

&lt;p&gt;To create the S3 / Lambda event integration:&lt;/p&gt;

&lt;p&gt;Conﬁgure event notiﬁcations on your S3 bucket by following the steps outlined in this &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/user-guide/enable-event-notifications.html"&gt; User Guide &lt;/a&gt; .&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In Step 5 of the conﬁguration, choose the All object create events option.&lt;/li&gt;
&lt;li&gt;In Step 6, choose your Lambda function named process-new-messages.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fzRZVTkU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126266685-b67660a1-96df-465c-893e-4025db311e80.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fzRZVTkU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126266685-b67660a1-96df-465c-893e-4025db311e80.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-lambda-function-to-process-messages-where-image-references-were-found-via-sqs-queue"&gt;
  &lt;/a&gt;
  Create a Lambda function to process messages where image references were found (via SQS queue)
&lt;/h3&gt;

&lt;p&gt;Your ﬁrst Lambda function (process-new-messages) is now being invoked, and any image references found in Slack messages have been stored in the new-image-findings SQS queue.&lt;/p&gt;

&lt;p&gt;The next step is to create and invoke another Lambda function (process-new-images) that will use Amazon Rekognition to determine if there are any policy violations in the content.&lt;/p&gt;

&lt;p&gt;To conﬁgure the SQS / Lambda / Amazon Rekognition Integration:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Because the Lambda function you are about to create needs to store any content violations found into a new SQS queue, ﬁrst create that queue by following the steps outlined in Getting started with Amazon SQS.&lt;/li&gt;
&lt;li&gt;Name this queue new-violation-findings.&lt;/li&gt;
&lt;li&gt;Navigate to the Lambda console and choose Create Function.&lt;/li&gt;
&lt;li&gt;Choose the Use a blueprint option and provide a ﬁlter called hello. This will display the hello-world-python blueprint in the results at the bottom.&lt;/li&gt;
&lt;li&gt;Choose the Conﬁgure button. Name the new Lambda function process-new-images.&lt;/li&gt;
&lt;li&gt;Create a new execution role with basic Lambda permissions.&lt;/li&gt;
&lt;li&gt;After the function has been created, choose the Permissions tab.&lt;/li&gt;
&lt;li&gt;Choose IAM Role to open a second window where you can view the policy attached to this role.&lt;/li&gt;
&lt;li&gt;Choose Attach Policies.&lt;/li&gt;
&lt;li&gt;Search for AmazonRekognitionReadOnlyAccess and choose Attach Policy to complete the action. This allows your Lambda function permissions to call Amazon Rekognition.&lt;/li&gt;
&lt;li&gt;he function also needs permissions to read from the new-image-findings queue and write new messages to the new-violation-findings queue. Choose Add inline policy and switch to the JSON view to create the following permissions.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note that the following Resource elements need to be updated with the correct ARNs for the new-image-findings and new-violation-findings SQS queues respectively, which contain your actual account number:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2012-10-17"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Statement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:ReceiveMessage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:ChangeMessageVisibility"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:GetQueueUrl"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:DeleteMessage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:GetQueueAttributes"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Resource"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"arn:aws:sqs:us-east-1:111111111111:new-image-findings"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:SendMessage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:GetQueueAttributes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:GetQueueUrl"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Resource"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"arn:aws:sqs:us-east-1:111111111111:new-violation-findings"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="w"&gt;


 &lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Choose Review policy.&lt;/li&gt;
&lt;li&gt;Enter a name for this policy and choose Create policy.&lt;/li&gt;
&lt;li&gt;With the permissions conﬁgured, switch back to the Conﬁguration tab in the Lambda function window, and paste the following code into the Function code section:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;boto3&lt;/span&gt;

&lt;span class="n"&gt;sqs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'sqs'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;rekognition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'rekognition'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;analyze_themes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;min_confidence&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'rb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;document&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;imageBytes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bytearray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rekognition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detect_moderation_labels&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'Bytes'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;imageBytes&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;MinConfidence&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;min_confidence&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="n"&gt;found_high_confidence_labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'ModerationLabels'&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="n"&gt;found_high_confidence_labels&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Name'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;found_high_confidence_labels&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;analyze_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'rb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;document&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;imageBytes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bytearray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rekognition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detect_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'Bytes'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;imageBytes&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="n"&gt;textDetections&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'TextDetections'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;found_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;textDetections&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;found_text&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'DetectedText'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;found_text&lt;/span&gt;



&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sendToSqS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;queueurl&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="n"&gt;sqs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="n"&gt;QueueUrl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;queueurl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;MessageBody&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Image with "'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;words&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;'" found'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;MessageAttributes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s"&gt;"StringValue"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"image_url"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="s"&gt;"DataType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'String'&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s"&gt;"slack_msg_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s"&gt;"StringValue"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"slack_msg_id"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="s"&gt;"DataType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'String'&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;



&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;lambda_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="n"&gt;violations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://queue.amazonaws.com/111111111111/new-violation-findings"&lt;/span&gt;
   &lt;span class="n"&gt;disallowed_words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"medical"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"private"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
   &lt;span class="n"&gt;disallowed_themes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Tobacco"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Alcohol"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# Case Sensitive 
&lt;/span&gt;   &lt;span class="n"&gt;file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/tmp/image.jpg"&lt;/span&gt;

   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Records'&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;receiptHandle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"receiptHandle"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;image_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"messageAttributes"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;"stringValue"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;slack_msg_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"messageAttributes"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;"slack_msg_id"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;"stringValue"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;eventSourceARN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"eventSourceARN"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;arn_elements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;eventSourceARN&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;':'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;img_queue_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_queue_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="n"&gt;QueueName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;arn_elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="n"&gt;QueueOwnerAWSAccountId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;arn_elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;sqs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="n"&gt;QueueUrl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;img_queue_url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"QueueUrl"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="n"&gt;ReceiptHandle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;receiptHandle&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlretrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;detected_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;analyze_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Detected Text: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;detected_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;found_words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;disallowed_word&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;disallowed_words&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;disallowed_word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;detected_text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;found_words&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;disallowed_word&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"WORD VIOLATION: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;disallowed_word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" found in "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;detected_text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

        &lt;span class="n"&gt;violating_words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;", "&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;found_words&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;violating_words&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;attributes_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
          &lt;span class="n"&gt;attributes_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"slack_msg_id"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slack_msg_id&lt;/span&gt;
          &lt;span class="n"&gt;attributes_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"image_url"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image_url&lt;/span&gt;
          &lt;span class="n"&gt;sendToSqS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;violating_words&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attributes_json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;violations&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;detected_themes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;analyze_themes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Detected Themes: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;", "&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;detected_themes&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="n"&gt;found_themes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;disallowed_theme&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;disallowed_themes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;disallowed_theme&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;detected_themes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="n"&gt;found_themes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;disallowed_theme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"THEME VIOLATION: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;disallowed_theme&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" found in image"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;violating_themes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;", "&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;found_themes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;violating_themes&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="n"&gt;attributes_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
              &lt;span class="n"&gt;attributes_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"slack_msg_id"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slack_msg_id&lt;/span&gt;
              &lt;span class="n"&gt;attributes_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"image_url"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image_url&lt;/span&gt;

              &lt;span class="n"&gt;sendToSqS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;violating_themes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attributes_json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;violations&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;After you have pasted the code, update the violations variable in the function handler with the correct ARN for the new-violation-findings SQS queue which  contains your actual account number.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose Deploy.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To ensure that your SQS queues cannot be accessed by resources outside the account, SQS permissions policies can be applied to each of the queues.&lt;/p&gt;

&lt;p&gt;To apply permissions policies:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Navigate to the SQS console and choose the new-violation-ﬁndings queue.&lt;/li&gt;
&lt;li&gt;Choose the Access policy tab.&lt;/li&gt;
&lt;li&gt;Choose the Edit button and paste in the following policy.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note that the following Resource elements need to be updated with the correct ARN for the new-violation-findings SQS queues respectively, which contain your actual account number.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2012-10-17"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Statement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Sid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"QueueOwnerOnlyAccess"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Principal"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"AWS"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"arn:aws:iam:: 111111111111:root"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:DeleteMessage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:ReceiveMessage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:SendMessage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:GetQueueAttributes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:RemovePermission"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:AddPermission"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"sqs:SetQueueAttributes"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Resource"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"arn:aws:sqs:us-east-1: 111111111111:new-violation-findings"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Sid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"HttpsOnly"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Deny"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Principal"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"SQS:*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Resource"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"arn:aws:sqs:us-east-1: 111111111111:new-violation-findings"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Condition"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Bool"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"aws:SecureTransport"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"false"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}}}]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Repeat the preceding steps for the new-image-findings queue. Remember to use the new-image-findings ARN in the policy.&lt;/p&gt;

&lt;p&gt;You can now conﬁgure our SQS queue to trigger your Lambda function.&lt;/p&gt;

&lt;p&gt;To conﬁgure your SQS queue:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In the SQS Console, choose the new-image-findings queue from the Lambda triggers tab.&lt;/li&gt;
&lt;li&gt;Choose Conﬁgure Trigger for Lambda Function.&lt;/li&gt;
&lt;li&gt;From the dropdown list, choose the function you just created.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Ttu_qRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126373428-ee705b0c-4735-4839-936d-ecd21e6930cd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Ttu_qRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/126373428-ee705b0c-4735-4839-936d-ecd21e6930cd.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Trigger the Lambda function you created. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-the-solution"&gt;
  &lt;/a&gt;
  Test the solution
&lt;/h3&gt;

&lt;p&gt;You can now post some messages to your moderated Slack channel for testing. You can easily change the content violation policies in the Python code by modifying the disallowed_words and disallowed_themes variables.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#to-test-the-solution"&gt;
  &lt;/a&gt;
  To test the solution:
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Post sample images that will be used to trigger violations for the current conﬁgured policies:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Post this image which contains the disallowed word "private": &lt;a href="https://i.imgur.com/662ptww.png"&gt;https://i.imgur.com/662ptww.png&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Post this image which contains a "Tobacco" theme: &lt;a href="https://i.imgur.com/XgAtyWU.png"&gt;https://i.imgur.com/XgAtyWU.png&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After creating those posts, wait 2-3 minutes and then navigate to the SQS Console. View the queues and choose the new-violation-findings queue.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose the Send and receive messages button.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;At the bottom of the screen, choose the Poll for messages button.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After a few seconds you should see two messages pop up. You can choose each message to interrogate the contents.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose the Message ID. The body of the message contains information about what violation was triggered. The Attributes show the image URL and “slack_msg_id” for the oﬀending item.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/whitepapers/latest/moderating-image-content-in-slack/moderating-image-content-in-slack.pdf#moderating-image-content-in-slack"&gt; Original White Paper &lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>What is RunJS, and why it's great</title>
      <author>Arsenii Gorushkin</author>
      <pubDate>Sat, 24 Jul 2021 07:01:39 +0000</pubDate>
      <link>https://dev.to/agorushkin/what-is-runjs-and-why-it-s-great-1h4i</link>
      <guid>https://dev.to/agorushkin/what-is-runjs-and-why-it-s-great-1h4i</guid>
      <description>&lt;p&gt;Has it ever happened to you, that you have a small piece of code that you want to test, but you don't want to go to some website, or make a separate settings just for the file? Well, you are in win, because today we are going to talk about a piece of software called RunJS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-runjs"&gt;
  &lt;/a&gt;
  What is RunJS?
&lt;/h2&gt;

&lt;p&gt;RunJS is a javascript playground written with Electron, that allows you to debug code, or see the output of the function in a very small amount of time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-runjs-great"&gt;
  &lt;/a&gt;
  Why is RunJS great?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;RunJS allows you to install npm libraries, hence testing small libraries become easy&lt;/li&gt;
&lt;li&gt;You get every piece of output in the output&lt;/li&gt;
&lt;li&gt;It allows for quick testing, and you don't need to go to a website to test small pieces of code&lt;/li&gt;
&lt;li&gt;It is available on all major problems such as MacOS, Windows and Debian platforms&lt;/li&gt;
&lt;li&gt;Allows for Typescript and Babel transpilation&lt;/li&gt;
&lt;li&gt;Has access to Node and Web APIs&lt;/li&gt;
&lt;li&gt;Runs code fast, and executes it on chage&lt;/li&gt;
&lt;li&gt;Allows you to set working directory as well as importing modules from other files&lt;/li&gt;
&lt;li&gt;Enables you to set environment variables&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And this just scratches the surface of what RunJS can do. So why are you still here? Go and use this awsome piece of software that you can find over &lt;a href="https://runjs.app"&gt;here&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>testing</category>
      <category>debugging</category>
    </item>
    <item>
      <title>I developed accounting application as a personal project</title>
      <author>Nobu</author>
      <pubDate>Sat, 24 Jul 2021 06:12:44 +0000</pubDate>
      <link>https://dev.to/nobu0605/i-developed-accounting-application-as-a-personal-project-1lk3</link>
      <guid>https://dev.to/nobu0605/i-developed-accounting-application-as-a-personal-project-1lk3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#application-links"&gt;
  &lt;/a&gt;
  Application links
&lt;/h2&gt;

&lt;p&gt;front-end&lt;br&gt;
&lt;a href="https://github.com/nobu0605/accounting-application"&gt;https://github.com/nobu0605/accounting-application&lt;/a&gt;&lt;br&gt;
back-end&lt;br&gt;
&lt;a href="https://github.com/nobu0605/accounting-application-api"&gt;https://github.com/nobu0605/accounting-application-api&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;application&lt;br&gt;
&lt;a href="https://accounting-application-front.herokuapp.com"&gt;https://accounting-application-front.herokuapp.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-i-developed"&gt;
  &lt;/a&gt;
  Why I developed
&lt;/h2&gt;

&lt;p&gt;I had worked as a back office staff for 3 years half before I became a software engineer.&lt;br&gt;
I'm still interested in accounting, so I developed it this time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;p&gt;・Localization&lt;br&gt;
You can choose English and Japanese.&lt;/p&gt;

&lt;p&gt;Japanese&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YDPf_mmB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/243749/ae061459-5869-ecab-61c5-a1cce78fe13d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YDPf_mmB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/243749/ae061459-5869-ecab-61c5-a1cce78fe13d.png" alt="スクリーンショット 2021-07-24 14.50.16.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;English&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zTLFJ-FV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/243749/11e1c6b4-132f-40f8-be3f-2711ba93c1e8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zTLFJ-FV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/243749/11e1c6b4-132f-40f8-be3f-2711ba93c1e8.png" alt="スクリーンショット 2021-07-24 11.52.38.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・Transfer slip&lt;br&gt;
You can input a journal.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0_aw78ko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/243749/31bee98a-ec21-242e-844f-b65b42669053.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0_aw78ko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/243749/31bee98a-ec21-242e-844f-b65b42669053.png" alt="スクリーンショット 2021-07-24 11.56.05.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・Financial report&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sz4KkQ0H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/243749/71d1b70c-3a36-c6ef-8f65-e9780ce8f2df.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sz4KkQ0H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/243749/71d1b70c-3a36-c6ef-8f65-e9780ce8f2df.png" alt="スクリーンショット 2021-07-24 11.57.35.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・Journals&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Bz1B69F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/243749/4ddc8a49-5c71-d8c3-e208-0c92c0d49bd1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Bz1B69F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/243749/4ddc8a49-5c71-d8c3-e208-0c92c0d49bd1.png" alt="スクリーンショット 2021-07-24 11.57.47.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-technology-i-used"&gt;
  &lt;/a&gt;
  What technology I used
&lt;/h2&gt;

&lt;p&gt;・Front-end&lt;br&gt;
React version 17.0.1&lt;br&gt;
Typescript version 4.0.5&lt;/p&gt;

&lt;p&gt;・Back-end&lt;br&gt;
Laravel Framework 6.20.4&lt;br&gt;
PHP 7.3.24&lt;br&gt;
MySQL 5.7&lt;/p&gt;

&lt;p&gt;・CI/CD &lt;br&gt;
GitHub Actions&lt;/p&gt;

&lt;p&gt;・Server&lt;br&gt;
Heroku&lt;/p&gt;

&lt;p&gt;・ER diagram　&lt;br&gt;
&lt;a href="https://drive.google.com/file/d/14r1bxllKWg7Ih6xf9yeYxHyRrDL5FkrU/view?usp=sharing"&gt;https://drive.google.com/file/d/14r1bxllKWg7Ih6xf9yeYxHyRrDL5FkrU/view?usp=sharing&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>react</category>
      <category>typescript</category>
    </item>
    <item>
      <title>20+ Super DevTools you may have not heard of</title>
      <author>coderwatchHQ</author>
      <pubDate>Sat, 24 Jul 2021 05:54:00 +0000</pubDate>
      <link>https://dev.to/coderwatch/20-super-devtools-you-may-have-not-heard-of-441g</link>
      <guid>https://dev.to/coderwatch/20-super-devtools-you-may-have-not-heard-of-441g</guid>
      <description>&lt;p&gt;In this web period, practically any free tools can be found online to take care of normal issues designers face each day. And so on, somebody has effectively fabricated it. &lt;/p&gt;

&lt;p&gt;In this article, I will share my main 22 most loved web tools that make your life as an engineer simpler.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#learn-x-in-y-minutes"&gt;
  &lt;/a&gt;
  &lt;a href="https://learnxinyminutes.com/"&gt;learn X in Y minutes&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9t8ePMvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932483563/OYJqRMl46.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9t8ePMvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932483563/OYJqRMl46.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each conceivable language, clarified in one page, in pretty much every language, through substantial instances of code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-usability-checklist"&gt;
  &lt;/a&gt;
  &lt;a href="https://teamsuccess.io/UX"&gt;Web Usability Checklist&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aUfL7Dj8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932503162/ZiK5bjuQn.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aUfL7Dj8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932503162/ZiK5bjuQn.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Catch common usability problems before user testing. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#regex101"&gt;
  &lt;/a&gt;
  &lt;a href="https://regex101.com/"&gt;Regex101&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0P-L6Dd3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932885793/Ta8FIYb_J.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0P-L6Dd3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932885793/Ta8FIYb_J.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Regular expression tester with syntax highlighting, explanation, cheat sheet for PHP/PCRE, Python, GO, JavaScript, Java. Features a regex quiz &amp;amp; library.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resolution-test"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/resolution-test/idhfcdbheobinplaamokffboaccidbal"&gt;Resolution Test&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--duzPpE5Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932748128/a7E0e1nzq.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--duzPpE5Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932748128/a7E0e1nzq.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An extension for developers to test web pages in different screen resolutions, with an option to define your own resolutions&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bundlephobia"&gt;
  &lt;/a&gt;
  &lt;a href="https://bundlephobia.com/"&gt;BundlePhobia&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CCJqHwJk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932692094/CIuJznrcl.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CCJqHwJk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932692094/CIuJznrcl.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bundlephobia helps you find the performance impact of npm packages. Find the size of any javascript package and its effect on your frontend bundle.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#justgetflux"&gt;
  &lt;/a&gt;
  &lt;a href="https://justgetflux.com/"&gt;JustGetFlux&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qqyJI3l_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932803806/BigLZMRjG.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qqyJI3l_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932803806/BigLZMRjG.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Is your computer keeping you up late? f.lux is a free download that warms up your computer display at night, to match your indoor lighting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#priortize"&gt;
  &lt;/a&gt;
  &lt;a href="https://prioritize.songthamtung.com/"&gt;Priortize&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ue_3vh4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932854583/hlEHjGwSl.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ue_3vh4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932854583/hlEHjGwSl.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Built by a PM for PMs. Use this tool to create, visualize, and prioritize tasks on a drag and drop interface with different priority boards.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cron"&gt;
  &lt;/a&gt;
  &lt;a href="https://crontab.cronhub.io/"&gt;Cron&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i4Fqm2W0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932899727/0mD94LZWf.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i4Fqm2W0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626932899727/0mD94LZWf.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cron expression generator by Cronhub. Schedule and monitor jobs without any infra work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#namae"&gt;
  &lt;/a&gt;
  &lt;a href="https://namae.dev"&gt;Namae&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YqKKUK1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933074022/pC3qHlFwq.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YqKKUK1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933074022/pC3qHlFwq.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check availability of your new app name for major registries at once.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flaticon"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.flaticon.com/"&gt;Flaticon&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sxhorH4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933385870/Z3qvffoU-.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sxhorH4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933385870/Z3qvffoU-.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Access +4.9M vector icons &amp;amp; stickers. Download free vector icons and stickers for your projects. Resources made by and for designers. PNG, SVG, EPS, PSD and BASE 64 formats.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ntile"&gt;
  &lt;/a&gt;
  &lt;a href="https://start.ntile.app/"&gt;nTile&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5aFFEwHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933047762/4CHPqceAl.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5aFFEwHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933047762/4CHPqceAl.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Service for collaborative work with docs and tables. Use the pre-made solutions, create your own information portals and surveys.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ifttt"&gt;
  &lt;/a&gt;
  &lt;a href="https://ifttt.com/"&gt;IFTTT&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6LAghdKZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933326766/fp9i5aWav.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6LAghdKZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933326766/fp9i5aWav.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Begin with IFTTT, the least demanding approach to accomplish more with your most loved applications and gadgets free of charge. Make your home seriously unwinding. Make your work more useful. Keep your information hidden and secure.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#explainshell"&gt;
  &lt;/a&gt;
  &lt;a href="https://explainshell.com/"&gt;ExplainShell&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--33juQ8LB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933170988/dlx18n0QO.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--33juQ8LB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933170988/dlx18n0QO.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;write down a command-line to see the help text that matches each argument&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#linearapp"&gt;
  &lt;/a&gt;
  &lt;a href="https://linear.app/"&gt;LinearApp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5zqVYBIP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933455275/DaaCkis7I.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5zqVYBIP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933455275/DaaCkis7I.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Linear helps streamline software projects, sprints, tasks, and bug tracking. It's built for high-performance teams.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getterms"&gt;
  &lt;/a&gt;
  &lt;a href="https://getterms.io/"&gt;GetTerms&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eo62uAtc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933504731/a_b9ARVvt.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eo62uAtc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933504731/a_b9ARVvt.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Custom Privacy Policy in 2 minutes. Trusted by over 300k customers. GDPR &amp;amp; CalOPPA Ready. Rated 5 Stars, written by lawyers. 100% guarantee.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#epochconverter"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.epochconverter.com/"&gt;EpochConverter&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4SN1q7rG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933517544/oI9RQzhl0.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4SN1q7rG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933517544/oI9RQzhl0.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Easy epoch/Unix timestamp converter for computer programmers. Includes epoch explanation and conversion syntax in various programming languages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aerobatic"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.aerobatic.com/"&gt;Aerobatic&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xif4Uw-W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933548990/lNijNu-AA.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xif4Uw-W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933548990/lNijNu-AA.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Turbocharged static web hosting. Blazing fast performance on our highly tuned, purpose-built CDN. Expand the possibilities of static sites with plugins.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#textcompare"&gt;
  &lt;/a&gt;
  &lt;a href="https://text-compare.com/"&gt;TextCompare&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X5phheGq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933593010/xbVryuZm5.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X5phheGq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933593010/xbVryuZm5.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Text Compare! is an online diff tool that can find the difference between two text documents. Just paste and compare.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cafecito"&gt;
  &lt;/a&gt;
  &lt;a href="https://meetcafecito.com/"&gt;Cafecito&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Oxen0s-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933616395/5eDZLFOHm.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oxen0s-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933616395/5eDZLFOHm.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cafecito connects technical and non-tech creatives for casual and informal virtual chats. Meet like-minded creatives from all over the world for a coffee break while you work from home.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useragent-switcher"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/user-agent-switcher-for-c/djflhoibgkdhkhhcedjiklpkjnoahfmg?hl=en-US"&gt;UserAgent Switcher&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VzTkhXPU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933632868/QjrEC3S0R.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VzTkhXPU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933632868/QjrEC3S0R.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The User-Agent Switcher for Chrome is the answer.  With this extension, you can quickly and easily switch between user-agent strings.  Also, you can set up specific URLs that you want to spoof every time. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloudconvert"&gt;
  &lt;/a&gt;
  &lt;a href="https://cloudconvert.com/"&gt;CloudConvert&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TvFnVUZ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933654392/MEIoM7kiY.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TvFnVUZ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933654392/MEIoM7kiY.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;File converter service - more than 200 different audio, video, document, ebook, archive, image, spreadsheet and presentation formats supported.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sipapp"&gt;
  &lt;/a&gt;
  &lt;a href="http://sipapp.io/"&gt;SipAPP&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r-yaITrH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933710788/Kd9Wmh_gN.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-yaITrH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933710788/Kd9Wmh_gN.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A superior Color Picker for your Mac. An advanced shading picker worked for originators and designers, that permits you to gather, arrange and alter colors. It enables you to impart tones to everybody and connection them between different tools in your work process.&lt;/p&gt;




&lt;p&gt;All the referenced web tools are certainly not special of their sort. You may know different sites with a similar usefulness and most likely better. There are likewise other VSCode modules or Chrome extensions that can do basically exactly the same thing. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>javascript</category>
      <category>python</category>
    </item>
    <item>
      <title>Clean Code Studio Software Resources (Laravel)</title>
      <author>Clean Code Studio</author>
      <pubDate>Sat, 24 Jul 2021 03:17:47 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/clean-code-studio-software-resources-laravel-471m</link>
      <guid>https://dev.to/cleancodestudio/clean-code-studio-software-resources-laravel-471m</guid>
      <description>&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #339d15 !important;
      color: #ffffff !important;
      border-color: #339d15 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaD-SiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uL9Viyw2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/50ab5359-8342-4fc0-961a-04bb95957fa1.jpg" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code StudioClean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Packages&lt;/th&gt;
&lt;th&gt;Ignition&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Debugging&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/facade/ignition"&gt;Ignition&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design Patterns&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=UljP-d2Y8kw&amp;amp;lc=UgzXN8rpqFiAzKh6_254AaABAg.98Tm2kaTahC98dbdAdNbhd"&gt;See Comment Section (Clean Code Studio)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Learning Materials&lt;/td&gt;
&lt;td&gt;&lt;a href="https://laracasts.com/"&gt;Laracasts&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://laravel.com/"&gt;Laravel&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Official Ecosystem&lt;/td&gt;
&lt;td&gt;&lt;a href="https://nova.laravel.com/"&gt;Nova&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://spark.laravel.com/"&gt;Spark&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Testing&lt;/td&gt;
&lt;td&gt;&lt;a href="https://laravel.com/docs/7.x/dusk"&gt;Dusk (Browser Testing)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ecosystem&lt;/td&gt;
&lt;td&gt;&lt;a href="https://laravel.com/"&gt;Laravel&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://laravel-mix.com/"&gt;Laravel Mix&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://laravel.com/docs/7.x/dusk"&gt;Dusk (Browser Testing)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://nova.laravel.com/"&gt;Nova&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Laravel Mix&lt;/td&gt;
&lt;td&gt;&lt;a href="https://laravel-mix.com/docs/5.0/concatenation-and-minification"&gt;Concatenation and Minification&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://laravel-mix.com/docs/5.0/autoloading"&gt;Autoloading&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://laravel-mix.com/docs/5.0/event-hooks"&gt;Event Hooks&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://laravel-mix.com/docs/5.0/quick-webpack-configuration"&gt;Quick Webpack Configuration&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://laravel-mix.com/docs/5.0/extending-mix"&gt;Extending Mix&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>tooling</category>
      <category>testing</category>
    </item>
    <item>
      <title>Clean Code Studio Software Resources (Style)</title>
      <author>Clean Code Studio</author>
      <pubDate>Sat, 24 Jul 2021 03:14:08 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/clean-code-studio-software-resources-style-3n21</link>
      <guid>https://dev.to/cleancodestudio/clean-code-studio-software-resources-style-3n21</guid>
      <description>&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #339d15 !important;
      color: #ffffff !important;
      border-color: #339d15 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaD-SiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uL9Viyw2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/50ab5359-8342-4fc0-961a-04bb95957fa1.jpg" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code StudioClean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CSS Pre Processors&lt;/th&gt;
&lt;th&gt;&lt;a href="https://www.lambdatest.com/blog/css-preprocessors-sass-vs-less-vs-stylus-with-examples/"&gt;What are preprocessors?&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://sass-lang.com/"&gt;SCSS&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="http://lesscss.org/"&gt;LESS&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://stylus-lang.com/"&gt;Stylus&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://postcss.org/"&gt;Post Css&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CSS Frameworks&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tailwindcss.com/"&gt;Tailwind (Utility First)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://getbootstrap.com/docs/4.5/getting-started/introduction/"&gt;Bootstrap&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://get.foundation/"&gt;Foundation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bulma.io/"&gt;Bulma&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Icon Sets&lt;/td&gt;
&lt;td&gt;&lt;a href="https://fontawesome.com/"&gt;Font Awesome&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://cdn.materialdesignicons.com/5.3.45/"&gt;Material Icons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://icons8.com/icons"&gt;Icon8&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://themify.me/themify-icons"&gt;Themify&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Real Style Guides&lt;/td&gt;
&lt;td&gt;&lt;a href="http://marketing.lendingtree.com/creative/styleguide/index.html"&gt;Lending Tree&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://assets.laracasts.com/colors"&gt;Laracasts&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.design/logos-and-brand-guidelines-f1a01a733592"&gt;Medium&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.dropbox.com/sh/webqiiog37nr3n9/AABXw51LfqDEKPMr7DJDU1KLa?dl=0"&gt;Foursquare&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://issuu.com/amandymichiru/docs/gsm_rgb"&gt;AMD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://design.google/library/evolving-google-identity/"&gt;Google&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://walmartbrandcenter.com/WorkArea/DownloadAsset.aspx?id=6442451804"&gt;Walmart&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Style Guide Generators&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.lingoapp.com/"&gt;Lingo App&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Landing Pages&lt;/td&gt;
&lt;td&gt;&lt;a href="https://blog.hubspot.com/marketing/fantastic-landing-page-examples"&gt;Landing Page Examples&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tailwind&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tailwindcomponents.com/"&gt;Tailwind CSS Components. Examples and templates&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Graphic Design Apps&lt;/td&gt;
&lt;td&gt;&lt;a href="https://canva.com/"&gt;Canva&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://looka.com/"&gt;Looka&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Embeddable Magazine&lt;/td&gt;
&lt;td&gt;&lt;a href="https://issuu.com/"&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>css</category>
      <category>tooling</category>
      <category>saas</category>
      <category>tailwindcss</category>
    </item>
  </channel>
</rss>
