<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Best email marketing software for developers</title>
      <author>GoOnlineTools</author>
      <pubDate>Thu, 15 Apr 2021 15:52:34 +0000</pubDate>
      <link>https://dev.to/goonlinetools/best-email-marketing-software-for-developers-391</link>
      <guid>https://dev.to/goonlinetools/best-email-marketing-software-for-developers-391</guid>
      <description>&lt;p&gt;We are using the email marketing tool for an email list of 1 Million Subscribers.&lt;/p&gt;

&lt;p&gt;So based on that I will suggest you the tool.&lt;/p&gt;

&lt;p&gt;Choosing the right email marketing service can have a significant impact on the success of your marketing campaign. It is one of the most cost-effective marketing strategies for small businesses.&lt;/p&gt;

&lt;p&gt;We choose an email marketing service that provides API access, transaction email, and marketing automation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-sendinblue"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://www.sendinblue.com/?tap_a=30591-fb13f0&amp;amp;tap_s=1546108-984846"&gt;Sendinblue&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.sendinblue.com/?tap_a=50906-4cb7cf&amp;amp;tap_s=1546108-984846" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--icguYTNx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.tapfiliate.com/5cf83d25b387f.png%3Fa%3D50906-4cb7cf%26s%3D1546108-984846"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SendInBlue is a very good email marketing automation tool. If you look for cheap email marketing, CRM, SMS, transactional email tool, SIB is highly recommended.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features of Sendinblue:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Email Builder&lt;/strong&gt; – Send beautifully-designed emails with SendinBlue’s drag-and-drop email builder. Pre-made email templates are also available.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Forms &amp;amp; Landing Pages&lt;/strong&gt; – Customize your contact forms to suit your brand and audience, and grow your email list with landing pages.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Unlimited Subscribers&lt;/strong&gt; – Grow your email list with few restrictions as this service’s plans are based on the number of emails you send per month.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Subscriber Management&lt;/strong&gt; – Manage your subscribers with folders, lists and segmentation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SMS Messages&lt;/strong&gt; – Reach your customers beyond email by allowing them to opt-in to receiving SMS messages from you.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Automations&lt;/strong&gt; – Optimize your campaigns by targeting subscribers based on their actions with marketing automations.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;A/B Testing&lt;/strong&gt;: A/B testing your marketing optins is one of the best ways to boost subscribers.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Transactional Emails&lt;/strong&gt; – Send confirmation emails and notifications when a subscriber joins your list for the first time, when they purchase something from your store, when their order ships and more.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Reports, Data &amp;amp; Analytics&lt;/strong&gt; – Track and optimize your campaigns with reports and data on open rates, click-through rates, subscriber location, your subscribers’ most-used email platforms and more.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved Deliverability&lt;/strong&gt; – Ensure your emails reach your subscribers’ inboxes with real stats by using SendinBlue’s shared and dedicated IP tools and options as well as their integrated security tools.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Integrations&lt;/strong&gt; – SendinBlue integrates with WordPress, WooCommerce, OptinMonster, Google Analytics, Shopify, Jimdo, Drupal, and more.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Explore more features of &lt;a href="https://www.sendinblue.com/features/?tap_a=30591-fb13f0&amp;amp;tap_s=1546108-984846"&gt;Sendinblue&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We did not tried any other email marketing software because Sendinblue offers everything at less price as compared to the market.&lt;/p&gt;

&lt;p&gt;Let me know which tool you use for email marketing :)&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>I built a cute e-shop entirely in Python</title>
      <author>Brooke Myers</author>
      <pubDate>Thu, 15 Apr 2021 15:43:54 +0000</pubDate>
      <link>https://dev.to/bcm628/i-built-a-cute-e-shop-entirely-in-python-28j0</link>
      <guid>https://dev.to/bcm628/i-built-a-cute-e-shop-entirely-in-python-28j0</guid>
      <description>&lt;p&gt;I'm pretty new to web development and am still learning HTML, CSS and JS. I work for &lt;a href="https://anvil.works?utm_source=crosspost:dev.to:/learn/examples/shop-template-guide"&gt;Anvil&lt;/a&gt;, a platform that allows you to build and deploy full-stack web apps with only Python. It's great for someone like me with an ML background and no web dev experience. &lt;/p&gt;

&lt;p&gt;I'm learning HTML and CSS by styling Anvil apps, so I built a fake online shop using Anvil and tried to make it as pretty as possible with my limited CSS knowledge. &lt;a href="https://shop-template.anvil.app/"&gt;Check it out&lt;/a&gt; and let me know what you think!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rEjceZWq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://anvil-website-static.s3.eu-west-2.amazonaws.com/learn/examples/shop-template/shop-template.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rEjceZWq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://anvil-website-static.s3.eu-west-2.amazonaws.com/learn/examples/shop-template/shop-template.gif" alt="GIF of shop app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#styling-python-components"&gt;
  &lt;/a&gt;
  Styling Python Components
&lt;/h2&gt;

&lt;p&gt;Anvil is a &lt;a href="https://anvil.works/articles/drag-and-drop-builder?utm_source=crosspost:dev.to:/learn/examples/shop-template-guide"&gt;drag-and-drop&lt;/a&gt; web app builder where every UI component is a Python object. I styled some of these components with CSS by applying a &lt;a href="https://anvil.works/docs/client/themes-and-styling?utm_source=crosspost:dev.to:/learn/examples/shop-template-guide"&gt;role&lt;/a&gt; to them.&lt;/p&gt;

&lt;p&gt;For example, the header images in the app are ColumnPanels styled with a CSS role.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.anvil-role-header-photo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(_/theme/header.jpg)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-attachment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;TextBoxes and TextAreas have a solid blue border and items in the Cart have a top and bottom border added. &lt;/p&gt;

&lt;p&gt;But for someone who has little experience with CSS, it wasn't too difficult to make an Anvil app look unique!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#builtin-integrations"&gt;
  &lt;/a&gt;
  Built-in Integrations
&lt;/h2&gt;

&lt;p&gt;Purchases in my app are made through &lt;a href="https://anvil.works/docs/integrations/stripe?utm_source=crosspost:dev.to:/learn/examples/shop-template-guide"&gt;Stripe&lt;/a&gt; which is already integrated in Anvil, so I didn't have to do much work there. I just added this to my client-side Python:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;charge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;charge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subtotal&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                      &lt;span class="n"&gt;currency&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"USD"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                      &lt;span class="n"&gt;shipping_address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                      &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Cupcakes &amp;amp; Co."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                      &lt;span class="n"&gt;icon_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"_/theme/cupcake_logo.png"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://anvil.works/docs/client/components/maps?utm_source=crosspost:dev.to:/learn/examples/shop-template-guide"&gt;Google services&lt;/a&gt; are also already built-in to Anvil, so I added a Google map to the Contact page with a marker to match the theme.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cuE-XL0O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/learn/examples/img/shop-template/contact.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cuE-XL0O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/learn/examples/img/shop-template/contact.png" alt="Image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map_1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GoogleMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LatLng&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;40.7128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;74.0060&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map_1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zoom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;
    &lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GoogleMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"_/theme/maps-icon.png"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GoogleMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;animation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GoogleMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Animation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DROP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                              &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GoogleMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LatLng&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;40.7128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;74.0060&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                              &lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map_1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_component&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check out the source code &lt;a href="https://anvil.works/build#clone:SYHHBAIJKDSXOWE2%3dMFCNC7A4KANXBHP7EK7G357W"&gt;here&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>python</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Talk Notes: 'The Rising Storm of Ethics in Open Source' (RailsConf 2021)</title>
      <author>Sylwia Vargas</author>
      <pubDate>Thu, 15 Apr 2021 15:26:06 +0000</pubDate>
      <link>https://dev.to/sylwiavargas/talk-notes-the-rising-storm-of-ethics-in-open-source-railsconf-2021-b3c</link>
      <guid>https://dev.to/sylwiavargas/talk-notes-the-rising-storm-of-ethics-in-open-source-railsconf-2021-b3c</guid>
      <description>&lt;p&gt;✨ &lt;strong&gt;What is this post about&lt;/strong&gt;: As a part of my professional growth, I make time to watch conference talks on Ruby, Rails, JS, React, tech writing, and tech trivia. Previously, I'd just watch them but now I will take and publish notes for future reference. This talk was a part of RailsConf 2021 that I'm participating in at the time of writing. &lt;/p&gt;

&lt;p&gt;✨ &lt;strong&gt;Talk:&lt;/strong&gt; 'The Rising Storm of Ethics in Open Source' by &lt;a href="https://twitter.com/CoralineAda"&gt;Coraline Ada Ehmke&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;✨ If you can't watch the talk, read Coraline's article: &lt;em&gt;&lt;a href="https://modelviewculture.com/pieces/a-six-month-retrospective-on-ethical-open-source"&gt;A Six-Month Retrospective on Ethical Open Source&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;✨ &lt;strong&gt;One-paragraph summary&lt;/strong&gt;: The increased debate around ethical source threatens to divide the OSS community. In his book "The Structure of Scientific Revolutions", philosopher Thomas Kuhn posits that there are three possible solutions to a crisis like the one we're facing: procrastination, assimilation, or revolution. Which will we choose as we prepare for the hard work of reconciling ethics and open source?&lt;/p&gt;

&lt;p&gt;✨ &lt;strong&gt;Impression&lt;/strong&gt;: YES. This is the talk we need to hear over and over and over again, and which should become a staple in developer education. Coraline is an AMAZING speaker (knowledgeable, concise, direct, charismatic) and her expertise is mind-blowing. Please do watch the talk.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#about-the-speaker"&gt;About the speaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#side-notes"&gt;Side notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#read-more"&gt;Read more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#about-the-speaker"&gt;
  &lt;/a&gt;
  About the speaker
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Coraline_Ada_Ehmke"&gt;Coraline Ada Ehmke&lt;/a&gt; is a gem:

&lt;ul&gt;
&lt;li&gt;fought for codes of conduct at tech conferences, &lt;/li&gt;
&lt;li&gt;created &lt;a href="https://www.contributor-covenant.org/"&gt;Contributor Covenant&lt;/a&gt; (the first and most popular CoC for OS communities), &lt;/li&gt;
&lt;li&gt;received &lt;a href="https://rubyheroes.com/"&gt;Ruby Hero award&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;spoke at UN forum, &lt;/li&gt;
&lt;li&gt;authored the &lt;a href="https://firstdonoharm.dev/"&gt;Hippocratic License&lt;/a&gt;, and &lt;/li&gt;
&lt;li&gt;founded the &lt;a href="https://ethicalsource.dev/"&gt;Organization for Ethical Source&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  Notes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Christine Peterson &lt;a href="https://opensource.com/article/18/2/coining-term-open-source-software"&gt;coined the term 'Open Source'&lt;/a&gt; in 1998 and Bruce Perens wrote its definition&lt;/li&gt;
&lt;li&gt;In 1998, the &lt;a href="https://opensource.org/"&gt;Open Source Initiative&lt;/a&gt; was founded&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OS is nowadays used to violate human rights, and &lt;a href="https://opensource.org/faq#evil"&gt;it is a feature, not a bug&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Can I stop "evil people" from using my program?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No. The Open Source Definition specifies that Open Source licenses may not discriminate against persons or groups. Giving everyone freedom means giving evil people freedom, too.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;"But under what other circumstances, in human society, do we grant complete freedom to evil people? Why is it different with software?" &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fundamental question&lt;/strong&gt;: "Are we responsible for how the technologies we develop are used?"&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OS is used to suppress protests, to increase surveillance, etc. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ethical qs in tech are not new: &lt;a href="https://en.wikipedia.org/wiki/Edmund_Berkeley"&gt;Edmund Berkeley&lt;/a&gt; (one of the pioneers on computer engineering) cofounded the Association for Computing Machinery (ACM) with the mission of "...serving public interests by fostering the open interchange of information and by promoting the highest professional and &lt;strong&gt;ethical&lt;/strong&gt; standards"&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;in 1958 Berkeley sat on the Committee of the Social Responsibility of Computer Scientists, which published a foundational report on the ethical responsibilities of technologists, and the findings of the report boiled down to four statements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"They cannot rightly &lt;strong&gt;ignore&lt;/strong&gt; their social responsibilities"&lt;/li&gt;
&lt;li&gt;"They cannot rightly &lt;strong&gt;delegate&lt;/strong&gt; their social responsibilities"&lt;/li&gt;
&lt;li&gt;"They cannot rightly &lt;strong&gt;neglect to think about how their special role can benefit or harm society&lt;/strong&gt;" (or, we have to consider how our special capacities can help to advance socially desirable applications and prevent undesirable outcomes)&lt;/li&gt;
&lt;li&gt;"They cannot &lt;strong&gt;avoid deciding between conflicting responsibilities&lt;/strong&gt;" (we must think how to choose)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The scientists concluded: "The scientists' credo &lt;em&gt;knowledge for the sake of knowledge's sake&lt;/em&gt; easily comes into conflict with our ethical responsibilities" (even if there's a large middle ground between what's socially desirable and undesirable, the undesirable part should not be enabled through our tech)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;1972 the Vietnam War was waging when Berkley delivered a talk at a 25th-anniversary dinner of the ACM:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;he said that anyone who works on technology for unethical goals should quit their jobs (he even called the audience members by their names to a great public upset; admiral Grace Hopper was among those who left the room); &lt;/li&gt;
&lt;li&gt;he concluded the talk by saying it was "gross neglect of responsibility that computer scientists were not considering their impact in terms of societal benefit or societal harm"&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;"How would we feel about the complicity of the IBM in the Holocaust, if their punch card system was released under the MIT license?" &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Melvin Kranzberg (tech historian): "Technology is neither good nor bad; nor is it neutral"&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;prof. Lila Green: "When technology is implicated in social processes, there is nothing neutral about technology" ("Framing Technology: Society, Choice and Change")&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;"MINASWAN isn't an ethical framework"&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;It's time for us to go beyond "nice". Frankly, I'm sick of "nice". Nice is meaningless if we're not just. Nice is meaningless if we are not equitable. We can't keep using "nice" as a shield that we hide behind ignoring our impact.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#side-notes"&gt;
  &lt;/a&gt;
  Side notes:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;No chemical manufacturer in the US will produce a solution that's used for death by lethal injections. &lt;/li&gt;
&lt;li&gt;The &lt;a href="https://archive.nytimes.com/www.nytimes.com/books/first/b/black-ibm.html?_r=1"&gt;IBM was complicit in the Holocaust&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;in 1998 the greatest conceivable evil that can be borne out of software was market domination by Microsoft&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#read-more"&gt;
  &lt;/a&gt;
  Read more
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Coraline_Ada_Ehmke"&gt;Coraline Ada Ehmke&lt;/a&gt; (bio)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://modelviewculture.com/pieces/a-six-month-retrospective-on-ethical-open-source"&gt;A Six-Month Retrospective on Ethical Open Source&lt;/a&gt; by Coraline Ada Ehmke&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.contributor-covenant.org/"&gt;Contributor Covenant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://firstdonoharm.dev/"&gt;Hippocratic License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ethicalsource.dev/"&gt;Organization for Ethical Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://icebreaker.dev/"&gt;ICE breaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.org/"&gt;Open Source Initiative&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>techtalks</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How to Deploy your Node.JS Website to Heroku</title>
      <author>Rithik Samanthula</author>
      <pubDate>Thu, 15 Apr 2021 15:07:48 +0000</pubDate>
      <link>https://dev.to/code2rithik/how-to-deploy-your-node-js-website-to-heroku-3j4p</link>
      <guid>https://dev.to/code2rithik/how-to-deploy-your-node-js-website-to-heroku-3j4p</guid>
      <description>&lt;p&gt;Want to deploy your website to Heroku?&lt;/p&gt;

&lt;p&gt;Here are the steps to do exactly that:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Node.js and npm installed.&lt;/li&gt;
&lt;li&gt;An existing Node.js app.&lt;/li&gt;
&lt;li&gt;A free Heroku account.&lt;/li&gt;
&lt;li&gt;Having a Node.JS version higher than Version 8&lt;/li&gt;
&lt;li&gt;Having NPM Installed. It is installed with Node so don't worry :)&lt;/li&gt;
&lt;li&gt;Having Git Installed&lt;/li&gt;
&lt;li&gt;Be in your current project directory in the CLI. If not, use &lt;code&gt;cd yourProject&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Assuming that you have already done that, let's start.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-downloading-heroku"&gt;
  &lt;/a&gt;
  1. Downloading Heroku.
&lt;/h1&gt;

&lt;p&gt;Download Heroku for your Operating system from &lt;a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs#set-up"&gt;Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively, if you are on a macbook, use the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install heroku/brew/heroku
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#2-login-with-heroku"&gt;
  &lt;/a&gt;
  2. Login with Heroku
&lt;/h1&gt;

&lt;p&gt;Once you are done installing heroku, you the command&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;heroku login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;to connect your heroku account with the CLI.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#3-changing-the-port"&gt;
  &lt;/a&gt;
  3. Changing the Port
&lt;/h1&gt;

&lt;p&gt;Currently, your project is on a local server. But we don't want that to happen. Since we are deploying it to heroku, add this code to your Node.JS app:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Listening to port 3000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If you want it to listen at Port 3000 as well as heroku's servers, replace the code with this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Listening to port 3000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#4-creating-a-procfile"&gt;
  &lt;/a&gt;
  4. Creating a Procfile
&lt;/h1&gt;

&lt;p&gt;Now, we need to define a Procfile&lt;/p&gt;

&lt;p&gt;This is the file that heroku is going to check to see how to launch your app.&lt;/p&gt;

&lt;p&gt;Create a Procfile &lt;strong&gt;without&lt;/strong&gt; Any extensions like &lt;code&gt;.txt&lt;/code&gt; or &lt;code&gt;.rtf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The name should only be "Procfile".&lt;/p&gt;

&lt;p&gt;In your procfile add this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;web&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;yourJsFileName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#5-initialize-git-and-github"&gt;
  &lt;/a&gt;
  5. Initialize Git and GitHub
&lt;/h1&gt;

&lt;p&gt;Next, use the command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It will initialize an empty git repository for you&lt;/p&gt;

&lt;p&gt;Then, use:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, to commit your changes, use:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -m "Your Message"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#6-deploying-your-app"&gt;
  &lt;/a&gt;
  6. Deploying your App
&lt;/h1&gt;

&lt;p&gt;The next step is to deploy your app to heroku.&lt;/p&gt;

&lt;p&gt;Next use the command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;heroku create
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To create a new heroku project.&lt;/p&gt;

&lt;p&gt;Then, it will give you a link to visit your website. For now, it will only Display: "Heroku | Welcome to your New App!" Don't worry as this is a regular part of the process.&lt;/p&gt;

&lt;p&gt;Now, to deploy your code, use the command&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push heroku master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will push our local version that's been stored using git to heroku.&lt;/p&gt;

&lt;p&gt;It will take a couple of minutes to complete the process.&lt;/p&gt;

&lt;p&gt;As a success message, it should show you&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;remote: Verifying deploy...done.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, refresh the link that they showed you previously and VOILA your content displays. If this happened, then give yourself a pat on the back.&lt;/p&gt;

&lt;p&gt;If you get an error like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NSFNtUn9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrkuzwuyisfm4pfjgitf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NSFNtUn9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrkuzwuyisfm4pfjgitf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Not to worry!&lt;/p&gt;

&lt;p&gt;This means that the website is still taking some time to upload. Try after some time. Then, you will see your Node.JS website up and LIVE!&lt;/p&gt;

&lt;p&gt;Thank You For reading this blog.&lt;/p&gt;

&lt;p&gt;If you want to deploy your website on other platforms, check out the different blogs in this series:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/code2rithik" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJQFkaLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GFKV3RMj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/571318/596c73a4-b890-49d7-b0fb-5eb141aafd91.png" alt="code2rithik image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/code2rithik/how-to-deploy-your-website-using-github-pages-34hc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Deploy your Website using GitHub Pages&lt;/h2&gt;
      &lt;h3&gt;Rithik Samanthula ・ Feb  5 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#githubpages&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#hosting&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;




&lt;div class="ltag__link"&gt;
  &lt;a href="/code2rithik" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJQFkaLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GFKV3RMj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/571318/596c73a4-b890-49d7-b0fb-5eb141aafd91.png" alt="code2rithik image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/code2rithik/how-to-deploy-your-website-using-vercel-4499" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Deploy your Website using Vercel&lt;/h2&gt;
      &lt;h3&gt;Rithik Samanthula ・ Feb 17 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#deploy&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#vercel&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#coding&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/code2rithik" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJQFkaLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GFKV3RMj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/571318/596c73a4-b890-49d7-b0fb-5eb141aafd91.png" alt="code2rithik image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/code2rithik/how-to-deploy-your-website-to-netlify-2f1e" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to deploy your website to Netlify&lt;/h2&gt;
      &lt;h3&gt;Rithik Samanthula ・ Mar 12 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#netlify&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#deploy&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;If you liked it then do it share it with your friends and remember...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#keep-coding-yall"&gt;
  &lt;/a&gt;
  Keep Coding Y'All 👨🏻‍💻
&lt;/h1&gt;

</description>
      <category>heroku</category>
      <category>deploy</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Simulate Real-World User Behavior in Apache JMeter Load Tests</title>
      <author>Raphael Jambalos</author>
      <pubDate>Thu, 15 Apr 2021 15:06:35 +0000</pubDate>
      <link>https://dev.to/raphael_jambalos/simulate-real-user-behavior-in-apache-jmeter-load-tests-58bl</link>
      <guid>https://dev.to/raphael_jambalos/simulate-real-user-behavior-in-apache-jmeter-load-tests-58bl</guid>
      <description>&lt;p&gt;A realistic load test helps you prepare your application and infrastructure adequately for the surge of people that will browsing and using your site. By configuring your test plan to mimic real-world user behavior, the results you get from the load test can help inform design and capacity decisions you will make to keep your site robust.&lt;/p&gt;

&lt;p&gt;In the &lt;a href="https://dev.to/raphael_jambalos/load-test-your-website-in-10-minutes-with-this-visual-guide-1h71"&gt;previous post&lt;/a&gt;, we created a basic Jmeter Test Plan for &lt;a href="https://github.com/jamby1100/simple-loyalty-flask-app"&gt;a 3-endpoint API written in Flask and Python&lt;/a&gt;. That's a good start. But to create a Test Plan that closely resembles real user behavior, we have to add more elements to our test plan. &lt;/p&gt;

&lt;p&gt;If you want to follow along without going through the previous post, you can pick up right where we left off from the previous blog post by downloading this &lt;a href="https://jamby-public-bucket.s3-ap-southeast-1.amazonaws.com/Thread+Group1.jmx"&gt;JMeter test plan&lt;/a&gt;. Also, you will have to set up the &lt;a href="https://github.com/jamby1100/simple-loyalty-flask-app"&gt;Flask application&lt;/a&gt;, so you will have the same application we are load testing against. Setup instructions are found in the README.me file of this repository.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-add-thinking-time-with-the-uniform-random-timer"&gt;
  &lt;/a&gt;
  [1] Add Thinking Time with the "Uniform Random Timer"
&lt;/h2&gt;

&lt;p&gt;When users browse your website, they look around the page first for a few seconds before moving on to the next page. They click the "View Product" page, take at least a few seconds to look at the product, and then add it to the cart. To simulate this thinking time, we add the Uniform Random Timer to our load tests:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--THnSu_mt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky1qdt9uv7wy22jfiek2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--THnSu_mt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky1qdt9uv7wy22jfiek2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once created, let's configure a minimum delay of 2secs and a maximum delay of 7 seconds. JMeter chooses a random value between 2s-7s for the delay. You may want to adjust this value to reflect better how users actually use your site.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HH1t0U2U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyd7df2rez7gznv10c1r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HH1t0U2U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyd7df2rez7gznv10c1r.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let's run the load test. You'd see it takes a bit longer than before because of the delays introduced. This means we have successfully emulated user thinking time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b_Cc9fMe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmnaw4v40kn3lr72oaaq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b_Cc9fMe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmnaw4v40kn3lr72oaaq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-vary-user-input-with-the-csv-data-input"&gt;
  &lt;/a&gt;
  [2] Vary user input with the "CSV Data Input"
&lt;/h2&gt;

&lt;p&gt;Users type in different sign-in credentials when they browse your site. They also buy different products. This puts a strain on your system because the response is more difficult to cache.&lt;/p&gt;

&lt;p&gt;If we have a test plan with 20 virtual users (VUs) logging in using the same email and password and buying the same product, our performance test results become too optimistic. Our database or cache might have been optimized already to keep returning the same results.&lt;/p&gt;

&lt;p&gt;To fix this, we introduce the "CSV Data Input" element into our test plan. First, let's define the CSV file from which we will get the values. Save this CSV file with a filename of "sample_data.csv". Place it in the same directory as we saved the JMeter load test we are working with.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;first_name,last_name,email,password
raphael,jambalos,raphael.jambalos@gmail.com,jambyiscool
test,jambalos,test.driver@gmail.com,driveiscool
ultra,jambalos,ultra.player@gmail.com,ultraplayeriscool
super,jambalos,super.user@gmail.com,superuseriscool
code,jambalos,code.maestro@gmail.com,codemaestroiscool
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, let's use this CSV file in the load test by creating the "CSV Data Set Config" element.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e_Br_REP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8r73qwn9zt9v1luujlz3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e_Br_REP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8r73qwn9zt9v1luujlz3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the filename part, find the CSV file you just created. You could type &lt;code&gt;sample_data.csv&lt;/code&gt; if you followed my earlier instruction of just placing the CSV file in the same directory as the JMeter test plan. If the file is stored elsewhere, click Browse to find the file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sHl1r8K0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/faxmitfsn9ch2f8kdolc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sHl1r8K0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/faxmitfsn9ch2f8kdolc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For each virtual user, the CSV Data Set Config gets one row from the CSV and loads it as values to the variable names you specified in the element. For example, VU#1 will have the row "ultra,jambalos,&lt;a href="mailto:ultra.player@gmail.com"&gt;ultra.player@gmail.com&lt;/a&gt;,ultraplayeriscool" and the variable names available to that user will be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;first_name: ultra&lt;/li&gt;
&lt;li&gt;last_name: jambalos&lt;/li&gt;
&lt;li&gt;email: &lt;a href="mailto:ultra.player@gmail.com"&gt;ultra.player@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;password: ultraplayeriscool&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;VU#2 will have a different row and hence have a different set of values for the four variables specified above. In order to have different values for each VU, we need to review the 2 endpoints we created in the previous post and replace some value fields with variable names instead of hardcoded data.&lt;/p&gt;

&lt;p&gt;For the sign-in route, replace the value of the email and password keys with these values: "${email}" and "${password}".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cBgZckEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1i4p0slx9ancwrplh9r8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cBgZckEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1i4p0slx9ancwrplh9r8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the route loyalty cards create, do the same for first name and last name:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TDTlac7w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97f53az5dt0jsu83ap6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TDTlac7w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97f53az5dt0jsu83ap6g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, running the load test, we see different values used for email, password, first_name, and last_name&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DrUIvLkr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f0f5my33ovdzrqu0dh69.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DrUIvLkr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f0f5my33ovdzrqu0dh69.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-add-conditions-for-gateway-actions"&gt;
  &lt;/a&gt;
  [3] Add conditions for gateway actions
&lt;/h2&gt;

&lt;p&gt;When the call to the login endpoint fails, the actions after it also fails. If we have 10 endpoints to call after login, a failed login overstates an error 10 times over. Also, real-world users retry the login rather than trying pages that are inaccessible to them.&lt;/p&gt;

&lt;p&gt;The solution to this problem is to ensure that each VU only tries the 10 endpoints &lt;em&gt;if the login succeeded&lt;/em&gt;. For this, we create the If Controller:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PP3Mf1-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8onnibx35hv2tvqf4qj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PP3Mf1-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8onnibx35hv2tvqf4qj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, drag the If Controller right below the sign-in endpoint and make sure to "drag in" the /loyalty-cards POST endpoint. This makes sure that the endpoint will only execute if the login was a success. Make sure to set the condition of the if config element to: &lt;code&gt;${JMeterThread.last_sample_ok}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eGDBvtYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ttz3ov93cq9g9j1jmx6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eGDBvtYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ttz3ov93cq9g9j1jmx6g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-set-up-a-test-environment-similar-to-the-production"&gt;
  &lt;/a&gt;
  [4] Set up a test environment similar to the production
&lt;/h2&gt;

&lt;p&gt;Up to this point, our load test is configured to allow us to test quickly so we can get feedback on what to improve. This is why our load test only runs for 30secs and has only 10 VUs. At this volume, we are sure that even if you host your application locally, the load will be adequately handled.&lt;/p&gt;

&lt;p&gt;But load tests are not of much value if we test at low volumes. After all, load tests answer the question: "how many users making requests concurrently can my website handle?". To have a load test that truly adds value to our team, we need to test at higher volumes (think 100-500 VU or more). And to test at higher volumes, we need to set up a test environment that can accommodate that load.&lt;/p&gt;

&lt;p&gt;In setting up the test environment, we need to make it similar to our production setup:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The database and the application servers are of the same size and count.&lt;/li&gt;
&lt;li&gt;The application and web servers have the same configuration as the production setup&lt;/li&gt;
&lt;li&gt;The data in the database is roughly the same size as in production.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For some teams, replicating the database and server fleet (i.e., 10 r5.large EC2 instances and 1 24.xlarge database) won't be possible. For this, what we usually do is a scaled-down version of the app (i.e., think 2 r5.large EC2 instance and 4xlarge database). Then, we multiply the capacity by the scaling factor to get the estimated capacity of production.&lt;/p&gt;

&lt;p&gt;For our example, the scaling factor is 5. Our test environment is 1/5 the size of our production setup. If our test environment can accommodate 500 users, we assume the production setup can accommodate 2500 users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-disable-listeners-during-highvolume-load-tests"&gt;
  &lt;/a&gt;
  [5] Disable Listeners during high-volume load tests
&lt;/h2&gt;

&lt;p&gt;Thus far, we had the "View Results Tree" and "Summary Report" listeners to help us build and improve our load test. But when testing on high volumes, these 2 listeners suck up a lot of resources (particularly memory) that we could have used for the load test operation.&lt;/p&gt;

&lt;p&gt;When you are ready for your high-volume test, disable the two listeners. Once you do, it should be grayed out in the GUI:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tUL-e6yf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nql8677wduu20894jgni.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tUL-e6yf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nql8677wduu20894jgni.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-run-jmeter-in-cli-mode"&gt;
  &lt;/a&gt;
  [6] Run Jmeter in CLI mode
&lt;/h2&gt;

&lt;p&gt;When load testing, we usually change the parameters of the load test. I usually start at 100 VU. If the app can handle it, I push it up to 200 VU, then 300 VU, etc. &lt;/p&gt;

&lt;p&gt;At the current state of our load test, if we use the CLI, we would have to modify the test plan locally with the GUI, then re-upload it to get from 100VU to 200VU. There has to be a better way!&lt;/p&gt;

&lt;p&gt;For this, we introduce CLI parameters. Click on the thread group and replace the values of the fields with the following values species below. Notice that the 1st parameter sets the variable name and the second parameter sets the value of this variable in case there is none provided in the CLI command.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Number of Threads: &lt;code&gt;${__P(users,10)}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Ramp-up period: &lt;code&gt;${__P(rampupPeriod,10)}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Duration: &lt;code&gt;${__P(duration,30)}&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your Thread Group should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZzvkXW7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtq6ab786rt5k454wxma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZzvkXW7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtq6ab786rt5k454wxma.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We also modify our CSV Data Set Config to parameterize the CSV filename using &lt;code&gt;${__P(csvFilename,'sample_test_data.csv)}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BsddVUL8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8qwojzp233mvn9vg1dd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BsddVUL8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8qwojzp233mvn9vg1dd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, it's time to run our load test via CLI. Notice that we intentionally did not include the &lt;code&gt;csvFilename&lt;/code&gt; parameter and instead relied on its default value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;jmeter &lt;span class="nt"&gt;-n&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; jmeter_test_plan.jmx &lt;span class="se"&gt;\&lt;/span&gt;
       &lt;span class="nt"&gt;-l&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt; +&lt;span class="s1"&gt;'%Y%m%d%H%M%S'&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;.csv"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
       &lt;span class="nt"&gt;-Jusers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;50 &lt;span class="se"&gt;\&lt;/span&gt;
       &lt;span class="nt"&gt;-JrampupPeriod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;60 &lt;span class="se"&gt;\&lt;/span&gt;
       &lt;span class="nt"&gt;-Jduration&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;360 &lt;span class="se"&gt;\&lt;/span&gt;
       &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt; +&lt;span class="s1"&gt;'%Y%m%d%H%M%S'&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_folder"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We specified a load test using 50 Virtual Users (VUs), a duration of 6 minutes (360s), and a ramp-up period of 1 minute. This is definitely more high volume than our 10VU / 30s load testing we have done prior. We also specified the JMeter test plan file that we have been working on. We also specified the paths on where to save the output CSV file and the HTML report (you will see both of this later).&lt;/p&gt;

&lt;p&gt;Once you run the test, your CLI should look like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TRd_6fB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dvt69bkqd7wei39fkn95.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TRd_6fB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dvt69bkqd7wei39fkn95.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the test, notice that JMeter has created a folder and a CSV file in the directory we specified in the command. The CSV contains a report of every HTTP request made to our test environment. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SicOSaLn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9k7b4ks9l4h3tm3nvois.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SicOSaLn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9k7b4ks9l4h3tm3nvois.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The folder contains an HTML report with graphs and tables showing how the test went. Open the file &lt;code&gt;index.html&lt;/code&gt; to see this report:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jzCYjl2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wngqmzwvzs77jjhnnvef.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jzCYjl2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wngqmzwvzs77jjhnnvef.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use this report to examine how the load test went. There are also advanced options to configure the contents of this report.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h2&gt;

&lt;p&gt;Now, we have a realistic load test plan that can be configured to run hundreds of virtual users. So far, we have run the test plan on our local machine. But our local machine has a limit. It starts to fail once we do a load test with 1000 VUs or more.&lt;/p&gt;

&lt;p&gt;In the next post, we detail options on how to run load tests to accommodate a high number of virtual users.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#special-thanks"&gt;
  &lt;/a&gt;
  Special Thanks
&lt;/h1&gt;

&lt;p&gt;Special thanks to Allen for making my posts more coherent. &lt;/p&gt;

&lt;p&gt;The authoritative JMeter book of Rodrigues, Mouawad, and Milamber entitled &lt;a href="https://leanpub.com/master-jmeter-from-load-test-to-devops"&gt;Master Apache JMeter From load testing to DevOps&lt;/a&gt; really helped me understand JMeter in more clarity. I highly suggest you purchase this book if you want to learn more about JMeter. &lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@sigmund?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Sigmund&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/prototype?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>jmeter</category>
      <category>tutorial</category>
      <category>aws</category>
    </item>
    <item>
      <title>Zip Pdf Files And Download In Laravel</title>
      <author>Ajay Yadav</author>
      <pubDate>Thu, 15 Apr 2021 15:06:18 +0000</pubDate>
      <link>https://dev.to/ajayyadav/zip-pdf-files-and-download-in-laravel-53g0</link>
      <guid>https://dev.to/ajayyadav/zip-pdf-files-and-download-in-laravel-53g0</guid>
      <description>&lt;p&gt;In this post we'll see how to create a zip file and download it in laravel.&lt;br&gt;
Let's start&lt;br&gt;
create a controller&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;controller&lt;/span&gt; &lt;span class="nc"&gt;InvoiceController&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now open InvoiceController and create a method &lt;strong&gt;downloadZip()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;InvoiceController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;downloadZip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$zip_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'invoices.zip'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$zip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nf"&gt;ZipArchive&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$zip&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$zip_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;ZipArchive&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;CREATE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;ZipArchive&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;OVERWRITE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;storage_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'invoices'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// path to your pdf files&lt;/span&gt;
        &lt;span class="nv"&gt;$files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nf"&gt;RecursiveIteratorIterator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nf"&gt;RecursiveDirectoryIterator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$path&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$files&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// We're skipping all subfolders&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;isDir&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$filePath&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getRealPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="c1"&gt;// extracting filename with substr/strlen&lt;/span&gt;
                &lt;span class="nv"&gt;$relativePath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'invoices/'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$filePath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$zip&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$filePath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$relativePath&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;$zip&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Content-Type'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s1"&gt;'application/octet-stream'&lt;/span&gt;&lt;span class="p"&gt;,);&lt;/span&gt;
        &lt;span class="nv"&gt;$zip_new_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Invoice-"&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"y-m-d-h-i-s"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;".zip"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;response&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;download&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$zip_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$zip_new_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$headers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are using &lt;strong&gt;ZipArchive()&lt;/strong&gt; class , you can read more about this on this &lt;a href="https://www.php.net/manual/en/class.ziparchive.php"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now create a route, open &lt;strong&gt;web.php&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;//web.php&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Http\Controllers\InvoiceController&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/invoice-download'&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="nc"&gt;InvoiceController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'downloadZip'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's all... 🤗&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>vue</category>
      <category>webdev</category>
    </item>
    <item>
      <title>10 Best Python Libraries for Machine Learning Every Developer Should Know</title>
      <author>Ashish Yadav</author>
      <pubDate>Thu, 15 Apr 2021 14:59:31 +0000</pubDate>
      <link>https://dev.to/expoashish/10-best-python-libraries-for-machine-learning-every-developer-should-know-120j</link>
      <guid>https://dev.to/expoashish/10-best-python-libraries-for-machine-learning-every-developer-should-know-120j</guid>
      <description>&lt;p&gt;For more information visit &lt;a href="https://dev.to%5BI'm%20an%20inline%20link%5D(put-link-here)"&gt;My Blogs&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-numpy"&gt;
  &lt;/a&gt;
  1. NumPy
&lt;/h2&gt;

&lt;p&gt;NumPy is a very popular python library for large multi-dimensional array and matrix processing, with the help of a large collection of high-level mathematical functions. It is very useful for fundamental scientific computations in Machine Learning. Almost all Python machine-learning packages like Mat-plotlib, SciPy, Scikit-learn, etc rely on this library to a reasonable extent.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-scipy"&gt;
  &lt;/a&gt;
  2. SciPy
&lt;/h2&gt;

&lt;p&gt;SciPy is a popular python library for machine learning which stand for Scientific Python. SciPy in Python is an open-source library used for solving mathematical, scientific, engineering, and technical problems. It allows users to manipulate the data and visualize the data using a wide range of high-level Python commands. SciPy is built on the Python NumPy extention. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-scikitlearn"&gt;
  &lt;/a&gt;
  3. Scikit-learn
&lt;/h2&gt;

&lt;p&gt;Sklearn, short for scikit-learn, is a Python library for building machine learning models. Scikit-learn is among the most popular open-source machine learning libraries in the world for classical ML algorithms. It is built on top of two basic Python libraries, viz., NumPy and SciPy.Scikit-learn supports most of the supervised and unsupervised learning algorithms. Scikit-learn can also be used for data-mining and data-analysis.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-theano33"&gt;
  &lt;/a&gt;
  4. Theano33
&lt;/h2&gt;

&lt;p&gt;Theano is a python machine learning library that is used to define, evaluate and optimize mathematical expressions involving multi-dimensional arrays in an efficient manner. Theano can work on Graphics Processing Unit (GPU) and CPU.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-tensor-flow"&gt;
  &lt;/a&gt;
  5. Tensor Flow
&lt;/h2&gt;

&lt;p&gt;TensorFlow is a very popular open-source library for high performance numerical computation developed by the Google Brain team in Google. TensorFlow is an end-to-end python machine learning library for performing high-end numerical computations. TensorFlow can handle deep neural networks for image recognition, handwritten digit classification, recurrent neural networks, NLP (Natural Language Processing), word embedding and PDE (Partial Differential Equation).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-keras"&gt;
  &lt;/a&gt;
  6. Keras
&lt;/h2&gt;

&lt;p&gt;Keras is a very popular Machine Learning library for Python. It is a high-level neural networks API capable of running on top of TensorFlow, CNTK, or Theano. Keras makes it simple for machine learning beginners to design and develop a neural network. Keras Python also deals with convolution neural networks. It includes algorithms for normalization, optimizer, and activation layers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-pytorch"&gt;
  &lt;/a&gt;
  7. PyTorch
&lt;/h2&gt;

&lt;p&gt;PyTorch is a production-ready Python machine-learning library with excellent examples, applications and use cases supported by a strong community. It has an extensive choice of tools and libraries that supports on Computer Vision, Natural Language Processing(NLP) and many more ML programs. PyTorch can smoothly integrate with the python data science stack, including NumPy. You will hardly make out a difference between NumPy and PyTorch.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-pandas"&gt;
  &lt;/a&gt;
  8. Pandas
&lt;/h2&gt;

&lt;p&gt;Pandas is a popular Python library for data analysis. It is not directly related to Machine Learning. Python Pandas comes with several inbuilt methods for combining data, and grouping &amp;amp; filtering time-series functionality. Overall, Pandas is not just limited to handle data-related tasks; it serves as the best starting point to create more focused and powerful data tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-matplotlib"&gt;
  &lt;/a&gt;
  9. Matplotlib
&lt;/h2&gt;

&lt;p&gt;Matpoltlib is a very popular Python library for data visualization. Like Pandas, it is not directly related to Machine Learning. It particularly comes in handy when a programmer wants to visualize the patterns in the data. It is a 2D plotting library used for creating 2D graphs and plots.  It works by using standard GUI toolkits like GTK+, wxPython, Tkinter, or Qt to provide an object-oriented API that helps programmers to embed graphs and plots into their applications. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-seaborn-python"&gt;
  &lt;/a&gt;
  10. Seaborn Python
&lt;/h2&gt;

&lt;p&gt;Seaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics. The functionalities of Seaborn go beyond Python Pandas and matplotlib with the features to perform statistical estimation at the time of combining data across observations, plotting and visualizing the suitability of statistical models to strengthen dataset patterns.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-youtube-channel-please-support-me"&gt;
  &lt;/a&gt;
  My Youtube Channel Please support me:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://youtu.be/4pdBhJns2nM"&gt;Top 10 Technologies to Learn in 2021&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/IZHQypmB0iY"&gt;Top 10 Programming Languages to Learn in 2021&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-blogs"&gt;
  &lt;/a&gt;
  My Blogs
&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://expoashish.blogspot.com/"&gt;please check it&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thankyou🤗&lt;/p&gt;

</description>
      <category>python</category>
      <category>machinelearning</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>So yea, xent, xent future, are both worthless.</title>
      <author>Jonyk56</author>
      <pubDate>Thu, 15 Apr 2021 14:50:33 +0000</pubDate>
      <link>https://dev.to/jonyk56/so-yea-xent-xent-future-are-both-worthless-3pcp</link>
      <guid>https://dev.to/jonyk56/so-yea-xent-xent-future-are-both-worthless-3pcp</guid>
      <description>&lt;p&gt;if you have been watching my github page, you know I've been inactive for quite a long time, during that period, team donut was disbanded and xent was no more. but well, who said I was done coding???? nah, we doing this again folks. BUT, this time the code will be better, this time the language will work properly, this time xent won't be such a nightmare to use.&lt;/p&gt;

&lt;p&gt;That's right, xent is getting an upgrade, and a new name.&lt;br&gt;
xent.fx, github wouldn't let me name it that for some weird reason, But moving on! &lt;/p&gt;

&lt;p&gt;xent.fx has some drastic changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the entire language is being reworked, it will no longer be so strange in terms of syntax.&lt;/li&gt;
&lt;li&gt;plugins will actually be useful.&lt;/li&gt;
&lt;li&gt;macros will be useful aswell.&lt;/li&gt;
&lt;li&gt;variables will be added.&lt;/li&gt;
&lt;li&gt;arrays will be PLANNED.&lt;/li&gt;
&lt;li&gt;conditions and expressions will be added. &lt;/li&gt;
&lt;li&gt;It's now going to be coded in c++&lt;/li&gt;
&lt;li&gt;Literally everything else is being removed that was previously in xent.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;now, onto some information about xent.fx that isn't ( not ) related to the changes mentioned above:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I have an example of what the code would look like once the first official release is completed.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@use[core] %% import core module

cspace _[] { %% declare main code-space, or where the code will run
  core#log["like my example?"] %% it's just console.log in javascript...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;er yea... that's all i can show for right now, Absolutely none of the code has been written yet. BUT i do need some help, since team donut is no longer around, i do not have a team that could help me. if anyone would like to help with the project, please dm me on discord ( Jonyk56#1929 ).&lt;/p&gt;

&lt;p&gt;Moving on, have a nice rest of your week, and lets look forward to summer! &lt;/p&gt;

</description>
    </item>
    <item>
      <title>A Chat Progressive Web App</title>
      <author>aladinyo</author>
      <pubDate>Thu, 15 Apr 2021 14:42:24 +0000</pubDate>
      <link>https://dev.to/aladinyo/a-chat-progressive-web-app-50ac</link>
      <guid>https://dev.to/aladinyo/a-chat-progressive-web-app-50ac</guid>
      <description>&lt;p&gt;Hello everyone,&lt;/p&gt;

&lt;p&gt;I made a chat progressive web application with React, NodeJS and firebase, it comes with a lot of features like push notifications.&lt;/p&gt;

&lt;p&gt;Follow the link and search for my name "alaa" and chat with me.&lt;/p&gt;

&lt;p&gt;The app is very well explained in the github repository.&lt;/p&gt;

&lt;p&gt;Don't forget to ALLOW NOTIFICATIONS when you use the app.&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://whatsappy-app.web.app/"&gt;https://whatsappy-app.web.app/&lt;/a&gt; ALLOW NOTIFICATIONS !!!&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href="https://github.com/aladinyo/WhatsappyApp"&gt;https://github.com/aladinyo/WhatsappyApp&lt;/a&gt; &lt;br&gt;
GIVE ME A STAAR ⭐⭐⭐!!!&lt;/p&gt;

&lt;p&gt;Let's discuss the app in the comments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sa85wJWe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/le29fztuzhb1cs7zcr82.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sa85wJWe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/le29fztuzhb1cs7zcr82.png" width="600"&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g28XApQI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1j3l7gii7qiyq56dd28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g28XApQI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1j3l7gii7qiyq56dd28.png" width="600"&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KmwXfdN3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n65p3ebnyotcux9i77n7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KmwXfdN3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n65p3ebnyotcux9i77n7.png" width="600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#features-of-the-app"&gt;
  &lt;/a&gt;
  Features of the app
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Messaging users in real time.&lt;/li&gt;
&lt;li&gt;You can text messages.&lt;/li&gt;
&lt;li&gt;You can send Images.&lt;/li&gt;
&lt;li&gt;You can send an audio message.&lt;/li&gt;
&lt;li&gt;You click on an image sent in a chat and it will smoothly animate to the center so you can see it.&lt;/li&gt;
&lt;li&gt;You can see if the user is typing or recording.&lt;/li&gt;
&lt;li&gt;You can record an audio and send it.&lt;/li&gt;
&lt;li&gt;You can delete the conversation.&lt;/li&gt;
&lt;li&gt;You can search for users.&lt;/li&gt;
&lt;li&gt;You can see the online status of users.&lt;/li&gt;
&lt;li&gt;You can see the unread messages.&lt;/li&gt;
&lt;li&gt;You will have a seen at the bottom if the user saw your message.&lt;/li&gt;
&lt;li&gt;You have an arrow button that allows you to scroll down the chat you also see the unread messages in it.&lt;/li&gt;
&lt;li&gt;The audio slider is grey when you send an audio message and is green when you receive one and becomes blue if the receiver plays the audio.&lt;/li&gt;
&lt;li&gt;The audio player allows you to see the full time of the audio and if you play it you will see the current time.&lt;/li&gt;
&lt;li&gt;You can receive notifications if a user sent you a message.&lt;/li&gt;
&lt;li&gt;A sound is played when you send a message or receive one in a conversation.&lt;/li&gt;
&lt;li&gt;Another sound is played if you receive a message from another user.&lt;/li&gt;
&lt;li&gt;The app works offline you can use it without internet and you can send text messages only when you come back online they will be automatically sent.&lt;/li&gt;
&lt;li&gt;Finally you can click on the arrow down button at the home page and the web app is installed in your device.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>pwa</category>
      <category>node</category>
    </item>
    <item>
      <title>Amazing button hover with CSS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Thu, 15 Apr 2021 14:38:59 +0000</pubDate>
      <link>https://dev.to/nikhil27b/amazing-button-hover-with-css-5egi</link>
      <guid>https://dev.to/nikhil27b/amazing-button-hover-with-css-5egi</guid>
      <description>&lt;p&gt;Hello, today I created an Amazing button hover Using HTML &amp;amp; CSS. I hope you like this also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/OJWEbXW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Selenium Java (Implicit &amp; Explicit) Waits</title>
      <author>Anne Quinkenstein</author>
      <pubDate>Thu, 15 Apr 2021 14:34:29 +0000</pubDate>
      <link>https://dev.to/annequinkenstein/selenium-java-waits-22b3</link>
      <guid>https://dev.to/annequinkenstein/selenium-java-waits-22b3</guid>
      <description>&lt;p&gt;If you enter Websites, you usually wait a few seconds if you see the information. If click, based on your input, which first goes to the backend, you see changes. You have to wait till the changes are done. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implicit-wait-globally-declared"&gt;
  &lt;/a&gt;
  Implicit Wait - globally declared
&lt;/h2&gt;

&lt;p&gt;Declare globaly: &lt;br&gt;
"Hey Selenium, wait for n number of seconds before you throw exceptions!"&lt;br&gt;
It listens to your DOM, if it displayed it will keep on. &lt;br&gt;
n is the maximum time Limit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;timeouts&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;implicitlyWait&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;limeUnit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SECONDS&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#explicit-wait-targets-a-specific-scenario"&gt;
  &lt;/a&gt;
  Explicit Wait - targets a specific scenario
&lt;/h2&gt;

&lt;p&gt;Imagine a search Button. When you search a large amount of targets, it takes, sets say 15 seconds to load. &lt;br&gt;
Otherwise the Application should load faster. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#webdriverwait"&gt;
  &lt;/a&gt;
  WebDriverWait
&lt;/h3&gt;

&lt;p&gt;Continuisly listen to DOM as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;WebDriverWait&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;WebDriverWait&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;until&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ExpectedConditions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;visibilityOfElementLocated&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cssSelector&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"span.promoInfo"&lt;/span&gt;&lt;span class="o"&gt;)));&lt;/span&gt;
&lt;span class="c1"&gt;// or .elementToBeClickable .... &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#fluent-wait"&gt;
  &lt;/a&gt;
  Fluent Wait
&lt;/h3&gt;

&lt;p&gt;monitors at regular intervalls of time (Pollingtime has to defined) &lt;br&gt;
Example: if something is displayed,which you don't want to check. (after 3 sec "Card is accepted" - "Order is process" after 7 sec - .... )&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt; &lt;span class="nc"&gt;Wait&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;WebDriver&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;FluentWait&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;WebDriver&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withTimeout&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Duration&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ofSeconds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pollingEvery&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Duration&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ofSeconds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ignoring&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;NoSuchElementException&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="nc"&gt;WebElement&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;until&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
&lt;span class="c1"&gt;//customised function - until methods returns webelement&lt;/span&gt;
&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Function&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;WebDriver&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;WebElement&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;WebElement&lt;/span&gt; &lt;span class="nf"&gt;apply&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;WebDriver&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findElement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cssSelector&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"div#finishh4"&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;isDisplayed&lt;/span&gt;&lt;span class="o"&gt;()){&lt;/span&gt;
             &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findElement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cssSelector&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"div#finish h4"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#threadsleep"&gt;
  &lt;/a&gt;
  Thread.Sleep
&lt;/h2&gt;

&lt;p&gt;Part of Java, not specially Selenium &lt;br&gt;
waits the amount of time, without listening to DOM &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Implement Repository Base and Unit of Work in C#</title>
      <author>1001binary</author>
      <pubDate>Thu, 15 Apr 2021 14:10:52 +0000</pubDate>
      <link>https://dev.to/1001binary/implement-repository-base-and-unit-of-work-in-c-2ncg</link>
      <guid>https://dev.to/1001binary/implement-repository-base-and-unit-of-work-in-c-2ncg</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction-and-implementation"&gt;
  &lt;/a&gt;
  Introduction and Implementation
&lt;/h3&gt;

&lt;p&gt;The repository pattern belongs to the family of design patterns. It's used for handling common data access. It's easily maintainable and highly testable. Besides that, Unit Of Work can be seen as transaction to ensure that all operations in an unit are successfully executed. If one of them is failed, nothing happens.&lt;/p&gt;

&lt;p&gt;In C#, there is an interface called IQueryable. It is like lazy interface. When called, it will be executed. This interface fits to Repository pattern well.&lt;/p&gt;

&lt;p&gt;First, we define a new class EntityBase with Id and Version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EntityBase&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;Version&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Version property can help to check concurrency in database. Nowadays, most of ORMs support concurrency check automatically.&lt;/p&gt;

&lt;p&gt;Second, we define a new interface IRepository where its constraint of T is EntityBase. There, we will write 5 methods: List, Create, Read, Update and Delete. This can call LCRUD.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IRepository&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;EntityBase&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;IQueryable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;List&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="nf"&gt;Read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;object&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Third, we implement a new class GenericRepository using DbContext in Entity Framework.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;abstract&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;GenericRepository&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IRepository&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;EntityBase&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;DbContext&lt;/span&gt; &lt;span class="n"&gt;_dbContext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;GenericRepository&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DbContext&lt;/span&gt; &lt;span class="n"&gt;dbContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_dbContext&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dbContext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;overridable&lt;/span&gt; &lt;span class="n"&gt;IQueryable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;List&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_dbContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;overridable&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;_dbContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;overridable&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="nf"&gt;Read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;object&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_dbContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;Find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;overridable&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;_dbContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EntityState&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Modified&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;overridable&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;_dbContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;Remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, we create a new class UnitOfWork.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;sealed&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UnitOfWork&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IDisposable&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;DbContext&lt;/span&gt; &lt;span class="n"&gt;_dbContext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;UnitOfWork&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DbContext&lt;/span&gt; &lt;span class="n"&gt;dbContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_dbContext&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dbContext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="c1"&gt;// TODO: Initialize repositories here...&lt;/span&gt;
      &lt;span class="c1"&gt;// e.g. this.StudentRepository&lt;/span&gt;
                  &lt;span class="c1"&gt;// = new StudentRepository(dbContext);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;Save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;isSuccess&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_dbContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveChanges&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;isSuccess&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Dispose&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;_dbContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Dispose&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="c1"&gt;// e.g. public readonly IStudentRepository StudentRepository;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Each entity must inherit EntityBase.&lt;/li&gt;
&lt;li&gt;For each entity, you must create a new interface I[xxx]Repository and a new class [xxx]Repository inheriting GenericRepository and implementing I[xxx]Repository.&lt;/li&gt;
&lt;li&gt;New Repository classes have to be initialized in UnitOfWork class.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Best Practices:&lt;/p&gt;

&lt;p&gt;We can take advantage of IoC frameworks to register DbContext and UnitOfWork into services container and then use UnitOfWork as constructor parameter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#samples"&gt;
  &lt;/a&gt;
  Samples
&lt;/h3&gt;

&lt;p&gt;Suppose StudentDbContext is provided and Ninject is used for registering two services UnitOfWork and StudentDbContext. UnitOfWork will be automatically injected in Studentcontroller.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StudentController&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ControllerBase&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;UnitOfWork&lt;/span&gt; &lt;span class="n"&gt;_unitOfWork&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;StudentController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UnitOfWork&lt;/span&gt; &lt;span class="n"&gt;unitOfWork&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_unitOfWork&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unitOfWork&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A Console application is to add two new Students to database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Program&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;params&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;DbContext&lt;/span&gt; &lt;span class="n"&gt;studentDbContext&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;StudentDbContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UnitOfWork&lt;/span&gt; &lt;span class="n"&gt;unitOfWork&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;UnitOfWork&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;studentDbContext&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="n"&gt;unitOfWork&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StudentRepository&lt;/span&gt;
             &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Student&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Larry"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Page"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
         &lt;span class="n"&gt;unitOfWork&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StudentRepository&lt;/span&gt;
             &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Student&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Mark"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Zuckerberg"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
         &lt;span class="n"&gt;unitOfWork&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hopefully, this post can help you to implement your own repository and unit of work.&lt;/p&gt;

&lt;p&gt;Happy coding :)&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>csharp</category>
      <category>designpatterns</category>
      <category>architecture</category>
    </item>
  </channel>
</rss>
