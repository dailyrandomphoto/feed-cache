<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How I Kickstarted My Dev Career by Doubling Down on My Education Debt</title>
      <author>waldowred5</author>
      <pubDate>Sun, 25 Apr 2021 13:46:29 +0000</pubDate>
      <link>https://dev.to/waldowred5/how-i-kickstarted-my-dev-career-by-doubling-down-on-my-education-debt-1ik4</link>
      <guid>https://dev.to/waldowred5/how-i-kickstarted-my-dev-career-by-doubling-down-on-my-education-debt-1ik4</guid>
      <description>&lt;p&gt;For anyone looking to become a professional developer, there are only three ways to go from zero to coding hero:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Traditional Route - Study a bachelor of computer science at a university or college&lt;/li&gt;
&lt;li&gt;Modern Route - Become a self-taught programmer&lt;/li&gt;
&lt;li&gt;Industry Route - Enroll in a coding boot camp&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All of these routes are viable paths to your first paid developer role, they are just not all equal. While each has benefits and drawbacks, there is one that is more likely to launch your dev career to the stars.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;But first, a short story...&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When I left high school, I was convinced I wanted to be a doctor. If I could go back and tell my younger self I would eventually be hired to help build the world's first blockchain-based superannuation* platform, I doubt he would believe me. &lt;/p&gt;

&lt;p&gt;&lt;sup&gt;For all the non-Australian readers, &lt;strong&gt;superannuation&lt;/strong&gt; is the Australian system for compulsory contributions to a retirement fund, similar to a 401k in the US.&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;I went to university, studying a bachelor of medical science, eager to pave my way to 'Dr.' status. To my surprise and dismay, I hated it. With no passion or clear direction, I ambled my way through my degree, putting in an embarrassingly small amount of effort. &lt;/p&gt;

&lt;p&gt;What seemed like the longest three years of my life, the end of my time at university was looming around the corner. I joined a charity sales call centre to get some cash and work experience. I know, one of 'those' people. &lt;/p&gt;

&lt;p&gt;It was at this point I first discovered the tech industry, being recruited into the sales team for a global software company. I was flown around the world, the commission was great and I was loving life, but four years and a few companies later, the rose-coloured glasses had begun to crack. It was time to choose a career that suited me, instead of letting a career choose me.&lt;/p&gt;

&lt;p&gt;I was seven years past the optimal point to start a new career, and another bachelor's degree was one of the least appealing options I could imagine. Was I really about to start all over again?&lt;/p&gt;

&lt;p&gt;You have probably guessed which of the three routes I think is the best, but if not, it is the industry route, a &lt;strong&gt;coding boot camp&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;While boot camps can have many different types of successful students, it is really best suited for those looking to  switch careers, balancing the need to finish ASAP with the need to gain enough proficiency to land a job.&lt;/p&gt;

&lt;p&gt;With that disclaimer out of the way, here are the top reasons why you should seriously consider enrolling in a coding boot camp if you want to be a professional developer:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#content"&gt;
  &lt;/a&gt;
  Content
&lt;/h2&gt;

&lt;p&gt;The most obvious advantage is the content delivered in a boot camp. Coding boot camps originated in Silicon Valley, run by the industry to teach only what was current and relevant for new coding initiates. These courses have been popping up all over the world and provide an education opportunity for those who want to learn about the tools they will be using on a daily basis as a junior developer.&lt;/p&gt;

&lt;p&gt;These courses tend to focus on web technologies like HTML, CSS, JavaScript, Git, a front end framework (typically React) as well as some SQL and database design. Additionally, you are likely to glean many key tips about how to ace coding interviews (aimed at junior roles) without having to cram coding interview practice before the big day. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community
&lt;/h2&gt;

&lt;p&gt;There are a number of advantages that come directly from the people you study with. &lt;/p&gt;

&lt;p&gt;When you are surrounded by people who are on the same journey, it is significantly easier to get help when you need it. While it is possible to find online communities, it just isn't quite the same. You will have peers that are coming across the same problems and have found a way to solve it that they are willing to share with you. Alternatively, you will always be able to ask your lecturers and educators who typically have a wealth of experience to draw from. This support network will significantly reduce the learning burden that comes with solving every single problem you face by yourself. &lt;/p&gt;

&lt;p&gt;It may not be the case for everyone, but I certainly find it easier to stay motivated and commit to the task at hand when I am part of a group. There is an intrinsic level of competitiveness that helps drive my behaviour towards delivering my best work. I also found the work my peers would deliver and present gave me insight into novel solutions to problems I hadn't yet encountered as well as inspiration for future projects.&lt;/p&gt;

&lt;p&gt;Finally, a more long term benefit, you will have met a group of developers that make their way into many different areas in the industry (or other industries entirely). These connections will be invaluable, as you will be in the loop for any new job opportunities that appear before they are posted on sites like &lt;a href="https://www.linkedin.com/jobs/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://www.seek.com.au/"&gt;Seek&lt;/a&gt; and other job boards.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#challenge"&gt;
  &lt;/a&gt;
  Challenge
&lt;/h2&gt;

&lt;p&gt;A boot camp provides students a well-defined structure of increasing project difficulty. Whenever I looked back at the previous week, I was consistently blown away by how much I had learned. It was truly exponential, and what I considered really difficult at the time became totally trivial in a matter of days.&lt;/p&gt;

&lt;p&gt;I was luckily able to escape the dreaded 'tutorial purgatory' by joining a course where I was given larger projects to sink my teeth into, with specific requirements that provided scope and direction, support from my peers and educators as well as deadlines and goals to drive my learning momentum at a rapid pace. For more reading on breaking down your first small projects, check out this guide on &lt;a href="https://dev.to/peterlunch/how-to-plan-and-build-a-programming-project-a-legitimate-guide-for-beginners-1fll"&gt;How to Plan and Build a Programming Project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While there are many good reasons to enroll in a boot camp, one should nevertheless be aware of the following considerations:  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cost"&gt;
  &lt;/a&gt;
  Cost
&lt;/h2&gt;

&lt;p&gt;Boot camps ain’t cheap. While they are a slightly lower cost option than traditional degrees you are still likely to need a HELP debt loan to cover the course fees. &lt;/p&gt;

&lt;p&gt;This may be the primary reason many consider the self-taught route, but in my experience, it was worth every cent. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time"&gt;
  &lt;/a&gt;
  Time
&lt;/h2&gt;

&lt;p&gt;The head start you get in your education by learning from industry experts is unparalleled and will save a significant amount of time in the long run. &lt;/p&gt;

&lt;p&gt;While not impossible, it is incredibly unlikely you will be able to learn at the same pace in a self-taught environment. Studying at a boot camp will allow you to start your professional development journey sooner, leading to an earlier salary start date and earlier access to promotions. In most cases, this acceleration will translate to a larger financial benefit across an entire career than the initial cost of the boot camp course fees. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#discipline"&gt;
  &lt;/a&gt;
  Discipline
&lt;/h2&gt;

&lt;p&gt;For all the advantages boot camps bring, there is one factor that will dictate your ultimate success. Make no mistake, boot camps are &lt;strong&gt;hard work&lt;/strong&gt;! Speaking from my own experience, what I’ve seen from my peers and read from previous students, to do well requires 60-70 hours per week (in a 6 month, full time course). It is a sure fire way to burn out if you don’t prepare a self-care routine in advance. If you aren’t able to dedicate this much time to a course, you may still be able to graduate, but as the saying goes, you only get out what you put in. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#comparison-with-other-forms-of-learning"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Comparison With Other Forms of Learning&lt;/em&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#universities"&gt;
  &lt;/a&gt;
  Universities
&lt;/h3&gt;

&lt;p&gt;Universities are a very traditional form of education, steeped in history. They date back to the original Platonic Academy of Greece in 387 BCE, and now form the bedrock of tertiary education in most countries around the world.&lt;/p&gt;

&lt;p&gt;Due to their large size and moderately antiquated ways of working, a course syllabus will typically be updated every 3 years. For some perspective, there were 17 brand new programming languages developed and 11 framework releases in the 3 years leading up to 2014. &lt;/p&gt;

&lt;p&gt;In contrast, the internet is less than 40 years old, and changes more frequently than the average job tenure of a millennial. Learning modern web-based skills in this traditional environment is likely to provide you a deep understanding of computing theory but put you behind the 8-ball in practical skills.&lt;/p&gt;

&lt;p&gt;A drawback of trying to follow the traditional education path is the high bar set for entry. In Australia, most universities require a minimum ATAR of more than 90 (the 90th percentile of high school graduates) in order to be accepted into a program. As ATAR requirements tend to be driven by popularity more than technical difficulty, there are plenty of people who would be perfectly capable programmers that will never be accepted into bachelor of computer science.&lt;/p&gt;

&lt;p&gt;On the other hand, for all of those that make it into a bachelor, a key benefit of studying at university is the ‘prestige factor’. Even though a large number of employers are starting to rethink the hard requirement of a degree for recruiting new hires, many still value traditional degrees over any other type of qualification. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selftaught"&gt;
  &lt;/a&gt;
  Self-Taught
&lt;/h3&gt;

&lt;p&gt;With the rise in short online courses at basement bargain prices, it is becoming increasingly popular to study online. It is even possible to learn everything you would find in a boot camp or bachelor degree syllabus online for free, if you know where to look. &lt;/p&gt;

&lt;p&gt;The obvious problem for developers just getting started, is they won’t know where to look, how to read the technical documentation, what topics should take priority in their learning journey or whether you are progressing at a reasonable pace. Even if you could determine all of this on your own, there are so many areas in the industry you can branch into, there is no real way of knowing which languages and frameworks to focus on until you get there. It is also likely to take some time AFTER your first gig as a developer before you find exactly which type of programming you enjoy most. &lt;/p&gt;

&lt;p&gt;A large barrier to measurable learning progress as a self-taught programmer is having no concrete accountability. If you haven’t invested much money into your education, you have no skin in the game. This makes it so much harder to stay motivated when faced with challenges (of which there will be plenty) and all the more likely you will abandon the idea of becoming a dev all together.&lt;/p&gt;

&lt;p&gt;Probably the most dangerous and unanticipated factor in the journey of a self-taught programmer is the potential for a false sense of security. In the lead up to starting my boot camp, I bought a subscription to &lt;a href="https://www.codecademy.com/"&gt;codecademy.com&lt;/a&gt; (a fantastic resource for learning new programming languages). I remember feeling a monumental sense of achievement whenever I finished one of the course topics and any of the small projects in each module. In hindsight, these small wins were so insignificant compared to what I built and achieved during my time at the boot camp and would have prevented me from seeing how much more I needed to learn before I was ready to take on my first professional role. After learning HTML, CSS / SASS, Git, Ruby on Rails, PostgreSQL, RESTful APIs, JavaScript and React, I still feel I was barely prepared for my first role as a front end developer (which is widely regarded by most developers as the less technical cousin of back end development).&lt;/p&gt;

&lt;p&gt;If you are able to stay motivated and disciplined, get by with a few low cost courses and subscriptions and find a well-laid out blueprint for your learning journey, it is possible to skip all of the education debt outright. If you choose this road it will be incredibly challenging, but anything worth doing is never easy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Everyone has a different situation, with different priorities and challenges to face, but if you are still reading and haven't been deterred by any of the points above I would highly recommend enrolling in a boot camp as soon as possible. They are definitely not for everyone, but there are a number of different courses to choose from with different options for flexible study. If you are dedicated, enthusiastic and committed you will go very far, and nothing will be able to stop you from reaching your goals. I wish you all the best on your coding journey, and regardless of which route you take to get into the industry, the learning in this profession never stops.&lt;/p&gt;

</description>
      <category>education</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Firefox theme `Aurora Future`</title>
      <author>Benny Guo</author>
      <pubDate>Sun, 25 Apr 2021 13:19:31 +0000</pubDate>
      <link>https://dev.to/auroral-ui/firefox-theme-aurora-future-48ei</link>
      <guid>https://dev.to/auroral-ui/firefox-theme-aurora-future-48ei</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rTz0M6s5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l7l6xnxtk6l9t035fe11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rTz0M6s5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l7l6xnxtk6l9t035fe11.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---uAYHQAk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5s4aatg41lu1z2dnxy3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---uAYHQAk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5s4aatg41lu1z2dnxy3.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recently I had switched back to Firefox for web development. &lt;/p&gt;

&lt;p&gt;Thinking back, I had left Firefox since 4-5 years ago, I remember Firefox had the best layout debug tool called &lt;a href="https://getfirebug.com/"&gt;firebug&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Not sure how many of the web developer now days hear of this tool.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Therefore I decided to make a Aurora Theme for Firefox as well and here it is!&lt;/p&gt;

&lt;p&gt;(Side note I still love Chrome, I still switch between the two from time to time, but a lot more on Firefox now days, because for some reason Chrome is very laggy for my MacBookPro. Also I am thinking of making a chrome theme as well~)&lt;/p&gt;

&lt;p&gt;Here is place to download this theme: &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/aurora-future/"&gt;https://addons.mozilla.org/en-US/firefox/addon/aurora-future/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>firefox</category>
      <category>aurora</category>
      <category>theme</category>
      <category>webdev</category>
    </item>
    <item>
      <title>5 great productivity tips for working from home!</title>
      <author>Sandor Dargo</author>
      <pubDate>Sun, 25 Apr 2021 13:15:08 +0000</pubDate>
      <link>https://dev.to/sandordargo/5-great-productivity-tips-for-working-from-home-5a95</link>
      <guid>https://dev.to/sandordargo/5-great-productivity-tips-for-working-from-home-5a95</guid>
      <description>&lt;p&gt;It's still pandemic time and most of us are &lt;del&gt;working&lt;/del&gt; from home. Let me share with you my best pieces of advice to make your remote experience as productive as possible!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-let-your-goals-constrain-you"&gt;
  &lt;/a&gt;
  Don't let your goals constrain you
&lt;/h2&gt;

&lt;p&gt;The life of a developer is chaotic. Period.&lt;/p&gt;

&lt;p&gt;We all have dozens of top priority tasks that are only waiting to be swept off from the board by our bosses when a priority zero matter comes in. &lt;/p&gt;

&lt;p&gt;Whatever you plan for your day, there will be always something even more urgent to take care of. One of your managers will get in touch with you asking to throw away whatever you're doing to fix a typo in the documentation he just discovered. Another will ask you to add a simple button - and the underlying service - to the 7-year-old webpage that was visited by at least 12 people during the last 18 months. Some colleagues will send you some instant messages because they need your help to get some names that they could find in less time than you go over the mandatory rounds of &lt;em&gt;howareyoutodays&lt;/em&gt;, or maybe an experienced colleague will ask you to act as his living git documentation. Ah, all those urgent matters!&lt;/p&gt;

&lt;p&gt;If you are on a lucky break and people think you are still on vacation, for sure you'll have to pop to the post office because the mailman only left a notice saying you were not at home. Not that you are even allowed to go out, but he didn't even try to ring the bell. He just applied social distancing, right?&lt;/p&gt;

&lt;p&gt;Your significant other will ask you to immediately fix the cabinet that is broken for the last 3 years when you're in your deepest meditation about which design pattern to choose.&lt;/p&gt;

&lt;p&gt;After spending an hour adjusting the height of your son's bike that got a bit stuck and rusty, you'll be given a nice snack exactly at the moment when you start to understand how that undocumented library is supposed to work.&lt;/p&gt;

&lt;p&gt;Why would you take your time to set some small yet unachievable goals when interruptions will drive your days?&lt;/p&gt;

&lt;p&gt;Why the hell would you waste your bloody time to set up goals for your days when all those people around you will contact you with their urgent problems and change the course for your day?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-have-a-dedicated-place-to-work"&gt;
  &lt;/a&gt;
  Don't have a dedicated place to work
&lt;/h2&gt;

&lt;p&gt;Should you create a dedicated office space in your apartment? A corner where you have a desk, a chair, one or maybe more screens? &lt;/p&gt;

&lt;p&gt;The answer is definitely not!&lt;/p&gt;

&lt;p&gt;Having a dedicated office space leads to boredom. Do you think you can be creative and productive that way? And even if you could, who has so much space at home? My wife started to complain in just a few months that I by myself occupy like 2 square meters that is more than 3% of all the available space for us. &lt;/p&gt;

&lt;p&gt;Do you really want that in your life?&lt;/p&gt;

&lt;p&gt;Instead, work wherever you feel like! I'd even encourage you to switch places often. You can start working from your bed in the morning, maybe while your partner is still snoring next to you. Do you like to throne for long times? Well, please don't answer this question in the comments, I really don't care. Nobody does. Yet, the loo is also a calm place to work. Just beware of meetings. Don't keep your mic on!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cdfrfl7F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/coy0s5uh8hud4wvw9q5d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cdfrfl7F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/coy0s5uh8hud4wvw9q5d.jpg" alt="Working from the toilet?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A few meetings from the kitchen while you're slicing onions and preparing a nice boeuf bourguignon? You also have access to your fridge! Who could resist to pop up... a coke?&lt;/p&gt;

&lt;p&gt;After lunch, you can spend the afternoon just lying down on the sofa and progress a bit with the requested features - unless you're constantly interrupted -, it will be so comfortable!&lt;/p&gt;

&lt;p&gt;Speaking about interruptions, all that I said might be useless if you have young children at home. In that case, you might follow what I call the &lt;em&gt;Cry Driven (Away) Development&lt;/em&gt; and in the midst of all the crying and drama you just always look for the calmest corner of your home.&lt;/p&gt;

&lt;p&gt;Anyway, at the end of the day, you can still work a bit from your bed and then place your laptop next to the bed, just to prepare for the next morning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#span-meetings-all-over-the-week"&gt;
  &lt;/a&gt;
  Span meetings all over the week
&lt;/h2&gt;

&lt;p&gt;Did I already mention how great the kitchen is for meetings? Let's continue discussing meetings. I think that you should span them all over the week. If I have to jump from one meeting to the other often without having the time to obey the call of mother nature, I get irritated.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hey, can you hear me? ... Hallo? Hallo? ... Sorry, I've been speaking for 5 minutes and I just realized I was on mute. Let me start over. Or just guess what I said. ... Can you hear me better or do you still hear an echo?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Say you're far from the mic again, say you're far from the mic again, I dare you, I double dare you, say it one more goddamn time and... I'll call Samuel L Jackson to tell you a nice bedtime story.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/qo5jnBJvGUs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I prefer to have at least half an hour between meetings in order to get some rest and calm down. I usually break down all my user stories into microtasks, so I have some time to work on them in between (and sometimes during) the meetings. &lt;/p&gt;

&lt;p&gt;By spanning them all over the week, I'm not overwhelmed with meetings during any part of the day or the week.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-always-available-on-im"&gt;
  &lt;/a&gt;
  Be always available on IM
&lt;/h2&gt;

&lt;p&gt;In the office, your boss used to see you. Maybe she even saw your screens all the time, or at least she could if she wanted to. You were a good &lt;del&gt;slave&lt;/del&gt; employee, you were under constant surveillance.&lt;/p&gt;

&lt;p&gt;It's not the case anymore! Of course, unless your company is capturing your screen and maybe even takes some pictures through your webcam... They cannot know whether you work in a given moment or you're chopping onions for your midday chilli.&lt;/p&gt;

&lt;p&gt;So what is left for your masters is to contact you on chat at random times. If you don't want to disappoint them - and play Russian-roulette with your job - you should reply all the time instantaneously. They have to know both that you are there ready to go the extra mile and also to provide them social support as - just like you! - they also lost their usual circles with the pandemic.&lt;/p&gt;

&lt;p&gt;But as you're a smart person, you can go a step forward! You should be contacting others and note if someone is replying late. After all, maybe at a moment, you'll be asked about a person and then you can tell that he replied to you about that TPS report 17 minutes after you pinged him after your late-night dinner.&lt;/p&gt;

&lt;p&gt;But a good company soldier works long days and always available to serve, right?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-eat-dont-drink-much"&gt;
  &lt;/a&gt;
  Don't eat, don't drink much!
&lt;/h2&gt;

&lt;p&gt;Please don't eat if you want to stay productive! Food intake takes time! I know you have a lunch break - it is for time wasters anyway - but imagine what will happen if you fill your tummy. You eat your programmer's special pizza-coke combo and we all know what's going to happen. You're gonna pass out in a food-induced coma. If you manage to avoid it, you'll still only be a shadow of yourself for a couple of hours. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DWA_c6Xf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2anlu7m202fv2kbfpv51.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DWA_c6Xf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2anlu7m202fv2kbfpv51.jpg" alt="Pizza-coke combo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you really want that?&lt;/p&gt;

&lt;p&gt;The best you can do is that you don't have breakfast, you don't have lunch and you only eat once a day after office hours. Will it be only the end of your workday or your whole day doesn't matter that much anyway. The french used to characterize the big-city life as metro-boulot-dodo. You commute, you work, you commute then you sleep. With the home office, there is no more need for the metro, it's just &lt;em&gt;boulot-dodo&lt;/em&gt;. We work and sleep. And of course, we pay taxes, that's the most important! Don't ruin the cycle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8wCTv3vr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8huz4akq15b0brzro5jj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8wCTv3vr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8huz4akq15b0brzro5jj.jpg" alt="Metro-boulot-dodo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you can limit your water - or whatever you drink - intake, even better! Don't go overboard, if you start dry coughing in a meeting and the mute button cannot solve it because actually you must present, drink a few sips! Otherwise, if there is a chance, try to limit your drinking. Do you know what's going to happen if you follow the bandwagon of heavy water drinkers? You'll have to pee. A lot. &lt;/p&gt;

&lt;p&gt;Do you have time for that? &lt;/p&gt;

&lt;p&gt;I don't. &lt;/p&gt;

&lt;p&gt;Oh, by the way, keep an empty bottle with you. Just in case. You know. Ladies, I don't know what to suggest.&lt;/p&gt;

&lt;p&gt;Let your motto be &lt;em&gt;no drink, no pee&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Today I shared with you 5 pieces of advice on how to be productive or ... Well, I hope you don't take them too seriously and you had some good laughs. Next time, I'll come back with something real on productivity!&lt;/p&gt;

</description>
      <category>career</category>
      <category>watercooler</category>
      <category>productivity</category>
      <category>satire</category>
    </item>
    <item>
      <title>Spotify Mixtapes For Coding</title>
      <author>David Leuliette 🤖</author>
      <pubDate>Sun, 25 Apr 2021 13:14:58 +0000</pubDate>
      <link>https://dev.to/flexbox/spotify-mixtapes-for-coding-4p5b</link>
      <guid>https://dev.to/flexbox/spotify-mixtapes-for-coding-4p5b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#curated-mixtapes"&gt;
  &lt;/a&gt;
  Curated mixtapes
&lt;/h2&gt;

&lt;p&gt;Last year, I published my &lt;a href="https://dev.to/flexbox/how-to-get-4000-followers-on-spotify-2kla"&gt;growth hack technique&lt;/a&gt; to get some followers on Spotify.&lt;/p&gt;

&lt;p&gt;I reached 12 playlists and I hope it will help some of you to get "into the zone" and release amazing products to production!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0the-list"&gt;
  &lt;/a&gt;
   The List
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/0Jt2JW0NTIL6MvV9dSOnqZ?si=2f09e2def13f4704"&gt;HACKER #1: Mixtape for coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/3LdxHInEvlJZqtqeRmtiGv?si=8accab0a704941c6"&gt;HACKER #2: Rock for coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/59h0570gNwpTrqiD4KFt9c?si=1a0b2eaf51154914"&gt;HACKER #2.11: Aggressive mixtape for programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/0pf103tVqmwkF060LHk0RG?si=218d1fbed3dd4292"&gt;HACKER #3.0: Movies Mixtape for coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/6IZ1Mh2grWaxgdQnK9xIAO?si=285875d545294822"&gt;HACKER #3.1: OST Mixtape for coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/301Kl8b7hslXbV8wxk3SrV?si=dc78f2f4ea8544c5"&gt;HACKER #3.2: Gaming Mixtape for coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/6Zmw201xJGrD7LuGwF2Ph0?si=5a019dd3d1e04cb8"&gt;HACKER #4: Electro Mixtape for coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/2Adv3s73yJNLm3z1BwK9rP?si=0837002aac384e46"&gt;HACKER #5: Chill Mixtape for coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/26yEmL1emKzN9Xpt1dyhPm?si=09aaee200ded4f3d"&gt;HACKER #6: Mixtape for laser-focus at work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/3FYezFABeZdD13RMQiff0G?si=88d85f4cda414ebc"&gt;HACKER #7: Summer of code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/5PDDbk2cvJiiqBT37iHs9S?si=0eb0d79dfafb468f"&gt;HACKER #8: Retro Mixtape for Coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/5rR8hKi3BWEx3rnHPD7M72?si=d1066285f44049a2"&gt;HACKER #9: DJ Mixtape for Coders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/0yuappB07Oz6xj0xBhH2Y3?si=53e53272732f4ca9"&gt;HACKER #10: Stress free Mixtape for programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/1iQK1OHiOgpF2DlOaz0Xow?si=6b1f5a9a371b4cf8"&gt;HACKER #11: HipHop Coders Krew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/59h0570gNwpTrqiD4KFt9c?si=f0c9342ea5d2465a"&gt;HACKER #12: Metal for Programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;👉 Discover all my curated &lt;a href="https://davidl.fr/music"&gt;playlists for programming&lt;/a&gt;&lt;/p&gt;

</description>
      <category>music</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to set up Jest for ESM</title>
      <author>Rocktim Saikia</author>
      <pubDate>Sun, 25 Apr 2021 13:08:49 +0000</pubDate>
      <link>https://dev.to/rocktimsaikia/how-to-set-up-jest-for-esm-2bbb</link>
      <guid>https://dev.to/rocktimsaikia/how-to-set-up-jest-for-esm-2bbb</guid>
      <description>&lt;p&gt;Node v10 is coming to &lt;a href="https://endoflife.date/nodejs"&gt;end of life&lt;/a&gt; in the upcoming April 30. And the node js community is starting to move all their projects and modules to ESM (ES6 Modules) ditching commonjs as a good practice.&lt;/p&gt;

&lt;p&gt;Today I am going to do a quick tutorial on how to set up jest for testing your ES6 modules with minimum set up and requirements. So let's get started.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is important to mention that Jest does have &lt;a href="https://jestjs.io/docs/ecmascript-modules"&gt;built-in ESM support&lt;/a&gt; but it's not very stable and I often run into various issues while using it. So the method I am writing here is the best solution that has worked for me so far.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First, let's install the required packages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;babel-jest @babel/plugin-transform-modules-commonjs —dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I am assuming that you already have the core &lt;code&gt;jest&lt;/code&gt; package installed, If you don't, then install it by running&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;jest —dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have to configure jest to use the &lt;code&gt;babel-jest&lt;/code&gt; plugin. You can create a separate &lt;code&gt;jest.config.js&lt;/code&gt; file but I am going to put the configuration right in the package.json since it is very simple. Add the following lines to your &lt;code&gt;package.json&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;package.json&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nl"&gt;"jest"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"transform"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"\\.[jt]s?$"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"babel-jest"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After setting the jest config, create a &lt;code&gt;.babelrc&lt;/code&gt; file in the root of the project directory. And add the following line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//.babelrc

{
    "plugins": ["@babel/plugin-transform-modules-commonjs"]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that’s it. Now we can test ES6 modules running Jest.&lt;/p&gt;

&lt;p&gt;Here is a simple boilerplate that uses this trick.&lt;br&gt;
&lt;a href="https://github.com/RocktimSaikia/node-boilerplate"&gt;https://github.com/RocktimSaikia/node-boilerplate 🚀&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This post was originally posted on my &lt;a href="https://rocktimcodes.site/blog/how-to-set-up-jest-for-esm"&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>testing</category>
      <category>node</category>
      <category>javascript</category>
    </item>
    <item>
      <title>I built doge theme of Reddit using MERN Stack!</title>
      <author>Justin Maximillian Kimlim</author>
      <pubDate>Sun, 25 Apr 2021 13:03:03 +0000</pubDate>
      <link>https://dev.to/kimlimjustin/i-built-doge-theme-of-reddit-using-mern-stack-58hd</link>
      <guid>https://dev.to/kimlimjustin/i-built-doge-theme-of-reddit-using-mern-stack-58hd</guid>
      <description>&lt;p&gt;Hello developers, I've recently created a doge theme version of Reddit, called Dogeit using the MERN Stack (MongoDB, Express JS, React JS, and Node JS).&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/kimlimjustin"&gt;
        kimlimjustin
      &lt;/a&gt; / &lt;a href="https://github.com/kimlimjustin/dogeit"&gt;
        dogeit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🐶 Doge version of reddit.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Dogeit&lt;/h1&gt;
&lt;p&gt;🐶 Doge version of reddit.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9760b756128c0edc2bf3f6762c49f46fe3329685901a71e2fdb6f0047230bfdc/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d3145394d7447534b3647616e5a43344b7a494d674a6b7361334d70797376384450"&gt;&lt;img src="https://camo.githubusercontent.com/9760b756128c0edc2bf3f6762c49f46fe3329685901a71e2fdb6f0047230bfdc/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d3145394d7447534b3647616e5a43344b7a494d674a6b7361334d70797376384450" alt="Dogeit demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Local Setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Clone this repository or fork it&lt;/li&gt;
&lt;li&gt;Navigate to &lt;code&gt;client&lt;/code&gt; directory
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;npm i&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Create a new file called &lt;code&gt;.env&lt;/code&gt; which stores environment variables such as
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;REACT_APP_SERVER_URL&lt;/code&gt;, your server endpoint&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;REACT_APP_GITHUB_CLIENT_ID&lt;/code&gt;, your GitHub OAuth Client ID&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;REACT_APP_SECURITY_KEY&lt;/code&gt;, a random token used to secure your application&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Start application by running &lt;code&gt;npm start&lt;/code&gt; or &lt;code&gt;yarn start&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Navigate to &lt;code&gt;server&lt;/code&gt; directory
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;npm i&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create a new file called &lt;code&gt;.env&lt;/code&gt; which stores environment variables such as
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;GITHUB_CLIENT_ID&lt;/code&gt;, your GitHUb OAuth Client ID&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;GITHUB_CLIENT_SECRET&lt;/code&gt;, your GitHUB OAuth Client Secret&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;CLIENT_URL&lt;/code&gt;, your client endpoint&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ATLAS_URI&lt;/code&gt;, your MongoDB Atlas URI&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;SECURITY_KEY&lt;/code&gt;, a random token used to secure your application, note that this token value must be the same as &lt;code&gt;REACT_APP_SECURITY_KEY&lt;/code&gt; value in &lt;code&gt;client/.env&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;EMAIL_ADDRESS&lt;/code&gt;, Your Email Address&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;EMAIL_PROVIDER&lt;/code&gt;, Your Email Provider&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;EMAIL_PASS&lt;/code&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/kimlimjustin/dogeit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Any comments will be appreciated :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-you-like-this-project-be-sure-to-drop-a-star-on-github-"&gt;
  &lt;/a&gt;
  If you like this project, be sure to drop a star on GitHub 🌟!
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#happy-coding"&gt;
  &lt;/a&gt;
  Happy coding!
&lt;/h2&gt;

&lt;p&gt;You might also like these articles:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/kimlimjustin" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bOoVBNhK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--SC5anWaO--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/510950/892b1367-fd17-4a9e-a8b9-e0cb62d5df4d.jpg" alt="kimlimjustin image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kimlimjustin/3-good-quality-apps-for-windows-to-make-your-computer-seems-modern-k4k" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;3 Good quality apps for windows to make your computer seems modern&lt;/h2&gt;
      &lt;h3&gt;Justin Maximillian Kimlim ・ Mar 14 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kimlimjustin" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bOoVBNhK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--SC5anWaO--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/510950/892b1367-fd17-4a9e-a8b9-e0cb62d5df4d.jpg" alt="kimlimjustin image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kimlimjustin/my-personal-website-built-using-html-css-and-vanilla-javascript-13kd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My personal website built using HTML, CSS, and vanilla JavaScript&lt;/h2&gt;
      &lt;h3&gt;Justin Maximillian Kimlim ・ Mar 18 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#portfolio&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kimlimjustin" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bOoVBNhK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--SC5anWaO--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/510950/892b1367-fd17-4a9e-a8b9-e0cb62d5df4d.jpg" alt="kimlimjustin image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kimlimjustin/abstractmark-the-modern-markdown-language-2ch1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;AbstractMark, the modern markdown language.&lt;/h2&gt;
      &lt;h3&gt;Justin Maximillian Kimlim ・ Feb 15 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#markdown&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#abstractmark&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
    </item>
    <item>
      <title>User authentication through authorization code grant type using AWS Cognito</title>
      <author>Jinlian(Sunny) Wang</author>
      <pubDate>Sun, 25 Apr 2021 12:32:52 +0000</pubDate>
      <link>https://dev.to/jinlianwang/user-authentication-through-authorization-code-grant-type-using-aws-cognito-1f93</link>
      <guid>https://dev.to/jinlianwang/user-authentication-through-authorization-code-grant-type-using-aws-cognito-1f93</guid>
      <description>&lt;p&gt;This article is part of oAuth series using AWS Cognito, see links to other articles in &lt;a href="https://dev.to/jinlianwang/oauth-made-simple-with-aws-cognito-1de8"&gt;Series Summary: oAuth Made Simple with AWS Cognito&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;In previous post - &lt;a href="https://dev.to/jinlianwang/setting-up-implicit-grant-workflow-in-aws-cognito-step-by-step-5feg"&gt;Setting up implicit grant workflow in AWS Cognito, step by step&lt;/a&gt;, we show that it takes only 4 simple steps in order to set up implicit grant workflow in AWS Cognito. With that, you can start using AWS Cognito to protect your web server and its resources. However, Implicit Grant is deprecated and no longer recommended. Why? &lt;/p&gt;

&lt;p&gt;As you can see from its Testing Time section, the access token issued by AWS Cognito is returned directly back to the client side and used to access other resources on the server side. The same token can be also used to access Cognito Auth APIs and retrieve other user informations. Consequently, it is a highly sensitive piece of information and by allowing client side direct access exposes a significant security risk. &lt;/p&gt;

&lt;p&gt;Authorization code grant type is recommended as replacement as a standard practice when it comes to client side authentication for either web or mobile applications. How and why is Authorization Code grant type is better? In the next section, we will deep dive into a typical login workflows through authorization code grant type to find out. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typical-login-workflows-through-authorization-code-grant-type"&gt;
  &lt;/a&gt;
  Typical Login Workflows through Authorization Code Grant Type
&lt;/h3&gt;

&lt;p&gt;When we use a web or mobile application, if you exist the app and come back within a short period, you usually have the convenience of access without the need to login again. What goes behind it in order to achieve it? The first workflow we will go through explain exactly how, see its sequence diagram below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nDPINLC8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m5x4cuq20syaw85r0eqp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nDPINLC8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m5x4cuq20syaw85r0eqp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see from the above diagram, once the client load up all the artifacts (as in Step 1, which is only needed for web applications, as mobile app has all client resources as part of its installation bundle), the first thing is to call web server to check its login status, by passing in a session token which it saves locally (either in session storage or cookie for web applications or keychains for iOS app or Shared Preferences for Android app). If the session token is still valid, it will request for the resources for home screen (Step 3), and render home screen without requiring for authentication. However, if the login status check returns false, the session token is removed from the client storage, and the home screen is displayed with login button, allowing users to re-authenticate using the Login workflow as described in the next sequence diagram. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hTN9xfM3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acfu7zs4i5xila6yp5oo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hTN9xfM3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acfu7zs4i5xila6yp5oo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This diagram is the meat of login workflow using Authorization Code grant type. Once the user clicks a login button, the first request the client (either mobile or web application) will make to the server is to request for a login url, which would point to the login page of AWS Cognito. Some application may opt to hard code this in the client side, however, I would recommend to request dynamically from web server as if the url usually would contain a client ID (issued by AWS Cognito, see Step 2, app client ID and secret setting), and by not hardcoding it in the client side, the client can rotate its app client credentials periodically which is generally required for security compliance, without the need to release a new version of client (even though web application does not need installation, it still requires a change to its client artifacts on server side). The login url call is usually returned with a HTTP code of 302 (or newer standard calls for either 303 or 307), and so the browser would redirect to login url automatically and load the login page of Cognito page that you set up in precious article with custom domain prefix for this web server. Once the user provides login credential and click the login button, the Cognito authentication process kicks off. Assuming that user provides a correct login credentials, the process would end up by redirecting browsers back to the callback url set up previously using Cognito (see Step 3, call back url part) with a query parameter named “code”. The callback url is usually set up to be one endpoint exposed by web server, and so once the browser points to this url, it triggers the server side logic to exchange the code for an access token with Cognito, validating that this user is a valid user and optionally the web server can make another call to retrieve extra user info including email, phone number and other custom user attributes, using App Client ID and Secret as client credentials to authenticate with Cognito Auth API. Afterwards, the web server would generate its own session token, and return it to the client. Once the client receives the token, it can use it to request for any protected resources on the server side, and it may opt to store it locally so that the user does not need to re-authenticate if she comes back before the token expires, as explained in previous workflow. Once users no longer requires the application, she may want to terminate the session explicitly by triggering a log out sequence. By logging out explicitly, it notified the web server to invalidate the session token permanently, and so no one can exploit the token for any ill purpose, like described in the following sequence diagram. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8dky4ZZn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qsorr40ro9nijt9man34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8dky4ZZn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qsorr40ro9nijt9man34.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To summarize, there are generally 3 webflows related when it comes to login workflow through authorization code grant type using AWS Cognito (or any other Identity Provider). To support these workflows, web server would  usually need to expose the following 4 endpoints, with each of them handling their own role and logics. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login url endpoint (Step 4) returns a login url to web or mobile client, pointing to AWS Cognito login page. It usually would contain an app client ID and call back url which points to the exchange code endpoint of web server, that is explained next. &lt;/li&gt;
&lt;li&gt;Exchange code endpoint(Step 7) exchanges an authorization code for an access token with AWS Cognito, and optionally requests and stores for later use some user information like email, user sub, and custom user attributes if any. &lt;/li&gt;
&lt;li&gt;Login status endpoint (Step 2) returns the login status of client, by passing in a session token stored locally. If it does not find one stored locally, it would skip this step. &lt;/li&gt;
&lt;li&gt;Logout endpoint (Step 12) would trigger the process on the web server side to invalidate the session token issued earlier by exchange code endpoint. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Through all 4 endpoints, the access token is never returned directly back to client. Instead, only authorization code which is usually one time use only and short lived is returned to client side, and passed to web server to exchange for an access token through a secure channel, which is never exposed to client sides. Hence, compared to Implicit Grant type, Authorization Code grant type is inherently more secured and recommended as a replacement for Implicit Grant type for both web and mobile applications. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-authorization-code-grant-type-in-aws-cognito"&gt;
  &lt;/a&gt;
  Setting Up Authorization Code Grant Type in AWS Cognito
&lt;/h3&gt;

&lt;p&gt;Now that we know what the login workflows would be if we want to go with Authorization Code grant type, what can we enable this grant type in Cognito. We would follow exactly the same 4 simple steps as described in previous article - &lt;a href="https://dev.to/jinlianwang/setting-up-implicit-grant-workflow-in-aws-cognito-step-by-step-5feg"&gt;Setting up implicit grant workflow in AWS Cognito, step by step&lt;/a&gt; when setting up Implicit Grant Type, except that in Step 3 - Config App Client Settings, we want to select Authorization Code grant type instead of (or in addition to) Implicit Grant Type, like in the following snapshot. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5zHrmkLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1r3cgx6q57go61pklhm7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5zHrmkLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1r3cgx6q57go61pklhm7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we would need App client ID and secret in order to retrieve login url and user info (see Step 9 in previous section), we also want to note down the app client secret in Step 2 (of previous article), before moving to next section. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-time"&gt;
  &lt;/a&gt;
  Testing Time
&lt;/h3&gt;

&lt;p&gt;Now comes the fun time. We will go through all the different calls in the previous section using browser and curl commands. It will help readers to have better ideas on each step works in authorization code grant type. First, assemble a url in the format of &lt;code&gt;https://&amp;lt;domain prefix&amp;gt;.auth.us-east-1.amazoncognito.com/oauth2/authorize?client_id=&amp;lt;client id&amp;gt;&amp;amp;redirect_uri=https%3A%2F%2Fexample.com&amp;amp;scope=openid&amp;amp;response_type=code&lt;/code&gt;. In our case, it would be&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;https://sunnyoauth.auth.us-east-1.amazoncognito.com/oauth2/authorize?client_id=1vvp0tt53g1uhntoa5bmvnvk2a&amp;amp;redirect_uri=https%3A%2F%2Fexample.com&amp;amp;scope=openid&amp;amp;response_type=code&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Copy and paste the above url into Chrome browser, follow the instruction to sign up a new account (for the first time only), or sign in if you have an existing account. Continue to follow the instructions, until you get a url in the format of&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;https://example.com/?code=&amp;lt;authorization code&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Save the  for our next step. Also execute the following command in terminal to create a base64 encoded client credentials, and save it for next step. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;echo -n &amp;lt;client id&amp;gt;:&amp;lt;client secret&amp;gt; | base64&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;It is worth noting that the authorization code is one time use and valid for only 5 minutes. It is designed this way on purpose for security considerations.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Next we will show how we can exchange the authorization code above for an access token, by passing in the base64 encoded client credentials and authorization code. Copy and paste the following curl command and run it through the terminal:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;curl --location --request POST 'https://&amp;lt;domain prefix&amp;gt;.auth.us-east-1.amazoncognito.com/oauth2/token' \&lt;br&gt;
--header 'Authorization: Basic &amp;lt;base64 encoded client credentials&amp;gt;' \&lt;br&gt;
--header 'Content-Type: application/x-www-form-urlencoded' \&lt;br&gt;
--data-urlencode 'code=&amp;lt;authorization code&amp;gt;' \&lt;br&gt;
--data-urlencode 'grant_type=authorization_code' \&lt;br&gt;
--data-urlencode 'redirect_uri=&amp;lt;callback url&amp;gt;'&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For our case, it would be the following url (for security purpose, I exclude the encoded client credentials part). &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;curl --location --request POST 'https://sunnyoauth.auth.us-east-1.amazoncognito.com/oauth2/token' \&lt;br&gt;
--header 'Authorization: Basic MXZ2cDB0dDUzZzF1aG50b2E1Ym12bnZrMmE6YXBvOW5jYzYwNnAxZDVycGRwdDV1bGxqMnBkdHAyOWg1ZjdmOHZuZmlmNzMycTRpdGFj' \&lt;br&gt;
--header 'Content-Type: application/x-www-form-urlencoded' \&lt;br&gt;
--data-urlencode 'code=102b28e1-51ea-48f6-bc55-97533d88cf30' \&lt;br&gt;
--data-urlencode 'grant_type=authorization_code' \&lt;br&gt;
--data-urlencode 'redirect_uri=https://example.com&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And the result will contain an access token as one of fields as shown below: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;{&lt;br&gt;
   "id_token": "eyJraWQiOiJZSHE1...&amp;lt;others skipped to save space here&amp;gt;",&lt;br&gt;
   "access_token": "eyJraWQiOiJmYUd...&amp;lt;others skipeed to save space here&amp;gt;",&lt;br&gt;
   "refresh_token": "eyJjdHkiOiJKV1...&amp;lt;others skipped to save space here&amp;gt;",&lt;br&gt;
   "expires_in": 3600,&lt;br&gt;
   "token_type": "Bearer"&lt;br&gt;
}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With the access token in hand, through the same process in previous article, we can get the user info through /oauth2/userInfo by passing in the access token in “Authorization” http header, with the value in the format of &lt;code&gt;Bearer &amp;lt;access token&amp;gt;&lt;/code&gt;. Copy and paste the following curl command and run it through the terminal: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;curl -X GET https://sunnyoauth.auth.us-east-1.amazoncognito.com/oauth2/userInfo -H 'Authorization: Bearer &amp;lt;access token&amp;gt;'&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And the result is shown below: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;{"sub":"95fb5614-18b0-4f48-b49e-d8601934a1df","email_verified":"true","email":"fakeemail@hotmail.com","username":"jinlianwang"}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And the same as pointed out in previous article, the access token is a JWT token and can be inspected using online JWT inspector to see its payload. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;This concludes this quick introduction over how to use authorization code grant type to authenticate users to your web or mobile apps. In summary, compared to implicit grant workflow, it is more complicated to support authorization code grant workflow. Web servers would usually need to expose 4 endpoints, such as login url, login status, exchange code and log out. Using browser and curl command, we showed how an authorization code can be retrieved, and exchanged for an access token in AWS Cognito. Hope that would help you understand how to implement the 4 endpoints for your web server. In next article, we will provide a sample project implementing these 4 endpoints through a AWS Lambda function. Stay tuned!&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>aws</category>
      <category>cognito</category>
      <category>oauth</category>
    </item>
    <item>
      <title>Implement your own custom hook in React with typescript</title>
      <author>Rakhi</author>
      <pubDate>Sun, 25 Apr 2021 12:15:50 +0000</pubDate>
      <link>https://dev.to/atbrakhi/implement-your-own-custom-hook-in-react-with-typescript-1f1l</link>
      <guid>https://dev.to/atbrakhi/implement-your-own-custom-hook-in-react-with-typescript-1f1l</guid>
      <description>&lt;p&gt;As a beginner, thinking about creating a custom hook sounded very complex to me. As I spent more time working with them, I realized it isn't that complicated after all.&lt;/p&gt;

&lt;p&gt;In this blog post I am going to take a very simple example and  create my own custom hook out of it.&lt;/p&gt;

&lt;p&gt;I wrote a blog post recently about creating a toggle button in React &lt;a href="https://dev.to/rakhisharma/creating-a-toggle-button-in-react-i8o"&gt;here&lt;/a&gt;. In this blog post I am going to convert my toggle function into a react hook.&lt;/p&gt;

&lt;p&gt;Why am I writing this hook for this small function, is it even needed?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I want to show you how to create your own custom hook by giving you a simple example.&lt;/li&gt;
&lt;li&gt;Having a custom hook is useful as it hides information, which means you are utilizing encapsulation.&lt;/li&gt;
&lt;li&gt;It separates logic from the component. Your components will be super clean that way.&lt;/li&gt;
&lt;li&gt;Writing hooks means you are testing more and your code is more flexible. You can extend functionality without changing any component, in case the requirement changes as it always happens!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's go!&lt;/p&gt;

&lt;p&gt;If you read my blog &lt;a href="https://dev.to/rakhisharma/creating-a-toggle-button-in-react-i8o"&gt;Creating a Toggle button in React&lt;/a&gt;, you are good to continue reading. If not, I would highly recommend reading it, it will take &amp;lt;2 mins. I promise this blog post will look easier afterwards.&lt;/p&gt;

&lt;p&gt;Now, that you have read my previous blog post, you might have noticed my code for creating a toggle button looks like this:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/u74p9?view=editor"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In order to create a custom hook out of it, we need to follow these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a folder name &lt;code&gt;Hooks&lt;/code&gt; and inside it create a file called &lt;code&gt;useToggle.ts&lt;/code&gt; (remember all hook names start with &lt;code&gt;use&lt;/code&gt;, let's keep the consistency)&lt;/li&gt;
&lt;li&gt;Implement the handler method in &lt;code&gt;useToggle&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;useToggle&lt;/code&gt; hook in your component.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let get started then!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;.  Create &lt;code&gt;Hooks&lt;/code&gt; folder and a file inside it, name it as &lt;code&gt;useToggle.ts&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;. Implement toggle handler function in the &lt;code&gt;useToggle.ts&lt;/code&gt; file:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add a state:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  const [state, setState] = useState("off");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Write the handler function:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  const handlers = () =&amp;gt; ({
    toggle: () =&amp;gt; {
      setState((res) =&amp;gt; (res === "on" ? "off" : "on"));
    }
  });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Memoize the handler function using &lt;code&gt;useMemo&lt;/code&gt;:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  const handlers = useMemo(
    () =&amp;gt; ({
      toggle: () =&amp;gt; {
        setState((res) =&amp;gt; (res === "on" ? "off" : "on"));
      }
    }),
    []
  );
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you must be wondering why we needed to memoize the function here?  By using &lt;code&gt;useMemo&lt;/code&gt; we are making sure our function remembers the result of the last time it was called. It also comes in very handy in performance optimizations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;. Use the hook &lt;code&gt;useToggle&lt;/code&gt; in the component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [toggleState, { toggle }] = useToggle();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all.&lt;/p&gt;

&lt;p&gt;Here is how our &lt;code&gt;useToggle&lt;/code&gt; hook looks like at the end.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/3ev58?module=/Hooks/useToggle.ts&amp;amp;view=editor"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here is how our component looks at the end:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/3ev58?view=split"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Bookmark it in case you need it later or feel free to reach out &lt;a href="https://twitter.com/atbrakhi"&gt;atbrakhi&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>typescript</category>
      <category>javascript</category>
    </item>
    <item>
      <title>I made a small weekend project, thoughts?</title>
      <author>Fayaz Ahmed</author>
      <pubDate>Sun, 25 Apr 2021 11:01:06 +0000</pubDate>
      <link>https://dev.to/fayaz/i-made-a-small-weekend-project-thoughts-3155</link>
      <guid>https://dev.to/fayaz/i-made-a-small-weekend-project-thoughts-3155</guid>
      <description>&lt;p&gt;So, someone I knew had a google sheet of a lot of youtube channels that are live and I thought, hey we can make a small website out of this. &lt;/p&gt;

&lt;p&gt;Introducing &lt;a href="https://yt-live.vercel.app/"&gt;YT Live&lt;/a&gt;, it has a list of all the youtube channels mostly news channels, that are live. &lt;/p&gt;

&lt;p&gt;It's made with Nuxt, Firebase, and Nuxt content module.&lt;/p&gt;

&lt;p&gt;The code is &lt;a href="https://github.com/fayazara/YT-Live"&gt;open source&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let me know if this is helpful, or just another small project that will I will be forgetting soon.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>JavaScript Promises 101</title>
      <author>Dalibor Belic</author>
      <pubDate>Sun, 25 Apr 2021 10:44:06 +0000</pubDate>
      <link>https://dev.to/daliboru/javascript-promises-101-3h56</link>
      <guid>https://dev.to/daliboru/javascript-promises-101-3h56</guid>
      <description>&lt;p&gt;Hey there! Are you new to JavaScript? Well, this post is right for you! Mastering promises is a must if you want to become a JavaScript developer!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A Promise represents a value that's unknown now that may become known in the future; in other words an asynchronous value.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N0lGXjyf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/promises.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N0lGXjyf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/promises.png" alt="alt text" title="promise"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A Promise is always in one of these states:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pending: initial state, neither fulfilled nor rejected.&lt;/li&gt;
&lt;li&gt;fulfilled: meaning that the operation was completed successfully.&lt;/li&gt;
&lt;li&gt;rejected: meaning that the operation failed.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Now, let's imagine you're hungry (I am now actually) and you're about to order food using a delivery app. You open the app. You find what you want and click order. At that moment, the restaurant/app makes a &lt;code&gt;Promise&lt;/code&gt; that they will deliver you food. While you're waiting, the delivery is &lt;code&gt;pending&lt;/code&gt;. In the future, if everything goes according to plan the restaurant/app will &lt;code&gt;resolve&lt;/code&gt; to deliver you food at which point your order has been &lt;code&gt;fulfilled&lt;/code&gt;. But in some cases, the restaurant/app might &lt;code&gt;reject&lt;/code&gt; your order in which case you'll have to order something else. Either way, the original request is finally settled.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#more-technical-explanation"&gt;
  &lt;/a&gt;
  More technical explanation
&lt;/h3&gt;

&lt;p&gt;Now, let's explain it in a more technical language. As a developer, you create a Promise to represent an asynchronous value. But, what you'll actually do more often is consuming promises to use the result of an asynchronous operation in your code.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lets-create-a-promise"&gt;
  &lt;/a&gt;
  Let's create a Promise.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;food&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                               &lt;span class="c1"&gt;//☝️*&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;delivered&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;food delivered 🥘&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// resolve fulfills promise with passed value&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;you're still starving... 😭&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// reject triggers when operation fails&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;*👉 executor, f-on that resolves a value or rejects (error)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#now-lets-consume-the-promise"&gt;
  &lt;/a&gt;
  Now let's consume the Promise.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;food&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// food delivered 🥘&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// you're still starving... 😭&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;all settled!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;then&lt;/code&gt; is a function that handles fulfilment. &lt;code&gt;catch&lt;/code&gt; handles rejection; catches the error. And finally, &lt;code&gt;finally&lt;/code&gt; is there if you want to run some code no matter what.&lt;/p&gt;




&lt;p&gt;I hope this helped you get the basic knowledge, an overview of JavaScript Promises :) &lt;/p&gt;

&lt;p&gt;As always, any feedback is greatly appreciated!&lt;/p&gt;

&lt;p&gt;Have a great one,&lt;br&gt;
Dalibor&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>LINQ: Beware of deferred execution</title>
      <author>Sam Walpole</author>
      <pubDate>Sun, 25 Apr 2021 10:30:00 +0000</pubDate>
      <link>https://dev.to/dr_sam_walpole/linq-beware-of-deferred-execution-59db</link>
      <guid>https://dev.to/dr_sam_walpole/linq-beware-of-deferred-execution-59db</guid>
      <description>&lt;p&gt;If you've spent much time around C# and .NET, it's likely that you will have come across &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/"&gt;LINQ (Language-Integrated Query)&lt;/a&gt;, which allows you to use a range of powerful querying capabilities directly in the C# language.&lt;/p&gt;

&lt;p&gt;The example below demonstrate a couple of common features of LINQ (note that I am using the extension method syntax rather than LINQ expressions). In the example, we have a list of people and want to obtain a list of names of the adults in that list. We will then iterate over those names twice (this will be useful to demonstrate the differences between immediate and deferred execution). &lt;/p&gt;

&lt;p&gt;Using LINQ, we can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Filter by age using &lt;code&gt;Where&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Map from a Person object to the name string using &lt;code&gt;Select&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Evaluate the query to a list using &lt;code&gt;ToList&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Age&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;people&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Sam"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Age&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;27&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Suzie"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Age&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Harry"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Age&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;23&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;adultNames&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;people&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Filtering by age..."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Age&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;adultNames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Writeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;adultNames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Writeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/* output
Filtering by age
Filltering by age
Filtering by age
Sam
Harry
Sam
Harry
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that in the above example, we explicitly convert the query to a list. This immediately executes the query to give a new list containing only the adult names, which we can then iterate over.&lt;/p&gt;

&lt;p&gt;So what happens if we leave off the &lt;code&gt;ToList&lt;/code&gt;?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;adultNames&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;people&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Filtering by age..."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Age&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;adultNames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Writeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;adultNames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Writeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/* output
Filtering by age
Sam
Filtering by age
Filtering by age
Harry
Filtering by age
Sam
Filtering by age
Filtering by age
Harry
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the output looks quite different. Instead of doing all the filtering first, then iterating over the adult names, the filtering for each item is now happening immediately before we evaluate that item. Importantly, the filtering is also happening every time we iterate over the items. This is known as deferred execution, since we wait until we actually need the values to evaluate the query.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#benefits-of-deferred-execution"&gt;
  &lt;/a&gt;
  Benefits of Deferred Execution
&lt;/h1&gt;

&lt;p&gt;It looks like deferred execution is the default behaviour of LINQ, unless you explicitly tell it to evaluate immediately (using ToList, ToDictionary etc.). So there must be some benefit to doing this, right?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-better-performance"&gt;
  &lt;/a&gt;
  1. Better Performance
&lt;/h2&gt;

&lt;p&gt;In most cases it is expected that deferred execution will result in better performance, since you don't have to execute the query on the whole data set at once. Instead, you perform the query on one item at a time as you are already iterating over it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-query-construction"&gt;
  &lt;/a&gt;
  2. Query Construction
&lt;/h2&gt;

&lt;p&gt;Since the query does not need to be immediately executed, you can build it up in several steps, perhaps passing through additional conditional logic. This gives you additional power to create more complex queries.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetNames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;people&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;onlyAdults&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;people&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AsEnumerable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onlyAdults&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// only add this filter when onlyAdults is true&lt;/span&gt;
        &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Age&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-always-revaluated"&gt;
  &lt;/a&gt;
  3. Always revaluated
&lt;/h2&gt;

&lt;p&gt;Since the query is always revaluated on every enumeration, you can add/remove/change elements of you collection after the query has been constructed and the query will know about these changes. In this way, you know that you are always iterating over the most up to date data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;people&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Sam"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Age&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;27&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Suzie"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Age&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Harry"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Age&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;23&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;adultNames&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;people&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Age&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;adultNames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;people&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Sally"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Age&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;26&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;adultNames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/* output
Sam
Harry
Sam
Harry
Sally
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://www.amazon.co.uk/LINQ-Pocket-Reference-OReilly/dp/0596519249?dchild=1&amp;amp;keywords=linq&amp;amp;qid=1619346295&amp;amp;sr=8-3&amp;amp;linkCode=li2&amp;amp;tag=samwalpole-21&amp;amp;linkId=1fcd555f841d025e10f9ccc6b650dbc0&amp;amp;language=en_GB&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-eu.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=0596519249&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=GB&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=samwalpole-21&amp;amp;language=en_GB"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bcJ9vvCt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-uk.amazon-adsystem.com/e/ir%3Ft%3Dsamwalpole-21%26language%3Den_GB%26l%3Dli2%26o%3D2%26a%3D0596519249" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bcJ9vvCt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-uk.amazon-adsystem.com/e/ir%3Ft%3Dsamwalpole-21%26language%3Den_GB%26l%3Dli2%26o%3D2%26a%3D0596519249" width="1" height="1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-pitfalls-of-deferred-execution"&gt;
  &lt;/a&gt;
  The pitfalls of deferred execution
&lt;/h1&gt;

&lt;p&gt;Despite so far singing the praises of LINQs deferred execution, this post was inspired by some of the issues I've been experiencing using it. One of it's benefits is also a pitfall if you do not take enough care when writing your code - the query is always revaluated.&lt;/p&gt;

&lt;p&gt;Although deferred execution is seen as a performance benefit generally, there can be cases where it can actually dramatically slow down your application if you're not careful. Any time that you know you will need to repeated iterate over the same collection numerous times (for example a nested for/foreach loop), make sure you call to list first. Otherwise, you will be evaluating the whole collection every single time, which will dramatically reduce performance. This is especially true if the source collection is particularly large since, even if your query does a lot of filtering, the query will be applied every time to the whole source collection.&lt;/p&gt;

&lt;p&gt;The final pitfall to mention is using &lt;code&gt;Select&lt;/code&gt; to run a collection of tasks. I've seen arguments to say that this is something that you shouldn't do at all, but I've seen it enough in codebases to know that it's something that people do do and something you should be aware of. Imagine the below scenario:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;listOfIds&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;15&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;listOfIds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WhenAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;ToList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, the GetAsync method is actually executed twice for every ID, once when it is first declared, and a second time when the query is evaluated using &lt;code&gt;ToList&lt;/code&gt;. Not only does this have a massive impact on performance by performing expensive operations multiple times, but also, since the task is re-executed, its not guaranteed to be completed when you actually come to evaluate it. As you might imagine, it is also particularly dangerous if the task you are running is actually a create or update operation (yes I have seen this too). To do the get safely, you need to immediately evaluate the query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var tasks = listOfIds.Select(id =&amp;gt; _repository.GetAsync(id)).ToList();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this article I have introduced deferred execution in the context of .NETs LINQ. I have shown some of its features and why it can be beneficial compared to immediate execution. Finally, I have discussed some common pitfalls to looks out for when using LINQ and deffered execution.&lt;/p&gt;

&lt;p&gt;I post mostly about full stack .NET and Vue web development. To make sure that you don't miss out on any posts, please follow this blog and &lt;a href="https://samwalpole.com"&gt;subscribe to my newsletter&lt;/a&gt;. If you found this post helpful, please like it and share it. You can also find me on &lt;a href="https://twitter.com/dr_sam_walpole"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>dotnetcore</category>
      <category>csharp</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>The Most Famous Coding Interview Question</title>
      <author>Apoorv Tyagi</author>
      <pubDate>Sun, 25 Apr 2021 10:21:45 +0000</pubDate>
      <link>https://dev.to/apoorvtyagi/the-most-famous-coding-interview-question-4m1j</link>
      <guid>https://dev.to/apoorvtyagi/the-most-famous-coding-interview-question-4m1j</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-the-most-famous-interview-question"&gt;
  &lt;/a&gt;
  What is the most famous interview question?
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;FizzBuzz&lt;/strong&gt; is the most popular coding problem, and perhaps also one of the easiest.&lt;/p&gt;

&lt;p&gt;For those of you who don't know, here's the problem statement :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Write a short program that prints each number from 1 to 100 on a new line. For each multiple of 3, print "Fizz" instead of the number. For each multiple of 5, print "Buzz" instead of the number. For numbers that are multiples of both 3 and 5, print "FizzBuzz" instead of the number&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vb3hi81g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618742745312/l5np6e9FD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vb3hi81g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618742745312/l5np6e9FD.png" alt="1\_Vv4VHvLEvo9NEFxcn80Wfw.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Seems easy right?, BUT &lt;strong&gt;the way you approach this reveals a lot about your programming skills&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For most engineers, like myself, FizzBuzz is among the first coding problem that we solved, but why is it still used as an interview problem even in companies like Google?&lt;/p&gt;

&lt;p&gt;Answer: &lt;strong&gt;Solving FizzBuzz shows interviewers much more than your programming skills&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your solution to this easy problem determines if you are just a code monkey or an experienced engineer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;According to &lt;a href="https://wiki.c2.com/?FizzBuzzTest"&gt;wiki.c2.com&lt;/a&gt;, the “Fizz-Buzz test” is an interview question designed to help filter out the 99.5% of programming job candidates who can’t seem to program their way out of a wet paper bag.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It requires you to understand the problem, apply logic to come up with a solution, and then translate this into code.&lt;/p&gt;

&lt;p&gt;Sometimes, even the simplest problem can become tricky. That is the case for the FizzBuzz interview question.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h1&gt;

&lt;p&gt;The idea of these simple questions is to check your programming style not to check the complexity or anything else.&lt;/p&gt;

&lt;p&gt;Like every other coding problem, the solution for this particular problem are many, but not all are considered as good and optimal solutions.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Also don't think about complexity since you're only looping from 1 to 100&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So what's the best possible answer?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Before moving any further I want you to show the possible solutions I got when I asked this question on &lt;a href="https://twitter.com/apoorv__tyagi/status/1308114075583311872"&gt;Twitter&lt;/a&gt; a few months ago 🔽&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--5R3F_Knf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1355898757078986753/lFZgYe5z_normal.jpg" alt="Riiiiiii✨ profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Riiiiiii✨
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @craazyplatelady
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/apoorv__tyagi"&gt;@apoorv__tyagi&lt;/a&gt; If( n%3==0 and n%5==0):&lt;br&gt;Print (fizzbuzz)&lt;br&gt;Elif(n%3==0):&lt;br&gt;Print(fizz)&lt;br&gt;Elif(n%5==0):&lt;br&gt;Print(buzz)&lt;br&gt;&lt;br&gt;(Idk what solution makes most sense, curious to find out in the comments or from you)
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      05:26 AM - 22 Sep 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1308276403821977600" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1308276403821977600" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1308276403821977600" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--TvbxKSJS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1252590041785790465/CLpaYNTK_normal.jpg" alt="Tanvesh Sarve profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Tanvesh Sarve
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/sarve___tanvesh"&gt;@sarve___tanvesh&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/apoorv__tyagi"&gt;@apoorv__tyagi&lt;/a&gt; If divisible by 3 then print "Fizz", after that if divisible by 5 then print "____Buzz" ( _ means a space here). If the number was divisible by 5 and 3, then both the conditions will be true, and it will print, "FizzBuzz". &lt;br&gt;&lt;br&gt;Typing all of this on phone was a nightmare btw.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      20:25 PM - 21 Sep 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1308140380244684800" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1308140380244684800" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1308140380244684800" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--UKF2Cky6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1271452426705547264/qNletcga_normal.jpg" alt="Abdel Pérez profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Abdel Pérez
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @abdelperez11
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/apoorv__tyagi"&gt;@apoorv__tyagi&lt;/a&gt; JS:&lt;br&gt;return `${n % 3 === 0 ? 'Fizz' : '' }${n % 5 === 0 ? 'Buzz' : ''}`
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      07:32 AM - 22 Sep 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1308308070083239942" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1308308070083239942" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1308308070083239942" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--e6t6DEoq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/857617800390733824/Rn1Oqgv3_normal.jpg" alt="Harekrishna Jena profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Harekrishna Jena
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @dev_hkjena
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/apoorv__tyagi"&gt;@apoorv__tyagi&lt;/a&gt; let print = console.log&lt;br&gt;for(let i=1;i&amp;lt;101;i++){&lt;br&gt;  i%15==0 ? print("FizzBuzz") : i%3==0 ? print("Fizz") : &lt;br&gt;  i%5==0 ? print("Buzz") : print(i)&lt;br&gt;}
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:34 AM - 22 Sep 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1308353973569552384" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1308353973569552384" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1308353973569552384" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;&lt;strong&gt;All solutions I got were giving the expected result. Only difference was the way they were written&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, Here's My approach👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EajeQvP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618744589267/jV4nb3MU1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EajeQvP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618744589267/jV4nb3MU1.png" alt="1\_6oYdTqkTTk-cg3Z_Q02hIg.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The most intuitive solution which comes to mind is this:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for var in range(1,101):
    if i%3==0 and i%5==0:
        print('FizzBuzz')
    elif i%3==0:
        print('Fizz')
    elif i%5==0:
        print('Buzz')
    else:
        print(var)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;But can you find how can this be improved??&lt;/p&gt;

&lt;p&gt;Let's suppose the interviewer says that instead of 5 print buzz when no. is divisible by 7 then you need to go &amp;amp; change all 5s in your code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In a small code like this, it doesn't seem a big challenge but for a large codebase you need to take care of the changes that might come&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;While coding you should always think about what might change later &amp;amp; how will your code adapt to it&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Going back and change multiple lines of code just to fit another condition is not a good practice.&lt;/p&gt;

&lt;p&gt;So what we can do here is tweak our code a little like this :&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for var in range(1,101):
    output=""
    if i%3==0:
        output+='Fizz'
    if i%5==0:
        output+='Buzz'

    print(var if output=="" else output)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;OR even simpler:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for i in range(1,101):
    fizz = 'Fizz' if i%3==0 else ''
    buzz = 'Buzz' if i%5==0 else ''
    print(f'{fizz}{buzz}' or i)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;em&gt;In this, we are storing the final String value in a variable called output.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If the output is empty it means no condition passed above hence just print the value of &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This looks more clean/readable &amp;amp; is way better for us to change if an extra condition comes.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Now even if we have to change the condition from 5 to 7 we just need to go to the single line where 5 is &amp;amp; alter it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Also if another condition comes, For instance, if we add a new condition for 2 (Let's suppose when the number is multiple of 2, we will print 'Tizz' and will print 'TizzFizzBuzz' when the number is divisible by 2,3 and 5). We will just add it without affecting our code's cleanliness &amp;amp; readability  -&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for variable in range(1,101):
    output=""
   if i%2==0:  #Adding new condition
        output+='Tizz'
    if i%3==0:
        output+='Fizz'
    if i%5==0:
        output+='Buzz'

    print(variable if output=="" else output)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;There's always room for improvements and we can further go into improving our code since currently there are so many &lt;code&gt;IF&lt;/code&gt; statements and we can try to replace them with &lt;code&gt;SWITCH&lt;/code&gt; or even use &lt;code&gt;Spread Operator&lt;/code&gt; or &lt;code&gt;Map Method&lt;/code&gt;(In Javascript etc.) to replace the loop altogether but that we will keep for some other day.&lt;/p&gt;

&lt;p&gt;For now, our aim is to know that If such questions are asked in the interview just &lt;strong&gt;don't focus on solving for the correct answer&lt;/strong&gt;, instead &lt;strong&gt;we should also try to think in terms of maintainability, testability, and safety of our code&lt;/strong&gt;. Make sure you follow the basic programming principles like &lt;code&gt;KISS&lt;/code&gt;, &lt;code&gt;DRY&lt;/code&gt;, and &lt;code&gt;YAGNI&lt;/code&gt; and apply them wherever possible.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Fizzbuzz isn’t a silver bullet question that determines whether the candidate is a perfect fit or not. As a side note: &lt;strong&gt;I have always had a mixed feeling about some coding interviews questions for filtering out candidates and how effective they really are&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But as we saw, We can learn a lot about a programmer while they're approaching that simple problem:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Does the candidate care about &lt;strong&gt;clean code&lt;/strong&gt;?&lt;/li&gt;
&lt;li&gt;  Does the candidate thinking about &lt;strong&gt;Maintainability&lt;/strong&gt; of the code?&lt;/li&gt;
&lt;li&gt;  Does the candidate approaches the solution keeping &lt;strong&gt;Scalability&lt;/strong&gt; factor in mind?&lt;/li&gt;
&lt;li&gt;  Does the candidate care about &lt;strong&gt;Modularity&lt;/strong&gt;?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In case you have any questions or doubts, Let me know in the comments below. I'd be happy to answer your queries!&lt;/p&gt;

&lt;p&gt;Thank you for reading :)&lt;/p&gt;




&lt;p&gt;&lt;em&gt;"If you enjoyed what you read &amp;amp; want to show some support&lt;/em&gt; 💙, &lt;em&gt;you can do so by&lt;/em&gt; &lt;strong&gt;buying me a coffee☕&lt;/strong&gt;"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/apoorvtyagi"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7PD28--a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-violet.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>career</category>
    </item>
  </channel>
</rss>
