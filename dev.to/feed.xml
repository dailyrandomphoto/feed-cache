<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>List of Visual Tools to help with Data Structures and Algorithms</title>
      <author>Pranav Birajdar</author>
      <pubDate>Thu, 15 Apr 2021 03:50:06 +0000</pubDate>
      <link>https://dev.to/prnvbirajdar/list-of-visual-tools-to-help-with-data-structures-and-algorithms-4nb2</link>
      <guid>https://dev.to/prnvbirajdar/list-of-visual-tools-to-help-with-data-structures-and-algorithms-4nb2</guid>
      <description>&lt;p&gt;As a self-taught dev, it is a little intimidating and overwhelming to learn Data Structures and Algorithms (DSA) with no prior computer science experience. However, after going through &lt;a href="https://www.udemy.com/course/data-structures-algorithms-javascript/"&gt;this&lt;/a&gt; course, I realized that DSA basics are not that difficult to understand if explained visually.&lt;/p&gt;

&lt;p&gt;I went down the internet rabbit hole and found a few completely free DSA resources that try and explain these concepts visually.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-dsa-roadmap"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://coggle.it/diagram/W5E5tqYlrXvFJPsq/t/master-the-interview-click-here-for-course-link/c25f98c73a03f5b1107cd0e2f4bce29c9d78e31655e55cb0b785d56f0036c9d1"&gt;DSA roadmap&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yB9Av29R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0k7g5u6analbc5lvbsvw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yB9Av29R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0k7g5u6analbc5lvbsvw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a great roadmap that displays important data structures and algorithms. Each data structure/algorithm node gives you a good path of what to study next. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-algorithms-visualizations"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html"&gt;Algorithms Visualizations&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jL6Lh6wT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26l3hzqjo007l5roax53.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jL6Lh6wT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26l3hzqjo007l5roax53.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The wonderful folks at the University of San Francisco have developed these interactive animations for a variety of data structures and algorithms. This visualization tool is written in javascript using the HTML5 canvas element and runs in just about any modern browser.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-sorting-algorithms"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.toptal.com/developers/sorting-algorithms"&gt;Sorting Algorithms&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NLNbOU9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jt4fk5oyl2qmyt2ctt1q.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NLNbOU9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jt4fk5oyl2qmyt2ctt1q.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of my favorite sorting algorithms visualizations, these animations illustrate how effectively data sets from different starting points can be sorted using different algorithms. These animations show 8 different sorting algorithms on 4 different initial conditions. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-visualgo"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://visualgo.net/en"&gt;VISUALGO&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k0yYwMdE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa6ug8lrxumgr3s291ho.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k0yYwMdE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa6ug8lrxumgr3s291ho.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Developed at NUS, VisuAlgo contains animations of 23 algorithms‚Äîfrom basic ones like sorting, to rarer ones like graph traversal. There's also a section for quizzes to test yourself!&lt;/p&gt;

&lt;p&gt;DSA interview prep can be daunting but hopefully, these amazing tools can help you with understanding the basics. &lt;/p&gt;

&lt;p&gt;Hope this was helpful. Here's another interview prep-related &lt;a href="https://dev.to/prnvbirajdar/5-javasript-github-repositories-for-interview-prep-306h"&gt;article&lt;/a&gt; for all you JS developers. Happy coding! üë©‚ÄçüíªüöÄüë®‚Äçüíª&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>#Day25 - A cheatsheet to get Fake/Mock Data in Python using Faker</title>
      <author>Rahul Banerjee</author>
      <pubDate>Thu, 15 Apr 2021 03:44:57 +0000</pubDate>
      <link>https://dev.to/rahulbanerjee99/day25-a-cheatsheet-to-get-fake-mock-data-in-python-using-faker-56ad</link>
      <guid>https://dev.to/rahulbanerjee99/day25-a-cheatsheet-to-get-fake-mock-data-in-python-using-faker-56ad</guid>
      <description>&lt;h4&gt;
  &lt;a href="#you-can-use-python-to-come-up-with-your-companys-name-and-slogan"&gt;
  &lt;/a&gt;
  You can use Python to come up with your company's name and slogan
&lt;/h4&gt;

&lt;p&gt;We will be using the library &lt;a href="https://faker.readthedocs.io/en/master/"&gt;Faker&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-the-library"&gt;
  &lt;/a&gt;
  Install the library
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install faker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's import the library and create an instance of "Faker"&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;
&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#seeding"&gt;
  &lt;/a&gt;
  Seeding
&lt;/h3&gt;

&lt;p&gt;Seeding ensures that the same set of random data is returned during every run. This is very useful when you want to compare functions or models in the same environment without changes in the dataset.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;
&lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#names"&gt;
  &lt;/a&gt;
  Names
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
Wesley Turner
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
Alexandra
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
Aguilar
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name_male&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
Charles Hanna
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name_female&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
Shannon Walker

'''&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name_nonbinary&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
Christopher Brennan
'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#address-and-phone-numbers"&gt;
  &lt;/a&gt;
  Address and Phone Numbers
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;
&lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
987 Anderson Union
Dawnville, ID 20051
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phone_number&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
904-636-1403x832
'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But these all seem like American Names, Addresses, and Phone numbers. Let's get data for some other region.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#locale-data-based-on-region"&gt;
  &lt;/a&gt;
  Locale Data based on Region
&lt;/h3&gt;

&lt;p&gt;We can set the region or localize the data by passing a string during instantiation. Not all locales support all the functions in Faker. You can find all the locales &lt;a href="https://faker.readthedocs.io/en/master/locales.html"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;
&lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;## Seting locale to India and language to hindi
&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'hi_IN'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
‡§ó‡§æ‡§µ‡§ø‡§§, ‡§π‡•Å‡§∏‡•à‡§®
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
13/24 ‡§≤‡§≤‡§ø‡§§ ‡§ï‡•É‡§∑‡•ç‡§£‡§æ
‡§Æ‡•ã‡§§‡§ø‡§π‡§æ‡§∞‡•Ä-140383
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phone_number&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
+91 521 8975277
'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We set the locale to India and the language to Hindi. Let's try setting the locale to France and language to french.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;
&lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'fr_FR'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
Roland Baudry
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
25, rue de Gerard
90463 Sanchez-la-For√™t
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phone_number&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
+33 (0)1 38 32 52 18
'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also pass in multiple locales as a list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;
&lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'hi_IN'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'en_US'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'fr_FR'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phone_number&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"-----------------"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s"&gt;'''
+33 (0)5 99 87 72 51
-----------------
+1-324-904-6361x4038
-----------------
+91 252 1897527
----------------------
00031364850
----------------------
001-271-698-2331x03084
----------------------
'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#fake-company-names-and-catch-phrase"&gt;
  &lt;/a&gt;
  Fake Company Names and Catch Phrase
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;
&lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;company&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; : &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;catch_phrase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"-x-x-"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;'''
Miller, Brennan and Berry : Pre-emptive mission-critical capacity
-x-x-
Flores, Norton and Bruce : Cross-platform secondary core
-x-x-
Baker PLC : Business-focused tangible time-frame
-x-x-
Sanders-Bowers : Focused responsive initiative
-x-x-
Nelson and Sons : Stand-alone motivating database
-x-x-
'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I believe all this actually fetched from some database, so this isn't like GPT-3 which actually generates a name.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#faking-profiles"&gt;
  &lt;/a&gt;
  Faking Profiles
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;
&lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'en_IN'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;


&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="s"&gt;'''
{'job': 'Cartographer', 'company': 'Mangat, Loke and Korpal', 
'ssn': '251-32-4904', 
'residence': '61/403, Chawla Circle, Bathinda-189752', 
'current_location': (Decimal('87.4766035'), 
Decimal('170.848372')), 'blood_group': 'O-', 
'website': ['http://www.bhalla.com/', 'https://gokhale.com/'], 
'username': 'vrajagopal', 'name': 'Ivan Das', 'sex': 'F', 
'address': 'H.No. 681, Mander Marg, Howrah-684709', 
'mail': 'dbajaj@yahoo.com', 'birthdate': datetime.date(2019, 10, 8)}
'''&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#faking-emails"&gt;
  &lt;/a&gt;
  Faking Emails
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;
&lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'en_IN'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;


&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
ikhurana@dutt.com
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;safe_email&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;'''
jayantdeo@example.net
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;free_email&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;'''
sarnazoya@yahoo.com
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;company_email&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;'''
ywable@thaman.biz
'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#generating-fake-python-data-types"&gt;
  &lt;/a&gt;
  Generating Fake Python Data Types
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;
&lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'en_IN'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pytuple&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''('https://vyas.com/posts/list/main/author.htm',
 'nDKnTZlGdbkYAjJiUCWy', 2125, 'vamble@gmail.com', 
'ZLIvUSsViQwFPkfdaGhy', 7650, 'ZbBODSZctqOcGVcxOWIn')
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pylist&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
['DqwQiBApBNXchzoOOsDB', 'uxrFsPxsaLVPzMouLrct', -3001403.6558895,
 'vohrazaina@rama.biz', -783180386.336077, 
'ODrlFCjaPMlWoEGrIvcY', 'badalwali@yahoo.com']'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pydict&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
{'hic': 'kSKSsguiUhAHdBwXsvPU', 'non': 'NnApyVhwOfvBBidAOfCa',
 'sit': 'gatik94@yahoo.com', 'cumque': 86753382.7739197, 
'aut': 93.434062857687, 'voluptatem': 321.537771434202, 
'dignissimos': 'xememaWRlowIFAtOAEMo', 'sint': 5095, 
'vero': 1680, 'molestiae': Decimal('-934.685870829972'), 
'reiciendis': 9133, 'quo': 'tRBgKmfGLRRdMFpEyPAq',
 'fuga': 'shayakdugar@gmail.com'}
'''&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pyiterable&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
[datetime.datetime(1990, 2, 3, 3, 11, 17), 1446, 
611903747.767127, 'http://www.sami.net/',
 'iJIxPgnNWUsZztHjzhuc', 'JZufaRqcvQJujWAgbosd', 
Decimal('74468.5598767266'), 'zachariahvanya@chahal.com']
'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>100daysofcode</category>
      <category>python</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>I got a 50$ gift from dev.to, and here it is üòç</title>
      <author>Aahnik Daw</author>
      <pubDate>Thu, 15 Apr 2021 03:15:21 +0000</pubDate>
      <link>https://dev.to/aahnik/i-got-a-50-gift-from-dev-to-and-here-it-is-ggh</link>
      <guid>https://dev.to/aahnik/i-got-a-50-gift-from-dev-to-and-here-it-is-ggh</guid>
      <description>&lt;p&gt;I did not imagine that a simple article like sending an email would perform so well. Similar tutorials are in n no. of places on the internet. But still, people loved my article.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/aahnik" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--28COnZ56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--xJdF-Ep6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/453833/0d554f6d-073a-47e0-b356-bbdf3de4f171.jpeg" alt="aahnik image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aahnik/how-to-send-emails-with-python-simply-explained-for-beginners-hea" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to send emails with Python? Simply explained for beginners&lt;/h2&gt;
      &lt;h3&gt;Aahnik Daw „Éª Apr  7 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#email&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;This article üëÜ reached the &lt;a href="https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-4njl"&gt;top seven&lt;/a&gt; for the week, and dev.to sent me this email.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--akv92Mv_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o1m5hsezqsrazegr1ixw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--akv92Mv_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o1m5hsezqsrazegr1ixw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am excited to have this badge,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CXqjawZi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bumr3u2l56q9zwadsbfx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CXqjawZi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bumr3u2l56q9zwadsbfx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I thought, let me give the code back to the community. So here it is &lt;/p&gt;

&lt;p&gt;&lt;code&gt;dev-top7-acmewh&lt;/code&gt; , &lt;/p&gt;

&lt;p&gt;the first person to redeem it, gets 50$ worth of stuff from the &lt;a href="https://shop.dev.to"&gt;shop.dev.to&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have redeemed the code, please comment below, with what you bought. I would love to know. &lt;/p&gt;

&lt;p&gt;Thank you for the love.&lt;/p&gt;

&lt;p&gt;I am &lt;a href="https://github.com/aahnik"&gt;@aahnik&lt;/a&gt; on GitHub. If you are feeling bored, do check out my projects, and hit a few stars.&lt;/p&gt;

&lt;p&gt;Thank you again.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>discuss</category>
      <category>news</category>
    </item>
    <item>
      <title>How To Finally Figuring-out the Font Size for Titles</title>
      <author>Tom Quinonero</author>
      <pubDate>Thu, 15 Apr 2021 01:43:22 +0000</pubDate>
      <link>https://dev.to/tomquinonero/how-to-finally-figuring-out-the-font-size-for-titles-3kc0</link>
      <guid>https://dev.to/tomquinonero/how-to-finally-figuring-out-the-font-size-for-titles-3kc0</guid>
      <description>&lt;p&gt;Using heading sizes based on the body maintains a &lt;strong&gt;visually appealing flow&lt;/strong&gt; on your website. &lt;em&gt;Instead of handpicking&lt;/em&gt; font sizes, we can take a &lt;em&gt;base size&lt;/em&gt; and multiplicate it by a number - the &lt;em&gt;size ratio&lt;/em&gt; - to obtain a bigger size, &lt;em&gt;and so on&lt;/em&gt;. Every font size will scale when the main font size changes.&lt;/p&gt;

&lt;p&gt;We now got harmonious sizes that look nice together ü§ó&lt;/p&gt;

&lt;p&gt;If you need to grab the code fast, I've made a &lt;a href="https://codepen.io/tomquinonero/pen/XWpexee"&gt;codepen&lt;/a&gt; to demonstrate the use of ratio-based font sizes.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;size ratio&lt;/strong&gt; should be a number between &lt;code&gt;1.1&lt;/code&gt; and &lt;code&gt;1.7&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;Play with different ratio on &lt;a href="https://type-scale.com/"&gt;type-scale.com&lt;/a&gt; to preview how different values look.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's set up your base font size and then use &lt;code&gt;calc&lt;/code&gt; to compute the headings &lt;code&gt;font-size&lt;/code&gt; attributes.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B4Lkg3k2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qejrufthag832o6xeu37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B4Lkg3k2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qejrufthag832o6xeu37.png" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ratio based font sizes. Screenshot from &lt;a href="https://type-scale.com/"&gt;Type Scale&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-base-font-size-and-the-10px-trick"&gt;
  &lt;/a&gt;
  The base font size and the 10px trick
&lt;/h2&gt;

&lt;p&gt;The font size on your root element (usually the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;element) will define what &lt;code&gt;1rem&lt;/code&gt; is. Let's use &lt;code&gt;10px&lt;/code&gt; as a &lt;code&gt;font-size&lt;/code&gt; for the root element. Then it becomes easy to convert &lt;code&gt;px&lt;/code&gt; in &lt;code&gt;rem&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A body size should at least be &lt;code&gt;16px&lt;/code&gt; so let's declare that on &lt;code&gt;body&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.6rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* 16px */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;About responsiveness,&lt;/strong&gt; If you need to bump the size of the font for larger screen, you can just change &lt;code&gt;--size-500&lt;/code&gt; and the other will follow. Smarter could be to change the &lt;code&gt;html&lt;/code&gt; font-size, so every margin and icon size using &lt;code&gt;rem&lt;/code&gt; defined size will scale too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-calc-to-compute-bigger-and-smaller-sizes"&gt;
  &lt;/a&gt;
  Using calc() to compute bigger and smaller sizes
&lt;/h2&gt;

&lt;p&gt;Instead of setting headings font-size, variables are assigned, so they can be used for other purposes. Using those variables for your &lt;code&gt;font-size&lt;/code&gt;, will enforce consistent font sizing.&lt;/p&gt;

&lt;p&gt;These variables goes from &lt;code&gt;--size-300&lt;/code&gt; to &lt;code&gt;--size-900&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--size-400&lt;/code&gt; is the base and the other are computed using the &lt;code&gt;--font-ratio&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;The ratio can be changed to give a different amplitude to your design, but we'll default to &lt;code&gt;1.33&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;size ratio&lt;/strong&gt; can be changed by only overwriting the &lt;code&gt;--font-ratio&lt;/code&gt; variable. You can do that in your browser too, using the dev tools ü§Ø&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--font-ratio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.33&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--size-300&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--size-400&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--font-ratio&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="py"&gt;--size-400&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.6rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* 16px */&lt;/span&gt;
  &lt;span class="py"&gt;--size-500&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--size-400&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--font-ratio&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="py"&gt;--size-600&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--size-500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--font-ratio&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="py"&gt;--size-700&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--size-600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--font-ratio&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="py"&gt;--size-800&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--size-700&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--font-ratio&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="py"&gt;--size-900&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--size-800&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--font-ratio&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Now we have useful CSS variables that we can use to stylize our titles. but you can also use them for any &lt;em&gt;custom CSS&lt;/em&gt; you'll do in the future.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These sizes values can be used for headings size, but also for any other element.&lt;/p&gt;

&lt;p&gt;A use case would be making larger version of a button. For example, the size will be &lt;code&gt;--size-500&lt;/code&gt; instead of &lt;code&gt;--size-400&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stylize-headings-using-the-ratiobased-sizes"&gt;
  &lt;/a&gt;
  Stylize headings using the ratio-based sizes
&lt;/h2&gt;

&lt;p&gt;Let's define a body size to &lt;code&gt;--size-400&lt;/code&gt; , the label size to &lt;code&gt;--size-300&lt;/code&gt; and the titles to some bigger sizes. It depends on how &lt;em&gt;deep&lt;/em&gt; you need to go with your hierarchy. I usually am fine with &lt;code&gt;h1&lt;/code&gt; to &lt;code&gt;h3&lt;/code&gt; only but this might not be your case:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--size-400&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--size-300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--size-700&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--size-600&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;h3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--size-500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you followed along, you now are ready to set up your own ratio base font size system. Yay!&lt;/p&gt;

&lt;p&gt;Setting how much &lt;code&gt;1rem&lt;/code&gt; is and setting the body font size should be your first step. You can now compute a set of sizes, using a ratio. Finally, use these and &lt;em&gt;only&lt;/em&gt; these in your CSS!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You are now all set!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Congrats ü•≥üéâ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;I write about design systems and CSS, &lt;a href="https://twitter.com/tomquinonero"&gt;follow me on twitter&lt;/a&gt; for more tips and resources ü§ô&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>design</category>
    </item>
    <item>
      <title>Increase Signups By 50% ( Proven Working )</title>
      <author>Frontendor Team</author>
      <pubDate>Thu, 15 Apr 2021 01:39:00 +0000</pubDate>
      <link>https://dev.to/frontendor/increase-signups-by-50-2ifi</link>
      <guid>https://dev.to/frontendor/increase-signups-by-50-2ifi</guid>
      <description>&lt;p&gt;A popup like this has helped Josh ( &lt;a href="https://twitter.com/JoshWComeau"&gt;https://twitter.com/JoshWComeau&lt;/a&gt; ) to increase his email subscribers, so he jumped &lt;strong&gt;from 1,000 to 28,000 subscribers&lt;/strong&gt; in 1 year only. üòª&lt;/p&gt;

&lt;p&gt;This popup is new and people are not used to seeing it! that's why it grabs and forces your visitors to pay attention to your offer.&lt;/p&gt;

&lt;p&gt;üëâ &lt;strong&gt;HOW IT WORKS&lt;/strong&gt; üëà&lt;/p&gt;

&lt;p&gt;While your visitor is scrolling down, your picture or illustration will show up suddenly so it grabs the attention immediately, and after 1 second it says:&lt;/p&gt;

&lt;p&gt;" Hi, there! Can I share a cool thing I‚Äôm working on with you? ".&lt;/p&gt;

&lt;p&gt;This question makes your visitor curious and will lead him to click on Yess.&lt;br&gt;
You can use the Yess as a redirect to another page, on the same page, or to open your email form.&lt;/p&gt;

&lt;p&gt;üëâ &lt;strong&gt;FEATURES&lt;/strong&gt; üëà&lt;/p&gt;

&lt;p&gt;‚úÖ It's FREE.&lt;br&gt;
‚úÖ &lt;strong&gt;Simple Tool For Quick Customization.&lt;/strong&gt;&lt;br&gt;
‚úÖ Lightweight (Won't Make Your Website Slow).&lt;br&gt;
‚úÖ Developers-friendly (Clean Code).&lt;br&gt;
‚úÖ Suitable For Non-tech People (#NoCode).&lt;br&gt;
‚úÖ Use illustrations To Attract More Users Attention.&lt;/p&gt;

&lt;p&gt;üëâ Get it now for Free: &lt;a href="https://frontendor.com/magic-popup/"&gt;https://frontendor.com/magic-popup/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Building a chat with Firebase</title>
      <author>Ninjobu</author>
      <pubDate>Thu, 15 Apr 2021 01:25:26 +0000</pubDate>
      <link>https://dev.to/ninjobu/building-a-chat-with-firebase-2jlo</link>
      <guid>https://dev.to/ninjobu/building-a-chat-with-firebase-2jlo</guid>
      <description>&lt;h1&gt;
  &lt;a href="#how-can-users-chat-in-my-web-app"&gt;
  &lt;/a&gt;
  How can users chat in my web app?
&lt;/h1&gt;

&lt;p&gt;I recently launched  &lt;a href="https://ninjobu.com"&gt;Ninjobu&lt;/a&gt;, an anonymous job search platform for software engineers. The premise is, as a programmer, you create a profile with your previous experience, programming languages used, domain knowledge, etc., as well as what role you are looking for, preferred location (or remote), and desired salary. Next, you sit back and wait while recruiters search the list of profiles to find matching candidates for their open roles. Once a recruiter has found a potentially suitable candidate, they make contact and start the hiring process, which brings us to the chat system.&lt;/p&gt;

&lt;p&gt;Ninjobu only needs a way for recruiters to initiate a 1-on-1 chat with candidates. There's no need for groups, file sharing, emojis, gifs, or similar features. Although you can send emojis just fine, there's no UI for selecting them, and it's more of a happy accident due to how Firestore supports Unicode rather than something I specifically implemented. The lack of these additional features simplifies the chat system's requirements somewhat, but we code what we need to code and nothing else, right?&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#data-design"&gt;
  &lt;/a&gt;
  Data design
&lt;/h1&gt;

&lt;p&gt;I went with a design loosely inspired by the  &lt;a href="https://firebase.google.com/docs/firestore/billing-example"&gt;Firebase pricing example&lt;/a&gt;. The primary data consists of a collection of chats, where each chat has a subcollection of messages.&lt;/p&gt;

&lt;p&gt;There are two members in every chat because Ninjobu only needs 1-on-1 communication. It's trivial to extend this to groups with additional members. Still, since I don't anticipate the need for multi-member discussions in this project, parts of the code occasionally assume only two chat members exist.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MG_KGl-F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618157735551/z4C4EJtnh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MG_KGl-F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618157735551/z4C4EJtnh.png" alt="chat_json.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;members&lt;/code&gt; array then contains two entries: a unique user id for each chat participant. With these UIDs, we can find the chats for a specific user and block everyone else from accessing the data. Ninjobu uses Firebase Auth to authenticate users, and I use the UID from the Auth module to identify each user in the chat data.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;names&lt;/code&gt; array holds the name of the chat members, and the &lt;code&gt;desc&lt;/code&gt; array holds a secondary string for each user. For the recruiter, this is the company name, and for the candidate, it's their preferred job title. Storing these strings in the chat document allows us to give each chat a bit of context in the user's inbox without querying any additional data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b0MlOq02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618157822077/giD3pfNYU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b0MlOq02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618157822077/giD3pfNYU.png" alt="inbox_window.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ninjobu aims to keep its candidate users anonymous. Candidates aren't even asked for their names when they sign up. When communicating with a candidate, their name shows up as &lt;em&gt;candidate#xyz&lt;/em&gt; while the recruiter's name and company are visible as expected.&lt;/p&gt;

&lt;p&gt;Lastly, we have a string with the last message sent to this chat and the timestamp when this happened. With this data in the document, we can query a list of chats and display them similar to how an email application might show the user a list of emails. When a user selects a chat, we pull the subcollection of messages as needed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2wyjWJB6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618157871913/fl68gnNn4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2wyjWJB6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618157871913/fl68gnNn4.png" alt="message_window.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The message data is straightforward. Each document stores the author UID, the timestamp for the message, and the string itself. The UID is used to check the author's index in the parent chat's &lt;code&gt;members&lt;/code&gt; array, and that index maps to the author name and secondary string in the &lt;code&gt;names&lt;/code&gt; and &lt;code&gt;desc&lt;/code&gt; arrays, respectively. You could store the member's index instead of the UID here, but using the UID simplified some of the front-end code in my case.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TcRs3bh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618157939889/8vgIwmLhm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TcRs3bh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618157939889/8vgIwmLhm.png" alt="message_json.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firebase calculates the cost based on the number of documents read, deleted, and updated, in addition to network bandwidth usage and storage. With this setup, we duplicate some data, such as the last message sent, but it allows us to request fewer documents overall. The flipside to this is that when we post a new chat message, we need to create a new document in the message subcollection and update the parent chat document with the last message string and timestamp. I still think this is acceptable. Presumably, there will be much more document reads from users logging in and viewing their inbox than document writes from users sending new messages.&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#keeping-data-private"&gt;
  &lt;/a&gt;
  Keeping data private
&lt;/h1&gt;

&lt;p&gt;Firestore data is encrypted when saved to the hard drives, and Ninjobu redirects any unencrypted requests to go over HTTPS, which means our data should stay safe in transit and at rest. But we still need to make sure chats are only visible to their participants. We do this with Firebase's excellent security rule system.&lt;/p&gt;

&lt;p&gt;Firestore integrates with Firebase Auth to make our life easy. Since the chat documents have a &lt;code&gt;members&lt;/code&gt; array with each chat participant's UID, we can write a security rule that gives access only to chat participants.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JIOd3gsF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618183526113/-MJgfbPo2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JIOd3gsF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618183526113/-MJgfbPo2.png" alt="rule0.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For unauthenticated requests, accessing the &lt;code&gt;request.auth.uid&lt;/code&gt; variable will be invalid, and the rule will fail. Otherwise, we allow access to chat documents containing the requester's UID in the &lt;code&gt;members&lt;/code&gt; array.&lt;/p&gt;

&lt;p&gt;Unfortunately, there's a tiny glitch with this setup. When we first create a document, the resource doesn't exist, and we have no members array to check, so the rule fails. We need to treat the creation of the document as a special case, which we can do.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hvuVFt1M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618183534701/HVQ9BrHI3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hvuVFt1M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618183534701/HVQ9BrHI3.png" alt="rule1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With the updated rule, we allow reads and updates to a chat document when the requester's UID exists in the &lt;code&gt;members&lt;/code&gt; array already recorded in the database. However, when the document gets created, we expect the request to contain a two-entry array with the requester's UID present.&lt;/p&gt;

&lt;p&gt;For nested documents, we need independent rules because each rule applies only to the specified path. The chat rule will have no effect on the subcollection for messages. However, we can still use the &lt;code&gt;members&lt;/code&gt; array in the parent chat document when securing message documents.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QzCgVqTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618183963207/bjCUL7fOq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QzCgVqTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618183963207/bjCUL7fOq.png" alt="rule2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;get()&lt;/code&gt; function allows us to read any document in the database. In the above rule, we access the parent chat and verify that the user is a participant‚Ää-‚Ääkeeping in mind that document access in a security rule counts towards billing as a regular document read made manually.&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#realtime-chat"&gt;
  &lt;/a&gt;
  Real-time chat
&lt;/h1&gt;

&lt;p&gt;You can fetch data from the database at any time you like, but since we're trying to build a chat system, we want to see updates happen as soon as possible. If you hang out on your Inbox page, and someone sends you a message, you want to see it right away without having to do a page reload.&lt;/p&gt;

&lt;p&gt;Firestore provides a way to register a listener on a particular query and then calls it with snapshots every time the data affected by that query is modified. It's incredibly convenient as data updates happen in real-time without any additional work to synchronize state between users. This way, the chat behaves more like a chat and less like a laggy email.&lt;/p&gt;

&lt;p&gt;There's one caveat I'd like to mention so that you don't have to spend the time debugging as I did if you were to use a similar implementation as mine. If you build your UI around snapshot listeners, one drawback tends to be the high latency caused by the roundtrip to the database server. When you send a message, it gets sent to the server, the database gets updated, and only then does the snapshot callback trigger with the update. This update time is adequate for a chat experience, but it will be way too sluggish as far as UI responsiveness goes. Luckily, the folks at Firebase provide an excellent latency compensation solution.&lt;/p&gt;

&lt;p&gt;With Firestore, a database change will first be applied locally, then sent to the server. The snapshot listener will trigger before the server has recorded the change, allowing the UI to update quickly. You can check for this in your callback, if you'd like, by looking at the snapshot metadata for the  &lt;a href="https://firebase.google.com/docs/firestore/query-data/listen"&gt;hasPendingWrites&lt;/a&gt; flag. The critical thing to realize is that the local change doesn't communicate with the server and has no way of running the security rules. This isn't a problem if you design the code well, but I didn't, so I had a problem.&lt;/p&gt;

&lt;p&gt;When a recruiter on Ninjobu first sent a message to a candidate, it would create a new chat document and a subcollection with that first message. Then, in a snapshot listener for chat documents, it detected the new chat and immediately read its subcollection of messages to display on the page. If you remember our security rules earlier, we first look at the parent chat document and verify that the user is a member of that chat. In this case, the rule would fail because we queried the collection of messages for a chat document that had only been created locally and wasn't yet recorded in the database server. The solution was simple: display the message locally immediately, but don't query the subcollection from the database until the chat document write finished successfully.&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#but-wait-theres-more"&gt;
  &lt;/a&gt;
  But wait, there's more
&lt;/h1&gt;

&lt;p&gt;I wanted to add a visual cue for when the user has new messages. I decided to go with a tiny blip next to the Inbox header to indicate unread messages and mark each chat the user hasn't yet read. For this to work, I needed to add some additional data to the chat document.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DpNJMHNt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618158286043/_4u8q8cYU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DpNJMHNt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618158286043/_4u8q8cYU.png" alt="blip_window.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I added a new two-entry array, &lt;code&gt;lastSeenTime&lt;/code&gt;, with a timestamp for each chat participant that indicates when they last read the chat. To detect a new message now is simple: we compare the last message timestamp with the new last seen timestamp for a member. When a user opens a chat and retrieves all messages, or a new message is received while the chat is open, we update the last seen timestamp. We can also use these fields to show when the recipient has seen a message, but I'm not too fond of that aspect of chat software, so I didn't add it to Ninjobu.&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  In conclusion
&lt;/h1&gt;

&lt;p&gt;Firebase makes it incredibly easy to build a chat component for your web app. The design in this post may not be the best way to implement such a system, and perhaps it's not even very efficient. Nevertheless, it has worked well for Ninjobu, and I believe it will scale well enough for this platform's needs. If I'm wrong, there will probably be another post with the improvements made.&lt;/p&gt;

&lt;p&gt;There is one thing missing from this chat system that I'd like to build next. When a user receives a message, they have to log in to find out about it. Ideally, we send an email notification to let them know there's a new message waiting for them. Once I build this, perhaps that will be the subject of the next blog post.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>firebase</category>
    </item>
    <item>
      <title>Getting Started with Azure Essentials</title>
      <author>Sewvandi Promodya Wickramasinghe</author>
      <pubDate>Thu, 15 Apr 2021 01:12:46 +0000</pubDate>
      <link>https://dev.to/sewvandiii/azure-essentials-47f1</link>
      <guid>https://dev.to/sewvandiii/azure-essentials-47f1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pBpYg1lW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlwin5nqw51p80g2f6bj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pBpYg1lW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlwin5nqw51p80g2f6bj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the first in a series of blogs about Azure that will help those who want to learn more about the platform, prepare for the Azure Fundamentals exam, or improve their skills as a developer, consultant, or architect.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-azure"&gt;
  &lt;/a&gt;
  What is Azure?
&lt;/h2&gt;

&lt;p&gt;Microsoft Azure is a cloud infrastructure service developed by Microsoft for developing, testing, deploying, and maintaining software and services via Microsoft-managed data centers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-i-get-to-azure"&gt;
  &lt;/a&gt;
  How can I get to Azure?
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://azure.microsoft.com/en-us/features/azure-portal/"&gt;Azure portal&lt;/a&gt; is a tool for gaining access to and getting started with Microsoft Azure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-azure-services-mean"&gt;
  &lt;/a&gt;
  What does Azure Services mean?
&lt;/h2&gt;

&lt;p&gt;Azure offers a logical grouping of resources, frameworks, and applications known as a service or group.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compute - to create a virtual machine - windows, Linux, or third party.&lt;/li&gt;
&lt;li&gt;Storage Service - to store data, files, blob, etc&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-factors-do-you-need-to-think-about-when-building-azure-services"&gt;
  &lt;/a&gt;
  What factors do you need to think about when building Azure services?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-closest-to-user"&gt;
  &lt;/a&gt;
  1. Closest to user
&lt;/h3&gt;

&lt;p&gt;Before you create any Azure resource, make sure you choose an Azure region that is close to your user base. &lt;a href="https://azure.microsoft.com/en-us/glo0bal-infrastructure/geographies/#geographies"&gt;Azure region reference&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-cost-amp-pricing"&gt;
  &lt;/a&gt;
  2. Cost &amp;amp; Pricing
&lt;/h3&gt;

&lt;p&gt;Consider Azure service pricing, which varies depending on location, volume, and other factors. Until developing Azure services, use the Azure pricing calculator to figure out how much they would cost. &lt;a href="https://azure.microsoft.com/en-in/pricing/calculator/"&gt;Azure Pricing&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-service-availability"&gt;
  &lt;/a&gt;
  3. Service Availability
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Internal&lt;/strong&gt; - Service is available for internal Microsoft users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Preview&lt;/strong&gt; - Users will use an Azure Subscription to access these services, which are currently in a public beta.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;General Availability (GA)&lt;/strong&gt; - Means "production service," and it can now be used by anyone.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#04-compliance"&gt;
  &lt;/a&gt;
  04. Compliance
&lt;/h3&gt;

&lt;p&gt;Microsoft Azure gives you the freedom to choose compliant data centers based on sector, location, and other factors. For example, if you have a client in the healthcare industry in the United States, you can choose a HIPAA-compliant data center, or if your client is in Europe, you can choose GDPR-compliant data centers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-various-ways-to-access-azure"&gt;
  &lt;/a&gt;
  What are the various ways to Access Azure?
&lt;/h2&gt;

&lt;p&gt;You may use azure in the following ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Azure Portal&lt;/li&gt;
&lt;li&gt;Azure CLI&lt;/li&gt;
&lt;li&gt;PowerShell&lt;/li&gt;
&lt;li&gt;SDK&lt;/li&gt;
&lt;li&gt;Restful API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For accessing, provisioning, and controlling Azure resources, Azure Portal, Azure CLI, and Powershell are used.&lt;/p&gt;

&lt;p&gt;For consuming Azure services, the SDK and Restful API are used.&lt;/p&gt;

&lt;p&gt;Restful APIs are endpoints that can be used to access Azure services. Let's say you've created a storage service on your Azure subscription, and you want to consume it. You can do so by using the storage service endpoint that Azure provided when you created it.&lt;/p&gt;

&lt;p&gt;You can also provision, access, and handle Azure resources using CloudShell, a browser-based command-line interface provided by Azure.&lt;/p&gt;

&lt;p&gt;Azure CLI and Powershell are platform-agnostic software that can be built locally.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-cli"&gt;
  &lt;/a&gt;
  Azure CLI
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wo5JAygJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cybkwz401kcfgzg0k0n9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wo5JAygJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cybkwz401kcfgzg0k0n9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli"&gt;Install the Azure CLI for Windows or Mac.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After installing the Azure CLI, use the &lt;code&gt;az --version&lt;/code&gt; command to verify the CLI version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;az --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The browser-based CLI Azure Cloud Shell is the simplest way to get started with the Azure CLI.&lt;/p&gt;

&lt;p&gt;To Learn details about Azure CLI refer to the &lt;a href="https://docs.microsoft.com/en-us/cli/azure/get-started-with-azure-cli"&gt;Link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To check the Azure CLI installed locally type &lt;code&gt;az&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-powershell"&gt;
  &lt;/a&gt;
  Azure PowerShell
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKmfUWHK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1aurdv0pa2olslupuqo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKmfUWHK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1aurdv0pa2olslupuqo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Power shell is a versatile automation feature written in the.NET framework.&lt;/p&gt;

&lt;p&gt;PowerShell 5.1 on Windows and PowerShell 6.X and above on all platforms are supported by Azure Powershell.&lt;/p&gt;

&lt;p&gt;PowerShell 5.1 is also installed if you're running Windows 10 edition 1607 or higher.&lt;/p&gt;

&lt;p&gt;Run the Windows Powershell and install Azure Module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;install-module -name az
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the Nuget provider, choose Yes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-azure-resource-manager"&gt;
  &lt;/a&gt;
  What is Azure Resource Manager?
&lt;/h2&gt;

&lt;p&gt;Azure Resource Manager (ARM) is the configuration and control service for Azure, while Azure Resource Manager (ARM) is the orchestration layer. It comes with a management layer that allows you to add, edit, and uninstall services.&lt;/p&gt;

&lt;p&gt;Azure portal, CLI, PowerShell, restful API, SDK, and other Azure tools send requests to the Azure resource manager, which authenticates/authorizes them and then sends them to Azure resources including compute, storage, and so on.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pJUtPWfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nt8s1t1u93icju2i8abj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pJUtPWfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nt8s1t1u93icju2i8abj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#terminology"&gt;
  &lt;/a&gt;
  Terminology
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Resource&lt;/strong&gt; - Digital computers, storage accounts, and mobile applications are all examples of manageable items accessible by Azure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resource Group&lt;/strong&gt; - For an Azure approach, a resource category is a container that contains similar properties. What resource group a resource belongs to is determined by the organization's plan or what makes the most sense, such as resource groups for growth, testing, and production, or resource groups for various programs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resource Provider&lt;/strong&gt; - A resource provider, such as Microsoft, is a service that offers Azure services. Virtual Machines are provided by Compute, which is a service.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resource Manager Template&lt;/strong&gt; - The RM template is a JSON file with a declarative syntax that allows you to regularly and frequently build and deploy Azure services to Resource groups, subscriptions, Management groups, and tenants.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vyltR706--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukbikzbg0vv2zrgg3lot.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vyltR706--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukbikzbg0vv2zrgg3lot.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I assume you now have a general understanding of Azure.&lt;/p&gt;

&lt;p&gt;What is your opinion here? Share your thoughts in the comments :)&lt;/p&gt;

</description>
      <category>azure</category>
      <category>msftstudentambassador</category>
      <category>mlsa</category>
      <category>microsoft</category>
    </item>
    <item>
      <title>Activar WebHook de Github en Discord</title>
      <author>Alexander G</author>
      <pubDate>Thu, 15 Apr 2021 01:06:08 +0000</pubDate>
      <link>https://dev.to/alexanderg/activar-webhook-de-github-en-discord-3bkp</link>
      <guid>https://dev.to/alexanderg/activar-webhook-de-github-en-discord-3bkp</guid>
      <description>&lt;p&gt;Muchas veces nosotros los desarrolladores usamos este discord,ese muy util servicio de mensajer√≠a para hacer nuestros proyectos en grupo, y por eso el d√≠a de hoy les dir√© como activar las notificaciones de todo lo que pasa en nuestro repositorio en &lt;a href="//github.com"&gt;Github&lt;/a&gt; y que lleguen al canal que queramos.&lt;/p&gt;

&lt;p&gt;Para no asustarlos les digo que no van a tener que escribir ni una solo linea de c√≥digo, es muy simple la verdad.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Importante&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Debes tener permisos de administrador en el server para poder activar los webHooks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sin mas rodeos, Comencemos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lo primero, nos vamos a Discord, y creamos una categor√≠a llamada alert-Github o como prefieran, lo recomendable es que configuren los permisos de la categor√≠a para que las personas no puedan escribir y luego que los canales hereden los permisos, adentro de la categor√≠a creamos un canal con cualquier nombre(preferiblemente, el nombre del proyecto), en mi caso alerta-web, tendr√≠amos algo as√≠:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Estoy en un server que cree para esta ocasi√≥n&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nDbfBz1A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yc9yj2thkj868e7b4wy1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nDbfBz1A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yc9yj2thkj868e7b4wy1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nos vamos a Ajustes del Servidor,nos metemos  en la parte de Integraciones, en la parte de integraciones encontraran lo siguiente:&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GR-P5CiN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/whu3zrpfk54r3n24fjli.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GR-P5CiN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/whu3zrpfk54r3n24fjli.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luego nos vamos a la opci√≥n de Crear WebHook, luego de darle nos dir√° que tenemos un webHook, Capitan Hook, le cambiamos el nombre por el de nuestra preferencia, en mi caso, GitHub, En la parte donde dice canal nos indica en cual canal se nos enviara las notificaciones, podemos poner cualquiera, en mi caso pondr√© el canal que creamos anteriormente, alerta-web, tambi√©n nos dice que podemos ponerle una foto, si quieren p√≥nganle una, pero la foto no se vera, al final si siguen los pasos bien, ver√°n un bot con el icono de GitHub.&lt;/p&gt;

&lt;p&gt;Ahora le damos a la parte donde dice "Copiar URL de webhook" y se nos copiara en el portapapeles y Guardamos cambios. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Quedar√≠a algo as√≠&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LJdKdq_3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0dopqvv5tenqnbwy74he.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LJdKdq_3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0dopqvv5tenqnbwy74he.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ahora nos vamos a Github, nos ubicamos en el repositorio en el cual estamos interesados que nos lleguen las notificaciones.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Estoy en un repositorio nuevo, aunq no importa si es nuevo o viejo&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7bdcJujc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sseiz36oyqwdv5duv07q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7bdcJujc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sseiz36oyqwdv5duv07q.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nos vamos a la parte de Settings, adentro en el men√∫ de options, nos iremos a la parte de WebHooks, y les debe salir lo siguiente:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o_CubGjp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5k3tuk2ynlcvcb62473f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o_CubGjp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5k3tuk2ynlcvcb62473f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Damos click en la parte donde dice add webhook, nos pedir√° nuestra contrase√±a, luego de ingresarla, saldr√° esto en pantalla&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ogD5__uH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aq66x3h4rvnjzvkydbgt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ogD5__uH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aq66x3h4rvnjzvkydbgt.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Y hacemos lo siguente:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;En Payload URL, ponemos la url de nuestro WebHook, la que copiamos anteriormente, pero al final, pegado de la url, ponemos esto:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/github
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;En Content type, seleccionamos: application/json&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;En donde dice: Which events would you like to trigger this webhook?, seleccionamos : Send me everything.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Quedando algo as√≠:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l4Xu3xjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k9y5jgmwwv5ywhe9hknx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l4Xu3xjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k9y5jgmwwv5ywhe9hknx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Y seguidamente le damos a add webhook y ya estar√≠a listo nuestro WebHook, y gracias a  la configuraci√≥n que hicimos el webhook avisara hasta cuando alguien le de una nueva estrella.&lt;/p&gt;

&lt;p&gt;Vamos a probarlo, vamos a darle una estrella y crearemos un archivo index.html con un simple h1 o con lo que prefieras.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ya creado el archivo y habiendo ya dado la estrella&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NhEc6Bd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yp0s6vvksym2a3redh48.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NhEc6Bd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yp0s6vvksym2a3redh48.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nos vamos para Discord, entramos en el canal alerta-web o donde hayas configurado el WebHook, y nos deber√° salir lo siguiente:&lt;br&gt;
&lt;em&gt;Bueno como soy el √∫nico que ha modificado algo en el repo solo sale AlexanderG pero depende de quien modifique el repo, saldr√° su nombre de perfil de GitHub&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0m2rPkej--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcrqxkhsvnue31hsipps.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0m2rPkej--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcrqxkhsvnue31hsipps.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Como veras nosotros no hemos puesto ninguna imagen, pero como les hab√≠a dicho como ese es un webHook de Github sale as√≠.&lt;/p&gt;

&lt;p&gt;Y bueno eso es todo, vieron lo facil que activar las notificaciones de Github, y eso seguir√° funcionando a menos que se apague o se cambie. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Espero les haya gustado, si tienen alguna duda o pregunta solo d√©jenlas en los comentarios, Bye hasta la pr√≥xima &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>discord</category>
      <category>github</category>
      <category>webhook</category>
    </item>
    <item>
      <title>Awesome Custom Radio Button | YouTube Like &amp; Dislike | Using Only HTML &amp; CSS </title>
      <author>Ahmad Emran</author>
      <pubDate>Thu, 15 Apr 2021 00:42:39 +0000</pubDate>
      <link>https://dev.to/ahmadbassamemran/awesome-custom-radio-button-youtube-like-dislike-using-only-html-css-42bd</link>
      <guid>https://dev.to/ahmadbassamemran/awesome-custom-radio-button-youtube-like-dislike-using-only-html-css-42bd</guid>
      <description>

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/OchM90IuQig"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/AhmadEmran?sub_confirmation=1"&gt;&lt;strong&gt;Please do not forget to subscribe in my channel:&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ahmadbassamemran/embed/xxgjmGY?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>css</category>
      <category>showdev</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Mocking framer-motion v4</title>
      <author>Mike Schutte</author>
      <pubDate>Wed, 14 Apr 2021 23:44:29 +0000</pubDate>
      <link>https://dev.to/tmikeschu/mocking-framer-motion-v4-19go</link>
      <guid>https://dev.to/tmikeschu/mocking-framer-motion-v4-19go</guid>
      <description>&lt;p&gt;&lt;a href="https://testing-library.com/"&gt;Testing Library&lt;/a&gt; has changed the UI testing game for the better. If you haven't tried it yet, check it out.&lt;/p&gt;

&lt;p&gt;At &lt;a href="https://www.process.st/"&gt;work&lt;/a&gt; our new UI efforts are powered by &lt;a href="https://chakra-ui.com/"&gt;Chakra UI&lt;/a&gt;, which uses &lt;a href="https://www.framer.com/motion/"&gt;Framer Motion&lt;/a&gt; under the hood for animations. With all this work, we're testing all of it using &lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt; and &lt;a href="https://testing-library.com/docs/react-testing-library/intro"&gt;React Testing Library&lt;/a&gt; (RTL).&lt;/p&gt;

&lt;p&gt;One great way to defend against UI regressions (copy, styles, etc) is &lt;a href="https://jestjs.io/docs/snapshot-testing"&gt;snapshot testing&lt;/a&gt;. As we're getting more and more into Chakra's features and better tests, we've run into issues where the animated &lt;code&gt;style&lt;/code&gt; properties have minute differences between snapshots.&lt;/p&gt;

&lt;p&gt;RTL &lt;a href="https://testing-library.com/docs/react-testing-library/faq/"&gt;recommends&lt;/a&gt; mocking animation libraries to solve this problem. There are a few solutions for doing this with &lt;code&gt;framer-motion&lt;/code&gt; on the web, but I don't think they are up to snuff for the current version of the library (&lt;code&gt;4._&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;After digging around the &lt;a href="https://github.com/framer/motion/blob/main/src/render/dom/motion.ts"&gt;framer motion source&lt;/a&gt;, I realized our attempt at mocking the &lt;code&gt;motion&lt;/code&gt; export as an object (see &lt;a href="https://www.hectane.com/blog/mock-framer-motion-with-jest"&gt;here&lt;/a&gt;) wasn't working because &lt;code&gt;motion&lt;/code&gt; is constructed using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"&gt;Proxy&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enough-with-the-words-how-do-i-stabilize-my-snapshot-tests"&gt;
  &lt;/a&gt;
  Enough with the words, how do I stabilize my snapshot tests?!
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// __mocks__/framer-motion.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;CustomDomComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CustomMotionComponentConfig&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;framer-motion/types/render/dom/motion-proxy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requireActual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;framer-motion&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// https://github.com/framer/motion/blob/main/src/render/dom/motion.ts&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;custom&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Props&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ComponentType&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Props&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;_customMotionComponentConfig&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;CustomMotionComponentConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;CustomDomComponent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Props&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// eslint-disable-next-line @typescript-eslint/ban-ts-comment&lt;/span&gt;
  &lt;span class="c1"&gt;// @ts-ignore&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;regularProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromEntries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="c1"&gt;// do not pass framer props to DOM element&lt;/span&gt;
      &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(([&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isValidMotionProp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="c1"&gt;// eslint-disable-next-line @typescript-eslint/ban-ts-comment&lt;/span&gt;
      &lt;span class="c1"&gt;// @ts-ignore&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;regularProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="c1"&gt;// eslint-disable-next-line @typescript-eslint/ban-ts-comment&lt;/span&gt;
      &lt;span class="c1"&gt;// @ts-ignore&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;regularProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;componentCache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;motion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;custom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;componentCache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;componentCache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;custom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// eslint-disable-next-line @typescript-eslint/no-non-null-assertion&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;componentCache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kr"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;__esModule&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;AnimatePresence&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReactChildren&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&amp;gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;motion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in your test setup file you can call &lt;code&gt;jest.mock('framer-motion')&lt;/code&gt; and all the animation related properties will be filtered out.&lt;/p&gt;

&lt;p&gt;Happy testing!&lt;/p&gt;

</description>
      <category>react</category>
      <category>testing</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>Programming in C++ (Part 8 Pointers)</title>
      <author>Mark Mahoney</author>
      <pubDate>Wed, 14 Apr 2021 23:03:36 +0000</pubDate>
      <link>https://dev.to/markm208/programming-in-c-part-8-pointers-3ojl</link>
      <guid>https://dev.to/markm208/programming-in-c-part-8-pointers-3ojl</guid>
      <description>&lt;p&gt;This post describes pointers in C/C++. A pointer is a variable that holds the address of another variable. Pointers are important because they allow us to use a special section of memory called the 'heap'. I discuss the different types of memory that can be used in a program (global, local, and dynamic).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter8/01/playback.html"&gt;Simple pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter8/02/playback.html"&gt;Pointer to an object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter8/03/playback.html"&gt;Vectors of pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter8/04/playback.html"&gt;Arrays are pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter8/05/playback.html"&gt;Passing data to functions with pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter8/06/playback.html"&gt;Comparing pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter8/07/playback.html"&gt;Three types of variables- global, local, and dynamic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter8/08/playback.html"&gt;Dynamic variables example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter8/09/playback.html"&gt;Dangling pointers and null pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter8/10/playback.html"&gt;Dynamic array of students&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#call-to-action"&gt;
  &lt;/a&gt;
  Call to Action
&lt;/h3&gt;

&lt;p&gt;Now that you have reviewed the guided code walk-throughs I ask that you write a program that will read a sequence of words from the keyboard and store them in a dynamic array of strings. Use the word 'quit' as the word that terminates the input. Print the words back to the screen in the order in which they were entered each on its own line. Do not store the same word twice.&lt;/p&gt;

&lt;p&gt;Up until now the size of an array has been determined at compile time, now that you know about pointers and about the keyword &lt;code&gt;new&lt;/code&gt;, write a program which is not restricted to selecting an upper bound at compile time for the number of words which can be read in.&lt;/p&gt;

&lt;p&gt;One way to do this is to use &lt;code&gt;new&lt;/code&gt; to create arrays of strings on the fly. Each time an array fills up, dynamically create an array which is twice as large, copy over the contents of the existing array to the new array, and continue (remember to &lt;code&gt;delete&lt;/code&gt; the original array). Start with an array of 5 elements.&lt;/p&gt;

&lt;p&gt;Here is an example of the output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Enter in some text and end with the word quit:
This lab asks you to write a program that will read a sequence of words from the keyboard and store them in a dynamic array of strings. Use the word 'quit' as the word that terminates the input. Print the words back to the screen in the order in which they were entered each on its own line. Do not store the same word twice. quit

Doubling Array from 5 to 10
Doubling Array from 10 to 20
Doubling Array from 20 to 40
Doubling Array from 40 to 80
1. This
2. lab
3. asks
4. you
5. to
6. write
7. a
8. program
9. that
10. will
11. read
12. sequence
13. of
14. words
15. from
16. the
17. keyboard
18. and
19. store
20. them
21. in
22. dynamic
23. array
24. strings.
25. Use
26. word
27. 'quit'
28. as
29. terminates
30. input.
31. Print
32. back
33. screen
34. order
35. which
36. they
37. were
38. entered
39. each
40. on
41. its
42. own
43. line.
44. Do
45. not
46. same
47. twice.
Press any key to continue . . .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#comments-and-feedback"&gt;
  &lt;/a&gt;
  Comments and Feedback
&lt;/h3&gt;

&lt;p&gt;You can find all of these code playbacks in my free 'book', &lt;a href="https://markm208.github.io/cppbook/"&gt;An Animated Introduction to Programming in C++&lt;/a&gt;. I am always looking for feedback so please feel free to comment here or to send me a message. You can follow me on twitter &lt;a href="https://twitter.com/markm208"&gt;@markm208&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Programming in C++ (Part 2 Selection)</title>
      <author>Mark Mahoney</author>
      <pubDate>Wed, 14 Apr 2021 23:02:16 +0000</pubDate>
      <link>https://dev.to/markm208/programming-in-c-part-2-selection-c42</link>
      <guid>https://dev.to/markm208/programming-in-c-part-2-selection-c42</guid>
      <description>&lt;p&gt;In this post I will discuss altering the flow of control with &lt;code&gt;if/else&lt;/code&gt; statements. These statements ask the computer to evaluate whether a condition is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; and changes the flow of control based on the answer. Along the way I discuss another data type, &lt;code&gt;bool&lt;/code&gt;, which can hold either true or false and I show a few examples of how to use selection with &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;if/else&lt;/code&gt;, &lt;code&gt;if/else if/else&lt;/code&gt;, and &lt;code&gt;switch&lt;/code&gt; statements. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter2/01/playback.html"&gt;Booleans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter2/02/playback.html"&gt;Even/odd calculator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter2/03/playback.html"&gt;Overtime pay with an if/else&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter2/04/playback.html"&gt;Water temperature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cppbook/chapter2/05/playback.html"&gt;Switch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#call-to-action"&gt;
  &lt;/a&gt;
  Call to Action
&lt;/h3&gt;

&lt;p&gt;Now that you have reviewed the guided code walk-throughs I ask that you write a few programs:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#problem-1"&gt;
  &lt;/a&gt;
  Problem 1
&lt;/h4&gt;

&lt;p&gt;Problem 1 asks you to write a program to determine if one date comes after another. The program will ask for two sets of dates. Next, the program will determine if the first date comes before, is equal to, or comes after.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Enter in the first month: 2
Enter in the first day: 21
Enter in the first year: 2012

Enter in the second month: 2
Enter in the second day: 22
Enter in the second year: 2011

The first date comes after the second.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#problem-2"&gt;
  &lt;/a&gt;
  Problem 2
&lt;/h4&gt;

&lt;p&gt;Problem 2 asks you to write a programs that prompts the user for a date and determines if that date is valid. For example, 9/19/2017 is a valid date but these are not valid dates:&lt;/p&gt;

&lt;p&gt;4/31/2006 (only 30 days in April)&lt;br&gt;
2/29/2005 (not a leap year)&lt;br&gt;
16/1/2010 (invalid month)&lt;br&gt;
4/59/2013 (invalid day)&lt;/p&gt;

&lt;p&gt;If the date is correct print it out. If it is incorrect display an error message explaining why the date is not correct. &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#problem-3"&gt;
  &lt;/a&gt;
  Problem 3
&lt;/h4&gt;

&lt;p&gt;Problem 3 asks you to write a program that will calculate change for a sales purchase. Your program should prompt for a sales price. Validate that the data entered is a number greater than 0. If the data entered is incorrect, display an error message and end the program. Next, prompt the user for the amount that the customer will pay to the cashier. Validate that this value is greater than or equal to the sales price. If it is not, display an error message and end the program.&lt;/p&gt;

&lt;p&gt;If the entry is correct, your program must calculate the amount of change to return to the user.  Next, calculate what bills and coins that the the cashier needs to return to the customer. The fewest number of paper bills and coins should be returned. You can make change in many different combinations, however, the only correct implementation is the one that returns the fewest paper bills and coins.&lt;/p&gt;

&lt;p&gt;Display the number of each of the bills and coins. Here is a sample run of the program:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Enter in a sales amount: $20.38
Enter in the amount the customer pays: $30.00

The change due back is $9.62

You should give the customer this change:
0 $100 bills
0 $50 bills
0 $20 bills
0 $10 bills
1 $5 bills
4 $1 bills
1 Half Dollars
0 Quarters
1 Dimes
0 Nickels
2 Pennies
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because of the way arithmetic works with float variables, storing the monetary values as floats may cause some problems. For example, if you had a float variable that held 1.29 to represent $1.29 and you subtracted the .05 from it (to represent giving back a nickel) you would think that you would be left with exactly 1.24. Unfortunately, the computer might store that value or it might store 1.2399999 or 1.2400001 instead of exactly 1.24. These very small inconsistencies can cause a problem calculating the number of pennies to return. Consider converting the amounts into ints to solve this problem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comments-and-feedback"&gt;
  &lt;/a&gt;
  Comments and Feedback
&lt;/h3&gt;

&lt;p&gt;You can find all of these code playbacks in my free 'book', &lt;a href="https://markm208.github.io/cppbook/"&gt;An Animated Introduction to Programming in C++&lt;/a&gt;. I am always looking for feedback so please feel free to comment here or to send me a message. You can follow me on twitter &lt;a href="https://twitter.com/markm208"&gt;@markm208&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
