<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The API Series - GraphQL and Sending Queries with fetch()</title>
      <author>Nathan B Hankes</author>
      <pubDate>Thu, 06 May 2021 12:57:56 +0000</pubDate>
      <link>https://dev.to/vetswhocode/the-api-series-graphql-and-sending-queries-with-fetch-gf0</link>
      <guid>https://dev.to/vetswhocode/the-api-series-graphql-and-sending-queries-with-fetch-gf0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this tutorial you'll learn how to query data from a GraphQL API. In the process, you'll be exposed to some common tools used to work with GraphQL APIs, GraphQL syntax and structure, and you'll receive a VanillaJS GraphQL repository to study and get running on your local system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Some familiarity with HTML, Git, and JavaScript. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-graphql"&gt;
  &lt;/a&gt;
  What is GraphQL
&lt;/h2&gt;

&lt;p&gt;In the same way that the RESTful APIs conform to a REST architectural style, GraphQL APIs follow a strict GraphQL architecture. GraphQL is a query language for APIs organized with this GraphQL architecture. But unlike RESTful APIs, GraphQL has a single URL endpoint, offering an advantage over working with REST APIs that require different URL endpoints for different data. Additionally, GraphQL APIs only returns the data you need, unlike REST APIs which often deliver all the data associated with an object. For example, if you want to fetch the user name, the REST API would return the User object along with all of its properties. This is known as overfetching and can slow down your applications. With GraphQL, as you'll see, you can return the user name only.&lt;/p&gt;

&lt;p&gt;As a frontend developer, you'll be interacting with an API that is already built, but understanding how they're built is useful. The GraphQL schema architecture is defined by a series of schema based on type, like the below example from the &lt;a href="https://graphql.org/"&gt;GraphQL Foundation&lt;/a&gt; website:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Query&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;hero&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Character&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Character&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
  &lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Character&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;homeWorld&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Planet&lt;/span&gt;
  &lt;span class="nx"&gt;species&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Species&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Planet&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
  &lt;span class="nx"&gt;climate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Species&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
  &lt;span class="nx"&gt;lifespan&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Int&lt;/span&gt;
  &lt;span class="nx"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Planet&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, there are several types: Query, Character, Planet, and Species. Some types are built into the query language. Examples of these are the types Query and Mutation, which we'll dive into deeper later on. The custom types of Character, Planet, and Species are referred to as object types. Each type will have one or more properties, which are often referred to as fields. From the example above, the Query type has a field of hero, which returns an array of the Character object type. Within the API, fields are assigned a type, such as the built-in String, Int, Float, Boolean, or ID, or fields are assigned type objects, such as, in the example above, Character, Planet, or Species. Like the syntax of JavaScript, object types enclosed in brackets return an array of that object type.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#queries-and-mutations"&gt;
  &lt;/a&gt;
  Queries and Mutations
&lt;/h2&gt;

&lt;p&gt;Whereas the REST API has several methods, such as POST, GET, PATCH, PUT, and DELETE, GraphQL has only two methods: Query and Mutation.&lt;/p&gt;

&lt;p&gt;Queries are like the REST API GET method. They return data stored by the API.&lt;/p&gt;

&lt;p&gt;Mutations change data, and encompass the REST API POST, PUT, PATCH, and DELETE methods.&lt;br&gt;
Getting Started With GraphQL API Query&lt;br&gt;
In order to avoid getting bogged down in setting up a development environment to get started, we're going to first learn about consuming a GraphQL API using the OneGraph's GraphiQL explorer located at &lt;a href="https://www.onegraph.com/graphiql"&gt;https://www.onegraph.com/graphiql&lt;/a&gt; &lt;br&gt;
The home page will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vj0Hztrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esqh2p4ikfm80j6awa6k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vj0Hztrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esqh2p4ikfm80j6awa6k.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OneGraph is a company that integrates all the most commonly used APIs in business into a single GraphQL API, so developers can query Twitter, Salesforce, Slack, and UPS in a single query. GraphiQL is not owned by OneGraph. It is a tool that you can use independently.&lt;/p&gt;

&lt;p&gt;To learn more about GraphiQL, visit &lt;a href="https://github.com/graphql/graphiql"&gt;https://github.com/graphql/graphiql&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the leftmost column, we see all the APIs that OneGraph has integrated into their offering. The center columns is where we will write our query. The rightmost column is where our query output will be displayed.&lt;/p&gt;

&lt;p&gt;In the below example, we'll query the DEV blogging API to get some article information from user &lt;code&gt;nbhankes&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h-0xm06Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fy696dcixywrw4an01ct.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h-0xm06Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fy696dcixywrw4an01ct.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The GraphiQL explorer shows us the GraphQL API schema structure of the DEV API and allows us to select the data we'd like to retrieve from the API. As we make this selection, the explorer creates a query, which we see being built in the middle column. Once our query is built, we run the query by hitting the play button on the bar. The query is then sent to the DEV API and the results are displayed on the right.&lt;/p&gt;

&lt;p&gt;Below is the actual code for you to study. Notice the terms edges and node in the section labeled GraphQL Query.  nodes define objects and edges define relationships between objects and are optional (except in the Relay GraphQL client). Adding these to a query can be useful when working with complex APIs schemas. For the sake of this introduction, it's just important to be aware of them. If you'd like to dive deeper into edges and nodes, visit &lt;a href="https://www.apollographql.com/blog/explaining-graphql-connections-c48b7c3d6976/"&gt;https://www.apollographql.com/blog/explaining-graphql-connections-c48b7c3d6976/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's dive into the code below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//GraphQL Query&lt;/span&gt;

&lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="nx"&gt;MyQuery&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;devTo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nbhankes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;edges&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;title&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;//API Response&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;data&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;devTo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;articles&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;edges&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The API Series - Part 2: The REST API, fetch(), and AXIOS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The API Series - Part 1: An Intro to APIs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Classless CSS Isn't Trashy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Upgrade Your CSS: The Syntax.fm Typography Sizing Strategy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;




&lt;span class="c1"&gt;//GraphQL Query without edges or node&lt;/span&gt;

&lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="nx"&gt;MyQuery&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;devTo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nbhankes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;title&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;//API Response without edges or node&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;data&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;devTo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;articles&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The API Series - Part 2: The REST API, fetch(), and AXIOS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The API Series - Part 1: An Intro to APIs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Classless CSS Isn't Trashy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Upgrade Your CSS: The Syntax.fm Typography Sizing Strategy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, you can see that the shape of the query defines the shape of the API response. The response is shaped like a nested JavaScript object and can be handled similarly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-graphql-in-your-project-a-demo"&gt;
  &lt;/a&gt;
  Using GraphQL in Your Project: A Demo
&lt;/h2&gt;

&lt;p&gt;While the GraphiQL explorer is extremely useful, you can't just add the GraphQL query into your code and expect it to work. Below you'll find a link to a GitHub repo that makes a GraphQL query using plain JavaScript and the Fetch() API. This demonstration repository contains code for a website that queries the &lt;a href="https://api.spacex.land/graphql/"&gt;SpaceX GraphQL API&lt;/a&gt; and renders the response data to the browser. The demo built this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fizeBAKC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ajpp3fk25fl3qsjahe1s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fizeBAKC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ajpp3fk25fl3qsjahe1s.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the great thing about working with APIs is that if the CEO of SpaceX changes, our website will automatically reflect the changes as soon as the API is updated.&lt;/p&gt;

&lt;p&gt;Visit the &lt;a href="https://vanillajs-graphql-demo.surge.sh/"&gt;Live Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link To Repo: &lt;a href="https://github.com/nbhankes/vanillaJS-GraphQL-demo"&gt;https://github.com/nbhankes/vanillaJS-GraphQL-demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Study the comments and the code in the repository, follow the directions on the README.md file to get the project running on your local environment. Customize the query and template literal for practice.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this tutorial you learned how to query data from a GraphQL API. You were exposed to some common tools used to work with GraphQL APIs, the GraphQL syntax and structure, and you received a VanillaJS GraphQL repository to study and get running on your local system.&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>graphql</category>
    </item>
    <item>
      <title>Calling out developers for help fighting COVID-19 in India</title>
      <author>Rohith Gilla</author>
      <pubDate>Thu, 06 May 2021 12:56:08 +0000</pubDate>
      <link>https://dev.to/gillarohith/calling-out-developers-for-help-fighting-covid-19-in-india-46g9</link>
      <guid>https://dev.to/gillarohith/calling-out-developers-for-help-fighting-covid-19-in-india-46g9</guid>
      <description>&lt;p&gt;We have made an app to &lt;em&gt;Geolocate Covid Resources&lt;/em&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://covi-find.in/"&gt;Covid Find&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Most of the similar apps we found did not geolocate the resources, making it tough for people to find the nearest help. We are getting our data from government websites and is updated hourly.&lt;/p&gt;

&lt;p&gt;Currently, we have a few cities and states. We will be continuously adding more cities as well as resources. &lt;/p&gt;

&lt;p&gt;If you would like to help out in this initiative and know the following stack :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web scraping: Beautifulsoup, Pandas, Requests&lt;/li&gt;
&lt;li&gt;Backend: Flask&lt;/li&gt;
&lt;li&gt;Frontend: Next.js + TypeScript + Chakra UI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please join the Discord server to join the initiative.&lt;br&gt;
&lt;a href="https://discord.gg/QWPxEzwfHa"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to check the github repo &lt;a href="https://github.com/Rohithgilla12/covi-find"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br&gt;
Rohith Gilla&lt;/p&gt;

&lt;p&gt;P.S: Stay home, stay safe and get vaccinated if your turn comes.&lt;/p&gt;

&lt;p&gt;P.P.S: Let me know if you want to know about how I built the frontend of the application, will be more than happy to write a blog post on that.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>help</category>
      <category>typescript</category>
      <category>python</category>
    </item>
    <item>
      <title>#30DaysofAppwrite: SSL Certificates</title>
      <author>kodumbeats</author>
      <pubDate>Thu, 06 May 2021 12:39:49 +0000</pubDate>
      <link>https://dev.to/appwrite/30daysofappwrite-ssl-certificates-c08</link>
      <guid>https://dev.to/appwrite/30daysofappwrite-ssl-certificates-c08</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;Appwrite is an open-source, self-hosted Backend-as-a-Service that makes app development &lt;strong&gt;easier&lt;/strong&gt; with a suite of SDKs and APIs to accelerate app development. &lt;a href="http://30days.appwrite.io/"&gt;#30DaysOfAppwrite&lt;/a&gt; is a month long event focussed at giving developers a walkthrough of all of Appwrite's features, starting from the basics to more advanced features like cloud functions! Alongside we will also be building a fully featured Medium Clone to demonstrate how these concepts can be applied when building a real world app. We also have some exciting prizes for developers who follow along with us!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#ssl-certificates-in-appwrite"&gt;
  &lt;/a&gt;
  SSL Certificates in Appwrite
&lt;/h1&gt;

&lt;p&gt;Welcome to Day 6 👋 of &lt;code&gt;#30DaysofAppwrite&lt;/code&gt;. Today, we're going to discuss how to secure your Appwrite API traffic with SSL certificates: what they do, how to get them, and how to troubleshoot SSL problems in Appwrite.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-ssl"&gt;
  &lt;/a&gt;
  What is SSL?
&lt;/h2&gt;

&lt;p&gt;SSL is a security protocol that cryptographically provides authentication for computers communicating with each other on the Internet, improved and later replaced by &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/TLS"&gt;TLS&lt;/a&gt; years ago. Despite TLS replacing SSL, both names are commonly used to refer to the same process: secure HTTP sessions with certificate keypairs (fancy text files) signed by a &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Certificate_authority"&gt;Certificate Authority&lt;/a&gt;, CA for short. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#trusting-certificates"&gt;
  &lt;/a&gt;
  Trusting Certificates
&lt;/h3&gt;

&lt;p&gt;The TLS protocol provides cryptographically unique keypairs that not only provide encryption, but also include domain, host, and organization information in the certificate. However, since TLS technology is &lt;a href="https://github.com/openssl/openssl"&gt;open-source&lt;/a&gt;, anyone can operate as a CA and sign certificates. To keep users secure, computers and browsers ship with lists of pre-vetted CAs to trust automatically[1]. Websites that use certificates issued by these trusted sources get the all-important lock🔒 next to their domain in the URL bar. Websites without them, however, face the dreaded &lt;code&gt;Warning: Potential Security Risk Ahead&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[1] For the curious, here's Mozilla's list of &lt;a href="https://wiki.mozilla.org/CA/Included_Certificates"&gt;trusted sources&lt;/a&gt; for Firefox.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oNsxoyDL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbhgi0880ivfb7sj2mnu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oNsxoyDL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbhgi0880ivfb7sj2mnu.png" alt="Self-Signed Certificate Warning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The process of becoming a universally trusted CA on these lists &lt;a href="https://en.wikipedia.org/wiki/Key_ceremony"&gt;can be costly&lt;/a&gt;, which is why organizations like IdenTrust and DigiCert charge money for their services. These companies have the resources and knowledge to provide a range of security guarantees, protecting financial institutions, governments, militaries, and more. Though, I'm assuming that you're not starting a bank, and don't have the funds to get a commercial SSL certificate. Where are the free options?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-lets-encrypt"&gt;
  &lt;/a&gt;
  Welcome, Let's Encrypt
&lt;/h3&gt;

&lt;p&gt;Let's Encrypt is a free, automated, and trusted Certificate Authority that aims to provide for a safer, more secure Internet. Appwrite uses their popular &lt;a href="https://certbot.eff.org/"&gt;&lt;code&gt;certbot&lt;/code&gt;&lt;/a&gt; tool under the hood to automatically handle certificate generation and renewal, so you can focus on building your app. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#securing-appwrite-with-https"&gt;
  &lt;/a&gt;
  Securing Appwrite with HTTPS
&lt;/h2&gt;

&lt;p&gt;To illustrate by example, let's assume I've installed Appwrite on a  VPS and bought the domain &lt;code&gt;example.com&lt;/code&gt; for my next Appwrite-powered project. What steps are necessary to serve my app on &lt;code&gt;example.com&lt;/code&gt;? &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#domain-records"&gt;
  &lt;/a&gt;
  Domain records
&lt;/h3&gt;

&lt;p&gt;Your registrar ultimately has control over your domain (our &lt;code&gt;example.com&lt;/code&gt;), so we'll need to start there to point the domain at the IP address of your VPS. For this, we can use an DNS A record. Adding DNS records to your domain varies by registrar, so check out our docs on &lt;a href="https://appwrite.io/docs/custom-domains"&gt;Custom Domains&lt;/a&gt; for a bunch of helpful links and more specific instructions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ssl-certificates-in-development"&gt;
  &lt;/a&gt;
  SSL Certificates in Development
&lt;/h3&gt;

&lt;p&gt;As mentioned before, all the required technology to generate your own SSL certificate is open-source, but it just isn't globally trusted by browsers. That's totally fine for development (assuming you trust yourself 😂) - Appwrite provides a self-signed certificate out-of-the-box (via the Traefik proxy), so your work is immediately encrypted. To do this, we need to let Appwrite know we're trying to use the self-signed certificate. Our SDKs all accept a &lt;code&gt;client.setSelfSigned()&lt;/code&gt; method to handle this. Here's an example using our &lt;a href="https://appwrite.io/docs/getting-started-for-web"&gt;Web SDK&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;client&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://example.com/v1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;5df5acd0d48c2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setSelfSigned&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#ssl-certificates-in-production"&gt;
  &lt;/a&gt;
  SSL Certificates in Production
&lt;/h3&gt;

&lt;p&gt;Now, say you're past the development stage for &lt;code&gt;example.com&lt;/code&gt;, and you're ready to move to production. The following is required for Appwrite to issue a production-ready SSL certificate (with the lock🔒):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Appwrite in &lt;code&gt;production&lt;/code&gt; mode via &lt;code&gt;_APP_ENV=production&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;A valid email set via &lt;code&gt;_APP_SYSTEM_SECURITY_EMAIL_ADDRESS&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;A public-facing domain set via &lt;code&gt;_APP_DOMAIN&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Traefik (proxy webserver) listening on port 80&lt;/li&gt;
&lt;li&gt;Remove references to &lt;code&gt;client.setSelfSigned&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Our docs on &lt;a href="https://appwrite.io/docs/environment-variables"&gt;Appwrite environment variables&lt;/a&gt; are a good reference when changing Appwrite's configuration. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To apply new environment variables, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose up &lt;span class="nt"&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is where the Appwrite Certificates worker takes the reigns, calling &lt;code&gt;certbot&lt;/code&gt; to generate a certificate signed by Let's Encrypt. The worker then stores the certificates in a Docker volume for persistence, and queues up a job to check the certificate renewal periodically (Let's Encrypt certificates are valid for 90 days by default).  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#debugging"&gt;
  &lt;/a&gt;
  Debugging
&lt;/h2&gt;

&lt;p&gt;The first place to look for any certificate problems is the Certificates worker. You can check the service logs with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose logs appwrite-worker-certificates
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you've configured your domain after your Appwrite server has started, you can re-trigger the Certificates worker by restarting Appwrite:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose restart appwrite
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you still can't figure it out, you can find help on &lt;a href="https://appwrite.io/discord"&gt;Discord&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h2&gt;

&lt;p&gt;We hope you liked this write up. You can follow &lt;a href="https://twitter.com/search?q=%2330daysofappwrite"&gt;#30DaysOfAppwrite&lt;/a&gt; on Social Media to keep up with all of our posts. The complete event timeline can be found &lt;a href="http://30days.appwrite.io"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/discord"&gt;Discord Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appwrite.io/"&gt;Appwrite Homepage&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite"&gt;Appwrite's Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to reach out to us on Discord if you would like to learn more about Appwrite, Aliens or Unicorns 🦄. Stay tuned for tomorrow's article! Until then 👋&lt;/p&gt;

</description>
    </item>
    <item>
      <title>6 website to find stock videos</title>
      <author>Innocent Coder</author>
      <pubDate>Thu, 06 May 2021 12:21:03 +0000</pubDate>
      <link>https://dev.to/innocentcoder/6-website-to-find-stock-videos-5a4d</link>
      <guid>https://dev.to/innocentcoder/6-website-to-find-stock-videos-5a4d</guid>
      <description>&lt;h1&gt;
  &lt;a href="#pixabay"&gt;
  &lt;/a&gt;
  Pixabay
&lt;/h1&gt;

&lt;p&gt;Discover The Best Source For Free Images And Videos. Free For Commercial Use ✓ No Attribution Required.&lt;/p&gt;

&lt;p&gt;link:- &lt;a href="https://pixabay.com/videos/search/"&gt;https://pixabay.com/videos/search/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZyNXG9kI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kn50mpaw65v2uxinbq1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZyNXG9kI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kn50mpaw65v2uxinbq1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pexels"&gt;
  &lt;/a&gt;
  Pexels
&lt;/h1&gt;

&lt;p&gt;Pexels Videos Makes It Easy To Find Free Stock &lt;br&gt;
Footage For Your Website, Promo Video Or &lt;br&gt;
Anything Else. All Videos Are Free For Personal A&lt;br&gt;
Nd Commercial Use.&lt;/p&gt;

&lt;p&gt;link:- &lt;a href="https://www.pexels.com/videos/"&gt;https://www.pexels.com/videos/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jnodVfZh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0pcxhfgiuueuorretvig.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jnodVfZh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0pcxhfgiuueuorretvig.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#videvo"&gt;
  &lt;/a&gt;
  Videvo
&lt;/h1&gt;

&lt;p&gt;Videvo Offers Free Stock Videos And Motion &lt;br&gt;
Graphics For Use In Any Project&lt;/p&gt;

&lt;p&gt;link:- &lt;a href="https://www.videvo.net/"&gt;https://www.videvo.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xy8ZIJXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hak362p8np9nopzf4ij9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xy8ZIJXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hak362p8np9nopzf4ij9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#videezy"&gt;
  &lt;/a&gt;
  Videezy
&lt;/h1&gt;

&lt;p&gt;Videezy Is A Community Of Videographers Who &lt;br&gt;
Download And Share Free HD Stock Video!&lt;/p&gt;

&lt;p&gt;link:- &lt;a href="https://www.videezy.com/"&gt;https://www.videezy.com/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OYHsR-rH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lx61je5b03tpjuannyvl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OYHsR-rH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lx61je5b03tpjuannyvl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#vidsplay"&gt;
  &lt;/a&gt;
  Vidsplay
&lt;/h1&gt;

&lt;p&gt;Download Free Stock Video Footage In High &lt;br&gt;
Definition (HD). Completely Free No Cost &lt;br&gt;
Video Footage.&lt;/p&gt;

&lt;p&gt;link:- &lt;a href="https://www.vidsplay.com/"&gt;https://www.vidsplay.com/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--624EvRio--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyhf4f2sa9f55z9wl0tg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--624EvRio--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyhf4f2sa9f55z9wl0tg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#splitshire"&gt;
  &lt;/a&gt;
  Splitshire
&lt;/h1&gt;

&lt;p&gt;What Would You Do If You Had Amazing Royalty &lt;br&gt;
Free Photos? Download Free Stock Photos With &lt;br&gt;
No Copyright Restrictions And Real Look.&lt;/p&gt;

&lt;p&gt;link:- &lt;a href="https://www.splitshire.com/"&gt;https://www.splitshire.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RF4UVAwu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6k1pjdssoxcfhjz52k7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RF4UVAwu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6k1pjdssoxcfhjz52k7.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:-&lt;/strong&gt; visit my youtube channel for frontend tutorials&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;subscribe to my youtube channel :-&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg"&gt;https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resent post :-&lt;/strong&gt; &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/innocentcoder" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGJ5NE5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ICZsIDfS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620705/764eb964-ecd2-4875-90c2-142dfc2f639c.jpg" alt="innocentcoder image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/innocentcoder/age-calculator-javascript-project-with-source-code-52a0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Age Calculator | Javascript Project With Source Code&lt;/h2&gt;
      &lt;h3&gt;Innocent Coder ・ May  5 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>discuss</category>
      <category>html</category>
    </item>
    <item>
      <title>I bet this card hover effect will blow your mind</title>
      <author>Techy Programmers</author>
      <pubDate>Thu, 06 May 2021 12:06:14 +0000</pubDate>
      <link>https://dev.to/kunaal438/most-underrated-card-hover-effect-that-will-blow-your-mind-41gb</link>
      <guid>https://dev.to/kunaal438/most-underrated-card-hover-effect-that-will-blow-your-mind-41gb</guid>
      <description>&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h1&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/bold-browser-po1ig"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I suggest you to view this demo in full new window view. yeah it's not responsive but you can make it. Click on the top right most button to view full new window.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial-"&gt;
  &lt;/a&gt;
  Video tutorial : )
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3qMjTZDwxuU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you found this tutorial useful then show your support by subscribing my youtube channel and following me.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#let-see-how-to-code-this-"&gt;
  &lt;/a&gt;
  Let see how to code this -
&lt;/h1&gt;

&lt;p&gt;first make a two files &lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;style.css&lt;/code&gt;. Then write the basic HTML structure also link css file to &lt;code&gt;index.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now create a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with class &lt;code&gt;.card&lt;/code&gt; and inside that create a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with class &lt;code&gt;.design-elements&lt;/code&gt; that will hold our all styling spans. Now create a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; inside of that make four &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; with same class &lt;code&gt;.dot&lt;/code&gt; and then outside this div but inside &lt;code&gt;.design-element&lt;/code&gt; create another &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and inside of that make four &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; also with class name &lt;code&gt;.lines&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Done we will add our content later. This should look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="c"&gt;&amp;lt;!-- designing element --&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"design-elements"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

          &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"lines"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"lines"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"lines"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"lines"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's style these. So add this to your stylesheet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-evenly&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;44&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;44&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;44&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;450px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(img1.jpg)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.design-elements&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;95%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;97%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.dot&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ff5050&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.dot&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.dot&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.dot&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.dot&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.dot&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.dot&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.dot&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.6s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.dot&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.9s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.lines&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.lines&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;top&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.lines&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.lines&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.lines&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.lines&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-10px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.design-elements&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-5deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card-content&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#2f2f2f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;roboto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;what we did till we did almost everything : ). this styles are just setting up &lt;code&gt;.card&lt;/code&gt; width and heights and some other properties and then we are styling &lt;code&gt;.dot&lt;/code&gt; here where we set their width and height with border-radius. after that we select each &lt;code&gt;.dot&lt;/code&gt; element with &lt;code&gt;:nth-child&lt;/code&gt; selector and gave different &lt;code&gt;top, left, right, bottom&lt;/code&gt; values to properly position them to the corners. After that we are styling out &lt;code&gt;.lines&lt;/code&gt; where we set each element different width and height with different top left right bottom values to properly align them to the edges. and at last we made &lt;code&gt;.dot&lt;/code&gt; and &lt;code&gt;.lines&lt;/code&gt; &lt;code&gt;scale&lt;/code&gt; to 0 and setting their &lt;code&gt;scale&lt;/code&gt; back to 1 whenever &lt;code&gt;.card&lt;/code&gt; is being hover.&lt;/p&gt;

&lt;p&gt;Now let's add content to out card. So inside &lt;code&gt;.card&lt;/code&gt; element in &lt;code&gt;index.html&lt;/code&gt; file but outside of &lt;code&gt;.design-elements&lt;/code&gt; add a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with class &lt;code&gt;.card-content&lt;/code&gt; and inside of that add &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; and write in whatever you want.After this our card structure should look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!-- designing element --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"design-elements"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                 &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
                 &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
                 &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
                 &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                 &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"lines"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
                 &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"lines"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
                 &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"lines"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
                 &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"lines"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;     
     &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

     &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card-content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;card 1&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloribus quae expedita ab sint nemo animi amet numquam nostrum quos tempora.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then just copy the structure for 2 more time to make 3 cards in total and just add some basic style again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(img2.jpg)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(img3.jpg)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card-content&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#2f2f2f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;roboto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.card-content&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.title&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So what this style do this will set different images to each cards and some little bit of style to its content.&lt;/p&gt;

&lt;p&gt;We are done we made this card hover effect. I hope you like it. If you find any mistake I made feel free to tell me in comment section.&lt;/p&gt;

&lt;p&gt;Thanks for visiting : )&lt;/p&gt;

</description>
      <category>uiweekly</category>
      <category>ux</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Tailwind CSS from Zero to Hero - Up and Running (Part 1 of 4) 🚀</title>
      <author>Vaibhav Khulbe</author>
      <pubDate>Thu, 06 May 2021 11:49:38 +0000</pubDate>
      <link>https://dev.to/vaibhavkhulbe/tailwind-css-from-zero-to-hero-up-and-running-part-1-of-4-an6</link>
      <guid>https://dev.to/vaibhavkhulbe/tailwind-css-from-zero-to-hero-up-and-running-part-1-of-4-an6</guid>
      <description>&lt;p&gt;Welcome to the complete Tailwind CSS guide you need to build high-quality frontend webpages. In this entire series of articles, we will be covering every single topic needed in order to master the complete workflow of Tailwind.&lt;/p&gt;

&lt;p&gt;Starting from absolutely nothing you will get to know all about it, including why you should use it, what features does it offers and what are the benefits over other frameworks.&lt;/p&gt;

&lt;p&gt;And don’t worry there will be examples, clear explanations, and details you need to know about each topic covered. Not only that, we will be focussing on some lesser-known features which are useful for real-life applications.&lt;/p&gt;

&lt;p&gt;So who is ready to dive into the world of Tailwind? Let’s start with the most common question you might have now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-tailwind-css"&gt;
  &lt;/a&gt;
  What is Tailwind CSS?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://tailwindcss.com/"&gt;&lt;strong&gt;Tailwind&lt;/strong&gt;&lt;/a&gt; is a &lt;em&gt;utility-first&lt;/em&gt; CSS framework that lets you add styles to your web pages without writing a single line of custom CSS code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let’s dissect the two important things I wrote above:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;‘Utility-first’&lt;/em&gt; means that instead of regular and old-fashioned framework classes, it works on low-level utilities which are essential to style any HTML element you wish. These may include styles like &lt;code&gt;padding&lt;/code&gt;, &lt;code&gt;display&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt; etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;‘Without writing a single line of custom CSS code’&lt;/em&gt; means that well...you are getting rid of those long CSS code blocks you need to write just to style one element according to the design provided to you. Tailwind handles this all.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So instead of pre-built components, it provides utility classes. That’s what makes it different from others. Adam Wathan, the creator of Tailwind, writes how a utility class is approached in &lt;a href="https://adamwathan.me/css-utility-classes-and-separation-of-concerns/"&gt;this article&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-why-tailwind"&gt;
  &lt;/a&gt;
  But why Tailwind?
&lt;/h3&gt;

&lt;p&gt;I get it. There are many CSS frameworks and libraries like Bootstrap, Bulma, Foundation, etc. which are really popular and used widely. You might feel, “Why do I need to learn about yet another CSS framework? What’s the use? How will it benefit me?”  And my answer is, “While it may not be the perfect solution to your style needs, it does have the following features that you should reflect on and try…”:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;You use only what you need&lt;/strong&gt;: most of its competitors give you too many unnecessary classes, straight at your face. That becomes a lot to digest especially when you are working on some large-scale projects. With Tailwind you choose what styles you need to apply, code it and there it reflects immediately. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;You don’t need to code custom CSS&lt;/strong&gt;: well, in most cases you don’t need to override base classes. Until you have a very complex design system with tons of the custom element, you will be using the in-built styles provided by this framework as it always gives you low-level utility classes. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;It even removes the not-used CSS code!&lt;/strong&gt; Thanks to PurgeCSS (we will talk about this next), when you run its commands, it will automatically remove every CSS code we aren’t using in our project. The output of the final bundle we get is clean without any heavy load, thereby improving CSS load time and thus the overall load time of the page. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Really easy to customize, if you like&lt;/strong&gt;: of course, there are times when what’s provided isn’t enough. You are free to change its config file, add your own mix, and deliver on what your design lead said! It’s just a matter of adding some objects to its JSON file and there you have it! &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Built-in responsive classes&lt;/strong&gt;: no need to write those tricky media queries. With Tailwind, you plug in the responsive powers directly in your HTML. Everything changes magically once you have applied the breakpoints.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Awesome auto-complete support&lt;/strong&gt;: if you are working on the popular VS Code tool to write code, you can install the &lt;a href="https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss"&gt;Tailwind CSS IntelliSense extension&lt;/a&gt; which provides you autocomplete suggestions, linting, class definitions, etc. So if you forget what &lt;code&gt;padding&lt;/code&gt; size to apply, just start typing and see the difference. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Support for &lt;strong&gt;dark mode&lt;/strong&gt;, new CSS features like &lt;strong&gt;Grids&lt;/strong&gt;, and even their own &lt;strong&gt;&lt;a href="https://tailwindui.com/components?utm_source=tailwindcss&amp;amp;utm_medium=navigation"&gt;component library&lt;/a&gt;&lt;/strong&gt;. Need I say more?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#the-purgecss-effect"&gt;
  &lt;/a&gt;
  The PurgeCSS Effect
&lt;/h3&gt;

&lt;p&gt;Tailwind CSS is blessed with Purge. &lt;a href="http://purgecss.com"&gt;PurgeCSS&lt;/a&gt; is a tool to remove unused CSS from your CSS file. You can easily integrate it with your Tailwind project.   &lt;/p&gt;

&lt;p&gt;While optimizing for production (more about production in Part 4 of this series), when you use Purge, it will check for all of the unused classes in your HTML code. You just add any file extension that includes a markup code like &lt;em&gt;.html&lt;/em&gt;, &lt;em&gt;.jsx&lt;/em&gt;, &lt;em&gt;.vue&lt;/em&gt;, etc. to the config object and then run the Purge command. You can see your output build files are much optimized and use only the classes they need.  &lt;/p&gt;

&lt;p&gt;Don’t worry, we will get to know all about this towards the end of the article series.&lt;/p&gt;

&lt;p&gt;Now you know what all it has to offer and why it just might be the next CSS framework for your web app. &lt;/p&gt;

&lt;p&gt;Part 1 of this article series will cover how to get started with Tailwind and make a quick webpage section. Just the barebones you need to have the confidence in writing the code.&lt;/p&gt;

&lt;p&gt;Here’s a quick rundown of the entire process we will go through:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#installation"&gt;Installation&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="#basic-concepts"&gt;Basic concepts&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#browser-support"&gt;Browser support&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#a-quick-demo"&gt;A quick demo&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#whats-next"&gt;What’s next?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;Pssst...wait. I have to tell you that there is no such thing as running some &lt;code&gt;npm&lt;/code&gt; commands for now. We will be scratching only the upper layer of simply pulling the CDN for the current demo. &lt;/p&gt;

&lt;p&gt;The main goal right now is not to start with a heavy workflow but to understand the basic concepts.  &lt;/p&gt;

&lt;p&gt;With that, you can open up your &lt;em&gt;index.html&lt;/em&gt; file, write the initial HTML code and then add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This pulls in the latest configuration build via CDN so that you can use the base classes on the go. &lt;/p&gt;

&lt;p&gt;Okay, looks like this really quick installation is done! Can we move on with what we are about to build? Not yet. First, let’s clear out some basic concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-concepts"&gt;
  &lt;/a&gt;
  Basic concepts
&lt;/h3&gt;

&lt;p&gt;Tailwind comes with a good amount of &lt;a href="https://tailwindcss.com/docs/utility-first"&gt;utility classes&lt;/a&gt; that you should know. Let’s take a look at the most common ones with an example.&lt;/p&gt;

&lt;p&gt;If you were to make this small box which is aligned to the center of the webpage you will need to write the following CSS (the exact numbers will vary):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZIrVNruM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sxjk3ehsbvzbqbnf7bf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZIrVNruM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sxjk3ehsbvzbqbnf7bf.png" alt="Box image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.16&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But the same style can be done with Tailwind CSS as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"min-h-screen bg-gray-200 flex flex-col justify-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sm:mx-auto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg-white shadow-lg p-20 rounded-lg"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At first glance this might be a bit uneasy for you to comprehend what is written but allow me to explain each entity here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;There are three &lt;code&gt;div&lt;/code&gt; elements we need to create that element from scratch. The first one provides the whole container a minimum height of &lt;code&gt;100vh&lt;/code&gt; so that now we can use the power of &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox"&gt;Flexbox&lt;/a&gt; to align the entire element to the center of the screen. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The second &lt;code&gt;div&lt;/code&gt; has some responsive alignment class which can be realized when you change the width of the viewport (see the live demo link to this code below).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, we have the actual square element with all the style properties. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s now understand what utility classes are being used.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;min-h-screen&lt;/code&gt;: this equals &lt;code&gt;min-height: 100vh;&lt;/code&gt; in CSS. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;bg-gray-200&lt;/code&gt;: this gives the webpage &lt;code&gt;body&lt;/code&gt; element a background color of light gray or &lt;code&gt;rgba(229, 231, 235, 1)&lt;/code&gt; to be specific.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;flex flex-col justify-center&lt;/code&gt;: these are all the Flexbox styles. It tells Tailwind to use &lt;code&gt;display: flex;&lt;/code&gt; use &lt;code&gt;flex-direction&lt;/code&gt; like &lt;code&gt;column&lt;/code&gt; and then justify the content to center.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sm:mx-auto&lt;/code&gt;: every time you see a prefix applied to a Tailwind property, you can be sure that it’s either using a responsive design feature or some state prefixes like hover, focus, and other states. Here on the small viewports, we want the horizontal margin (i.e. left and right margins) of our container to be &lt;code&gt;auto&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;bg-white shadow-lg p-20 rounded-lg&lt;/code&gt;: all of these corresponds to how the box we made actually ‘looks’. Starting from making its color white to adding a large shadow, adding padding of &lt;code&gt;5rem&lt;/code&gt;, and then rounding off the corners.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now from where I got to know that &lt;code&gt;p-20&lt;/code&gt; equals &lt;code&gt;padding: 5rem;&lt;/code&gt;? Well, all of these are very well documented on &lt;a href="https://tailwindcss.com/docs"&gt;their official documentation&lt;/a&gt;. It's good to know that &lt;em&gt;Tailwind sizes are based on the multiplications of &lt;code&gt;0.25rem&lt;/code&gt; units.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you like then you can try to play with this code I wrote above &lt;a href="https://play.tailwindcss.com/7nFzsDaoz3"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#browser-support"&gt;
  &lt;/a&gt;
  Browser support
&lt;/h3&gt;

&lt;p&gt;It is really important to know which browsers Tailwind supports and how to manage vendor prefixes if any so that a wide array of browsers and systems are supported.&lt;/p&gt;

&lt;p&gt;As of the time of writing this article, Tailwind CSS supports the latest stable versions of Chrome, Firefox, Edge, and Safari. But if you are the old IE guy and need support for that (in any case) then the latest (v2.0) version of Tailwind isn’t for you. You have to &lt;a href="https://blog.tailwindcss.com/tailwindcss-1-9#upgrading"&gt;downgrade to v.1.9&lt;/a&gt; for that.&lt;/p&gt;

&lt;p&gt;For those who are not using the Tailwind CLI tool (which adds all the vendor prefixes automatically), you can use &lt;a href="https://github.com/postcss/autoprefixer"&gt;Autoprefixer&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-quick-demo"&gt;
  &lt;/a&gt;
  A quick demo
&lt;/h3&gt;

&lt;p&gt;Time to put some things into practice as we make the following button with Tailwind CSS. Let’s try making this one:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g0peRJ64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y0dvb4tc5zxv75zhd9z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g0peRJ64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y0dvb4tc5zxv75zhd9z.png" alt="Final button output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1️⃣ &lt;strong&gt;Padding:&lt;/strong&gt; first, we use the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; HTML element, add the label and give it proper padding values. Now, this might be something different from what we usually do in proper CSS. No need to add custom height and width values or use &lt;code&gt;display: block;&lt;/code&gt;  We are simply using the padding values both on the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; axes. &lt;/p&gt;

&lt;p&gt;The button is rectangular and thus we can give it more &lt;code&gt;x&lt;/code&gt; padding value than &lt;code&gt;y&lt;/code&gt;. In the language of Tailwind, it is &lt;code&gt;px-8 py-4&lt;/code&gt; respectively. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;px-8&lt;/code&gt; equals &lt;code&gt;padding-left: 2rem; padding-right: 2rem;&lt;/code&gt; &lt;br&gt;
&lt;code&gt;py-4&lt;/code&gt; equals &lt;code&gt;padding-top: 1rem; padding-bottom: 1rem;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"py-4 px-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Join now&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2️⃣ &lt;strong&gt;Background:&lt;/strong&gt; this button has a blue background and Tailwind comes with a lot of &lt;a href="https://tailwindcss.com/docs/customizing-colors"&gt;different color shades&lt;/a&gt; for one prominent color. For us &lt;code&gt;bg-blue-500&lt;/code&gt; suits as it gives us the &lt;code&gt;500&lt;/code&gt; color shade of the blue color. &lt;a href="https://tailwindcss.com/docs/background-color#class-reference"&gt;Here is the entire list of background colors to choose from&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The higher the shade number, the darker the color gets and vice-versa.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;bg-blue-500&lt;/code&gt; equals &lt;code&gt;background-color: rgba(99, 102, 241, 1);&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;OUTPUT:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7mAtbJvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/isxs8cs1fki9fane777r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7mAtbJvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/isxs8cs1fki9fane777r.png" alt="Button with padding and background"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3️⃣ &lt;strong&gt;Rounded corners:&lt;/strong&gt; here we can either use &lt;code&gt;rounded-xl&lt;/code&gt; or &lt;code&gt;rounded-lg&lt;/code&gt; classes which simply means ‘extra-large rounded corners’ or ‘large rounded corners’. The first one fits well and thus &lt;code&gt;xl&lt;/code&gt; seems a good choice.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;rounded-xl&lt;/code&gt; equals &lt;code&gt;border-radius: 0.75rem;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"py-4 px-8 bg-blue-500 rounded-xl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Join now&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OUTPUT:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Okxa_mxR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2vp4wg516svqgsyarfn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Okxa_mxR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2vp4wg516svqgsyarfn.png" alt="Button with rounder corners"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4️⃣ &lt;strong&gt;Text color, transform, and weight:&lt;/strong&gt; the black text on a blue background calls for contrast issues. So we have to change it to white. For text colors, you can simply say &lt;code&gt;text-white&lt;/code&gt;. As for making it uppercase, it’s simply the &lt;code&gt;uppercase&lt;/code&gt; utility class. Easy!&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;font-weight&lt;/code&gt; is not the regular one or full-blown bold. Hence &lt;code&gt;font-semibold&lt;/code&gt; is the way to go!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;text-white&lt;/code&gt; equals &lt;code&gt;color: rgba(255, 255, 255, 1);&lt;/code&gt;&lt;br&gt;
&lt;code&gt;uppercase&lt;/code&gt; equals &lt;code&gt;text-transform: uppercase;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;font-semibold&lt;/code&gt; equals &lt;code&gt;font-weight: 600;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"py-4 px-8 bg-blue-500 rounded-xl text-white uppercase font-semibold"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Join now&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OUTPUT:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--53aox77a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8dapsjmqnubrhqup48ly.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--53aox77a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8dapsjmqnubrhqup48ly.png" alt="Button with text transforms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5️⃣ &lt;strong&gt;Shadows:&lt;/strong&gt; the final step is to add some shadows around our button. The &lt;code&gt;shadow-lg&lt;/code&gt; class gives us the appropriate shadow values we need for our button. It’s not entirely big and not very small.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;shadow-lg&lt;/code&gt; equals:&lt;br&gt;
&lt;code&gt;box-shadow: --tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04); &lt;br&gt;
box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"py-4 px-8 bg-blue-500 rounded-xl text-white uppercase font-semibold shadow-lg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Join now&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;FINAL OUTPUT: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g0peRJ64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y0dvb4tc5zxv75zhd9z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g0peRJ64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y0dvb4tc5zxv75zhd9z.png" alt="Final button output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And there you go! You just styled a button without coding any CSS! The best part? You never left your HTML document and it was way quick and easy to make such elements.&lt;/p&gt;

&lt;p&gt;Here’s the entire code with responsive utility classes included just like we did it in the box above:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"min-h-screen flex flex-col justify-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;   
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sm:mx-auto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"py-4 px-8 bg-blue-500 rounded-xl text-white uppercase font-semibold shadow-lg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Join now&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;In this article, you were introduced to what Tailwind is, how it provides you with its special utility classes, its features, and how you can make a custom button element without ever leaving the HTML file.&lt;/p&gt;

&lt;p&gt;It was all about kickstart your Tailwind journey as a complete beginner. I hope I was able to give you a quick glimpse of the topic.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What’s next?
&lt;/h3&gt;

&lt;p&gt;In the next tutorial of the Tailwind CSS from Zero to Hero series, we will look into how the utility-first approach really works and how Tailwind uses it to make more dynamic and functional elements. Stay tuned!&lt;/p&gt;




&lt;p&gt;Hope you liked the information. You can comment below with your thoughts about it.&lt;/p&gt;

&lt;p&gt;And now...as always, enjoy a meme! 😆&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-devhumour-corner"&gt;
  &lt;/a&gt;
  The &lt;a href="https://twitter.com/search?q=%23devhumour&amp;amp;src=typed_query"&gt;#DevHumour&lt;/a&gt; Corner 😂
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PHqFJS4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c83yfqnclnyv7op7o9zo.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PHqFJS4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c83yfqnclnyv7op7o9zo.jpeg" alt="Dev Humour Image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#some-of-my-previous-articles"&gt;
  &lt;/a&gt;
  Some of my previous articles
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/vaibhavkhulbe/create-powerful-and-flexible-forms-with-react-hook-form-1cd1"&gt;Create powerful and flexible forms with React Hook Form. 🪝&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/vaibhavkhulbe/create-smoking-hot-toast-notifications-in-react-with-react-hot-toast-30p8"&gt;Create smoking Hot toast notifications in React with React Hot Toast. 🔥&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/vaibhavkhulbe/5-really-cool-web-technologies-to-know-2maj"&gt;5 really cool web technologies to know! 🤩&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#find-me-on"&gt;
  &lt;/a&gt;
  Find me on
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://twitter.com/vaibhav_khulbe"&gt;Twitter 🐦&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://instagram.com/vaibhavkhulbe143/"&gt;Instagram 📸&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://www.linkedin.com/in/vaibhav-khulbe/"&gt;LinkedIn 👨🏻‍💻&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://about.me/vaibhav_khulbe"&gt;Everywhere else 🌐&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h4&gt;
  &lt;a href="#subscribe-to-my-weekly-developer-newsletter"&gt;
  &lt;/a&gt;
  &lt;a href="https://mailchi.mp/f59beeac6b9b/devupdates"&gt;📫 Subscribe to my weekly developer newsletter 📫&lt;/a&gt;
&lt;/h4&gt;

</description>
      <category>tailwindcss</category>
      <category>html</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Raspberry pi 4B kubernetes cluster</title>
      <author>NULLX</author>
      <pubDate>Thu, 06 May 2021 11:47:20 +0000</pubDate>
      <link>https://dev.to/nullxx/raspberry-pi-4b-kubernetes-cluster-3l9a</link>
      <guid>https://dev.to/nullxx/raspberry-pi-4b-kubernetes-cluster-3l9a</guid>
      <description>&lt;p&gt;I love decentralized computing. It’s beautiful. Just add a node to your cluster if you need more power! Just that. Restart the pods with no downtime, horizontal pod autoscaler...&lt;/p&gt;

&lt;p&gt;To create a cluster, we can do it with services provided by google, amazon… or just manually installing it in each node.&lt;/p&gt;

&lt;p&gt;I prefer to create my own mini cluster. My cluster is made of 6 raspberry pi 4B (4GB RAM each) and has it's own name: &lt;strong&gt;clusperry&lt;/strong&gt; ⚡️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2cx5C0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qviqt5u8j7ambs064enl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2cx5C0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qviqt5u8j7ambs064enl.jpg" alt="Cluster preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I created a simple gui tool to generate the linux images to flash into the mini-SD cards with the initial cloudconfig. You can check it here: &lt;a href="https://sh.nullx.me/clusperry-installer"&gt;https://sh.nullx.me/clusperry-installer&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#nodes-setup"&gt;
  &lt;/a&gt;
  Nodes setup
&lt;/h1&gt;

&lt;p&gt;Download the release from &lt;a href="https://github.com/nullxx/clusperry-installer/releases/"&gt;https://github.com/nullxx/clusperry-installer/releases/&lt;/a&gt; (its currently only compiled for macOS)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-select-the-nodes-operating-system"&gt;
  &lt;/a&gt;
  1. Select the nodes operating system
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5utj24AR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lslmg3xnh8vftmcw4hy6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5utj24AR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lslmg3xnh8vftmcw4hy6.gif" alt="SELECT OS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-configure-each-node-with-your-configuration"&gt;
  &lt;/a&gt;
  2. Configure each node with your configuration:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;IP&lt;/li&gt;
&lt;li&gt;WIFI (or ethernet)&lt;/li&gt;
&lt;li&gt;hostname&lt;/li&gt;
&lt;li&gt;SSH keys
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--63clx1v9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vdxxs4jcgdnrkbv0m5k7.gif" alt="CONFIGURE NODES"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-download-os-images"&gt;
  &lt;/a&gt;
  3. Download OS images
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F1wK2jRb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rk0i5zs3k6g4d90ad7on.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F1wK2jRb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rk0i5zs3k6g4d90ad7on.gif" alt="Download"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-write-images"&gt;
  &lt;/a&gt;
  4. Write images
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--885Hfp3L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdxf1pb32x5ehe0yf4tm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--885Hfp3L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdxf1pb32x5ehe0yf4tm.gif" alt="Write images"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-open-generated-images"&gt;
  &lt;/a&gt;
  5. Open generated images
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_KzHmedn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwgqsrd3z30vv14c8i7f.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_KzHmedn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwgqsrd3z30vv14c8i7f.gif" alt="Open generated images"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#installl-kubernetes-with-k3s"&gt;
  &lt;/a&gt;
  Installl kubernetes with &lt;a href="https://k3s.io/"&gt;k3s&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;For this I will use ansible. It makes it easier to do all the install work.&lt;br&gt;
I will use the following repo: &lt;a href="https://github.com/k3s-io/k3s-ansible"&gt;https://github.com/k3s-io/k3s-ansible&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#clone-the-repo"&gt;
  &lt;/a&gt;
  Clone the repo
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://github.com/k3s-io/k3s-ansible.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#get-into-the-cloned-repo"&gt;
  &lt;/a&gt;
  Get into the cloned repo
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;k3s-ansible
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#create-our-inventory-from-the-sample"&gt;
  &lt;/a&gt;
  Create our inventory from the sample
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cp&lt;/span&gt; &lt;span class="nt"&gt;-R&lt;/span&gt; inventory/sample inventory/my-cluster
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#edit-raw-inventorymyclusterhostsini-endraw-"&gt;
  &lt;/a&gt;
  Edit &lt;code&gt;inventory/my-cluster/hosts.ini&lt;/code&gt;
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nano inventory/my-cluster/hosts.ini
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ini"&gt;&lt;code&gt;&lt;span class="nn"&gt;[master]&lt;/span&gt;
&lt;span class="err"&gt;192.168.1.100&lt;/span&gt;

&lt;span class="nn"&gt;[node]&lt;/span&gt;
&lt;span class="err"&gt;192.168.1.101&lt;/span&gt;
&lt;span class="err"&gt;192.168.1.102&lt;/span&gt;
&lt;span class="err"&gt;192.168.1.103&lt;/span&gt;
&lt;span class="err"&gt;192.168.1.104&lt;/span&gt;
&lt;span class="err"&gt;192.168.1.105&lt;/span&gt;

&lt;span class="nn"&gt;[k3s_cluster:children]&lt;/span&gt;
&lt;span class="err"&gt;master&lt;/span&gt;
&lt;span class="err"&gt;node&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#edit-raw-inventorymyclustergroupvarsallyml-endraw-"&gt;
  &lt;/a&gt;
  Edit &lt;code&gt;inventory/my-cluster/group_vars/all.yml&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In my case edit the &lt;code&gt;ansible_user&lt;/code&gt; to &lt;code&gt;ubuntu&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;k3s_version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1.17.5+k3s1&lt;/span&gt;
&lt;span class="na"&gt;ansible_user&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu&lt;/span&gt;
&lt;span class="na"&gt;systemd_dir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/etc/systemd/system&lt;/span&gt;
&lt;span class="na"&gt;master_ip&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hostvars[groups['master'][0]]['ansible_host']&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;|&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;default(groups['master'][0])&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}"&lt;/span&gt;
&lt;span class="na"&gt;extra_server_args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
&lt;span class="na"&gt;extra_agent_args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#be-ready-for-the-power"&gt;
  &lt;/a&gt;
  Be ready for the power!
&lt;/h3&gt;

&lt;p&gt;Execute the ansible-playbook to install k8s in the nodes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ansible-playbook site.yml &lt;span class="nt"&gt;-i&lt;/span&gt; inventory/my-cluster/hosts.ini
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#install-kubectl-in-your-computer"&gt;
  &lt;/a&gt;
  Install kubectl in your computer
&lt;/h3&gt;

&lt;p&gt;In my case macOS&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;kubectl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#get-the-kubectl-config-from-any-of-your-master-nodes"&gt;
  &lt;/a&gt;
  Get the kubectl config from any of your &lt;strong&gt;master&lt;/strong&gt; nodes
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;scp ubuntu@192.168.1.100:~/.kube/config ~/.kube/config
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#verify-installation"&gt;
  &lt;/a&gt;
  Verify installation.
&lt;/h3&gt;

&lt;p&gt;Check that all nodes are in STATUS 'Ready'&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl get nodes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#deploy-test"&gt;
  &lt;/a&gt;
  Deploy test
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#create-a-local-dns-entry-for-the-test"&gt;
  &lt;/a&gt;
  Create a local DNS entry for the test
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo echo&lt;/span&gt; &lt;span class="s2"&gt;"192.168.1.100 test.com"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm going to use traefik because is installed by default with k3s.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;apps/v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deployment&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx-deployment&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;matchLabels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx&lt;/span&gt;
  &lt;span class="na"&gt;replicas&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="c1"&gt;# tells deployment to run 2 pods matching the template&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx&lt;/span&gt;
    &lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx:1.14.2&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;containerPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Service&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx-service&lt;/span&gt;
  &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx-service&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;http&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx-deployment&lt;/span&gt;
&lt;span class="s"&gt;--------&lt;/span&gt;

&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;extensions/v1beta1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Ingress&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx-ingress&lt;/span&gt;
  &lt;span class="na"&gt;annotations&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;kubernetes.io/ingress.class&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;traefik&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;test.com"&lt;/span&gt;
    &lt;span class="na"&gt;http&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;paths&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt;
        &lt;span class="na"&gt;backend&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;serviceName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx-service&lt;/span&gt;
          &lt;span class="na"&gt;servicePort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%C2%A0verify-pods-are-up"&gt;
  &lt;/a&gt;
   Verify pods are up
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get pods
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#go-to-raw-httptestcom-endraw-on-your-browser"&gt;
  &lt;/a&gt;
  Go to &lt;code&gt;http://test.com&lt;/code&gt; on your browser
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl http://test.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Its working!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cleanup"&gt;
  &lt;/a&gt;
  Cleanup
&lt;/h2&gt;

&lt;p&gt;Remember to remove the &lt;code&gt;test.com&lt;/code&gt; line in &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>raspberrypi</category>
      <category>cluster</category>
    </item>
    <item>
      <title>JavaScript Interview Question #38: Can you add multiple arrays in JavaScript?</title>
      <author>Coderslang: Become a Software Engineer</author>
      <pubDate>Thu, 06 May 2021 11:40:55 +0000</pubDate>
      <link>https://dev.to/coderslang/javascript-interview-question-38-can-you-add-multiple-arrays-in-javascript-100m</link>
      <guid>https://dev.to/coderslang/javascript-interview-question-38-can-you-add-multiple-arrays-in-javascript-100m</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AbQwl-Yx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/js-test-38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AbQwl-Yx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/js-test-38.png" alt="js-test-38"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Can you add multiple arrays in JavaScript? What’s the output?&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;The function &lt;code&gt;add(x, y, z)&lt;/code&gt; applies the &lt;code&gt;+&lt;/code&gt; operator to the provided arguments. Or, simply put, adds them up.&lt;/p&gt;

&lt;p&gt;In line 5 we provide it with 3 arrays.&lt;/p&gt;

&lt;p&gt;Whenever you try to add arrays in JavaScript, they will be first converted to strings. Every element is separated from the next one by a comma and a single space. In our case:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1, 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3, 4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;5, 6&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then these strings are concatenated, or “glued” together to make a result.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;ANSWER&lt;/strong&gt;: a string &lt;code&gt;1, 23, 45, 6&lt;/code&gt; will be printed to the console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://js.coderslang.com"&gt;Learn Full-Stack JavaScript&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What I learnt from the GSOC 2021 Application</title>
      <author>Sanjay Singh Rajpoot</author>
      <pubDate>Thu, 06 May 2021 11:12:11 +0000</pubDate>
      <link>https://dev.to/sanjaysinghrajpoot/what-i-learnt-from-the-gsoc-2021-application-1jlh</link>
      <guid>https://dev.to/sanjaysinghrajpoot/what-i-learnt-from-the-gsoc-2021-application-1jlh</guid>
      <description>&lt;p&gt;Here are all the problems that I faced while applying to GSOC 2021 as a learner🙂&lt;/p&gt;

&lt;p&gt;This is my first article😊&lt;/p&gt;

&lt;p&gt;It all started in the month of January. When I started my Open Source contributions, I faced a lot of problems😢 using git and git-bash but slowly I got the grip and started making Pull Request to some of my own repositories. With this, I uploaded all my project to the Github website. All this took time and I reached the end of January. By the beginning of February, I planned to raise some issue to some popular repo. I raised some documentation and some typing errors. These helped me gained some knowledge on how to raise a PR and how to write an issue template. At the end of February, I shortlisted some organisation🧧 based on my interest and skill set which are present in GSOC as well. Then I started reading their codebase to understand the working of the web app. In some days time, I was able to contribute some examples to the website. Google then released some changes for the GSOC program 😮&lt;/p&gt;

&lt;p&gt;Some major changes &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Time period was reduced to 1.5 months&lt;/li&gt;
&lt;li&gt;Stipend reduced to $1500&lt;/li&gt;
&lt;li&gt;More students to be selected this year&lt;/li&gt;
&lt;li&gt;Organisations reduced &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The number of organisations selected for this year was nearly the same, some organisations were replaced with new ones and some removed. The application process was the same as for the previous years. We have to prepare a proposal and submit it to the organisation before the deadline. The main ingredient of the application process is to prepare a really good proposal, which in itself is a tough task. I have applied for the Processing organization. It was a really good learning experience for me as a learner I get to know how to communicate with others and build a better connection with the Open Source Community. &lt;/p&gt;

&lt;p&gt;Thanks for scrolling 🤗&lt;/p&gt;

</description>
      <category>gsoc</category>
      <category>googlecloud</category>
      <category>googlesummerofcode</category>
      <category>google</category>
    </item>
    <item>
      <title>How to Manage Remote Development Teams</title>
      <author>DevGraph</author>
      <pubDate>Thu, 06 May 2021 11:09:43 +0000</pubDate>
      <link>https://dev.to/devgraph/how-to-manage-remote-development-teams-4e10</link>
      <guid>https://dev.to/devgraph/how-to-manage-remote-development-teams-4e10</guid>
      <description>&lt;p&gt;By &lt;a href="https://www.linkedin.com/in/duddukuru/"&gt;Ravi Duddukuru&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The pandemic has forever changed the way we work. What was once a luxury, has now become the norm. What we are referring to is, of course, remote working. But there were companies that were working on a completely remote model long before the pandemic hit the world. In this webinar we have an expert panel, with years of experience in remote working, discuss matters associated with this model, and share insights with us that they have gained over the years.&lt;/p&gt;

&lt;p&gt;The expert panel includes:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mark Hahn&lt;/strong&gt;, Director of Cloud Strategies and DevOps, Ciber Global (Moderator)&lt;br&gt;
&lt;strong&gt;Rahul Subramaniam&lt;/strong&gt;, CEO, DevFactory&lt;br&gt;
&lt;strong&gt;Raza Syed&lt;/strong&gt;, Head of Engineering, Microsoft&lt;br&gt;
&lt;strong&gt;Bill Page&lt;/strong&gt;, Global Operations Director, Ernst &amp;amp; Young&lt;br&gt;
&lt;strong&gt;P J Singh&lt;/strong&gt;, VP, Technology, Wells Fargo &lt;/p&gt;

&lt;p&gt;Here are some of the highlights that were discussed in the webinar:&lt;/p&gt;

&lt;p&gt;• Origins of remote working&lt;/p&gt;

&lt;p&gt;• Challenges in managing remote teams&lt;/p&gt;

&lt;p&gt;• Things you didn’t know that could be done remotely&lt;/p&gt;

&lt;p&gt;• How agile processes have adapted to being remote&lt;/p&gt;

&lt;p&gt;• The types of measurement that apply in a virtual environment&lt;/p&gt;

&lt;p&gt;• How to ensure new hires pick up the themes and the mission of a particular organization&lt;/p&gt;

&lt;p&gt;• Sococo and Microsoft Mesh &lt;/p&gt;

&lt;p&gt;Below is a detailed look at each of the topics that were discussed by our experts.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#origins-of-remote-working"&gt;
  &lt;/a&gt;
  Origins of remote working
&lt;/h2&gt;

&lt;p&gt;According to Rahul Subramaniam, the CEO of DevFactory, the practice of remote-working began in the late 90s and early 2000s, when offshore offices were established as a cost-cutting measure. They slowly evolved over time into multiple flavors which could be broadly listed out as remote, virtual, hybrid, and then time-zone-centric remote.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#challenges-in-managing-remote-teams"&gt;
  &lt;/a&gt;
  Challenges in managing remote teams
&lt;/h3&gt;

&lt;p&gt;Speaking on the challenges in managing remote teams, Raza Syed, Head of Engineering at Microsoft, explained that he sorts the challenges into five categories. The first is about communication. “When you’re [working] in remote, teams are in different time zones. It is critical that you become more structured [in] sharing information more.” He also noted that the leadership should support different modes of communication and practice looping folks in, so that trust is built among the teams.&lt;/p&gt;

&lt;p&gt;On the second challenge, Raza Syed elaborated that, it is critical to have a great rapport or relationship between individuals in a team so they can do their best work. “Building that social connection in a virtual mode is a different ball game.” &lt;/p&gt;

&lt;p&gt;Further Raza also noted that handling time zones can become very challenging.&lt;/p&gt;

&lt;p&gt;On the fourth challenge, Raza Syed talked about the leadership style. “We are willing to make sacrifices, all of us, equally with equity. If that culture you build as a leadership you will have a very effective remote team.”&lt;/p&gt;

&lt;p&gt;The last challenge that Raza Syed mentions is that of growth concerns among remote teams. “You have to make sure that you’re setting a culture in your organization that being in remote doesn’t hamper your career velocity.”&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#things-you-didnt-know-that-could-be-done-remotely"&gt;
  &lt;/a&gt;
  Things you didn’t know that could be done remotely
&lt;/h3&gt;

&lt;p&gt;Rahul Subramaniam stated, “In our experience, we can do pretty much everything remotely.” Adding to Raza’s observations, Rahul says that traditional managers feel insecure about whether their employees are working or not. He called for a change in management style and highlighted the need for clear communication. “If you are very clear in your communication, in your expectations, then everything can work”.&lt;/p&gt;

&lt;p&gt;“For individuals, there is a factor of discipline that has to come in, in terms of how you dedicate your time to work.” &lt;/p&gt;

&lt;p&gt;Rahul further emphasized that decision-making is the key when teams are working remotely. “Decision-making is one of those things that can make or break teams as they move to virtual. Making sure that everyone feels not disenfranchised (sic) when it comes to decision making is really important … I think decision-making has to become more async via more written communication rather than the off conversation that you have in the hallways or in the office.”&lt;/p&gt;

&lt;p&gt;Raza added to Rahul’s comments, “Now you have to focus on making sure there is flexibility in your processes … what we are finding is, once your processes adapt to provide that flexibility … the potential that whole virtual environment, virtual teams provide you is completely immense. You can get to the talent from around the globe and have it part of your team and then you can effectively run those things. It’s pretty phenomenal but the primary thing as I said is your leadership style has to adjust, your infrastructure has to change and in some ways your core processes have to change.”&lt;/p&gt;

&lt;p&gt;P J Singh interjected with his take on management style and emphasized that remote working has forced a change in the management style. He noted that companies are now moving away from the command and control management style to an empower and encourage style of management.&lt;/p&gt;

&lt;p&gt;“There is a huge shift in general, regardless of whether we’re going virtual or not in the management style for a modern-day organization. It has become much more critical with the advent of virtual teams. Which is, move from command and control management style to empower and encourage [style of management]. The reason why I say it’s important is because, one of the foundations of how you can have command and control is through monitoring. And that is really much more difficult when your organization is virtual. And so you’re like forced naturally into more of an empower and encourage management style and leadership style … as we go more and more virtual … It has a number of ripple effects in general but that is one aspect of the leadership style that has been changing across the board naturally but has just been accelerated so much because we now have to manage virtual teams.”&lt;/p&gt;

&lt;p&gt;Adding to Singh’s comments, Bill Paige said that businesses, in general, are moving to a production measurement rather than an hour measurement.“I think what we’re moving towards, not just in the remote and virtual world but in a lot of business in general, other than straight service; I think you’re looking at a production measurement rather than an hour measurement.”&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-agile-processes-have-adapted-to-being-remote"&gt;
  &lt;/a&gt;
  How agile processes have adapted to being remote
&lt;/h3&gt;

&lt;p&gt;Rahul felt that agile software development and remote working suit each other very well. “Agile is very conducive or actually very well suited to this complete virtual development mode because it hinges on a stand up that lasts about fifteen to twenty minutes and no more … Beyond that, as long as you are very disciplined about your communication and you can make it work in an async manner, agile can actually work brilliantly. Like everyone else has said before:&lt;/p&gt;

&lt;p&gt;You can leverage talent that’s global not remote or local no geography. You can actually have work that is getting done literally 24/7 by virtue of the fact that your team is all distributed anywhere they like. And you can make use of that overlap.&lt;/p&gt;

&lt;p&gt;And as long as you have the right tools to allow for that async handovers in those communications, agile actually works really really well. Agile works better than when everyone is in an office together and you have that one slot where you have to make everything work. It forces you to go do your own thing. Do the stand up and then go do your own thing. Be the individual contributor or whatever, get your work done, then bring it all back. It enforces a certain discipline automatically. So again, I think agile is very well suited for this.”&lt;/p&gt;

&lt;p&gt;P J Singh highlighted the importance of collaboration in a remote team that is operating on an agile development framework. “If we can create that collaboration and opportunities of close communication, within a virtual team, then we can keep the values that an agile organization brings even with a remote team.”&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-types-of-measurement-that-apply-in-a-virtual-environment"&gt;
  &lt;/a&gt;
  The types of measurement that apply in a virtual environment
&lt;/h3&gt;

&lt;p&gt;Speaking about the types of measurement that apply in a virtual environment, Raza Syed said that a lot of metrics that apply to a physically present employee still apply to a remote employee. And he felt there was no change in the measurement of employee productivity owing to a virtual environment. &lt;/p&gt;

&lt;p&gt;“The good news from our perspective was whether you were remote or whether you’re in person a lot of those metrics still apply. So from my point of view I’d say is that, once you implement the remote model or culture effectively; the difference between if someone is remote or not will diminish. And so is the metrics. The culture you end up bringing is, if a developer whether they’re coming to the office or they’re remote, if they’re generating the same metrics … better in some cases, they can be judged just like any other physically present employee.”&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-ensure-new-hires-pick-up-the-themes-and-the-mission-of-a-particular-organization"&gt;
  &lt;/a&gt;
  How to ensure new hires pick up the themes and the mission of a particular organization
&lt;/h2&gt;

&lt;p&gt;According to Raza Syed, one of the most important things to do with new hires is to give them an opportunity to engage and avoid the pitfalls of a one-sided communication. He also said that one should establish a culture of getting and providing feedback in an organization.&lt;/p&gt;

&lt;p&gt;“You have to really group people with their mentors/peers depending upon which career stage they’re starting in. So that they spend quality time with those folk … we have increased the opportunity for one on one with managers as well as with the various team meetings so that they can hear more about it. Those are all the right steps. But one thing I would say is, it’s critical that you give them an opportunity to engage. So that it doesn’t become a one-sided communication … You have to establish a culture where they’re comfortable getting feedback and also providing feedback goes a long way.”&lt;/p&gt;

&lt;p&gt;Bill Page added to Raza’s comments and says that his firm (Ernst &amp;amp; Young) firmly embraces the concept of diversity and inclusion. He felt that it is important for organizations to make new hires feel comfortable. And according to Bill Page, this comfort would yield much better performance in the organization. &lt;/p&gt;

&lt;p&gt;“Part of making this work is you have to have this feeling of belonging. That you’re not just sitting behind a computer at a desk remotely from everybody else … You gotta remember that those are people over there, they’re your team members, they have other life besides work. And to just talk about that casually, be encouraging, offer help when you can for something outside of the project you’re focused on … People will tend to ping each other during chats. It might even be a personal thing. Don’t discourage that … When you’re remote give the people the ability to talk about something other than the topic at hand. And talk about something personal that’s going on … You guys probably heard of an acronym D&amp;amp;I. Diversity and Inclusiveness. Our firm is firmly behind that. And that is, especially in a global organization and remote working. You have so many different types of people, so many backgrounds, so many different thought processes. By drawing out the diversity of thought that you have. And I am not just talking about racially or age or anything like that. It’s just everybody is different. And to make them comfortable to bring what they have to the table and that starts with that opening, comfortability, making you feel like you’re part of the team … You will get so much better performance. This is not really just for remote. That would be anything. But in remote it’s very important to have that time, let people talk a little bit of personal of what’s going on with them. Keep it airy and open. Little joke here or there. Something funny is always great. Keep it entertaining.”&lt;/p&gt;

&lt;p&gt;Rahul added to Page’s comments and talks about a concept called “coffee morning” and a tool called, Sococo. &lt;/p&gt;

&lt;p&gt;“There are two approaches [that we take]:&lt;/p&gt;

&lt;p&gt;First, almost all managers or senior managers within the org do something called a ‘coffee morning’. So for example, I run a coffee morning three days a week. It’s a half an hour slot where anyone is welcome to come join in. It’s like how we talk, we reserve that slot specifically for general conversation. Three days a week. It’s a thirty-minute slot that allows us to talk about anything. Anything about business. Anything about personal stuff. Vacations. Hobbies. Photography, Whatever. &lt;/p&gt;

&lt;p&gt;The second thing we found incredibly valuable is a tool called, Sococo, which basically gives us virtual presence. So we have models of our virtual offices where people actually show up in rooms. If the people are talking we know that they’re talking to each other. That feeling of presence you know where you want to see whether someone is in the office. The fact that they’re in the office. The fact that two people are talking to each other in a room and you don’t want to disturb them, when they’re actually talking. Things like that are incredibly valuable in building that social fabric around work which we missed when we didn’t have a tool like Sococo.”&lt;/p&gt;

&lt;p&gt;As the discussion approached its conclusion, the moderator, Mark Hahn, asked Raza Syed about a Microsoft tool called, Microsoft Mesh. Raza Syed responded, “I think this is a great segue into what Rahul said. Microsoft Mesh kind of highlights that view. To be really effective in the virtual environment there are tools like Teams and Zoom that are great. Just turning on the video makes a huge difference … There are three other aspects that are becoming critical with things like eye contact and engagement that’s great. The second thing is experiencing things together. That’s the second part, how do you collaborate together? And we have tools like Whiteboard and most of the things you can write, you can write code together, but we need to turn the dial on that. And the third thing is, connect from anywhere. When we have meetings, someone may have sophisticated setups, such as with the HoloLens, and then there might be someone on a computer without any HoloLens and then someone might even be on a phone. So how do you create an immersive experience engaging across all these form factors? There are new sets of tools that are coming. Microsoft has announced Microsoft Mesh, check it out. It’s pretty cool. So that’s where the next generation tech is coming.”&lt;/p&gt;

&lt;p&gt;With those comments from Raza Syed, the discussion/webinar was wrapped up by Max Bowen. Catch the full webinar below.&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Lq_Zyqg5lGA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>hiring</category>
      <category>developer</category>
    </item>
    <item>
      <title>AWS Cloud Front Functions</title>
      <author>Vikas Solegaonkar</author>
      <pubDate>Thu, 06 May 2021 11:03:04 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-cloud-front-functions-471c</link>
      <guid>https://dev.to/aws-builders/aws-cloud-front-functions-471c</guid>
      <description>&lt;p&gt;Lambda functions stormed the world of computation, followed by Lambda @ Edge. But beyond the edge, AWS recently introduced the Cloud front Functions. They can do wonders on the content we serve through the Cloud Front. We can do wonders with such functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-cloud-front-function"&gt;
  &lt;/a&gt;
  What is Cloud Front Function
&lt;/h2&gt;

&lt;p&gt;Cloud Front distributions have to perform a level of computation when they serve out traffic to our requests. This includes caching, URL routing to the right origin, etc. The Cloud Front functions allow us to play with this. Now it is not just choosing a managed caching model or predefined origin policy. With Cloud Front functions, we can process each request independently, with our custom code - at a very low cost.&lt;/p&gt;

&lt;p&gt;The below image (from AWS documentation) describes the relation between Lambda, Lambda @ Edge, Cloud Front Functions, Cloud Front distributions and the Origin.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p6d0kzzG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620288625028/t_nQVeDbo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p6d0kzzG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620288625028/t_nQVeDbo.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;p&gt;Let us check out an example, and play with the Cloud Front functions. There is one thing that any web developer dreads. It is perhaps the greatest enemy of any web developer. Something we all wished did not exist. Yet, we have to face it. You guessed it right - the Internet Explorer! I don't know why, some people cannot get over it, and they have to use it for visiting my website.&lt;/p&gt;

&lt;p&gt;I know it is possible, and I can fix the issues and make my website work for IE as well. But, I feel someone who is still stuck on IE does not deserve all that effort. I would rather bar them from visiting my website. &lt;/p&gt;

&lt;p&gt;Cloud Front functions let us do that. Let's see how.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-function"&gt;
  &lt;/a&gt;
  Create a Function
&lt;/h2&gt;

&lt;p&gt;To start with, of course, you have to log into the AWS console and go over to the Cloud Front page. On the left panel, we can see a new entry - Functions. Click on that and click on Create Function. There, we can see a text editor - to add our code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vRkiMm7d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620290663664/mE77xHxqE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vRkiMm7d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620290663664/mE77xHxqE.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add this code in there:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;newurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://thewiz.net/usechrome.html`&lt;/span&gt; 

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;user-agent&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;user-agent&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Trident&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Edg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;302&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;statusDescription&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Found&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;location&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newurl&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, click on Publish, and then the button "Publish and Update".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#associate-with-distribution"&gt;
  &lt;/a&gt;
  Associate with Distribution
&lt;/h2&gt;

&lt;p&gt;Finally, go to the fourth tab - Associate. There, we can choose a particular Cloud Front distribution that we want to associate with our application. We can choose the event on which the function should be invoked. Choose as below and click associate.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9QbPE5Hj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620290902177/4eAfCAAAS7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9QbPE5Hj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620290902177/4eAfCAAAS7.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And There!, we have setup the Cloud Front function. Now, try to visit the page using a Chrome browser. We can see the page without any problem. If we try to use IE, we get an immediate warning - please use Chrome.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;This was a simple fun example to prove the point. But, the beauty here is that these functions are running far away from the regions and data centers. These are running on the Cloud Front - very close to our browser. So the speed of response is fabulous. We can add some more intricate logic here - JWT validation, minor changes to the response HTML - based on various factors. Thus, the Cloud Front distribution is not static anymore. It is dynamic, yet superfast.&lt;/p&gt;

&lt;p&gt;Check out &lt;a href="https://github.com/aws-samples/amazon-cloudfront-functions"&gt;this link&lt;/a&gt; for a few useful code samples.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>lambda</category>
      <category>serverless</category>
      <category>cloudfront</category>
    </item>
    <item>
      <title>Do you really need a dashboard?</title>
      <author>Helen Anderson</author>
      <pubDate>Thu, 06 May 2021 10:56:00 +0000</pubDate>
      <link>https://dev.to/helenanders26/do-you-really-need-a-dashboard-57o5</link>
      <guid>https://dev.to/helenanders26/do-you-really-need-a-dashboard-57o5</guid>
      <description>&lt;p&gt;As analysts, we’re often asked to quickly produce dashboards or metrics that aim to solve a specific problem. This is more challenging than it sounds as data isn’t always available, in the right format, and sometimes a dashboard isn’t the right way to present insights we do find. &lt;/p&gt;

&lt;p&gt;Scoping sessions help us to understand the underlying problem so we can deliver what the stakeholder needs, and not just what they think they need. If you’ve ever read through a request for data and asked yourself ‘what problem are we actually solving?’, or ‘how are they going to use this data?’ it’s time to run a scoping session.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;a href="#chapter-1"&gt;Why?&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-2"&gt;What?&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-3"&gt;Who?&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-4"&gt;How?&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-5"&gt;When?&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-6"&gt;What’s next?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#help-me-understand-the-problem-this-data-will-solve"&gt;
  &lt;/a&gt;
  Help me understand the problem this data will solve?
&lt;/h3&gt;

&lt;p&gt;Open up the conversation by trying to understand why the dashboard or data has been requested. The answer will help give context to the request and how it will help make a decision, optimise a feature, or inform. This context is great for getting to grips with the data request and also appreciating the greater vision our stakeholder has.&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what"&gt;
  &lt;/a&gt;
  What?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-definition-of-done"&gt;
  &lt;/a&gt;
  What is the definition of done?
&lt;/h3&gt;

&lt;p&gt;The answer to this question helps determine what will solve the problem. The effort involved in producing a one-off number, a chart for a slide deck, a csv file they edit themselves, or a dashboard that refreshes each month varies. Teasing out what the stakeholder thinks they need during a face-to-face conversation isn’t about ‘solutionising’ but finding out what the stakeholder’s expectations are.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-data-do-you-have-access-to-already"&gt;
  &lt;/a&gt;
  What data do you have access to already?
&lt;/h3&gt;

&lt;p&gt;Any insights already gained make a great starting point. This doesn’t have to be data or research, any links to relevant documentation, websites, and meeting recordings can be useful while understanding the scope of the request.&lt;/p&gt;

&lt;p&gt;It’s also worth finding out if the stakeholder has any existing reports or dashboards that need to be aligned to. If there is business logic here or an expected range results need to be in getting access to this early is useful.&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who"&gt;
  &lt;/a&gt;
  Who?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#is-there-anyone-else-working-on-this"&gt;
  &lt;/a&gt;
  Is there anyone else working on this?
&lt;/h3&gt;

&lt;p&gt;Just like finding out if there are existing numbers to align to, it’s important to find out if there is someone else working on producing something similar. Understanding their roles and responsibilities as well as your own means the project can get off on the right foot.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#who-will-need-access-to-the-insights-or-report"&gt;
  &lt;/a&gt;
  Who will need access to the insights or report?
&lt;/h3&gt;

&lt;p&gt;This is important to finalise who needs to see the results, but also who doesn’t. If the final report is commercially sensitive it’s worth getting this information in advance. Security groups may need to be created and the stakeholder can be reminded of their responsibilities for keeping the data secure.&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  How?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-can-we-get-access-to-the-data-we-need"&gt;
  &lt;/a&gt;
  How can we get access to the data we need?
&lt;/h3&gt;

&lt;p&gt;This is relevant when you need access to new data or application-level data that isn’t available in the data warehouse. If you need to engage the help of DBAs or data engineers from other teams you should get this arranged early. No analysis work can begin if you have no data to work with.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-would-you-prefer-results-be-delivered"&gt;
  &lt;/a&gt;
  How would you prefer results be delivered?
&lt;/h3&gt;

&lt;p&gt;Talk through options for a final report at a very high level. This doesn’t mean you need to go into the details but broadly talk through the options to be considered. Discuss the trade-offs between all the possible options and if there are any uncertainties and data gaps you can foresee.&lt;/p&gt;

&lt;p&gt;It’s important to note you shouldn’t come up with a solution based on similar reports done in the past. The key to scoping the requirements is to understand the problem and create a solution, not replicate what’s been done for another project.&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when"&gt;
  &lt;/a&gt;
  When?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#are-there-any-hard-deadlines-to-meet"&gt;
  &lt;/a&gt;
  Are there any hard deadlines to meet?
&lt;/h3&gt;

&lt;p&gt;This is relevant if you are required to pull numbers for a press release or a board report with a deadline. Knowing this will help you focus on creating a timely solution that maybe isn’t perfectly polished. &lt;/p&gt;

&lt;p&gt;Discuss your confidence in the data only if you have worked with it before and are confident it hasn’t changed. If you haven’t seen the data don’t promise a delivery date. You need to take the time to think through the requirements and see what you are dealing with.&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What’s next?
&lt;/h2&gt;

&lt;p&gt;The scoping session process isn’t over at the end of your meeting. Show that you have understood the problem by writing up what you believe the requirements are, the timeframes you are working with, and the next steps for your stakeholder.&lt;/p&gt;

&lt;p&gt;This pattern doesn’t work for every situation so you will need to adapt your questions for each project. The point here is to build relationships and offer help to stakeholders so they gain trust in us and our process. Encouraging our stakeholders to really think about what they need from their data will make for smoother projects both now and in the future.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#read-more"&gt;
  &lt;/a&gt;
  Read more
&lt;/h2&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/helenanders26" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nDlJ2gv9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HjGs-_-t--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/22532/48443e4d-9075-4869-9df7-122522595b71.jpeg" alt="helenanders26 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/helenanders26/data-democracy-or-data-anarchy-36d5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Data democracy or data anarchy?&lt;/h2&gt;
      &lt;h3&gt;Helen Anderson ・ Oct  1 '20 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#database&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#datagovernance&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#culture&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#leadership&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/helenanders26" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nDlJ2gv9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HjGs-_-t--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/22532/48443e4d-9075-4869-9df7-122522595b71.jpeg" alt="helenanders26 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/helenanders26/shaping-your-team-culture-52bg" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Shaping your team culture&lt;/h2&gt;
      &lt;h3&gt;Helen Anderson ・ Sep  9 '20 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#culture&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#leadership&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#team&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;This post originally appeared on &lt;a href="https://helenanderson.co.nz/scoping-sessions/"&gt;helenanderson.co.nz&lt;/a&gt;&lt;/p&gt;

</description>
      <category>dataanalysis</category>
      <category>analytics</category>
      <category>analyst</category>
      <category>howto</category>
    </item>
  </channel>
</rss>
