<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>$weeklyUpdate #22 (May 10, 2021): Latest MongoDB Tutorials, Events, Podcasts, &amp; Streams!</title>
      <author>Adrienne Tacke</author>
      <pubDate>Mon, 10 May 2021 23:19:18 +0000</pubDate>
      <link>https://dev.to/mongodb/weeklyupdate-22-may-10-2021-latest-mongodb-tutorials-events-podcasts-streams-426n</link>
      <guid>https://dev.to/mongodb/weeklyupdate-22-may-10-2021-latest-mongodb-tutorials-events-podcasts-streams-426n</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hi-everyone"&gt;
  &lt;/a&gt;
  üëã Hi everyone!
&lt;/h1&gt;

&lt;p&gt;Welcome to MongoDB $weeklyUpdate!&lt;/p&gt;

&lt;p&gt;Here, you'll find the latest developer tutorials, upcoming official MongoDB events, and get a heads up on our latest Twitch streams and podcast, curated by &lt;a href="https://twitter.com/AdrienneTacke"&gt;Adrienne Tacke&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#new-on-youtube"&gt;
  &lt;/a&gt;
  üé• New on YouTube!
&lt;/h1&gt;

&lt;p&gt;We have lots of new content to share with you! Take a look at our &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube channel&lt;/a&gt; to see the latest premieres from our Dev Rel team!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mongodb-amp-nodejs-aggregation-amp-data-analysis-part-2-of-4"&gt;
  &lt;/a&gt;
  &lt;strong&gt;MongoDB &amp;amp; Node.js: Aggregation &amp;amp; Data Analysis (Part 2 of 4)&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;When you want to analyze data stored in MongoDB, you can use MongoDB's powerful aggregation framework to do so. In part two of this quick start tutorial for beginners, &lt;a href="https://twitter.com/lauren_schaefer"&gt;Lauren Schaefer&lt;/a&gt; provides a high-level overview of the aggregation framework and demonstrates how to use it in a Node.js script.  She explains how to use aggregate() to analyze data.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iz37fDe1XoM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mapping-sql-terms-and-concepts-to-mongodb"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Mapping SQL Terms and Concepts to MongoDB&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/JoeKarlsson1"&gt;Joe Karlsson&lt;/a&gt; has another popular topic out! When you need to model data, is your first instinct to start breaking it down into rows and columns? It was for Joe, and many others too. When you want to develop apps in a modern, agile way, MongoDB databases can be the best option. In this video, we‚Äôll compare and contrast the terms and concepts in SQL databases and MongoDB.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UuNVpLIOHW8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üí° As always, be sure to like, subscribe, and turn on notifications for our &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube channel&lt;/a&gt; so you never miss a video!&lt;/strong&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#freshest-tutorials-on-devhub"&gt;
  &lt;/a&gt;
  üéì Freshest Tutorials on &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Want to find the latest MongoDB tutorials and articles created for developers, by developers? Look no further than our &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aggregation-pipeline-applying-benfords-law-to-covid19-data"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://developer.mongodb.com/article/aggregation-pipeline-covid19-benford-law/"&gt;Aggregation Pipeline: Applying Benford's Law to COVID-19 Data&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/MBeugnet"&gt;Maxime Beugnet&lt;/a&gt; and &lt;a href="https://developer.mongodb.com/author/john-page/"&gt;John Page&lt;/a&gt; use the MongoDB Aggregation Pipeline to apply Benford‚Äôs law on the COVID-19 data set from Johns Hopkins University.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-to-a-mongodb-database-using-nodejs"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.mongodb.com/blog/post/quick-start-nodejs-mongodb--how-to-get-connected-to-your-database"&gt;Connect to a MongoDB Database Using Node.js&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Part one of &lt;a href="https://twitter.com/lauren_schaefer"&gt;Lauren Schaefer&lt;/a&gt;'s popular series, Node.js and MongoDB. Here, she'll walk you though connecting to MongoDB in a Node.js application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mongodb-and-nodejs-tutorial-crud-operations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://developer.mongodb.com/quickstart/node-crud-tutorial/"&gt;MongoDB and Node.js Tutorial - CRUD Operations&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/lauren_schaefer"&gt;Lauren Schaefer&lt;/a&gt; shows you how to execute the CRUD (create, read, update, and delete) operations in MongoDB using Node.js in this step-by-step tutorial.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-automate-continuous-data-copying-from-mongodb-to-s3"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://developer.mongodb.com/how-to/automated-continuous-data-copying-from-mongodb-to-s3/"&gt;How to Automate Continuous Data Copying from MongoDB to S3&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Learn how to set up a continuous copy from MongoDB into an AWS S3 bucket in Parquet with &lt;a href="https://twitter.com/JoeKarlsson"&gt;Joe Karlsson&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#official-mongodb-events"&gt;
  &lt;/a&gt;
  üìÖ Official MongoDB &lt;a href="https://live.mongodb.com/events/#/calendar"&gt;Events&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Attend an official MongoDB event near you (virtual for now)! Chat with MongoDB experts, learn something new, meet other developers, and win some swag!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;May 18 (1:00 PM GMT | Nigeria) - &lt;a href="https://live.mongodb.com/events/details/mongodb-warri-nigeria-presents-join-our-expert-on-our-mini-workshop-on-how-to-scale-your-product-with-mongodb/"&gt;How to Scale Your Product With MongoDB&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;May 21 (11:00 AM GMT | Kenya) - &lt;a href="https://live.mongodb.com/events/details/mongodb-nairobi-kenya-presents-mongodb-community-mini-workshop-in-eldoret/"&gt;MongoDB Community Mini Workshop in Eldoret&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;May 21 (5:00 PM GMT | Global) - &lt;a href="https://live.mongodb.com/events/details/mongodb-mongodb-global-virtual-community-presents-removing-master-slave-terminology-from-apache-lucene/"&gt;Removing master/slave terminology from Apache Lucene&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;May 26 (4:00 PM GMT | Global) - &lt;a href="https://live.mongodb.com/events/details/mongodb-realm-global-community-presents-realm-kotlin-multiplatfrom-for-modern-mobile-apps/"&gt;Realm Kotlin Multiplatform for Modern Mobile Apps&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#mongodb-on-twitch"&gt;
  &lt;/a&gt;
  üì∫ MongoDB on &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;We stream tech tutorials, live coding, and talk to members of our community every Friday. Sometimes, we even stream twice a week! Be sure to &lt;a href="https://www.twitch.tv/mongodb"&gt;follow us on Twitch&lt;/a&gt; to be notified of every stream!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Latest Stream&lt;/em&gt;&lt;br&gt;
&lt;iframe src="https://clips.twitch.tv/embed?autoplay=false&amp;amp;clip=970171464&amp;amp;parent=dev.to" height="399" width="710"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Upcoming Streams&lt;/em&gt;&lt;br&gt;
May 21, 10am PDT - &lt;a href="https://live.mongodb.com/events/details/mongodb-mongodb-global-virtual-community-presents-removing-master-slave-terminology-from-apache-lucene/"&gt;Removing master-slave terminology from Apache Lucene&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üçø &lt;a href="https://www.twitch.tv/mongodb"&gt;Follow us&lt;/a&gt; on Twitch so you never miss a stream!&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#%F0%9F%8E%99-last-word-on-the-mongodb-podcast"&gt;
  &lt;/a&gt;
  üéô Last Word on the &lt;a href="https://mongodb.libsyn.com/"&gt;MongoDB Podcast&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Latest Episode&lt;/em&gt;&lt;br&gt;
&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5l6RZQ9vaPl7NsJNysrZW7"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Catch up on past episodes:&lt;br&gt;
Ep. 53 - &lt;a href="https://open.spotify.com/episode/25ar9muN29AXuaK2T1vz5x?si=R05pMFGsS5aZVBuAF5fG0g"&gt;The MERN Stack with Beau Carnes of freeCodeCamp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 52 - &lt;a href="https://open.spotify.com/episode/210MLQnorlVzx9MPdCc92e?si=S4NgOQnVSv6mdZOaEMpQ6g"&gt;Scaling Startups with Blerp and MongoDB&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 51 - &lt;a href="https://open.spotify.com/episode/6p2Q8G0NJ5GqmktfQvsrc0?si=2EzcsbrHTfO-JpHbdzexbQ"&gt;Scaling Startups - Funnelytics with Alexey Glazunov&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Not listening on Spotify? We got you! We're most likely on your favorite podcast network, including &lt;a href="https://podcasts.apple.com/us/podcast/the-mongodb-podcast/id1500452446"&gt;Apple Podcasts&lt;/a&gt;, &lt;a href="https://player.fm/series/the-mongodb-podcast"&gt;PlayerFM&lt;/a&gt;, &lt;a href="https://podtail.com/en/podcast/the-mongodb-podcast/"&gt;Podtail&lt;/a&gt;, and &lt;a href="https://www.listennotes.com/podcasts/the-mongodb-podcast-mongodb-0g6fUKMDN_y/"&gt;Listen Notes&lt;/a&gt; üòä)&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#mongodb-devrel-around-the-interwebz"&gt;
  &lt;/a&gt;
  üåç MongoDB DevRel around the Interwebz
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Watch our team do their thang at various conferences, meetups, and podcasts around the world (virtually, for now). Also, find external articles and guest posts from our DevRel team here!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üìÖ Upcoming&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#may-17-adrienne-tacke-techorama"&gt;
  &lt;/a&gt;
  May 17: &lt;a href="https://twitter.com/AdrienneTacke"&gt;Adrienne Tacke&lt;/a&gt; @ &lt;a href="https://techorama.be/agenda/session/there-is-no-developer-uniform/"&gt;Techorama&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Sr. Dev Advocate Adrienne Tacke gives one of her favorite talks "There is NO Developer Uniform!" at Techorama 2021!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#may-18-lauren-schaefer-codemotion-online-conference"&gt;
  &lt;/a&gt;
  May 18: &lt;a href="https://twitter.com/lauren_schaefer"&gt;Lauren Schaefer&lt;/a&gt; @ &lt;a href="https://events.codemotion.com/conferences/online/2021/online-tech-conference-spring/coming-soon"&gt;Codemotion Online Conference&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Staff Dev Advocate Lauren Schaefer will be at Codemotion Online Conference to give their talk "Top Ten Tips for Making Remote Work Actually Work Right Now"!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#may-26-lauren-schaefer-devsum"&gt;
  &lt;/a&gt;
  May 26: &lt;a href="https://twitter.com/lauren_schaefer"&gt;Lauren Schaefer&lt;/a&gt; @ &lt;a href="https://www.devsum.se/agenda/top-ten-tips-for-making-remote-work-actually-work-right-now"&gt;DevSum&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Staff Dev Advocate Lauren Schaefer will be at DevSum Conference to give their talk "Top Ten Tips for Making Remote Work Actually Work Right Now"!&lt;/p&gt;




&lt;p&gt;üí° These $weeklyUpdates are always posted to the &lt;a href="https://developer.mongodb.com/community/forums/"&gt;MongoDB Community Forums&lt;/a&gt; &lt;em&gt;first&lt;/em&gt;! &lt;a href="https://account.mongodb.com/account/register"&gt;Sign up&lt;/a&gt; today to always get first dibs on these $weeklyUpdates and other MongoDB announcements, interact with the MongoDB community, and help others solve MongoDB related issues!&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>database</category>
      <category>news</category>
      <category>programming</category>
    </item>
    <item>
      <title>Laravel Service Classes Explained</title>
      <author>Farhan Hasin Chowdhury</author>
      <pubDate>Mon, 10 May 2021 22:40:48 +0000</pubDate>
      <link>https://dev.to/fhsinchy/laravel-service-classes-explained-3m7p</link>
      <guid>https://dev.to/fhsinchy/laravel-service-classes-explained-3m7p</guid>
      <description>&lt;p&gt;Benjamin Franklin once said ‚Äî&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A place for everything, everything in its place.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This applies to software development as well. Understanding which portion of the code goes where is the key to a maintainable code base.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://laravel.com/"&gt;Laravel&lt;/a&gt; being an elegant web framework, comes with a pretty organized &lt;a href="https://laravel.com/docs/8.x/structure"&gt;directory structure&lt;/a&gt; by default but still I've seen a lot of people suffer.&lt;/p&gt;

&lt;p&gt;Don't get me wrong. It's a no brainer that controllers go inside the &lt;code&gt;controllers&lt;/code&gt; directory, no confusions whatsoever. The thing people often confuse themselves with is, what to write in a controller and what not to.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#project-codes"&gt;Project Codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-scenario"&gt;The Scenario&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#understanding-business-logic"&gt;Understanding Business Logic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#service-classes-to-the-rescue"&gt;Service Classes to the Rescue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#action-re-usability"&gt;Action Re-usability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts"&gt;Closing Thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#project-codes"&gt;
  &lt;/a&gt;
  Project Codes
&lt;/h1&gt;

&lt;p&gt;You can find an implementation of the service discussed in this article in the following repository:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/fhsinchy"&gt;
        fhsinchy
      &lt;/a&gt; / &lt;a href="https://github.com/fhsinchy/laravel-livewire-shopping-cart"&gt;
        laravel-livewire-shopping-cart
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A real-time shopping cart powered by Laravel, Livewire and TailwindCSS
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Apart from Laravel, the project makes use of &lt;a href="https://laravel-livewire.com/"&gt;Livewire&lt;/a&gt; and &lt;a href="https://tailwindcss.com/"&gt;TailwindCSS&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-scenario"&gt;
  &lt;/a&gt;
  The Scenario
&lt;/h1&gt;

&lt;p&gt;Take the following piece of code for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CartItemController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
        &lt;span class="nv"&gt;$total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart.index'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;'content'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'total'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'required|string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'price'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'required|numeric'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'quantity'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'required|integer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;

        &lt;span class="nv"&gt;$cartItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'price'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;floatval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;'quantity'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;intval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;'options'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;

        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;

        &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item added to cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;compact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'item'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'fail'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item not found'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$cartItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'plus'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'minus'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;

                    &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item updated in cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'fail'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item not found'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;destroy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;except&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item removed from cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'fail'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item not found'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a controller from an imaginary e-commerce project, responsible for managing the shopping cart. Although this is a perfectly valid piece of code, there are some problems.&lt;/p&gt;

&lt;p&gt;The controller also knows too much. Look at the &lt;code&gt;index&lt;/code&gt; method for example. It doesn't need to know whether the cart content comes from the session or database. Neither does it need to know how to calculate the total price of the cart items.&lt;/p&gt;

&lt;p&gt;A controller should be only responsible for transporting requests and responses. The inner details aka the business logic should be handled by other classes in the server.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#understanding-business-logic"&gt;
  &lt;/a&gt;
  Understanding Business Logic
&lt;/h1&gt;

&lt;p&gt;As explained in this &lt;a href="https://softwareengineering.stackexchange.com/questions/234251/what-really-is-the-business-logic"&gt;thread&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Business logic or domain logic is that part of the program which encodes the real-world business rules that determine how data can be created, stored, and changed. It prescribes how business objects interact with one another, and enforces the routes and the methods by which business objects are accessed and updated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In case of a simple shopping cart system, the business logic behind adding an item to cart can be described as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Take necessary product information (id, name, price, quantity) as input.&lt;/li&gt;
&lt;li&gt;Validate the input data.&lt;/li&gt;
&lt;li&gt;Form a new cart item.&lt;/li&gt;
&lt;li&gt;Check if the item already exists in the cart.&lt;/li&gt;
&lt;li&gt;If yes, update it's quantity and if no, add the newly formed item to cart.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now lets have a look at the &lt;code&gt;store&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="cd"&gt;/**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// validate the input data.&lt;/span&gt;
        &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'required|string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'price'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'required|numeric'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'quantity'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'required|integer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;

        &lt;span class="c1"&gt;// form a new cart item.&lt;/span&gt;
        &lt;span class="nv"&gt;$cartItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'price'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;floatval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;'quantity'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;intval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;'options'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;

        &lt;span class="c1"&gt;// check if the item already exists in the cart.&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
        &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// if yes, update it's quantity&lt;/span&gt;
            &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// if no, add the newly formed item to cart.&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item added to cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the business logic translates to code pretty accurately. Now the problem is, controllers are not meant to contain business logic.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#service-classes-to-the-rescue"&gt;
  &lt;/a&gt;
  Service Classes to the Rescue
&lt;/h1&gt;

&lt;p&gt;According to the very popular &lt;a href="https://github.com/alexeymezenin/laravel-best-practices/"&gt;alexeymezenin/laravel-best-practices&lt;/a&gt; repository:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zGOrxs7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620657955936/1AfO4cLA6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zGOrxs7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620657955936/1AfO4cLA6.png" alt="Business logic should be in service class"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The idea of service classes is not something built into the framework or documented in the official docs. As a result, different people refer to them differently. At the end of the day, service classes are plain classes responsible for holding the business logic.&lt;/p&gt;

&lt;p&gt;A service class for holding the shopping cart related business logic can be as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Services&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Collection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Session\SessionManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CartService&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="no"&gt;MINIMUM_QUANTITY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'shopping-cart'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$session&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$instance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Constructs a new cart object.
     *
     * @param Illuminate\Session\SessionManager $session
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;SessionManager&lt;/span&gt; &lt;span class="nv"&gt;$session&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$session&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Adds a new item to the cart.
     *
     * @param string $id
     * @param string $name
     * @param string $price
     * @param string $quantity
     * @param array $options
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]):&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$cartItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;createCartItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Updates the quantity of a cart item.
     *
     * @param string $id
     * @param string $action
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$action&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$cartItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'plus'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'minus'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;MINIMUM_QUANTITY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;MINIMUM_QUANTITY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;

                    &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Removes an item from the cart.
     *
     * @param string $id
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;except&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Clears the cart.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;forget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Returns the content of the cart.
     *
     * @return Illuminate\Support\Collection
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;Collection&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;is_null&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Returns total price of the items in the cart.
     *
     * @return string
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="nv"&gt;$total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;number_format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Returns the content of the cart.
     *
     * @return Illuminate\Support\Collection
     */&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getContent&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;Collection&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Creates a new cart item from given inputs.
     *
     * @param string $name
     * @param string $price
     * @param string $quantity
     * @param array $options
     * @return Illuminate\Support\Collection
     */&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;createCartItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;Collection&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;floatval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$price&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$quantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;intval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$quantity&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;MINIMUM_QUANTITY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$quantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;MINIMUM_QUANTITY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'price'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'quantity'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'options'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As I've already said, service classes are not something built into the framework hence there is no &lt;code&gt;artisan make&lt;/code&gt; command for creating a service class. You keep the classes anywhere you like. I'm keeping my classes inside &lt;code&gt;App/Services&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;CartService.php&lt;/code&gt; file contains both &lt;code&gt;public&lt;/code&gt; and &lt;code&gt;protected&lt;/code&gt; methods. The public methods named &lt;code&gt;add()&lt;/code&gt;, &lt;code&gt;remove()&lt;/code&gt;, &lt;code&gt;update()&lt;/code&gt;, &lt;code&gt;clear()&lt;/code&gt; are responsible for adding item to cart, removing item from cart, updating cart item quantity and clearing the cart respectively.&lt;/p&gt;

&lt;p&gt;The other public methods are &lt;code&gt;content()&lt;/code&gt; and &lt;code&gt;total()&lt;/code&gt; responsible for returning the cart content and total price of added items respectively.&lt;/p&gt;

&lt;p&gt;Finally the protected methods &lt;code&gt;getContent()&lt;/code&gt; and &lt;code&gt;createCartItem()&lt;/code&gt; are responsible for returning cart content within the class methods and forming a new cart item from the received parameters.&lt;/p&gt;

&lt;p&gt;Now that the service class is ready, you need to use it inside the controller. To utilize the service class inside the &lt;code&gt;CartItemController.php&lt;/code&gt; file, the code needs to be updated as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Services\CartService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Http\Requests\CartItemRequest&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CartItemController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$cartService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Instantiate a new controller instance.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;CartService&lt;/span&gt; &lt;span class="nv"&gt;$cartService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$cartService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;content&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;total&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart.index'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;'content'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'total'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Store a newly created resource in storage.
     *
     * @param  \App\Http\Requests\CartItemRequest  $request
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;CartItemRequest&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item added to cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;content&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="nv"&gt;$item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;compact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'item'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item updated in cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;destroy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item removed from cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks to zero configuration resolution, the service container resolves any class that doesn't depend on any interface automatically. Hence simply injecting the &lt;code&gt;CartService&lt;/code&gt; in the controller constructor does the trick:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CartItemController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$cartService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Instantiate a new controller instance.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;CartService&lt;/span&gt; &lt;span class="nv"&gt;$cartService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$cartService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now an instance of the &lt;code&gt;CartService&lt;/code&gt; class becomes available within the controller and can be accessed as &lt;code&gt;$this-&amp;gt;cartService&lt;/code&gt; property. Rest of the controller action have been updated to make use of the service and as you can see, the controller has become much cleaner now.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#action-reusability"&gt;
  &lt;/a&gt;
  Action Re-usability
&lt;/h1&gt;

&lt;p&gt;Apart from making the controller cleaner, you also get the benefit of the shopping cart related actions being accessible from anywhere. Consider the following livewire component for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Livewire&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Facades\Cart&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Livewire\Component&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Contracts\View\View&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Component&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$product&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Mounts the component on the template.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Renders the component on the browser.
     *
     * @return \Illuminate\Contracts\View\View
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;View&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'livewire.product'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Adds an item to cart.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;addToCart&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Cart&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;unit_price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'productAddedToCart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can add, remove, update or clear the shopping cart from anywhere. Prior to the service class implementation, the only way to manage the cart was through HTTP requests. Now you can even manage the cart through &lt;code&gt;artisan&lt;/code&gt; commands.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing Thoughts
&lt;/h1&gt;

&lt;p&gt;The concept of service classes discussed in this article is nothing concrete and I'm not claiming it to be a silver bullet. It's something that I've used in the past and have had no problem whatsoever. If you want to look at some other approach, consider reading about action classes &lt;a href="https://freek.dev/1371-refactoring-to-actions/"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>cyber secutiry</title>
      <author>vishwasnarayanre</author>
      <pubDate>Mon, 10 May 2021 22:23:35 +0000</pubDate>
      <link>https://dev.to/vishwasnarayan5/cyber-secutiry-3c8a</link>
      <guid>https://dev.to/vishwasnarayan5/cyber-secutiry-3c8a</guid>
      <description>&lt;p&gt;First, I would say understand the seven layers of the Cyber security.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O84seKy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcrrtrmkks6b55wt1d0p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O84seKy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcrrtrmkks6b55wt1d0p.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now understand all the hardware and software and the ports just run on &lt;strong&gt;Operating System&lt;/strong&gt; and have a specific driver and any set of the hardware's defined thus its hackable.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-cyber-security"&gt;
  &lt;/a&gt;
  What is cyber security?
&lt;/h1&gt;

&lt;p&gt;The practice of protecting computers, websites, mobile devices, electronic services, networks, and data against malware threats is known as cyber defense. It's sometimes referred to as information infrastructure protection or electronic data security. The concept is used in a number of ways, ranging from enterprise to mobile computing, and can be classified into a few general groups for the computer defence.&lt;/p&gt;

&lt;p&gt;Computer defence(never go offensive), also known as cybersecurity or information technology security, is the safeguarding of computer systems and networks from information leakage, theft or harm to their devices, applications, or electronic records, as well as interruption or misdirection of the services they offer.&lt;/p&gt;

&lt;p&gt;It's no surprise that online security breaches are becoming so common. Despite the fact that digital is pervading every aspect of our lives, most people are terrible at security. In a 2016 Pew Research poll on cybersecurity, the vast majority of online adults correctly answered just two of thirteen questions.&lt;br&gt;
Let's do something about it by strengthening our own personal digital protections.While not to be confused with the internet, the word "cyberspace" refers to identities or incidents that occur during the contact process. Consider a website, which exists in CyberSpace as well.Interactions of others If you make a tweet, upload a photo, or share a message, all of these social experiences take place in Cyber Space, and this Cyber Space is evolving in seconds rather than minutes. Many of these activities are taking place "in cyberspace," not in their actual environments. You can see a picture below of different digital devices that are linked through the internet.The comoanies assets are on the internet.&lt;/p&gt;

&lt;p&gt;I've made it a tradition over the last 2 years or so to do an annual audit of my personal digital security. Every year, I review all of my online activities for security risks and make a commitment to improve. As a product of the endeavor, these are the behaviors I employ for the search and bounty.&lt;/p&gt;

&lt;p&gt;In general, I attempt to address these core questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What data is available about me, and where is it stored and what kind of a domain it?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Never say to a person where you have hosted your websites through always make sure to use a custom domain name certificate and also have a certified SSL for your websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are the risks that I‚Äôm going to guard against (playing defensive against all the offenses) i.e. what is my Threat Model?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please make sure that you have all the ethical aspects when you do the bounty or the cyberattack and also dont missuse your freedom.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are the impacts to my privacy and also about my social presence?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You should be very carefull abut what is your social presence and also about all the aspects that you want to take care.&lt;/p&gt;

&lt;p&gt;Network protection is the practise of defending a computer network against intruders, whether they be targeted attackers or opportunistic malware.&lt;/p&gt;

&lt;p&gt;Application secutiry is concerned with keeping apps and computers safe from attacks. A hacked programme could allow access to the data it is supposed to secure. Protection starts in the design stage, well before a software or system is implemented.&lt;/p&gt;

&lt;p&gt;Information protection safeguards the confidentiality and anonymity of data when it is in storage and transit.&lt;/p&gt;

&lt;p&gt;The procedures and decisions for managing and maintaining computer properties are included in operational security. This includes the permissions that users have when connecting to a network as well as the procedures that govern how and where data can be accessed or exchanged.&lt;/p&gt;

&lt;p&gt;Disaster recovery and business continuity describe how a company reacts to a cyber-security incident or some other situation that results in the loss of activities or records. Disaster recovery procedures govern how an organisation recovers its activities and records in order to resume operations at the same level as before the disaster.Business sustainability is the plan that a company uses when it is unable to function due to a lack of funding.&lt;/p&gt;

&lt;p&gt;End-user education tackles the most unpredictability of cyber-security: individuals. By failing to observe sound security standards, someone may inadvertently inject a virus into an otherwise stable environment. Instructing users to remove questionable email attachments rather than inserting unknown plug-in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Types of cyber threats and attacks that you might face&lt;/strong&gt;&lt;br&gt;
The threats countered by cyber-security are three-fold:&lt;br&gt;
Today, the term is almost entirely used to refer to information security issues. We've taken to visualising the digital phenomena as a tangible one because it's difficult to imagine how digital signals flowing over a wire might reflect an assault.A cyber assault is an attack launched against us (or our digital devices) through cyberspace. Cyberspace, a non-existent cyber space, has become a term for understanding digital weaponry designed to threaten us.What is true, though, is the attacker's motive as well as the possible effect. While certain cyber attacks are minor annoyances, others are very serious, even endangering human lives.&lt;/p&gt;

&lt;p&gt;Cyber attacks are a major concern. Cyber attacks will result in power outages, the loss of military facilities, and the disclosure of national security information. They will lead to the stealing of important and confidential data, such as medical information. They have the ability to interrupt phone and internet networks as well as paralyze devices, rendering data inaccessible. It is not an exaggeration to suggest that cyber attacks have the potential to disrupt the functioning of life as we know it.&lt;/p&gt;

&lt;p&gt;Threats are now becoming more severe. According to Gartner, "cybersecurity risks pervade every organisation and aren't always directly under IT's control."Market executives are pushing forward with digital business plans, and those leaders are making technology-related risk decisions on a daily basis. Increased cyber vulnerability exists, but so do computer protection solutions.‚Äù&lt;/p&gt;

&lt;p&gt;Virtually every cyber threat falls into one of these three modes. In terms of attack techniques, malicious actors have an abundance of options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Actors in cyberspace :&lt;/strong&gt; In cybersecurity, the "enemy" we may learn about is known as a "threat actor" - a concept that may apply to lone individuals, organised crime organisations, or whole entities attempting to compromise an individual's or organization's protection.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Cybercrime includes single threat actors or groups targeting systems (like DDOS) for financial gain or to cause disruption.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cyber-attack often involves politically motivated information gathering and threats which can be like an apocalypse.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cyberterrorism is predetermined to undermine electronic systems to cause panic or fear in the victim.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cyber attacks may originate from a wide range of locations, individuals, and contexts. Among the malicious actors are:&lt;/p&gt;

&lt;p&gt;Individuals that create attack vectors using their own software tools&lt;br&gt;
Criminal organizations that are run like corporations, with large numbers of employees developing attack vectors and executing attacks&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nation states&lt;/li&gt;
&lt;li&gt;Terrorists&lt;/li&gt;
&lt;li&gt;Industrial spies&lt;/li&gt;
&lt;li&gt;Organized crime groups&lt;/li&gt;
&lt;li&gt;Unhappy insiders&lt;/li&gt;
&lt;li&gt;Hackers&lt;/li&gt;
&lt;li&gt;Business competitors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, how do malicious actors gain control of computer systems? Here are some common methods used to threaten cyber-security:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Malware&lt;/strong&gt;&lt;br&gt;
Malware is short for malicious applications. Malware is software developed by a cybercriminal or intruder to disable or destroy a legitimate user's computer. It is one of the most popular cyber threats. Malware, which is often distributed through unsolicited email attachments or legitimate-looking downloads, can be used by cybercriminals to make money or in politically motivated cyber-attacks.&lt;/p&gt;

&lt;p&gt;There are a number of different types of malware, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Virus :&lt;/strong&gt; A software that binds itself to clean files and spreads within a computer system, infecting files with malicious code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Trojans :&lt;/strong&gt; Malware that behaves as legitimate apps. Cybercriminals deceive users into installing Trojans on their computers, which inflict harm or capture data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Spyware :&lt;/strong&gt; A software that secretly tracks what a user does in order for cybercriminals to use this material. Spyware, for example, may record credit card information.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Probably shoulder surfing and spoofing might also come uder this category.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ransomware:&lt;/strong&gt; Malware that encrypts a user's files and data and threatens to delete it until a ransom is paid.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Adware:&lt;/strong&gt; Advertising tech that has the potential to distribute malware in the victims local system or the server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Botnets :&lt;/strong&gt; Malware-infected computer networks that cybercriminals use to execute activities online without the user's consent.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;SQL injection&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SQL (structured language query) injection is a method of cyber-attack used to gain access to and steal data from a database. Cybercriminals take advantage of flaws in data-driven applications to inject malicious code into a database with a malicious SQL comment. This grants them access to the database's classified details.&lt;/p&gt;

&lt;p&gt;this attack is a fact that we still know how the computer or the server behaves.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phishing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Phishing occurs as cybercriminals send emails that claim to be from a reputable organisation and request personal information from victims. Phishing attacks are often used to trick users into providing credit card information and other sensitive information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Man-in-the-middle attack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A man-in-the-middle attack is a type of cyber threat in which a cybercriminal intercepts contact between two people in order to steal information. On an insecure WiFi network, for example, an attacker might intercept data passing between the victim's computer and the network.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Denial-of-service attack&lt;/strong&gt;&lt;br&gt;
A denial-of-service attack occurs as cybercriminals overload networks and servers with traffic in order to block a computer system from serving legitimate requests. This makes the machine inoperable and prevents an entity from performing critical functions.&lt;br&gt;
and many &lt;strong&gt;more&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Domains of Cyber Security&lt;/strong&gt;&lt;br&gt;
Below are the domains of Cybersecurity as a subject.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Access Control Systems and Methodology&lt;/li&gt;
&lt;li&gt;Telecommunications and Network Security&lt;/li&gt;
&lt;li&gt;Business Continuity Planning and Disaster Recovery Planning&lt;/li&gt;
&lt;li&gt;Security Management Practices&lt;/li&gt;
&lt;li&gt;Security Architecture and Models&lt;/li&gt;
&lt;li&gt;Law, Investigation, and Ethics&lt;/li&gt;
&lt;li&gt;Application and Systems Development Security&lt;/li&gt;
&lt;li&gt;Cryptography&lt;/li&gt;
&lt;li&gt;Computer Operations Security&lt;/li&gt;
&lt;li&gt;Physical Security&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Access Control Systems and Methodology:&lt;/strong&gt;&lt;br&gt;
The primary goal of Cyber Security is to safeguard your files. But, first, we'll learn more about Data and the different access control schemes and methodologies.&lt;br&gt;
&lt;strong&gt;Six Dimensions of Data Quality Assessment :&lt;/strong&gt;&lt;br&gt;
A Data Quality(DQ) Dimension is a well-known concept that describes a data attribute that can be analysed or tested against predefined criteria in order to analyse data quality.&lt;br&gt;
&lt;strong&gt;The six core data quality dimensions are:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Consistency&lt;/li&gt;
&lt;li&gt;Completeness&lt;/li&gt;
&lt;li&gt;Correctness&lt;/li&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;li&gt;Timeliness&lt;/li&gt;
&lt;li&gt;Accuracy&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;States of Data :&lt;/strong&gt;&lt;br&gt;
Understanding the various states of digital data will help you choose the various types of security measures and encryption methods to use on the data. In this section, we will look at three types of data states.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Data at rest/storage :&lt;/strong&gt;
&lt;strong&gt;Data at rest&lt;/strong&gt; refers to data that has been stored on a physical medium or backup medium, such as hard drives or even cell devices. What distinguishes data at rest is that it is unused and is not actually being exchanged or stored.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data in motion/transmission:&lt;/strong&gt;
The second data process has begun. Data in motion is actually being sent over a network or is sitting in a computer's RAM waiting to be read, modified, or interpreted. Emails or data shared through FTP or SSH are examples.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data in process :&lt;/strong&gt;
The third step of data is in use or in operation. This data state is not passively stored on a storage medium. This is the data that one or more programmes are processing. This is the information that is currently being created, modified, appended, or deleted.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The third step of data is in use or in operation. This data state is not passively stored on a storage medium. This is the data that one or more programmes are processing. This is the information that is currently being created, modified, appended, or deleted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Confidentiality :&lt;/strong&gt;It guarantees that only approved parties have access to computer-related assets, also known as confidentiality or privacy.&lt;br&gt;
Measures taken to discourage classified information from meeting the wrong persons and to ensure that only designated individuals have access to it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Technique used is Encryption&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Encryption to ensure Confidentiality:&lt;/strong&gt;&lt;br&gt;
If we choose to word ‚ÄúHELLO,‚Äù we can use cryptography to substitute each alphabet of HELLO with its neighbour alphabet, such as H replacing I, E replacing F, and so on, rendering the word meaningless. Then we decrypt using the same method as on the other hand.&lt;br&gt;
&lt;strong&gt;Bitlocker&lt;/strong&gt; is a disk/drive-level encryption. We cannot apply &lt;strong&gt;BitLocker on file.&lt;/strong&gt;&lt;br&gt;
The NTFS file system is used for Windows. EFS (Encrypted File System)-File Level Encryption is accessible. Right-click on the file and choose Properties (Compress the contents in blue color).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features of EFS:&lt;/strong&gt; There are two colors that show encryption and decryption.&lt;br&gt;
Policies are at the heart of the whole operation. To hold a data backup. When an employee resigns, the corporation reformats the scheme, erasing the BitLocker keys and other data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Types of Encryption&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are two top-level types of encryption. Symmetric and Asymmetric&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Symmetric Encryption :&lt;/strong&gt;&lt;br&gt;
Encrypts and decrypts data with the same key.Consider using a desktop password manager. You enter your name, which is encrypted with your exclusive key. When it is time to recover the data, the same key is used, and the data is decrypted.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Asymmetric Encryption :&lt;/strong&gt;&lt;br&gt;
It employs a private key and a public key pair.&lt;br&gt;
A single key will encrypt but not decrypt its own decrypted data. The paired key is needed to decrypt.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;Asymmetric encryption&lt;/code&gt; is used for topics like HTTPS Transport Layer Security (TLS) and data signing.&lt;/p&gt;

&lt;p&gt;Access Controls:&lt;br&gt;
Access controls authenticate and authorize individuals to access the information they are allowed to see and use&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Something you know ‚Äî (you know passwords)&lt;/li&gt;
&lt;li&gt;Something you are ‚Äî (biometric scan)&lt;/li&gt;
&lt;li&gt;Something you have ‚Äî (ATM card)&lt;/li&gt;
&lt;li&gt;Something you do ‚Äî (signature style)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Integrity of Data :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Integrity :&lt;/strong&gt; This ensures the properties can only be changed by registered parties and in approved ways. Ensures the material is in a format that is true and valid for the purposes for which it was created. It entails ensuring the quality, precision, and trustworthiness of data over the entire life cycle.&lt;br&gt;
&lt;code&gt;Hash&lt;/code&gt; is the technique used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hash:&lt;/strong&gt; Hash Calculator that accepts a file as input and applies an algorithm to it. The object of hashing is to demonstrate that the original file has not been altered.&lt;br&gt;
Let's look at a real-world example of hashing using the Microsoft File Checksum Integrity Verifier. You will have it from the internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Availability of Data :&lt;/strong&gt;&lt;br&gt;
It ensures the funds are available to approved parties at all times. High availability (99.9 percent) with a 0.1 percent error rate, and 99.999 uptime with a 0.0001 error rate when improved. It is carried out by techniques such as hardware repair, programme patching, and network optimization.&lt;br&gt;
A Denial of Service Attack is a classic example of a malicious actor's lack of availability (DOS).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SLA :&lt;/strong&gt; The Service Level Agreement is a legally binding contract. It is a contract between a service provider and a customer. Specific facets of service ‚Äî such as consistency, affordability, and obligations ‚Äî are settled upon between the service provider and the service consumer. If a service recipient should not accept files in a timely manner, the service provider is fined.&lt;/p&gt;

&lt;p&gt;Before discussing the types of DOS attacks, let‚Äôs have a look at &lt;strong&gt;Ping Command.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ping is a computer network management software utility that is used to measure a host's reachability on an Internet Protocol network. A quick way to see if a computer can connect with another computer or network system over the network.(available both in Windows anf Linux)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ping 127.0.0.1&lt;/code&gt; (127.0.0.1 is a loopback address)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ping &amp;lt;any ip&amp;gt;&lt;/code&gt; is for any domain to be tested.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Types of DOS Attacks:&lt;/strong&gt;&lt;br&gt;
Will discuss a few of the DOS Attacks&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ping of Death&lt;/li&gt;
&lt;li&gt;Ping of Flood&lt;/li&gt;
&lt;li&gt;Smurf Attack&lt;/li&gt;
&lt;li&gt;Fraggle Attack&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Ping of Death:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A Ping of Death attack is a form of Denial of Service (DoS) attack in which the attacker sends a packet that is greater than the maximum allowed capacity, forcing the target computer to freeze or crash.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ping of Flood:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ping flood, also known as ICMP flood, is a popular Denial of Service (DoS) attack in which an attacker overwhelms a victim's device with ICMP echo requests, also known as pings. As an example, consider the Education Board's website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fraggle Attack :&lt;/strong&gt;&lt;br&gt;
A Fraggle attack is a form of DOS attack in which the attacker sends a large amount of spoofed UDP traffic to a network router's broadcast address.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;"Bugs and Viruses play a majour role in destoying the software thus some first found were."&lt;/p&gt;

&lt;p&gt;On September 9, 1947 CE, the world's first computer bug was discovered. On September 9, 1947, a team of computer scientists at Harvard University announced the world's first computer bug‚Äîa moth stuck in their computer.&lt;/p&gt;

&lt;p&gt;The first computer virus, known as the "Creeper Virus," was discovered in 1971. The virus was finally removed by a machine known as "The Reaper," although it is important to remember that the Reaper was also a virus.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TeleCommunications and Network Security:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The focus is on messaging, protocols, and network facilities, as well as the possible flaws involved with each. It refers to the procedures and policies put in place to deter and track unauthorised access and abuse of a computer network and its infrastructure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Protocols:&lt;/strong&gt;&lt;br&gt;
Network Protocols are a series of rules that regulate the exchanging of information in a simple, dependable, and protected manner. There are three kinds of network protocols, as mentioned below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TCP/IP&lt;/li&gt;
&lt;li&gt;OSI Model&lt;/li&gt;
&lt;li&gt;CISCO Hierarchical Model&lt;/li&gt;
&lt;li&gt;TCP/IP VS OSI Model&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The two most popular network protocols are TCP/IP and the OSI model. The primary distinction between them TCP/IP is a functional model used for forming a stable link and communicating over a network, while OSI is a logical model.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hierarchical Model of Cisco:&lt;/strong&gt;&lt;br&gt;
Cisco has developed a three-layered hierarchical architecture for creating a dependable infrastructure. Each of the layers has its own functionality and features, which aids in the reduction of network complexity.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Access Layer :&lt;/strong&gt; 
Control network resource access for users and workgroups. Layer 2 switches are usually used in this layer.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Distribution Layer :&lt;/strong&gt; 
It acts as a bridge between the entry layer and the main layer. This layer is usually made up of multilayer switches.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Core Layer :&lt;/strong&gt; 
This layer, also known as the Backbone layer, is in charge of easily moving large volumes of traffic.
&lt;code&gt;Planning for the Unexpected:&lt;/code&gt;
&lt;strong&gt;Contingency Planning :&lt;/strong&gt;
&lt;strong&gt;IR(Incident Response)-&lt;/strong&gt;There are several tears, so the first move is to identify, contain, investigate (forensics), execute the remedy, and register (document)
&lt;strong&gt;DR(Disaster Recovery) :&lt;/strong&gt; Floods and earthquakes are examples of high-level problems that cause significant damage.
&lt;strong&gt;BCP(Business Continuity Planning) :&lt;/strong&gt; When all is lost in a storm, how will the company continue? Laws, Investigations, and Ethics.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Law, Investigation, and Ethics is one of the most intriguing defence realms. As the name suggests, this security domain addresses the legal aspects of information security.Cryptography is a form of encryption.&lt;/p&gt;

&lt;p&gt;Cryptography, or data coding, is one of the most commonly used authentication methods today. The Cryptography security domain is intended to teach you how and when to use encryption.&lt;br&gt;
&lt;strong&gt;What‚Äôs next?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This article was written to provide you with a short overview and how-to guide for Cyber Security Fundamentals. Feel free to play around with it ethically.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Latest cyber threats&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What are the most recent cyber attacks that people and companies must be aware of? Here are some of the most recent cyber attacks identified by the governments of the United Kingdom, the United States, and Australia.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hijack of Telegram&lt;/strong&gt;&lt;br&gt;
Telegram has a critical flaw that allows hackers to spread cryptojacking malware.&lt;br&gt;
Hackers gained access to Telegram's email details and messenger of some of the top cryptocurrency companies. The hackers, according to rumours at the time, used Signaling System 7 (SS7), which is used to link mobile networks all over the world.&lt;/p&gt;

&lt;p&gt;According to cybersecurity analysts, the hackers were searching for two-factor authentication (2FA) login information from the server.&lt;/p&gt;

&lt;p&gt;They took over the network's short message services centre (SMSC) and used it to send calls for location alerts to over 20 high-profile victims.&lt;/p&gt;

&lt;p&gt;The attackers carried out the assault in order to obtain cryptocurrencies. It is a frequent attack in the crypto space, but victims are still unsure how to defend their networks from such attacks.&lt;/p&gt;

&lt;p&gt;However, with blockchain technologies at work, it appears that the crypto world has superior authentication mechanisms than using call or SMS-based 2FA.&lt;/p&gt;

&lt;p&gt;Cybersecurity researchers believe that protocols such as SS7 can not be used by telecom experts because they lack the necessary security standards to guard against advanced attacks in the modern era.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dridex malware&lt;/strong&gt;&lt;br&gt;
The US Department of Justice (DoJ) indicted the leader of an organised cyber-criminal organisation in December 2019 for their role in a multinational Dridex ransomware attack. This malicious campaign had a global impact on the public, economy, infrastructure, and industry.&lt;/p&gt;

&lt;p&gt;Dridex is a financial trojan with many capabilities. It has been infecting machines via phishing emails or existing malware since 2014. It has incurred huge financial damages amounting to hundreds of millions of dollars by stealing passwords, banking records, and personal data that can be used in illegal transactions.&lt;/p&gt;

&lt;p&gt;In reaction to the Dridex threats, the United Kingdom's National Cyber Security Centre urges the public to "ensure that computers are patched, anti-virus software is turned on and up to date, and files are backed up."&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Romance scams&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In February 2020, the FBI sent a warning to U.S. people about trust theft perpetrated by cybercriminals using dating forums, chat rooms, and applications. Perpetrators prey on individuals looking for new relationships, duping victims into disclosing sensitive information.&lt;/p&gt;

&lt;p&gt;According to the FBI, romance cyber attacks targeted 114 victims in New Mexico in 2019, resulting in $1.6 million in financial losses.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Emotet malware&lt;/strong&gt;&lt;br&gt;
The Australian Cyber Security Centre sent an alert to national entities in late 2019 about a pervasive global cyber threat posed by Emotet malware.&lt;/p&gt;

&lt;p&gt;Emotet is a complex trojan that has the ability to harvest data as well as load other malware. Emotet thrives on simple passwords, serving as a reminder of the value of having a safe password to protect against cyber attacks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sopra Steria Attack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On October 20, Sopra Steria, a French IT service provider, was targeted by a ransomware attack by a new version of the Ryuk ransomware, which was previously unknown to cybersecurity providers.&lt;/p&gt;

&lt;p&gt;Sopra Steria stated after the attack that the attack infected a portion of its IT architecture. According to the firm, the data breach caused no harm or leakage of consumer data.&lt;/p&gt;

&lt;p&gt;When it comes to ransomware threats, Ryuk is one of the most potent in this day and era. The ransomware has infiltrated high-profile companies such as Prosegur, a Spanish logistics firm, and EWA, a US defence contractor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;End-user protection&lt;/strong&gt;&lt;br&gt;
End-user safety, also known as endpoint defence, is a critical component of cyber security. After all, it is frequently a person (the end-user) that unintentionally downloads ransomware or some kind of cyber threat to their desktop, laptop, or mobile device.&lt;/p&gt;

&lt;p&gt;But, how can cyber-security safeguards safeguard end users and systems? To begin, cryptographic protocols are used to encrypt emails, directories, and other sensitive data in cyber-security. This not only safeguards information in transit, but also prevents it from destruction or fraud.&lt;/p&gt;

&lt;p&gt;Furthermore, end-user protection programme checks machines for malicious malware, quarantines it, and then deletes it from the system. Security programmes can also identify and delete malicious code concealed in the Master Boot Record (MBR) and are programmed to encrypt or erase data from the hard drive of a device.&lt;/p&gt;

&lt;p&gt;Real-time intrusion prevention is also a subject of electronic security protocols. Many people use heuristic and behavioural analysis to track a program's and its code's actions in order to protect against viruses or Trojans that change form with each execution (polymorphic and metamorphic malware).Security programmes can isolate potentially malicious programmes in a virtual bubble isolated from the user's network in order to observe their actions and learn how to spot new pathogens more effectively.&lt;/p&gt;

&lt;p&gt;As cyber-security experts discover emerging risks and ways to fight them, security programmes begin to develop new protections. Employees must be trained about how to use end-user security tools in order to get the best out of it. Importantly, keeping it going and upgrading it on a regular basis means that it will protect consumers from the most recent cyber attacks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cyber safety tips -&lt;/strong&gt; safeguard yourself from cyber-attacks&lt;br&gt;
How will companies and individuals protect themselves from cyber threats? Here are our top cyber safety tips:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Update your software and operating system, you benefit from the latest security patches updates from the company that has given the software, One of the safest ways to defend your devices from any hacking attempt is to keep your system informed on a daily basis. The majority of attacks occur as hackers discover a security flaw or loophole that they can manipulate. However, with routine patches, those bugs will be eliminated. It is best to run programme upgrades for your device as soon as they become usable.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use anti-virus software, security solutions like Kaspersky Total Security will detect and removes threats. Keep your software updated for the best level of protection.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use strong passwords, ensure your passwords are not easily guessable and make sure that you regularly change the software every fiscal time(change every 90 days recommended).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not open email attachments from unknown senders: These could be infected with malware, or just can be a phishing mail to gather all your information. Do not click on links in emails from unknown senders or unfamiliar website,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avoid using unsecure Wi-Fi networks in public places like hotels and malls etc,Unsecure networks leave you vulnerable to man-in-the-middle attacks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If your archives or records are corrupted and stolen, a previous backup of those files will assist in fully restoring them. It is important to backup the data and archive it in a reliable cloud storage service or on an external hard drive. As a result, if a file is lost due to a hacking event or system corruption, you will copy those data again.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The methods mentioned above are some of the most powerful ways to defend your device from malware intrusion or attack.&lt;/p&gt;

&lt;p&gt;happy learning folks thank you.&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>codenewbie</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>How To Use let, const and var in JavaScript.</title>
      <author>Kingsley Ubah</author>
      <pubDate>Mon, 10 May 2021 21:21:32 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/how-to-use-let-const-and-var-in-javascript-4c8l</link>
      <guid>https://dev.to/ubahthebuilder/how-to-use-let-const-and-var-in-javascript-4c8l</guid>
      <description>&lt;p&gt;In Programming, variables are containers used to store data. &lt;/p&gt;

&lt;p&gt;For example, when you type in your name into a field on a website, that data is stored in a variable. When you search for a particular item on a website, the returned information is first stored in a variable before displayed to you.&lt;/p&gt;

&lt;p&gt;The assignment operator is used to ‚Äúassign‚Äù data to a variable. It then becomes a value at that point.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In JavaScript, there are three keywords used to define variables. They are let, const and var. Before 2015, using the var keyword was the only way to declare a JavaScript variable.&lt;/p&gt;

&lt;p&gt;However, the advent of EmcaScript 2016 (ES16) came with two other variable keywords: let and const.&lt;/p&gt;

&lt;p&gt;Before we proceed to understand these keywords, we have to understand three concepts in variables:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Global Scope: A variable declared globally (outside of a function) has a global scope and can be accessed anywhere across the entire program.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// global scope&lt;/span&gt;
   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;//code goes here&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Function Scope: A variable declared inside a function (i.e locally) has a function scope
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// global scope&lt;/span&gt;
   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="c1"&gt;// function scope&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have the various scopes defined, let‚Äôs define the three variable keywords and what variable scoping they allow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FOR BLOCK SCOPING&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#var"&gt;
  &lt;/a&gt;
  Var
&lt;/h4&gt;

&lt;p&gt;Variables declared with the var keyword does not have block scoping. That is, any variable declared within a block can be accessed outside.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#let"&gt;
  &lt;/a&gt;
  Let
&lt;/h4&gt;

&lt;p&gt;Variables defined with Let can have block scoping. That is, any variable declared within a block {} cannot be accessed outside of that block.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#const"&gt;
  &lt;/a&gt;
  Const
&lt;/h4&gt;

&lt;p&gt;Like let, variables defined with const can have block scoping. That is, any variable declared within a block {} cannot be accessed outside of that block.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;const&lt;/strong&gt; and &lt;strong&gt;let&lt;/strong&gt; both have &lt;strong&gt;block scoping.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="nx"&gt;Kingsley&lt;/span&gt;&lt;span class="err"&gt;‚Äù&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="nx"&gt;Peter&lt;/span&gt;&lt;span class="err"&gt;‚Äù&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// name is Peter inside this block&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="nx"&gt;Kingsley&lt;/span&gt;&lt;span class="err"&gt;‚Äù&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="nx"&gt;Peter&lt;/span&gt;&lt;span class="err"&gt;‚Äù&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// name is Peter inside this block&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Also, let and var behave differently when a redeclaration is made inside the block.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="nx"&gt;Kingsley&lt;/span&gt;&lt;span class="err"&gt;‚Äù&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="nx"&gt;Peter&lt;/span&gt;&lt;span class="err"&gt;‚Äù&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// name is Peter inside this block&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Peter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="nx"&gt;Kingsley&lt;/span&gt;&lt;span class="err"&gt;‚Äù&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="nx"&gt;Peter&lt;/span&gt;&lt;span class="err"&gt;‚Äù&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// name is Peter inside this block&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A variable defined with const cannot be reassigned another value:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="nx"&gt;Kingsley&lt;/span&gt;&lt;span class="err"&gt;‚Äù&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="nx"&gt;Peter&lt;/span&gt;&lt;span class="err"&gt;‚Äù&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;// This will give an error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;N/B: Arrays and Objects defined with const can have their properties changed.  The immutability only pertains to primitive values like numbers and strings.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can create an object with const:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;21&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You CAN change a property:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can add a new property:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;surname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ubah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, you cannot reassign a complete object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;21&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;25&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt; &lt;span class="c1"&gt;//error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The same for an array of items:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;writers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Joe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;writers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sam&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Clark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;    &lt;span class="c1"&gt;// error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;N/B: If you're looking to see this new ES6 Syntax in action, I'll highly recommend  &lt;a href="https://gumroad.com/a/834147443"&gt;HTML To React By Sleepless Yogi&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Inside loops&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Var and let also behave differently in loops.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Here i is 10&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Here i is 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;FOR FUNCTION SCOPE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Variables declared with the let keyword has function scoping. That is, the variable is not accessible outside the scope.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// name can‚Äôt be accessed by this global code&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// func scope&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;FOR GLOBAL SCOPE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Variables declared with &lt;strong&gt;var&lt;/strong&gt; keyword has a global scope. It is accessible from all over the JavaScript code (and can be accessed with the window object).&lt;/p&gt;

&lt;p&gt;Variables declared with &lt;strong&gt;let&lt;/strong&gt; keyword has a global scope. However, it can‚Äôt be accessed with the windows object.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These two keywords also behave differently when a declaration is made within the global scope:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Now x is 1&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Now x is 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet shows that redeclaration within the same scope is allowed with the var keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Not allowed&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Not allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet shows that redecleration within the same scope or same block is not allowed with the let keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Not allowed&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="c1"&gt;// Not allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet shows that while you can successfully redeclare a variable with in another block with var, you can‚Äôt with let.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Not allowed&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="c1"&gt;// Not allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet shows that while you can successfully redeclare a variable with in another block with var, you can‚Äôt with const.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Allowed&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet shows that redeclaration is another scope or another block is possible with let.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Allowed&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet shows that redeclaration is another scope or another block is possible with const.&lt;/p&gt;

&lt;p&gt;Variable scopes is crucial for every sofware developer to grasp.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you enjoyed this article and want to support me, feel free to buy me my favourite fruit:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ubahthebuilder"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc5Aqnyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520pineapple%26emoji%3D%25F0%259F%258D%258D%26slug%3Dubahthebuilder%26button_colour%3De0b51a%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you for your time and see you soon!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>XSS Attacks Types on Web</title>
      <author>Beto Muniz</author>
      <pubDate>Mon, 10 May 2021 21:03:19 +0000</pubDate>
      <link>https://dev.to/obetomuniz/xss-attacks-types-on-web-36mh</link>
      <guid>https://dev.to/obetomuniz/xss-attacks-types-on-web-36mh</guid>
      <description>&lt;p&gt;Know how each Cross-Site Scripting Attack behaves is crucial to start to think about how vulnerabilities in our web apps allow malicious codes to be executed using the browser to take sensible data from users.&lt;/p&gt;

&lt;p&gt;That's what this article is about. &lt;/p&gt;




&lt;p&gt;üîì &lt;strong&gt;Reflected XSS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;üìå This attack XSS use URL parameters or data submitted via POST in forms to inject malicious code on that server request that persists some data for later execution in the browser. Third-party Browser extensions could even be an access point to inject such a malicious code.&lt;/p&gt;




&lt;p&gt;üîì &lt;strong&gt;Stored XSS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;üìå This attack XSS happens when malicious code is persisted by the attacker directly in the server-side of the web app and is executed by the user (victim) when she accesses the infected application.&lt;/p&gt;




&lt;p&gt;üîì &lt;strong&gt;DOM XSS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;üìå This attack XSS happens when the application manipulates the DOM incorrectly, opening breaches to malicious scripts sent by URL parameters to inject malicious code.&lt;/p&gt;




&lt;p&gt;üîì &lt;strong&gt;The question is... How to defend against attacks XSS?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;üìå There's no formula - A system security is always dependent on that system context, keep this in mind, but there are practices against well-known XSS attacks to stay updated about XSS attacks. &lt;/p&gt;

&lt;p&gt;üëâ Start reading about &lt;a href="https://content-security-policy.com/"&gt;Content Security Policy&lt;/a&gt;, &lt;a href="https://observatory.mozilla.org/"&gt;Mozilla Observatory&lt;/a&gt;, &lt;a href="https://owasp.org/www-community/xss-filter-evasion-cheatsheet"&gt;OWASP recommendations&lt;/a&gt;, and &lt;a href="https://www.getrevue.co/profile/obetomuniz"&gt;signing up my newsletter&lt;/a&gt;. As a web security lover, I always talk about it.&lt;/p&gt;

</description>
      <category>security</category>
      <category>webdev</category>
      <category>cybersecurity</category>
    </item>
    <item>
      <title>Don't give up on your dream job</title>
      <author>Treehouse</author>
      <pubDate>Mon, 10 May 2021 20:51:17 +0000</pubDate>
      <link>https://dev.to/teamtreehouse/don-t-give-up-on-your-dream-job-37ba</link>
      <guid>https://dev.to/teamtreehouse/don-t-give-up-on-your-dream-job-37ba</guid>
      <description>&lt;h2&gt;
  &lt;a href="#lets-get-real-the-job-hunt-is-not-easy"&gt;
  &lt;/a&gt;
  Let's get real ‚Äì the job hunt is &lt;em&gt;not&lt;/em&gt; easy.
&lt;/h2&gt;

&lt;p&gt;Pursuing your dream job can be especially difficult if you don't have a college degree, no real-world experience, and you're trying to make a career switch while juggling learning and other daily life commitments.&lt;/p&gt;

&lt;p&gt;The truth is... breaking into tech takes fierce determination and hard work. You likely won't get a job offer on the first, second... or even the third try... but does this mean you shouldn't pursue your dream job? Absolutely not!&lt;/p&gt;

&lt;blockquote&gt;
&lt;h2&gt;
  &lt;a href="#you-miss-100-of-the-shots-you-dont-take"&gt;
  &lt;/a&gt;
  ‚ÄúYou miss 100% of the shots you don‚Äôt take."
&lt;/h2&gt;

&lt;p&gt;‚Äì Wayne Gretzky&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Set yourself up for the long game with all the tools, resources, and support you need. While there's no one-size-fits-all formula for success ‚Äì there are some recommended practices to help you stand out in the hiring process.&lt;/p&gt;

&lt;p&gt;üìù Keep a spreadsheet or project file of all the companies and roles currently hiring that you want to pursue&lt;br&gt;
üíº Build an up-to-date LinkedIn profile + resume&lt;br&gt;
‚ú® Display a portfolio of your projects online&lt;br&gt;
üí¨ Network with folx in tech on social&lt;br&gt;
üõ† Contribute to open-source projects on GitHub&lt;br&gt;
üíª Practice for the Technical Interview&lt;br&gt;
üìö Keep learning and getting better&lt;/p&gt;

&lt;p&gt;Wherever you are in the process - know that if you keep pursuing your dream job, you will eventually land it. Don't give up. üíô&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#check-out-these-resources"&gt;
  &lt;/a&gt;
  ‚¨áÔ∏è Check out these resources
&lt;/h2&gt;

&lt;p&gt;Start building your roadmap to success ‚Äì here are some resources to help you along the way.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://trhou.se/Job-in-Tech-Pt1"&gt;How to get your first job, without a college degree (Part 1) by Ryan Carson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://trhou.se/Job-in-Tech-Pt2"&gt;How to get your first job, without a college degree (Part 2) by Ryan Carson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teamtreehouse.com/library/how-to-land-your-dream-job"&gt;How to Land Your Dream Job ‚Äì Interview Series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teamtreehouse.com/library/hour-with-a-tech-recruiter"&gt;Hour with a Tech Recruiter ‚Äì Interview Series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teamtreehouse.com/library/technical-interviewing"&gt;Technical Interviewing ‚Äì 21st Century Skills Course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>career</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Reason to learn docker as a web developer</title>
      <author>vishwasnarayanre</author>
      <pubDate>Mon, 10 May 2021 20:30:30 +0000</pubDate>
      <link>https://dev.to/vishwasnarayan5/reason-to-learn-docker-as-a-web-developer-3960</link>
      <guid>https://dev.to/vishwasnarayan5/reason-to-learn-docker-as-a-web-developer-3960</guid>
      <description>&lt;p&gt;Reason to learn docker as a web developer&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#portability"&gt;
  &lt;/a&gt;
  Portability
&lt;/h1&gt;

&lt;p&gt;You can create a docker image with the files and the configurations, share it in the docker hub and then share it so that you have the same infrastructure is the same.&lt;/p&gt;

&lt;p&gt;Even in terms of the developer environment for the local testing and also in deploying it on the different cloud platform.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reusability"&gt;
  &lt;/a&gt;
  Reusability
&lt;/h1&gt;

&lt;p&gt;Similar to being portable they can be configured for the future projects. You can have a very general Virtual Host for the deployment of the websites you can set certain flags and switches for the deployment.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#better-understanding-of-the-infrastructure"&gt;
  &lt;/a&gt;
  Better understanding of the infrastructure
&lt;/h1&gt;

&lt;p&gt;MERN stack, WAMP stack and a lot of the other Infrastructure for the projects in windows will be un understood as we have an GUI as way to communicate with the system but while developing the Dockerfile you can learn a lot about the file system of the stack basically you can use ubuntu for the development locally and testing it locally but you can get the actual knowledge about the software/technology file system through docker only.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#backups"&gt;
  &lt;/a&gt;
  Backups
&lt;/h1&gt;

&lt;p&gt;In docker we can have different mount points in the container and endpoints can be defined in the Dockerfile,which is certain file system entry points where the files live in the host system and also in the volumized containers. (you will learn these exclusively in the docker compose).&lt;/p&gt;

&lt;p&gt;you can copy and detach those mount points and put them from one container to another container.&lt;/p&gt;

&lt;p&gt;You can copy a file to the &lt;code&gt;WORKDIR&lt;/code&gt; mentioned by the user and then use it as a mount point and then detach and use it as folder in the other container.&lt;/p&gt;

&lt;p&gt;docker volumes comes after the docker compose thus make sure that you are following me for the updates.&lt;/p&gt;

&lt;p&gt;and obviously for&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#isolation"&gt;
  &lt;/a&gt;
  Isolation
&lt;/h1&gt;

&lt;p&gt;Isolation in web development is very important for example shared hosting, a lot of the projects have a shared hosting sometimes a project might require a different version of the software dependency, with the docker image you are isolated to that container that you are using thus you can change the image as required by you and you can deploy it later.(lets say JDK version ,alpine version and so on).&lt;/p&gt;

&lt;p&gt;Thank you all.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>webdev</category>
      <category>webperf</category>
      <category>devops</category>
    </item>
    <item>
      <title>Let VS Const Vs Var</title>
      <author>Denis Woldemariam</author>
      <pubDate>Mon, 10 May 2021 20:16:11 +0000</pubDate>
      <link>https://dev.to/wolde_ai/let-vs-const-vs-var-4mef</link>
      <guid>https://dev.to/wolde_ai/let-vs-const-vs-var-4mef</guid>
      <description>&lt;p&gt;We use variables in JavaScript a lot. An awful lot. And it‚Äôs for good reason. But Why? Well, JavaScript needs a way or mechanism to store values in order to manipulate data, interpret data, carry out instructions and ultimately execute a task. One way we can store values is to store them in variables. Variables are used as containers of values. But how can we make use of a variable?&lt;/p&gt;

&lt;p&gt;Before we can use a variable we first have to declare it. How do we do that? We can use var, let and const to declare a variable. For example:-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LV8mhQX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjvvjinjxphhix8lite0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LV8mhQX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjvvjinjxphhix8lite0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But it is highly advisable to use let and const not var for reasons we will discuss later. For now let‚Äôs assign values to the variables above. Since we have already declared the variables we can store or assign values. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fa1rM38G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0v28nhbrd7h6wrpl5474.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fa1rM38G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0v28nhbrd7h6wrpl5474.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first time we assign a value to the variable, it is called initialization. In other words assigning the initial value. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Imb5MV2Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9zjrukfinsyy2xjt64c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Imb5MV2Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9zjrukfinsyy2xjt64c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After you have declared and initialized a variable you can change the value assigned to it multiple times. Sometimes this happens by accident especially when you are working in groups. If you want the variable to have a constant value you can declare it using const. When using const you can‚Äôt just declare the variable, you also have to initialize it with the constant value. For example:-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DDUl5VET--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7j737yapfv093gn8kob6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DDUl5VET--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7j737yapfv093gn8kob6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And like the name suggests you can‚Äôt change the value of a variable declared with const otherwise it wouldn‚Äôt be a constant, would it? Instead you have to change the value you used to initialize if you want a different constant value or declare a new variable all together. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nuP8PvCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ruo4hx96m4ush25cz5g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nuP8PvCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ruo4hx96m4ush25cz5g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that we know how to declare and initialize variables using var, let and const, let‚Äôs talk about the difference between them. So what‚Äôs the difference between using var, let and const? Why is it preferable to use let and const over var?&lt;/p&gt;

&lt;p&gt;Before 2015 const and let were not in use. Software developers only used var to declare and initialize variables. But after 2015 var was abandoned and let &amp;amp; const started being adopted. But Why? Why is that so? Well, there are several reasons for that.&lt;/p&gt;

&lt;p&gt;For one it is possible to declare as many times as you want with var but it is not possible to do that with let and const.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V_EFWF3q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xe56ffipq1p6fez34as7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V_EFWF3q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xe56ffipq1p6fez34as7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can only declare a variable just once with let and const. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZamI7Zi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvsqeohf4qjhmzg1qlf4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZamI7Zi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvsqeohf4qjhmzg1qlf4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another difference is that variables declared with var get hoisted unlike those variables declared with let &amp;amp; const. But 1st what is hoisting? Great questions! Hoisting is a concept that describes a mechanism in which it‚Äôs possible to use variable declarations and call on functions before they are declared.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UD2h7147--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cnleu4u9l63x8ihn6sfw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UD2h7147--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cnleu4u9l63x8ihn6sfw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see above you can access or refer to variables declared with var but not let &amp;amp; const. And access function declarations as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9iM_PokG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs6b84qsmfy0xlyhtaq5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9iM_PokG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs6b84qsmfy0xlyhtaq5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That‚Äôs unusual because it should not be possible to use variables or functions before they are declared. Precisely because javascript gets read and executed from left to right going down from top to bottom. It seems like the variable and function declarations where pushed above the lines of code they are being used or called up on. That is not really the case though. Instead variable declarations and function declarations are stored in live memory or variable environment during the creation phase of execution context. The difference is that variables declared with var get assigned the default value of undefined initially and function declarations get assigned function definition before being stored in live memory or variable environment whereas variables declared with let &amp;amp; const don't get assigned any value. As a result return reference error. &lt;/p&gt;

&lt;p&gt;In addition variables declared with let &amp;amp; const are block scoped whereas variables declared using var are not block scoped. What does that mean? If the variable is declared using var then it is accessible or can be referenced from anywhere inside the global scope. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---7akTxqR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsn2y46jbghr68fjk98j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---7akTxqR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsn2y46jbghr68fjk98j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Similarly it is accessible or can be referenced from anywhere inside the local scope if it is declared inside block statements. But this is not the case when the variable is declared with let &amp;amp; const. Variables declared with let &amp;amp; const inside a block statement can only be accessed or referenced from within the block statement only.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--09EQ5834--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ff2x757d13h1pbjxbzf6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--09EQ5834--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ff2x757d13h1pbjxbzf6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What are the implications of these differences and why is it then advantageous or preferable to use let &amp;amp; const to declare variables instead of using var?&lt;/p&gt;

&lt;p&gt;Here are the three main advantages of using let &amp;amp; const instead of var:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;less possibilities for accidental changing of values or mutation since you can declare variables once&lt;/li&gt;
&lt;li&gt;discourages or prevents bad coding practices of using variables and calling on function before they are declared&lt;/li&gt;
&lt;li&gt;less chances for conflicts due to let and const being block scoped&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And all these result in less likelihood of bugs compared to using var to declare variables. This then prevents less time waisted in debugging which prevents possible loss of revenue &amp;amp; resources.&lt;/p&gt;

&lt;p&gt;All in all these are the major differences between var on one side and let &amp;amp; const on the other side. If you like my writing please follow my blog or my twitter account at &lt;a class="mentioned-user" href="https://dev.to/wolde_ai"&gt;@wolde_ai&lt;/a&gt;
 for more articles. &lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>hoisting</category>
    </item>
    <item>
      <title>Ignore properties C#</title>
      <author>Sukhpinder Singh</author>
      <pubDate>Mon, 10 May 2021 20:01:49 +0000</pubDate>
      <link>https://dev.to/ssukhpinder/ignore-properties-c-3e62</link>
      <guid>https://dev.to/ssukhpinder/ignore-properties-c-3e62</guid>
      <description>&lt;h4&gt;
  &lt;a href="#c-concepts"&gt;
  &lt;/a&gt;
  C# CONCEPTS
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#learn-how-to-ignore-properties-based-on-numerous-measures-with-systemtextjson"&gt;
  &lt;/a&gt;
  Learn how to ignore properties based on numerous measures with System.Text.Json.
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#learning-objectives"&gt;
  &lt;/a&gt;
  Learning Objectives
&lt;/h3&gt;

&lt;p&gt;When serializing C# objects to JSON using ‚Äú &lt;strong&gt;System.Text.Json&lt;/strong&gt; ,‚Äù all public properties by default serialized. If you don‚Äôt want a few of them to appear in the result, there are several options.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-article-demonstrates-how-to-ignore"&gt;
  &lt;/a&gt;
  The article demonstrates how to ignore
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Individual properties&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A null-value properties&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;All read-only properties&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;All null-value properties&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;All default-value properties&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install latest visual studio &lt;a href="https://visualstudio.microsoft.com/downloads/"&gt;community edition&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Knowledge of properties in C# language.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;System.Text.Json&lt;/strong&gt; namespace renders functionality for serializing to and deserializing from JSON.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ignore-individual-properties"&gt;
  &lt;/a&gt;
  Ignore Individual Properties
&lt;/h4&gt;

&lt;p&gt;Use the [&lt;strong&gt;JsonIgnore&lt;/strong&gt;] attribute to ignore particular property. Here‚Äôs an example class to serialize and JSON output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public class Example{ public string Property1 { get; set; } [JsonIgnore] public string Property2 { get; set; } }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;JSON Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{ "Property1":"Value1"}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#ignore-null-value-properties"&gt;
  &lt;/a&gt;
  Ignore Null Value Properties
&lt;/h4&gt;

&lt;p&gt;Option to specify condition with [&lt;strong&gt;JsonIgnore&lt;/strong&gt;] attribute‚Äôs property. The JsonIgnoreCondition enum provides the following options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Always&lt;/strong&gt; ‚Äî The property is always ignored. If no Condition is specified, this option is assumed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Never&lt;/strong&gt; ‚Äî The property is always serialized and deserialized, regardless of the &lt;strong&gt;DefaultIgnoreCondition&lt;/strong&gt; , &lt;strong&gt;IgnoreReadOnlyProperties&lt;/strong&gt; , and &lt;strong&gt;IgnoreReadOnlyFields&lt;/strong&gt; global settings.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WhenWritingDefault&lt;/strong&gt; ‚Äî The property is ignored on serialization if it‚Äôs a reference type null, a nullable value type null, or a value type default.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WhenWritingNull&lt;/strong&gt; ‚Äî The property is ignored on serialization if it‚Äôs a reference type null or a nullable value type null.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[JsonIgnore(Condition = JsonIgnoreCondition.Always)]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The following example demonstrates the usage of the [&lt;strong&gt;JsonIgnore&lt;/strong&gt;] attribute‚Äôs Condition property:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public class Example{ [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)] public DateTime Date { get; set; }

[JsonIgnore(Condition = JsonIgnoreCondition.Never)] public int TempC { get; set; }

[JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Summary { get; set; }};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#ignore-readonly-properties"&gt;
  &lt;/a&gt;
  Ignore read-only properties
&lt;/h4&gt;

&lt;p&gt;A read-only property, i.e., it contains a public getter but not a setter. To ignore all those properties, set the &lt;strong&gt;JsonSerializerOptions&lt;/strong&gt;. &lt;strong&gt;IgnoreReadOnlyProperties&lt;/strong&gt; to true, as shown in the below example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var options = new JsonSerializerOptions { IgnoreReadOnlyProperties = true, WriteIndented = true };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Serialization Use&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;jsonString = JsonSerializer.Serialize(classObject, options);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This option affects only serialization. While deserialization, read-only properties are neglected by default.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ignore-all-nullvalue-properties"&gt;
  &lt;/a&gt;
  Ignore all null-value Properties
&lt;/h4&gt;

&lt;p&gt;To neglect each null-value property, set the &lt;strong&gt;DefaultIgnoreCondition&lt;/strong&gt; property to &lt;strong&gt;WhenWritingNull&lt;/strong&gt; , as explained in the following example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;JsonSerializerOptions options = new(){ DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingNull };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Serialization Use&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;jsonString = JsonSerializer.Serialize(classObject, options);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#ignore-all-defaultvalue-properties"&gt;
  &lt;/a&gt;
  Ignore all default-value Properties
&lt;/h4&gt;

&lt;p&gt;To counter serialization of default values in properties, set the &lt;strong&gt;DefaultIgnoreCondition&lt;/strong&gt; property to &lt;strong&gt;WhenWritingDefault&lt;/strong&gt; , as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;JsonSerializerOptions options = new(){ DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingDefault };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Serialization Use&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;jsonString = JsonSerializer.Serialize(classObject, options);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thank you for reading, and I hope you liked the article.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#stay-tuned-on-c"&gt;
  &lt;/a&gt;
  Stay tuned on C
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://medium.com/c-sharp-progarmming"&gt;C Sharp Programming&lt;/a&gt;&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Take Screenshot Of HTML Element Using JavaScript</title>
      <author>Bibek</author>
      <pubDate>Mon, 10 May 2021 19:49:31 +0000</pubDate>
      <link>https://dev.to/bibekkakati/take-screenshot-of-html-element-using-javascript-13b7</link>
      <guid>https://dev.to/bibekkakati/take-screenshot-of-html-element-using-javascript-13b7</guid>
      <description>&lt;p&gt;Hello everyone üëã&lt;/p&gt;

&lt;p&gt;A few months back, I was working on a web-based project where a feature was required that is to take a screenshot of an HTML div in the browser and show it to the user. I was like, &lt;em&gt;sorry this is not possible&lt;/em&gt;. Then I did some research and got to know about this library called &lt;a href="https://html2canvas.hertzen.com/"&gt;html2canvas&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So in this article, I will show how can we capture a screenshot of a web page or any element of it using &lt;code&gt;html2canvas&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Download the javascript file: &lt;a href="https://html2canvas.hertzen.com"&gt;html2canvas&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;

&lt;p&gt;Include the &lt;code&gt;html2canvas.min.js&lt;/code&gt; file in your HTML file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;...
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./html2canvas.min.js"&lt;/span&gt; &lt;span class="na"&gt;defer&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will use the &lt;code&gt;html2canvas&lt;/code&gt; method to capture the screenshot of our web page or the HTML element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;html2canvas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;allowTaint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;useCORS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// It will return a canvas element&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toDataURL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;image/png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Handle errors&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;html2canvas&lt;/code&gt; method takes two arguments&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;first is the HTML element whose screenshot you want.&lt;/li&gt;
&lt;li&gt;second is a configuration object.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the &lt;code&gt;configuration object&lt;/code&gt;, we are using&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;allowTaint&lt;/code&gt; to allow cross-origin images to taint the canvas.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useCORS&lt;/code&gt; to attempt to load images from a server using CORS.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You can find the available configuration options &lt;a href="https://html2canvas.hertzen.com/configuration"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then we are converting the returned &lt;code&gt;canvas&lt;/code&gt; into a base64 image URL using the &lt;code&gt;toDataUrl&lt;/code&gt; method which expects two arguments&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;type&lt;/code&gt; : image format.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;encodingOptions&lt;/code&gt; : number between 0 and 1 indicating the image quality.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that's it, we captured the screenshot of our HTML element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#important"&gt;
  &lt;/a&gt;
  Important
&lt;/h3&gt;

&lt;p&gt;This library has some issues, some of them are mentioned in the &lt;a href="https://github.com/niklasvh/html2canvas"&gt;docs&lt;/a&gt;. I recommend going through it and understand it before using it in any production-based environment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are aware of other ways to achieve a similar kind of result, please feel free to share.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;Check out the GitHub &lt;a href="https://github.com/bibekkakati/blogs-projects/tree/main/web/html-screenshot"&gt;Repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Try it out here: &lt;a href="https://bibekkakati.github.io/blogs-projects/web/html-screenshot/"&gt;Live&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Enjoyed? Give it a thumbs-up üëç&lt;/p&gt;

&lt;p&gt;Thank you for reading | Feel free to &lt;a href="https://bibekkakati.me"&gt;connect&lt;/a&gt; üëã&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Originally published on &lt;a href="https://blog.bibekkakati.me/take-screenshot-of-html-element-using-javascript"&gt;blog.bibekkakati.me&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/bibekkakati"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7pOmeWpX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520coffee%26emoji%3D%26slug%3Dbibekkakati%26button_colour%3DFFDD00%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3Dffffff"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Learn to create your custom Global State Management with Vue 3</title>
      <author>Manuel Ojeda</author>
      <pubDate>Mon, 10 May 2021 19:46:09 +0000</pubDate>
      <link>https://dev.to/manuelojeda/learn-to-create-your-custom-global-state-management-with-vue-3-11am</link>
      <guid>https://dev.to/manuelojeda/learn-to-create-your-custom-global-state-management-with-vue-3-11am</guid>
      <description>&lt;h1&gt;
  &lt;a href="#learn-to-create-your-custom-global-state-management-with-vue-3"&gt;
  &lt;/a&gt;
  Learn to create your custom Global State Management with Vue 3
&lt;/h1&gt;

&lt;p&gt;Since Vue 3 Beta days we knew how awesome this framework was going to be, and since it annoucement we knew they did a monorepo making a lot of the feature from the framework available outside a &lt;strong&gt;Vue&lt;/strong&gt; component, with this I mean:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/* Anything you need from Vue goes here */&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we are going to use this advantage to create a simple but powerful Global State Management with a single few steps, so let's get started.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lets-create-a-simple-app"&gt;
  &lt;/a&gt;
  Let's create a simple app
&lt;/h2&gt;

&lt;p&gt;For this example let use a simple example, a counter that comes for default using the amazing &lt;a href="https://vitejs.dev/"&gt;Vite.js&lt;/a&gt;, for this we need to run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;npm init @vitejs/app storex (or the name you want to use)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, select &lt;strong&gt;vue&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OrsTuW5R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3kqvncm3p2ofvt81iml6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OrsTuW5R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3kqvncm3p2ofvt81iml6.png" alt="Select Vue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then &lt;strong&gt;JavaScript&lt;/strong&gt; or &lt;strong&gt;TypeScript&lt;/strong&gt;, it will work in both:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bpXCwKQs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5s7vu6bb2xmo1tskzvuo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bpXCwKQs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5s7vu6bb2xmo1tskzvuo.png" alt="Select JS or TS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then follow the rest by changing into the recently created project and run &lt;strong&gt;npm install&lt;/strong&gt; and open up the code in the the editor of your preference.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#creating-the-store"&gt;
  &lt;/a&gt;
  Creating the store
&lt;/h2&gt;

&lt;p&gt;Let's begin with the store by creating a new folder inside the &lt;strong&gt;src&lt;/strong&gt; folder by naming it, as you probably guess it, &lt;strong&gt;store&lt;/strong&gt; and create a &lt;strong&gt;index.js&lt;/strong&gt; inside the folder, the project directories should look like somethimg like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rWhA3opm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvp2hd6gso4zmmz0a4lh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rWhA3opm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvp2hd6gso4zmmz0a4lh.png" alt="Creating the store directory"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once created the index file open it and place the next code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;reactive&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;reactive&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
  &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="na"&gt;getters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;getCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;mutations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;incrementCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;initializeCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let explain why the store is created like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;reactive&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="c1"&gt;// We need to import the reactive function from Vue to make the&lt;/span&gt;
&lt;span class="c1"&gt;// global object reactive and get the treatment like this was Vuex&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="c1"&gt;// Create a state with the reactive function we imported previously, this will manage the reactivity for us&lt;/span&gt;
  &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;reactive&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; 
    &lt;span class="c1"&gt;// If this is null is for the example,&lt;/span&gt;
    &lt;span class="c1"&gt;// of course you can initialize the&lt;/span&gt;
    &lt;span class="c1"&gt;// counter with 0 directly&lt;/span&gt;
  &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="c1"&gt;// This section will handle the getters&lt;/span&gt;
  &lt;span class="na"&gt;getters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;getCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;// This section will manage the changes into the state&lt;/span&gt;
  &lt;span class="na"&gt;mutations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;incrementCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;// This section will manage the actions needed for our store&lt;/span&gt;
  &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;initializeCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it, the store is created, now we need to use it in our app.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#using-the-store-in-the-app"&gt;
  &lt;/a&gt;
  Using the Store in the App
&lt;/h2&gt;

&lt;p&gt;Open &lt;strong&gt;main.js&lt;/strong&gt; file in the root of &lt;strong&gt;src&lt;/strong&gt; and change the code with this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initializeCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="cm"&gt;/*
* By default the main.js comes like this:
* createApp(app)
* .mount(#app)
* We changed a little the behaviour by assigning the createApp 
* to the const app to avoid the mount before initializing the store
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In &lt;strong&gt;App.js&lt;/strong&gt; we need to change or add the store to track correctly in a global way when we are debugging/testing the application, so let's add the &lt;strong&gt;state&lt;/strong&gt; as a computed property:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#appvue"&gt;
  &lt;/a&gt;
  &lt;strong&gt;App.vue&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;If you want to use this sugar syntax, this all what you need, but be aware that the complete store is visible in the Dev Tools:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;setup&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;computed&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@vue/runtime-core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;HelloWorld&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/HelloWorld.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b9hrTWTu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gr2t7ze4og6nwuj502d6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b9hrTWTu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gr2t7ze4og6nwuj502d6.png" alt="The store is visible in the Dev Tools"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;&lt;center&gt;As mentioned the store is completily visible in the dev tools&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In case you want to make only the state visible you need to change the code like this but always using the Composition API:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;computed&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@vue/runtime-core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;HelloWorld&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/HelloWorld.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;HelloWorld&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;setup&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;state&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--skDZEm_k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yvlb1oa3r71o8vvc6ad.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--skDZEm_k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yvlb1oa3r71o8vvc6ad.png" alt="State only visible in the dev tools"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;&lt;center&gt;Only the state is visible in dev tools, so this is easily to debug when is needed&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#helloworldvue"&gt;
  &lt;/a&gt;
  &lt;strong&gt;HelloWorld.vue&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Open up &lt;strong&gt;HelloWorld.vue&lt;/strong&gt; which can be found in the &lt;strong&gt;Components&lt;/strong&gt; directory.&lt;/p&gt;

&lt;p&gt;Once is ready to edit you need to change the code for this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;{{ msg }}&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://vitejs.dev/guide/features.html"&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      Vite Documentation
    &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    |
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://v3.vuejs.org/"&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Vue 3 Documentation&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

  &lt;span class="c"&gt;&amp;lt;!-- 
    You need to change the @click for the method created that
    will handle the change from the store
    Also change the count inside the {{  }}
  --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"increment"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;count is: {{ count }}&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    Edit
    &lt;span class="nt"&gt;&amp;lt;code&amp;gt;&lt;/span&gt;components/HelloWorld.vue&lt;span class="nt"&gt;&amp;lt;/code&amp;gt;&lt;/span&gt; to test hot module replacement.
  &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- 
  Change the script from the sugar syntax 
  to the Oficial Composition API way
--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;computed&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="c1"&gt;// Import the store&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;setup&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Send the count as a computed value from&lt;/span&gt;
    &lt;span class="c1"&gt;// the getters in the store&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCount&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="c1"&gt;// This method will commit the change from the store&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;increment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mutations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;incrementCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;increment&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#42b983&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we get this final result!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PFyXz37c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kvexy27ucd4dwbmztjka.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFyXz37c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kvexy27ucd4dwbmztjka.gif" alt="Our app is working"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's it!!! We have created a simple but powerful Global State Management using the tools that Vue gives us and is fantastic what we can create from it, of course if you need advanced features I recommend to use &lt;a href="https://github.com/posva/pinia"&gt;Pinia&lt;/a&gt; or &lt;a href="https://github.com/vuejs/vuex"&gt;Vuex&lt;/a&gt;, but if you don't want to add more weight into your project this simple State Management should be enough.&lt;/p&gt;

&lt;p&gt;Tell me what you think of this trick in the commentary and I hope is helpful for you, see around the next time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ea-hHtfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.tenor.com/images/88ae11548eb77b751325c3ff493cddcc/tenor.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ea-hHtfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.tenor.com/images/88ae11548eb77b751325c3ff493cddcc/tenor.gif" alt="See you soon"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vue</category>
      <category>vue3</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Hiring manager interviewing for A+ JavaScript developer.</title>
      <author>Dmitry Amelchenko</author>
      <pubDate>Mon, 10 May 2021 19:25:51 +0000</pubDate>
      <link>https://dev.to/dmitryame/hiring-manager-interviewing-for-a-javascript-developer-59ph</link>
      <guid>https://dev.to/dmitryame/hiring-manager-interviewing-for-a-javascript-developer-59ph</guid>
      <description>&lt;p&gt;&lt;code&gt;A small team of A+ players can run circles &lt;br&gt;
around a giant team of B and C players.&lt;/code&gt; &lt;br&gt;
                              - &lt;a href="https://www.quotemaster.org/author/Steve+Jobs"&gt;Steve Jobs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.wisaw.com/photos/4432"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5gjoJSMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.wixstatic.com/media/c90e7e_e7acbbf9322b456c905cabde62301b02%257Emv2.png/v1/fill/w_720%2Ch_478%2Cal_c%2Cq_90%2Cusm_0.66_1.00_0.01/c90e7e_e7acbbf9322b456c905cabde62301b02%257Emv2.webp" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interview-process-is-more-of-an-art-than-a-science"&gt;
  &lt;/a&gt;
  Interview process is more of an art than a science.
&lt;/h2&gt;

&lt;p&gt;There are as many opinions on how to properly conduct interview, as there are people out there. &lt;/p&gt;

&lt;p&gt;Everyone will have techniques which work for them. Here I will share my personal approach to the interview process and what I'm trying to pursue when talking to developers. &lt;/p&gt;

&lt;p&gt;My goal is not to test particular set of skills. After all, I'm only a hiring manager, and I should expect people working on my team to know more than I do. Developers know better what questions will let them shine during the interview. As such, the most important question to ask is -- "tell me what should I ask you"?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#common-sense-rule-requires-us-to-diversify"&gt;
  &lt;/a&gt;
  Common Sense rule requires us to diversify.
&lt;/h2&gt;

&lt;p&gt;Whether we talk about financial portfolio or team of individuals tasked with solving tough challenges -- everyone will benefit from diversification. People of different races, genders, religious believes, musical preferences, cultural backgrounds  working together on the same team will produce much better outcome than the team of individuals who are exactly alike. It's time-tested and proven by science -- there is no better way to build resiliency in your organization than to diversify.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-interview-is-a-two-way-street"&gt;
  &lt;/a&gt;
  The interview is a two way street.
&lt;/h2&gt;

&lt;p&gt;It's just as important for me, as a hiring manager, to sell the job to the candidate, as to the developers to sell what they bring on a table.&lt;/p&gt;

&lt;p&gt;The goal of the interviewer (me) is to spark an excitement. And it's not easy to fake the excitement. &lt;/p&gt;

&lt;p&gt;You don't want to hire a developer who is in this occupation only because it pays well. Money is a nice supplement that most A+ players get by default anyways. The A+ geeks are looking for their next cool project just as badly as the hiring manager is looking for the A+ engineer. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#software-engineering-is-a-lifestyle"&gt;
  &lt;/a&gt;
  Software engineering is a lifestyle.
&lt;/h2&gt;

&lt;p&gt;This life style is not suited for everyone --  A+ developer is the one who makes a conscious decision to live this way. You want to hire a developers who treat their job as a hobby.  &lt;a href="https://dev.to/thewebguyy/motivation-doesn-t-matter-1ji0"&gt;Motivation does not matter&lt;/a&gt;  but boredom is the worse thing that can happen to an organization. If you end up with the team of B's and C's -- boredom will destroy your company. The goal is to filter A+ engineers from the crowd of "copy paste design pattern" practitioners that are in this job only for the money.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#most-questions-are-openended-there-is-no-right-or-wrong-answer"&gt;
  &lt;/a&gt;
  Most questions are open-ended -- there is no right or wrong answer.
&lt;/h2&gt;

&lt;p&gt;There are no specific coding or algorithm questions. These types of questions  prove little. A+ developer should be able to figure it out on a job in no time -- give an A+ developer Google search, team of other geeks who respect each other based on what they do (not their titles), and miracles will start to happen. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-best-outcome"&gt;
  &lt;/a&gt;
  The best outcome
&lt;/h2&gt;

&lt;p&gt;is, when I (the hiring manager), learn something new from the candidate. Honestly, I do not always understand what exactly the interviewee is talking about, which is totally cool -- I will google for the answers later. Often I will go "Wow" few days after the interview. We expect the candidate to come prepared and, sometimes, ask to follow up on some questions. Why shouldn't candidate expect the same in return?&lt;/p&gt;

&lt;p&gt;Java Script is in high demand these days. This specific article is sharing thoughts on how to filter A+ JS developer from the pool of B's and C's. Hoverer similar techniques can apply to any language. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spoiler-alert"&gt;
  &lt;/a&gt;
  Spoiler alert.
&lt;/h2&gt;

&lt;p&gt;If you ever apply for a job on my team, in this article I will give you some hints about what I expect to hear during the interview, but, I'm going to warn you -- if you are a true A+ type, you have nothing to worry about :) However, the B's and the C's most likely will not pass the BS filter, because this is how this process is designed to work. But hey, no worries, the job market is really hot these days -- you will find some other place were you will be earning lots of cash and will be happy. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#and-finally-here-is-the-list-of-questions"&gt;
  &lt;/a&gt;
  And finally, here is the list of questions:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#common-performance-issues-of-react-apps-common-techniques-for-react-and-react-native-optimization"&gt;
  &lt;/a&gt;
  Common performance issues of react apps. Common techniques for react and react native optimization?
&lt;/h3&gt;

&lt;p&gt;Java Script is old, clunky, sometimes convoluted, but -- it's still the most used computer language in the world today and for good reason. React is as well one of the most influential presentation frameworks built in JS. &lt;/p&gt;

&lt;p&gt;If you are passionate about Java Script, and if you position yourself as an A+ dev -- you could not escape hearing about React. Just like JavaScript language, React framework is not perfect. Tell me what you love/hate about React. Tell me how do you work around these challenges. What makes you excited or frustrated -- I want to know about your personal experience and opinion. Tell me what was the last challenge you were able to overcome in React, brag about how elegant your solution was, what kind of performance boost you were able to achieve in numbers. This is perfect timing to share some code samples if you have any, or feel free to grab a marker and go wild on the white board.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#higher-order-components-hoc-vs-hooks-whats-your-preference-why"&gt;
  &lt;/a&gt;
  Higher order components (HOC) vs Hooks? What's your preference? Why?
&lt;/h3&gt;

&lt;p&gt;If you've been around for a while, you must have heard that React core team has changed approach to component composition 3 times in the past 5 years. Hooks are the most recent change, which replace HOC's. Do you know what was React using for composition prior to HOC?  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#expo-managed-life-cycle-benefits-do-you-think-the-managed-workflow-is-preferred-and-why"&gt;
  &lt;/a&gt;
  Expo managed life cycle benefits? Do you think the managed workflow is preferred and why?
&lt;/h3&gt;

&lt;p&gt;The same logic applies here as to the last couple of questions. If you've established yourself as an A+ kind, you had to get curious about Mobile development, since mobile user engagement is on a trajectory to overtake web apps. For a JS developer, looking to build Mobile apps, React-Native should be high on the list. In addition to this, Expo is very cool, I think it's no brainer, every React-Native developer will prefer to use expo. If you like Expo, please explain why? There is no right or wrong answer. My personal preference is to always use Expo managed life cycle, but hey, perhaps this is because I'm not a developer any more. Please teach me what should I use and why? If there is something better than Expo for building Mobile apps -- please tell me why is it preferred option for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-dev-environment-do-you-use-and-why"&gt;
  &lt;/a&gt;
  What dev environment do you use and why?
&lt;/h3&gt;

&lt;p&gt;Mac/Pc? Brew? IDE?  Perhaps it's VIM, could be Emacs or Atom, Visual Studio or WebStorm? There is no right or wrong answer. Tell me why your Editor is the best choice for JS development. Why your dev environment makes you A+ developer? &lt;/p&gt;

&lt;p&gt;It's also cool to talk about NPMjs ecosystem here. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-was-the-last-bookarticle-youve-read-about-js"&gt;
  &lt;/a&gt;
  What was the last book/article you've read about JS?
&lt;/h3&gt;

&lt;p&gt;Books are a way of the past. No one reads books to obtain technical knowledge any more. Perhaps I'm completely wrong. Tell me the book I should read about JS. &lt;/p&gt;

&lt;p&gt;Are you subscribed to any JS mailing lists from which you are learning to improve your JS skills daily? &lt;a href="https://www.medium.com"&gt;medium.com&lt;/a&gt;? &lt;a href="https://dev.io"&gt;dev.io&lt;/a&gt;? &lt;/p&gt;

&lt;p&gt;How do you keep your JS skills sharp and up to date? &lt;/p&gt;

&lt;p&gt;Do you attend  local or online meetups regularly? Which ones should I join?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#js-evolution-common-js-es67-typescript-personal-preference"&gt;
  &lt;/a&gt;
  JS evolution? Common JS? Es6/7? Typescript? Personal preference?
&lt;/h3&gt;

&lt;p&gt;Let's talk about JS evolution. This is where "copy paste design pattern" will fail -- in JS you must understand how some of the latest cool trends like TypeScript and Es6/7 transpile down to Common JS. Why do we have such things as Polyfill and Babel?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-spread-operator-how-it-works"&gt;
  &lt;/a&gt;
  What is spread operator? How it works?
&lt;/h3&gt;

&lt;p&gt;Most likely, if you are truly the A+ type, you will already have answered this question when we were talking about JS evolution. Just a friendly reminder, it's OK to be more specific about Es6/7 features you are passionate about. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#asyncawait-in-js-how-it-works-promises-callbacks"&gt;
  &lt;/a&gt;
  Async/Await in JS, how it works? Promises? Callbacks?
&lt;/h3&gt;

&lt;p&gt;The same as for the previous question. If you really love JS -- here is the great opportunity for you to rave about callback hell, what it is and how to address it elegantly in JS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preferred-database"&gt;
  &lt;/a&gt;
  Preferred Database?
&lt;/h3&gt;

&lt;p&gt;Variety of options are available these days. Let's share our passionate view points about what is the best DB to be used in a JS project and why? What are different types of DB's that are better suited for specific use cases? &lt;/p&gt;

&lt;p&gt;You personal approach to Object Relational mapping in JS? &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#restful-api-basic-principles"&gt;
  &lt;/a&gt;
  Restful API? Basic principles?
&lt;/h3&gt;

&lt;p&gt;Even if you are not going to be tasked with building back-end API's, you still have to know basic RestFull principles. What framework first popularized use of Rest? (Ruby on Rails). What are the other principles which made Rails popular back in the days? Have you heard of "Do not Repeat Your Self" (DRY) and "Convention over Configuration"?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-lambda-limitations"&gt;
  &lt;/a&gt;
  AWS Lambda limitations?
&lt;/h3&gt;

&lt;p&gt;The only reason I'm asking about AWS Lambda, because I've used it myself. &lt;/p&gt;

&lt;p&gt;In this question I want to make sure that we agree -- there is no such thing as unlimited computing resources. Even in AWS, there are boundaries and constraints which, if you know what they are, will help you to better design your function as a service. &lt;/p&gt;

&lt;p&gt;No need to give precise numbers, but what should we be aware of and pay attention to when designing FAAS ? &lt;/p&gt;

&lt;p&gt;Does not have to be AWS Lambda, could be Google Cloud or Microsoft Azure, or somethings else. I bet they all have similar limitations around payload size, memory availability, length of execution and concurrent execution limits. &lt;/p&gt;

&lt;p&gt;What do you know about CDN's and Edge network?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-makes-node-scale-for-the-backend"&gt;
  &lt;/a&gt;
  What makes node scale for the back-end?
&lt;/h3&gt;

&lt;p&gt;Why backend built in node can out-scale Java based server? You must have already talked about it when we were discussing callbacks and promises. Just another friendly reminder to talk about it -- it's important. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-was-the-coolest-challenge-you-solved-recently"&gt;
  &lt;/a&gt;
  What was the coolest challenge you solved recently
&lt;/h3&gt;

&lt;p&gt;This is my most favorite question. If I had only one question to ask -- this would be it. &lt;/p&gt;

&lt;p&gt;As I already hinted you -- you should not expect a coding assignment during my interview. &lt;/p&gt;

&lt;p&gt;If I was to give you a coding assignment, it would be more of a demonstration of my superiority as a coder, because you will never know exactly how I would prefer you to code the challenge.&lt;/p&gt;

&lt;p&gt;This should be all about you, so, don't hesitate to go wild -- impress me. Could be a framework that you published as npmjs, or a 3 lines function that you wrote which makes your friends go "wow". I promise -- I will appreciate anything that makes you proud of your achievements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-are-some-bonus-questions"&gt;
  &lt;/a&gt;
  Here are some bonus questions
&lt;/h2&gt;

&lt;p&gt;Most likely, by now, we've talked about a lot of different things, and you are as excited about joining my team as I am excited about you coming aboard. Just in case we still have time left, here are some extra stuff to chat about. The chance is we already touched upon some or most of it. If not -- see the  list below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graph-ql"&gt;
  &lt;/a&gt;
  Graph QL?
&lt;/h3&gt;

&lt;p&gt;What's so cool about graph QL? Where did it come from? What challenges is it trying to solve. How does it compare to Rest? Any good/bad GraphQL frameworks you'd recommend to use or stay away from?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-principles-of-functional-programming-what-makes-it-differentbetter-than-oop-fp-languages-youve-used-liked-disliked"&gt;
  &lt;/a&gt;
  Basic principles of functional programming? What makes it different/better than OOP? FP languages you've used, liked, disliked?
&lt;/h3&gt;

&lt;p&gt;Ideally the answers will revolve around JS. However, totally appropriate to talk about high level concepts in any language, such as pure functions, state manipulation, closures, functions composition and currying etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#name-few-js-fp-libraries-pros-and-cons"&gt;
  &lt;/a&gt;
  Name few JS FP libraries? Pros and Cons?
&lt;/h3&gt;

&lt;p&gt;If you are passionate about functional programming in JS, you've got to know about some history of libraries.&lt;/p&gt;

&lt;p&gt;What are the commonly used functional libraries in JS, what are they trying to solve and how:&lt;/p&gt;

&lt;p&gt;lodash, ramda, sanctuary?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And that's  all folks.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Hope you've had fun during the interview. Perhaps you found some of my questions a bit controversial, perhaps you were able to spot some mistakes. But hey, I never said I know everything better than you do. Please let me know if I should make any corrections --  this is just one more thing that may potentially gain you a spot on my team. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.wisaw.com/photos/4443"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MeuDoUG8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.wixstatic.com/media/c90e7e_f41701db2af94a1db16c9a0e480ab465%257Emv2.png/v1/fill/w_698%2Ch_950%2Cal_c%2Cq_90/c90e7e_f41701db2af94a1db16c9a0e480ab465%257Emv2.webp" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The article is reposted from &lt;a href="https://www.echowaves.com/post/hiring-manager-interviewing-for-a-javascript-developer"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>interview</category>
      <category>react</category>
    </item>
  </channel>
</rss>
