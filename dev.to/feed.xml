<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>PHP isn't dead! Don't be afraid to use it and implement it in your projects...</title>
      <author>ManuTheCoder</author>
      <pubDate>Sat, 20 Nov 2021 07:24:31 +0000</pubDate>
      <link>https://dev.to/manuthecoder/php-isnt-dead-dont-be-afraid-to-use-it-and-implement-it-in-your-projects-2225</link>
      <guid>https://dev.to/manuthecoder/php-isnt-dead-dont-be-afraid-to-use-it-and-implement-it-in-your-projects-2225</guid>
      <description>&lt;p&gt;Ok. Let's get this straight. PHP is not dead. It's not going to die anytime soon. Why? PHP released a new version recently (actually just a few months ago). It exists in more than 80% of all websites. It’s also used actively by millions of developers. None of that will disappear out of thin air.&lt;/p&gt;

&lt;p&gt;Despite the fact that many new languages flourish every year, I would not hesitate to say that PHP (besides JS) is one of the safest languages in the world in terms of jobs, and will securely guarantee an enormous job market around the world for much longer than 5 years. Here is why.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PHP adopts new ideas slowly.&lt;/strong&gt; It may sound like a weird reason for a programming language to keep up with the contemporary development trends. In fact, what happens is only proven, polished and time-checked ideas find their way into PHP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PHP has low entry level.&lt;/strong&gt; This means that it is one of the easiest languages to start coding for newbies ever. Then, once it is adopted by newbies, it often turns out that this language is enough for a lot of people that do not need genius, complex, mathematical and scientific features. Result - they just keep using PHP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Big platforms and companies which use PHP make lots of money every day!&lt;/strong&gt; WordPress, for example, which is made in PHP, is a free framework, but WordPress.com is a commercial WordPress hosting and makes money out of it. Then, there are tens of others like it. Now multiply this business volume by the number of other big PHP projects, like shopping carts, CRMs, issue tracking systems, web analytics...&lt;/p&gt;

&lt;p&gt;And one of the biggest reasons...&lt;br&gt;
&lt;strong&gt;Servers accessibility.&lt;/strong&gt; The cheapest servers / VPS for web projects always support PHP. PHP has one of the lowest minimum requirements to the memory / processor speed.&lt;/p&gt;

&lt;p&gt;Is PHP on the decline? Yes. Is it a crappy programming language? Absolutely. But that doesn’t mean it’s going away any time soon.&lt;/p&gt;

&lt;p&gt;Consider COBOL. An almost sixty year old language that’s horrible by modern standards and has been on the decline for thirty years. Yet it runs our financial infrastructure, and there are still an estimated one million COBOL developers worldwide. Maybe that is what PHP will be like in a couple of decades.&lt;/p&gt;

</description>
      <category>php</category>
    </item>
    <item>
      <title>How To Move an EBS volume to another region?</title>
      <author>Gurlal Sidhu</author>
      <pubDate>Sat, 20 Nov 2021 07:16:21 +0000</pubDate>
      <link>https://dev.to/gsidhu13/how-to-move-an-ebs-volume-to-another-region-5emd</link>
      <guid>https://dev.to/gsidhu13/how-to-move-an-ebs-volume-to-another-region-5emd</guid>
      <description>&lt;p&gt;Moving volumes across two regions is not permitted, however, creating a snapshot of a volume and then moving to another region is allowed. Let's see how it is done:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Launch two instances in different regions( us-east-1 and us-west-1)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a volume in the first region (us-east-1)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to EC2, under Elastic Block Store (left pane), and click on Volumes&lt;/li&gt;
&lt;li&gt;Create volume. The size of this volume would be 10 GB&lt;/li&gt;
&lt;li&gt;Once it is successfully created, you will see its state set to available &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NW36I83V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5czott7gc34unegsyd3l.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NW36I83V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5czott7gc34unegsyd3l.jpeg" alt="pic1" width="533" height="116"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NhQHsaWE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o78fjyq9czwc2t5fv2yd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NhQHsaWE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o78fjyq9czwc2t5fv2yd.jpeg" alt="pic2" width="491" height="260"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P7CPJDF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9k08tcdqlfsdra8bb0l.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P7CPJDF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9k08tcdqlfsdra8bb0l.jpeg" alt="pic3" width="624" height="60"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Now right on newly created volume and select ‘attach volume’&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select your instance, leave the device as it is - /dev/sdf and attach. It will take a couple of minutes to attach the volume.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YkDMSCmP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kb6rpbzvleq94nsfo8a5.jpeg" alt="pic4" width="437" height="130"&gt;
&lt;/li&gt;
&lt;li&gt;Now Connect to your EC2 Instance - either via SSH or connect directly from the portal. I will be connecting from the portal (it will open in another tab).&lt;/li&gt;
&lt;li&gt;First thing first, switch to root user - sudo su&lt;/li&gt;
&lt;li&gt;check if the attached volume is listed -  lsblk
&lt;/li&gt;
&lt;li&gt;New volumes don’t file system configure, set up a file system for this volume - mkfs -t xfs /dev/xvdf&lt;/li&gt;
&lt;li&gt;Create a mount point for your volume -mkdir gsdata and mount the volume - mount /dev/xvdf /gsdata&lt;/li&gt;
&lt;li&gt;Going to check if I can see all my buckets - aws s3 ls&lt;/li&gt;
&lt;li&gt;Copy files from Testing Vol folder in inpuutbuckgs bucket to /gsdata - aws s3 cp S3://inputbuckgs/TestingVol /gsdata --recursive &lt;/li&gt;
&lt;li&gt;Check moved files - ls -l /gsdata&lt;/li&gt;
&lt;li&gt;Now you could create directories upload files to this volume. I’ll create a test folder and move some files from s3 bucket. &lt;/li&gt;
&lt;li&gt;Before you copy files from the s3 bucket, you will need to configure your AWS profile. I have it already configured.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BCfp1Aqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdsn4j8zec02lxglkmsb.jpeg" alt="pic5" width="624" height="132"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uoa_n8zM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljt4jib9m8hei3enuwpw.jpeg" alt="pic6" width="498" height="392"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--353A39gh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q1ts23u2knrsu4qrx20c.jpeg" alt="pic7" width="498" height="392"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kq2LsfTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7nvgp34afker0h9atgc.jpeg" alt="pic8" width="417" height="155"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8PHvZ9es--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/is1i4jlct8jo7kblupf3.jpeg" alt="pic9" width="624" height="117"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JgFh19D9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0w0mzlrzzs798mdtttg.jpeg" alt="pic10" width="417" height="155"&gt;
&lt;/li&gt;
&lt;li&gt;Now go back to the EC2 portal, and create a snapshot of the volume&lt;/li&gt;
&lt;li&gt;Right-click on the volume and select ‘create a snapshot’, Type in the description on the prompted screen, and create Snapshot &lt;/li&gt;
&lt;li&gt;Go to Snapshots under Elastic Block Store, right-click on this new snapshot, and select copy&lt;/li&gt;
&lt;li&gt;Select the region where you want to copy, add a description, and copy 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-WXWNed--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az87sbtonhxrxl2e082f.jpeg" alt="pic11" width="385" height="281"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uhzQ2woR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nflpxzch74y3r8g5pmi.jpeg" alt="pic12" width="445" height="206"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jAbHsAiL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/thjx2toscabynp7v3f0x.jpeg" alt="pic13" width="462" height="169"&gt; 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XuL2RnJ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/izphvvuztxrmtxq4anlu.jpeg" alt="pic14" width="443" height="209"&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Go to another region, check your snapshot that you just copied, it could take depending on the size of your snapshot&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Right-click on the snapshot and create Volume &lt;/li&gt;
&lt;li&gt;Select the size, type, and region on the prompted screen. Increasing size is ok, but if you try to reduce the size, you may experience data lose 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uB914og4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfiks0n93i78py3od9jz.jpeg" alt="pic15" width="624" height="105"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7GhM9VbX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vu9b0rkeukmloy75rk3x.jpeg" alt="pic16" width="351" height="243"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pkRKEV-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgxx5x0kd4yuz5rx5okv.jpeg" alt="pic17" width="446" height="263"&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;EBS volume has been moved to another region. However, I am going to attach an instance in this region to show you that there was no data lost since the last snapshot &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Attach the volume like we did it above for an instance in us-east-1 region and connect to EC2 Instance &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Please don’t try to format the file system again, it will delete your data. Just mount the volume here. As you can see here, all the files that were uploaded in the us-east-1 region were available here.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HVs9bBPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sc216lw8v8h50bxpmdl.jpeg" alt="pic18" width="536" height="172"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JsY52ueK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycj43xe6yqldptxyorch.jpeg" alt="pic19" width="602" height="161"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BfWIKVIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vevxdw5yms32932btlrp.jpeg" alt="pic20" width="548" height="85"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2ZfdHzKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbjmr92hf5adcl37z0fv.jpeg" alt="pic21" width="624" height="385"&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now detach your volumes in both regions, delete volumes and snapshot, and terminate your instance to avoid any charges from AWS&lt;/p&gt;

&lt;p&gt;Use case Scenarios of what we did above:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Perform a backup of your volume in another region.&lt;/li&gt;
&lt;li&gt;Restore volume in another region from snapshot&lt;/li&gt;
&lt;li&gt;Please Note: you could also create a Snapshot Lifecycle Policy that will create snapshots of your volume hourly, every two or four hours, or daily and retain those snapshots up to desired days. &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>tutorial</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Code Reviews</title>
      <author>MizuhoOkimoto</author>
      <pubDate>Sat, 20 Nov 2021 07:13:18 +0000</pubDate>
      <link>https://dev.to/okimotomizuho/code-reviews-2n44</link>
      <guid>https://dev.to/okimotomizuho/code-reviews-2n44</guid>
      <description>&lt;p&gt;After I contributed to an internal project, I experienced reviewing 2 pull requests and they were in the repository I contributed to. This project is for an online note for C language in my college, and uses Docusaurus.&lt;br&gt;
🔗Repository: &lt;a href="https://github.com/Seneca-ICTOER/IPC144"&gt;IPC144&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I contributed to the project, I audited and fixed the markdown page and was familiar with each task, so I reviewed the Pull Requests of other students who did it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#review1"&gt;
  &lt;/a&gt;
  Review1.
&lt;/h3&gt;

&lt;p&gt;🔗Issue: &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/95"&gt;https://github.com/Seneca-ICTOER/IPC144/pull/95&lt;/a&gt;&lt;br&gt;
I reviewed Reza9472's work, where he worked on not only the markdown file but also modified css and package.json file. He did a good job but I found some extra spaces similar to how I did it, so I made a comment about it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#review2"&gt;
  &lt;/a&gt;
  Review2.
&lt;/h3&gt;

&lt;p&gt;🔗Issue: &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/84"&gt;https://github.com/Seneca-ICTOER/IPC144/pull/84&lt;/a&gt;&lt;br&gt;
I read the markdown file line by line and found an extra comment, so I asked rclee91 to delete it. I wondered if we needed to delete extra indentations in the code blocks because I thought it wasn't user-friendly.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qjQd3EJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0j6hxw9ujhit275hmfn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qjQd3EJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0j6hxw9ujhit275hmfn8.png" alt="code block and the mobile display" width="880" height="505"&gt;&lt;/a&gt;&lt;br&gt;
I checked C language code format, and the generator fixed the extra indentations, also some other students deleted the indentations in their PR. However, the original course note (&lt;a href="https://ict.senecacollege.ca/~ipc144/pages/content/valid.html"&gt;IPC144&lt;/a&gt;)has the same indentations so I just suggested him to change it.&lt;br&gt;
rclee91 said the indentations are the same for all of the code example in the md file. The owners of the repo didn't say anything, so I was driven by the desire to have all the formatting the same, but decided to overlook it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;I experienced getting reviews and also reviewing through this assignment. By comparing what I did with what other people did along the same task, it was helpful to be able to know what I was missing.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>github</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Really simple encryption in PHP!</title>
      <author>ManuTheCoder</author>
      <pubDate>Sat, 20 Nov 2021 07:03:52 +0000</pubDate>
      <link>https://dev.to/manuthecoder/really-simple-encryption-in-php-3kk9</link>
      <guid>https://dev.to/manuthecoder/really-simple-encryption-in-php-3kk9</guid>
      <description>&lt;p&gt;Have you ever wanted to improve your app's security by hiding everything in your database? Let's make a simple encryption and decryption script in PHP using the &lt;code&gt;openssl_encrypt&lt;/code&gt; and &lt;code&gt;openssl_decrypt&lt;/code&gt; functions&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h3&gt;

&lt;p&gt;Let's define some variables&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"encryption_method"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"AES-128-CBC"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"your_amazing_key_here"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Obviously, change the encryption key&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h3&gt;

&lt;p&gt;Creating a function to encrypt data&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$plaintext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ivlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_cipher_iv_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$cipher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;encryption_method&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$iv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_random_pseudo_bytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ivlen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$plaintext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cipher&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OPENSSL_RAW_DATA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$iv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$hmac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hash_hmac&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sha256'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$as_binary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ciphertext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;base64_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$iv&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$hmac&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Explained&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;openssl_random_pseudo_bytes&lt;/code&gt;  - Generates a string of pseudo-random bytes, with the number of bytes determined by the length parameter.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;openssl_cipher_iv_length&lt;/code&gt; - The cipher method, see openssl_get_cipher_methods() for a list of potential values&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;openssl_encrypt&lt;/code&gt; - PHP lacks a build-in function to encrypt and decrypt large files. &lt;code&gt;openssl_encrypt()&lt;/code&gt; can be used to encrypt strings&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;hash_hmac&lt;/code&gt; - Returns a string containing the calculated message digest as lowercase hexits unless binary is set to true in which case the raw binary representation&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;base64_encode&lt;/code&gt; - Encodes the given string with base64&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h3&gt;

&lt;p&gt;Let's create a simple script to decrypt our encrypted string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;base64_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ivlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_cipher_iv_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$cipher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;encryption_method&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$iv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ivlen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$hmac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ivlen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$sha2len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ivlen&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$sha2len&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$original_plaintext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cipher&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OPENSSL_RAW_DATA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$iv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$calcmac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hash_hmac&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sha256'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$as_binary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hash_equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$hmac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$calcmac&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$original_plaintext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Explained&lt;/strong&gt; &lt;br&gt;
The only difference here is the &lt;code&gt;openssl_decrypt&lt;/code&gt; function. Takes a raw or base64 encoded string and decrypts it using a given method and key.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#complete-code"&gt;
  &lt;/a&gt;
  Complete code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"encryption_method"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"AES-128-CBC"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"your_amazing_key_here"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$plaintext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ivlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_cipher_iv_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$cipher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;encryption_method&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$iv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_random_pseudo_bytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ivlen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$plaintext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cipher&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OPENSSL_RAW_DATA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$iv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$hmac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hash_hmac&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sha256'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$as_binary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ciphertext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;base64_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$iv&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$hmac&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;base64_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ivlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_cipher_iv_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$cipher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;encryption_method&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$iv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ivlen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$hmac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ivlen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$sha2len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ivlen&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$sha2len&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$original_plaintext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cipher&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OPENSSL_RAW_DATA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$iv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$calcmac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hash_hmac&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sha256'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$as_binary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hash_equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$hmac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$calcmac&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$original_plaintext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nf"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nf"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-use"&gt;
  &lt;/a&gt;
  How to use
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#to-encrypt-something"&gt;
  &lt;/a&gt;
  To encrypt something
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nf"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#to-decrypt-something"&gt;
  &lt;/a&gt;
  To decrypt something
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nf"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"lF0wxjGE4H7bbSH/51+ihseCa7aT5hn2Wm0b4expCxqc/W9A38m37QXakG/i/hAjSrNzMpINfZWnh8/9Kd2nodHTiP0Vq0euQ4Z3BOO1vt0WP6dsGRR03po7e4dIlep/lMrwS341jzN+o+FPUtcPVPUr6BEc0RtHwFoUH6NNm+2mWXYLUVH4Ct86iuD8+6eBC1SG3IG21R1dWREGdLrsWQ=="&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See if you can decrypt the following message. I'll post the encryption key in the comments section later!&lt;br&gt;
Hint: The key is a 3-letter programming language&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h3&gt;

&lt;p&gt;This code was taken from my own app, &lt;a href="https://smartlist.ga/"&gt;Smartlist&lt;/a&gt;. Smartlist is a home inventory app that lets you keep track of what's in your home! We encrypt our items, tasks, and notes too!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>php</category>
    </item>
    <item>
      <title> Open Exchange
Use Third Party Charting Libraries Today In Your Analytics Dashboard!</title>
      <author>InterSystems Developer</author>
      <pubDate>Sat, 20 Nov 2021 06:52:10 +0000</pubDate>
      <link>https://dev.to/intersystems/open-exchangeuse-third-party-charting-libraries-today-in-your-analytics-dashboard-p78</link>
      <guid>https://dev.to/intersystems/open-exchangeuse-third-party-charting-libraries-today-in-your-analytics-dashboard-p78</guid>
      <description>&lt;p&gt;Now available on &lt;a href="https://openexchange.intersystems.com/package/ThirdPartyChartPortlets"&gt;Open Exchange&lt;/a&gt; is a library of third party charts available to use within DeepSee/InterSystems IRIS BI dashboards. To start, simply download and install, select the new portlet as the widget type, then select the chart type that you desire. If you don't find the type of chart you are looking for, you can easily extend the portlet to implement your desired chart type. These new chart types can be used within existing dashboards or you can create new dashboards using them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hbQTvnv3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xz1xr9l1ay7ttpjqc4qd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hbQTvnv3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xz1xr9l1ay7ttpjqc4qd.png" alt="Image description" width="880" height="484"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After installing, the portlet can be selected and configured as follows:&lt;br&gt;&lt;br&gt;
1) Add a new widget to your dashboard&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OognvcyN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k56fwdeklrzavokf72bi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OognvcyN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k56fwdeklrzavokf72bi.png" alt="Image description" width="880" height="700"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) Select Portlets, then Highcharts, then assign your data source&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gFb3Xegy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ge3qr033qaj5mp43uuig.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gFb3Xegy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ge3qr033qaj5mp43uuig.png" alt="Image description" width="880" height="700"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;3) The widget will default to a line chart&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pq7K-mzP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjykqm65h06lis3kh0eg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pq7K-mzP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjykqm65h06lis3kh0eg.png" alt="Image description" width="880" height="700"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;4) Navigate to the Widget Settings to change the Chart Type if desired&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ViACkeqt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c00c1ks4cj48t3urvd7z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ViACkeqt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c00c1ks4cj48t3urvd7z.png" alt="Image description" width="880" height="700"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;5) Select the desired chart type (I will choose "Bar" for this example)&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ovoJkW8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnxx63og3sjm9bauwcu0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ovoJkW8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnxx63og3sjm9bauwcu0.png" alt="Image description" width="880" height="700"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;6) Data is now rendered using the new chart type&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BgpxIVl8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbv3gfo7cwmfipyutlyf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BgpxIVl8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbv3gfo7cwmfipyutlyf.png" alt="Image description" width="880" height="700"&gt;&lt;/a&gt; &lt;/p&gt;

</description>
      <category>analytics</category>
      <category>javascript</category>
      <category>opensource</category>
      <category>uidevelopment</category>
    </item>
    <item>
      <title>UIHUT- Product of the Day</title>
      <author>Mahfuzul Islam Nabil</author>
      <pubDate>Sat, 20 Nov 2021 06:39:52 +0000</pubDate>
      <link>https://dev.to/mahfuzulnabil/uihut-product-of-the-day-5373</link>
      <guid>https://dev.to/mahfuzulnabil/uihut-product-of-the-day-5373</guid>
      <description>&lt;p&gt;Hey, Dev's Beautiful People.&lt;br&gt;
We are Really Thankful to Guys for showing your love for us. We did it. We Got #1 Product of the day Badge.🥰🥰&lt;br&gt;
&lt;a href="https://www.producthunt.com/posts/uihut-2-0"&gt;https://www.producthunt.com/posts/uihut-2-0&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vdeqdRYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oukew3379gqlgtzil0yt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vdeqdRYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oukew3379gqlgtzil0yt.png" alt="Image description" width="880" height="618"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lot's of Love.&lt;/p&gt;

</description>
      <category>producthunt</category>
      <category>webdev</category>
      <category>uiresouces</category>
      <category>webdesign</category>
    </item>
    <item>
      <title>Doing code reviews</title>
      <author>TueNguyen2911</author>
      <pubDate>Sat, 20 Nov 2021 06:26:41 +0000</pubDate>
      <link>https://dev.to/tuenguyen2911_67/doing-code-reviews-12op</link>
      <guid>https://dev.to/tuenguyen2911_67/doing-code-reviews-12op</guid>
      <description>&lt;p&gt;This week, I had a chance to review some pull requests from different students in &lt;a href="https://github.com/Seneca-ICTOER/IPC144"&gt;IPC144&lt;/a&gt; repo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#review-1"&gt;
  &lt;/a&gt;
  Review #1
&lt;/h2&gt;

&lt;p&gt;I did some reviews for this a PR on &lt;code&gt;Information.md&lt;/code&gt; but the author ran into some technical issues, I tried to help him to resolve using git, but he deleted his fork and tried opening new PRs. I pointed out some typo issues, markdown issues and his mistake committing an unresolved conflict. You can check them here, &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/115"&gt;PR#1&lt;/a&gt;, &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/101"&gt;PR#2&lt;/a&gt;, &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/119"&gt;PR#3&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#review-2"&gt;
  &lt;/a&gt;
  Review #2
&lt;/h2&gt;

&lt;p&gt;I pointed out an unnecessary section of the page of the &lt;a href="https://github.com/Seneca-ICTOER/IPC144/issues/79"&gt;PR&lt;/a&gt; on &lt;code&gt;functions-arrays-and-structs.md&lt;/code&gt; and advised an accessibility improvement on this &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/92"&gt;PR&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-thoughts"&gt;
  &lt;/a&gt;
  My thoughts
&lt;/h2&gt;

&lt;p&gt;Reviewing does take quite some time and great attention to details especially with those PRs. I did have some fun reading people's reviews and I learnt more about correct markdown syntaxes. I hope to review more challenging PRs next time.&lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>Add Continuous Integration to GitHub Repo</title>
      <author>Qiwen Yu</author>
      <pubDate>Sat, 20 Nov 2021 06:19:36 +0000</pubDate>
      <link>https://dev.to/qiwenyu/add-continuous-integration-to-github-repo-n54</link>
      <guid>https://dev.to/qiwenyu/add-continuous-integration-to-github-repo-n54</guid>
      <description>&lt;p&gt;In this work,&lt;/p&gt;

</description>
      <category>ci</category>
      <category>python</category>
      <category>github</category>
      <category>actions</category>
    </item>
    <item>
      <title>Getting started with Go</title>
      <author>Abhinav Pandey</author>
      <pubDate>Sat, 20 Nov 2021 06:03:20 +0000</pubDate>
      <link>https://dev.to/abh1navv/getting-started-with-go-54pm</link>
      <guid>https://dev.to/abh1navv/getting-started-with-go-54pm</guid>
      <description>&lt;p&gt;Golang is a programming language that popularly used to build web applications. In this article, I'm going to give a brief introduction to Golang (aka "Go")&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;To install Golang, please follow the instructions below.&lt;br&gt;
Download the latest version of Golang from &lt;a href="https://golang.org/"&gt;Golang website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Follow the installation instructions as per your OS.&lt;br&gt;
Set environment variables- For e.g. on Mac, I would run the following commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;export GOPATH=$HOME/go&lt;/code&gt; - This is the path where I will store my Golang projects. This is used as default by the Go compiler to find the packages you create.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;export GOROOT=$HOME/go&lt;/code&gt; - This is the directory where you will find the &lt;code&gt;go&lt;/code&gt; binary.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;export PATH=$PATH:$GOROOT/bin&lt;/code&gt; - This adds the 'go' executable to the PATH variable so that you can run it from anywhere.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#lets-say-hello-to-the-world"&gt;
  &lt;/a&gt;
  Let's say Hello to the world
&lt;/h2&gt;

&lt;p&gt;Let's look at a simple traditional Hello world program.&lt;/p&gt;

&lt;p&gt;Create a new directory in your home directory and name it &lt;code&gt;hello&lt;/code&gt;.&lt;br&gt;
Create a new file in the &lt;code&gt;hello&lt;/code&gt; directory and name it &lt;code&gt;main.go&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;main.go&lt;/code&gt; file, write the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="c"&gt;// Package declaration&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="s"&gt;"fmt"&lt;/span&gt; &lt;span class="c"&gt;// Import statement&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c"&gt;// Main function&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;   
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's run this file in a terminal.&lt;br&gt;
Run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go run main.go
Hello, world!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's look at the code in a more detailed way.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The first line of the file is the package declaration. If you are familiar with Java, this is the same as the package declaration in Java. This will be helpful when you want to import this file into another Go file. &lt;/li&gt;
&lt;li&gt;Next we have the import statement. It includes the standard package &lt;code&gt;fmt&lt;/code&gt;(Format). This package is used here to print the output. It can also be used to read input from the user. There can be many use cases for &lt;code&gt;fmt&lt;/code&gt; but let's not dig deep right now.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;main()&lt;/code&gt; function is the entry point of the program. This is where the program execution begins (again, this is the same as the main method in Java but more concise).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note: Go provides a simpler &lt;code&gt;print/println&lt;/code&gt; function too. However, it is not recommended to use this function. &lt;code&gt;fmt&lt;/code&gt; is the preferred way because it is more flexible and can be used for many use cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-try-a-function-call"&gt;
  &lt;/a&gt;
  Let's try a function call
&lt;/h2&gt;

&lt;p&gt;Let's change the output of the program to print the name of the user.&lt;br&gt;
For this, we will use the &lt;code&gt;fmt&lt;/code&gt; package.&lt;br&gt;
Let's add the following code to the &lt;code&gt;main.go&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; 

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="s"&gt;"fmt"&lt;/span&gt;  

&lt;span class="c"&gt;// function that reads name from console and returns it&lt;/span&gt;
&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; 
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Enter your name: "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scanln&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="c"&gt;// a main function which calls the getName() method and prints Hello with the name&lt;/span&gt;
&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, %s!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's run this file in a terminal.&lt;br&gt;
Run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go run main.go
Enter your name: 
John
Hello, John!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's look at the getName() function.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The first line of the function is the function declaration. It has two parts: the return type &lt;code&gt;string&lt;/code&gt;  and the function name &lt;code&gt;getName&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Next we have the variable declaration. This is where we declare the variable &lt;code&gt;name&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. We will cover more on variables in the next article.&lt;/li&gt;
&lt;li&gt;Notice the return statement. This is where the value of the variable &lt;code&gt;name&lt;/code&gt; is returned to the main function.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Another point to notice is the &lt;code&gt;:=&lt;/code&gt; operator used in the main function. This is a shorthand for declaring and initializing a variable. Here, we are declaring the variable &lt;code&gt;name&lt;/code&gt; and initializing it with the value returned by the &lt;code&gt;getName()&lt;/code&gt; function. We do not need to write the &lt;code&gt;var&lt;/code&gt; keyword or the type of the variable.&lt;/p&gt;




&lt;p&gt;This should give you a tiny idea of how Go works. In the next article, I will cover the basics of using variables and functions in Go. Stay tuned.&lt;br&gt;
Thanks for reading. If you want to connect with me, you can find me on Twitter &lt;a href="https://twitter.com/abh1navv"&gt;@abh1navv&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>go</category>
      <category>programming</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Best Digital Marketing Training Institute In Jalandhar</title>
      <author>itronix11</author>
      <pubDate>Sat, 20 Nov 2021 05:45:38 +0000</pubDate>
      <link>https://dev.to/itronix11/best-digital-marketing-training-institute-in-jalandhar-4p1e</link>
      <guid>https://dev.to/itronix11/best-digital-marketing-training-institute-in-jalandhar-4p1e</guid>
      <description>&lt;p&gt;Itronix Solutions offers the &lt;a href="https://itronixsolution.com/digital-marketing-course-jalandhar/"&gt;best Digital Marketing Training in Jalandhar&lt;/a&gt;, according to industry standards. Itronix Solutions is one of the most highly regarded &lt;a href="https://www.itronixsolutions.com/digital-marketing-training-course-in-jalandhar/"&gt;Digital Marketing Training Institutes in Jalandhar&lt;/a&gt;, providing hands-on practical knowledge/practical implementation on live case studies, as well as advanced level Digital Marketing Training Courses to assure job placement. &lt;a href="https://priyadogra.com/digital-marketing-training-course-in-jalandhar/"&gt;Digital Marketing Training in Jalandhar&lt;/a&gt; is delivered by qualified corporate professionals with 10+ years of expertise implementing real-time Digital Marketing projects and case studies at Itronix Solutions.&lt;br&gt;
Itronix School of &lt;a href="https://thedigitaladda.com/digital-marketing-training-jalandhar/"&gt;Digital Marketing Training Institute in Jalandhar&lt;/a&gt; offers hands-on digital marketing training through live projects. Our Certified and Experienced Trainers will assist you in gaining knowledge and expertise in building websites from the ground up and using digital technologies to market your products and services online. Rather of grabbing books, we'll lead you through real-world projects. As a result, you will have a better grasp of digital marketing ideas. The finest Digital Marketing Institute in Jalandhar has designed a Digital Marketing Training Course for all Entrepreneurs, Job Seekers, and Professionals.&lt;br&gt;
Being a Microsoft Authorized Education Partner, Cisco Partners, Intel Technology Provider, Google Certified Professionals, and IBM Certified, we are one of the best Digital Marketing Training in Jalandhar. After the completion of the Digital Marketing Course in Jalandhar, Itronix Solutions provides 100% job placement for eligible students.&lt;br&gt;
Contact Itronix Solutions to Enroll for &lt;a href="https://ccnatrainingjalandhar.in/digital-marketing-training-course-in-jalandhar/"&gt;Best Digital Marketing Course in Jalandhar&lt;/a&gt; and Get FREE Digital Marketing Certification from Google. In Their Jalandhar Branch, Digital Marketing Course designs according to current IT requirements.&lt;br&gt;
Address: SCO-28, First Floor, Chotti Baradari, Garha Road, Jalandhar&lt;br&gt;
Phone No: +91 99140 77736, +91 94173 12121&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>CORS for a Twitch Extension</title>
      <author>shrmpy</author>
      <pubDate>Sat, 20 Nov 2021 05:33:36 +0000</pubDate>
      <link>https://dev.to/shrmpy/cors-for-a-twitch-extension-3170</link>
      <guid>https://dev.to/shrmpy/cors-for-a-twitch-extension-3170</guid>
      <description>&lt;p&gt;This article is the fourth in a multi-part series to walk through the creation of a Twitch extension. For the fourth part, the goal is to refactor the CORS headers.&lt;/p&gt;

&lt;p&gt;To go directly to the project, the source code repository is available at&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/shrmpy"&gt;
        shrmpy
      &lt;/a&gt; / &lt;a href="https://github.com/shrmpy/pavlok"&gt;
        pavlok
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      twitch extension project
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
and&lt;br&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/shrmpy"&gt;
        shrmpy
      &lt;/a&gt; / &lt;a href="https://github.com/shrmpy/pavlok-panel"&gt;
        pavlok-panel
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Twitch extension client ID&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-overview"&gt;
  &lt;/a&gt;
  § Overview
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/shrmpy/embed/mdMobOZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-headers"&gt;
  &lt;/a&gt;
  § Headers
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#-raw-preprocess-endraw-flow"&gt;
  &lt;/a&gt;
  &lt;code&gt;preprocess&lt;/code&gt; flow
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/shrmpy/embed/qBXjmJP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-enablecors-endraw-flow"&gt;
  &lt;/a&gt;
  &lt;code&gt;enableCors&lt;/code&gt; flow
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/shrmpy/embed/PoKjOBq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The wildcard (&lt;code&gt;*&lt;/code&gt;) in the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header is the primary change in this refactor work. It is time to restrict the origin to the hosting server (&lt;code&gt;ID.ext-twitch.tv&lt;/code&gt;) of the Twitch extension.&lt;/li&gt;
&lt;li&gt;Another change that should not add extra scope, is to remove &lt;code&gt;DELETE&lt;/code&gt; from the &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; header.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-test"&gt;
  &lt;/a&gt;
  § Test
&lt;/h2&gt;

&lt;p&gt;Start the refactor by adding the new test:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Calling the test runner will lead to compile errors:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nv"&gt;$PWD&lt;/span&gt;/cmd/auth
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#-refactor"&gt;
  &lt;/a&gt;
  § Refactor
&lt;/h2&gt;

&lt;p&gt;Add the new package files to define the configuration and middleware:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;There will be references to &lt;code&gt;enableCors&lt;/code&gt; in &lt;code&gt;preprocess.go&lt;/code&gt; and &lt;code&gt;main.go&lt;/code&gt; files that need to be cleaned-up. &lt;/p&gt;

&lt;p&gt;The changes also break one of the existing tests. So fix the old test for the preflight request&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Afterwards, the compile should be successful. Plus calling the test runner this time should have zero fails. All done? not yet. &lt;em&gt;Even though the tests pass,&lt;/em&gt; the middleware has not been applied to the original handler. Go to the &lt;code&gt;main.go&lt;/code&gt; file and adjust the &lt;code&gt;init()&lt;/code&gt; and &lt;code&gt;lambda.Start()&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Finally, the new configuration also expects a new environment variable &lt;code&gt;EXTENSION_ID&lt;/code&gt;. Go to the Netlify &lt;strong&gt;Site settings | Build &amp;amp; deploy | Environment&lt;/strong&gt; page. Click the &lt;strong&gt;Add&lt;/strong&gt; variable button. Name it &lt;code&gt;EXTENSION_ID&lt;/code&gt; and paste the Twitch extension client ID.&lt;/p&gt;

&lt;p&gt;Remember coding standards before saving the changes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go &lt;span class="nb"&gt;fmt&lt;/span&gt; &lt;span class="nv"&gt;$PWD&lt;/span&gt;
go &lt;span class="nb"&gt;fmt&lt;/span&gt; &lt;span class="nv"&gt;$PWD&lt;/span&gt;/cmd/auth
git add config.go middleware.go &lt;span class="nv"&gt;$PWD&lt;/span&gt;/cmd/auth
git commit &lt;span class="nt"&gt;-m&lt;/span&gt;&lt;span class="s1"&gt;'refactor CORS allow-origin'&lt;/span&gt;
git push origin gh-issue-NNN
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#-notes-lessons-monologue"&gt;
  &lt;/a&gt;
  * Notes, Lessons, Monologue
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Why change the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;?&lt;/em&gt; We used the wildcard (&lt;code&gt;*&lt;/code&gt;) in the early iterations, in order to make the requests work. At the time, there were CORS errors to overcome and without knowing the correct values required, we chose to &lt;em&gt;allow all&lt;/em&gt;. Now it's time to restrict access for security. So we learned that the Twitch extension is hosted from the &lt;code&gt;ID.ext-twitch.tv&lt;/code&gt; server and this would be the correct value for the Allow-Origin header.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Why the middleware?&lt;/em&gt; It was in our backlog. So it was a matter of when. For this refactor, the idea was to intercept the response to shape the headers (that affect CORS). To intercept the response, do processing, and then continue the response flow, fits the description of middleware. The other benefit of middleware is consolidation and uncluttering the business logic. Before, we checked for preflight in &lt;code&gt;preprocess&lt;/code&gt;, repeated basic responses, and made a direct call to &lt;code&gt;enableCors&lt;/code&gt; from the main handler. Now CORS header logic is in one place, &lt;code&gt;ebs.MiddlewareCORS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Why did the test pass before the &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;lambda.Start&lt;/code&gt; was patched?&lt;/em&gt; is the test pointless? The test only covers the middleware for the inputs supplied. The test doesn't execute the &lt;code&gt;main()&lt;/code&gt; or &lt;code&gt;init()&lt;/code&gt; functions. It may seem pointless, which is important to pause and reflect. Writing the test forced the design for a way to control the value of &lt;code&gt;EXTENSION_ID&lt;/code&gt;. Before now, an environment variable was the first choice. So thinking test first, we knew we needed another approach because assigning the environment variable in test scaffolding is not self-contained; the test would need to push any existing environment onto some stack before test run, then pop the environment after tests finish. The environment requires this kind of management because we don't want the test to clobber the variable of the host's environment. Even this precaution isn't self-contained because what if you run tests in parallel? Each test will step on each others' environment variable assignment. A very wordy way to say that's why we created the configuration in this refactor. It might appear as if the configuration struct is an one-off just for the test, but the real value is that it forced us to undertake the decoupling.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Why not use dot env files?&lt;/em&gt; Honestly, I didn't think of it. At the time, I considered TOML/YAML for the configuration, and decided it was overkill. Remember that we want to do the &lt;em&gt;minimum&lt;/em&gt; to make a test green. The &lt;a href="https://gist.github.com/shrmpy/68d1d82b21016843267e7acfdb748f5e"&gt;config.go&lt;/a&gt; that we defined is lean in the current incarnation. Down the road, it may be the case that &lt;a href="https://github.com/joho/godotenv"&gt;dot env&lt;/a&gt; files will be the solution that scales.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What does the call &lt;code&gt;ebs.MiddlewareCORS(conf, handler)(req)&lt;/code&gt; do?&lt;/em&gt; why is the &lt;code&gt;lambda.Start&lt;/code&gt; different? In the test, this line invokes the function wrapped by the middleware. The invoke uses the &lt;code&gt;req&lt;/code&gt; variable as the parameter to that function. With the &lt;code&gt;lambda.Start&lt;/code&gt;, the &lt;em&gt;function pointer&lt;/em&gt; is being supplied. That reference can be resolved at a later time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Why pass the configuration as a parameter to the middleware call?&lt;/em&gt; This is the "trick". We needed a way to specify a setting in the handler. Before writing the test, this wasn't an issue since using an environment variable has global scope; the handler would have access to the variable. Inside the test, we need to specify the setting and supply it to the handler without using globals. So the configuration becomes the parameter. &lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>security</category>
    </item>
    <item>
      <title>Kotlin transform List with map() methods example
</title>
      <author>Harry Nguyen</author>
      <pubDate>Sat, 20 Nov 2021 05:28:44 +0000</pubDate>
      <link>https://dev.to/harrynguyen88/kotlin-transform-list-with-map-methods-example-f4b</link>
      <guid>https://dev.to/harrynguyen88/kotlin-transform-list-with-map-methods-example-f4b</guid>
      <description>&lt;p&gt;&lt;a href="https://ozenero.com/kotlin-transform-list-map-methods-example"&gt;https://ozenero.com/kotlin-transform-list-map-methods-example&lt;/a&gt;&lt;br&gt;
In the tutorial, Grokonez will show you how to transform Kotlin List with map() methods.&lt;br&gt;
Read more&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
