<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>PHP crash course : Strings and Numbers</title>
      <author>Eric The Coder</author>
      <pubDate>Fri, 14 Jan 2022 14:52:55 +0000</pubDate>
      <link>https://dev.to/ericchapman/php-crash-course-strings-and-numbers-40i0</link>
      <guid>https://dev.to/ericchapman/php-crash-course-strings-and-numbers-40i0</guid>
      <description>&lt;p&gt;Today you will learn strings and numbers manipulation in PHP.&lt;/p&gt;

&lt;p&gt;This PHP crash course is free and will be posted here on dev.to. I'll be releasing a new article/post every two days or so. To not miss anything, you can follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;Follow @EricTheCoder_&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#string-in-php"&gt;
  &lt;/a&gt;
  String in PHP
&lt;/h2&gt;

&lt;p&gt;Now let's see in a little more detail how to create and manipulate Strings with PHP.&lt;/p&gt;

&lt;p&gt;A String can be created with single or double quotes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// or&lt;/span&gt;

&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Mike"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The declaration with double quotes allows you to do interpolation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Display the content of a variable&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Hello &lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Hello Mike&lt;/span&gt;

&lt;span class="c1"&gt;// or some find this syntax easier to read&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Hello &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Hello Mike&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is also possible to join two strings with the operator "." (point)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Hello '&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Hello Mike&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is possible to read or modify a particular character using the brackets []&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Display&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;// H&lt;/span&gt;

&lt;span class="c1"&gt;// Or modify&lt;/span&gt;
&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Hallo World&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the first character is at position 0, the second at position 1, etc.&lt;/p&gt;

&lt;p&gt;It is possible to access stating from the end.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;// e&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Position -1 represents the last character, -2 the second last, and so on.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heredoc"&gt;
  &lt;/a&gt;
  Heredoc
&lt;/h3&gt;

&lt;p&gt;This syntax allows you to enter a string on several lines&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sh"&gt;&amp;lt;&amp;lt;&amp;lt;HTML
&amp;lt;h1&amp;gt;This is a title&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;This is a paragraphe&amp;lt;/p&amp;gt;
HTML;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The $html variable will include all the text between the two HTML keywords. Including spaces and newlines.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#handling-the-strings"&gt;
  &lt;/a&gt;
  Handling the Strings
&lt;/h3&gt;

&lt;p&gt;PHP has several functions that allow you to transform the content of the String. Here are a few :&lt;/p&gt;

&lt;p&gt;Uppercase and lowercase conversion&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike Taylor'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;strtolower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// mike taylor&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;strtoupper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// MIKE TAYLOR&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remove white space before and after a string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'  Hello World        '&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$messsage&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Hello World&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace part of a string with another&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'I love dog'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'dog'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'cat'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// I love cat&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Retrieve the number of characters in a string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// 0&lt;/span&gt;

&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike Taylor'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// 11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check if the string contains certain characters&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'I love dogs and cats'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nf"&gt;str_contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'dogs'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the string contains ‘dog’ the function will return true otherwise it will return false&lt;/p&gt;

&lt;p&gt;The use of this kind of function will be more obvious when we study the conditional statement (if)&lt;/p&gt;

&lt;p&gt;PHP has several functions for handling strings. Before creating your own function, do a little research in the documentation because there is a good chance that this function already exists.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#number-in-php"&gt;
  &lt;/a&gt;
  Number in PHP
&lt;/h2&gt;

&lt;p&gt;Numbers are used to perform mathematical operations such as addition, subtraction, multiplication, and division.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 15&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 8&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 20&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#operator-priority-httpswwwphpnetmanualenlanguageoperatorsprecedencephp"&gt;
  &lt;/a&gt;
  Operator priority &lt;a href="https://www.php.net/manual/en/language.operators.precedence.php"&gt;https://www.php.net/manual/en/language.operators.precedence.php&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;When we do multiple operations PHP will take into account the priority of the operators. That is, the order in which the values should be analyzed. Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="c1"&gt;// 16&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the answer will be 16 and not 18. because the multiplication "*" has a higher priority compared to the addition "+".&lt;/p&gt;

&lt;p&gt;Parentheses can be used to force the priority, if necessary.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="c1"&gt;// 18&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#syntax-increment"&gt;
  &lt;/a&gt;
  Syntax increment
&lt;/h3&gt;

&lt;p&gt;It is possible to do an incrementation in three ways:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Increment, long method&lt;/span&gt;

&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Increment, sort method&lt;/span&gt;

&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Increment, shorter method&lt;/span&gt;

&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is also possible to decrement&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// ou&lt;/span&gt;
&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#round"&gt;
  &lt;/a&gt;
  Round
&lt;/h3&gt;

&lt;p&gt;It is possible to round to the nearest whole number&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;10.52&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// 11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is also possible to specify the number of digits to keep after the period.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;10.5278&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// 10.53&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#random-number"&gt;
  &lt;/a&gt;
  Random number
&lt;/h3&gt;

&lt;p&gt;The rand function allows you to create a random integer whose value will be included between the values of the two parameters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// 89&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#readability-of-numbers"&gt;
  &lt;/a&gt;
  Readability of numbers
&lt;/h3&gt;

&lt;p&gt;You can use the character _ as a separator. This helps to make the number easier to read.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1_000_000_000&lt;/span&gt;
&lt;span class="c1"&gt;// 1000000000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's it for today, I'll be releasing a new article every two days or so. To be sure not to miss anything you can follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;Follow @EricTheCoder_&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>backends</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Apprendre le PHP : Chaîne de caractères et Nombres</title>
      <author> Eric Le Codeur</author>
      <pubDate>Fri, 14 Jan 2022 14:46:56 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/apprendre-le-php-chaine-de-caracteres-et-nombres-1h1p</link>
      <guid>https://dev.to/ericlecodeur/apprendre-le-php-chaine-de-caracteres-et-nombres-1h1p</guid>
      <description>&lt;p&gt;Aujourd'hui, vous apprendrez la manipulation des chaînes de caractères et des nombres en PHP.&lt;/p&gt;

&lt;p&gt;Ce cours accéléré PHP est gratuit et sera publié ici sur dev.to. Je publierai un nouvel article tous les deux jours environ. Pour ne rien manquer, vous pouvez me suivre sur twitter :&lt;a href="https://twitter.com/EricLeCodeur"&gt;Follow @EricLeCodeur&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cha%C3%AEne-de-caract%C3%A8res-en-php"&gt;
  &lt;/a&gt;
  Chaîne de caractères en PHP
&lt;/h2&gt;

&lt;p&gt;Voyons maintenant un peu plus en détail comment créer et manipuler des chaînes de caractères (strings) avec PHP.&lt;/p&gt;

&lt;p&gt;Une string peut être créée avec des guillemets simples ou doubles&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// or&lt;/span&gt;

&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Mike"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;La déclaration avec guillemets doubles permet de faire de l'interpolation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Affiche le contenu de la variable&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Hello &lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Hello Mike&lt;/span&gt;

&lt;span class="c1"&gt;// Même principe mais avec les {} &lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Hello &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Hello Mike&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Il est également possible de joindre deux string avec l'opérateur "." (point)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Hello '&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Hello Mike&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Il est possible de lire ou de modifier un caractère en particulier à l'aide des crochets []&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Affichage&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;// H&lt;/span&gt;

&lt;span class="c1"&gt;// Ou modification&lt;/span&gt;
&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Hallo World&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ici, le premier caractère est à la position 0, le second à la position 1, etc.&lt;/p&gt;

&lt;p&gt;Il est possible d'accéder à l'énoncé à partir de la fin.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;// e&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;La position -1 représente le dernier caractère, -2 l'avant-dernier, et ainsi de suite.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heredoc"&gt;
  &lt;/a&gt;
  Heredoc
&lt;/h3&gt;

&lt;p&gt;Cette syntaxe permet de saisir une chaîne sur plusieurs lignes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sh"&gt;&amp;lt;&amp;lt;&amp;lt;HTML
&amp;lt;h1&amp;gt;This is a title&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;This is a paragraphe&amp;lt;/p&amp;gt;
HTML;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;La variable $html inclura tout le texte entre les deux mots clés HTML. Y compris les espaces et les fins de ligne.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#manipulation-des-string"&gt;
  &lt;/a&gt;
  Manipulation des string
&lt;/h3&gt;

&lt;p&gt;PHP a plusieurs fonctions qui vous permettent de transformer le contenu de la string. En voici quelques-unes :&lt;/p&gt;

&lt;p&gt;Conversion majuscule et minuscule&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike Taylor'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;strtolower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// mike taylor&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;strtoupper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// MIKE TAYLOR&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Supprimer les espaces blancs avant et après une string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'  Hello World        '&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$messsage&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Hello World&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remplacer une partie d'une string par une autre&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'I love dog'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'dog'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'cat'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// I love cat&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Récupérer le nombre de caractères d'une chaîne&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// 0&lt;/span&gt;

&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike Taylor'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// 11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Vérifier si la string contient certains caractères&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'I love dogs and cats'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nf"&gt;str_contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'dogs'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Si la string contient 'dogs' la fonction retournera vrai sinon elle retournera faux&lt;/p&gt;

&lt;p&gt;L'utilisation de ce type de fonction sera plus évidente lorsque nous étudierons l'instruction conditionnelle (si)&lt;/p&gt;

&lt;p&gt;PHP a plusieurs fonctions pour gérer les string. Avant de créer votre propre fonction, faites une petite recherche dans la documentation car il y a de fortes chances que cette fonction existe déjà.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nombre-en-php"&gt;
  &lt;/a&gt;
  Nombre en PHP
&lt;/h2&gt;

&lt;p&gt;Les nombres sont utilisés pour effectuer des opérations mathématiques telles que l'addition, la soustraction, la multiplication et la division.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 15&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 8&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 20&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#priorit%C3%A9-des-op%C3%A9rateurs-httpswwwphpnetmanualenlanguageoperatorsprecedencephp"&gt;
  &lt;/a&gt;
  Priorité des opérateurs &lt;a href="https://www.php.net/manual/en/language.operators.precedence.php"&gt;https://www.php.net/manual/en/language.operators.precedence.php&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Lorsque nous effectuons plusieurs opérations, PHP prendra en compte la priorité des opérateurs. C'est-à-dire l'ordre dans lequel les valeurs doivent être analysées. Voici un exemple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="c1"&gt;// 16&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ici la réponse sera 16 et non 18. car la multiplication "*" a une priorité plus élevée par rapport à l'addition "+".&lt;/p&gt;

&lt;p&gt;Les parenthèses peuvent être utilisées pour forcer la priorité, si nécessaire.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="c1"&gt;// 18&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#incr%C3%A9mentation"&gt;
  &lt;/a&gt;
  Incrémentation
&lt;/h3&gt;

&lt;p&gt;Il est possible de faire une incrémentation de trois façons :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Incrémentation, version longue&lt;/span&gt;

&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Incrémentation, version courte&lt;/span&gt;

&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Incrémentation, version encore plus courte&lt;/span&gt;

&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Il est également possible de décrémenter&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// ou&lt;/span&gt;
&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#arrondir"&gt;
  &lt;/a&gt;
  Arrondir
&lt;/h3&gt;

&lt;p&gt;Il est possible d'arrondir au nombre entier le plus proche&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;10.52&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// 11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Il est également possible de spécifier le nombre de chiffres à conserver après le point.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;10.5278&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// 10.53&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#nombre-al%C3%A9atoire"&gt;
  &lt;/a&gt;
  Nombre aléatoire
&lt;/h3&gt;

&lt;p&gt;La fonction rand permet de créer un entier aléatoire dont la valeur sera comprise entre les valeurs des deux paramètres.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// 89&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#lisibilit%C3%A9-des-chiffres"&gt;
  &lt;/a&gt;
  Lisibilité des chiffres
&lt;/h3&gt;

&lt;p&gt;Vous pouvez utiliser le caractère _ comme séparateur. Cela aide à rendre le numéro plus facile à lire.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1_000_000_000&lt;/span&gt;
&lt;span class="c1"&gt;// 1000000000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;C'est tout pour aujourd'hui, je publierai un nouvel article tous les deux jours environ. Pour être sûr de ne rien rater vous pouvez me suivre sur twitter : &lt;a href="https://twitter.com/EricLeCodeur"&gt;Suivre @EricLeCodeur&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>tutoriel</category>
      <category>beginners</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 14th January 2022</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 14 Jan 2022 14:45:14 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-14th-january-2022-3k2a</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-14th-january-2022-3k2a</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-pptxgenjs"&gt;
  &lt;/a&gt;
  1. PptxGenJS
&lt;/h3&gt;

&lt;p&gt;Create PowerPoint presentations with a powerful, concise JavaScript API.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/gitbrent"&gt;
        gitbrent
      &lt;/a&gt; / &lt;a href="https://github.com/gitbrent/PptxGenJS"&gt;
        PptxGenJS
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Create PowerPoint presentations with a powerful, concise JavaScript API.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
PptxGenJS&lt;/h1&gt;
&lt;h5&gt;
  Create JavaScript PowerPoint Presentations
&lt;/h5&gt;
&lt;p&gt;
  &lt;a href="https://github.com/gitbrent/PptxGenJS/"&gt;
    &lt;img alt="PptxGenJS Sample Slides" title="PptxGenJS Sample Slides" src="https://res.cloudinary.com/practicaldev/image/fetch/s--40KUOnGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/gitbrent/PptxGenJS/gh-pages/img/readme_banner.png"&gt;
  &lt;/a&gt;
&lt;/p&gt;



&lt;p&gt;&lt;a href="https://snyk.io/test/npm/pptxgenjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/32de4f24da67d6bfcd1b49923e671a100185f88cf923b72bd4a43f2faca496f8/68747470733a2f2f736e796b2e696f2f746573742f6e706d2f7070747867656e6a732f62616467652e737667" alt="Known Vulnerabilities"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/pptxgenjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/689c9196f747ded9b430580fcfc2b860a5546fab791e783fbcd324d0afecd4cc/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f7070747867656e6a732e737667" alt="npm downloads"&gt;&lt;/a&gt; &lt;a href="https://www.jsdelivr.com/package/gh/gitbrent/pptxgenjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/42463ff17a3cd27baa9c1d615f6b6f3b18add138a278e46b31d85eef0673e19b/68747470733a2f2f646174612e6a7364656c6976722e636f6d2f76312f7061636b6167652f67682f6769746272656e742f7070747867656e6a732f6261646765" alt="jsdelivr downloads"&gt;&lt;/a&gt; &lt;a href="https://img.shields.io/npm/types/pptxgenjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0af7c54f8e927077c6291f9265810fe45853682d8f600e10f0818275b30b578e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f74797065732f7070747867656e6a73" alt="typescripts definitions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#live-demos"&gt;Live Demos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gitbrent/PptxGenJS#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#cdn"&gt;CDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#download"&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#npm"&gt;Npm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#yarn"&gt;Yarn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#additional-builds"&gt;Additional Builds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gitbrent/PptxGenJS#documentation"&gt;Documentation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/gitbrent/PptxGenJS#quick-start-guide"&gt;Quick Start Guide&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#angularreact-es6-typescript"&gt;Angular/React, ES6, TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#scriptweb-browser"&gt;Script/Web Browser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#library-api"&gt;Library API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#html-to-powerpoint-feature"&gt;HTML-to-PowerPoint Feature&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#library-ports"&gt;Library Ports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#issues--suggestions"&gt;Issues / Suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#need-help"&gt;Need Help?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#sponsor-us"&gt;Sponsor Us&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
Introduction&lt;/h1&gt;
&lt;p&gt;This library creates Open Office XML (OOXML) Presentations which are compatible with Microsoft PowerPoint, Apple Keynote, and other applications.&lt;/p&gt;
&lt;h1&gt;
Features&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Works Everywhere&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Every modern desktop and mobile browser is supported&lt;/li&gt;
&lt;li&gt;Integrates with Node, Angular, React and Electron&lt;/li&gt;
&lt;li&gt;Compatible with PowerPoint, Keynote, and more&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Featured&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All major object types are available (charts, shapes, tables, etc.)&lt;/li&gt;
&lt;li&gt;Master Slides for academic/corporate branding&lt;/li&gt;
&lt;li&gt;SVG images, animated gifs, YouTube videos, RTL text, and Asian fonts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Simple And Powerful&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The absolute easiest PowerPoint library to use&lt;/li&gt;
&lt;li&gt;Learn as you code will full typescript definitions included&lt;/li&gt;
&lt;li&gt;Tons of demo code comes included (over 70 slides of features)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Export Your&lt;/strong&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/gitbrent/PptxGenJS"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-antfup"&gt;
  &lt;/a&gt;
  2. antfu/p
&lt;/h3&gt;

&lt;p&gt;Toolkit for managing multiple promises.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/antfu"&gt;
        antfu
      &lt;/a&gt; / &lt;a href="https://github.com/antfu/p"&gt;
        p
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Toolkit for managing multiple promises
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a class="mentioned-user" href="https://dev.to/antfu"&gt;@antfu&lt;/a&gt;/p&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@antfu/p" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/96f73a6a8932907d94c5afbd83682632ed6057d50a9c5ad785badb7188638d96/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40616e7466752f703f636f6c6f723d613162383538266c6162656c3d" alt="NPM version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Toolkit for managing multiple promises.&lt;/p&gt;

Without
&lt;div class="highlight highlight-source-ts position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;items&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;
&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;Promise&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;all&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;items&lt;/span&gt;
  &lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;map&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-s1"&gt;i&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;v&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;multiply&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;i&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;even&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;isEven&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;v&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s1"&gt;even&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;v&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
    &lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;filter&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;x&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s1"&gt;x&lt;/span&gt;&lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
    &lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;map&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;x&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s1"&gt;x&lt;/span&gt;&lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;div class="highlight highlight-source-ts position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;P&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;a class="mentioned-user" href="https://dev.to/antfu"&gt;@antfu&lt;/a&gt;/p'&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;items&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;

&lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;P&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;items&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
  &lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;map&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-s1"&gt;i&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;multiply&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;i&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
  &lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;filter&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-s1"&gt;i&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;isEven&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;i&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-c"&gt;// [6, 12]&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-ts position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;P&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;a class="mentioned-user" href="https://dev.to/antfu"&gt;@antfu&lt;/a&gt;/p'&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;p&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;P&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;

&lt;span class="pl-c"&gt;// collect promises that are&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/antfu/p"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-fx"&gt;
  &lt;/a&gt;
  3. fx
&lt;/h3&gt;

&lt;p&gt;Command-line tool and terminal JSON viewer&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/antonmedv"&gt;
        antonmedv
      &lt;/a&gt; / &lt;a href="https://github.com/antonmedv/fx"&gt;
        fx
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Command-line tool and terminal JSON viewer 🔥
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="http://fx.wtf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ed681599bd19b03b13fa3414360bff66e5530bf5a49a241eb2011f3d9f2b5ff/68747470733a2f2f6d6564762e696f2f6173736574732f66782d6c6f676f2e706e67" height="100" alt="fx logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1bdef90eaab60a00024adb27a167e2ccdf713869bdf186350299b42d36311f2d/68747470733a2f2f6d6564762e696f2f6173736574732f66782e676966"&gt;&lt;img src="https://camo.githubusercontent.com/1bdef90eaab60a00024adb27a167e2ccdf713869bdf186350299b42d36311f2d/68747470733a2f2f6d6564762e696f2f6173736574732f66782e676966" width="562" alt="fx example"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;* Function eXecution&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/antonmedv/fx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/693cef7566a6512adfef1e2fb92426784c3ffe86c7cb450d17fd7209e06b93ce/68747470733a2f2f7472617669732d63692e6f72672f616e746f6e6d6564762f66782e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/fx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c54e2498cc9d5ef85193f20385b48e849918671d25b4d5ff84f85196d632fee2/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f66782e737667" alt="Npm Version"&gt;&lt;/a&gt;
&lt;a href="https://formulae.brew.sh/formula/fx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ead39c4b08ea811f4def04d38a7e37e9259fbc7937bbcb578877eaab1a56d50c/68747470733a2f2f696d672e736869656c64732e696f2f686f6d65627265772f762f66782e737667" alt="Brew Version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Command-line JSON processing tool&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Easy to use&lt;/li&gt;
&lt;li&gt;Standalone binary&lt;/li&gt;
&lt;li&gt;Interactive mode 🎉
&lt;/li&gt;
&lt;li&gt;Streaming support 🌊
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install -g fx&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Or via Homebrew&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;brew install fx&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Or download standalone binary from &lt;a href="https://github.com/antonmedv/fx/releases"&gt;releases&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;Start &lt;a href="https://github.com/antonmedv/fx/blob/master/DOCS.md#interactive-mode"&gt;interactive mode&lt;/a&gt; without passing any arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;$ curl ... &lt;span class="pl-k"&gt;|&lt;/span&gt; fx&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Or by passing filename as first argument.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;$ fx data.json&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Pass a few JSON files.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;cat foo.json bar.json baz.json &lt;span class="pl-k"&gt;|&lt;/span&gt; fx .message&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Use full power of JavaScript.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;$ curl ... &lt;span class="pl-k"&gt;|&lt;/span&gt; fx &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.filter(x =&amp;gt; x.startsWith("a"))&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Access all lodash (or ramda, etc) methods by using &lt;a href="https://github.com/antonmedv/fx/blob/master/DOCS.md#using-fxrc"&gt;.fxrc&lt;/a&gt; file.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;$ curl ... &lt;span class="pl-k"&gt;|&lt;/span&gt; fx &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;_.groupBy("commit.committer.name")&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;_.mapValues(_.size)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Update JSON using spread operator.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;$ &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"count": 0}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; fx &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{...this, count: 1}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;count&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: 1
}&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Extract values from maps.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;$ fx commits.json &lt;span class="pl-k"&gt;|&lt;/span&gt; fx .[].author.name&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Print formatted JSON to stdout.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;$ curl&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/antonmedv/fx"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-httpserver"&gt;
  &lt;/a&gt;
  4. http-server
&lt;/h3&gt;

&lt;p&gt;A simple zero-configuration command-line HTTP server. It is powerful enough for production usage, but it's simple and hackable enough to be used for testing, local development and learning.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/http-party"&gt;
        http-party
      &lt;/a&gt; / &lt;a href="https://github.com/http-party/http-server"&gt;
        http-server
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      a simple zero-configuration command-line http server
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/http-party/http-server/actions"&gt;&lt;img src="https://camo.githubusercontent.com/7143a23cacb3456a282ae1110d6255b854d90916e92a0737c2eeaa2f0544b6c9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f687474702d70617274792f687474702d7365727665722f4e6f64652e6a7325323043492f6d61737465723f7374796c653d666c61742d737175617265" alt="GitHub Workflow Status (master)"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/http-server" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/49872f6702a12cc615f478d539dd7418aeef08743eb403de3f068f6bf9f413d9/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f687474702d7365727665722e7376673f7374796c653d666c61742d737175617265" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://formulae.brew.sh/formula/http-server" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/123525b22f96ad217b0cc5c71e29b2b05911258a2072acf24ffc42345306bd43/68747470733a2f2f696d672e736869656c64732e696f2f686f6d65627265772f762f687474702d7365727665723f7374796c653d666c61742d737175617265" alt="homebrew"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/http-server" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6e44318257cb10ac79459b1e38873b74df5adf6dfa7c51270d94ce423d4c2c73/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f687474702d7365727665723f636f6c6f723d626c7565266c6162656c3d6e706d253230646f776e6c6f616473267374796c653d666c61742d737175617265" alt="npm downloads"&gt;&lt;/a&gt;
&lt;a href="https://github.com/http-party/http-server"&gt;&lt;img src="https://camo.githubusercontent.com/cca3a7982045634d982c457bcbd9f0c08b82ffee9ce5654d7bf0b7abc5e8a501/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f687474702d70617274792f687474702d7365727665722e7376673f7374796c653d666c61742d737175617265" alt="license"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
http-server: a simple static HTTP server&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;http-server&lt;/code&gt; is a simple, zero-configuration command-line static HTTP server.  It is powerful enough for production usage, but it's simple and hackable enough to be used for testing, local development and learning.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/http-party/http-server/raw/master/screenshots/public.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4IXofTjS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/http-party/http-server/raw/master/screenshots/public.png" alt="Example of running http-server"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation:&lt;/h2&gt;
&lt;h4&gt;
Running on-demand:&lt;/h4&gt;
&lt;p&gt;Using &lt;code&gt;npx&lt;/code&gt; you can run the script without installing it first:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;npx http-server [path] [options]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;
Globally via &lt;code&gt;npm&lt;/code&gt;
&lt;/h4&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;npm install --global http-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will install &lt;code&gt;http-server&lt;/code&gt; globally so that it may be run from the command line anywhere.&lt;/p&gt;
&lt;h4&gt;
Globally via Homebrew&lt;/h4&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;brew install http-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;
As a dependency in your &lt;code&gt;npm&lt;/code&gt; package:&lt;/h4&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;npm install http-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Usage:&lt;/h2&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt; http-server [path] [options]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;[path]&lt;/code&gt; defaults to &lt;code&gt;./public&lt;/code&gt; if the folder exists, and &lt;code&gt;./&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Now you can visit &lt;a href="http://localhost:8080" rel="nofollow"&gt;http://localhost:8080&lt;/a&gt; to view your server&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Caching is on by default. Add &lt;code&gt;-c-1&lt;/code&gt; as an option to disable caching.&lt;/p&gt;
&lt;h2&gt;
Available Options:&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Defaults&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--port&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Port to use. Use &lt;code&gt;-p 0&lt;/code&gt; to look for an&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/http-party/http-server"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-color"&gt;
  &lt;/a&gt;
  5. color
&lt;/h3&gt;

&lt;p&gt;JavaScript library for immutable color conversion and manipulation with support for CSS color strings.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Qix-"&gt;
        Qix-
      &lt;/a&gt; / &lt;a href="https://github.com/Qix-/color"&gt;
        color
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🌈 Javascript color conversion and manipulation library
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
color&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;JavaScript library for immutable color conversion and manipulation with support for CSS color strings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;color&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-v"&gt;Color&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'#7743CE'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;alpha&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;lighten&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;color&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;hsl&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;string&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;  &lt;span class="pl-c"&gt;// 'hsla(262, 59%, 81%, 0.5)'&lt;/span&gt;

&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;color&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;cmyk&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;round&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;array&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;  &lt;span class="pl-c"&gt;// [ 16, 25, 0, 8, 0.5 ]&lt;/span&gt;

&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;color&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;ansi256&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;object&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;  &lt;span class="pl-c"&gt;// { ansi256: 183, alpha: 0.5 }&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="highlight highlight-text-shell-session position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;$ &lt;span class="pl-s1"&gt;npm install color&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-v"&gt;Color&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'color'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Constructors&lt;/h3&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;color&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-v"&gt;Color&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'rgb(255, 255, 255)'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;color&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-v"&gt;Color&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-c1"&gt;r&lt;/span&gt;: &lt;span class="pl-c1"&gt;255&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;g&lt;/span&gt;: &lt;span class="pl-c1"&gt;255&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;b&lt;/span&gt;: &lt;span class="pl-c1"&gt;255&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;color&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-v"&gt;Color&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Qix-/color"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-perfectcursors"&gt;
  &lt;/a&gt;
  6. perfect-cursors
&lt;/h3&gt;

&lt;p&gt;Perfect interpolation for animated multiplayer cursors.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/steveruizok"&gt;
        steveruizok
      &lt;/a&gt; / &lt;a href="https://github.com/steveruizok/perfect-cursors"&gt;
        perfect-cursors
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Perfect interpolation for multiplayer cursors.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
perfect-cursors&lt;/h1&gt;
&lt;p&gt;Perfect interpolation for animated multiplayer cursors. Used in &lt;a href="https://tldraw.com" rel="nofollow"&gt;tldraw&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;💕 Love this library? Consider &lt;a href="https://github.com/sponsors/steveruizok?frequency=recurring&amp;amp;sponsor=steveruizok"&gt;becoming a sponsor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codesandbox.io/s/perfect-cursors-demo-u85tu?fontsize=14&amp;amp;hidenavigation=1&amp;amp;theme=dark" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90808661433696bc57dce8d4ad732307b5cec6270e6b846f114dcd7ee7f9458a/68747470733a2f2f636f646573616e64626f782e696f2f7374617469632f696d672f706c61792d636f646573616e64626f782e737667" alt="Edit perfect-cursors-demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;yarn add perfect-cursors
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;
npm i perfect-cursors&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;You can use this library to smoothly animate a cursor based on limited information.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/23072548/148639100-864b46ee-f69f-4f9a-a695-848936050b50.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_r0SEkph--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/23072548/148639100-864b46ee-f69f-4f9a-a695-848936050b50.gif" alt="Kapture 2022-01-08 at 09 25 50"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Above: We are updating the red cursor's position once every 80 milliseconds. The &lt;code&gt;perfect-cursors&lt;/code&gt; library is being used to correctly animate between these positions.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
Animating between points&lt;/h3&gt;
&lt;p&gt;When implementing a multiplayer app, you will most likely be displaying each user's cursor location based on the information you receive from a multiplayer service such as &lt;a href="https://pusher.com/" rel="nofollow"&gt;Pusher&lt;/a&gt;, &lt;a href="https://liveblocks.io/" rel="nofollow"&gt;Liveblocks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In a perfect world, these updates would occur "in real time": that is, arriving with zero latency and arriving at the same rate as the user's monitor.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/23072548/148639423-529a7027-cab9-4085-a9f4-d85e28cce744.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5cozmLdn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/23072548/148639423-529a7027-cab9-4085-a9f4-d85e28cce744.gif" alt="Kapture 2022-01-08 at 09 35 34"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Above: Updating the cursor instantly.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In the real world, however, services often "throttle" their updates to roughly one update every 50-80…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/steveruizok/perfect-cursors"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-passport"&gt;
  &lt;/a&gt;
  7. Passport
&lt;/h3&gt;

&lt;p&gt;Simple, unobtrusive authentication for Node.js. Passport's sole purpose is to authenticate requests, which it does through an extensible set of plugins known as strategies.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jaredhanson"&gt;
        jaredhanson
      &lt;/a&gt; / &lt;a href="https://github.com/jaredhanson/passport"&gt;
        passport
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Simple, unobtrusive authentication for Node.js.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="http://passportjs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6835eb33bb0e58ae663c7b9baeddf2a76cc6cf98862769eddbe22ee45c00a17b/687474703a2f2f63646e2e61757468302e636f6d2f696d672f70617373706f72742d62616e6e65722d6769746875622e706e67" alt="passport banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Passport&lt;/h1&gt;
&lt;p&gt;Passport is &lt;a href="http://expressjs.com/" rel="nofollow"&gt;Express&lt;/a&gt;-compatible authentication
middleware for &lt;a href="http://nodejs.org/" rel="nofollow"&gt;Node.js&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Passport's sole purpose is to authenticate requests, which it does through an
extensible set of plugins known as &lt;em&gt;strategies&lt;/em&gt;.  Passport does not mount
routes or assume any particular database schema, which maximizes flexibility and
allows application-level decisions to be made by the developer.  The API is
simple: you provide Passport a request to authenticate, and Passport provides
hooks for controlling what occurs when authentication succeeds or fails.&lt;/p&gt;

&lt;p&gt;
  &lt;sup&gt;Sponsors&lt;/sup&gt;
  &lt;br&gt;
  &lt;a href="https://www.loginradius.com/?utm_source=sponsership&amp;amp;utm_medium=github&amp;amp;utm_campaign=jaredhanson" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bK1F8L-s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/loginradius.png"&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href="https://accounts.loginradius.com/auth.aspx?action=register?utm_source=sponsership&amp;amp;utm_medium=github&amp;amp;utm_campaign=jaredhanson" rel="nofollow"&gt;LoginRadius&lt;/a&gt; is built for the developer community to integrate robust Authentication and Single Sign-On in just a few lines of code.&lt;br&gt;&lt;a href="https://accounts.loginradius.com/auth.aspx?action=register?utm_source=sponsership&amp;amp;utm_medium=github&amp;amp;utm_campaign=jaredhanson" rel="nofollow"&gt;FREE Signup&lt;/a&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;a href="https://workos.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=passport_js&amp;amp;utm_source=github" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n6AKaRbV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/workos.png"&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href="https://workos.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=passport_js&amp;amp;utm_source=github" rel="nofollow"&gt;&lt;b&gt;Your app, enterprise-ready.&lt;/b&gt;&lt;br&gt;Start selling to enterprise customers with just a few lines of code. Add Single Sign-On (and more) in minutes instead of months.&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Status
&lt;a href="https://travis-ci.org/jaredhanson/passport" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b89250621b423e40949e3e050d9899213881e33ef9aef0d016abd8daffe9aa4/68747470733a2f2f7472617669732d63692e6f72672f6a6172656468616e736f6e2f70617373706f72742e7376673f6272616e63683d6d6173746572" alt="Build"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/r/jaredhanson/passport" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9e988550112b7907bfabdb8d03dcbf764fd4c1ac23185915158cff46df9cc017/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a6172656468616e736f6e2f70617373706f72742f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/jaredhanson/passport" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4c5737ece84abd7262b7baf70e62c970e2de7a3214bc5b8e12067cd9401847de/68747470733a2f2f64617669642d646d2e6f72672f6a6172656468616e736f6e2f70617373706f72742e737667" alt="Dependencies"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;$ npm install passport
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;h4&gt;
Strategies&lt;/h4&gt;
&lt;p&gt;Passport uses the concept of strategies to authenticate requests.  Strategies
can range from verifying username…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jaredhanson/passport"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-oclif"&gt;
  &lt;/a&gt;
  8. oclif
&lt;/h3&gt;

&lt;p&gt;Framework for building CLIs in Node.js. This framework was built out of the Heroku CLI but generalized to build any custom CLI. It's designed both for single-file CLIs with a few flag options, or for very complex CLIs that have subcommands (like git or heroku).&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/oclif"&gt;
        oclif
      &lt;/a&gt; / &lt;a href="https://github.com/oclif/oclif"&gt;
        oclif
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Node.js Open CLI Framework. Built with 💜 by Heroku.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/449385/38243295-e0a47d58-372e-11e8-9bc0-8c02a6f4d2ac.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kW5xMmhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/449385/38243295-e0a47d58-372e-11e8-9bc0-8c02a6f4d2ac.png" width="260" height="73"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
oclif: Node.JS Open CLI Framework&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://npmjs.org/package/oclif" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d26abb94b60b188f156b81aedf0c1d749f747da444c8dd52b1b5d7d572042ed3/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6f636c69662e737667" alt="Version"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/oclif/oclif/tree/main" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d50ccfd8ba447ff7960d70324e5d79056a5450b8a69353d25c7126c46f263559/68747470733a2f2f636972636c6563692e636f6d2f67682f6f636c69662f6f636c69662f747265652f6d61696e2e7376673f7374796c653d736869656c64" alt="CircleCI"&gt;&lt;/a&gt;
&lt;a href="https://npmjs.org/package/@oclif/core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/938f57a9456204ff17d428d2e9e4e3359666be8caf3d6c0dbf6d787f397027e9/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f406f636c69662f636f6d6d616e642e737667" alt="Downloads/week"&gt;&lt;/a&gt;
&lt;a href="https://github.com/oclif/oclif/blob/main/package.json"&gt;&lt;img src="https://camo.githubusercontent.com/280646188b7da7b87257e1fb70131022224146225cab9b58e9aeaa98760f08fd/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f6f636c69662e737667" alt="License"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/oclif/oclif#-description"&gt;🗒 Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oclif/oclif#-getting-started-tutorial"&gt;🚀 Getting Started Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oclif/oclif#-features"&gt;✨ Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oclif/oclif#-requirements"&gt;📌 Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oclif/oclif#-migrating-from-v1"&gt;📌 Migrating from V1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oclif/oclif#-usage"&gt;🏗 Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oclif/oclif#-examples"&gt;📚 Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oclif/oclif#-commands"&gt;🔨 Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oclif/oclif#-related-repositories"&gt;🏭 Related Repositories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oclif/oclif#-learn-more"&gt;🦔 Learn More&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oclif/oclif#-feedback"&gt;📣 Feedback&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
🗒 Description&lt;/h1&gt;
&lt;p&gt;This is a framework for building CLIs in Node.js. This framework was built out of the &lt;a href="https://cli.heroku.com" rel="nofollow"&gt;Heroku CLI&lt;/a&gt; but generalized to build any custom CLI. It's designed both for single-file CLIs with a few flag options, or for very complex CLIs that have subcommands (like git or heroku).&lt;/p&gt;
&lt;p&gt;&lt;a href="http://oclif.io/docs/introduction" rel="nofollow"&gt;See the docs for more information&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
🚀 Getting Started Tutorial&lt;/h1&gt;
&lt;p&gt;The &lt;a href="http://oclif.io/docs/introduction" rel="nofollow"&gt;Getting Started tutorial&lt;/a&gt; is a step-by-step guide to introduce you to oclif. If you have not developed anything in a command line before, this tutorial is a great place to get started.&lt;/p&gt;
&lt;h1&gt;
✨ Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Flag/Argument parsing&lt;/strong&gt; - No CLI framework would be complete without a flag parser. We've built a custom one from years of…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/oclif/oclif"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-meteor"&gt;
  &lt;/a&gt;
  9. Meteor
&lt;/h3&gt;

&lt;p&gt;Meteor is an ultra-simple environment for building modern web applications.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/meteor"&gt;
        meteor
      &lt;/a&gt; / &lt;a href="https://github.com/meteor/meteor"&gt;
        meteor
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Meteor, the JavaScript App Platform
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="https://www.meteor.com" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XKK5qzLi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/841294/26841702-0902bbee-4af3-11e7-9805-0618da66a246.png" height="60" alt="Meteor"&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://travis-ci.org/meteor/meteor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b1146b766f7aaa55a6c3ceb9246685fde1ee53687db1b349d6b590b690feda6/68747470733a2f2f7472617669732d63692e6f72672f6d6574656f722f6d6574656f722e7376673f6272616e63683d646576656c" alt="TravisCI Status"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/meteor/meteor/tree/devel" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1d0b378ab20f965fb195a05d8d924ac2b13e891dd1db80fcd316d1a13a568a00/68747470733a2f2f636972636c6563692e636f6d2f67682f6d6574656f722f6d6574656f722f747265652f646576656c2e7376673f7374796c653d736869656c6426636972636c652d746f6b656e3d63326433633034313530366264343933656633373935666661343434383638346366636539376238" alt="CircleCI Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Meteor is an ultra-simple environment for building modern web
applications.&lt;/p&gt;
&lt;p&gt;With Meteor you write apps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in modern JavaScript&lt;/li&gt;
&lt;li&gt;that send data over the wire, rather than HTML&lt;/li&gt;
&lt;li&gt;using your choice of popular open-source libraries&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Try a getting started tutorial:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://react-tutorial.meteor.com" rel="nofollow"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blaze-tutorial.meteor.com/" rel="nofollow"&gt;Blaze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vue-tutorial.meteor.com/" rel="nofollow"&gt;Vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://svelte-tutorial.meteor.com/" rel="nofollow"&gt;Svelte&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, read the &lt;a href="https://docs.meteor.com/" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Are you looking for examples? Check this &lt;a href="https://github.com/meteor/examples"&gt;meteor/examples&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check your &lt;a href="https://docs.meteor.com/changelog.html" rel="nofollow"&gt;changes&lt;/a&gt; to keep your app up-to-date.&lt;/p&gt;
&lt;h2&gt;
Quick Start&lt;/h2&gt;
&lt;p&gt;On Linux/macOS/Windows, use this line:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install -g meteor&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Visit the official &lt;a href="https://www.meteor.com/developers/install" rel="nofollow"&gt;install page&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;p&gt;Create a project:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;meteor create my-app&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Run it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; my-app
meteor&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Developer Resources&lt;/h2&gt;
&lt;p&gt;Building an application with Meteor?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deploy on &lt;a href="https://www.meteor.com/cloud" rel="nofollow"&gt;Meteor Cloud&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Discussion &lt;a href="https://forums.meteor.com/" rel="nofollow"&gt;Forums&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Join the Meteor community Slack by clicking this &lt;a href="https://join.slack.com/t/meteor-community/shared_invite/enQtODA0NTU2Nzk5MTA3LWY5NGMxMWRjZDgzYWMyMTEyYTQ3MTcwZmU2YjM5MTY3MjJkZjQ0NWRjOGZlYmIxZjFlYTA5Mjg4OTk3ODRiOTc" rel="nofollow"&gt;invite link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Announcement list. Subscribe in the &lt;a href="https://www.meteor.com/" rel="nofollow"&gt;footer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Interested in helping or contributing to Meteor?  These resources will help:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/meteor/meteorDEVELOPMENT.md"&gt;Core development guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meteor/meteorCONTRIBUTING.md"&gt;Contribution guidelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meteor/meteor/discussions/"&gt;Feature requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meteor/meteor/issues"&gt;Issue tracker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To uninstall Meteor &lt;a href="https://docs.meteor.com/install.html#uninstall" rel="nofollow"&gt;read&lt;/a&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/meteor/meteor"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-reactplayer"&gt;
  &lt;/a&gt;
  10. ReactPlayer
&lt;/h3&gt;

&lt;p&gt;A React component for playing a variety of URLs, including file paths, YouTube, Facebook, Twitch, SoundCloud, Streamable, Vimeo, Wistia and DailyMotion&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/cookpete"&gt;
        cookpete
      &lt;/a&gt; / &lt;a href="https://github.com/cookpete/react-player"&gt;
        react-player
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A React component for playing a variety of URLs, including file paths, YouTube, Facebook, Twitch, SoundCloud, Streamable, Vimeo, Wistia and DailyMotion
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
  ReactPlayer
&lt;/h1&gt;
&lt;p&gt;
  &lt;a href="https://www.npmjs.com/package/react-player" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/15cb318f7c55f683f8a56e2a00ce3e8181078bc9abcc64ae7f129e556b79fff6/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d706c617965722e737667" alt="Latest npm version"&gt;
  &lt;/a&gt;
  &lt;a href="https://travis-ci.org/CookPete/react-player" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/9a55b6fd71437287ee8f249d3c5e536fcd88e4925bd4ae91f4a9c9be2782c783/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f436f6f6b506574652f72656163742d706c617965722f6d61737465722e737667" alt="Build Status"&gt;
  &lt;/a&gt;
  &lt;a href="https://codecov.io/gh/CookPete/react-player" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/fae80007651c76ecedfbbf2471981a496b82b842869b59304e0d5c51e2d17a19/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f636f6f6b706574652f72656163742d706c617965722e737667" alt="Test Coverage"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.patreon.com/cookpete" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/7ed4c7608f4a8ad6e1f7b83e6708aebbde2e37b0b821bbdd11073a550b0b0cfe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73706f6e736f722d70617472656f6e2d6661363835342e737667" alt="Become a sponsor on Patreon"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  A React component for playing a variety of URLs, including file paths, YouTube, Facebook, Twitch, SoundCloud, Streamable, Vimeo, Wistia, Mixcloud, DailyMotion and Kaltura. Not using React? &lt;a href="https://github.com/cookpete/react-player#standalone-player"&gt;No problem.&lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;
Migrating to ReactPlayer &lt;code&gt;v2.0&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;ReactPlayer &lt;code&gt;v2.0&lt;/code&gt; changes single player imports and adds lazy loading players. Support for &lt;code&gt;preload&lt;/code&gt; has also been removed, plus some other changes. See &lt;a href="https://github.com/cookpete/react-player/MIGRATING.md"&gt;&lt;code&gt;MIGRATING.md&lt;/code&gt;&lt;/a&gt; for information.&lt;/p&gt;

&lt;h3&gt;
Usage&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install react-player &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or yarn add react-player&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;React&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;ReactPlayer&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-player'&lt;/span&gt;
&lt;span class="pl-c"&gt;// Render a YouTube video player&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;ReactPlayer&lt;/span&gt; &lt;span class="pl-c1"&gt;url&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;'https://www.youtube.com/watch?v=ysz5S6PUM-U'&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;By default, ReactPlayer supports &lt;a href="https://github.com/cookpete/react-player#supported-media"&gt;many different types&lt;/a&gt; of &lt;code&gt;url&lt;/code&gt;. If you only ever use one type, use imports such as &lt;code&gt;react-player/youtube&lt;/code&gt; to reduce your bundle size. See &lt;a href="https://github.com/cookpete/react-player#config-prop"&gt;config keys&lt;/a&gt; for all player keys.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;React&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;ReactPlayer&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-player/youtube'&lt;/span&gt;

&lt;span class="pl-c"&gt;// Only loads the YouTube player&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;ReactPlayer&lt;/span&gt; &lt;span class="pl-c1"&gt;url&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;'https://www.youtube.com/watch?v=ysz5S6PUM-U'&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;If your build system supports &lt;code&gt;import()&lt;/code&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/cookpete/react-player"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/Asabeneh/30-Days-Of-JavaScript"&gt;30 Days Of JavaScript&lt;/a&gt; +1,929 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lucaburgio/iconoir"&gt;Iconoir&lt;/a&gt; +885 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tauri-apps/tauri"&gt;Tauri&lt;/a&gt; +842 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Marak/faker.js"&gt;faker.js&lt;/a&gt; +812 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +710 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/Marak/faker.js"&gt;faker.js&lt;/a&gt; +178%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lucaburgio/iconoir"&gt;Iconoir&lt;/a&gt; +93%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/aws-amplify/amplify-ui"&gt;Amplify UI&lt;/a&gt; +36%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nolanlawson/fuite"&gt;Fuite&lt;/a&gt; +27%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Asabeneh/30-Days-Of-JavaScript"&gt;30 Days Of JavaScript&lt;/a&gt; +16%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +4,538 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Eugeny/tabby"&gt;Tabby&lt;/a&gt; +4,249 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/awesome-selfhosted/awesome-selfhosted"&gt;Awesome Self Hosted&lt;/a&gt; +3,583 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +3,387 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt; +2,956 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/picocss/pico"&gt;Pico&lt;/a&gt; +202%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rakkasjs/rakkasjs"&gt;Rakkas&lt;/a&gt; +144%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/LeaVerou/md-block"&gt;md-block&lt;/a&gt; +107%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lucaburgio/iconoir"&gt;Iconoir&lt;/a&gt; +98%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coding-horror/basic-computer-games"&gt;Basic Computer Games&lt;/a&gt; +92%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>react</category>
    </item>
    <item>
      <title>Monitoring Django application performance with OpenTelemetry | SigNoz</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Fri, 14 Jan 2022 14:27:59 +0000</pubDate>
      <link>https://dev.to/signoz/monitoring-django-application-performance-with-opentelemetry-signoz-4k8m</link>
      <guid>https://dev.to/signoz/monitoring-django-application-performance-with-opentelemetry-signoz-4k8m</guid>
      <description>&lt;p&gt;Django is a popular open-source python web framework that enables rapid development while taking out much of the hassle from routine web development. It also helps developers to avoid common security mistakes. As such, many applications are built with Django.&lt;/p&gt;

&lt;p&gt;Django is very popular among web developers and has a huge community behind it. It gives web developers ready-to-use components for common things that you will need to accomplish for a web application. Some examples are user authentication, admin panel for your website, forms, etc.&lt;/p&gt;

&lt;p&gt;A Django application is built of different components like a web server, database, web server gateway interface, etc. To monitor a Django application for performance, you need to monitor all these components. And that’s where OpenTelemetry comes into the picture.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;What is OpenTelemetry Django?&lt;/strong&gt;&lt;br&gt;
OpenTelemetry Django instrumentation enables generation of telemetry data from your Django application. The data is then used to monitor performance of Django application.&lt;br&gt; OpenTelemetry provides an open-source standard with a consistent collection mechanism and data format. As application owners, you will always have the freedom to choose different vendors to visualize the collected telemetry data.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;OpenTelemetry is a set of tools, APIs, and SDKs used to instrument applications to create and manage telemetry data(Logs, metrics, and traces). It aims to make telemetry data(logs, metrics, and traces) a built-in feature of cloud-native software applications.&lt;/p&gt;

&lt;p&gt;One of the biggest advantages of using OpenTelemetry is that it is vendor-agnostic. It can export data in multiple formats, which you can send to a backend of your choice.&lt;/p&gt;

&lt;p&gt;In this article, we will use &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; as a backend. SigNoz is an open-source APM tool built natively for OpenTelemetry and can be used for both metrics and distributed tracing. We will visualize the data captured by OpenTelemetry using SigNoz.&lt;/p&gt;

&lt;p&gt;In this article, we will use a sample Django application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sample-django-application"&gt;
  &lt;/a&gt;
  Sample Django application
&lt;/h3&gt;

&lt;p&gt;We will be using a sample poll application which will consist of two parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A public site that lets people view polls and vote in them&lt;/li&gt;
&lt;li&gt;An admin site that lets you add, change and delete polls.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find the detailed tutorial on &lt;a href="https://docs.djangoproject.com/en/3.1/intro/tutorial01/"&gt;official django website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HTbhjK1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://signoz.io/img/blog/2022/01/django_app_admin_panel.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HTbhjK1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://signoz.io/img/blog/2022/01/django_app_admin_panel.webp" alt="Admin access UI for the sample Django application used for monitoring Django application with OpenTelemetry" width="880" height="482"&gt;&lt;/a&gt;Admin site of the sample Django application&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-django-application-with-opentelemetry"&gt;
  &lt;/a&gt;
  Running Django application with OpenTelemetry
&lt;/h3&gt;

&lt;p&gt;First, you need to install SigNoz. Data collected by OpenTelemetry will be sent to SigNoz for storage and visualization.&lt;/p&gt;

&lt;p&gt;You can get started with SigNoz using just three commands at your terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;clone&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/SigNoz/signoz.git&lt;/span&gt;
&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;signoz&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above instruction is for MacOS and linux distributions. For detailed instructions, you can visit our documentation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/docs/deployment/docker/?utm_source=blog&amp;amp;utm_medium=opentelemetry_django"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--seBUaah6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://signoz.io/img/blog/common/deploy_docker_documentation.webp" alt="Deployment Docs" width="880" height="82"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have installed SigNoz on your local host, you can access the UI at: &lt;a href="http://localhost:3000/application"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The application list shown in the dashboard is from a sample app called HOT R.O.D that comes bundled with the SigNoz installation package.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Ot9_rfQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://signoz.io/img/blog/2021/08/signoz_dashboard_hc.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Ot9_rfQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://signoz.io/img/blog/2021/08/signoz_dashboard_hc.webp" alt="SigNoz dashboard showing application list" width="880" height="492"&gt;&lt;/a&gt;SigNoz Dashboard&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#instrumenting-a-sample-django-application-with-opentelemetry"&gt;
  &lt;/a&gt;
  Instrumenting a sample Django application with OpenTelemetry
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;br&gt;
Python 3.8 or newer&lt;br&gt;
Download the &lt;a href="https://www.python.org/downloads/" rel="noopener noreferrer nofollow"&gt;latest version&lt;/a&gt; of Python.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Running sample Django app&lt;/strong&gt;&lt;br&gt;
We will be using the Django app at this &lt;a href="https://github.com/SigNoz/sample-django"&gt;Github repo&lt;/a&gt;. All the required OpenTelemetry and Python packages are contained within the &lt;code&gt;requirements.txt&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;clone&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/SigNoz/sample-django.git&lt;/span&gt;
&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;sample&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;django&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Installing necessary OpenTelemetry and Python packages&lt;/strong&gt;&lt;br&gt;
The &lt;code&gt;requirements.txt&lt;/code&gt; file contains all the necessary OpenTelemetry and Python packages needed for instrumentation. In order to install those packages, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;pip3&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="nx"&gt;requirements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here’s a snapshot of packages in the requirements.txt file to run the Django application with OpenTelemetry.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p2TyBpiE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://signoz.io/img/blog/2022/01/django_packages.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p2TyBpiE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://signoz.io/img/blog/2022/01/django_packages.webp" alt="python packages required for the Django application" width="680" height="580"&gt;&lt;/a&gt;Packages required for the sample Django application&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install application-specific packages&lt;/strong&gt;&lt;br&gt;
This step is required to install packages specific to the application. This command figures out which instrumentation packages the user might want to install and installs it for them:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;opentelemetry&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;bootstrap&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Prepare your Django app&lt;/strong&gt;&lt;br&gt;
Now you need to run the following three commands to prepare the sample Django application.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;a. This command is used to perform the initial database migration. You will only need to run this the very first time you deploy your app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;   &lt;span class="nx"&gt;python3&lt;/span&gt; &lt;span class="nx"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt; &lt;span class="nx"&gt;migrate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;b. This command is used to collect static files from multiple apps into a single path.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;   &lt;span class="nx"&gt;python3&lt;/span&gt; &lt;span class="nx"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt; &lt;span class="nx"&gt;collectstatic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;c. The following command creates a user who can log in to the admin site. You will be asked to create a username and a password. You will need the username and password to login to the admin portal later.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;   &lt;span class="nx"&gt;python3&lt;/span&gt; &lt;span class="nx"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt; &lt;span class="nx"&gt;createsuperuser&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The sample app creates an admin login as shown in the picture below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vMWNZ57e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://signoz.io/img/blog/2022/01/django_app_login.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vMWNZ57e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://signoz.io/img/blog/2022/01/django_app_login.webp" alt="Django app login UI" width="768" height="339"&gt;&lt;/a&gt;You will need the username and password to log into the admin panel&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Configure environment variables to run app and send data to SigNoz&lt;/strong&gt;&lt;br&gt;
Finally you can run your Django app with OpenTelemetry and send data to SigNoz for monitoring. You can do that in three ways and you can choose what’s more suited to you.&lt;/p&gt;

&lt;p&gt;a. &lt;strong&gt;To run with gunicorn you need to add post_fork hook&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
      To run the sample app with Gunicorn, we have added a file named &lt;code&gt;gunicorn.config.py&lt;/code&gt;. In this step, you just need to configure a few environment variables for your OTLP exporters. Environment variables that need to be configured:&lt;br&gt;
      - &lt;code&gt;service.name&lt;/code&gt;application service name (you can name it as you like)&lt;br&gt;
      - &lt;code&gt;OTEL_EXPORTER_OTLP_ENDPOINT&lt;/code&gt; - In this case, IP of the machine where SigNoz is installed&lt;br&gt;
      - &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don’t run app in reloader/hot-reload mode as it breaks instrumentation.&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;DJANGO_APP&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;.settings  OTEL_RESOURCE_ATTRIBUTES=service.name=&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;serviceName&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; OTEL_EXPORTER_OTLP_ENDPOINT="http://&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;IP&lt;/span&gt; &lt;span class="na"&gt;OF&lt;/span&gt; &lt;span class="na"&gt;SigNoz&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;:4317" opentelemetry-instrument gunicorn &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;DJANGO_APP&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;.wsgi -c gunicorn.config.py --workers 2 --threads 2 --reload
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we are running SigNoz on local host, &lt;code&gt;IP of SigNoz&lt;/code&gt; can be replaced with &lt;code&gt;localhost&lt;/code&gt; in this case. And, for &lt;code&gt;service_name &lt;/code&gt;let's use &lt;code&gt;DjangoApp&lt;/code&gt;. DJANGO_SETTINGS_MODULE for this example is mysite.settings. Hence, the final command becomes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;mysite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;settings&lt;/span&gt;  &lt;span class="nx"&gt;OTEL_RESOURCE_ATTRIBUTES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;DjangoApp&lt;/span&gt; &lt;span class="nx"&gt;OTEL_EXPORTER_OTLP_ENDPOINT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:4317&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;opentelemetry&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;instrument&lt;/span&gt; &lt;span class="nx"&gt;gunicorn&lt;/span&gt; &lt;span class="nx"&gt;mysite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wsgi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="nx"&gt;gunicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;workers&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;threads&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;reload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And, congratulations! You have enabled OpenTelemetry to capture telemetry data from your Django application. And, you are sending the captured data to SigNoz.&lt;/p&gt;

&lt;p&gt;You can check if your app by opening the admin panel at &lt;a href="http://localhost:8000/admin"&gt;http://localhost:8000/admin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have installed SigNoz on your local host, then you can access the SigNoz dashboard at &lt;a href="http://localhost:3000/"&gt;http://localhost:3000&lt;/a&gt; to monitor your Django app for performance metrics.&lt;/p&gt;

&lt;p&gt;You need to generate some load on your app so that there is data to be captured by OpenTelemetry. Try adding a few questions in the polls app and play around.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--731YW9O2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://signoz.io/img/blog/2022/01/django_app_signoz.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--731YW9O2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://signoz.io/img/blog/2022/01/django_app_signoz.webp" alt="SigNoz dashboard showing application list with Django app being monitored" width="880" height="505"&gt;&lt;/a&gt;You will find Django application in the list of applications monitored on SigNoz dashboard. The other applications are from a sample app that comes loaded with SigNoz.&lt;/p&gt;

&lt;p&gt;There are two other ways to run the Django app with OpenTelemetry using Docker and Docker compose.&lt;/p&gt;

&lt;p&gt;b. &lt;strong&gt;If want to run docker image of django app directly&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;docker&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="nx"&gt;OTEL_METRICS_EXPORTER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;none&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;
    &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="nx"&gt;OTEL_SERVICE_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;djangoApp&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;
    &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="nx"&gt;OTEL_EXPORTER_OTLP_ENDPOINT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//&amp;lt;IP of SigNoz&amp;gt;:4317 \&lt;/span&gt;
    &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="nx"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;mysite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;settings&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="nx"&gt;signoz&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;sample&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;django&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;latest1&lt;/span&gt; &lt;span class="nx"&gt;opentelemetry&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;instrument&lt;/span&gt; &lt;span class="nx"&gt;gunicorn&lt;/span&gt; &lt;span class="nx"&gt;mysite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wsgi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="nx"&gt;gunicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;workers&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;threads&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;reload&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;c. &lt;strong&gt;If want to use docker image of django app in docker-compose&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;signoz/sample-django:latest&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;container_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sample&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;django&lt;/span&gt;
    &lt;span class="nx"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;opentelemetry&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;instrument&lt;/span&gt; &lt;span class="nx"&gt;gunicorn&lt;/span&gt; &lt;span class="nx"&gt;mysite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wsgi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="nx"&gt;gunicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;workers&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;threads&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;reload&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;
    &lt;span class="nx"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;8000:8000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;OTEL_METRICS_EXPORTER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;none&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;OTEL_SERVICE_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;djangoApp&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;OTEL_EXPORTER_OTLP_ENDPOINT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//otel-collector:4317&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;mysite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;settings&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Browsing the app and checking data with SigNoz&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
a. Visit &lt;a href="http://localhost:8000/admin"&gt;http://localhost:8000/admin&lt;/a&gt; and create a question for poll&lt;/p&gt;

&lt;p&gt;b. Then visit the list of polls at &lt;a href="http://localhost:8000/polls/"&gt;http://localhost:8000/polls/&lt;/a&gt; and explore the polls&lt;/p&gt;

&lt;p&gt;c. The data should be visible now in SigNoz at &lt;code&gt;http://&amp;lt;IP of SigNoz&amp;gt;:3000&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#opensource-tool-to-visualize-telemetry-data"&gt;
  &lt;/a&gt;
  Open-source tool to visualize telemetry data
&lt;/h2&gt;

&lt;p&gt;SigNoz makes it easy to visualize metrics and traces captured through OpenTelemetry instrumentation.&lt;/p&gt;

&lt;p&gt;SigNoz comes with out of box RED metrics charts and visualization. RED metrics stands for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rate of requests&lt;/li&gt;
&lt;li&gt;Error rate of requests&lt;/li&gt;
&lt;li&gt;Duration taken by requests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---EjS1eNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---EjS1eNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.webp" alt="SigNoz charts and metrics" width="880" height="512"&gt;&lt;/a&gt;Measure things like application latency, requests per sec, error percentage and see your top endpoints with SigNoz.&lt;/p&gt;

&lt;p&gt;You can then choose a particular timestamp where latency is high to drill down to traces around that timestamp.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zipHHg5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_list_of_traces_hc.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zipHHg5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_list_of_traces_hc.webp" alt="List of traces on SigNoz dashboard" width="880" height="512"&gt;&lt;/a&gt;View of traces at a particular timestamp&lt;/p&gt;

&lt;p&gt;You can use flamegraphs to exactly identify the issue causing the latency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fmGoLDx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fmGoLDx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.webp" alt="Flamegraphs used to visualize spans of distributed tracing in SigNoz UI" width="880" height="512"&gt;&lt;/a&gt;View of traces at a particular timestamp&lt;/p&gt;

&lt;p&gt;You can also build custom metrics dashboard for your infrastructure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z7C5zsAp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_custom_dashboard-min.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z7C5zsAp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_custom_dashboard-min.webp" alt="Custom metrics dashboard" width="880" height="477"&gt;&lt;/a&gt;You can also build a custom metrics dashboard for your infrastructure&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry makes it very convenient to instrument your Django application. You can then use an open-source APM tool like SigNoz to analyze the performance of your app. As SigNoz offers a full-stack observability tool, you don't have to use multiple tools for your monitoring needs.&lt;/p&gt;

&lt;p&gt;You can try out SigNoz by visiting its GitHub repo 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo" width="708" height="162"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or need any help in setting things up, join our slack community and ping us in &lt;code&gt;#help&lt;/code&gt; channel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/signoz-slack"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dSs2tC2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/join_slack_cta.png" alt="SigNoz Slack community" width="880" height="118"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you want to read more about SigNoz 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/opentelemetry/go/"&gt;Golang Aplication Monitoring with OpenTelemetry and SigNoz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/blog/opentelemetry-collector-complete-guide/"&gt;OpenTelemetry collector - complete guide&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>django</category>
      <category>monitoring</category>
      <category>microservices</category>
    </item>
    <item>
      <title>Will No-Code Replace developers?</title>
      <author>Vik 📈</author>
      <pubDate>Fri, 14 Jan 2022 14:08:17 +0000</pubDate>
      <link>https://dev.to/heyvik/will-no-code-replace-developers-8ao</link>
      <guid>https://dev.to/heyvik/will-no-code-replace-developers-8ao</guid>
      <description>&lt;h3&gt;
  &lt;a href="#lets-first-understand-what-even-is-nocode-or-lowcode"&gt;
  &lt;/a&gt;
  Lets first understand, what even is No-Code or Low-Code?
&lt;/h3&gt;

&lt;p&gt;No-Code is made for people in every background to create stuff/software. No code platforms have pre-built drag-and-drop elements that have been coded for reuse and scale, so that anyone, even beginners can make anything they want easily.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#will-nolow-code-replace-programmers"&gt;
  &lt;/a&gt;
  Will No/Low Code replace programmers?
&lt;/h3&gt;

&lt;p&gt;No Not at all, we will surely need programmers... There will always be a need for coding. They benefited in there both alternatives.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#subscribe-to-my-newsletter"&gt;
  &lt;/a&gt;
  &lt;a href="https://devdairy.substack.com/p/coming-soon?showWelcome=true"&gt;Subscribe to my newsletter&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#so-does-nolow-code-does-have-any-future"&gt;
  &lt;/a&gt;
  So does No/Low Code does have any future?
&lt;/h3&gt;

&lt;p&gt;Yes No/Low Code do have a future but they are not the future of code. It is certainly having a place in the future and will be leveraged to make many applications For ANYONE. The future is low-code or no-code with an expected growth rate of 44.4% by 2022 to $27.23 billion (up from $4.32 billion in 2017).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-nolow-code-so-famous"&gt;
  &lt;/a&gt;
  Why No/Low Code so famous?
&lt;/h3&gt;

&lt;p&gt;No/Low Code is popular because it doesnt matter on what background you come from, you can make softwares. Making software in nocode platforms can be fast and done pretty regularly to build prototypes and MVP in a record time.&lt;/p&gt;

&lt;p&gt;Thats all for this blog, its a pretty small blog, but its just a start for me :) &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>programming</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Star Rating system with HTML, CSS,JS </title>
      <author>Rishav Jadon</author>
      <pubDate>Fri, 14 Jan 2022 14:01:36 +0000</pubDate>
      <link>https://dev.to/rjitsu/star-rating-system-with-html-cssjs-594k</link>
      <guid>https://dev.to/rjitsu/star-rating-system-with-html-cssjs-594k</guid>
      <description>&lt;p&gt;In a very minimal way,  how would you implement a star rating system?&lt;br&gt;
I was able to do it 😁 Here is my code, corrections are welcome :) &lt;br&gt;
&lt;a href="https://codepen.io/Rj456/pen/dyVwgbX?editors=0011"&gt;https://codepen.io/Rj456/pen/dyVwgbX?editors=0011&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>codepen</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>JavaScript factory functions and Object.create()</title>
      <author>Ahmad Mkahal</author>
      <pubDate>Fri, 14 Jan 2022 13:52:23 +0000</pubDate>
      <link>https://dev.to/ahmedm1999/javascript-factory-functions-and-objectcreat-4kbi</link>
      <guid>https://dev.to/ahmedm1999/javascript-factory-functions-and-objectcreat-4kbi</guid>
      <description>&lt;p&gt;Do you know JavaScript factory function and its issues, and why we use Object.create() method instead?&lt;/p&gt;

&lt;p&gt;Hello 🖐,&lt;/p&gt;

&lt;p&gt;Factory functions in JS are any function that return an object. &lt;/p&gt;

&lt;p&gt;like this one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function createPerson(firstName, lastName) {
    return {
        firstName: firstName,
        lastName: lastName,
        getFullName() {
            return firstName + ' ' + lastName;
        }
    }
}
const person1 = createPerson("Ahmad", "Mukahal");
const person1 = createPerson("john", "Deo");

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and so on...&lt;/p&gt;

&lt;p&gt;With the factory function, you create any number of the person objects you want without duplicating code.&lt;/p&gt;

&lt;p&gt;What if we have one thousand persons? It will store a thousand objects in the memory heap! and this is not an efficient way.&lt;/p&gt;

&lt;p&gt;Example: &lt;br&gt;
Each object will have a different address in the memory and every object will have the getFullName() method, Ooh no, I'm not DRY!!&lt;/p&gt;

&lt;p&gt;This is why the Object.create() method comes into play.&lt;/p&gt;

&lt;p&gt;The Object.create() method creates a new object using an existing object as the prototype of the new object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const person = {
firstName : "John",
lastName: "Deo",
getFullName() {
            return firstName + ' ' + lastName;
        }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;// Make prototype chain:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const me = Object.create(person);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;so, now &lt;code&gt;me&lt;/code&gt; object has all properties and methods in person object, and it can hold its own props and methods and override props and methods as you want like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(me.firstName) // John
me.firstName = "Ahmad";
me.lastName = "Mukahal";
console.log(me.firstName) // Ahmad
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What efficient is that !!&lt;/p&gt;

&lt;p&gt;Hopefully enjoyed reading.&lt;/p&gt;

&lt;p&gt;Ahmad Mukahal 🌹&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>typescript</category>
    </item>
    <item>
      <title>How To Convert a Lambda to a Step Function</title>
      <author>Matt Martz</author>
      <pubDate>Fri, 14 Jan 2022 13:39:56 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-to-convert-a-lambda-to-a-step-function-nfa</link>
      <guid>https://dev.to/aws-builders/how-to-convert-a-lambda-to-a-step-function-nfa</guid>
      <description>&lt;p&gt;I attended AWS re:Invent 2021 in-person and one of my big takeaways was the focus on AWS Step Functions.  With the &lt;a href="https://aws.amazon.com/blogs/aws/now-aws-step-functions-supports-200-aws-services-to-enable-easier-workflow-automation/"&gt;late September announcement that Step Functions now support 200+ AWS Services&lt;/a&gt; I could see why.&lt;/p&gt;

&lt;p&gt;So, what does that look like?  &lt;a href="https://github.com/martzcodes/blog-lambda-to-stepfunctions"&gt;Check Out the Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this post I'll convert a Lambda to a Step Function without Lambdas (sometimes called lambda-less or function-less 😈).  The original lambda will call an "External" API Gateway, do a GET from DynamoDB, make a decision and potentially WRITE to DynamoDB.  The resulting step function will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--upEfVDK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/martzcodes/blog-lambda-to-stepfunctions/raw/main/stepfunctions_graph.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--upEfVDK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/martzcodes/blog-lambda-to-stepfunctions/raw/main/stepfunctions_graph.png" alt="#Step Function Workflow" width="880" height="532"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Again... NO lambdas 🤯&lt;/p&gt;

&lt;p&gt;This project uses CDK v2.3 and was initialized using &lt;code&gt;cdk init --language typescript&lt;/code&gt;.  It's not intended to be a step-by-step tutorial.  If you need one of those, &lt;a href="https://twitter.com/martzcodes"&gt;follow me on Twitter&lt;/a&gt; and keep an eye out for my upcoming CDK Crash Course video.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-the-mock-external-service"&gt;
  &lt;/a&gt;
  Creating the Mock External Service
&lt;/h1&gt;

&lt;p&gt;To get started we're going to create two API Gateways: Our "actual" one and one to mock an External API Gateway, and avoid circular dependencies.  If your external service wasn't hosted by AWS / API Gateway you'd probably need to use a small lambda to do the external API call.&lt;/p&gt;

&lt;p&gt;The mock external service lives in &lt;code&gt;lib/mock-external.ts&lt;/code&gt;.  It's fairly unremarkable in that it's a Lambda with an API Gateway 🤷‍♂️.  The Lambda expects an APIGateway input with a &lt;code&gt;userId&lt;/code&gt; pathParameter... so &lt;code&gt;&amp;lt;mockApi&amp;gt;/asdf&lt;/code&gt; where &lt;code&gt;asdf&lt;/code&gt; would be the "userId".  From there it responds with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mockUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`EXTERNAL#&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathParameters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;queryStringParameters&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;{}).&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findName&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This simulates a "lookup" in an external service... here we just consistently change the userId and we generate a random name for the user.  Every time the endpoint is called the same user will get a new name (this isn't intended to be a real service, just representative of something that could have changing data).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#building-the-lambdalith"&gt;
  &lt;/a&gt;
  Building the Lambda-lith
&lt;/h1&gt;

&lt;p&gt;The lambdalith lives in &lt;code&gt;lambda/bigLambda.ts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It calls the external URL...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;  &lt;span class="c1"&gt;// make axios call to "external" api to get user name&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;externalUser&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;API_URL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathParameters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Gets the "internal" user matching the external userId:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userGetItemInput&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DocumentClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GetItemInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;TableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TABLE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;externalUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;internalUser&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userGetItemInput&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It returns early if the internal user has a "LOCKED" status (set directly via DynamoDB)... otherwise it updates the DynamoDB entry (which would insert if needed).&lt;/p&gt;

&lt;p&gt;All "names" that the user has had will also get stored in DynamoDB with the time they were inserted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;  &lt;span class="c1"&gt;// store user in dynamodb&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updateItemInput&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DocumentClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;UpdateItemInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;TableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TABLE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;externalUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;UpdateExpression&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`SET #name = :name, #status = :status, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;
      &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;internalUser&lt;/span&gt;
        &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#history = :history&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#history.#historical = if_not_exists(#history.#historical, :historical)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;ExpressionAttributeNames&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#history&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;history&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#status&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;status&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;ExpressionAttributeValues&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;:name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;externalUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;:status&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ACTIVE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;ReturnValues&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UPDATED_NEW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;internalUser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;updateItemInput&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ExpressionAttributeValues&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;:history&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;externalUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;updateItemInput&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ExpressionAttributeNames&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#historical&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
      &lt;span class="nx"&gt;externalUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;updateItemInput&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ExpressionAttributeValues&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;:historical&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatedItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;updateItemInput&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All in all this is a fairly simple example that represents a few different challenges.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#converting-the-lambdalith-to-a-step-function"&gt;
  &lt;/a&gt;
  Converting the Lambda-lith to a Step Function
&lt;/h1&gt;

&lt;p&gt;I began the conversion by opening the AWS Step Function console and playing with the shiny "new" &lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/workflow-studio.html"&gt;Workflow Studio&lt;/a&gt;.  I used this to get a sense of the different kinds of steps I'd need.&lt;/p&gt;

&lt;p&gt;In this case, since we want an immediate (synchronous) response from the Step Function we use an Express Step Function&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1PYQjEwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641419107708/4NqhOsdPE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1PYQjEwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641419107708/4NqhOsdPE.png" alt="Screen Shot 2022-01-04 at 11.22.08 AM.png" width="880" height="549"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My first pass (pun intended) was simply this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SvikHnHf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641419174828/B94pf1SVW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SvikHnHf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641419174828/B94pf1SVW.png" alt="stepfunctions_graph.png" width="544" height="584"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But ultimately I found out that there weren't enough Pass steps in there.&lt;/p&gt;

&lt;p&gt;Pass Steps are handy... they act as easy placeholders while designing the step function and also do data transformations.&lt;/p&gt;

&lt;p&gt;To get started with the implementation I began with the Step Function itself and tied in the API Integration later.  &lt;/p&gt;

&lt;p&gt;🙌The &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/04/aws-step-functions-adds-new-data-flow-simulator-for-modelling-input-and-output-processing/"&gt;Data Flow Simulator&lt;/a&gt; was incredibly useful in piecing together the &lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/amazon-states-language-paths.html"&gt;JSONPath Expressions&lt;/a&gt; and how they interact with the State Machine.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-step-and-issue"&gt;
  &lt;/a&gt;
  First Step (and Issue)
&lt;/h2&gt;

&lt;p&gt;The first &lt;em&gt;step&lt;/em&gt; (😉) of the State Machine is to make that external API Gateway call.  I wasted a lot of time on this because it's not super well documented in the case of dynamic / proxied URLs.  It seems like in most cases you'd use a POST with a body to hit an API Gateway to a pre-defined / static URL that points to a Step Function... and if you do that you can skip this first PASS step.  There's also an &lt;a href="https://github.com/aws/aws-cdk/issues/14243"&gt;open GitHub Issue&lt;/a&gt; related to this which is why I ultimately created the &lt;code&gt;lib/ModifiedCallApiGatewayRestApiEndpoint.ts&lt;/code&gt;.  The regular &lt;code&gt;CallApiGatewayRestApiEndpoint&lt;/code&gt; method can't make use of JsonPath expressions to extend endpoints.  What that means is in order to make use of my &lt;code&gt;userId&lt;/code&gt; path parameter I need to first do a data transformation and then hack it in via the modified class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Pass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;RoutePass&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apiPath.$&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;States.Format('/{}', $.userId)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userId.$&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.userId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name.$&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first &lt;a href="https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_stepfunctions.Pass.html"&gt;Pass&lt;/a&gt; takes the userId via the input parameters from the API Gateway Integration, builds the API path that will be called (including the rendered path parameter) and then the &lt;code&gt;ModifiedCallApiGatewayRestApiEndpoint&lt;/code&gt; puts it in the step's parameters via &lt;code&gt;Parameters: { "Path.$": "$.apiPath", ...orig.Parameters },&lt;/code&gt;.  Normally you'd be able to directly assign that, but it's not exposed as part of the L2 Construct for the CallApiGatewayRestApiEndpoint.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;callExternal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ModifiedCallApiGatewayRestApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Call External APIGW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;api&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mockExternalApi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;stageName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prod&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HttpMethod&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;resultPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.external&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;resultSelector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JsonPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.ResponseBody&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;I could not get &lt;a href="https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_stepfunctions_tasks.CallApiGatewayRestApiEndpoint.html#queryparameters"&gt;queryParameters&lt;/a&gt; to work correctly... it didn't like the resulting object... wasn't worth the trouble for this demo but if you have any tips let me know.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;From there the API step takes the passed in RestAPI and that's it.  &lt;code&gt;resultPath&lt;/code&gt; extends the previous input and places the external API's &lt;code&gt;ResponseBody&lt;/code&gt; in the &lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/input-output-contextobject.html"&gt;StateMachine's context (&lt;code&gt;$&lt;/code&gt;)&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interacting-with-dynamodb"&gt;
  &lt;/a&gt;
  Interacting with DynamoDB
&lt;/h2&gt;

&lt;p&gt;Next we make the DynamoDB Get call that the lambdalith does.  We can directly interact with DynamoDB without a lambda by using the &lt;a href="https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_stepfunctions_tasks-readme.html#getitem"&gt;&lt;code&gt;DynamoGetItem&lt;/code&gt;&lt;/a&gt; construct.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dynamoGet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DynamoGetItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Get Internal User&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DynamoAttributeValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;JsonPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.external.user.userId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;table&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;resultPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.internal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It uses the context provided by the external call &lt;code&gt;$.external.user.userId&lt;/code&gt; to do the lookup and puts the result in the context's &lt;code&gt;internal&lt;/code&gt; key.&lt;/p&gt;

&lt;p&gt;If you were to sniff out the context at this point it'd look something like this (if DynamoDB already had the item*):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"external"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"user"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"userId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"EXTERNAL#asdf"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Matt Martz"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"internal"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"Item"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"PK"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"EXTERNAL#asdf"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Matt Martz"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#choices"&gt;
  &lt;/a&gt;
  Choices
&lt;/h2&gt;

&lt;p&gt;Before we can implement the Choice (if/switch statement) we need to define the destinations for those situations.  We're going to use 3 types of results... Pass, DynamoDB PutItem and DynamoDB UpdateItem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pass"&gt;
  &lt;/a&gt;
  Pass
&lt;/h3&gt;

&lt;p&gt;There are 4 end cases for the API... No Changes, Locked, Inserted, and Updated.  All of the Pass steps look very similar and they all respond in the same general format:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userWasLocked&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Pass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;User Was Locked&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JsonPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.external.user.userId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JsonPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.internal.Item.name.S&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JsonPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.internal.Item.status.S&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;userLocked&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;nameChanged&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;inserted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#dynamodb-writes"&gt;
  &lt;/a&gt;
  DynamoDB Writes
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_stepfunctions_tasks-readme.html#putitem"&gt;&lt;code&gt;DynamoPutItem&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_stepfunctions_tasks-readme.html#updateitem"&gt;DynamoUpdateItem&lt;/a&gt; Constructs follow very closely to what you'd do in the lambda code using the DocumentClient.  The &lt;code&gt;aws-stepfunctions-tasks&lt;/code&gt; module also exposes a nice helper function to convert into the DynamoDB JSON format.  Below is the PutItem while the UpdateItem follows a similar pattern.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dynamoInsert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DynamoPutItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Add Internal User&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DynamoAttributeValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;JsonPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.external.user.userId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DynamoAttributeValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;JsonPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.external.user.name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DynamoAttributeValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ACTIVE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;history&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DynamoAttributeValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromMap&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;JsonPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.external.user.name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)]:&lt;/span&gt;
        &lt;span class="nx"&gt;DynamoAttributeValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nx"&gt;JsonPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$$.State.EnteredTime&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;table&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;resultPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.inserted&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-choice"&gt;
  &lt;/a&gt;
  The Choice
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_stepfunctions.Choice.html"&gt;Choice&lt;/a&gt; Construct decides which steps are executed based on &lt;a href="https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_stepfunctions.Condition.html"&gt;Conditions&lt;/a&gt;.  There are a lot of helper methods in the Condition class.  In this case we use &lt;code&gt;isNotPresent&lt;/code&gt;, &lt;code&gt;not&lt;/code&gt;, and &lt;code&gt;stringEquals&lt;/code&gt;.  This routes the State Machine to the right step based on the condition logic provided.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isUserLocked&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;User Locked?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;when&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Condition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isNotPresent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.internal.Item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;dynamoInsert&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;when&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;Condition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.internal.Item.name.S&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.external.user.name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;userExists&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;when&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;Condition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;Condition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.internal.Item.name.S&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.external.user.name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;dynamoUpdate&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;when&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;Condition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$.internal.Item.status.S&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;LOCKED&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;userWasLocked&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;otherwise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userExists&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-statemachine"&gt;
  &lt;/a&gt;
  The StateMachine
&lt;/h2&gt;

&lt;p&gt;To define the state machine itself, you first connect the steps together by chaining them with their &lt;code&gt;.next&lt;/code&gt; methods and then passing them into the StateMachine construct.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;definition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pass&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callExternal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dynamoGet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isUserLocked&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;dynamoInsert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userInserted&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;dynamoUpdate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userWasUpdated&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logGroup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;LogGroup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BlogLambdaStepLogs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;removalPolicy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RemovalPolicy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DESTROY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;retention&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RetentionDays&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ONE_DAY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stateMachine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;StateMachine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`BlogLambdaStep`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;definition&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;stateMachineType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;StateMachineType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;EXPRESS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;logs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;logGroup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;LogLevel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ALL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;grantReadWriteData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stateMachine&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here it's important to also make sure the state machine has Read/Write access to DynamoDB using the table's &lt;code&gt;grantReadWriteData&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;🚨For Debugging it's useful to explicitly set the LogGroup for the StateMachine and set the LogLevel to ALL. 🚨&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-api-gateway-to-invoke-the-statemachine"&gt;
  &lt;/a&gt;
  Getting API Gateway to Invoke the StateMachine
&lt;/h2&gt;

&lt;p&gt;Finally the last step is to actually invoke the StateMachine using an API Gateway Integration.  To do this we first need to provide a role for the API to be able to &lt;code&gt;StartSyncExecution&lt;/code&gt; for the stateMachine:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;credentialsRole&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Role&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;getRole&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;assumedBy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ServicePrincipal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apigateway.amazonaws.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;credentialsRole&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attachInlinePolicy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Policy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;getPolicy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;statements&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PolicyStatement&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;states:StartSyncExecution&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;effect&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Effect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ALLOW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;stateMachine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stateMachineArn&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then we use that credentialsRole in the AwsIntegration.  We also have to do some &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html"&gt;Request and Response Mapping&lt;/a&gt; to make sure the API path and query parameters make it into the input, and the response only includes the payload we want to get to the user.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stepApiResource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addResource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;step&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;stepApiResource&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addResource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;basic&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addResource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{userId}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AwsIntegration&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;states&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;StartSyncExecution&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;integrationHttpMethod&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;credentialsRole&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;integrationResponses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;200&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;responseTemplates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`#set ($parsedPayload = $util.parseJson($input.json('$.output')))
$parsedPayload`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;requestTemplates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`{
            "input": "{\\"userId\\": \\"$util.escapeJavaScript($input.params('userId'))\\", \\"name\\": \\"$util.escapeJavaScript($input.params('querystring').params('name'))\\"}",
            "stateMachineArn": "&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;stateMachine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stateMachineArn&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"
            }`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;methodResponses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;200&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-functionbacked-apis"&gt;
  &lt;/a&gt;
  Step Function-backed APIs?
&lt;/h3&gt;

&lt;p&gt;But what about &lt;a href="https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_apigateway-readme.html#aws-stepfunctions-backed-apis"&gt;API Gateway's AWS Step Functions-backed APIs?&lt;/a&gt;.  That's definitely useful but is similar to the &lt;code&gt;LambdaRestApi&lt;/code&gt; construct in that it proxies ALL requests to the StepFunction.  You can (theoretically) still add endpoints to it but if you want to add a different Step Function then you still have to go through an AwsIntegration anyways OR integrate the two StepFunctions together, but then you're tightly coupled 😢.  In this case we were adding a Step Function to an existing API so that wasn't an option.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#comparing-the-api-calls"&gt;
  &lt;/a&gt;
  Comparing the API calls
&lt;/h1&gt;

&lt;p&gt;When the Stack is deployed we get back the two RestAPIs back:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Outputs:
BlogLambdaToStepfunctionsStack.BlogLambdaSFAPIEndpointC31D91D6 &lt;span class="o"&gt;=&lt;/span&gt; https://axg9uz4vxb.execute-api.us-east-1.amazonaws.com/prod/
BlogLambdaToStepfunctionsStack.MockExternalAPIEndpointCFF6F3A1 &lt;span class="o"&gt;=&lt;/span&gt; https://ab1bk91hb3.execute-api.us-east-1.amazonaws.com/prod/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example, I can call the external API that both the Lambda-lith and Step Functions use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl https://ab1bk91hb3.execute-api.us-east-1.amazonaws.com/prod/asdf &lt;span class="nt"&gt;-w&lt;/span&gt; &lt;span class="s1"&gt;'\nTotal: %{time_total}s\n'&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"userId"&lt;/span&gt;:&lt;span class="s2"&gt;"EXTERNAL#asdf"&lt;/span&gt;,&lt;span class="s2"&gt;"name"&lt;/span&gt;:&lt;span class="s2"&gt;"Victor Roob"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
Total: 0.081028s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If I call the Lambda-lith with &lt;code&gt;/asdf&lt;/code&gt; you get&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl https://axg9uz4vxb.execute-api.us-east-1.amazonaws.com/prod/big/asdf &lt;span class="nt"&gt;-w&lt;/span&gt; &lt;span class="s1"&gt;'\nTotal: %{time_total}s\n'&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;:&lt;span class="s2"&gt;"EXTERNAL#asdf"&lt;/span&gt;,&lt;span class="s2"&gt;"name"&lt;/span&gt;:&lt;span class="s2"&gt;"Troy Hammes"&lt;/span&gt;,&lt;span class="s2"&gt;"status"&lt;/span&gt;:&lt;span class="s2"&gt;"ACTIVE"&lt;/span&gt;,&lt;span class="s2"&gt;"userLocked"&lt;/span&gt;:false,&lt;span class="s2"&gt;"nameChanged"&lt;/span&gt;:true,&lt;span class="s2"&gt;"inserted"&lt;/span&gt;:false&lt;span class="o"&gt;}&lt;/span&gt;
Total: 1.473287s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which takes 1.5s because of the cold start time of the lambda!  Running it again you get:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl https://axg9uz4vxb.execute-api.us-east-1.amazonaws.com/prod/big/asdf &lt;span class="nt"&gt;-w&lt;/span&gt; &lt;span class="s1"&gt;'\nTotal: %{time_total}s\n'&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;:&lt;span class="s2"&gt;"EXTERNAL#asdf"&lt;/span&gt;,&lt;span class="s2"&gt;"name"&lt;/span&gt;:&lt;span class="s2"&gt;"Grady McGlynn"&lt;/span&gt;,&lt;span class="s2"&gt;"status"&lt;/span&gt;:&lt;span class="s2"&gt;"ACTIVE"&lt;/span&gt;,&lt;span class="s2"&gt;"userLocked"&lt;/span&gt;:false,&lt;span class="s2"&gt;"nameChanged"&lt;/span&gt;:true,&lt;span class="s2"&gt;"inserted"&lt;/span&gt;:false&lt;span class="o"&gt;}&lt;/span&gt;
Total: 0.223742s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which very quickly drops down to 0.2 seconds!&lt;/p&gt;

&lt;p&gt;The step-function, on the other hand, &lt;strong&gt;doesn't have cold start times!&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl https://axg9uz4vxb.execute-api.us-east-1.amazonaws.com/prod/step/basic/qwerty &lt;span class="nt"&gt;-w&lt;/span&gt; &lt;span class="s1"&gt;'\nTotal: %{time_total}s\n'&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"status"&lt;/span&gt;:&lt;span class="s2"&gt;"ACTIVE"&lt;/span&gt;,&lt;span class="s2"&gt;"userLocked"&lt;/span&gt;:false,&lt;span class="s2"&gt;"nameChanged"&lt;/span&gt;:false,&lt;span class="s2"&gt;"inserted"&lt;/span&gt;:true,&lt;span class="s2"&gt;"name"&lt;/span&gt;:&lt;span class="s2"&gt;"Sheldon Pouros DDS"&lt;/span&gt;,&lt;span class="s2"&gt;"id"&lt;/span&gt;:&lt;span class="s2"&gt;"EXTERNAL#qwerty"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
Total: 0.254265s
&lt;span class="nv"&gt;$ &lt;/span&gt;curl https://axg9uz4vxb.execute-api.us-east-1.amazonaws.com/prod/step/basic/qwerty &lt;span class="nt"&gt;-w&lt;/span&gt; &lt;span class="s1"&gt;'\nTotal: %{time_total}s\n'&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"userLocked"&lt;/span&gt;:false,&lt;span class="s2"&gt;"nameChanged"&lt;/span&gt;:true,&lt;span class="s2"&gt;"inserted"&lt;/span&gt;:false,&lt;span class="s2"&gt;"name"&lt;/span&gt;:&lt;span class="s2"&gt;"Randolph Padberg"&lt;/span&gt;,&lt;span class="s2"&gt;"id"&lt;/span&gt;:&lt;span class="s2"&gt;"EXTERNAL#qwerty"&lt;/span&gt;,&lt;span class="s2"&gt;"status"&lt;/span&gt;:&lt;span class="s2"&gt;"ACTIVE"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
Total: 0.256351s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's FAST!  The API Responses are also equivalent and if we check DynamoDB we get the same behavior.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h1&gt;

&lt;p&gt;There's definitely a learning curve associated with configuring step functions because of the JSONPath Expressions / VTL required to get the steps working together correctly.  Steps themselves aren't reusable but if you pair those with smart use of existing functionality (existing or smaller/reusable Lambdas) you can get a lot of benefit.&lt;/p&gt;

&lt;p&gt;The tooling has gotten a lot better, and the &lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/workflow-studio.html"&gt;Workflow Studio&lt;/a&gt; and &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/04/aws-step-functions-adds-new-data-flow-simulator-for-modelling-input-and-output-processing/"&gt;Data Flow Simulator&lt;/a&gt; both made it much easier to troubleshoot.&lt;/p&gt;

&lt;p&gt;It took slightly more configuration (largely Infrastructure as Code) to setup the Step Function vs just having a large lambda, but by shifting the logic to the State Machine (and therefore managed AWS Services) you're reducing your code ownership.&lt;/p&gt;

&lt;p&gt;Steps can't be shared, but you can easily create your own constructs for frequently used AWS Service interactions that include customized JSONPath expressions for your/your organizations needs.&lt;/p&gt;

&lt;p&gt;I definitely see a lot of promise here.  What observations have you had related to step functions?  Comment below or hit me up on &lt;a href="https://twitter.com/martzcodes"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Create an AWS IAM account to deploy our applications with ASP.NET</title>
      <author>Daniel Gomez Jaramillo</author>
      <pubDate>Fri, 14 Jan 2022 13:26:39 +0000</pubDate>
      <link>https://dev.to/esdanielgomez/create-an-aws-iam-account-to-deploy-our-applications-with-aspnet-3bbd</link>
      <guid>https://dev.to/esdanielgomez/create-an-aws-iam-account-to-deploy-our-applications-with-aspnet-3bbd</guid>
      <description>&lt;p&gt;Amazon Web Services, also known as AWS, is a suite of cloud computing tools and services from Amazon. In this first article, our goal will be to create an IAM (AWS Identity and Access Management) account, focused on deploying web applications ASP.NET. In this sense, this will be the process: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get an AWS Free Tier account.&lt;/li&gt;
&lt;li&gt;Set up an IAM account.&lt;/li&gt;
&lt;li&gt;Set policies for a given user in IAM.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-sign-up-for-an-aws-free-tier-account"&gt;
  &lt;/a&gt;
  1. Sign up for an AWS Free Tier account
&lt;/h2&gt;

&lt;p&gt;AWS has a free tier to test and consume services for 12 months. At the following address we can make the corresponding registration: &lt;a href="https://aws.amazon.com/free"&gt;aws.amazon.com/free&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is a fairly simple process, however, we must bear in mind that we must provide the data of our credit / debit card to activate it.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-set-up-an-iam-account"&gt;
  &lt;/a&gt;
  2. Set up an IAM account
&lt;/h2&gt;

&lt;p&gt;AWS &lt;em&gt;Identity and Access Management&lt;/em&gt; (IAM) provides fine-grained access control across AWS. With IAM, we can specify who can access which services and resources, and under what conditions. With IAM policies, we can also manage permissions for other users and systems we have in place to ensure least-privilege permissions.&lt;/p&gt;

&lt;p&gt;All right, assuming we've already created a root account, or if we already have one, when you sign in, you'll see the AWS console:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3aB7M5ht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qwxj3f845iqg6z684e3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3aB7M5ht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qwxj3f845iqg6z684e3.png" alt="" width="880" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When entering this IAM service, we will go to the Users section within the options menu and select Add User. The goal is to create a user, which will be used to associate the AWS services to be used, as it is not recommended to provide our root user access privileges. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X2Yf2W6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3vk2g1orymii71s3t87.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X2Yf2W6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3vk2g1orymii71s3t87.png" alt="" width="880" height="365"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The form to add a new user will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vIqtBxqT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o66e32s3wgwf3lsiapgq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vIqtBxqT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o66e32s3wgwf3lsiapgq.png" alt="" width="874" height="518"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Once you are done creating the new IAM user, you need to download the credentials. These can be used later to perform an AWS configuration from Visual Studio for example. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--odDf_3s5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/put010of4ls7pwvqdp26.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--odDf_3s5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/put010of4ls7pwvqdp26.png" alt="" width="481" height="106"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: It is very important to keep this CSV file in a safe place, as the access credentials are located there. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-set-user-policies"&gt;
  &lt;/a&gt;
  3. Set user policies
&lt;/h2&gt;

&lt;p&gt;Depending on our purpose, we may provide permissions to access and use AWS services for our users. Suppose that in this case we want to deploy our applications with ASP.NET Core from Visual Studio to AWS, for this our new IAM user needs to be able to access certain AWS services. In this case, we will address the user in question within IAM on AWS and select the option |Add inline policy|. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ra1MLeha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5w6w00f7ch8nrhpjpf5g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ra1MLeha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5w6w00f7ch8nrhpjpf5g.png" alt="" width="757" height="134"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, we will perform this process for each of the following services, which will be useful to be able to deploy our web applications ASP.NET:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Elastic Beanstalk&lt;/li&gt;
&lt;li&gt;EC2&lt;/li&gt;
&lt;li&gt;S3&lt;/li&gt;
&lt;li&gt;CloudFormation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qlf4k90p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vl1h4b5ck84jfy9kfxyo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qlf4k90p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vl1h4b5ck84jfy9kfxyo.png" alt="" width="880" height="498"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After adding each of the services, we will assign a name for this policy and save it. In the end we will have something like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKs9x8JX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28njfw2xm8ga3hw3ywyi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKs9x8JX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28njfw2xm8ga3hw3ywyi.png" alt="" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Thanks for reading!&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;With this process, our IAM will be created, and policies will be in place. In future articles we will review how to access AWS from Visual Studio 2019 thanks to this configuration. &lt;/p&gt;

&lt;p&gt;If you have any questions or ideas in mind, it will be a pleasure to be able to be in communication and together exchange knowledge with each other.&lt;/p&gt;

&lt;p&gt;See you at &lt;a href="https://twitter.com/esDanielGomez"&gt;Twitter&lt;/a&gt;! Or if you like you can also write to me by other means: &lt;a href="https://esdanielgomez.com"&gt;esDanielGomez.com&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>aws</category>
      <category>dotnet</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Get the values from the "GET" parameters of URL Using JavaScript</title>
      <author>Shaswat Raj</author>
      <pubDate>Fri, 14 Jan 2022 13:19:45 +0000</pubDate>
      <link>https://dev.to/sh20raj/get-the-values-from-the-get-parameters-of-url-using-javascript-p2j</link>
      <guid>https://dev.to/sh20raj/get-the-values-from-the-get-parameters-of-url-using-javascript-p2j</guid>
      <description>&lt;p&gt;If you want to Use JavaScript by Default feature &lt;br&gt;
Visit MDN :- &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams"&gt;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like we have URL &lt;code&gt;http://www.example.com/t.html?a=1&amp;amp;b=3&amp;amp;c=m&lt;/code&gt;&lt;br&gt;
and we want to get the value assigned to &lt;code&gt;a&lt;/code&gt; i.e. &lt;code&gt;1&lt;/code&gt; then when we will call &lt;code&gt;getParameterByName('a')&lt;/code&gt; that will return &lt;code&gt;1&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getParameterByName(name, url = window.location.href) {
    name = name.replace(/[\[\]]/g, '\\$&amp;amp;');
    var regex = new RegExp('[?&amp;amp;]' + name + '(=([^&amp;amp;#]*)|&amp;amp;|#|$)'),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#alternative-inbuilt-javascript-function"&gt;
  &lt;/a&gt;
  Alternative Inbuilt JavaScript Function
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var url_string = "http://www.example.com/t.html?a=1&amp;amp;b=3&amp;amp;c=m2-m3-m4-m5"; //window.location.href
var url = new URL(url_string);
var c = url.searchParams.get("c");
console.log(c);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#or"&gt;
  &lt;/a&gt;
  or
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getparam(param,url){
if(!url) url = window.location.href;
let urlParams = new URL(url);
return urlParams.searchParams.get(param);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#minified-and-fastest-version-of-the-function"&gt;
  &lt;/a&gt;
  Minified and Fastest Version of the Function
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getparam(a,e){return e||(e=window.location.href),new URL(e).searchParams.get(a)}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>tricks</category>
    </item>
    <item>
      <title>Moving to Germany</title>
      <author>Santosh Yadav</author>
      <pubDate>Fri, 14 Jan 2022 13:00:26 +0000</pubDate>
      <link>https://dev.to/santoshyadav198613/moving-to-germany-4no9</link>
      <guid>https://dev.to/santoshyadav198613/moving-to-germany-4no9</guid>
      <description>&lt;p&gt;If you follow me, you know I have worked as a consultant for the last year. I have decided to take the next step in my career and move to Hamburg this week.&lt;/p&gt;

&lt;p&gt;It was a difficult choice, and I wanted to stay in india and grow with the community; the Indian tech community will always have a special place in my heart. I became GDE; you all voted me to be the First GitHub star from India and gave me lots of love.&lt;/p&gt;

&lt;p&gt;Some personal and professional decisions led to this.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Better community outreach: Being in Europe will give me access to a broad community, as the timezone in india sometimes affects the participation in many conferences and meetups.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;My future ambitions: It is not a secret that I want to work as a Developer Advocate one day. Last year, I got a few calls, but many discussions due to salary and location expectations didn't go ahead.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will not miss the Indian community at all, I will keep rooting for you all, and if you need any help from me, I am just a DM away. I was lucky to meet a few of you before moving. &lt;/p&gt;

&lt;p&gt;Six years ago, I came to Pune and got everything I came looking for in this City: a better life for my family, money, and peaceful life. Wish us that we get the same thing in a new country as we start a new chapter of our life.&lt;/p&gt;

</description>
      <category>career</category>
    </item>
    <item>
      <title>How to Create a Parking Space Finder App?</title>
      <author>Christine</author>
      <pubDate>Fri, 14 Jan 2022 12:57:21 +0000</pubDate>
      <link>https://dev.to/christinek989/how-to-create-a-parking-space-finder-app-4bf7</link>
      <guid>https://dev.to/christinek989/how-to-create-a-parking-space-finder-app-4bf7</guid>
      <description>&lt;p&gt;Around 95% of American households own a car, the &lt;a href="https://static.america.gov/uploads/sites/8/2016/04/You-Asked-Series_Does-Everyone-in-America-Own-a-Car_English_Lo-Res_508.pdf"&gt;Embassy of the United States of America&lt;/a&gt; says. In San Marino, the number of &lt;a href="https://www.titlemax.com/discovery-center/planes-trains-and-automobiles/u-s-cities-with-the-highest-and-lowest-vehicle-ownership/"&gt;cars per 1000 people is 1263&lt;/a&gt;. Estimates say the number of passenger cars worldwide is over 1 billion. No wonder traffic congestion has become a top problem both for the drivers and city administrations. In Moscow only, the average driver spends 210 hours a year waiting in traffic. &lt;br&gt;
Solution? Solutions are many like improving cycling infrastructure or building &lt;a href="https://cloudblogs.microsoft.com/industry-blog/automotive/2020/02/04/6-smart-mobility-solutions-that-are-helping-to-reduce-traffic-congestion/"&gt;connected infrastructure&lt;/a&gt;. While these are yet to proliferate in the future, parking space finder apps are an easier and more accessible way to solve the problem.&lt;br&gt;
If you are an entrepreneur and think of making money out of apps, parking space finder apps can be a great way of stepping into the market. How to create a parking space finder app? Before you get an answer to this question, you need to study the issue in depth. Sit comfortably and give yourself time to read this article. We will take you through a step by step process and help you build an app that is so much needed today.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-parking-owners-need-a-parking-finder-app"&gt;
  &lt;/a&gt;
  Why Parking Owners Need a Parking Finder App?
&lt;/h2&gt;

&lt;p&gt;Efficiency is on top of the list when it comes to parking space finder apps. If you manage to find a parking space today, your first reaction is “I did it!” You feel like a hero. &lt;br&gt;
But the fact is that not all parking lots are full. In fact, many drivers use only on-street parking lots. But there are also off-street and indoor parking lots that drivers are not even aware of or don't take the trouble to travel believing they won't find a space anyway. Having an app solves this problem as drivers can book a spot and make sure that they will have a space.&lt;br&gt;
Mobile apps also reduce the amount of work for the parking staff. E.g., inspectors can check license plates by using a smartphone camera if the mobile app has a feature for parking inspectors. They can then issue an electronic ticket in case of a violation. Parking staff can handle more work in a day with mobile apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-parking-finder-mobile-app-work"&gt;
  &lt;/a&gt;
  How Does a Parking Finder Mobile App Work?
&lt;/h2&gt;

&lt;p&gt;Now let's get to the nuts and bolts of how things are done.&lt;br&gt;
The app locates the users and suggests spaces available in nearby parking lots. As simple as that. But how does that work in practice? There are some steps to follow. These are the six steps:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--akLTbYck--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a06nkmgg0tivfbrdd02y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--akLTbYck--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a06nkmgg0tivfbrdd02y.png" alt="Image description" width="880" height="220"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Searching:&lt;/strong&gt; first, the driver needs to enter the vehicle plate number and search for a parking space in the nearby area.&lt;br&gt;
&lt;strong&gt;Comparing:&lt;/strong&gt; they can compare the availability and charges and decide which one is the best fit according to price and distance or both of them.&lt;br&gt;
&lt;strong&gt;Booking:&lt;/strong&gt; Once they decide where to park, they need to specify the time and date and book a spot. They will be given a unique code after they book a space.&lt;br&gt;
&lt;strong&gt;Paying:&lt;/strong&gt; The driver needs to make a payment. Normally, payments are done online.&lt;br&gt;
&lt;strong&gt;Driving:&lt;/strong&gt; When they reach the parking lot, the app will guide them to their space through navigation.&lt;br&gt;
&lt;strong&gt;Parking:&lt;/strong&gt; finally, the drivers get their spots and park their cars.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-parking-finder-apps-make-money"&gt;
  &lt;/a&gt;
  How Do Parking Finder Apps Make Money?
&lt;/h2&gt;

&lt;p&gt;And, of course, the big issue. How do parking finder apps make money? At this age of apps when there are even &lt;a href="https://addevice.io/blog/how-to-make-a-mobile-wallet-app/"&gt;mobile wallet apps&lt;/a&gt; and &lt;a href="https://addevice.io/blog/how-do-free-apps-make-money-best-strategies-for-2020/"&gt;free apps that make money&lt;/a&gt;, it is no wonder that parking finder apps generate revenue. Below are the main sources of revenue for parking finder apps.&lt;br&gt;
&lt;strong&gt;Transaction fee&lt;/strong&gt;&lt;br&gt;
The obvious answer is that app owners take a commission on transactions. When a customer makes a payment, the app charges a portion as a transaction fee.&lt;br&gt;
But that is not the whole story.&lt;br&gt;
&lt;strong&gt;Premium listings&lt;/strong&gt;&lt;br&gt;
Parking space finder app owners can also charge parking lot owners. This is done when lot owners want to get a priority in selling their space.&lt;br&gt;
The parking space finder app owners may also offer premium membership to drivers for priority access to parking lots.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#some-tips-to-follow"&gt;
  &lt;/a&gt;
  Some Tips to Follow
&lt;/h3&gt;

&lt;p&gt;Needless to say that your app needs to be user-friendly and that you should research the market well before your product goes afloat. But here are some small tips that will help you add value.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Show details like photos, the cheapest time to park, or increase of charges;&lt;/li&gt;
&lt;li&gt;Include additional information like nearby restaurants, stores, gas stations, car washing services;&lt;/li&gt;
&lt;li&gt;Give the option to book in advance or on the go;&lt;/li&gt;
&lt;li&gt;Include information about charges and rates.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#recommended-features-for-your-car-parking-app-development"&gt;
  &lt;/a&gt;
  Recommended Features for Your Car Parking App Development
&lt;/h3&gt;

&lt;p&gt;The car parking app has 3 main interfaces:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User interface&lt;/li&gt;
&lt;li&gt;Admin interface&lt;/li&gt;
&lt;li&gt;Parking owner interface
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c8Ik7fuJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6u2nmte1amp5dqocclx4.jpg" alt="Image description" width="504" height="521"&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#groups-of-parking-space-finder-apps"&gt;
  &lt;/a&gt;
  Groups of Parking Space Finder Apps
&lt;/h2&gt;

&lt;p&gt;Parking apps can be grouped according to these categories:&lt;br&gt;
&lt;strong&gt;By available spot&lt;/strong&gt;&lt;br&gt;
Most of the parking space finder apps are integrated with maps like Google maps or use GPS features to define the free slot in real-time. If your app has a GPS feature, it will update a valid spot every minute.&lt;br&gt;
Apps can also suggest entering the location code which is visible on the street sign. The codes are valid for parking within a specific area.&lt;br&gt;
You can integrate your app for on-street parking or off-street parking.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;On-Street Parking&lt;/strong&gt; – Some apps allow drivers to leave their car somewhere temporarily alongside the footpath or anywhere on the street.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Off-Street Parking&lt;/strong&gt; – These include garages, private areas, or driveways that can be both indoors and outdoors.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;By parking time&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Parking on the fly&lt;/strong&gt; – a driver may find a space right away.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Parking in advance&lt;/strong&gt; – An on-demand parking booking application may permit users to book a spot for two weeks in advance or more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;By geo-location&lt;/strong&gt;&lt;br&gt;
Parking apps may cover not only one area but a whole country. For example, Parkopedia covers up to 70 million parking spaces in 15000 cities. Drivers give their current location or address in order to locate available parking spaces. They can also get directions to the parking space.&lt;br&gt;
&lt;strong&gt;By payment method&lt;/strong&gt;&lt;br&gt;
Normally there is no charge for downloading parking apps but they contain integrated payment services. Among the most used methods are Apple Pay, Google Pay, PayPal, credit cards. Drivers can pay both online and in cash. Some apps suggest a prepayment option. Others give an option for payment by cash.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-cost-to-develop-a-parking-app"&gt;
  &lt;/a&gt;
  The Cost to Develop a Parking App
&lt;/h3&gt;

&lt;p&gt;Read also: &lt;a href="https://addevice.io/blog/how-much-does-it-cost-to-build-a-mobile-app/"&gt;How much does it cost to make an app for your business in 2021?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that you have a basic idea about why and how to create a parking space finder app, it's time to talk about your budget.&lt;br&gt;
The cost will depend on several factors like the features and functionalities, the design, technology stack, etc. However, the most determining factor is the location of your developers. For example, the hourly rate for software engineers in the USA and Canada ranges from $100 whereas in Eastern Europe it may be as low as $25-$50.&lt;br&gt;
That's why your app may cost you $10,000 but it may also cost you 5 times more.&lt;br&gt;
If you need a precise estimate for your app cost developed by a software development company in Eastern Europe, feel free to &lt;a href="https://addevice.io/contacts/"&gt;contact us&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So, why do you need a parking space finder app? Don’t laugh but chances are that you may generate 6-digit revenue. A UK-based company My Parking Space, for example, generates $12.7M in revenue. Parkpnp, an Ireland-based owner of a parking space, generates annual revenue of $1M.&lt;br&gt;
If you want more figures for a small-scale or medium-scale app, here is a &lt;a href="https://www.parkingboxx.com/parking-revenue-calculator-roi"&gt;calculator to go&lt;/a&gt;.&lt;br&gt;
If you would like a future like My Parking Space or Parkpnp have,  &lt;a href="https://addevice.io/contacts/"&gt;drop us a line&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>parking</category>
      <category>mobile</category>
      <category>programming</category>
      <category>app</category>
    </item>
  </channel>
</rss>
