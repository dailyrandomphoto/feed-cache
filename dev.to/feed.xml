<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>15 Trending projects on GitHub for web developers</title>
      <author>Hawaii</author>
      <pubDate>Wed, 13 Oct 2021 06:51:38 +0000</pubDate>
      <link>https://dev.to/huua/15-trending-projects-on-github-for-web-developers-3e0o</link>
      <guid>https://dev.to/huua/15-trending-projects-on-github-for-web-developers-3e0o</guid>
      <description>&lt;p&gt;Thereâ€™s a good chance youâ€™ve heard ofÂ GitHubÂ if youâ€™re in the tech space, even if youâ€™re not a developer by trade. You might have even stumbled across a GitHub repository or two when learning about software or web development.&lt;/p&gt;
&lt;p&gt;Still, GitHub can seem perplexing if youâ€™ve never used it. Is it a cloud storage site? A social networking site for programmers? A code-sharing site? As it turns out, the answer to all of these is yes, and more.Â &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/15-trending-projects-on-github-for-web-developers/&amp;amp;ved=2ahUKEwi7ho2M5sbzAhWIzDgGHbvgBM0QFnoECAUQBQ&amp;amp;usg=AOvVaw1tzvt3qcNHOwLUl5Faka7s"&gt;15 Trending projects on GitHub for web developers&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>10 Magical PHP Tips &amp; Tricks</title>
      <author>Hawaii</author>
      <pubDate>Wed, 13 Oct 2021 06:31:53 +0000</pubDate>
      <link>https://dev.to/huua/10-magical-php-tips-tricks-296g</link>
      <guid>https://dev.to/huua/10-magical-php-tips-tricks-296g</guid>
      <description>&lt;p&gt;PHP programming has climbed rapidly since its humble beginnings in 1995. Since then, PHP has become the most popular programming language for Web applications. Many popular websites are powered by PHP, and an overwhelming majority of scripts and Web projects are built with the popular language.&lt;/p&gt;
&lt;p&gt;Because of PHPâ€™s huge popularity, it has become almost impossible for Web developers not to have at least a working knowledge of PHP. This tutorial is aimed at people who are just past the beginning stages of learning PHP and are ready to roll up their sleeves and get their hands dirty with the language. Listed below are 10 excellent techniques that PHP developers should learn and use every time they program. These tips will speed up proficiency and make the code much more responsive, cleaner and more optimized for performance.Â &lt;/p&gt;

&lt;p&gt;Read More : &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/10-magical-php-tips-tricks/&amp;amp;ved=2ahUKEwjLi93W4cbzAhU-4jgGHS7XCvcQFnoECAYQAQ&amp;amp;usg=AOvVaw1fVqnaHNRSL8dTmlcxHzSr"&gt;10 Magical PHP Tips &amp;amp; TricksÂ &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;



</description>
    </item>
    <item>
      <title>Top 4 Places To Learn Python</title>
      <author>Aditya Priyadarshi</author>
      <pubDate>Wed, 13 Oct 2021 06:08:55 +0000</pubDate>
      <link>https://dev.to/foxy4096/top-4-places-to-learn-python-5ha1</link>
      <guid>https://dev.to/foxy4096/top-4-places-to-learn-python-5ha1</guid>
      <description>&lt;p&gt;In the last post I have shown you how to get started with python and print Hello World.&lt;/p&gt;

&lt;p&gt;But what now ?&lt;/p&gt;

&lt;p&gt;Well we need to know the basic.&lt;/p&gt;

&lt;p&gt;So I have found top 5 sources to learn python.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-w3school"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://www.w3schools.com/python/default.asp"&gt;W3School&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;W3Schools is a freemium educational website for learning coding online. Developed in 1998, its name is derived from the World Wide Web. It is run by Refsnes Data in Norway.&lt;br&gt;
I also started learning about programming from this site&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-python-docs"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://docs.python.org/3/"&gt;Python Docs&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Yes really, the documentation contains everything about python if it is not stated anywhere in other places.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-youtube"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.youtube.com/results?search_query=python+tutorial"&gt;YouTube&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;YouTube contains more than 1000 tutorials about the Python.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-realpython"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://realpython.com/"&gt;RealPython&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;It's a nice website that will help you learn many things about Python. You really should see ðŸ˜‰&lt;/p&gt;

&lt;p&gt;So that was top 4 places to learn python.&lt;br&gt;
Let me know if you also know some websites/sources, I would love to see than&lt;/p&gt;

&lt;p&gt;Till then Bye ðŸ‘‹&lt;br&gt;
and&lt;br&gt;
Peace âœŒ&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>Weekly web development resources #91</title>
      <author>Vincent Will</author>
      <pubDate>Wed, 13 Oct 2021 06:04:36 +0000</pubDate>
      <link>https://dev.to/vincenius/weekly-web-development-resources-91-54n2</link>
      <guid>https://dev.to/vincenius/weekly-web-development-resources-91-54n2</guid>
      <description>

&lt;h2&gt;
  &lt;a href="#redactphoto"&gt;
  &lt;/a&gt;
  &lt;a href="https://redact.photo/"&gt;redact.photo&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://redact.photo/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gXuJVZQH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/91/redact-photo.jpg" alt="redact.photo"&gt;&lt;/a&gt;&lt;br&gt;
A nice tool to censor sensitive information of images online.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#faster-react-apps-with-memoization"&gt;
  &lt;/a&gt;
  &lt;a href="https://blog.px.dev/ui-performance/"&gt;Faster React Apps With Memoization&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://blog.px.dev/ui-performance/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cPriOkzG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/91/ui-performance-hero.jpg" alt="Faster React Apps With Memoization"&gt;&lt;/a&gt;&lt;br&gt;
An article by Nick Lanam on how to debug and fix excessive re-rendering.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#refine"&gt;
  &lt;/a&gt;
  &lt;a href="https://refine.dev/"&gt;Refine&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://refine.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T866dZEA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/91/refine.jpg" alt="Refine"&gt;&lt;/a&gt;&lt;br&gt;
A React-based framework for building data-intensive applications.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#creating-the-perfect-commit-in-git"&gt;
  &lt;/a&gt;
  &lt;a href="https://css-tricks.com/creating-the-perfect-commit-in-git/"&gt;Creating the Perfect Commit in Git&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://css-tricks.com/creating-the-perfect-commit-in-git/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CRf36Sje--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/91/perfect-commit.jpg" alt="Creating the Perfect Commit in Git"&gt;&lt;/a&gt;&lt;br&gt;
The first part of an advanced Git series.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#fette%C2%ADpalette"&gt;
  &lt;/a&gt;
  &lt;a href="https://redact.photo/"&gt;FetteÂ­Palette&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://redact.photo/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C82pcI-6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/91/Fette%25C2%25ADPalette.jpg" alt="FetteÂ­Palette"&gt;&lt;/a&gt;&lt;br&gt;
A JavaScript function that generates color ramps based on a curve.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#atropos"&gt;
  &lt;/a&gt;
  &lt;a href="https://atroposjs.com/"&gt;Atropos&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://atroposjs.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4FLkuv-t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/91/atropos.jpg" alt="Atropos"&gt;&lt;/a&gt;&lt;br&gt;
A JavaScript library to create  touch-friendly 3D parallax hover effects.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#css-gradient-editor"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.cssgradienteditor.com/"&gt;CSS Gradient Editor&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.cssgradienteditor.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IaQjk2Fg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/91/css-gradient-editor.jpg" alt="CSS Gradient Editor"&gt;&lt;/a&gt;&lt;br&gt;
A tool for creating colorful CSS gradient backgrounds and patterns.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tinyjson"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/tinysorcerer/tinyjson"&gt;TinyJson&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/tinysorcerer/tinyjson"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QlUstJAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/91/tinyjson.jpg" alt="TinyJson"&gt;&lt;/a&gt;&lt;br&gt;
An easy state database without dependencies.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#annimay"&gt;
  &lt;/a&gt;
  &lt;a href="https://edumigueis.github.io/Annimay/"&gt;Annimay&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://edumigueis.github.io/Annimay/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YrJg9h-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/91/animay.jpg" alt="Annimay"&gt;&lt;/a&gt;&lt;br&gt;
A collection of pure CSS3 lightweight animations for links, sections, buttons and more.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#fosscord"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/fosscord/fosscord"&gt;Fosscord&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/fosscord/fosscord"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yniSLSyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/91/fosscord.jpg" alt="Fosscord"&gt;&lt;/a&gt;&lt;br&gt;
A free open source selfhostable discord compatible chat, voice and video platform.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-i-built-a-modern-website-in-2021"&gt;
  &lt;/a&gt;
  &lt;a href="https://kentcdodds.com/blog/how-i-built-a-modern-website-in-2021"&gt;How I built a modern website in 2021&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://kentcdodds.com/blog/how-i-built-a-modern-website-in-2021"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x5DdKedk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/91/modern-website.jpg" alt="How I built a modern website in 2021"&gt;&lt;/a&gt;&lt;br&gt;
A good article by Kent C. Dodds on his recent tech stack.&lt;/p&gt;




&lt;p&gt;To see all the weeklies check: &lt;a href="https://wweb.dev/weekly"&gt;wweb.dev/weekly&lt;/a&gt;&lt;/p&gt;

</description>
      <category>weekly</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Create a custom toggle hook in React</title>
      <author>coder4life</author>
      <pubDate>Wed, 13 Oct 2021 05:57:02 +0000</pubDate>
      <link>https://dev.to/coder4_life/create-a-custom-toggle-hook-in-react-k67</link>
      <guid>https://dev.to/coder4_life/create-a-custom-toggle-hook-in-react-k67</guid>
      <description>&lt;p&gt;Here we will create a simple and reuseable toggle hook in React. A toggle hook can be used in many cases hence making it a reuseable hook might make sense in your project. In this example we will take checkbox that uses state in-component and refactor it to use a useToggle hook.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/sZo3Q0PyPS0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>React basics: Looping a list</title>
      <author>Chris Bongers</author>
      <pubDate>Wed, 13 Oct 2021 05:44:43 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/react-basics-looping-a-list-45j4</link>
      <guid>https://dev.to/dailydevtips1/react-basics-looping-a-list-45j4</guid>
      <description>&lt;p&gt;In today's article for React basics, we'll enhance our &lt;a href="https://daily-dev-tips.com/posts/react-basics-creating-our-first-react-app/"&gt;first ever React components&lt;/a&gt; with a list.&lt;/p&gt;

&lt;p&gt;Yesterday we made some static book components like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Book&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Laravel collections&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Book&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ruby for beginners&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Book&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CSS is awesome&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, that quickly becomes a struggle to maintain. So let's have a look at how we could dynamically load these books from a list.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-list-in-react"&gt;
  &lt;/a&gt;
  Creating a list in React
&lt;/h2&gt;

&lt;p&gt;Open up your &lt;code&gt;App.js&lt;/code&gt; and add a list like so above your app declaration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Laravel collections&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ruby for beginners&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CSS is awesome&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To render these elements in our React app, we can leverage the &lt;code&gt;map&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Bookshelf&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Book&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;))}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Bookshelf&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this little piece of code will do the same thing as we had before.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keys-in-react"&gt;
  &lt;/a&gt;
  Keys in React
&lt;/h2&gt;

&lt;p&gt;However, I made one big mistake in the example above.&lt;br&gt;
When we render list items in React as we do above, we should always set a key property.&lt;br&gt;
This key will help React identify which items change or should be removed.&lt;/p&gt;

&lt;p&gt;To add the key, we can use the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Book&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, sometimes we just do not have a key, so what do we do then?&lt;/p&gt;

&lt;p&gt;Well, no worries, React comes with a built-in index we can use as the key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the index is available on the map function to use that as the unique key for each element.&lt;/p&gt;

&lt;p&gt;As usual, you can find this code on &lt;a href="https://github.com/rebelchris/react-basics/tree/list"&gt;GitHub&lt;/a&gt;.&lt;br&gt;
I hope you enjoyed this article about loops in React.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
    </item>
    <item>
      <title>7 Best Tools For Developers - They Can't Live Without It</title>
      <author>Hawaii</author>
      <pubDate>Wed, 13 Oct 2021 05:39:59 +0000</pubDate>
      <link>https://dev.to/huua/7-best-tools-for-developers-they-cant-live-without-it-34fe</link>
      <guid>https://dev.to/huua/7-best-tools-for-developers-they-cant-live-without-it-34fe</guid>
      <description>&lt;p&gt;Â &lt;span&gt;The&lt;/span&gt;&lt;span&gt;Â &lt;/span&gt;&lt;b&gt;best tools for developersÂ &lt;/b&gt;&lt;span&gt;are a priority for them to work. As a developer, he always works with code editors, browsers, terminals, etc. to improve his productivity. VS Code is one of the best editors, every developer would like to work with it. I've also listed the&lt;/span&gt;&lt;span&gt;Â &lt;/span&gt;VS Code extensions for JSÂ &lt;span&gt;that are useful for a developer. And browser extensions are also a great way to improve productivity and I've also listed&lt;/span&gt;&lt;span&gt;Â &lt;/span&gt;&lt;b&gt;Chrome extensions for a developer&lt;/b&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;If you are a junior programmer, this will give you an idea the improve your coding skills, and if you are a senior developer, you are still learn something new from it. Extensions are one theÂ &lt;b&gt;best tools for developers.&lt;/b&gt;&lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;span&gt;Let's see the best tools for developers.&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/7-best-tools-for-developers-they-cant-live-without-it/"&gt;7 Best Tools For Developers - They Can't Live Without It&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>Divtober Day 13: Camouflage</title>
      <author>Alvaro Montoro</author>
      <pubDate>Wed, 13 Oct 2021 05:21:04 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/divtober-day-13-camouflage-jh6</link>
      <guid>https://dev.to/alvaromontoro/divtober-day-13-camouflage-jh6</guid>
      <description>&lt;p&gt;A scrollable cartoon of a chameleon resting on a branch. If you scroll, you'll see some elements "through" the chameleon.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alvaromontoro/embed/eYENBdJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The see-through effect was not done with opacity, but applying a blend mode of multiply.&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>divtober</category>
      <category>css</category>
      <category>showdev</category>
    </item>
    <item>
      <title>5 Time Saving VS Code Setting You Need To Do Right Now</title>
      <author>Hawaii</author>
      <pubDate>Wed, 13 Oct 2021 05:03:06 +0000</pubDate>
      <link>https://dev.to/huua/5-time-saving-vs-code-setting-you-need-to-do-right-now-3fl1</link>
      <guid>https://dev.to/huua/5-time-saving-vs-code-setting-you-need-to-do-right-now-3fl1</guid>
      <description>&lt;p&gt;Â &lt;span&gt;This article is meant for absolute beginners of Visual Studio Code and web development, Others may not find this article useful.&lt;/span&gt;&lt;/p&gt;Â Developing a website in the most popular programming environment, Visual Studio Code, requires a developer to do some repetitive tasks such as saving, refreshing the web page and typing the same code, etc...Â In this article, I would like to introduce you to some tools which will help you to do it more easily.Â &lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://news.google.com/articles/CAIiEKlHt3y19592XxyT8B40nXMqGQgEKhAIACoHCAow7-ynCzDc978DMKOIlgc?hl=en-US&amp;amp;gl=US&amp;amp;ceid=US%3Aen"&gt;5 Time Saving VS Code Setting You Need To Do Right Now&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 41, Inheritance in Python</title>
      <author>Aatmaj</author>
      <pubDate>Wed, 13 Oct 2021 04:58:05 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-41-inheritance-in-python-53la</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-41-inheritance-in-python-53la</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-learn-about-inheritance-in-python"&gt;
  &lt;/a&gt;
  Today we will learn about inheritance in Python
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#inheritance"&gt;
  &lt;/a&gt;
  Inheritance
&lt;/h3&gt;

&lt;p&gt;Inheritance provides &lt;strong&gt;Code Reusability&lt;/strong&gt;. We do not need to write the same piece of code again and again for various subclasses. This increases &lt;strong&gt;Flexibility&lt;/strong&gt; of the code. This means that subclasses can be formed without altering the original classes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The inherited class can use functions and variables of the derived class&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax.
&lt;/h3&gt;

&lt;p&gt;Classes can be inherited by passing the name of the superclass to the brackets &lt;code&gt;class inherited(master)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let us see an example below to demonstrate inheritance in pyuthon&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
 &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
 &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello world"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fun2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fun2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Hello world
5

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#explaination"&gt;
  &lt;/a&gt;
  Explaination
&lt;/h4&gt;

&lt;p&gt;Here, sample() is the masterclass and sasmple2 is the derived class. The derived class sample2 inherits the master class as we pas the  name of the master class into the derived class bracket.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;class sample2():&lt;/code&gt; This syntax will create class &lt;code&gt;sample2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;class sample2(sample)&lt;/code&gt;: This syntax will create a class &lt;code&gt;sample2&lt;/code&gt; and make it inherit the class &lt;code&gt;sample&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once the class &lt;code&gt;sample2&lt;/code&gt; inherits &lt;code&gt;sample&lt;/code&gt;, it can use it's attributes (like here a and b) in it's body. This is why no errors were generated when we used to variables a and b directly in the function &lt;code&gt;fun2&lt;/code&gt;. The values fir a and b were assigned in  the master class (&lt;code&gt;sample2&lt;/code&gt; itself ands need not be assigned again . This is an example of &lt;strong&gt;code reuse&lt;/strong&gt; and &lt;strong&gt;information hiding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The derived class &lt;code&gt;sample2&lt;/code&gt; can also use the functions declared in the master class. This is how the function &lt;code&gt;fun&lt;/code&gt; could be used  and run successfully.&lt;/p&gt;

&lt;p&gt;I hope you do not have any more doubts, if you have, please feel free to post them in the comments below.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#inheritance-of-constructors"&gt;
  &lt;/a&gt;
  Inheritance of constructors.
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Constructors are not inherited by default.&lt;/strong&gt; The example below will make things very clear&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
 &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
 &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello world"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fun2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fun2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Hello world
5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, you would expect the output to be 150 and not 5. But it is not so. This is because of the fact the constructors of the master class are not inherited by the derived classes by default. This means that &lt;code&gt;sample2.__init__&lt;/code&gt; is not the same as &lt;code&gt;sample.__init__&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Why? Well remember In the previous parts we learnt that if we do not provide a constructor to the class, Python provides one default constructor automatically? Something similar happened in this case. We did not provide any constructor to the &lt;code&gt;sample2&lt;/code&gt; class. So python made a default blank constructor in it's place, which had no relation to the master class. &lt;/p&gt;

&lt;p&gt;If we want to add the constructor, we can use the following syntax-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
 &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
 &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello world"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fun2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fun2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the super keyword, we can manage the constructors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exercise&lt;/strong&gt; What is the output of the following program? and why?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
 &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
 &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello world"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
     &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fun2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fun2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Solution-&lt;br&gt;
The output is&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Hello world
5

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is because &lt;code&gt;self.a=100&lt;/code&gt; and &lt;code&gt;self.b=200&lt;/code&gt; should haver been written in place of &lt;code&gt;a=100&lt;/code&gt; and &lt;code&gt;b=200&lt;/code&gt;&lt;/p&gt;




&lt;p&gt;Function overloading in Python&lt;br&gt;
What if two functions have the same name in the master class as well as the derived class? Well the answer is simple the function in the derived class will be considered. &lt;br&gt;
This is know as function overloading.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
 &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
 &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello world"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;150
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we want to use the function in the previous function, then use the super syntax again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
 &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
 &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello world"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mysample2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Hello world
150
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;So friends that was all for today. Thank you and hope you are enjoying....&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>oop</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>7 Amazing Tips While Redesigning Your Website</title>
      <author>Hawaii</author>
      <pubDate>Wed, 13 Oct 2021 04:46:43 +0000</pubDate>
      <link>https://dev.to/huua/7-amazing-tips-while-redesigning-your-website-29dp</link>
      <guid>https://dev.to/huua/7-amazing-tips-while-redesigning-your-website-29dp</guid>
      <description>&lt;p&gt;Redesigning a website may be a stressful, time-consuming, and complex task. Itâ€™s natural if the amount of information you need to know in order to build a new, fresh design repulses you. However, if you take the time to educate yourself and gain hands-on experience, you can avoid making mistakes and achieve your goals. Here are seven golden pointers for redesigning your website to get you started:&lt;/p&gt;
&lt;p&gt;When you consider rebuilding your website, you most likely imagine something huge and powerful. Itâ€™s the ideal opportunity to give your website a bold and dramatic new appearance. However, the world is not what you might assume.Â &lt;/p&gt;

&lt;p&gt;&lt;b&gt;READ More&lt;/b&gt;: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/7-amazing-tips-while-redesigning-your-website/&amp;amp;ved=2ahUKEwjCx8Gc_JjzAhXawzgGHeQLBh4QFnoECAQQBQ&amp;amp;usg=AOvVaw1MCPezHaMcqtc9wW14T5Lx"&gt;7 Amazing Tips While Redesigning Your Website&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Ethical Hacking Roadmap - A Beginners Guide</title>
      <author>Hawaii</author>
      <pubDate>Wed, 13 Oct 2021 04:26:57 +0000</pubDate>
      <link>https://dev.to/huua/ethical-hacking-roadmap-a-beginners-guide-3p3b</link>
      <guid>https://dev.to/huua/ethical-hacking-roadmap-a-beginners-guide-3p3b</guid>
      <description>&lt;h2&gt;&lt;strong&gt;Who is an Ethical Hacker?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;An ethical hacker is a computer network specialist who deals with the security posture of an organization. His job involves eliciting security flaws in the organization he is working for by testing all aspects of the system and its services for any sort of vulnerabilities. The key point to notice is that all this is done with the permission of the owners of the organization and without any malicious intent. An ethical hacker is also known as a white hat hacker and is the stark opposite of a black hat hacker, a.k.a crackers who hack with the sole purpose of bringing about some sort of disruption, or chaos from the vulnerabilities they find.Â &lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/ethical-hacking-roadmap-a-beginners-guide/&amp;amp;ved=2ahUKEwjSy6-98ZvzAhXQxTgGHSS8Bu84ChAWegQIGxAB&amp;amp;usg=AOvVaw3-vFooaWUJypOS-FfvXpjK"&gt;Ethical Hacking Roadmap - A Beginners Guide&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
