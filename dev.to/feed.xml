<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Must Know Trick for all the developers out there</title>
      <author>Mukul Singhal</author>
      <pubDate>Wed, 05 May 2021 20:13:29 +0000</pubDate>
      <link>https://dev.to/mukul_singhal/must-know-trick-for-all-the-developers-out-there-59ie</link>
      <guid>https://dev.to/mukul_singhal/must-know-trick-for-all-the-developers-out-there-59ie</guid>
      <description>&lt;p&gt;Hey All üëã, In this article I will show you a trick that will help all the developers out there.&lt;/p&gt;

&lt;p&gt;Many times we see a GitHub repository and want to work with it or want to add few minor changes to it and see how it works but for this, we clone the repository on our pc and start using it but we can simplify this process with a neat trick. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Just went to the repository you want to use.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/Mukul-Singhal/Flick"&gt;https://github.com/Mukul-Singhal/Flick&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lP3SoYBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620244271221/20r2CDiDs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lP3SoYBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620244271221/20r2CDiDs.png" alt="github.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Put box after the gitHub in the url like this.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://githubbox.com/Mukul-Singhal/Flick"&gt;https://githubbox.com/Mukul-Singhal/Flick&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1LzintTt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620244279598/OvnYyiWkX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1LzintTt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620244279598/OvnYyiWkX.png" alt="gitbox.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Press enter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CDP44aEM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fy15h0tdeouqvvs9qfyn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CDP44aEM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fy15h0tdeouqvvs9qfyn.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voila üòÅ now it opens in the code sandbox and you can use this repository in the codesandbox and make changes in it.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>github</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>React: thoughts from an Angular developer</title>
      <author>Lucas Ota√±o</author>
      <pubDate>Wed, 05 May 2021 19:49:55 +0000</pubDate>
      <link>https://dev.to/cloudx/react-thoughts-from-an-angular-developer-hbb</link>
      <guid>https://dev.to/cloudx/react-thoughts-from-an-angular-developer-hbb</guid>
      <description>&lt;p&gt;After two years working with &lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt; I was assigned to a project where the frontend stack was &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;, &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; and &lt;a href="https://chakra-ui.com/"&gt;Chakra UI&lt;/a&gt;. I started without any prior React experience nor knowledge. After three months in this project I‚Äôve decided to put my thoughts of this technology change into a post.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Disclaimer: this won‚Äôt be a full Angular vs React post, but my thoughts about what I like and don‚Äôt like about React, what I miss from Angular, etc. Also take into consideration that I‚Äôve only been working with React for 3 months.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#from-a-framework-angular-to-a-library-react"&gt;
  &lt;/a&gt;
  From a Framework (Angular) to a Library (React)
&lt;/h1&gt;

&lt;p&gt;This was one of the biggest changes for me, Angular already provides you a way to do things, elements to help with authentication (Guards), endpoints handling (Interceptors), Routing, Pipes, tools (such as the beloved Angular CLI), etc.&lt;br&gt;
As React is just a library, it‚Äôs on you to generate all those things, or to search another external tool or library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-react-most-features-must-be-created-from-scratch"&gt;
  &lt;/a&gt;
  In React most features must be created from scratch
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs suppose that we need to show an alert on our application every time an endpoint returns an error.&lt;br&gt;
In Angular we can just go to the &lt;a href="https://angular.io/cli"&gt;CLI&lt;/a&gt;, create a new Interceptor with the logic of reading the error and calling an alert, then use the interceptor from the app.module and we are ready to go.&lt;br&gt;
On the other hand, React doesn't provide us with built-in magic to do this. We could use &lt;a href="https://redux-saga.js.org/"&gt;Redux-Saga&lt;/a&gt;, create an architecture for it to be reusable, think everything from scratch.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h2&gt;

&lt;p&gt;Since I haven‚Äôt worked with pure React, but with Next.js, I‚Äôm going to compare its &lt;a href="https://nextjs.org/docs/routing/introduction"&gt;routing system&lt;/a&gt; to the &lt;a href="https://angular.io/guide/router"&gt;Angular Router&lt;/a&gt;.&lt;br&gt;
Nextjs handles routing based on the folder structure inside the &lt;em&gt;pages/&lt;/em&gt; directory, this is very easy to learn and doesn't need any configuration at all. For simple projects I look at it as a great advantage.&lt;br&gt;
I consider that the Angular Router is a much more powerful and versatile tool, with it you can handle Lazy Loading as you need, and redirection is much more easy than in Nextjs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#architecture"&gt;
  &lt;/a&gt;
  Architecture
&lt;/h2&gt;

&lt;p&gt;In my case, I don‚Äôt have a lot of experience in development and even though I was able to start several Angular projects by myself and not die trying since it provides you a way to organize directories (even though you can customize it based on your needs). &lt;br&gt;
Oppositely, if I had to create a relatively big application by myself with React in this moment of my career, it would be very painful for me to create something well organized and scalable (now that I‚Äôve worked on a project with a lovely architecture created by very experienced React developers it would be easier for sure).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-after-typescript"&gt;
  &lt;/a&gt;
  Javascript after Typescript
&lt;/h1&gt;

&lt;p&gt;Before I started working with React, I loved &lt;a href="https://www.typescriptlang.org/"&gt;TS&lt;/a&gt; and I thought that it was a must to have within any application. I learned that it isn‚Äôt correct, you can work in a very well organized way by using only javascript and a good Text editor or IDE. Also, if you don‚Äôt use Typescript well, it can become a real pain in the neck.&lt;br&gt;
I don‚Äôt  think Typescript is useless, I still believe that there are many scenarios in which TS can be a real lifesaver (really big projects, or projects with a lot of different entities).&lt;br&gt;
Another thing that I‚Äôve noticed when using React is that I had to learn much javascript, ES6 syntax is a must, also I wasn‚Äôt used to work with &lt;code&gt;.map&lt;/code&gt; or generator functions.  (This can be also because in this project I‚Äôve worked with real javascript lovers) &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#i-really-miss-the-angular-cli"&gt;
  &lt;/a&gt;
  I really miss the Angular CLI
&lt;/h1&gt;

&lt;p&gt;The ability to create any element you need (Module, Component, Service, you name it) in a single prompt command without having misspelling errors in the code is a real time saver, also by using it, you don‚Äôt have to worry about the file structure, which imports you need, etc.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#simpler-files"&gt;
  &lt;/a&gt;
  Simpler files
&lt;/h1&gt;

&lt;p&gt;If you create a new component in Angular, by default it creates three files (and a fourth one if it`s a module) one for the template (HTML), one for styles and the other one to handle all the logic. You can reduce it into one sometimes, but I think that React, by using JSX, handles this in a much more efficient and cleaner way.&lt;br&gt;
Also, by having less files, the project is more maintainable, cleaner and less intimidating to new developers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#learning-curve"&gt;
  &lt;/a&gt;
  Learning curve
&lt;/h1&gt;

&lt;p&gt;I had heard that React‚Äôs learning curve was smaller than Angular‚Äôs, but I didn‚Äôt understand why until I started with React. If you had to create a simple website with few pages, with React it would be very easy and simple as you don‚Äôt need to know a lot of stuff. On the other hand, to do that on angular you‚Äôll have to learn first: Typescript, Routing, Modules, Services, Interceptors, Guards, Pipes, among others things you may need based on your needs.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I still have a lot to learn about both technologies, but now I know that both have pros and cons, different use cases and it is not one or the other. The next time I have to create a new project I‚Äôll surely be doing a deep research and evaluation before choosing between Angular or React (or other frameworks or libraries that I haven‚Äôt tested yet).&lt;br&gt;
I hope this has been in some way helpful for you. May the force be with you.&lt;/p&gt;

</description>
      <category>react</category>
      <category>angular</category>
    </item>
    <item>
      <title>All about web services ,SOAP and REST API, answers to what, why and when of SOAP &amp; REST API web services.</title>
      <author>nshimiye_emmy</author>
      <pubDate>Wed, 05 May 2021 19:47:30 +0000</pubDate>
      <link>https://dev.to/dev_emmy/all-about-web-services-soap-and-rest-api-answers-to-what-why-and-when-of-soap-rest-api-web-services-9jk</link>
      <guid>https://dev.to/dev_emmy/all-about-web-services-soap-and-rest-api-answers-to-what-why-and-when-of-soap-rest-api-web-services-9jk</guid>
      <description>&lt;h3&gt;
  &lt;a href="#a-brief-introduction-about-apis"&gt;
  &lt;/a&gt;
  A brief introduction about API's:
&lt;/h3&gt;

&lt;p&gt;API is known as the Application Programming Interface and is offered by both the client and the server. In the client world, this is offered by the browser whereas in the server world it's what is provided by the web service which can either be SOAP or REST.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-web-services"&gt;
  &lt;/a&gt;
  What are web services:
&lt;/h3&gt;

&lt;p&gt;This is a broad term that tells us how the communication between two different set of devices or applications is held over the World Wide Web (WWW) and they are designed to support interoperable machine-to-machine interaction over a network.&lt;/p&gt;

&lt;p&gt;Web services are frequently just Web APIs that can be accessed over a network, such as the Internet, and executed on a remote system hosting the requested services.&lt;/p&gt;

&lt;p&gt;This communication system can be categorized into two types: SOAP(Simple Object Access Protocol, and  REST(Representational State Transfer), REST and REST are two approaches for interfacing to the web with web services.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-is-soap-and-rest"&gt;
  &lt;/a&gt;
  SO WHAT IS SOAP AND REST?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-what-is-soap-"&gt;
  &lt;/a&gt;
  1. What is SOAP? :
&lt;/h3&gt;

&lt;p&gt;SOAP is a standard protocol which was designed before REST with the idea of ensuring that programs/applications built on different platforms and on different programming languages could exchange data in an easy manner. Since it's a protocol it has a set of built-in rules which increases it's complexity. However these standards also offer built-in compliances that can make it preferable for enterprise scenarios. The built-in compliance standards include security, atomicity, consistency, isolation, and durability (ACID), which is a set of properties for ensuring reliable database transactions. SOAP stands for Simple Object Access Protocol. It can also operate over various protocols such as HTTP (Hypertext Transfer Protocol), SMTP (Simple Mail Transfer Protocol), TCP (Transmission Control Protocol) or UDP (User Datagram Protocol).&lt;/p&gt;

&lt;p&gt;Microsoft originally developed SOAP to take the place of older technologies that don‚Äôt work well on the internet such as the Distributed Component Object Model (DCOM) and Common Object Request Broker Architecture (CORBA). These technologies fail because they rely on binary messaging. The XML messaging that SOAP employs works better over the internet.&lt;/p&gt;

&lt;p&gt;SOAP has been around since late 1990's&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#important-notice-about-soap-"&gt;
  &lt;/a&gt;
  IMPORTANT NOTICE ABOUT SOAP ?
&lt;/h3&gt;

&lt;p&gt;When a request for data is sent to a SOAP API, it can be handled through any of the application layer protocols: HTTP, SMTP, TCP, and others, however once a request is received, return SOAP messages must be returned as XML documents‚Äîa markup language that is both human- and machine-readable&lt;/p&gt;

&lt;p&gt;A completed request to a SOAP API is not cacheable by a browser, so it cannot be accessed later without resending to the API.&lt;/p&gt;

&lt;p&gt;SOAP relies heavily on XML where by every operation the service provides is explicitly defined, along with the XML structure of the request and response for that operation.&lt;/p&gt;

&lt;p&gt;SOAP permits processes using different operating systems like linux and windows to communicate via HTTP and it's XML&lt;/p&gt;

&lt;p&gt;SOAP was long the standard approach to web service interfaces, although it‚Äôs been dominated by REST in recent years, with REST now representing more than 70% of public APIs according to Stormpath.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2what-is-rest"&gt;
  &lt;/a&gt;
  2.what is REST?
&lt;/h3&gt;

&lt;p&gt;REST is a set of architectural principles attuned to the needs of lightweight web services and mobile applications. Because it's a set of guidelines, it leaves the implementation of these recommendations to developers. It relies on stateless communication.&lt;/p&gt;

&lt;p&gt;REST was designed specifically for working with components such as media components, files, or even objects on a particular hardware device. A Restful service would use the normal HTTP verbs of GET, POST, PUT and DELETE for working with the required components. REST stands for Representational State Transfer&lt;/p&gt;

&lt;p&gt;Many developers found SOAP cumbersome and hard to use. For example, working with SOAP in JavaScript means writing a ton of code to perform simple tasks because you must create the required XML structure every time.&lt;/p&gt;

&lt;p&gt;REST usually relies on a simple URL, most web services using REST rely exclusively on using the URL approach. REST can use four different HTTP 1.1 verbs (GET, POST, PUT, and DELETE) to perform tasks.&lt;/p&gt;

&lt;p&gt;REST doesn‚Äôt have to use XML to provide the response. You can find REST-based web services that output the data in Command Separated Value (CSV), JavaScript Object Notation (JSON) and Really Simple Syndication (RSS), the main point here is that you can obtain the output you need, in a form that‚Äôs easy to parse within the language you‚Äôre using for your application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#primary-key-differences-between-soap-and-rest-"&gt;
  &lt;/a&gt;
  PRIMARY KEY DIFFERENCES BETWEEN SOAP AND REST ?
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;SOAP was originally created by Microsoft, and it‚Äôs been around a lot longer than REST. This gives it the advantage of being an established, legacy protocol while REST has been around for a good time now as well. Plus, it entered the scene as a way to access web services in a much simpler way than possible with SOAP by using HTTP.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SOAP is a protocol whereas REST is an architectural pattern.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;3.SOAP stands for Simple Object Access Protocol whereas REST stands for Representational State Transfer.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;SOAP uses service interfaces to expose its functionality to client applications while REST uses Uniform Service locators to access to the components on the hardware device.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;5.SOAP needs more bandwidth for its usage whereas REST doesn‚Äôt need much bandwidth.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;SOAP only works with XML formats whereas REST work with plain text, XML, HTML and JSON.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;7.SOAP cannot make use of REST since SOAP is a protocol and REST is an architectural pattern. while REST can make use of SOAP as the underlying protocol for web services, because in the end it is just an architectural pattern.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;SOAP is a protocol and was designed with a specification. It includes a WSDL file which has the required information on what the web service does in addition to the location of the web service while REST is an Architectural style in which a web service can only be treated as a RESTful service if it follows the constraints of being: Client Server, Stateless, Cacheable, Layered System, Uniform Interface.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;9.SOAP requires more bandwidth for its usage. Since SOAP Messages contain a lot of information inside of it, the amount of data transfer using SOAP is generally a lot&lt;/p&gt;

&lt;p&gt;Example of SOAP request:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?xml version="1.0"?&amp;gt;
&amp;lt;SOAP-ENV:Envelope 
xmlns:SOAP-ENV
="http://www.w3.org/2001/12/soap-envelope" 
SOAP-ENV:encodingStyle
=" http://www.w3.org/2001/12/soap-encoding"&amp;gt;
&amp;lt;soap:Body&amp;gt;
 &amp;lt;Demo.guru99WebService
 xmlns="http://tempuri.org/"&amp;gt;
   &amp;lt;EmployeeID&amp;gt;int&amp;lt;/EmployeeID&amp;gt;
   &amp;lt;/Demo.guru99WebService&amp;gt;
 &amp;lt;/soap:Body&amp;gt;
&amp;lt;/SOAP-ENV:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  while
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;REST does not need much bandwidth when requests are sent to the server. REST messages mostly just consist of JSON messages. Below is an example of a JSON message passed to a web server. You can see that the size of the message is comparatively smaller to SOAP.&lt;/p&gt;

&lt;p&gt;Example of REST API data&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{"city":"Mumbai","state":"Maharastra"}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;&lt;p&gt;SOAP can only work with XML format. As seen from SOAP messages, all data passed is in XML format while REST permits different data format such as Plain text, HTML, XML, JSON, etc. But the most preferred format for transferring data is JSON.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SOAP uses service interfaces to expose its functionality to client applications. In SOAP, the WSDL file provides the client with the necessary information which can be used to understand what services the web service can offer&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;             while
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;REST use Uniform Service locators to access to the components on the hardware device. For example, if there is an object which represents the data of an employee hosted on a URL as &lt;a href="http://demo.users"&gt;http://demo.users&lt;/a&gt; , the below are some of URI that can exist to access them&lt;br&gt;
&lt;a href="http://demo.users.com/students"&gt;http://demo.users.com/students&lt;/a&gt;&lt;br&gt;
&lt;a href="http://demo.users.com/students/1"&gt;http://demo.users.com/students/1&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;REST is very easy to understand and is extremely approachable, but does lack standards and is considered an architectural approach. while SOAP is an industry standard with a well-defined protocol and a set of well-established rules to be implemented, and it has been used in systems both big and small.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Works well in distributed enterprise environments (REST assumes direct point-to-point communication), it is standardized, Has built-in error handling, Provides significant pre-build extensibility in the form of the WS* standards and it is Language, platform, and transport independent (REST requires use of HTTP).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#when-should-you-consider-using-rest-over-soap-"&gt;
  &lt;/a&gt;
  WHEN SHOULD YOU CONSIDER USING REST OVER SOAP ?
&lt;/h3&gt;

&lt;p&gt;One of the most highly debatable topics is when REST should be used or when to use SOAP while designing web services. Below are some of the key factors that determine when REST should be used for web services:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.Limited resources and bandwidth:&lt;/strong&gt;&lt;br&gt;
Since SOAP messages are heavier in content and consume a far greater bandwidth, REST should be used in instances where network bandwidth is a constraint.&lt;br&gt;
&lt;strong&gt;2.Totally stateless operations:&lt;/strong&gt;&lt;br&gt;
If there is no need to maintain a state of information from one request to another then REST should be used. If you need a proper information flow wherein some information from one request needs to flow into another then SOAP is more suited for that purpose.&lt;/p&gt;

&lt;p&gt;foreample:&lt;br&gt;
For online purchasing site. These sites normally need the user first to add items which need to be purchased to a cart. All of the cart items are then transferred to the payment page in order to complete the purchase. This is an example of an application which needs the state feature. The state of the cart items needs to be transferred to the payment page for further processing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Caching situations:&lt;/strong&gt;&lt;br&gt;
 If there is a need to cache a lot of requests then REST is the perfect solution. At times, clients could request for the same resource multiple times. This can increase the number of requests which are sent to the server. By implementing a cache, the most frequent queries results can be stored in an intermediate location. So whenever the client requests for a resource, it will first check the cache. If the resources exist then, it will not proceed to the server. So caching can help in minimizing the amount of trips which are made to the web server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.Ease of coding:&lt;/strong&gt;&lt;br&gt;
Coding REST Services and subsequent implementation is far easier than SOAP. So if a quick win solution is required for web services, then REST is the way to go.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#when-should-you-consider-using-soap-over-rest-"&gt;
  &lt;/a&gt;
  WHEN SHOULD YOU CONSIDER USING SOAP OVER REST ?
&lt;/h3&gt;

&lt;p&gt;SOAP is fairly mature and well-defined and does come with a complete specification. The REST approach is just that, an approach and is wide open for development, so if you have the following then SOAP is a great solution:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Asynchronous processing and subsequent invocation:&lt;/strong&gt;&lt;br&gt;
if your application needs a guaranteed level of reliability and security then SOAP 1.2 offers additional standards to ensure this type of operation. Things like WSRM ‚Äì WS-Reliable Messaging.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.A Formal means of communication:&lt;/strong&gt;&lt;br&gt;
If both the client and server have an agreement on the exchange format then SOAP 1.2 gives the rigid specifications for this type of interaction. An example is an online purchasing site in which users add items to a cart before the payment is made. Let's assume we have a web service that does the final payment. There can be a firm agreement that the web service will only accept the cart item name, unit price, and quantity. If such a scenario exists then, it's always better to use the SOAP protocol.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Stateful operations:&lt;/strong&gt;&lt;br&gt;
If the application needs contextual information and conversational state management then SOAP 1.2 has the additional specification in the WS* structure to support those things (Security, Transactions, Coordination, etc). Comparatively, the REST approach would make the developers build this custom plumbing.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#challenges-in-a-soap-api-"&gt;
  &lt;/a&gt;
  CHALLENGES IN  A SOAP API :
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. WSDL file:&lt;/strong&gt;&lt;br&gt;
One of the key challenges of the SOAP API is the WSDL document itself. The WSDL document is what tells the client of all the operations that can be performed by the web service. The WSDL document will contain all information such as the data types being used in the SOAP messages and what all operations are available via the web service. The below code snippet is just part of a sample WSDL file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;                  &amp;lt;?xml version="1.0"?&amp;gt;
&amp;lt;definitions name="Tutorial"             
    targetNamespace=http://demo.guru99.com/Tutorial.wsdl             
    xmlns:tns=http://demo.guru99.com/Tutorial.wsdl             
    xmlns:xsd1=http://demo.guru99.com/Tutorial.xsd            
    xmlns:soap=http://schemas.xmlsoap.org/wsdl/soap/
    xmlns="http://schemas.xmlsoap.org/wsdl/"&amp;gt; 

    &amp;lt;types&amp;gt;  
        &amp;lt;schema targetNamespace=http://Demo.guru99.com/Tutorial.xsd
        xmlns="http://www.w3.org/2000/10/XMLSchema"&amp;gt;

        &amp;lt;element name="TutorialNameRequest"&amp;gt;    
            &amp;lt;complexType&amp;gt;          
                &amp;lt;all&amp;gt;           
                    &amp;lt;element name="TutorialName" type="string"/&amp;gt;         
                &amp;lt;/all&amp;gt;       
            &amp;lt;/complexType&amp;gt;    
        &amp;lt;/element&amp;gt;     
    &amp;lt;element name="TutorialIDRequest"&amp;gt;        
        &amp;lt;complexType&amp;gt;          
            &amp;lt;all&amp;gt;           
                &amp;lt;element name="TutorialID" type="number"/&amp;gt;         
            &amp;lt;/all&amp;gt;       
        &amp;lt;/complexType&amp;gt;      
    &amp;lt;/element&amp;gt;   
    &amp;lt;/schema&amp;gt;  
&amp;lt;/types&amp;gt;    
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As per the above WSDL file, we have an element called "TutorialName" which is of the type String which is part of the element TutorialNameRequest.&lt;/p&gt;

&lt;p&gt;Now, suppose if the WSDL file were to change as per the business requirements and the TutorialName has to become TutorialDescription. This would mean that all the clients who are currently connecting to this web service would then need to make this corresponding change in their code to accommodate the change in the WSDL file.&lt;br&gt;
This shows the biggest challenge of the WSDL file which is the tight contract between the client and the server and that one change could cause a large impact, on the whole, client applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Document size:&lt;/strong&gt;&lt;br&gt;
The other key challenge is the size of the SOAP messages which get transferred from the client to the server. Because of the large messages, using SOAP in places where bandwidth is a constraint can be a big issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#challenges-of-working-with-rest-apis"&gt;
  &lt;/a&gt;
  CHALLENGES OF WORKING WITH REST API'S
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. Lack of Security:&lt;/strong&gt;&lt;br&gt;
 REST does not impose any sort of security like SOAP. This is why REST is very appropriate for public available URL's, but when it comes down to confidential data being passed between the client and the server, REST is the worst mechanism to be used for web services.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Lack of state:&lt;/strong&gt;&lt;br&gt;
Most web applications require a stateful mechanism. For example, if you had a purchasing site which had the mechanism of having a shopping cart, it is required to know the number of items in the shopping cart before the actual purchase is made. Unfortunately, the burden of maintaining this state lies with the client, which just makes the client application heavier and difficult to maintain.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;However, the good news for web developers is that both technologies are very viable in today‚Äôs market. Both REST and SOAP can solve a huge number of web problems and challenges, and in many cases each can be made to do the developers bidding, which means they can work across the domain.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What are some useful resources to learn programming/system administration from?</title>
      <author>Bobby Iliev</author>
      <pubDate>Wed, 05 May 2021 19:38:48 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/what-are-some-useful-resources-to-learn-programming-system-administration-from-591o</link>
      <guid>https://dev.to/bobbyiliev/what-are-some-useful-resources-to-learn-programming-system-administration-from-591o</guid>
      <description>&lt;p&gt;With the information overload nowadays, it could be really intimidating for people who are just getting started to find the right resources to learn from.&lt;/p&gt;

&lt;p&gt;What are some useful resources that you wish you had when you got started?&lt;/p&gt;

&lt;p&gt;My top 5 resources are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://freecodecamp.com"&gt;freecodecamp.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devdojo.com"&gt;devdojo.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://digitalocean.com/community"&gt;digitalocean.com/community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codecademy.com"&gt;codecademy.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://laracasts.com"&gt;laracasts.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What are your top 5?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>Difference between arguments and parameters</title>
      <author>Benjamin Thorpe</author>
      <pubDate>Wed, 05 May 2021 19:34:26 +0000</pubDate>
      <link>https://dev.to/benjithorpe/difference-between-arguments-and-parameters-58gm</link>
      <guid>https://dev.to/benjithorpe/difference-between-arguments-and-parameters-58gm</guid>
      <description>&lt;p&gt;Hi all.&lt;br&gt;
Most people use &lt;code&gt;arguments&lt;/code&gt; and &lt;code&gt;parameters&lt;/code&gt; interchangeably.&lt;br&gt;
But technically they are not the same.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-arguments"&gt;
  &lt;/a&gt;
  What are arguments
&lt;/h3&gt;

&lt;p&gt;In simple words:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;arguments are data/values that are passed to a function when you call them.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# define the function
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;

&lt;span class="c1"&gt;# call the function
&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 2 and 4 are the arguments.
# they are the values the function will manipulate.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#what-are-parameters"&gt;
  &lt;/a&gt;
  What are parameters
&lt;/h3&gt;

&lt;p&gt;In simple words:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;parameters are dummy names you pass/give a function when you are defining it.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Example in python
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;

&lt;span class="c1"&gt;# a and b are the parameters for the function
# they just acts as a placeholder.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;If I might have missed anything, please leave a comment and help me learn from you.&lt;br&gt;
Thanks for reading!!&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Moving Towards an Accessibility-First Approach</title>
      <author>tessa</author>
      <pubDate>Wed, 05 May 2021 19:27:39 +0000</pubDate>
      <link>https://dev.to/mural/moving-towards-an-accessibility-first-approach-5447</link>
      <guid>https://dev.to/mural/moving-towards-an-accessibility-first-approach-5447</guid>
      <description>&lt;p&gt;&lt;em&gt;Accessibility, or the consideration of the wide range of disabilities throughout the design and creation process, can be tough to integrate throughout the product development process. This is a challenge MURAL is also facing, and its Design Systems &amp;amp; Accessibility (DSA) team is working to shift the company to an accessibility-first mindset. In this post we‚Äôll explore one facet of their approach, an education platform, in depth, and discuss what worked well and what could be improved.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-trip-to-a11yland"&gt;
  &lt;/a&gt;
  A Trip to A11yland
&lt;/h2&gt;

&lt;p&gt;The DSA team started with an ambitious project known as ‚ÄúA11yland.‚Äù&lt;sup id="fnref1"&gt;&lt;a href="#fn1"&gt;1&lt;/a&gt;&lt;/sup&gt; A11yland is a sprawling board game‚Äìlike map linking to various video lectures, references, and practice exercises, and has multiple paths for various disciplines including design, development, testing, and marketing. The DSA team leads announced the program to the company at an All Hands meeting in November, closely followed by a strongly recommended voluntary ‚ÄúPower Hour‚Äù: a session with the DSA team that included a brief introduction to accessibility and empathy-building exercises like navigating the MURAL app using only a keyboard and watching a recording of a blind user traversing &lt;a href="https://www.mural.co"&gt;mural.co&lt;/a&gt; with a screen reader.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sRqNo62I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4nbv47quk94jrdq8nd9u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sRqNo62I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4nbv47quk94jrdq8nd9u.png" alt="A11yland map of the accessibility training program, styled like a board game in a digital collaborative canvas called a mural."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A11yland used this initial live workshop as a springboard into its first practical learning module: Assistive Technology. The DSA team tested this first chunk on five sponsor teams of about fifteen people each. These users were tasked with watching videos on people using assistive technology to navigate the web, explanations of different types of assistive technology including eye trackers and screen magnifiers, and practice exercises using the technologies demonstrated. The team also included additional recordings, written articles, and hands-on exercises that could be referenced if desired.&lt;/p&gt;

&lt;p&gt;Of the roughly 75 people asked to test the training, six people participated, including two from the DSA team, and none had filled out the feedback request form nor asked for individualized help, which was also made available. The DSA team had been careful to start from a base of empathy and break lessons into thoughtful, digestible chunks that they called ‚Äúbite-size,‚Äù so what was going on here? Why was no one ‚Äúbiting‚Äù?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-than-they-could-chew"&gt;
  &lt;/a&gt;
  More Than They Could Chew
&lt;/h2&gt;

&lt;p&gt;To gain some insight, the DSA team surveyed their sponsor teams, asking testers what they thought of the training. Respondents said they felt overwhelmed by the amount of information and confused by what to do with it. They also had trouble seeing how the lessons related to work, and wanted to know the minimum requirements for their specific roles. In other words, they wanted a stronger focus on practical ways to implement accessibility and to spend less time on the ‚Äúwhy.‚Äù The DSA team also noted that a majority of responses were from designers, while a couple were from managers, and only one from a developer.&lt;/p&gt;

&lt;p&gt;The team then ran their own analysis, revisiting their initial thesis: a one hour workshop is not enough training to develop an accessibility-focused team. Did they still believe this was true?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#self-reflection"&gt;
  &lt;/a&gt;
  Self Reflection
&lt;/h2&gt;

&lt;p&gt;A11yland was never intended to be completed in a single day, but a resource to be visited time and time again while developing products at MURAL. If the team focused only on implementation and removed the extra resources, could they cram everything into one hour?&lt;/p&gt;

&lt;p&gt;Educational feasibility aside, at a remote-first company it can be extremely difficult to find even fifteen minutes where everyone is free, so schedule-wise it seemed like an impossible feat. The team reexamined the feedback they collected, most of which asked for reduced focus on empathy. Could they afford to excise those sections?&lt;/p&gt;

&lt;p&gt;In the team‚Äôs experience, empathy was the most effective way to engender ‚Äúchampions,‚Äù or people who actively promote accessibility practices within their team and/or outside the company; and was critical for developing products that are just not technically compliant to static rules, but also actually usable in practice. Thus, the team decided it wasn‚Äôt possible to significantly reduce the scope of their lesson plans. But before moving on to developing a new approach, the team discussed their own thoughts on what did and didn‚Äôt work for them in A11yland‚Äôs first iteration.&lt;/p&gt;

&lt;p&gt;A11yland had been built with &lt;a href="https://www.mural.co/features"&gt;MURAL&lt;/a&gt; ‚Äî a digital, visual, collaborative workspace ‚Äî with the intention of &lt;a href="https://en.wikipedia.org/wiki/Eating_your_own_dog_food"&gt;dogfooding&lt;/a&gt; the company‚Äôs product while iterating on it. However, it was tough to track progress, which depended on an honor system approach where testers marked lessons taken on a table using screenshots. Seeing as this was difficult to keep an eye on for the six existing participants, the team concluded it would be impossible to scale to a company of 500 employees. In addition, because of the ‚Äúsprawling canvas‚Äù nature of murals, it was tough for A11yland‚Äôs participants and facilitators to keep track of the overall scope of the lessons. Finally, the team realized they could have saved time and energy by starting to solicit feedback as early as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-sprinkle-of-accessibility"&gt;
  &lt;/a&gt;
  A Sprinkle of Accessibility
&lt;/h2&gt;

&lt;p&gt;With newfound focus on practical exercises and smaller lesson chunks, the DSA team decided to downsize each step of A11yland to just its hands-on practice sections, dubbing these ‚Äúsprinkle-size‚Äù training. Because the empathy-building exercises are still key to motivating colleagues to take an accessibility-first approach, the team delegated these to a live workshop integrated into the required onboarding program all new hires go through. And to disseminate and track sprinkles across the company, the team decided to leverage &lt;a href="https://www.knowbe4.com"&gt;KnowBe4&lt;/a&gt;, a training platform which already hosts MURAL‚Äôs wildly popular (really!) cybersecurity training program, which would allow them to automatically add new hires to the lessons as part of the onboarding process.&lt;/p&gt;

&lt;p&gt;Before starting development on this new approach, however, the DSA team decided to roll out an &lt;a href="https://flaviocopes.com/rfc"&gt;RFC&lt;/a&gt; to get input from across the company, having learned their lesson from the A11yland rollout. This stage of the process is currently in progress, and we look forward to sharing how it goes!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#farewell-to-a11yland"&gt;
  &lt;/a&gt;
  Farewell to A11yland?
&lt;/h2&gt;

&lt;p&gt;So with a new sprinkle-sized program in sight, is this the end for A11yland? Well... no. While A11yland was deemed to be an overwhelming first-time experience to the world of accessibility, it remains a great learning roadmap and resource for those excited to learn more about the practice, and the team plans to open it up to ‚Äúa11y champions.‚Äù Identified by the speed at which they complete the sprinkle-size training, champions will be the primary advocates for accessibility on their respective teams at MURAL, acting as an embedded DSA team member to help educate and ensure accessibility practices are followed. The DSA team is also brainstorming incentives for champions, including swag and a possible budget for attending accessibility conferences.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lessons-learned"&gt;
  &lt;/a&gt;
  Lessons Learned
&lt;/h2&gt;

&lt;p&gt;While their trip through A11yland didn‚Äôt go exactly as planned, the DSA team remains excited to roll out both training programs across the company. The team learned a lot throughout the iteration of the education platform, and their biggest takeaway was to get feedback before building out the actual courses. While A11yland is still a valuable part of the platform and here to stay, the program is going to be assigned across MURAL slightly later than planned due to changes based on the feedback. Though a bit frustrating, the team doesn‚Äôt see this as a failure but as a necessary part of the development process; every organization is different and will require different approaches and research to challenge assumptions. Despite the change in approach, the team was able to maintain the same empathy-based foundation across both programs, the efficacy of which was recently validated by presentations at the 2021 &lt;a href="https://www.csun.edu/cod/conference/sessions"&gt;CSUN Assistive Technology Conference&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;Implementing and building excitement for accessibility can be extremely challenging, especially when working solo. The DSA team at MURAL feels lucky that this drive started with the executive team, responding to requests and requirements from academic and non-profit clients. They also face a relatively unique challenge to make accessible a visual application built on &lt;a href="https://dev.to/mural/performant-paintings-building-a-canvas-render-engine-4506"&gt;inherently inaccessible technology&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Reflecting on their situation, the DSA team leads feel both well placed and well supported to effect cultural change thanks to their broad experience in the field, the trust and support from leadership, and most importantly, the openness to collaborate and learn within their team; and they look forward to spreading that enthusiasm and knowledge across MURAL because ‚Äúit‚Äôs the right thing to do.‚Äù&lt;/p&gt;




&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;"A11y" is a &lt;a href="https://en.wikipedia.org/wiki/Numeronym"&gt;numeronym&lt;/a&gt; often used as an abbreviation for accessibility.¬†&lt;a href="#fnref1"&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;

</description>
      <category>a11y</category>
      <category>education</category>
      <category>culture</category>
      <category>mural</category>
    </item>
    <item>
      <title>Font-end learning and knowledge system</title>
      <author>Benny Guo</author>
      <pubDate>Wed, 05 May 2021 18:50:57 +0000</pubDate>
      <link>https://dev.to/tridiamond/font-end-learning-and-knowledge-system-120m</link>
      <guid>https://dev.to/tridiamond/font-end-learning-and-knowledge-system-120m</guid>
      <description>&lt;h1&gt;
  &lt;a href="#0intro"&gt;
  &lt;/a&gt;
  „Äå0„ÄçIntro
&lt;/h1&gt;

&lt;p&gt;Many people feel very confused when they face higher knowledge mountains in their front-end career.&lt;/p&gt;

&lt;p&gt;Many of my fans had texted me asking "What should I learn?" and "When will I be finished with this front-end learning loop?"&lt;/p&gt;

&lt;p&gt;Don't worry, buddy! Once you read this article, you'll know a bit more about what makes a great front-end engineer. Creating a knowledge management system and building a career development plan will make sense to you.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#1how-do-you-define-a-good-developer"&gt;
  &lt;/a&gt;
  „Äå1„ÄçHow do you define a good developer?
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Think about the following question:&lt;/em&gt;&lt;br&gt;
"What does an excellent front-end developer possess?"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After interviewing many front-end engineers, here is what I got:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Familiarized with frameworks such as Angular, React, Vue.&lt;/li&gt;
&lt;li&gt;Knowing the web standards is essential.&lt;/li&gt;
&lt;li&gt;Experience with Webpack and Babel&lt;/li&gt;
&lt;li&gt;Ten years of experience in development&lt;/li&gt;
&lt;li&gt;Performance tuning and optimization&lt;/li&gt;
&lt;li&gt;Object-oriented programming and closures&lt;/li&gt;
&lt;li&gt;A NodeJS expert.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;A good front-end developer will have more important qualities than these.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#so-how-to-determine-the-quality-of-a-developer"&gt;
  &lt;/a&gt;
  So how to determine the quality of a developer?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#knowledge-of-the-field"&gt;
  &lt;/a&gt;
  üî≠ Knowledge of the field
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Different type of engineer has different field knowledge&lt;/li&gt;
&lt;li&gt;Different fields of knowledge are interrelated&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#abilities-and-potentials"&gt;
  &lt;/a&gt;
  üß¨ Abilities and potentials
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;As long as the ability of the individual matches the  requirements of the role, you will be promoted&lt;/li&gt;
&lt;li&gt;Potential is the upper limit of our abilities, anyone with the same potential should be able to write the same quality code.&lt;/li&gt;
&lt;li&gt;The difference is the ability to come up with solutions to problems and solve them independently&lt;/li&gt;
&lt;li&gt;Each engineer will be assigned with a KPI (Eg. 30% - outstanding, 60% - normal, 10% - unqualified)&lt;/li&gt;
&lt;li&gt;Each individual's potential will be assessed and a  prediction will be given as to when they will be promoted.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#%F0%9F%97%93-career-planning"&gt;
  &lt;/a&gt;
  üóì Career planning
&lt;/h3&gt;

&lt;p&gt;According to Alibaba's engineer ranking&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mid-level Engineer (P5) ‚Äî‚Äî Ability to work independently&lt;/li&gt;
&lt;li&gt;Senior Engineer (P6) ‚Äî‚Äî Core developer, work as a team leader, who can lead the team to break through difficult problems.&lt;/li&gt;
&lt;li&gt;Expert (P7) ‚Äî‚Äî A field expert. Become an authority in one area, drive development, and apply common solutions to solve problems in this area.&lt;/li&gt;
&lt;li&gt;Manager (P8)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-to-get-promoted"&gt;
  &lt;/a&gt;
  üìà How to get promoted?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Continuously improve technical capabilities&lt;/li&gt;
&lt;li&gt;Precipitation is occurring in your area of speciality&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#achievements"&gt;
  &lt;/a&gt;
  üèÜ Achievements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Your achievements prove your abilities and potentials.&lt;/li&gt;
&lt;li&gt;A reflection of what you have contributed and took on in your previous work experiences&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#2how-to-become-a-good-developer"&gt;
  &lt;/a&gt;
  „Äå2„ÄçHow to become a good developer?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#career-planning"&gt;
  &lt;/a&gt;
  Career Planning
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt; You &lt;/em&gt; are the owner of your career.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Many thinks career planning is the responsibility of their "boss", their "parents" or their "teachers". The reality is, it is you who is responsible for your career.&lt;/li&gt;
&lt;li&gt;Many get out of shape when implementing their career planning. They think that career promotion is the consciousness of the boss. &lt;/li&gt;
&lt;li&gt;Do we just give up if our boss doesn't promote us? &lt;strong&gt;No! we are the boss of our career, we need to take full responsibility for our career growth.&lt;/strong&gt; So we have to act for ourselves!&lt;/li&gt;
&lt;li&gt;A career plan is the most important aspect of a successful professional life, therefore we should act as if &lt;strong&gt;we are in charge of it&lt;/strong&gt;, and we have to come up with a solution to ensure our results.&lt;/li&gt;
&lt;li&gt;You need to know when and where you want to be in the company or your role, and if not, how to get there!&lt;/li&gt;
&lt;li&gt;So we should always keep a sense of urgency and crisis in the workplace&lt;/li&gt;
&lt;li&gt;No one will be responsible for your career success. This is why you need to exert enough effort. The same applies to career development.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#advancements-in-career"&gt;
  &lt;/a&gt;
  Advancements in Career
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Growth ‚Äî‚Äî Develop your skills through continuous learning&lt;/li&gt;
&lt;li&gt;Achievement ‚Äî‚Äî As you advance in skill, you will acquire achievements that can be used to prove your technical abilities&lt;/li&gt;
&lt;li&gt;Promotion ‚Äî‚Äî You can be promoted to the next level by demonstrating your achievements.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hence, achievements are paramount to career advancement. What achievements can we acquire in the course of our daily routine?&lt;/p&gt;

&lt;p&gt;There are &lt;em&gt;three&lt;/em&gt; main types of achievements we can obtain!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#achieve-project-objectives"&gt;
  &lt;/a&gt;
  üé° Achieve Project Objectives
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Business objectives

&lt;ul&gt;
&lt;li&gt;Understand the core objectives of your company's business&lt;/li&gt;
&lt;li&gt;Turn objectives into metrics (UV, PV, page load time, profits)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Technical solutions

&lt;ul&gt;
&lt;li&gt;Conversion of the business target to technical target&lt;/li&gt;
&lt;li&gt;Put the plan to work and complete small size trials&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Implementing the plan

&lt;ul&gt;
&lt;li&gt;Determine implementation objectives and participants&lt;/li&gt;
&lt;li&gt;Manage the implementation progress&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Result evaluation

&lt;ul&gt;
&lt;li&gt;Collecting data and form into a data report&lt;/li&gt;
&lt;li&gt;Then report to a superior&lt;/li&gt;
&lt;li&gt;No promotion is possible without positive results, else all you get is a "diligent and hard-working" reputation&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;A study case:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Business goals &amp;amp; metrics:

&lt;ul&gt;
&lt;li&gt;Improve click-through rate&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Technical solution:

&lt;ul&gt;
&lt;li&gt;Add gesture operation to TAB component&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Implementation 1:

&lt;ul&gt;
&lt;li&gt;Add corresponding feature&lt;/li&gt;
&lt;li&gt;Push to production*&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Result:

&lt;ul&gt;
&lt;li&gt;Click-through rate increased 3 times&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Implementation 2:

&lt;ul&gt;
&lt;li&gt;Compile general TAB components&lt;/li&gt;
&lt;li&gt;Helping making a good base UI/UX guideline&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#achieve-development-automation"&gt;
  &lt;/a&gt;
  ‚öôÔ∏è Achieve Development Automation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Target

&lt;ul&gt;
&lt;li&gt;Improved code quality&lt;/li&gt;
&lt;li&gt;Improved development efficiency&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Plan and implementation

&lt;ul&gt;
&lt;li&gt;Rules and regulations&lt;/li&gt;
&lt;li&gt;Repo / Pacakges&lt;/li&gt;
&lt;li&gt;Tools / CLI&lt;/li&gt;
&lt;li&gt;Systems&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;End result

&lt;ul&gt;
&lt;li&gt;Ability to monitor production&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;A case study: Prevention of XSS attacks&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Target: 

&lt;ul&gt;
&lt;li&gt;XSS attack white hat feedback vulnerability&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Technical solution: 

&lt;ul&gt;
&lt;li&gt;Organize the security manual&lt;/li&gt;
&lt;li&gt;Review the historical code&lt;/li&gt;
&lt;li&gt;Building a code scan tool&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Implementation:

&lt;ul&gt;
&lt;li&gt;Change the code release process&lt;/li&gt;
&lt;li&gt;Review the entire code&lt;/li&gt;
&lt;li&gt;Preach to all the front-end developers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Result: 

&lt;ul&gt;
&lt;li&gt;XSS vulnerabilities significantly reduced&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#resolving-technical-difficulties"&gt;
  &lt;/a&gt;
  ü™Ñ Resolving technical difficulties
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Target a:

&lt;ul&gt;
&lt;li&gt;Recognized technical difficulties&lt;/li&gt;
&lt;li&gt;One that can affect the business&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Planning and implementation

&lt;ul&gt;
&lt;li&gt;Rely on solid programming skills&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;A case study:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Case: Crawling commodity prices&lt;/li&gt;
&lt;li&gt;Background:

&lt;ul&gt;
&lt;li&gt;In a browser plug-in project, you need to crawl the price comparison of each website&lt;/li&gt;
&lt;li&gt;But each website will use image prices and other means to defend&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Solution:

&lt;ul&gt;
&lt;li&gt;Introduce Javascript terminal digital recognition technology&lt;/li&gt;
&lt;li&gt;Rely on AI technology to solve the problem&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#3frontend-and-learning-methods"&gt;
  &lt;/a&gt;
  „Äå3„ÄçFront-end and learning methods
&lt;/h1&gt;

&lt;p&gt;Being a good developer requires us to know how to study as a front-end developer.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#a-better-approach-to-learning"&gt;
  &lt;/a&gt;
  üîÆ A better approach to learning
&lt;/h2&gt;

&lt;p&gt;No pressure should be put on learning the knowledge system, instead one should try to understand the integrity and the framework of the knowledge system. &lt;/p&gt;

&lt;p&gt;A knowledge system should be accomplished by analyzing things from multiple perspectives.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Many developers are questioning whether what they have learned is useful.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The following tips can help you approach learning better:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Although some knowledge is useless, some small points may be useful during the course of a working day&lt;/li&gt;
&lt;li&gt;Most of the time there's no way to find out for certain how effective a piece of knowledge is&lt;/li&gt;
&lt;li&gt;In order to extract the most meaningful knowledge, we must have a knowledge system to sort them.&lt;/li&gt;
&lt;li&gt;We need to have a good study habit, whenever we see a new 
the knowledge we should try to understand it regardless of its usefulness&lt;/li&gt;
&lt;li&gt;The fact is that we do not have to fully comprehend new knowledge; it becomes clearer once you are faced with it again and again from different situations or environments.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Conclusion is:&lt;br&gt;
"Combining systematic learning with random learning"&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#%F0%9F%8F%97-frontend-skill-model"&gt;
  &lt;/a&gt;
  üèó Front-end skill model
&lt;/h2&gt;

&lt;p&gt;Once we have a better understanding of the learning approach, then we must then decide which categories to focus our learning efforts on.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Domain Knowledge

&lt;ul&gt;
&lt;li&gt;Different fields will have different knowledge&lt;/li&gt;
&lt;li&gt;Learning by practice&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Frontend knowledge

&lt;ul&gt;
&lt;li&gt;Establish a knowledge system&lt;/li&gt;
&lt;li&gt;The focus is to mastery the knowledge not the magnitude of the knowledge system&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Abilities ‚Äî‚Äî deliberate practice

&lt;ul&gt;
&lt;li&gt;Programming ability&lt;/li&gt;
&lt;li&gt;Architecture capability&lt;/li&gt;
&lt;li&gt;Engineering capability&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;"Frontend technology is not a magic spell book,&lt;br&gt;
the real ability is obtained by practice."&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#learning-method"&gt;
  &lt;/a&gt;
  üìö Learning method
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#relating-pieces-of-knowledge"&gt;
  &lt;/a&gt;
  Relating pieces of knowledge
&lt;/h3&gt;

&lt;p&gt;To build our knowledge system, we want to pursue completeness but not perfection.&lt;/p&gt;

&lt;p&gt;The first key goal is to find the key logical relationship between all your knowledge.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sequential relation

&lt;ul&gt;
&lt;li&gt;Record the relationship between processes in a system.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Combination relationship

&lt;ul&gt;
&lt;li&gt;Find the relationship between combinations&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Perspective relationship

&lt;ul&gt;
&lt;li&gt;When you look at knowledge, Each perspective you see is a complete thing on its own&lt;/li&gt;
&lt;li&gt;Understand a complete thing by looking at a piece of knowledge from various angles&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Classification relationship

&lt;ul&gt;
&lt;li&gt;Sort knowledge by category&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#organizing-and-sorting"&gt;
  &lt;/a&gt;
  Organizing and sorting
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;You can find clues by searching or by reading manuals or articles.&lt;/li&gt;
&lt;li&gt;Find multiple sources of information.&lt;/li&gt;
&lt;li&gt;Make sure your knowledge is complete by comparing and strengthening it.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#finding-the-source"&gt;
  &lt;/a&gt;
  Finding the source
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Source of knowledge

&lt;ul&gt;
&lt;li&gt;Establish the knowledge base from the source and enhance the credibility&lt;/li&gt;
&lt;li&gt;Find the earliest published papers or magazines&lt;/li&gt;
&lt;li&gt;Study the initial implementation case&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Standards and documents

&lt;ul&gt;
&lt;li&gt;Read the ones with high authorities&lt;/li&gt;
&lt;li&gt;Make a good comparison to ensure accuracy&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#4knowldege-system"&gt;
  &lt;/a&gt;
  „Äå4„ÄçKnowldege System
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QMudCEv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8e8l5xfxiu9ccn8wmjit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QMudCEv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8e8l5xfxiu9ccn8wmjit.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following all the tips in this article, you will able to build the above knowledge system.&lt;/p&gt;

&lt;p&gt;Building a complete knowledge system by filling in missing pieces of knowledge while learning. In the end, this knowledge system will be carved into your head, not just in your computer.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#recommended-open-source-projects"&gt;
  &lt;/a&gt;
  Recommended Open Source Projects
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#hexo-theme-aurora"&gt;
  &lt;/a&gt;
  Hexo Theme Aurora
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ctpx4rEa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210504220315253.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ctpx4rEa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210504220315253.png" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IZq4SVca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/2021042520203350.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IZq4SVca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/2021042520203350.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/tridiamond" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a0Ftdgk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--FiE5zImT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/289909/7452f918-5f0b-4ac3-af65-840f88576cfc.jpeg" alt="tridiamond image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/auroral-ui/hexo-aurora-theme-released-today-51he" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Hexo Aurora Theme released today! &lt;/h2&gt;
      &lt;h3&gt;Benny Guo „Éª Mar 30 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#vue&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#typescript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#hexo&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://aurora.tridiamond.tech/zh/"&gt;Usage Document&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#vscode-aurora-future-theme"&gt;
  &lt;/a&gt;
  VSCode Aurora Future theme
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k80-HjpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210425202156787.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k80-HjpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210425202156787.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/tridiamond" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a0Ftdgk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--FiE5zImT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/289909/7452f918-5f0b-4ac3-af65-840f88576cfc.jpeg" alt="tridiamond image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/auroral-ui/a-futuristic-dark-theme-aurora-future-310p" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A futuristic dark theme `Aurora Future`&lt;/h2&gt;
      &lt;h3&gt;Benny Guo „Éª Apr 17 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#vscode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#design&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#firefox-aurora-future"&gt;
  &lt;/a&gt;
  Firefox Aurora Future
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f2h9Aq8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210425202747477.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f2h9Aq8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210425202747477.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/tridiamond" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a0Ftdgk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--FiE5zImT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/289909/7452f918-5f0b-4ac3-af65-840f88576cfc.jpeg" alt="tridiamond image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/auroral-ui/firefox-theme-aurora-future-48ei" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Firefox theme `Aurora Future`&lt;/h2&gt;
      &lt;h3&gt;Benny Guo „Éª Apr 25 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#firefox&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#aurora&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#theme&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/aurora-future/"&gt;Theme page&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>frontend</category>
      <category>webdev</category>
      <category>leadership</category>
      <category>career</category>
    </item>
    <item>
      <title>Finding what matters to you</title>
      <author>John Papa</author>
      <pubDate>Wed, 05 May 2021 18:49:56 +0000</pubDate>
      <link>https://dev.to/john_papa/finding-what-matters-to-you-3anj</link>
      <guid>https://dev.to/john_papa/finding-what-matters-to-you-3anj</guid>
      <description>&lt;p&gt;Are you happy?&lt;/p&gt;

&lt;p&gt;I've been asked this question many times by co-workers and my leaders over the years. I've been lucky enough to have many leaders who cared enough to ask it and cared enough to help shape the environment around me and my colleagues. But for years I answered that question not even knowing there was a question that must be asked and answered first. A question that will shape whether I am happy or not.&lt;/p&gt;

&lt;p&gt;That question is "What makes you happy?".&lt;/p&gt;

&lt;p&gt;At some point in my career I decided to invest some time into thinking through that question. it's one that may be different for a lot of people. After all, what motivates you vs your colleague may be different. Sure, there will be overlapping aspects, but we are all different.&lt;/p&gt;

&lt;p&gt;First, I realized I am thankful for having a job that compensates me. Not everyone does. More specifically, I am thankful that this allows me to take care of my family.&lt;/p&gt;

&lt;p&gt;I'll cut to the end of the story here as I have 3 main points:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I found it helpful to carefully consider and be honest with myself on what makes me happy in a job.&lt;/li&gt;
&lt;li&gt;My list evolves as my life evolves. Sometimes items are added, sometimes they drop off that list.&lt;/li&gt;
&lt;li&gt;Being happy with my job is not the same as being happy with my life.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'll share here some of the most important aspects that make me happy at work. Maybe you have different ones or some of the same.&lt;/p&gt;

&lt;p&gt;This list is not in order, nor are they all equal to me.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Do I have the time to truly be with my family outside of my "work hours"?&lt;/li&gt;
&lt;li&gt;Do I find a challenge that stretches me and fits with how I like to build teams/processes/technology to achieve business solutions?&lt;/li&gt;
&lt;li&gt;Do I find the work interesting?&lt;/li&gt;
&lt;li&gt;Do I have support from my leaders?&lt;/li&gt;
&lt;li&gt;Do I have freedom to control how I get to the objectives?&lt;/li&gt;
&lt;li&gt;Do I have opportunity to influence direction?&lt;/li&gt;
&lt;li&gt;Do I find authenticity and character to be valued at work?&lt;/li&gt;
&lt;li&gt;Am I fairly compensated?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Are there other things I value? Absolutely! The point of this exercise for me was not to list a thousand items. Wow I'd be pressured into making sure I didn't leave something out (there is always something else to add). For example, I highly value working with collaborative people ... I could add that easily to the list above. And maybe I should. But at some point the list serves its purpose to me, which is to help me consider what matters to me.&lt;/p&gt;

&lt;p&gt;I'll leave you with this thought ... do you know what matters to you and influences what makes you happy at work? If not, maybe creating your own list will help.&lt;/p&gt;

</description>
      <category>devrel</category>
      <category>career</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Timezone for DateTime Field at Laravel¬†Nova</title>
      <author>mirac sengonul</author>
      <pubDate>Wed, 05 May 2021 18:47:15 +0000</pubDate>
      <link>https://dev.to/miracsengonul/timezone-for-datetime-field-at-laravel-nova-44fn</link>
      <guid>https://dev.to/miracsengonul/timezone-for-datetime-field-at-laravel-nova-44fn</guid>
      <description>&lt;p&gt;Hi there üëã&lt;/p&gt;

&lt;p&gt;You can want to see &lt;strong&gt;created_at&lt;/strong&gt; field or more fields like this with timezone. You follow me.&lt;/p&gt;

&lt;p&gt;Nova allows us for override any field.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'CreatedAt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%s'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Carbon&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setTimezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Europe/Istanbul'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Y-m-d'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
           &lt;span class="p"&gt;}),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We was able to manipulate &lt;strong&gt;created_at&lt;/strong&gt; field.&lt;/p&gt;

&lt;p&gt;We have been registering the records that date time types without UTC. But after we had made changes we saw that with timezone.&lt;/p&gt;

&lt;p&gt;Have good day üéä&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>nova</category>
      <category>timezone</category>
    </item>
    <item>
      <title>Easier web sites for CPAN modules</title>
      <author>Dave Cross</author>
      <pubDate>Wed, 05 May 2021 18:46:43 +0000</pubDate>
      <link>https://dev.to/davorg/easier-web-sites-for-cpan-modules-1nn4</link>
      <guid>https://dev.to/davorg/easier-web-sites-for-cpan-modules-1nn4</guid>
      <description>&lt;p&gt;A few months ago, Gabor asked if &lt;a href="https://dev.to/szabgab/perl-modules-with-their-own-web-site-2gmo"&gt;more CPAN modules should have their own web sites&lt;/a&gt;. I replied, saying thought it was a good idea and pointing out &lt;a href="https://dev.to/davorg/simple-cpan-module-web-sites-with-github-pages-29ka"&gt;how easy it was to create project web sites&lt;/a&gt; on GitHub Pages.&lt;/p&gt;

&lt;p&gt;But since then, I've been wondering if could be made even easier. Perhaps we could make it easy enough that there was really no reason not to have a web site for your CPAN module.&lt;/p&gt;

&lt;p&gt;And today I've released &lt;a href="https://metacpan.org/release/App-CPANModuleSite"&gt;App::CPANModuleSite&lt;/a&gt; that does just that.&lt;/p&gt;

&lt;p&gt;The default usage is pretty easy.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install the module&lt;/li&gt;
&lt;li&gt;In your repo checkout run &lt;code&gt;mksite &amp;lt;distribution-name&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;git add docs&lt;/code&gt; to add your new website directory to your repo&lt;/li&gt;
&lt;li&gt;Commit the changes and push the commit&lt;/li&gt;
&lt;li&gt;Configure your repo to support GitHub pages (I covered that in &lt;a href="https://dev.to/davorg/simple-cpan-module-web-sites-with-github-pages-29ka"&gt;my earlier blog post&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And you'll have a basic web site for your module at the web address https://&amp;lt;github-user&amp;gt;.github.io/&amp;lt;repo-name&amp;gt;.&lt;/p&gt;

&lt;p&gt;The default site is pretty basic. And it has a big banner across the page saying that you haven't put any effort into the site yet. But that's simple enough to fix. Just add a file called &lt;code&gt;tt_lib/intro.tt&lt;/code&gt; to your repo that contains a bit of HTML which explains more about what your module does. The next time you rebuild the site, that text will replace the default paragraph.&lt;/p&gt;

&lt;p&gt;Other than that, the default site contains:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The documentation for all of the modules in your distribution&lt;/li&gt;
&lt;li&gt;Links to other standard pages about your module (CPAN, CPAN testers, CPANTS, things like that)&lt;/li&gt;
&lt;li&gt;Links to your code repo and issue tracker (if they are defined in your CPAN metadata)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's also simple to add more pages to your site. Just add files in a &lt;code&gt;site_src&lt;/code&gt; directory in your repo. Any file in that directory whose name ends in &lt;code&gt;.tt&lt;/code&gt; will be processed by the Template Toolkit and the output will be stored in the &lt;code&gt;/docs&lt;/code&gt; directory (with the &lt;code&gt;.tt&lt;/code&gt; stripped from the name). Any files without a &lt;code&gt;.tt&lt;/code&gt; extension will just be copied into &lt;code&gt;/docs&lt;/code&gt;. If you're adding pages, then you'll almost certainly also want to edit the navbar on the page to contain links to your new pages.&lt;/p&gt;

&lt;p&gt;Default versions of various template files in &lt;code&gt;/site_src&lt;/code&gt; and &lt;code&gt;/tt_lib&lt;/code&gt; are installed as part of App::CPANModuleSite's installation. To edit them, you just copy them into the same directory in your repo and edit the copied versions. Any files found inside your repo will take precedence over the versions in the default directories.&lt;/p&gt;

&lt;p&gt;Any templates that you write (or existing ones that you edit) will have access to a few template variables:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;distribution&lt;/strong&gt; is a &lt;a href="https://metacpan.org/pod/MetaCPAN::Client::Distribution"&gt;MetaCPAN::Client::Distribution&lt;/a&gt; object containing details of your distribution&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;release&lt;/strong&gt; is a &lt;a href="https://metacpan.org/pod/MetaCPAN::Client::Release"&gt;MetaCPAN::Client::Release&lt;/a&gt; object containing details of the latest release of your distribution&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;modules&lt;/strong&gt; is an array reference, where each element of the array is a &lt;a href="https://metacpan.org/pod/MetaCPAN::Client::Module"&gt;MetaCPAN::Client::Module&lt;/a&gt; object containing details of one module in your distribution&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is all pretty experimental currently. I'm very happy to add more information to the default pages, more variables to the template engine and make pretty much any other changes that any users suggest. Let's work together to make this a useful and powerful web site generation tool.&lt;/p&gt;

&lt;p&gt;I have a couple of thoughts for things I want to do next:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I've already started work on creating a GitHub Action, so that you can automatically regenerate the site, for example, whenever you check in a change to your code&lt;/li&gt;
&lt;li&gt;The whole point of this is that more CPAN web sites mean better SEO for Perl. So I plan to think of ways that make the default sites as SEO-friendly as possible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please let me know what you think. Do you think this is a good idea? Will you use the module?&lt;/p&gt;

&lt;p&gt;Oh, and the site that App::CPANModuleSite generated for itself is at &lt;a href="https://davorg.dev/app-cpanmodulesite/"&gt;https://davorg.dev/app-cpanmodulesite/&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>perl</category>
      <category>cpan</category>
      <category>githubpages</category>
    </item>
    <item>
      <title>12 Simple Button Hover Animation Using CSS</title>
      <author>Kiran Raj R</author>
      <pubDate>Wed, 05 May 2021 18:41:37 +0000</pubDate>
      <link>https://dev.to/kiranrajvjd/12-simple-button-hover-animation-using-css-1ff1</link>
      <guid>https://dev.to/kiranrajvjd/12-simple-button-hover-animation-using-css-1ff1</guid>
      <description>&lt;p&gt;Almost every web project has one or more buttons, when the button is clicked we need to give an indication to the person that the button was clicked. It can be through a message or change in the button's visual properties. The change in the visual property help to convey the message quickly and easily. The visual indicators are better if the user need to click one button from a group of buttons, here I listed 12 ways that can be used to provide visual indication that the user has clicked the button. All are simple designs using CSS properties, no JavaScript is used. The working logic is given as comments in the CSS area, I tried to keep the CSS code simple, you can use your creativity to make these better. I just tried to show different ways of creating hover effects, if you find any errors let me know. If you have any suggestion, please comment, Happy Coding.&lt;br&gt;
 Here is the &lt;a href="https://codepen.io/kiran-r-raj/pen/vYxYKQK"&gt;codepen&lt;/a&gt; that contain all the 12 button hover effect examples.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/vYxYKQK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/19-simple-hover-animation-using-css-1l36" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;19 Simple Hover Animation Using CSS&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª May  4 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/24-html-tags-you-may-not-know-37be" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;24 HTML Tags you may not know.&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª May  4 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/awesome-css-generators-3709" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;25+ Awesome CSS Code Generators For Your Next Project&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª Apr 29 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/15-awesome-css-animation-resources-4mhi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;15+ Awesome CSS Animation Resources&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª Apr 21 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/10-best-javascript-based-github-repos-for-web-developers-49pc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 Awesome GitHub Repos For Web Developers &lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª Apr 26 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to Write Documentation in the Python World!</title>
      <author>Niklas Tiede</author>
      <pubDate>Wed, 05 May 2021 18:39:50 +0000</pubDate>
      <link>https://dev.to/niklastiede/writing-documentation-for-python-apps-44d8</link>
      <guid>https://dev.to/niklastiede/writing-documentation-for-python-apps-44d8</guid>
      <description>&lt;p&gt;This is part 7 of the multi-part series "The Evolution of a Script". The code of this post can be found on Github (see &lt;a href="https://github.com/NiklasTiede/tinyHTTPie/tree/7-Documentation"&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#1-clean-and-self-descriptive-code"&gt;Clean and Self Descriptive Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-docstrings-comments-and-git-commit-messages"&gt;Comments, Docstrings and Git Commit Messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-readme-files"&gt;README Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-sphinx-documentation"&gt;Sphinx Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this post I wanna talk about a few dimensions of how to document a project in the python world. This makes it easier for the user or fellow developers to understand the project as a whole or separate parts of it. We will start at the lowest level and move toward higher abstraction levels.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-clean-and-self-descriptive-code"&gt;
  &lt;/a&gt;
  1. Clean and Self Descriptive Code
&lt;/h1&gt;

&lt;p&gt;The lowest level of documentation is the code itself. The goal is to create readable and reusable software.  This can be achieved by adhering to a few principles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Meaningful, pronounceable and consistent &lt;strong&gt;naming&lt;/strong&gt; of variables/functions/classes.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Single-responsibility principle&lt;/strong&gt;: Each function fulfills only 1 purpose, same applies for classes/modules on a higher abstraction level.&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;static typing&lt;/strong&gt; for bigger projects, enforce type checking with &lt;a href="https://github.com/python/mypy"&gt;mypy&lt;/a&gt;. Dynamic languages like Python make object identification difficult.&lt;/li&gt;
&lt;li&gt;Avoid reinventing the wheel and make good use of &lt;strong&gt;Python's standard library&lt;/strong&gt;. A good developer uses existing code strategically to his advantage.&lt;/li&gt;
&lt;li&gt;Stick to a consistent style, I like &lt;a href="https://google.github.io/styleguide/pyguide.html"&gt;&lt;strong&gt;Googles styleguide&lt;/strong&gt;&lt;/a&gt; for Python.&lt;/li&gt;
&lt;li&gt;Is the code elegant and pleasing? &lt;strong&gt;Listen to your intuition&lt;/strong&gt;, your subconscious will point to the right things.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#2-docstrings-comments-and-git-commit-messages"&gt;
  &lt;/a&gt;
  2. Docstrings, Comments and Git Commit Messages
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__doc__&lt;/span&gt;
&lt;span class="s"&gt;'This module is always available.  It provides access to the'&lt;/span&gt;
&lt;span class="s"&gt;'mathematical functions defined by the C standard.'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Docstrings are string literals which occur as first statement in a function, class, method or module definition. The docstrings become the &lt;code&gt;__doc__&lt;/code&gt; special attribute of that object. They're used to explain the general purpose of an object whereas comments explain smaller parts of the code. Comments are used to explain non-obvious portions of the code. Docstrings are surrounded by &lt;code&gt;"""triple quotes"""&lt;/code&gt; and divided into one-line or multi-line docstrings whereas comments starts with &lt;code&gt;#&lt;/code&gt; at the beginning.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_function&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="s"&gt;"""This is a docstring"""&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

&lt;span class="c1"&gt;# docstring of the function
&lt;/span&gt;&lt;span class="n"&gt;my_function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__doc__&lt;/span&gt;

&lt;span class="c1"&gt;# displays documentation of the function
&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_function&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are many docstring formats available. Most commonly used are NumPy, PyDoc and Googles docstring style. It's a good idea to stick with a format which supports the Python documentation generator &lt;a href="https://github.com/sphinx-doc/sphinx"&gt;Sphinx&lt;/a&gt;. This generates a part of your documentation automatically from your docstrings. The last section of this post will show how to generate and host documentation with Sphinx and &lt;a href="https://github.com/readthedocs/readthedocs.org"&gt;readthedocs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A convenient VSCode extension is the &lt;a href="https://github.com/NilsJPWerner/autoDocstring"&gt;Python Docstring Generator&lt;/a&gt; to facilitate the creation of docstrings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;"""[summary]

    Args:
        x (int): [description]
        y (int): [description]

    Returns:
        int: [description]
    """&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It detects parameters automatically and you just have to fill out the marked fields. It uses the Google style by default.&lt;/p&gt;




&lt;p&gt;Another source of documentation is available if the project has a Git history. A good git history gives you information about the reason for each code change. You can supercharge the git capabilities of VSCode by &lt;a href="https://github.com/eamodio/vscode-gitlens"&gt;GitLens&lt;/a&gt; and you will see each commit message next to the code it was committed to.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rFULLG9L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adqc2e7gfi2gs7l5pzzi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rFULLG9L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adqc2e7gfi2gs7l5pzzi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Furthermore, I like to use &lt;a href="https://github.com/carloscuesta/gitmoji"&gt;gitmoji&lt;/a&gt; to make the reading of my commit messages visually more appealing and force myself to commit only code changes which fall into one category of the gitmojis.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-readme-files"&gt;
  &lt;/a&gt;
  3. README Files
&lt;/h1&gt;

&lt;p&gt;A nicely written README is the first document the visitor of a project will see. Here's a screenshot of &lt;a href="https://github.com/thelounge/thelounge"&gt;THELOUNGE&lt;/a&gt;, an IRC client for self-hosting:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3-x3IY9G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gygay6fv9dzghg4xtbuy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3-x3IY9G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gygay6fv9dzghg4xtbuy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What a beautiful README! What does it make so good? &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It has a visually &lt;strong&gt;appealing and memorable logo&lt;/strong&gt; which is compatible with Github's light and dark theme by using a transparent &lt;code&gt;.png&lt;/code&gt; picture.&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;concise self-description&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Badges&lt;/strong&gt; from &lt;a href="https://shields.io/"&gt;shields.io&lt;/a&gt; which visualize the quality of the project.&lt;/li&gt;
&lt;li&gt;Links to &lt;strong&gt;documentation&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;An &lt;strong&gt;example&lt;/strong&gt;, here screenshot of the application when running.&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;list of&lt;/strong&gt; contained &lt;strong&gt;features&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Often README files also contain instructions for the installation or a tutorial on how to use it. The READMEs file format is &lt;code&gt;.md&lt;/code&gt; (markdown) or &lt;code&gt;.rst&lt;/code&gt; (reStructuredText). Sometimes it's also a good idea to provide examples to the user for certain, common use cases. Projects with a data scientific background tend to use jupyter notebooks (&lt;code&gt;.ipynb&lt;/code&gt;) to demonstrate the capabilities of the project. Other projects use plain python files for demonstration purposes.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-sphinx-documentation"&gt;
  &lt;/a&gt;
  4. Sphinx Documentation
&lt;/h1&gt;

&lt;p&gt;For smaller projects the &lt;code&gt;README.md&lt;/code&gt; can be sufficient whereas projects like libraries benefit from a more extensive hosted technical documentation. I will show you here how simple it is to create your own freely hosted documentation with &lt;a href="https://github.com/sphinx-doc/sphinx"&gt;Sphinx&lt;/a&gt;, &lt;a href="https://readthedocs.org/"&gt;readthedocs&lt;/a&gt; and &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;OK, let's create some documentation! &lt;code&gt;Sphinx&lt;/code&gt; is the tool that will help us to simplify this process.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip install sphinx

$ mkdir docs
$ cd docs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sphinx will ask us a couple of questions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sphinx-quickstart

&amp;gt; Separate source and build directories (y/n) [n]: y
&amp;gt; Project name: tinyHTTPie
&amp;gt; Author name(s): Niklas Tiede
&amp;gt; Project release []: 0.1.0
&amp;gt; Project language [en]: enter
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To create the documentation we have to use the &lt;code&gt;make html&lt;/code&gt; command within the &lt;code&gt;docs&lt;/code&gt; directory. This creates the HTML of our documentation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cd ..
$ make html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we open the &lt;code&gt;index.html&lt;/code&gt; file with the browser via live server we can see how it will look like. But its appearance is pretty puristic yet. Therefore we use the popular &lt;code&gt;RTD&lt;/code&gt; theme to give it a professional look. We install the theme...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip install sphinx_rtd_theme
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...and customize the &lt;code&gt;conf.py&lt;/code&gt; file. We add the following lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sphinx_rtd_theme&lt;/span&gt;

&lt;span class="n"&gt;extensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"sphinx_rtd_theme"&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;
&lt;span class="n"&gt;pygments_style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"sphinx"&lt;/span&gt;
&lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'0.1.0'&lt;/span&gt;
&lt;span class="n"&gt;html_theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'sphinx_rtd_theme'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And render again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ make html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it looks way better! Ok, next we wanna write some more content. The documentation should be written in the reStructuredText (.rst) syntax. Here's a nice &lt;a href="https://github.com/ralsina/rst-cheatsheet/blob/master/rst-cheatsheet.rst"&gt;cheat sheet&lt;/a&gt;. A &lt;code&gt;.rst&lt;/code&gt; previewer in your IDE will speed up things. I've added some documentation about tinyHTTPie, see &lt;a href="https://github.com/NiklasTiede/tinyHTTPie/blob/7-Documentation/docs/source/index.rst"&gt;index.rst&lt;/a&gt;, &lt;a href="https://github.com/NiklasTiede/tinyHTTPie/blob/7-Documentation/docs/source/install.rst"&gt;install.rst&lt;/a&gt; and &lt;a href="https://github.com/NiklasTiede/tinyHTTPie/blob/7-Documentation/docs/source/tutorial.rst"&gt;tutorial.rst&lt;/a&gt;. The last step is to publish our documentation. We have to register at &lt;a href="https://readthedocs.org/"&gt;readthedocs.org&lt;/a&gt; and let it hook our repository.&lt;/p&gt;

&lt;p&gt;Voil√†! A nice &lt;a href="https://tinyhttpie.readthedocs.io/en/latest/"&gt;documentation&lt;/a&gt; was created! I hope you see how easy it is to setup such a good-looking documentation and that documentation has so many interesting aspects we're typically not aware of! üòÉ&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>productivity</category>
      <category>python</category>
      <category>devops</category>
    </item>
  </channel>
</rss>
