<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Understanding Built In Angular Directives - Part 3</title>
      <author>Anubhab Mukherjee</author>
      <pubDate>Wed, 22 Dec 2021 18:46:21 +0000</pubDate>
      <link>https://dev.to/anubhab5/understanding-built-in-angular-directives-part-3-4ll7</link>
      <guid>https://dev.to/anubhab5/understanding-built-in-angular-directives-part-3-4ll7</guid>
      <description>&lt;p&gt;&lt;strong&gt;T&lt;/strong&gt;oday we will discuss about the third built in Angular Directive the ngModel. If you are not aware of directives, I would highly suggest you to go through the following posts &lt;a href="https://dev.to/anubhab5/understanding-built-in-angular-directives-part-1-oln"&gt;directive - part 1&lt;/a&gt;, &lt;a href="https://dev.to/anubhab5/understanding-built-in-angular-directives-part-2-3fi1"&gt;directive - part 2&lt;/a&gt; before continuing here.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ngModel&lt;/code&gt;&lt;br&gt;
It is also an attribute directive provided by Angular. &lt;br&gt;
&lt;strong&gt;The Syntax&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;[(ngModel)]="&amp;lt;PROPERTY&amp;gt;"&lt;/code&gt; --- ( also called banana with in a box , not official though)&lt;/p&gt;

&lt;p&gt;A small piece of Info - &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;ngModel&lt;/code&gt; is used for &lt;u&gt;two-way data binding&lt;/u&gt;.&lt;/li&gt;
&lt;li&gt;ngModel is present in &lt;code&gt;FormsModule&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now lets understand the concept of two way data binding. But before jumping in there we will clear one more very important concept of interpolation.&lt;/p&gt;

&lt;p&gt;Consider you have a variable named with &lt;code&gt;myMarks&lt;/code&gt; in your component ts file which holds a value of &lt;em&gt;78&lt;/em&gt; in this case.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CpHmizfL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ho5x7s5kqp9wdphwcu1h.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CpHmizfL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ho5x7s5kqp9wdphwcu1h.PNG" alt="Image description" width="852" height="102"&gt;&lt;/a&gt;&lt;br&gt;
And you need to display the same value in your corresponding component template file. How can you do it?&lt;br&gt;
Very simple - by using &lt;code&gt;interpolation&lt;/code&gt;. &lt;br&gt;
And the syntax is double curly braces &lt;code&gt;{{ &amp;lt;The_Variable_Name }}&lt;/code&gt;.&lt;br&gt;
So in this case it would look like -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{{ myMarks }}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you start your application and navigate your browser to localhost:4200 you would be able to see the value &lt;em&gt;78&lt;/em&gt; printed in the browser. That's magical right??? So behind the scene angular is binding the variable value from the TS file to the HTML when ever you are putting the variable name in between &lt;code&gt;{{ }}&lt;/code&gt; double curly braces.&lt;br&gt;
WARNING - &lt;strong&gt;Make sure the variable name is correct and matches. Its case sensitive&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now moving on,&lt;br&gt;
Consider a situation =&amp;gt; If you have an input text box in your template where the value of &lt;code&gt;myMarks&lt;/code&gt; (variable we just created in TS file) needs to be displayed when the component is displayed and once you change the value in the text box then the corresponding value should be updated in the component TS file variable.&lt;/p&gt;

&lt;p&gt;This whole scenario is nothing but two way data binding. Now why 2 way?&lt;br&gt;
The variable in the component TS file is known as the &lt;code&gt;model&lt;/code&gt; and html is the template. So when the component is first time loaded or displayed the model value goes and sits in the text box (that's 1) and when you update it in the textbox then the model also gets updated (making it 2). Since we are binding the data we call it two way data binding.&lt;br&gt;
And we achieve the same using the directive &lt;code&gt;ngModel&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hope you are with me till now... This is a very important concept and you might also expect in the interview.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Lets go and implement two way data binding in our example then.&lt;/p&gt;

&lt;p&gt;But wait I also mentioned something called FormsModule earlier in this post. What's that then?&lt;br&gt;
The directive &lt;code&gt;ngModel&lt;/code&gt; is present inside a different module called &lt;code&gt;FormsModule&lt;/code&gt;. And if we need to use this directive we need to import the same in our module (I will talk about modules in details very soon).&lt;/p&gt;

&lt;p&gt;Lets open the app.module.ts file (shown below)-&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1dMuyczm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qmipcu0al5rqik3k5j5k.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1dMuyczm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qmipcu0al5rqik3k5j5k.PNG" alt="Image description" width="466" height="356"&gt;&lt;/a&gt;&lt;br&gt;
And add the two lines as shown in the image -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5iMXywln--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyopg9q9x50nk1nruixn.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5iMXywln--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyopg9q9x50nk1nruixn.PNG" alt="Image description" width="880" height="430"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { FormsModule } from '@angular/forms';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; FormsModule
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't forget to add comma before &lt;code&gt;FormsModule&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Lets open the component.html file -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K50tVSXA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ejpw2w4rswvqmv4v0kf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K50tVSXA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ejpw2w4rswvqmv4v0kf.PNG" alt="Image description" width="564" height="191"&gt;&lt;/a&gt;&lt;br&gt;
and paste in the below code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input [(ngModel)]="myMarks" required /&amp;gt;

{{ myMarks }}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;myMarks&lt;/code&gt; variable we already created earlier in this post (and assigned the value 78 to it) in the corresponding TS file.&lt;/p&gt;

&lt;p&gt;So run the application (if not running already) and navigate to the browser. You should see an output like below -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G7NRekjn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqhogl99nwv880gcn9rc.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G7NRekjn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqhogl99nwv880gcn9rc.PNG" alt="Image description" width="277" height="103"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wow! The variable value 78 is already set to the input text box.&lt;br&gt;
The other 78 is coming due to &lt;strong&gt;interpolation&lt;/strong&gt; (it is one way binding). &lt;br&gt;
Now if you change the text box value to something else say &lt;em&gt;95&lt;/em&gt; then you will see that the corresponding 78 also changes to &lt;em&gt;95&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Once the component is displayed the model value is bind to the template and when the template value changes (using the text box) the model also changes. This whole process is two-way-data-binding.&lt;br&gt;
Isn't it amazing???&lt;/p&gt;

&lt;p&gt;Why does this change happens? once you update the text box value to 95 the model (that is the variable &lt;code&gt;myMarks&lt;/code&gt;) also gets updated to 95. Since the model gets updated the interpolated value ( &lt;code&gt;myMarks&lt;/code&gt; written inside double curly braces) also gets updated.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ngModel&lt;/code&gt; does this big process under the hood so smoothly.&lt;/p&gt;

&lt;p&gt;That's the end of built in Angular attribute directives.&lt;br&gt;
If you enjoyed the post please like comment and share.&lt;br&gt;
Coming up the structural directives.&lt;br&gt;
So stay tuned.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cheers&lt;/strong&gt;!!!&lt;br&gt;
&lt;em&gt;Happy Coding&lt;/em&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>directives</category>
    </item>
    <item>
      <title>OSI Model - Explained in detail</title>
      <author>chirag baid</author>
      <pubDate>Wed, 22 Dec 2021 17:48:36 +0000</pubDate>
      <link>https://dev.to/chiragbaid7/osi-model-explained-in-detail-1nl9</link>
      <guid>https://dev.to/chiragbaid7/osi-model-explained-in-detail-1nl9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#osi-model"&gt;
  &lt;/a&gt;
  &lt;strong&gt;OSI Model&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The Open Systems Interconnection (OSI) model is a reference model which provides a standard for different computer systems to be able to communicate with each other using protocols. It splits data communication into seven abstract layers. The modern internet is based on the TCP/IP model which strips away many abstractions from the OSI model. But still, the OSI model is widely used as it helps to analyze and troubleshoot networking problems by breaking any problem into one specific layer.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6mQijkMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvpqrprvkqxch7memrsr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6mQijkMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvpqrprvkqxch7memrsr.jpg" alt="OSI vs TCP/IP model" width="640" height="340"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-physical-layer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Physical Layer&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Devices - Ethernet cables, Optic fiber cables, Network 
interface cards, etc.&lt;/li&gt;
&lt;li&gt;Protocol data unit - Bits.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The physical layer is responsible for carrying bit streams over a physical medium. It defines the encoding of bit streams (0’s and 1’s) to electrical or optical signals in order to transfer data through a transmission medium. It defines the transmission rate - numbers of bits sent per second. For example, wifi drivers in our devices use radio waves to transmit bits in the form of wave frequencies to routers which are then encoded back to binary code to transmit over the physical medium.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q_s5N53a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f0xtsd7fwp2z9gbh6xqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q_s5N53a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f0xtsd7fwp2z9gbh6xqm.png" alt="Physical Layer" width="640" height="338"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-data-link-layer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Data Link Layer&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Devices - Switches, Network interface cards,Access Point, 
etc.&lt;/li&gt;
&lt;li&gt;PDU - Frames.&lt;/li&gt;
&lt;li&gt;Addressing scheme - MAC address.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The data link layer is responsible for moving frames from one node to  another. At the sender’s end, it divides the stream of bits coming from network layer into blocks to form frames and later the frames are encoded into 0’s and 1’s and are transferred to the physical layer. Each frame contains a frame flag and a header. It encapsulates source and destination MAC address in the header. At the receiver’s end, the data link layer assembles all the bits from the physical layer back to frames. The data link layer has 2 sub-layers Logical Link Controller(LLC) that communicates with upper layer networking software and the other one is Media Access Controller(MAC)    which encapsulates sender’s and receiver’s physical addresses.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5kUVJBgm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xiaptjl051lznl2g03pi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5kUVJBgm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xiaptjl051lznl2g03pi.jpg" alt="Frame" width="640" height="340"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data Link Layer is also responsible for flow control to impose a control mechanism to restrict the number of frames or data the sender can send before the data overwhelms the receiver and ensures reliability to the physical layer by  adding a mechanism to detect lost or damaged frames. Each network  interface card  embedded in a networking device has a unique MAC   address to uniquely identify the device. A Switch is a layer 2 device, it only understands MAC addresses and it maintains CAM (Context address  memory) table in its memory to store a mapping of MAC addresses to its  assigned port.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4UOOWspw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zc69jetl0pzyvi7hn7g8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4UOOWspw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zc69jetl0pzyvi7hn7g8.jpg" alt="CAM table" width="640" height="340"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-network-layer"&gt;
  &lt;/a&gt;
  3. &lt;strong&gt;Network Layer&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Devices - Routers, multilayer switch etc.&lt;/li&gt;
&lt;li&gt;PDU - Packets.&lt;/li&gt;
&lt;li&gt;Addressing scheme - IP address.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The network layer is responsible for end to end delivery of a packet from  source to destination. The network layer encapsulates a header with the TCP header coming from the above transport layer. The header includes  IP address of the source and destination machines and other  information. MAC addresses are useful for internal communication to forward frame from one NIC to another whereas IP addresses are used for external communication to transmit packets from one end to the other end.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5x_xIRmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ja8mpn3rd1yx9bswfqbo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5x_xIRmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ja8mpn3rd1yx9bswfqbo.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt; &lt;em&gt;A Router de-encapsulates the received frame and encapsulates next hop’s MAC address in a new frame after reviewing packet's Layer 3 information in its routing table.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Each device connected to the internet is assigned a unique IP address by  the internet service provider. An IPV4 address can be in the form of : &lt;strong&gt;203.0.113.112&lt;/strong&gt;. An IP address has 2 parts the first is network ID to identify  which network the address belongs to and the second is host ID to identify which device the packet belongs to in the subnet. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SO_iqjWP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mkpv7d0aqhqr31ak9j6q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SO_iqjWP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mkpv7d0aqhqr31ak9j6q.jpg" alt="Networks are categorized into different classes" width="640" height="340"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Class A network can connect millions of devices which means &lt;br&gt;
there could be congestion in the network which becomes difficult for a packet to reach to  its destination. This is where a subnet is used where a network divided into two or more networks that efficiently routes a packet to its destination. Router is a Layer 3 device. It maintains routing tables in its database to identify the network ID from the packet’s IP address using subnet mask and forwards it to the assigned interface to reach its destination.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u2Q3jo4J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/shrhttiw6nrbqnf81415.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u2Q3jo4J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/shrhttiw6nrbqnf81415.jpg" alt="Routing table" width="640" height="340"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each entry in the routing table consists of the following entries:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Network ID: The network ID or destination corresponding to the route.&lt;/li&gt;
&lt;li&gt;Subnet Mask: The mask that is used to match a destination IP address to the network ID. &lt;/li&gt;
&lt;li&gt;Next Hop: The IP address to which the packet is forwarded.&lt;/li&gt;
&lt;li&gt;Outgoing Interface: Outgoing interface the packet should go out to reach the destination network.&lt;/li&gt;
&lt;li&gt;Metric: A common use of the metric is to indicate the minimum number of hops (routers crossed) to the network ID.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-transport-layer"&gt;
  &lt;/a&gt;
  4. &lt;strong&gt;Transport Layer&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Devices - Load balancer, firewall, etc.&lt;/li&gt;
&lt;li&gt;PDU - Segments.&lt;/li&gt;
&lt;li&gt;Addressing scheme - Port.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Transport layer is responsible for process to process delivery. Transport layer determines how to deliver data across the network and helps to distinguish data streams.The transport layer encapsulates the header on the payload coming from the application layer. The header contains information like sender and receiver’s port address that helps to identify each application process and contains protocols for communication. A process is a program in execution. Computers run multiple programs at the same time and operate on multiple processes like downloading your favorite movies, playing favorite E-sport game, streaming to spotify and watching Youtube videos on multiple tabs, all these applications create processes and it's the Transport layer’s responsibility to ensure that each  of the arriving packet delivers to the right application process.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4jwn8YpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ritcq9fj0bmvm0u0cblq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4jwn8YpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ritcq9fj0bmvm0u0cblq.gif" alt="Process creation" width="550" height="350"&gt;&lt;/a&gt; &lt;em&gt;For every new application I open on Brave, a new process is created and a random port is assigned to the process by the kernel.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There are popular interprocess communication mechanisms like pipes, sockets and shared memory. Sockets paves the virtual path for inter-process communication between 2 processes in the client server  architecture. It creates an endpoint for communication between two process Each socket address is combined with an IP address and a port number. Sockets are of many types but most commonly used are Stream sockets and Datagram sockets. Stream sockets are implemented by Transmission Control Protocol (TCP), they are created when the application program requires reliability, connection oriented and full duplex communication. A TCP connection is established via three way handshake before sending or receiving packets. Datagram sockets are implemented by User Datagram Protocol (UDP), they are created when application requires unreliable, connectionless and fast delivery communication with minimum overhead.&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WkkKKEYZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl6wpqaxg6os9rhib085.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WkkKKEYZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl6wpqaxg6os9rhib085.jpg" alt="UDP vs TCP header" width="640" height="340"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-session-layer"&gt;
  &lt;/a&gt;
  5. &lt;strong&gt;Session Layer&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The session layer is responsible for establishing, closing and managing sessions between 2 endpoints. The session layer receives encoded encrypted data from the previous layer(presentation layer) and adds session id so the server can identify each client requests because HTTP is a stateless protocol and a TCP connection is terminated after every response. It performs authentication and authorization to secure connections.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-presentation-layer"&gt;
  &lt;/a&gt;
  6. &lt;strong&gt;Presentation Layer&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The presentation layer deals with syntax and semantics of the data shared between two systems. At sender’s side the application layer sends data to presentation layer that performs encoding, encryption and compression. Data encryption is a process of converting a plain text to cipher text. At receiver’s side the data from the transport layer is decoded, decrypted and decompressed. For example objects should be formatted in order toget stored or transmitted across network, so applications developers often stringify objects to JSON, this process of encoding data into series of bytes is called serialization. Although in the TCP/IP reference model the application layer implements services of both presentation and session layer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-application-layer"&gt;
  &lt;/a&gt;
  7. &lt;strong&gt;Application Layer&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The application layer is responsible for providing services to applications to access the network. Any Web application itself is not the part of the application layer but the services that are provided to the end-users using protocols are part of the layer.&lt;/p&gt;

&lt;p&gt;The application layer provides the following main functionalities with the help of application layer protocols:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web surfing - Hypertext Transfer Protocol&lt;/li&gt;
&lt;li&gt;Email - Simple Mail Transfer Protocol &lt;/li&gt;
&lt;li&gt;File transfer - File Transfer Protocol&lt;/li&gt;
&lt;li&gt;Network virtual terminal - Telnet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The HTTP protocol is used to exchange data on the Web. It is the language of the Web. HTTP is not only used to fetch hypertext documents but also PDFs, images, etc. It is a stateless protocol however we store client information in cookies and send it in every request to keep the system stateful and to keep the session alive so the server remembers the client. HTTP relies on TCP services to not lose messages and provide a reliable connection.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V3odtGdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8i0mr6ilac3em67j64cw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V3odtGdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8i0mr6ilac3em67j64cw.gif" alt="3-way handshake" width="556" height="313"&gt;&lt;/a&gt; &lt;em&gt;HTTP GET request is sent only after the application establishes a TCP connection through 3-way handshake successfully.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;REFERENCES&lt;br&gt;
&lt;a href="https://www.cloudflare.com/learning/network-layer/what-is-a-subnet/"&gt;https://www.cloudflare.com/learning/network-layer/what-is-a-subnet/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.man7.org/linux/man-pages/man2/socket.2.html"&gt;https://www.man7.org/linux/man-pages/man2/socket.2.html&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.geeksforgeeks.org/socket-in-computer-network/"&gt;https://www.geeksforgeeks.org/socket-in-computer-network/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=iC86ZhJ6v2Q"&gt;https://www.youtube.com/watch?v=iC86ZhJ6v2Q&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=eNF9z5JNl-A&amp;amp;t=902s"&gt;https://www.youtube.com/watch?v=eNF9z5JNl-A&amp;amp;t=902s&lt;/a&gt;&lt;br&gt;
&lt;a href="https://afteracademy.com/blog/what-is-the-osi-model-and-how-it-works"&gt;https://afteracademy.com/blog/what-is-the-osi-model-and-how-it-works&lt;/a&gt;&lt;br&gt;
&lt;a href="https://afteracademy.com/blog/what-is-the-osi-model-and-how-it-works"&gt;https://afteracademy.com/blog/what-is-the-osi-model-and-how-it-works&lt;/a&gt;&lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=oVVlMqsLdro"&gt;https://www.youtube.com/watch?v=oVVlMqsLdro&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>networking</category>
      <category>computerscience</category>
      <category>programming</category>
    </item>
    <item>
      <title>CUSTOM HOOK concept for beginners </title>
      <author>Turjo Chowdhury</author>
      <pubDate>Wed, 22 Dec 2021 17:39:49 +0000</pubDate>
      <link>https://dev.to/turjoc120/custom-hook-concept-for-beginners-4hk2</link>
      <guid>https://dev.to/turjoc120/custom-hook-concept-for-beginners-4hk2</guid>
      <description>&lt;p&gt;The custom hook is one of the core concepts of react it helps to make the code organized and reusable. We can create a hook with the help of javascript and share the logic from anywhere in the application. When we want to share logic between other components, we can make it to a separate function. Custom hook always starts with “use”. Custom hooks are used to obey the DRY principle. &lt;/p&gt;

&lt;p&gt;An example of custom hooks is like- imagine we have to share the user data into many components so if the user logged in. so here we can create a custom hook with all the login functionality and states with the data and return them from the function so other components can access it. &lt;/p&gt;

&lt;p&gt;So all we have to do is just import and call the function from any component.&lt;br&gt;&lt;br&gt;
so, imagine we have to share the login function and also the information of a user into many components once the user is logged in. &lt;/p&gt;

&lt;p&gt;First of all, we should use the “use” word in the file name it is a convention. Like useLogin then we can write all the logic of a login functionalities into that file and return the states or functions. Then we must export the main function so we can import it from anywhere. &lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>9 C++ commands to kick off your C++ programming journey</title>
      <author>ericaeducative</author>
      <pubDate>Wed, 22 Dec 2021 17:28:09 +0000</pubDate>
      <link>https://dev.to/educative/9-c-commands-to-kick-off-your-c-programming-journey-3i8e</link>
      <guid>https://dev.to/educative/9-c-commands-to-kick-off-your-c-programming-journey-3i8e</guid>
      <description>&lt;p&gt;C++ is a multi-paradigm programming language that gives you incredible flexibility. In order to harness the power of the C++ language, you need to know how to handle commands. Every C++ program is written using commands. Commands are the directives that instruct a computer program on which tasks to perform. &lt;/p&gt;

&lt;p&gt;In this article, we’ll cover nine basic commands to help you get started as a C++ programmer. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We’ll cover:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#commands"&gt;Getting started with C++ commands&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#whatare"&gt;What are commands?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compilers"&gt;C++ compilers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#nine"&gt;9 C++ commands to kick off your C++ programming journey&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#include"&gt;1. &lt;code&gt;#include&lt;/code&gt; &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#define"&gt;2. &lt;code&gt;#define&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using"&gt;3. &lt;code&gt;using&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#main"&gt;4. Main function definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#variable"&gt;5. Variable declaration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#if"&gt;6. &lt;code&gt;if&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cout"&gt;7. &lt;code&gt;cout&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#endl"&gt;8. &lt;code&gt;endl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cin"&gt;9. &lt;code&gt;cin&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#nextsteps"&gt;Wrapping up and next steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-c-commands"&gt;
  &lt;/a&gt;
  Getting started with C++ commands
&lt;/h2&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-commands"&gt;
  &lt;/a&gt;
  What are commands?
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;(Hint: They’re a lot like they sound.)&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;Commands are &lt;strong&gt;directives instructing a computer to perform a certain task&lt;/strong&gt;. Any C++ program operates off source code which consists of a culmination of commands determining your computer’s actions. There are many C++ commands to learn. As you start mastering the basics, you can even create your own C++ commands. &lt;/p&gt;

&lt;p&gt;Commands can take various forms. Both keywords and functions can act as commands. There are also different types of commands. For instance, some commands are called &lt;em&gt;conditional commands,&lt;/em&gt; because they define a condition upon which a certain task should be performed. This article also includes many &lt;em&gt;preprocessing commands&lt;/em&gt;. Preprocessing commands are owned by the &lt;em&gt;preprocessor&lt;/em&gt; rather than the compiler. The preprocessor processes the data and produces an output for use in the compiler. These commands are also known as preprocessor directives and are preceded by the hash sign (&lt;code&gt;#&lt;/code&gt;). &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Conditional compilation commands are helpful because they specify conditions for compilation of part of a program. If those conditions aren’t met, the program can skip unnecessary compilations, saving time and resources. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c-compilers"&gt;
  &lt;/a&gt;
  C++ compilers
&lt;/h3&gt;

&lt;p&gt;If you don’t have a compiler already, you’ll need one to start running C++ code. A compiler is a program that translates your written source code into executable machine code. Compilers are included in applications known as integrated development environments (IDEs) and code or text editors. Your choice of IDE or code editor might depend on your operating system. For instance, Dev-C++ only runs on Windows, while Visual Studio Code runs on Windows, Linux, and macOS. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#9-c-commands-to-kick-off-your-c-programming-journey"&gt;
  &lt;/a&gt;
  9 C++ commands to kick off your C++ programming journey
&lt;/h2&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-raw-include-endraw-"&gt;
  &lt;/a&gt;
  1. &lt;code&gt;#include&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;#include&lt;/code&gt; command tells your preprocessor to include a specified file in the program These files are usually header files from the standard library or a current, user-defined library. Header files contain C++ declarations and macro definitions. Including a header file in your program provides the definitions and declarations you need to use related system calls or libraries. &lt;/p&gt;

&lt;p&gt;There are two types of &lt;code&gt;include&lt;/code&gt; commands, with distinct syntax and uses: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;#include&amp;lt;filename&amp;gt;&lt;/code&gt; 

&lt;ul&gt;
&lt;li&gt;Use this command when including standard files from the standard library. These files contain definitions for pre-defined functions, and they must be included before using functions. For example, I/O functions are contained in an &lt;code&gt;iostream&lt;/code&gt; file in the standard library. As such, you need to include the &lt;code&gt;iostream file&lt;/code&gt; before you use an I/O function such as &lt;code&gt;cout&lt;/code&gt; and &lt;code&gt;cin&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#include "filename"&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Use this command when including user-defined files from the current directory.

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-raw-define-endraw-"&gt;
  &lt;/a&gt;
  2. &lt;code&gt;#define&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;#define&lt;/code&gt; command is used to define macros. A macro is a block of code in a program that is assigned a name. Whenever a defined macro’s name appears in your source code, the compiler will replace it with the block of code you assigned to that macro’s name. Leveraging macros makes the process of writing code less tedious.&lt;/p&gt;

&lt;p&gt;The syntax for the &lt;code&gt;#define&lt;/code&gt; command is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#define macro_name replacement_text
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: No semicolon is needed after a &lt;code&gt;#define&lt;/code&gt; statement. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-raw-using-endraw-"&gt;
  &lt;/a&gt;
  3. &lt;code&gt;using&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;using&lt;/code&gt; command tells your compiler to bring a specified member into a current scope, or a specified base class method or variable into the current class’ scope. The &lt;code&gt;using&lt;/code&gt; keyword is followed by whichever member, class method, or variable needs to be brought into scope.&lt;/p&gt;

&lt;p&gt;For instance, we often see the &lt;code&gt;using&lt;/code&gt; keyword when we’re bringing a namespace such as &lt;code&gt;std&lt;/code&gt; into scope. The syntax for this scenario is the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-main-function-definition"&gt;
  &lt;/a&gt;
  4. Main function definition
&lt;/h3&gt;

&lt;p&gt;Defining the main function requires setting parameters within the parentheses. If no parameters are needed, the parentheses can be empty. You’ll use curly braces &lt;code&gt;{}&lt;/code&gt; to enclose the statements determining your function’s behavior. No semicolon is needed after function definition. &lt;/p&gt;

&lt;p&gt;The general syntax for defining a function is:&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;
&lt;br&gt;
Type Name ( Parameter1,Parameter2, ...) { Statements }&lt;br&gt;
&lt;/center&gt;

&lt;p&gt;The following code shows an example of defining a main function of type &lt;code&gt;int&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;

int main()
{
// function commands
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-variable-declaration"&gt;
  &lt;/a&gt;
  5. Variable declaration
&lt;/h3&gt;

&lt;p&gt;To declare a variable, begin by specifying the variable’s data type, followed by its variable name. &lt;/p&gt;

&lt;p&gt;The following is the syntax for declaring an integer variable &lt;code&gt;x&lt;/code&gt;:&lt;/p&gt;


&lt;center&gt;
&lt;br&gt;
int x&lt;br&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#6-raw-if-endraw-"&gt;
  &lt;/a&gt;
  6. &lt;code&gt;if&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;if&lt;/code&gt; is a conditional command. You’ll follow the &lt;code&gt;if&lt;/code&gt; keyword with a condition. If that condition is met, your compiler will then move on to perform the next task you define (in other words, the &lt;em&gt;then&lt;/em&gt; of your &lt;em&gt;if-then&lt;/em&gt; statement). &lt;/p&gt;

&lt;p&gt;The following example demonstrates the syntax for &lt;code&gt;if&lt;/code&gt;, where $30 &amp;gt; 10$ is the condition upon which the program should display the &lt;code&gt;cout&lt;/code&gt; statement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (30 &amp;gt; 10) {
  cout &amp;lt;&amp;lt; “30 is greater than 10”;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-raw-cout-endraw-"&gt;
  &lt;/a&gt;
  7. &lt;code&gt;cout&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;cout&lt;/code&gt; command is used with an insertion operator or output operator &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;. &lt;code&gt;cout&lt;/code&gt; prints the code following the insertion operator onto the console.&lt;code&gt;cout&lt;/code&gt; is defined in the iostream header file. &lt;/p&gt;

&lt;p&gt;An example of the use of &lt;code&gt;cout&lt;/code&gt; is the following variation of “Hello world”:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;

using namespace std;

int main() {
  cout &amp;lt;&amp;lt; "Hello world, ";
  cout &amp;lt;&amp;lt; "and all who inhabit it!";
}
==&amp;gt; Hello world, and all who inhabit it!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-raw-endl-endraw-"&gt;
  &lt;/a&gt;
  8. &lt;code&gt;endl&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;endl&lt;/code&gt; can be used with &lt;code&gt;cout&lt;/code&gt; to add a new line after text. With this new knowledge, let’s see how we can affect the output of the previous code for &lt;code&gt;cout&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;

using namespace std;

int main() {
  cout &amp;lt;&amp;lt; "Hello world," &amp;lt;&amp;lt; endl;
  cout &amp;lt;&amp;lt; "and all who inhabit it!";
}
==&amp;gt; Hello world, 
==&amp;gt; and all who inhabit it!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-raw-cin-endraw-"&gt;
  &lt;/a&gt;
  9. &lt;code&gt;cin&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;cin&lt;/code&gt; command is used with the extraction operator or input operator &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;. &lt;code&gt;cin&lt;/code&gt; will assign an inputted value to the variable following the extraction operator. You can use &lt;code&gt;cin&lt;/code&gt; after variable declaration, and write a &lt;code&gt;cin&lt;/code&gt; statement to define a value for the variable. When the program runs, the input you’ve entered will be assigned to the variable. &lt;code&gt;cin&lt;/code&gt; is defined in the iostream header file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cin&lt;/code&gt; and &lt;code&gt;cout&lt;/code&gt; are often used together. In the following example, a &lt;code&gt;cout&lt;/code&gt; command displays a message prompting a user to input a value. The &lt;code&gt;cin&lt;/code&gt; command then assigns the value to the variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;

int main() {
  int age;
    cout &amp;lt;&amp;lt; "Enter your age"; // Prompts user to input value
    cin &amp;gt;&amp;gt; age; // Assigns user input to variable age
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up-and-next-steps"&gt;
  &lt;/a&gt;
  Wrapping up and next steps
&lt;/h2&gt;

&lt;p&gt;Congratulations! You now know nine basic C++ commands. There’s so much more to learn. The best way to learn is to practice using these commands in your code. &lt;/p&gt;

&lt;p&gt;To help you hit the ground running as a C++ programmer, Educative has created the &lt;a href="https://www.educative.io/courses/learn-cpp-from-scratch"&gt;&lt;strong&gt;C++ from Scratch&lt;/strong&gt;&lt;/a&gt; course. You’ll find several C++ tutorials and C++ templates. And with a cloud-based IDE, you can practice coding immediately from any computer without installing an IDE or code editor. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#continue-learning-about-c"&gt;
  &lt;/a&gt;
  Continue learning about C++
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/c-is-a-good-first-language-to-learn"&gt;Why C++ is a good first language to learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/how-to-learn-cpp-the-guide-for-beginners"&gt;Learn C++ from scratch: The complete guide for beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.educative.io/blog/learn-cpp-for-2022"&gt;Is C++ still a good language to learn for 2022?&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#start-a-discussion"&gt;
  &lt;/a&gt;
  Start a discussion
&lt;/h3&gt;

&lt;p&gt;Was this guide helpful for you? How have you been starting your C++ programming journey? Let us know in the comments below!&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>cpp</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What is Virtual DOM and how it works?</title>
      <author>Aulad Himel</author>
      <pubDate>Wed, 22 Dec 2021 17:25:04 +0000</pubDate>
      <link>https://dev.to/auladhimel/what-is-virtual-dom-and-how-it-works-3fjn</link>
      <guid>https://dev.to/auladhimel/what-is-virtual-dom-and-how-it-works-3fjn</guid>
      <description>&lt;p&gt;React is a very popular JavaScript library for its performance. It smartly does the work when it comes to handling page updates and data binding. But there are many scenarios behind that performance. Virtual DOM is one of them. When there is a change in UI then the DOM updates and the UI must be re-render. &lt;/p&gt;

&lt;p&gt;This re-rendering is a slow process because CSS is also re-calculated at that time, then the layout must be re-computed, and at the last browser must paint the elements on the screen. For that reason, the concept of Virtual DOM appeared.  Let's understand what is actually Virtual DOM.&lt;/p&gt;

&lt;p&gt;Virtual DOM is something that represents a copy of the actual DOM. React creates a copy of DOM and renders the UI depending on that  DOM. React observes all the changes made in the actual DOM and modifies the virtual DOM only where the changes happened. Then it renders the UI only where the changes happened in the virtual DOM. And the name of this process is diffing. Since the virtual DOM tree is just a JavaScript object that’s why this process is fast.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qD9Gw-jp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0yy2kq4xemtb26zwcac.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qD9Gw-jp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0yy2kq4xemtb26zwcac.png" alt="Image description" width="880" height="589"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure-01: Virtual DOM and Diff Algorithm.&lt;/p&gt;

&lt;p&gt;For doing this comparison React uses the "Diff" algorithm. With this algorithm React can understand where changes have occurred. Then React changes only that part of the DOM where the change was made. In the next step when the real DOM is updated then the updated virtual DOM becomes pre-updated virtual DOM for the next DOM change.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How rendering components work with Virtual DOM?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If we want to do DOM manipulation for simple event like click event at that time we will access the element by using getElementByID(‘id’) method. Here the method will find the element with specific id then it will perform the DOM manipulation. And this is very simple process. But if we have many components in our application and data inside them can be change within couple of seconds then it will be difficult to handle and also it will be time taking task. For overcoming this problem React uses Virtual DOM for DOM manipulation process.&lt;/p&gt;

&lt;p&gt;The whole process of rendering are explained below:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;At first, React will store in the memory the actual DOM before the re-render happens. Here we can call it Real Virtual DOM.&lt;/li&gt;
&lt;li&gt;Then, React will create a new Virtual DOM which will have all the old components and the new changes. React will consider those components as new. Then the new Virtual DOM will be kept separate from the old one and it will change anything of actual DOM.&lt;/li&gt;
&lt;li&gt;In the third stage, it will compare both Virtual DOMs and will find the new change that has to be implemented and the position. And it will happen by using the "Diffing Algorithm" . &lt;/li&gt;
&lt;li&gt;When the change has been noticed then React will remove the old component from the actual DOM. And will set the new component onto the actual DOM. At first the removed component takes &lt;strong&gt;componentWillUnmount()&lt;/strong&gt; lifecycle method which removes it. After that the new component that will be set takes &lt;strong&gt;componentWillMount()&lt;/strong&gt; and &lt;strong&gt;componentDidMount()&lt;/strong&gt; that will bring the component to the UI.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is the process how Virtual DOM works. Since it is taking some crucial steps so it can be time taking process but most of the steps happening regarding Virtual DOM which is mainly objects stored in the memory till last step. So, this is the whole scenario of Virtual DOM and how it helps React in rendering components.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>react</category>
    </item>
    <item>
      <title>Custom domain for your images with ShareX</title>
      <author>Thomas Bnt</author>
      <pubDate>Wed, 22 Dec 2021 17:18:55 +0000</pubDate>
      <link>https://dev.to/thomasbnt/custom-domain-for-your-images-with-sharex-3bmi</link>
      <guid>https://dev.to/thomasbnt/custom-domain-for-your-images-with-sharex-3bmi</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-sharex"&gt;
  &lt;/a&gt;
  What is ShareX?
&lt;/h2&gt;

&lt;p&gt;First, &lt;a href="https://getsharex.com/"&gt;&lt;strong&gt;ShareX&lt;/strong&gt;&lt;/a&gt; is an application available only on Windows.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vyPSV_S5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cm9s4zq6zjmn8u7i3xxe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vyPSV_S5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cm9s4zq6zjmn8u7i3xxe.png" alt="ShareX application on Windows" width="880" height="401"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It allows you to &lt;strong&gt;take screenshots&lt;/strong&gt; and do whatever you want with them afterwards, for example copy the image to the clipboard, upload it to a remote server, or recognize text in the image (OCR).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getsharex.com/screenshots/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hTQy76gB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4k2damklbaqeg0qjl44m.png" alt="ShareX application on Windows" width="846" height="503"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#server-side"&gt;
  &lt;/a&gt;
  Server side
&lt;/h2&gt;

&lt;p&gt;To upload your images, you need to make it request on your server and especially on a file. There are many ways to do this, I opted for a PHP file.&lt;/p&gt;

&lt;p&gt;In my &lt;strong&gt;upload.php&lt;/strong&gt; file, I set the public URLs to &lt;a href="https://i.thomasbnt.dev/i/"&gt;https://i.thomasbnt.dev/i/&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$secret_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"VotreTouteBelleCléPrivéePourUpload"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// The beautiful private key&lt;/span&gt;
&lt;span class="nv"&gt;$sharexdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"i/"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Your folder&lt;/span&gt;
&lt;span class="nv"&gt;$domain_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'https://i.thomasbnt.dev/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Your domain name&lt;/span&gt;
&lt;span class="nv"&gt;$lengthofstring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Width of your output file name. Example : ek6po.png&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;RandomString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;array_merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'z'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;$length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;mt_rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$keys&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'secret'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'secret'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$secret_key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;RandomString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$lengthofstring&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$target_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_FILES&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"sharex"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nv"&gt;$fileType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;pathinfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$target_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;PATHINFO_EXTENSION&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;move_uploaded_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_FILES&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"sharex"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;"tmp_name"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$sharexdir&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$fileType&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$domain_url&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$sharexdir&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$fileType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'File upload failed - CHMOD/Folder doesn\'t exist?'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Invalid Secret Key'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'No post data recieved'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So I'm no good at PHP, I got this piece of code from the Internet (I don't know where exactly, so no source) and it works great. Be &lt;strong&gt;careful with the permissions of your folder&lt;/strong&gt;. Make sure that it can be read and that the folder in question really exists.&lt;/p&gt;

&lt;p&gt;You can read that &lt;strong&gt;you need a key&lt;/strong&gt;, it acts as a password so that only you can upload to your server. If you don't want it, don't put anything.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#client-side-sharex"&gt;
  &lt;/a&gt;
  Client side (ShareX)
&lt;/h2&gt;

&lt;p&gt;On this side, after having correctly installed the application, you must make sure that when you make the screen, it is uploaded to the &lt;strong&gt;remote server&lt;/strong&gt;. This option can be found in &lt;strong&gt;Destinations &amp;gt; Custom upload service settings...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YVCPQIhE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3sbsyb55o2k3scr0ktik.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YVCPQIhE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3sbsyb55o2k3scr0ktik.png" alt="Destinations &amp;gt; Custom upload service setting in ShareX" width="880" height="403"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then enter your values, like the &lt;strong&gt;domain name + folder in POST&lt;/strong&gt;, your &lt;strong&gt;secret key&lt;/strong&gt;, and don't forget to put 'sharex' for the name of the form file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ikpqngHM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pdi3kp3vz0xaj742flsq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ikpqngHM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pdi3kp3vz0xaj742flsq.png" alt="Custom upload service setting in ShareX" width="847" height="566"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Test the settings, and if everything is good, congratulations! You now have your own image host.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;☕&lt;/th&gt;
&lt;th&gt;Check my &lt;a href="https://twitter.com/thomasbnt_"&gt;Twitter account&lt;/a&gt;. You can see many projects and updates. You can also &lt;a href="https://www.buymeacoffee.com/thomasbnt/?via=thomasbnt"&gt;support me on Buy Me a Coffee&lt;/a&gt;.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>sharex</category>
      <category>php</category>
    </item>
    <item>
      <title>Why is PHP's popularity decreasing?</title>
      <author>Logan Lindquist</author>
      <pubDate>Wed, 22 Dec 2021 17:16:20 +0000</pubDate>
      <link>https://dev.to/llbbl/why-is-phps-popularity-decreasing-51oc</link>
      <guid>https://dev.to/llbbl/why-is-phps-popularity-decreasing-51oc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#five-reasons-from-my-perspective"&gt;
  &lt;/a&gt;
  Five reasons from my perspective
&lt;/h2&gt;

&lt;p&gt;Here is my attempt at answering this question that was posted on &lt;a href="https://www.quora.com/Why-is-PHPs-popularity-decreasing/answer/Logan-Lindquist"&gt;Quora&lt;/a&gt;. If you want a much more in-depth answer; the full details are available via post on &lt;a href="https://blog.llbbl.com/why-is-phps-popularity-decreasing-ec13c68202e5"&gt;Medium&lt;/a&gt;. Here I will answer the question using Memes because let's be honest that is the content we are really after. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A choice in languages&lt;/li&gt;
&lt;li&gt;The prevalence of Software Platforms as a Service&lt;/li&gt;
&lt;li&gt;The increase in importance of First Contentful Paint in SEO&lt;/li&gt;
&lt;li&gt;Maintenance is expensive&lt;/li&gt;
&lt;li&gt;An abundance of entry level developers&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#a-choice-in-languages"&gt;
  &lt;/a&gt;
  A Choice in Languages
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Dr1q0dp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oi72i8ms1tkhtrecjpm9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Dr1q0dp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oi72i8ms1tkhtrecjpm9.jpeg" alt="a choice" width="500" height="649"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ZUgIPgq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18aoklcc8m0lcfnx4fbn.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ZUgIPgq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18aoklcc8m0lcfnx4fbn.jpeg" alt="in languages" width="640" height="1199"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-prevalence-of-software-platforms-as-a-service"&gt;
  &lt;/a&gt;
  The Prevalence of Software Platforms as a Service
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--liFcvSso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yn03d8jtwpomlmnzssp9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--liFcvSso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yn03d8jtwpomlmnzssp9.jpeg" alt="no software was the answer" width="675" height="900"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o49wPS6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gg0gaomx4v8w03jracae.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o49wPS6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gg0gaomx4v8w03jracae.jpg" alt="so much sass" width="600" height="327"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-increase-in-importance-of-first-contentful-paint-in%C2%A0seo"&gt;
  &lt;/a&gt;
  The Increase in Importance of First Contentful Paint in SEO
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---vtarQTA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eao373w4ow9zcwki8dgi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---vtarQTA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eao373w4ow9zcwki8dgi.jpg" alt="seo" width="534" height="467"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p0TobRPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfd8zgxtc7yl62buqvkn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p0TobRPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfd8zgxtc7yl62buqvkn.jpg" alt="who knows seo" width="233" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#maintenance-is-expensive"&gt;
  &lt;/a&gt;
  Maintenance is Expensive
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IqjBDK63--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aof627ps6qfost7jxfao.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IqjBDK63--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aof627ps6qfost7jxfao.jpg" alt="it takes a team" width="700" height="700"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QxWXCQlx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86ws1dsj4syzn2qltotn.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QxWXCQlx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86ws1dsj4syzn2qltotn.jpeg" alt="business calls the shots" width="500" height="675"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#an-abundance-of-entry-level-developers"&gt;
  &lt;/a&gt;
  An Abundance of Entry Level Developers
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9131OwSc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/958l489lazcpm8ts4g0g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9131OwSc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/958l489lazcpm8ts4g0g.jpg" alt="entry devs unit tests" width="702" height="395"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oS_hGuH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fdhypantb79icubf1np.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oS_hGuH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fdhypantb79icubf1np.jpg" alt="sigh" width="700" height="477"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>discuss</category>
    </item>
    <item>
      <title>HTML Global Attributes</title>
      <author>elinabey</author>
      <pubDate>Wed, 22 Dec 2021 16:55:37 +0000</pubDate>
      <link>https://dev.to/elinabey/html-global-attributes-1b1d</link>
      <guid>https://dev.to/elinabey/html-global-attributes-1b1d</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VrrS90Uo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fehx145ua537w94aw0b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VrrS90Uo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fehx145ua537w94aw0b.jpg" alt="HTML Global Attributes" width="880" height="440"&gt;&lt;/a&gt;In this tutorial, you will learn Global Attributes which are common for all HTML elements. The global attributes assist by both standard and non-standard elements.&lt;br&gt;
The global attributes can be use with all elements, even it may not have any effect on many elements.&lt;/p&gt;

&lt;p&gt;HTML defines many attributes that are common to all elements. These attributes may be specified on all elements, with some exceptions where it is not suitable. Like &lt;/p&gt; section of the document E.g , &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; etc.
&lt;h2&gt;
  &lt;a href="#html-global-attributes-are"&gt;
  &lt;/a&gt;
  HTML Global Attributes are:
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Attributes&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Contenteditable&lt;/td&gt;
&lt;td&gt;true/false&lt;/td&gt;
&lt;td&gt;It confirm whether the content within an element is editable.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;class&lt;/td&gt;
&lt;td&gt;classname&lt;/td&gt;
&lt;td&gt;It is used to give the class name for the element. It is mostly use with the CSS stylesheet.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;accesskey&lt;/td&gt;
&lt;td&gt;character&lt;/td&gt;
&lt;td&gt;It is used to create keyboard shortcuts for the element.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data-*&lt;/td&gt;
&lt;td&gt;somevalue&lt;/td&gt;
&lt;td&gt;It is used to save element-specific private data that can be retrieve by Javascript.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;contextmenu&lt;/td&gt;
&lt;td&gt;menu_id&lt;/td&gt;
&lt;td&gt;It describe the id for the  element that is used as a context menu  for an element.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;draggable&lt;/td&gt;
&lt;td&gt;true/false/auto&lt;/td&gt;
&lt;td&gt;It defines either the content within an element is portable or not using Drag and Drop API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dropzone&lt;/td&gt;
&lt;td&gt;copy/move/link&lt;/td&gt;
&lt;td&gt;It defines the action is taken on the dragged element when it is dropped, ¬¬ such as whether it is copied, moved or linked.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;It defines a unique id for the element. It can be use with CSS and JavaScript.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;style&lt;/td&gt;
&lt;td&gt;style&lt;/td&gt;
&lt;td&gt;It is used to apply inline CSS to the element.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spellcheck&lt;/td&gt;
&lt;td&gt;true false&lt;/td&gt;
&lt;td&gt;It defines either the content should be checked for spelling errors or not.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;It is used to give the title, or some extra information about the element.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;translate&lt;/td&gt;
&lt;td&gt;yes/no&lt;/td&gt;
&lt;td&gt;It defines whether the content of the element should be translated when the web  page is localized or not.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;I shared this post from &lt;a href="https://softcodeon.com/html/html-global-attributes.htm"&gt;HTML Global Attributes&lt;/a&gt; you can read in detail from there.&lt;/p&gt;

&lt;p&gt;If you have any question please discuss below help to improve. Thank you.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>You're using too much JavaScript</title>
      <author>Nico Zerpa (he/him)</author>
      <pubDate>Wed, 22 Dec 2021 16:47:08 +0000</pubDate>
      <link>https://dev.to/nicozerpa/youre-using-too-much-javascript-4k1b</link>
      <guid>https://dev.to/nicozerpa/youre-using-too-much-javascript-4k1b</guid>
      <description>&lt;p&gt;JavaScript Libraries (or frameworks) like React, Angular or Vue.js have been the main protagonists of web development in recent years. While they are all great pieces of software and solve real problems, we've been relying on them too much, and &lt;strong&gt;we've made the web worse as a result.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The problem is to use too much JavaScript. Of the three core languages on the web (HTML, CSS, and JavaScript), JS might be the most versatile, but it's also &lt;strong&gt;the most expensive for the user, and the most fragile.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A big advantage of HTML and CSS is that they are very tolerant to errors.&lt;/strong&gt; In many cases, when the browser finds errors in HTML or CSS, it can just ignore them and keep displaying the web page. For example, let's see this HTML snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;My name is &lt;span class="nt"&gt;&amp;lt;stronk&amp;gt;&lt;/span&gt;Nico Zerpa&lt;span class="nt"&gt;&amp;lt;/stronk&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, I misspelt the tag name (it should be &lt;code&gt;strong&lt;/code&gt;, not &lt;code&gt;stronk&lt;/code&gt;). However, when I open the page in a browser, the content will appear just fine. Yes, my name won't appear in bold, but the site won't break.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JavaScript doesn't work like that, it's less forgiving when an error occurs.&lt;/strong&gt; And if most of our websites rely heavily on it, an error might mean that the page doesn't work at all.&lt;/p&gt;

&lt;p&gt;Another drawback is that &lt;strong&gt;JavaScript may be slower, especially when the user is using an old or low-range device.&lt;/strong&gt; That's especially true when people try to replicate with JavaScript some functionality that HTML can already do on its own (something that sometimes happens on UI frameworks.)&lt;/p&gt;

&lt;p&gt;When using large libraries, you also have the problem of load times, making the website even slower.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;However, it doesn't mean that you shouldn't use JavaScript at all.&lt;/strong&gt; JavaScript does play an important role in web development.&lt;/p&gt;

&lt;p&gt;Every time you add a new JS library or functionality, think first if it will really improve the user experience. Also, look if there's a way to implement what you want to do with HTML and CSS. Quite often, there are JS-free alternatives.&lt;/p&gt;




&lt;p&gt;If you liked this article, you'll love my JavaScript Newsletter.&lt;br&gt;
Every other Monday, I'll send you easy and actionable steps to level up your JavaScript skills. Check it out: &lt;a href="https://nicozerpa.com/newsletter"&gt;https://nicozerpa.com/newsletter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>My first contribution to prometheus</title>
      <author>Matthew Foley</author>
      <pubDate>Wed, 22 Dec 2021 16:41:41 +0000</pubDate>
      <link>https://dev.to/mtfoley/my-first-contribution-to-prometheus-np1</link>
      <guid>https://dev.to/mtfoley/my-first-contribution-to-prometheus-np1</guid>
      <description>&lt;p&gt;Several weeks ago I joined &lt;a href="https://virtualcoffee.io"&gt;Virtual Coffee&lt;/a&gt;, and I really love that community.  I shared during one of the weekly sessions that I was hoping to learn some more about backend by contributing to open source software.  One of the more seasoned members suggested that I try contributing to &lt;a href="https://github.com/prometheus/prometheus"&gt;prometheus/prometheus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Taken from the description on the repo:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Prometheus, a Cloud Native Computing Foundation project, is a systems and service monitoring system. It collects metrics from configured targets at given intervals, evaluates rule expressions, displays the results, and can trigger alerts when specified conditions are observed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As I started looking at the project issues, I didn't find many good first issues that I personally felt comfortable with, so I decided to take advantage that I had a completely fresh set of eyes on the project! As I followed along with the &lt;a href="https://prometheus.io/docs/prometheus/latest/getting_started/"&gt;Getting Started guide&lt;/a&gt;, something immediately jumped out at me! When opening &lt;code&gt;http://localhost:9090/metrics&lt;/code&gt; and opening the Metrics Explorer, I was presented with a really long list of metrics that I could view the time series data for.  I thought to myself "with such a long list, it would be nice if there was a search field!" I opened an &lt;a href="https://github.com/prometheus/prometheus/issues/9628"&gt;issue&lt;/a&gt; about this, and then a subsequent &lt;a href="https://github.com/prometheus/prometheus/pull/9629"&gt;pull request&lt;/a&gt;. Here's a screenshot of at least the first iteration of what I implemented:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gbRghfZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvc2khzvdo56jql7xv9f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gbRghfZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvc2khzvdo56jql7xv9f.png" alt="screenshot of metrics search feature" width="880" height="283"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This project uses &lt;a href="https://probot.github.io/apps/dco/"&gt;Developer Certificate of Origin (DCO)&lt;/a&gt; as one of the checks it does for PR. This makes sure that all commits are signed off to include the contributors name and email address. I learned the hard way about amending commits and using &lt;code&gt;git commit -s&lt;/code&gt; to sign off commits.&lt;/p&gt;

&lt;p&gt;Beyond that, the reviewer GitHub user @juliusv was very friendly and engaging and asked me to implement the use of Fuzzy search with &lt;a href="https://www.npmjs.com/package/@nexucis/fuzzy"&gt;@nexucis/fuzzy&lt;/a&gt;, which had been used on an adjacent component.  I was also able to add appropriate tests for the new component! &lt;/p&gt;

&lt;p&gt;Since this PR, I've gotten a couple more merged to the project, including some contribution to the &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt; codebase, so I'm starting to dig into the backend side which is what I had wanted to do!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cover image by &lt;a href="https://unsplash.com/@77timon"&gt;Timon Wanner&lt;/a&gt;. Picked it on account of the story of &lt;a href="https://en.wikipedia.org/wiki/Prometheushttps://en.wikipedia.org/wiki/Prometheus"&gt;Prometheus&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>javascript</category>
      <category>react</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Let’s Give Your Realm-Powered Ionic Web App the Native Treatment on iOS and Android!</title>
      <author>Diego Freniche</author>
      <pubDate>Wed, 22 Dec 2021 16:40:34 +0000</pubDate>
      <link>https://dev.to/dfreniche/lets-give-your-realm-powered-ionic-web-app-the-native-treatment-on-ios-and-android-12ln</link>
      <guid>https://dev.to/dfreniche/lets-give-your-realm-powered-ionic-web-app-the-native-treatment-on-ios-and-android-12ln</guid>
      <description>&lt;p&gt;&lt;a href="https://realm.io/"&gt;Realm&lt;/a&gt; is an open-source, easy-to-use local database that helps mobile developers to build better apps, faster. It offers a data synchronization service—MongoDB Realm Sync—that makes it simple to move data between the client and MongoDB Atlas on the back end. Using Realm can save you from writing thousands of lines of code, and offers an intuitive way to work with your data.&lt;/p&gt;

&lt;p&gt;The Ionic team posted a fantastic article on how you can &lt;a href="https://ionicframework.com/blog/ionic-react-and-realm/"&gt;use Ionic with Realm to build a React Web app&lt;/a&gt; quickly, taking advantage of Realm to easily persist your data in a MongoDB Atlas Database.&lt;/p&gt;

&lt;p&gt;After &lt;a href="https://github.com/mhartington/ionic-realm-demo"&gt;cloning the repo&lt;/a&gt; and running &lt;code&gt;ionic serve&lt;/code&gt;, you'll have a really simple task management web application. You can register (using any user/password combination, Realm takes care of your onboarding needs). You can log in, have a look at your tasks, and add new tasks.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Login in the Web App&lt;/th&gt;
&lt;th&gt;Browsing Tasks&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KAp3EnB3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_login_web_44095db30a.png" alt="Login window asking for user and password running in a browser. There’s a Login and Register button." width="857" height="1003"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Xj20MUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_tasks_web_98bd9784b2.png" alt="Tasks already entered in the app, one for “Do the dishes”, another for “Finish post about Ionic / Realm” and last one “Install Ionic app running Realm in iOS”" width="857" height="1003"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Let’s build on what the Ionic team created for the web, and expand it by building a mobile app for iOS and Android using one of the best features Ionic has: the &lt;em&gt;“Write Once, Run Anywhere”&lt;/em&gt; approach to coding. I’ll start with an iOS app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;To follow along this post, you’ll need five things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A macOS-powered computer running Xcode (to develop for iOS). I’m using Xcode 13 Beta. You don’t have to risk your sanity.&lt;/li&gt;
&lt;li&gt;Ionic installed. You can follow the instructions &lt;a href="https://ionicframework.com/docs/intro/cli"&gt;here&lt;/a&gt;, but TL;DR it’s &lt;code&gt;npm install -g @ionic/cli&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Clone the &lt;a href="https://docs.mongodb.com/realm/tutorial/realm-app/"&gt;repo with the Ionic React Web App&lt;/a&gt; that we’ll turn into mobile.&lt;/li&gt;
&lt;li&gt;As we need an Atlas Database to store our data in the cloud, and a Realm app to make it easy to work with Atlas from mobile, set up a Free Forever MongoDB cluster and &lt;a href="https://docs.mongodb.com/realm/tutorial/realm-app/"&gt;create and import a Realm app schema&lt;/a&gt; so everything is ready server-side.&lt;/li&gt;
&lt;li&gt;Once you have your Realm app created, copy the Realm app ID from the MongoDB admin interface for Realm, and paste it into &lt;code&gt;src/App.tsx&lt;/code&gt;, in the line:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;export const APP_ID = '&amp;lt;Put your Realm App Id here&amp;gt;';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once your &lt;code&gt;APP_ID&lt;/code&gt; is set, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm run build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-ios-app"&gt;
  &lt;/a&gt;
  The iOS app
&lt;/h2&gt;

&lt;p&gt;To add iOS capabilities to our existing app, we need to open a terminal and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ionic cap add ios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create the iOS Xcode Project native developers know and love, with the code from our Ionic app. I ran into a problem doing that and it was that the version of Capacitor used in the repo was 3.1.2, but for iOS, I needed at least 3.2.0. So, I just changed &lt;code&gt;package.json&lt;/code&gt; and ran &lt;code&gt;npm install&lt;/code&gt; to update Capacitor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt; fragment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
"dependencies": {

    "@apollo/client": "^3.4.5",
    "@capacitor/android": "3.2.2",
    "@capacitor/app": "1.0.2",
    "@capacitor/core": "3.2.0",
    "@capacitor/haptics": "1.0.2",
    "@capacitor/ios": "3.2.2",
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have a new &lt;code&gt;ios&lt;/code&gt; directory. If we enter that folder, we’ll see an &lt;code&gt;App&lt;/code&gt; directory that has a CocoaPods-powered iOS app. To run this iOS app, we need to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Change to that directory with &lt;code&gt;cd ios&lt;/code&gt;. You’ll find an &lt;code&gt;App&lt;/code&gt; directory. &lt;code&gt;cd App&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Install all CocoaPods with &lt;code&gt;pod repo update &amp;amp;&amp;amp; pod install&lt;/code&gt;, as usual in a native iOS project. This updates all libraries’ caches for CocoaPods and then installs the required libraries and dependencies in your project.&lt;/li&gt;
&lt;li&gt;Open the generated &lt;code&gt;App.xcworkspace&lt;/code&gt; file with Xcode. From Terminal, you can just type &lt;code&gt;open App.xcworkspace&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run the app from Xcode.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Login in the iOS App&lt;/th&gt;
&lt;th&gt;Browsing Tasks&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a6sfiFJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_login_ios_21fa1f7446.png" alt="Login screen in iOS asking for user and password running in a browser. There’s a Login and Register button." width="880" height="1904"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fP6L1NOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_tasks_ios_04d29ff898.png" alt="Tasks already entered in the iOS app, one for “Do the dishes”, another for “Finish post about Ionic / Realm” and last one “Install Ionic app running Realm in iOS”" width="880" height="1904"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;That’s it. Apart from updating Capacitor, we only needed to run one command to get our Ionic web project running on iOS!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-android-app"&gt;
  &lt;/a&gt;
  The Android App
&lt;/h2&gt;

&lt;p&gt;How hard can it be to build our Ionic app for Android now that we have done it for iOS? Well, it turns out to be super-simple. Just &lt;code&gt;cd&lt;/code&gt; back to the root of the project and type in a terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; ionic cap android
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create the Android project. Once has finished, launch your app using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ionic capacitor run android -l --host=10.0.1.81
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, &lt;code&gt;10.0.1.81&lt;/code&gt; is my own IP address. As you can see, if you have more than one Emulator or even a plugged-in Android phone, you can select where you want to run the Ionic app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SMyBFSAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_terminal_f3e08bace5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SMyBFSAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_terminal_f3e08bace5.png" alt="before running the Android App we can choose the Emulator where it will run." width="880" height="251"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once running, you can register, log in, and add tasks in Android, just like you can do in the web and iOS apps.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Adding a task in Android&lt;/th&gt;
&lt;th&gt;Browsing Tasks in Android&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OxuKkLjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_android_add_7040b32898.png" alt="Adding a new task screen from Android, with “New Task from Android” typed in." width="880" height="1809"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2oCgRnTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_android_tasks_7ee2c9c1bc.png" alt="Tasks already entered in the Android app, one for “Do the dishes”, another for “Finish post about Ionic / Realm”, “Install Ionic app running Realm in iOS” and “New Task from Android”" width="880" height="1809"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;The best part is that thanks to the synchronization happening in the MongoDB Realm app, every time we add a new task locally, it gets uploaded to the cloud to a MongoDB Atlas database behind the scenes. And &lt;strong&gt;all other apps accessing the same MongoDB Realm app can show that data&lt;/strong&gt;! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L3LeyMU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_three_apps_1a7dbfbd05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L3LeyMU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_three_apps_1a7dbfbd05.png" alt="thanks to Ionic and Realm, Web, iOS and Android access the same data using the same code base." width="880" height="633"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automatically-refreshing-tasks"&gt;
  &lt;/a&gt;
  Automatically refreshing tasks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.mongodb.com/realm/sdk/"&gt;Realm SDKs&lt;/a&gt; are well known for their syncing capabilities. You change something in the server, or in one app, and other users with access to the same data will see the changes almost immediately. You don’t have to worry about invalidating caches, writing complex networking/multithreading code that runs in the background, listening to silent push notifications, etc. MongoDB Realm takes care of all that for you.&lt;/p&gt;

&lt;p&gt;But in this example, we access data using the &lt;a href="https://docs.mongodb.com/realm/web/graphql-apollo-react/"&gt;Apollo GraphQL Client&lt;/a&gt; for React. Using this client, we can log into our Realm app and run GraphQL Queries—although as designed for the web, we don’t have access to the hard drive to store a .realm file. It’s just a simpler way to use the otherwise awesome &lt;a href="https://www.apollographql.com/docs/react/"&gt;Apollo GraphQL Client&lt;/a&gt; with Realm, so we don’t have synchronization implemented. But luckily, Apollo GraphQL queries can automatically refresh themselves just passing a &lt;code&gt;pollInterval&lt;/code&gt; argument. I told you it was awesome. You set the time interval in milliseconds to refresh the data.&lt;/p&gt;

&lt;p&gt;So, in &lt;code&gt;useTasks.ts&lt;/code&gt;, our function to get all tasks will look like this, auto-refreshing our data every half second.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;useAllTasksInProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="nx"&gt;gql&lt;/span&gt;&lt;span class="s2"&gt;`
     query GetAllTasksForProject($partition: String!) {
       tasks(query: { _partition: $partition }) {
         _id
         name
         status
       }
     }
   `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;partition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;partition&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="na"&gt;pollInterval&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Failed to fetch tasks: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="c1"&gt;// If the query has finished, return the tasks from the result data&lt;/span&gt;
 &lt;span class="c1"&gt;// Otherwise, return an empty list&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tasks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;tasks&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---zSnHp-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_sync_add_task_cd8ec70ccc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---zSnHp-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_sync_add_task_cd8ec70ccc.gif" alt="Now we can sync our actions. Adding a task in the Android Emulator gets propagated to the iOS and Web versions" width="640" height="391"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pull-to-refresh"&gt;
  &lt;/a&gt;
  Pull to refresh
&lt;/h2&gt;

&lt;p&gt;Adding automatic refresh is nice, but in mobile apps, we’re used to also refreshing lists of data just by pulling them. To get this, we’ll need to add the Ionic component &lt;code&gt;IonRefresher&lt;/code&gt; to our Home component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;IonPage&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;IonHeader&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonToolbar&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;IonTitle&amp;gt;&lt;/span&gt;Tasks&lt;span class="nt"&gt;&amp;lt;/IonTitle&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;IonButtons&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"end"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;IonButton&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;{addNewTask}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;IonIcon&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"icon-only"&lt;/span&gt; &lt;span class="na"&gt;icon=&lt;/span&gt;&lt;span class="s"&gt;{add}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/IonIcon&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;/IonButton&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/IonButtons&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/IonToolbar&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/IonHeader&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;IonContent&lt;/span&gt; &lt;span class="na"&gt;fullscreen&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonRefresher&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"fixed"&lt;/span&gt; &lt;span class="na"&gt;onIonRefresh=&lt;/span&gt;&lt;span class="s"&gt;{doRefresh}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;IonRefresherContent&amp;gt;&amp;lt;/IonRefresherContent&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/IonRefresher&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonHeader&lt;/span&gt; &lt;span class="na"&gt;collapse=&lt;/span&gt;&lt;span class="s"&gt;"condense"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;IonToolbar&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;IonTitle&lt;/span&gt; &lt;span class="na"&gt;size=&lt;/span&gt;&lt;span class="s"&gt;"large"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Tasks&lt;span class="nt"&gt;&amp;lt;/IonTitle&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/IonToolbar&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/IonHeader&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonList&amp;gt;&lt;/span&gt;
         {loading ? &lt;span class="nt"&gt;&amp;lt;IonLoading&lt;/span&gt; &lt;span class="na"&gt;isOpen=&lt;/span&gt;&lt;span class="s"&gt;{loading}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; : null}
         {tasks.map((task: any) =&amp;gt; (
           &lt;span class="nt"&gt;&amp;lt;TaskItem&lt;/span&gt; &lt;span class="na"&gt;key=&lt;/span&gt;&lt;span class="s"&gt;{parseInt(task._id)}&lt;/span&gt; &lt;span class="err"&gt;{...&lt;/span&gt;&lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/TaskItem&amp;gt;&lt;/span&gt;
         ))}
       &lt;span class="nt"&gt;&amp;lt;/IonList&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/IonContent&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/IonPage&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can see, an &lt;code&gt;IonRefresher&lt;/code&gt; component will add the pull-to-refresh functionality with an included loading indicator tailored for each platform.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;IonRefresher&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"fixed"&lt;/span&gt; &lt;span class="na"&gt;onIonRefresh=&lt;/span&gt;&lt;span class="s"&gt;{doRefresh}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;IonRefresherContent&amp;gt;&amp;lt;/IonRefresherContent&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/IonRefresher&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To refresh, we call &lt;code&gt;doRefresh&lt;/code&gt; and there, we just reload the whole page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doRefresh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;CustomEvent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;RefresherEventDetail&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reload&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// reload the whole page&lt;/span&gt;
   &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// we signal the loading indicator to hide&lt;/span&gt;
 &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deleting-tasks"&gt;
  &lt;/a&gt;
  Deleting tasks
&lt;/h2&gt;

&lt;p&gt;Right now, we can swipe tasks from right to left to change the status of our tasks. But I wanted to also add a left to right swipe so we can delete tasks. We just need to add the swiping control to the already existing &lt;code&gt;IonItemSliding&lt;/code&gt; control. In this case, we want a swipe from the &lt;em&gt;start&lt;/em&gt; of the control. This way, we avoid any ambiguities with right-to-left vs. left-to-right languages. When the user taps on the new “Delete” button (which will appear red as we’re using the &lt;em&gt;danger&lt;/em&gt; color), &lt;code&gt;deleteTaskSelected&lt;/code&gt; is called.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;IonItemSliding&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;{slidingRef}&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;{'status-'&lt;/span&gt; &lt;span class="err"&gt;+&lt;/span&gt; &lt;span class="na"&gt;task.status&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;IonItem&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonLabel&amp;gt;&lt;/span&gt;{task.name}&lt;span class="nt"&gt;&amp;lt;/IonLabel&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/IonItem&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;IonItemOptions&lt;/span&gt; &lt;span class="na"&gt;side=&lt;/span&gt;&lt;span class="s"&gt;"end"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonItemOption&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;{toggleStatus}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Status&lt;span class="nt"&gt;&amp;lt;/IonItemOption&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/IonItemOptions&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;IonItemOptions&lt;/span&gt; &lt;span class="na"&gt;side=&lt;/span&gt;&lt;span class="s"&gt;"start"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonItemOption&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;{deleteTaskSelected}&lt;/span&gt; &lt;span class="na"&gt;color=&lt;/span&gt;&lt;span class="s"&gt;"danger"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Delete&lt;span class="nt"&gt;&amp;lt;/IonItemOption&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/IonItemOptions&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/IonItemSliding&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To delete the task, we use a GraphQL mutation defined in &lt;code&gt;useTaskMutations.ts&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deleteTaskSelected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;slidingRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// close sliding menu&lt;/span&gt;
   &lt;span class="nx"&gt;deleteTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="c1"&gt;// delete task&lt;/span&gt;
 &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pAy9H8tn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_delete_184d02206d.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pAy9H8tn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_delete_184d02206d.gif" alt="Deleting can be done with a Swipe. Here we show how it's been done in the Android Emulator and changes appear in the iOS Simulator and Web page" width="640" height="377"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap
&lt;/h2&gt;

&lt;p&gt;In this post, we’ve seen how easy it is to start with an Ionic React web application and, with only a few lines of code, turn it into a mobile app running on iOS and Android. Then, we easily added some functionality to the three apps at the same time. Ionic makes it super simple to run your Realm-powered apps everywhere!&lt;/p&gt;

&lt;p&gt;You can check out the code from this post &lt;a href="https://github.com/mongodb-developer/ionic-realm-demo/tree/observe-changes"&gt;in this branch&lt;/a&gt; of the &lt;a href="https://github.com/mongodb-developer/ionic-realm-demo"&gt;repo&lt;/a&gt;, just by typing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git clone https://github.com/mongodb-developer/ionic-realm-demo
$ git checkout observe-changes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But this is not the only way to integrate Realm in your Ionic apps. Using Capacitor and our native SDKs, we’ll show you how to use Realm from Ionic in a future follow-up post. &lt;/p&gt;

</description>
      <category>ionic</category>
      <category>realm</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Unicode</title>
      <author>Zoran Luledzija</author>
      <pubDate>Wed, 22 Dec 2021 16:37:26 +0000</pubDate>
      <link>https://dev.to/localizely/unicode-3kp7</link>
      <guid>https://dev.to/localizely/unicode-3kp7</guid>
      <description>&lt;p&gt;&lt;a href="https://home.unicode.org/"&gt;Unicode&lt;/a&gt; is an international character encoding standard. It provides a unique number (code point) for every character, no matter what the platform, program, or language is. Furthermore, it represents the most commonly used encoding today.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ascii"&gt;
  &lt;/a&gt;
  ASCII
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ASCII&lt;/strong&gt; (American Standard Code for Information Interchange) is one of the first widely used character encoding standards. People from the telecommunication and computing industries in America created it during the 1960s. As a 7-bit coding system, it supported 128 (i.e. 2⁷) characters, 96 printing characters, and 32 control characters. That was sufficient to encode numbers, some special characters, and the letters of the English alphabet.&lt;/p&gt;

&lt;p&gt;However, the spread of computing and the Internet has created a need for other characters as well. As computers used 8-bit bytes, some manufacturers decided to use the remaining 8th bit in the ASCII code and thus expand the number of characters to 256. This 8-bit encoding is often referred to as “&lt;strong&gt;Extended ASCII&lt;/strong&gt;” or “&lt;strong&gt;8-bit ASCII&lt;/strong&gt;“. With the growth of different 8-bit encoders, data exchange became complicated and error-prone. That was a sign that it was necessary to find some universal solution that would work for all languages and cover all the special characters.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unicode"&gt;
  &lt;/a&gt;
  Unicode
&lt;/h2&gt;

&lt;p&gt;Unicode provides a unique code for every character, in every language, in every program, on every platform. It enables a single document to contain text from different writing systems, which was nearly impossible with earlier native encodings. Moreover, Unicode supports emojis, which are an indispensable part of communication today.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unicode-transformation-formats"&gt;
  &lt;/a&gt;
  Unicode Transformation Formats
&lt;/h3&gt;

&lt;p&gt;Unicode defines several transformation formats, also known as &lt;strong&gt;UTF&lt;/strong&gt;s (Unicode Transformation Formats). These transformation formats define how each code is represented in bits in memory. Below is a brief overview of the three UTFs that Unicode Standard provides.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;UTF-8

&lt;ul&gt;
&lt;li&gt;variable-length character encoding that uses from 1 to 4 bytes (from 8 to 32 bits)&lt;/li&gt;
&lt;li&gt;backward compatible with ASCII&lt;/li&gt;
&lt;li&gt;the most common encoding on the web (~98% of all web pages)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;UTF-16

&lt;ul&gt;
&lt;li&gt;variable-length character encoding that uses 2 or 4 bytes (16 or 32 bits)&lt;/li&gt;
&lt;li&gt;internally used by Microsoft Windows, Java, JavaScript, etc.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;UTF-32

&lt;ul&gt;
&lt;li&gt;fixed length character encoding that uses 4 bytes (32 bits)&lt;/li&gt;
&lt;li&gt;faster to operate but uses more memory and wastes a lot of bandwidth&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;Thanks to Unicode, today's software runs on a variety of languages and platforms. That was hard to imagine a few decades ago. In other words, today's software localization would be impossible without such an encoding standard.&lt;/p&gt;

&lt;p&gt;More details regarding Unicode you can find in the &lt;a href="https://localizely.com/blog/unicode/"&gt;original post&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>software</category>
      <category>encoding</category>
      <category>i18n</category>
    </item>
  </channel>
</rss>
