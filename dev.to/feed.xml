<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Add Typescript, TailwindCSS, and ESlint to your Next.js app</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Mon, 23 Aug 2021 06:42:35 +0000</pubDate>
      <link>https://dev.to/avneesh0612/add-typescript-tailwindcss-and-eslint-to-your-next-js-app-5cm0</link>
      <guid>https://dev.to/avneesh0612/add-typescript-tailwindcss-and-eslint-to-your-next-js-app-5cm0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#setting-up-the-app"&gt;
  &lt;/a&gt;
  Setting up the app
&lt;/h2&gt;

&lt;p&gt;Creating a Next.js app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-next-app next-tailwind-ts-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Starting the app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn dev # yarn
npm run dev # npm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open  &lt;a href="http://localhost:3000/"&gt;localhost:3000&lt;/a&gt; in your browser and you will be able to see a starter template of a Next.js app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Z7Eb6bU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629529571943/3EVvZ0y57.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Z7Eb6bU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629529571943/3EVvZ0y57.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cleanup"&gt;
  &lt;/a&gt;
  Cleanup
&lt;/h3&gt;

&lt;p&gt;Delete everything under the Head tag until the footer like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import Head from "next/head";

export default function Home() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;Head&amp;gt;
        &amp;lt;title&amp;gt;Create Next App&amp;lt;/title&amp;gt;
        &amp;lt;meta name="description" content="Generated by create next app" /&amp;gt;
        &amp;lt;link rel="icon" href="/favicon.ico" /&amp;gt;
      &amp;lt;/Head&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give you a clean canvas.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#typescript"&gt;
  &lt;/a&gt;
  Typescript
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-typescript"&gt;
  &lt;/a&gt;
  What is  &lt;a href="https://www.typescriptlang.org"&gt;Typescript&lt;/a&gt;?
&lt;/h3&gt;

&lt;p&gt;TypeScript is a strongly typed programming language that builds on JavaScript giving you better tooling at any scale. It also provides better IntelliSense and fewer bugs in your app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-typescript-to-the-app"&gt;
  &lt;/a&gt;
  Add Typescript to the app
&lt;/h3&gt;

&lt;p&gt;Install the dependencies needed-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; yarn add --dev typescript @types/react # yarn
 npm i -D typescript @types/react # npm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a &lt;code&gt;tsconfig.json&lt;/code&gt; file in the root of the project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now cut the terminal running the app and restart the terminal&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn dev # yarn
npm run dev # npm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After you restart the server you should see this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n81op3IU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629529715508/vNgqzxKFE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n81op3IU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629529715508/vNgqzxKFE.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have some experience with typescript then I would recommend you setting strict mode to true in &lt;code&gt;tsconfig.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; "strict": true,
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To use Typescript you need to change the file extension from &lt;code&gt;.js&lt;/code&gt; to &lt;code&gt;.tsx&lt;/code&gt;.&lt;br&gt;
I am going to change &lt;code&gt;index.js&lt;/code&gt; to &lt;code&gt;index.tsx&lt;/code&gt; and &lt;code&gt;_app.js&lt;/code&gt; to &lt;code&gt;_app.tsx&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;_app.tsx&lt;/code&gt; you will see an error similar to this that the props have a type of any&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FcUVgVuH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629530068648/Ttag5u33g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FcUVgVuH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629530068648/Ttag5u33g.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So add the type of AppProps and import it from "next/app"&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { AppProps } from "next/app";
import "../styles/globals.css";

function MyApp({ Component, pageProps }: AppProps) {
  return &amp;lt;Component {...pageProps} /&amp;gt;;
}

export default MyApp;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can use Typescript in your app 🎉.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwindcss"&gt;
  &lt;/a&gt;
  TailwindCSS
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-tailwindcss"&gt;
  &lt;/a&gt;
  What is  &lt;a href="https://tailwindcss.com"&gt;TailwindCSS&lt;/a&gt;?
&lt;/h3&gt;

&lt;p&gt;Tailwind is a CSS framework that helps you build websites very fast, without leaving your HTML.&lt;/p&gt;

&lt;p&gt;I have been using Tailwind for quite a while now and would highly recommend you all trying it out.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-tailwind-to-the-app"&gt;
  &lt;/a&gt;
  Adding Tailwind to the app
&lt;/h3&gt;

&lt;p&gt;Installing the dependencies -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add -D tailwindcss@latest postcss@latest autoprefixer@latest # yarn
npm install -D tailwindcss@latest postcss@latest autoprefixer@latest # npm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Generating the config files -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx tailwindcss init -p
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will generate &lt;code&gt;tailwind.config.js&lt;/code&gt; and &lt;code&gt;postcss.config.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Adding the files to purge through&lt;br&gt;
Replace the purge in &lt;code&gt;tailwind.config.js&lt;/code&gt; with this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  purge: ["./pages/**/*.{js,ts,jsx,tsx}", "./components/**/*.{js,ts,jsx,tsx}"],
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change your globals.css&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@tailwind base;
@tailwind components;
@tailwind utilities;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WyDuFdTP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/EbkaRJGMrdwAAAAM/as-usual-normal-thing.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WyDuFdTP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/EbkaRJGMrdwAAAAM/as-usual-normal-thing.gif" alt="As usual"&gt;&lt;/a&gt;&lt;br&gt;
You need to restart the server&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn dev # yarn
npm run dev # npm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Testing if it works-&lt;br&gt;
In &lt;code&gt;index.tsx&lt;/code&gt; I am going to create a centered hello world text with tailwind stylings&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import Head from "next/head";

export default function Home() {
  return (
    &amp;lt;div className="w-screen h-screen flex justify-center items-center"&amp;gt;
      &amp;lt;Head&amp;gt;
        &amp;lt;title&amp;gt;Create Next App&amp;lt;/title&amp;gt;
        &amp;lt;meta name="description" content="Generated by create next app" /&amp;gt;
        &amp;lt;link rel="icon" href="/favicon.ico" /&amp;gt;
      &amp;lt;/Head&amp;gt;
      &amp;lt;h1 className="text-5xl font-bold"&amp;gt;Hello world&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Zk93ofJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629531552462/X3UdTBPse.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Zk93ofJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629531552462/X3UdTBPse.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cu2goEK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/7daGnHQsteMjQHVQKi/200.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cu2goEK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/7daGnHQsteMjQHVQKi/200.gif" alt="It worked"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#eslint"&gt;
  &lt;/a&gt;
  ESLint
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-eslint-"&gt;
  &lt;/a&gt;
  What is  &lt;a href="https://eslint.org"&gt;ESLint&lt;/a&gt; ?
&lt;/h3&gt;

&lt;p&gt;Linting tools like ESLint allow developers to discover problems with their JavaScript code without executing it. The primary reason ESLint was created was to allow developers to create their own linting rules. ESLint is designed to have all rules completely pluggable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-add-eslint"&gt;
  &lt;/a&gt;
  Let's add ESLint
&lt;/h3&gt;

&lt;p&gt;Add this line inside scripts in &lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; "lint": "next lint"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are all the scripts in &lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
     "lint": "next lint"
  },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn lint # yarn
npm run lint # npm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After running this you will see a dropdown asking "How would you like to configure ESLint?". Just let it be the default one and then it will take some time to install the dependencies.&lt;/p&gt;

&lt;p&gt;Now we have ESLint ready in our app 🥳.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Checking for the linter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are using bad practices in your code then it would highlight it with a yellow underline. For example, if I use the normal image instead of Next Image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4nT0SQUm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629532528200/mz-ra1z7u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4nT0SQUm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629532528200/mz-ra1z7u.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9AX2tWb1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/NzeJJic0gjUaw8FoVV/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9AX2tWb1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/NzeJJic0gjUaw8FoVV/giphy.gif" alt="Congrats"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You have successfully added Typescript, TailwindCSS, and ESlint to your Next.js app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links -&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/avneesh0612/tailwind-ts-eslint"&gt;Github repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextjs.org"&gt;Nextjs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.typescriptlang.org"&gt;Typescript&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com/"&gt;TailwindCSS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://eslint.org/"&gt;ESlint&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://avneesh-links.vercel.app/"&gt;All socials&lt;/a&gt;&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>tailwindcss</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>How to exclude stylesheets from the bundle and lazy load them in Angular?</title>
      <author>Dharmen Shah</author>
      <pubDate>Mon, 23 Aug 2021 05:35:51 +0000</pubDate>
      <link>https://dev.to/shhdharmen/how-to-exclude-stylesheets-from-the-bundle-and-lazy-load-them-in-angular-3kcf</link>
      <guid>https://dev.to/shhdharmen/how-to-exclude-stylesheets-from-the-bundle-and-lazy-load-them-in-angular-3kcf</guid>
      <description>&lt;p&gt;We will try to understand this by taking example of multiple themes support.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#multiple-theme-files"&gt;
  &lt;/a&gt;
  Multiple theme files
&lt;/h2&gt;

&lt;p&gt;Let’s assume that apart from main &lt;em&gt;styles.css&lt;/em&gt; file, you have 2 theme files present:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;src/styles/themes/theme-light.css&lt;/li&gt;
&lt;li&gt;src/styles/themes/theme-dark.css&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Next, you would have them in &lt;code&gt;angular.json&lt;/code&gt;’s styles option:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"styles"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"src/styles.css"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"src/styles/themes/theme-light.css"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"src/styles/themes/theme-dark.css"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And lastly, you would handle loading of a particular theme based on the users’ choice or their preferences.&lt;/p&gt;

&lt;p&gt;Everything works great, but both of your theme files are part of your application bundle all the time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exclude-theme-files"&gt;
  &lt;/a&gt;
  Exclude theme files
&lt;/h2&gt;

&lt;p&gt;Let’s make a minor change in angular.json to exclude theme files from bundle:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"styles"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"src/styles.css"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"input"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"src/styles/themes/theme-light.css"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"inject"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"bundleName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"theme-light"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"input"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"src/styles/themes/theme-dark.css"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"inject"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"bundleName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"theme-dark"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Two new options to learn here:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;inject&lt;/code&gt;&lt;/strong&gt;: Setting this false will not include the file from “input” path in bundle&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;bundleName&lt;/code&gt;&lt;/strong&gt;: A separate bundle will be created containing the stylesheet from “input” path&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now if you try to build the project, it will create separate files and the output will look something like below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dUhLwPXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/6831283/128328453-e6b500d3-a509-4899-8560-3babe6b881b1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dUhLwPXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/6831283/128328453-e6b500d3-a509-4899-8560-3babe6b881b1.png" alt="output of npm run build command"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice that &lt;code&gt;theme-light.css&lt;/code&gt; and &lt;code&gt;theme-dark.css&lt;/code&gt; are part of &lt;strong&gt;Lazy Chunk Files&lt;/strong&gt;. Lazy chunk files speed up the application load time, because they are loaded on demand.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lazy-load-theme-files"&gt;
  &lt;/a&gt;
  Lazy load theme files
&lt;/h2&gt;

&lt;p&gt;We managed to exclude them from the bundle and they are externally available. Now the question arises how to load these theme files?&lt;/p&gt;

&lt;p&gt;One way to load them is to use their bundle directly with a link tag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;
  &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;
  &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"theme-dark.css"&lt;/span&gt;
  &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(prefers-color-scheme: dark)"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;
  &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;
  &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"them-light.css"&lt;/span&gt;
  &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(prefers-color-scheme: light)"&lt;/span&gt;
&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will maybe need to tweak the document base URL using &lt;code&gt;base&lt;/code&gt; tag to successfully load them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We learnt that we can exclude stylesheets by simply setting &lt;code&gt;inject&lt;/code&gt; false in workspace configuration file, i.e. &lt;code&gt;angular.json&lt;/code&gt;. And to load them on demand, we will use the &lt;code&gt;bundleName&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;The advantage of excluding stylesheets from the bundle is reduced bundle size, which will in turn improve the initial load time of application and finally user experience will be better.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>webdev</category>
      <category>bundling</category>
      <category>stylesheets</category>
    </item>
    <item>
      <title>Make VSCode Lighter</title>
      <author>Git Tricks</author>
      <pubDate>Mon, 23 Aug 2021 04:36:12 +0000</pubDate>
      <link>https://dev.to/git_tricks/make-vscode-lighter-2g3i</link>
      <guid>https://dev.to/git_tricks/make-vscode-lighter-2g3i</guid>
      <description>&lt;p&gt;VSCode is a really great Code Editor rather say nearly an IDE or better than that. But this costs a great amount of RAM and CPU in bigger projects. That's not all related VSCode but to most of its extensions. VSCode's extensions are good, by far best. But these are written for Nodejs with JS so unsurprisingly these take a handy amount of resource but efficiently. And people unknowingly accuse vscode for this. Though most of the time it doesn't cause that much of issue. But in bigger projects this tiny problem gets bigger as most of the people don't have a AMD Thread Ripper, Samsung NVMe SSD with 16GB RAM &amp;amp; a RTX3090&lt;/p&gt;
&lt;p&gt;Let's find out the reasons of this high resource usage &amp;amp; fix 'em&lt;/p&gt;

&lt;p&gt;&lt;span&gt;READ More: &lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/make-vscode-lighter/"&gt;Make Vs Code Lighter&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;





</description>
    </item>
    <item>
      <title>Automate Clean Code and Linting in Python</title>
      <author>Rahul Banerjee</author>
      <pubDate>Mon, 23 Aug 2021 04:15:44 +0000</pubDate>
      <link>https://dev.to/rahulbanerjee99/automate-clean-code-and-linting-in-python-pal</link>
      <guid>https://dev.to/rahulbanerjee99/automate-clean-code-and-linting-in-python-pal</guid>
      <description>&lt;p&gt;We will be looking at some packages to format, lint, test our code and later create a pre-commit hook to automate the process. &lt;/p&gt;

&lt;p&gt;Before we talking about the packages we will use, let's look at the python files we will work with&lt;/p&gt;

&lt;p&gt;We have a function called helpers.py&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;It has simple arithmetic functions. All the functions accept two parameters and perform an arithmetic operation on them.&lt;/p&gt;

&lt;p&gt;We have another file called tester_helpers.py&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;This file simply tests the functions we defined earlier. It uses assert to do a simple equality check.&lt;/p&gt;

&lt;p&gt;Now let's look at the packages we will be using.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing 🧪
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#pytest-77k-%EF%B8%8F"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/pytest-dev/pytest"&gt;Pytest&lt;/a&gt; 7.7k+ ⭐️
&lt;/h3&gt;

&lt;p&gt;This package helps us run unit tests. One requirement to keep in mind is that your python file containing the unit tests should begin with 'test_'.&lt;/p&gt;

&lt;p&gt;Only assert statements are supported. To install the package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;pytest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To run the unit tests, type the following commands&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pytest test_helpers.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If all your tests pass, you should see a similar output&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;test_helpers.py ....             &lt;span class="o"&gt;[&lt;/span&gt;100%]

&lt;span class="o"&gt;=========&lt;/span&gt; 4 passed &lt;span class="k"&gt;in &lt;/span&gt;0.01s &lt;span class="o"&gt;===========&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If you get an error related to multiple relative imports&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;astroid.exceptions.TooManyLevelsError:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It is probably an issue with one of pytest's dependencies. You'll have to uninstall astroid and install it again. This ensures the altest astroid version is installed.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip uninstall astroid
pip &lt;span class="nb"&gt;install &lt;/span&gt;astroid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;After this, we will have to uninstall pytest and install pytest&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip uninstall pytest
pip &lt;span class="nb"&gt;install &lt;/span&gt;pytest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#formatting"&gt;
  &lt;/a&gt;
  Formatting ✍️
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#yapf-12k-%EF%B8%8F"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/google/yapf#installation"&gt;YAPF&lt;/a&gt; 12k+ ⭐️
&lt;/h3&gt;

&lt;p&gt;This was developed by google and supports in-place formatting. To install the package&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;yapf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To format your files, type the following&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yapf &lt;span class="nt"&gt;--in-place&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt;.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will format all your top level python files, if you want to include folders as well you can use the following&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yapf &lt;span class="nt"&gt;--in-place&lt;/span&gt; &lt;span class="k"&gt;**&lt;/span&gt;/&lt;span class="k"&gt;*&lt;/span&gt;.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;However, this will also include our virtual environment folder. To ignore the venv folder, simply create a file .yapfignore and add venv to it.&lt;/p&gt;

&lt;p&gt;Note: This command might take some time to run. Instead of '**' you could use the folder's specific names.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#isort-41k-%EF%B8%8F"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/PyCQA/isort"&gt;isort&lt;/a&gt; 4.1k+ ⭐️
&lt;/h3&gt;

&lt;p&gt;This packages sorts your import statements to ensure they follow pep8 rules.&lt;/p&gt;

&lt;p&gt;Imports should be grouped in the following order:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Standard library imports.&lt;/li&gt;
&lt;li&gt;Related third party imports.&lt;/li&gt;
&lt;li&gt;Local application/library specific imports.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;isort re-orders import statements to ensure the above rule is followed.&lt;br&gt;
To install the package&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;isort
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To run isort&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;isort &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#autoflake-400%EF%B8%8F"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/myint/autoflake"&gt;autoflake&lt;/a&gt; 400+⭐️
&lt;/h3&gt;

&lt;p&gt;It helps in getting rid of unused imports, variables and object keys.&lt;/p&gt;

&lt;p&gt;To install the package&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;autoflake
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To run autoflake&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;autoflake &lt;span class="nt"&gt;--in-place&lt;/span&gt; &lt;span class="nt"&gt;--remove-unused-variables&lt;/span&gt; &lt;span class="nt"&gt;--remove-all-unused-imports&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt;.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#some-other-formatters"&gt;
  &lt;/a&gt;
  Some other formatters
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/hhatto/autopep8"&gt;autopep8&lt;/a&gt; 3.9k+ ⭐️&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/psf/black"&gt;black&lt;/a&gt; 22.1k+ ⭐️&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#linting"&gt;
  &lt;/a&gt;
  Linting 🔎
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#pylint-35k-%EF%B8%8F"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/PyCQA/pylint"&gt;Pylint&lt;/a&gt; 3.5k+ ⭐️
&lt;/h3&gt;

&lt;p&gt;pylint ensures your code is following pep8 rules and standards. It gives each python file a score out of 10 (It can given you a negative score as well)&lt;/p&gt;

&lt;p&gt;To install the package&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;pylint
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To run the linter&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pylint &lt;span class="nt"&gt;--fail-under&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;7 &lt;span class="k"&gt;*&lt;/span&gt;.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The argument &lt;code&gt;--fail-under&lt;/code&gt; is the lower bound, if any file has a score below the lower bound, an error will be returned.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#precommit-hook"&gt;
  &lt;/a&gt;
  Pre-commit Hook 🪝
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#what-are-git-hooks"&gt;
  &lt;/a&gt;
  What Are Git Hooks?
&lt;/h3&gt;

&lt;p&gt;Git hooks are basically scripts fired before an important action occurs, e.g., before a commit is made, before code is pushed to a repo after a commit is made, etc. You can learn more about Git Hooks and the different kinds of hooks over &lt;a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We will be focussing on a pre-commit hook.A pre-commit hook is a hook that is run before you make a commit.&lt;/p&gt;

&lt;p&gt;First let's install the package&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;pre-commit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we will generate a sample pre-commit hook YAML file, we will edit this later.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pre-commit sample-config
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now let's add our hook&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pre-commit &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now before every commit, the pre-commit hook defined in our YAML file will be executed.&lt;/p&gt;

&lt;p&gt;Now let's update our YAML file.&lt;br&gt;
Remove everything and only keep the following&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;repos&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;local&lt;/span&gt;
      &lt;span class="na"&gt;hooks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We will add our plugins(packages) under &lt;code&gt;hooks:&lt;/code&gt; in the YAML file. Below is the general syntax for the plugin&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;(unique id of hook)&lt;/span&gt;
     &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;(name to be displayed in terminal)&lt;/span&gt;
     &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;(command to excute)&lt;/span&gt;
     &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;system (for our case, always system)&lt;/span&gt; 
     &lt;span class="na"&gt;always_run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="s"&gt; (if &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="s"&gt;, it will always run)&lt;/span&gt;
     &lt;span class="na"&gt;pass_filenames&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="s"&gt; (if &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="s"&gt;, hook will have access to the file name)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's define a sample plugin for YAPF&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;YAPF&lt;/span&gt; 
     &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;YAPF 🧹&lt;/span&gt;
     &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;zsh -c 'yapf --in-place *.py'&lt;/span&gt;
     &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;system&lt;/span&gt;
     &lt;span class="na"&gt;always_run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
     &lt;span class="na"&gt;pass_filenames&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If you are using bash or are on windows, replace the zsh in 'entry' with bash.&lt;/p&gt;

&lt;p&gt;All the other plugins are pretty similar, below is the entire YAML file with all the plugins&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Whenever you update your YAML file, you will have to add the file to the staging area using git add . or git add .pre-commit-config.yaml&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Below is a successful commit&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LDIIzJ2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b4q9awbw47y5igapbmvi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LDIIzJ2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b4q9awbw47y5igapbmvi.png" alt="Pre-commit in action"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Setting up a pre-commit hook will ensure your code follows pep8 standards and is properly formatted.&lt;br&gt;
I hope you found the article useful. Add me on &lt;a href="https://www.linkedin.com/in/rahulbanerjee2699/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://twitter.com/rahulbanerjee99"&gt;Twitter&lt;/a&gt; &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Web designer Roadmap 2021</title>
      <author>Git Tricks</author>
      <pubDate>Mon, 23 Aug 2021 04:09:19 +0000</pubDate>
      <link>https://dev.to/git_tricks/web-designer-roadmap-2021-30an</link>
      <guid>https://dev.to/git_tricks/web-designer-roadmap-2021-30an</guid>
      <description>&lt;h2 id="what-is-a-web-designer"&gt;What is a Web Designer?&lt;/h2&gt;
&lt;p&gt;Are you both creative and technically inclined? You may want to consider a career as a web designer!&lt;/p&gt;
&lt;p&gt;Web designers build or redesign websites. They understand what it takes to make a website functional and easy to use, but also understand what is needed to make it aesthetically appealing to the user.&lt;/p&gt;
&lt;p&gt;Web design is a rapidly growing industry, as digital media has become part of everyone's lives and people rely on the web for their communications, information, shopping, social life, and more.&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/web-designers-roadmap-2021/&amp;amp;ved=2ahUKEwjqlebL7qryAhUF7HMBHVCiCxQQFnoECBoQAQ&amp;amp;usg=AOvVaw2Oo-ikwNXhEKOFAMaulAH4"&gt;Web Designer Roadmap&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;









</description>
    </item>
    <item>
      <title>Best VSCODE Extension For Every Web Developer</title>
      <author>Git Tricks</author>
      <pubDate>Mon, 23 Aug 2021 04:06:19 +0000</pubDate>
      <link>https://dev.to/git_tricks/best-vscode-extension-for-every-web-developer-1gj8</link>
      <guid>https://dev.to/git_tricks/best-vscode-extension-for-every-web-developer-1gj8</guid>
      <description>&lt;p&gt; &lt;span&gt;Hello everyone, my name is suman and I'm a frontend developer. In this blog post, I would like to share 10 VS code extensions that every frontend developer should use. The purpose of using these extensions is to write faster, cleaner, and more consistent code. &lt;/span&gt;&lt;span&gt;Let's Jump in!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://www.codelivly.com/10-vs-code-extensions-every-frontend-developer-should-use/"&gt;Best VS Code extensions every Frontend Developer should use&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>10 Magical JavaScript Tips For Every Web Developer</title>
      <author>Git Tricks</author>
      <pubDate>Mon, 23 Aug 2021 04:01:32 +0000</pubDate>
      <link>https://dev.to/git_tricks/10-magical-javascript-tips-for-every-web-developer-3c2n</link>
      <guid>https://dev.to/git_tricks/10-magical-javascript-tips-for-every-web-developer-3c2n</guid>
      <description>&lt;p id="f6cc"&gt;In this article, we will discuss the 15 useful JavaScript tips for every web developer to save their valuable and precious time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p id="e1bb"&gt;I am always ready to learn although I do not always like being taught&lt;/p&gt;

&lt;p id="0fe5"&gt;— Winston Churchill&lt;/p&gt;


&lt;/blockquote&gt;
&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;h1 id="fa85"&gt;Tip 1. Flatten the array of the array&lt;/h1&gt;
&lt;p id="4e31"&gt;This tip will help you to flatten a deeply nested array of arrays by using &lt;code&gt;Infinity&lt;/code&gt; in &lt;code&gt;flat&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;span id="e3aa"&gt;var array = [123, 500, [1, 2, [34, 56, 67, [234, 1245], 900]], 845, [30257]]&lt;/span&gt;&lt;span id="16da"&gt;//flatten array of array&lt;br&gt;array.flat(Infinity)&lt;/span&gt;&lt;span id="b0d8"&gt;// output:&lt;br&gt;// [123, 500, 1, 2, 34, 56, 67, 234, 1245, 900, 845, 30257]&lt;/span&gt;&lt;/pre&gt;
&lt;h1 id="902c"&gt;Tip 2. Easy Exchange Variables&lt;/h1&gt;
&lt;p id="ebf9"&gt;You probably swap the two variables using a third variable &lt;code&gt;temp&lt;/code&gt;. But this tip will show you a new way to exchange variables using destructuring.&lt;/p&gt;
&lt;pre&gt;&lt;span id="298c"&gt;//example 1&lt;/span&gt;&lt;span id="3316"&gt;var a = 6;&lt;br&gt;var b = 7;&lt;/span&gt;&lt;span id="b133"&gt;[a,b] = [b,a]&lt;/span&gt;&lt;span id="aa36"&gt;console.log(a,b) // 7 6&lt;/span&gt;&lt;/pre&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/magical-javascript-tips-for-every-web-developer/"&gt;10 Magical JavaScript Tips for Every Web Developer&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;

</description>
    </item>
    <item>
      <title>Top 20 JavaScript tips and tricks to increase your Speed and Efficiency </title>
      <author>Git Tricks</author>
      <pubDate>Mon, 23 Aug 2021 03:57:50 +0000</pubDate>
      <link>https://dev.to/git_tricks/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-obc</link>
      <guid>https://dev.to/git_tricks/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-obc</guid>
      <description>&lt;h3&gt;Convenient and useful techniques to reduce the lines of code and pace up your Dev Work!&lt;/h3&gt;
&lt;p&gt;In our daily tasks, we get to write functions such as sorting, searching, finding unique values, passing parameters, swapping values etc, so here I present my list of shorthand techniques to write all of them as a Pro!✌🏻&lt;/p&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;img alt="Increase Your Performance" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftNfvGUp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;JavaScript is truly an awesome language💛 to learn and work with. And there can be more than one approach to reach to the same solution for given problem. In this article, we will discuss only the quickest ones.🚀&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;These approaches will definitely help you in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reducing the number of LOC(lines of code),&lt;/li&gt;
&lt;li&gt;Coding Competitions,&lt;/li&gt;
&lt;li&gt;Hackathons or&lt;/li&gt;
&lt;li&gt;Other time bound tasks.⏱&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of these JavaScript Hacks uses techniques from ECMAScript6(ES2015) onwards, though the latest version is ECMAScript11(ES2020).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: All below tricks have been tested on the Console of Google Chrome.&lt;/em&gt;&lt;/p&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/top-20-javascript-tips-and-tricks/"&gt;Top 20 JavaScript tips and tricks to increase your Speed and Efficiency&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>🚀20 Best CSS3 Library For Developers.</title>
      <author>Git Tricks</author>
      <pubDate>Mon, 23 Aug 2021 03:53:51 +0000</pubDate>
      <link>https://dev.to/git_tricks/20-best-css3-library-for-developers-25ff</link>
      <guid>https://dev.to/git_tricks/20-best-css3-library-for-developers-25ff</guid>
      <description>&lt;p&gt;Web Developers used to spend a lot of time creating beautiful CSS. Thanks to the CSS libraries, we now have a better, faster, and more effective way to build responsive websites and web applications.&lt;/p&gt;
&lt;p&gt;Are you still looking for the best CSS libraries? Do you want to know which library you should try? In this article, we have 20 best CSS libraries for your inspiration.&lt;/p&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#how-do-css-libraries-work"&gt;&lt;/a&gt;🤔 How do CSS libraries work?&lt;/h2&gt;
&lt;p&gt;CSS library gives web developers a basic structure, which includes grid, interactive UI patterns, web typography, tooltips, buttons, form elements, icons. This structure helps web developers to start quickly and efficiently when they are designing a website or web applications.&lt;/p&gt;
&lt;p&gt;Here we have put together &lt;span&gt;20 best CSS libraries.&lt;/span&gt; We hope you like them, and most importantly, find the best one for your needs.&lt;/p&gt;
&lt;h4&gt;
&lt;br&gt;
&lt;a href="#"&gt;&lt;/a&gt;Let's go....🤩&lt;/h4&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwii76qFzaPyAhWvyzgGHX9RA-kQFnoECAMQBQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;🚀20 Best CSS3 Library For Developers&lt;/a&gt;&lt;/b&gt;.

</description>
    </item>
    <item>
      <title>7 Git tricks that changed my life</title>
      <author>Git Tricks</author>
      <pubDate>Mon, 23 Aug 2021 03:52:42 +0000</pubDate>
      <link>https://dev.to/git_tricks/7-git-tricks-that-changed-my-life-24bc</link>
      <guid>https://dev.to/git_tricks/7-git-tricks-that-changed-my-life-24bc</guid>
      <description>&lt;p&gt;&lt;span&gt;Git is one of the most common version control systems available, and it's used on private systems and publicly hosted websites for all kinds of development work. Regardless of how proficient with Git I become, it seems there are always features left to discover. Here are seven tricks that have changed the way I work with Git.&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;h1&gt;&lt;a href="https://www.codelivly.com/git-tricks-that-changed-my-life/"&gt;7 Git tricks that changed my life&lt;/a&gt;&lt;/h1&gt;

</description>
    </item>
    <item>
      <title>22 Must watch programming movies in 2021 (hottest)</title>
      <author>devbookmark</author>
      <pubDate>Mon, 23 Aug 2021 03:48:37 +0000</pubDate>
      <link>https://dev.to/devbookmark/22-must-watch-programming-movies-in-2021-hottest-2o26</link>
      <guid>https://dev.to/devbookmark/22-must-watch-programming-movies-in-2021-hottest-2o26</guid>
      <description>&lt;p&gt;We will be owning your weekends now. These movies and series are unique and not like the same content you find on every website. Get some Coke and a seat and ENJOIIII. &lt;/p&gt;

&lt;p&gt;Each software engineer couldn't want anything more than to see their jobs according to the viewpoint of films. We as a whole realize Hollywood is notable in exhibiting programming and Artificial Intelligence in the correct manners. Thus, with no further ado, here are the 10 best films that each developer should watch. &lt;/p&gt;




&lt;h5&gt;
  &lt;a href="#so-these-are-are-must-watch-movies-for-programming-geeks-and-watchers"&gt;
  &lt;/a&gt;
  So these are are must watch movies for programming geeks and watchers.
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;We are Legion&lt;/li&gt;
&lt;li&gt;Jobs&lt;/li&gt;
&lt;li&gt;Tron&lt;/li&gt;
&lt;li&gt;Source Code&lt;/li&gt;
&lt;li&gt;The Social Dillema &lt;/li&gt;
&lt;li&gt;Hackers&lt;/li&gt;
&lt;li&gt;TAKEDOWN&lt;/li&gt;
&lt;li&gt;Primer&lt;/li&gt;
&lt;li&gt;Matrix&lt;/li&gt;
&lt;li&gt;The Social Network&lt;/li&gt;
&lt;li&gt;The fifth Estate&lt;/li&gt;
&lt;li&gt;AntiTrust&lt;/li&gt;
&lt;li&gt;Mr Robot&lt;/li&gt;
&lt;li&gt;The Pirate Bay Away From Keyboard&lt;/li&gt;
&lt;li&gt;Silicon Valley&lt;/li&gt;
&lt;li&gt;The Greact Hack&lt;/li&gt;
&lt;li&gt;The Founder&lt;/li&gt;
&lt;li&gt;EX MACHINA&lt;/li&gt;
&lt;li&gt;HER&lt;/li&gt;
&lt;li&gt;Untraceable&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#we-are-legion"&gt;
  &lt;/a&gt;
  We are legion
&lt;/h3&gt;

&lt;p&gt;This film reveals a lot of insight into the cloudy and confounding universe of the programmer bunch Anonymous. The movie producers had the option to accomplish amazing admittance to the gathering and recount to the verifiable story generally through interviews with members. &lt;/p&gt;

&lt;p&gt;The film is basically ordered so it recounts to their story so that individuals who haven't followed its advancement can acquire some comprehension of an exceptionally confounded and fairly befuddling association. &lt;/p&gt;

&lt;p&gt;The film is done in a self-basic design that while for the most part positive isn't reluctant to show the gathering's negatives, its contentions and its inner battles. It is incredibly all around made and profoundly enlightening. The gatherings' practically incidental development from joyful wisecrackers into some kind of political activists is interesting. &lt;/p&gt;

&lt;p&gt;While they are obviously propelled by obligation to free discourse – particularly on the web – it is difficult to unmistakably characterize their advancing belief system. I trust that this film is generally seen since it gives a perspective on one of the new political outskirts of the web.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jobs"&gt;
  &lt;/a&gt;
  Jobs
&lt;/h3&gt;

&lt;p&gt;It's a totally wooden and tasteless portrayal of the tech symbol, yet for Apple enthusiasts, it'll in any case have an allure as an enlightening biopic. &lt;/p&gt;

&lt;p&gt;Occupations presents an entrancing story of how Jobs defeats corporate belittling and channels his own propensity toward fixation to fabricate apparently the most inventive organization of the last decade. &lt;/p&gt;

&lt;p&gt;It once in a while slowly inhales and is packed with innovative language, yet it never feels hindered. Halls become animated with symbolism. Minutes from the past crosscut consistently and educate the present, frequently with covering exchange. Furthermore, the glare of the lights and roar of the groups can be so sweeping, they cause you to feel like you were there, as well: on the incline of things to come.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tron"&gt;
  &lt;/a&gt;
  Tron
&lt;/h3&gt;

&lt;p&gt;This was a serious amazement for me. I hadn't seen the first TRON in years, yet I felt like I adequately realized to enter that world once more. After the blended audits began coming out, I'll concede, I was a smidgen apprehensive. &lt;/p&gt;

&lt;p&gt;While the story isn't amazing however any means, TRON:LEGACY gave me significantly more than I anticipated. First off, I thought Garrett Hedlund was a decent decision for the job of Sam, and despite the fact that he has a somewhat more "equation legend" feel, he made Sam a lovely affable person. Also, obviously, having Jeff Bridges returning was a delight to watch, despite the fact that his more "loose" approach didn't generally work, however it was still nice to see him once more. Michael Sheen is additionally present, and keeping in mind that I do wish we might have seen a greater amount of him, he made the best of what he was given. Trust me, he's a sight to see. &lt;/p&gt;

&lt;p&gt;The champion for me, and numerous others, was Olivia Wilde as Quorra. She brings an irresistible, youngster like appeal to her job - yet in addition somebody not to be messed with in a fight. Frankly, she felt much more human than different characters, and it worked superbly. &lt;/p&gt;

&lt;p&gt;Generally, regardless of it's blemishes in the story, TRON:LEGACY ended up being a visual show-stopper, and the strong cast raised the film to a more significant level. Unquestionably one I'm glad to return to!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source Code
&lt;/h3&gt;

&lt;p&gt;It's uncommon that I discover a film so engaging and mind-twisting. Source Code is a science fiction spine chiller activity brainbuster. You might have to watch it more than once to get every one of the subtleties of this astonishing film. Jake Gyllenhaal is a helicopter pilot positioned in Afganistan who awakens on a train outside of Chicago.&lt;/p&gt;

&lt;p&gt;He's in another person's body and has just 8 minutes to discover a fear monger aircraft. You will be snared quick. Cherished it!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-social-dilemma"&gt;
  &lt;/a&gt;
  The Social Dilemma
&lt;/h3&gt;

&lt;p&gt;It's truly astounding film and I figure everybody ought to need to watch this particularly those young who feel that web-based media is everything . &lt;/p&gt;

&lt;p&gt;I saw my a few companions who is consistently accessible on online they're constantly connected with on this public activity . Also, it's truly doesn't imply that her life was absolutely amazing even I saw that she's completely wrecked this current life , her reality . This will in a real sense make you question your life, decisions, feelings. It's a genuine stunner. Particularly for individuals who've consistently viewed as online media a terrible impact. &lt;/p&gt;

&lt;p&gt;This is only an entire another explanation and presumably the lone motivation behind why we ought to, with prompt impact get off our gadgets and move out into this present reality, structure genuine suppositions, settle on non one-sided choices. I've generally been very blown a gasket about losing the capacity to fuse assessment, become less lenient and comprehension towards all sides of a discussion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hackers"&gt;
  &lt;/a&gt;
  Hackers
&lt;/h3&gt;

&lt;p&gt;The most under appraised 90's American secondary school film beyond a shadow of a doubt and it very well may be contended that it's the awesome. Respectable plot, high schooler tension, excellent cast, amazing soundtrack, great style. It was a film for the bizarre child in class before individuals were professing to be the unusual child in class. &lt;/p&gt;

&lt;p&gt;While staggering visuals and quick altering, give this film it's drive and speed, that make the entirety of this significant; raising a vivid and drawing in film into a sort characterizing religion exemplary.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#takedown"&gt;
  &lt;/a&gt;
  TAKEDOWN
&lt;/h3&gt;

&lt;p&gt;This freely depicts the genuine story of Kevin. In the event that you read his book (A Ghost in the Wires), it clarifies that he even undermined the film with lawful activity to change the specific pieces of the content. As the first was over misrepresented and basically made Kevin look underhanded. However, genuinely, the book is a wonderful perused. What I for one believe is Hollywood's awful portrayal of programmers is lamentable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#primer"&gt;
  &lt;/a&gt;
  PRIMER
&lt;/h3&gt;

&lt;p&gt;A dazzling, confounding and startling wreck of a film that doesn't avoid coming to the heart of the matter of conceivable cerebrum harm. Each and every subsequent feels intentional, making each review special. The sort of film will keep you up around evening time contemplating it each time you watch it. &lt;/p&gt;

&lt;p&gt;Its a low spending film the thought, story is acceptable yet I didn't actually loved the film since I was completely lost as crowd in the main half and its sluggish as well. It's in reality eventually with extraordinary tolerance you will become acquainted with the film better and it's acceptable film.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#matrix-series"&gt;
  &lt;/a&gt;
  Matrix Series
&lt;/h3&gt;

&lt;p&gt;An incredible film that is relatively radical, simply the prospect of how individuals are stunned by this film on the year it was delivered entertains me. Individuals in those days were likely stunned and in wonder of the idea that in those days was practically difficult to get a handle on. After 20 years I figure the crowd will in any case be stunned similarly as how it astounded me, despite the fact that there have been many movies that fundamentally had a similar plot and executed a lot more prominent CGI impact. &lt;/p&gt;

&lt;p&gt;the plot and idea were completely executed well through embellishments and extraordinary actin. It was an extraordinary film that gives the watchers new discernment particularly at the time it was discharge, it was the time another thousand years was drawing closer. It offered motivation to numerous scifi and superhuman thoughts and film ideas of the 21st century.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-social-network"&gt;
  &lt;/a&gt;
  The Social Network
&lt;/h3&gt;

&lt;p&gt;The first occasion when I caught wind of the interpersonal organization, I wasn't intrigued and thought it was simply going to be an exhausting film. In any case, a couple of years after the fact I discovered the number of good surveys that this film had. &lt;/p&gt;

&lt;p&gt;So I gave watching it a shot netflix and I really adored the interpersonal organization. The film is about the maker of facebook, Mark Zuckerberg. Jessie Eisenberg is an incredible depiction as Mark. No big surprise it won an Oscar for best adjusted screenplay. &lt;/p&gt;

&lt;p&gt;It has wonderful acting, coordinating, composing, characters, and plot too. The film likewise has incredible cinematography. Andrew Garfield had the best execution out of the entire film and should've been designated for best supporting entertainer. I additionally truly loved Justin Timberlake as well. &lt;/p&gt;

&lt;p&gt;Generally, the interpersonal organization was perhaps the best film that I found in my life and it merited best picture. In any case, basically it won a few honors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-fifth-estate"&gt;
  &lt;/a&gt;
  The fifth Estate
&lt;/h3&gt;

&lt;p&gt;Benedict Cumberbatch does an attractive depiction of Wikileaks originator Julian Assange. The controls and the smoke screens make the whole demonstration ethically dim. The Internet for sure gives an essential fifth home of society. &lt;/p&gt;

&lt;p&gt;Benedict as regular has given appropriate equity to the said job. Fair depiction of the "Free Information" perspective on the screen. Supporting entertainers satisfying their hopes, over every one of the a decent bundle of a genuine exciting story.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#antitrust"&gt;
  &lt;/a&gt;
  AntiTrust
&lt;/h3&gt;

&lt;p&gt;I suggest all software engineers, security experts, new companies, and individuals working in the field of data innovation and PC to watch this film. The film is all around made and I see it like clockwork. It gives you a feeling of energy, experience and secret. I love this film and "The I Inside" with the Actor Ryan Philippe. This film is as relatable to whats going on today with exploiting skilled individuals.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mr-robot"&gt;
  &lt;/a&gt;
  Mr Robot
&lt;/h3&gt;

&lt;p&gt;Best series I have watched, not just for dramatization, anticipation and psyche softening turns, the melodic score and sound is carefully incredible. &lt;/p&gt;

&lt;p&gt;In case you were ever an old fashioned raver or advanced music fan, the feeling of your spine shivering when certain form ups occur in the series is as fulfilling. Possibly a bit too nostalgic in certain spaces for millennial's nevertheless it was ideal for me. &lt;/p&gt;

&lt;p&gt;The subsequent season appears to be slow yet it isn't, simply need to continue onward and you'll see. I thought Ram Malek was splendid before this as I had appear him in 24(series), just for a couple of scenes, yet the scene with him and Keifer Sutherland is entrancing and unfortunate, however the absolute best acting I had scene in a television series. &lt;/p&gt;

&lt;p&gt;Christian Slater has consistently been one of my number one entertainers too, and the female cast in this is sublime, with solid astonishing exhibitions by all. I have watched the series since finish again and it is simply genuinely virtuoso all around and must be number one series for me last decade, without a doubt.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#silicon-valley"&gt;
  &lt;/a&gt;
  Silicon Valley
&lt;/h3&gt;

&lt;p&gt;Ostensibly the best consummation of a TV series that I've seen. &lt;/p&gt;

&lt;p&gt;On the off chance that you observe each of the six seasons, you'll get a total story that beginnings in a single outlook, and finishes in a totally unique one, with a characteristic movement and development en route. &lt;/p&gt;

&lt;p&gt;The characters are silly. The world structure is incredible. Furthermore, as you're giggling so hard, it's truly saying something. It's a story of a Silicon Valley startup, investigating topics of innovative arrangement, conscience, realism, industrialism, insatiability with a portion of psychological well-being... furthermore, it's grand. &lt;/p&gt;

&lt;p&gt;I don't think of it as overstatement to put this among the best TV shows ever. Assuming you need to genuinely pass judgment on a series, judge it on an entire, and the conclusion is ostensibly the main piece... how would they end it? &lt;br&gt;
As I said in the opening, this is hopefully acceptable... to the extent conveying a very much themed idea beginning to end without thinking twice, this has a place in the discussion with "Breaking Bad" as being that extraordinarily complete. &lt;/p&gt;

&lt;p&gt;Mike Judge is the John Hughes within recent memory... he's putting out less work than Hughes, however to the extent truly catching the human and social side of an age, it's difficult to contend that Idiocracy, Office Space, and this, aren't original works that unequivocally characterize a timeframe. Hell, I'll even put Bevis and Butthead on that rundown. &lt;/p&gt;

&lt;p&gt;This is comical, a total direct story with theming hopefully acceptable, and an ideal closure. I adored each snapshot of this show, my solitary objection is that seasons didn't have twenty two scenes so I could remain in this world longer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-pirate-bay-away-from-keyboard"&gt;
  &lt;/a&gt;
  The Pirate Bay Away From Keyboard
&lt;/h3&gt;

&lt;p&gt;I'm amped up for this film, its plot will be substantially more fascinating than any of the motion pictures that Hollywood has been letting out and flipping us off with throughout the previous thirty years (with special case of not very many movies of coarse)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-great-hack"&gt;
  &lt;/a&gt;
  The Great Hack
&lt;/h3&gt;

&lt;p&gt;&lt;a href="" class="article-body-image-wrapper"&gt;&lt;img alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This narrative splendidly clarifies the Cambridge Analytica embarrassment that associates Facebook, Brexit, Trump and the manner in which our own information are taken from Social Media and weaponized for political purposes. It's vital and done. I watched it in the wake of seeing Netflix' "The Social Dilemma," another information and majority rules system uncover.&lt;/p&gt;

&lt;p&gt;These issues are not surely known by people in general, even the informed public, which limits the issue with information protection. I was in that class yet these movies have raised my mindfulness. Great narratives are significant&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#her"&gt;
  &lt;/a&gt;
  HER
&lt;/h3&gt;

&lt;p&gt;"Her" is a clever (however very upsetting) study uncovering the course humankind is going in case AI is permitted to continue to develop, unchecked. &lt;/p&gt;

&lt;p&gt;In a social environment of phony dating profiles and the fancy of going gaga for a photograph and not the real individual behind it, it's not really difficult to accept that somebody could experience passionate feelings for an OS, which is actually what befalls the primary person in this film. &lt;/p&gt;

&lt;p&gt;Joaquin Phoenix handles his job satisfactorily as the tortured essayist and Scarlet Johansson's hot Samantha is an unmistakable success. &lt;/p&gt;

&lt;p&gt;I figure I would have partaken in this film more had it not scared the dickens out of me, precisely portending what is shockingly soon to come.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-founder"&gt;
  &lt;/a&gt;
  The Founder
&lt;/h3&gt;

&lt;p&gt;Never heard the first McDonalds story, so the film sort of left me in shock before its finish. Every one of the entertainers and particularly Michael Keaton potraying the lead character(Ray) worked effectively. I felt a profound association with the characters that I failed to remember I was observing only a film. &lt;/p&gt;

&lt;p&gt;It left me disrupting , how a diligent, profoundly driven at this point not really effective sales rep with more than 30 years of involvement like Ray has acquired the possibility of the two ethically grounded, inventive McDonalds siblings and fabricated a domain and fortune out of it. &lt;/p&gt;

&lt;p&gt;The handshake bargain reminds " an arrangement made with even the firmest of handshakes can never rise to a straightforward composed understanding". Not certain if the McDonalds siblings were too guiltless to even consider believing Ray about the eminences or Ray played his business cards excessively well. Yet, I wish the siblings accepted their due credit ,whose brainchild were the proficient activity of the food goliath and the brilliant circular segments. Indeed Ray did sure skyrocket its deals, however it would have been non existent without its unique originators. &lt;/p&gt;

&lt;p&gt;The story was described in a holding way from start till end. Particularly the person change of Ray keeps you stuck till end. I was thinking about what is this current person's job when there are originators who have astonishing ideas.Oh kid, he made a huge difference!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-imitation-game"&gt;
  &lt;/a&gt;
  The Imitation Game
&lt;/h3&gt;

&lt;p&gt;The film just came on Netflix and I found the opportunity to watch it interestingly. From the absolute first second, the film is extremely fascinating and the story (in view of genuine occasions) was spectacular. In the wake of watching, Sherlock and The Imitation Game, one thing is extremely obvious to me that Benedict Cumberbatch is likely the best entertainer to play these marginally unconventional, most astute individual in the room jobs. &lt;/p&gt;

&lt;p&gt;A magnificent film that should be watched, all the more so in light of the fact that it has, among others, four extremely skilled and noticeable entertainers - Benedict Cumberbatch, Mark Strong, Charles Dance and Keira Knightley. A solid five stars for the whole cast and team just as the content. Praise to the writer of the book bearing a similar name on which this film is based.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ex-machina"&gt;
  &lt;/a&gt;
  Ex Machina
&lt;/h3&gt;

&lt;p&gt;This is likely extraordinary compared to other piece of sci-fi that I've at any point watch. It is about a Turing trial of an AI, a Turing Test is a technique for request in man-made reasoning (AI) for deciding if a PC is fit for having a similar outlook as a person. &lt;/p&gt;

&lt;p&gt;Indeed, even in the first piece of the film you will feel that what you're watching isn't what it appears, it resembles there's a going thing on behind the person's activities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#untraceable"&gt;
  &lt;/a&gt;
  Untraceable
&lt;/h3&gt;

&lt;p&gt;This is an exceptionally under-evaluated film that says a lot about our current culture of media utilization and, as it were, fundamental human instinct. Simply take a gander at the sort of unscripted television shows and mainstream news station inclusion that are being marched as early evening diversion today. &lt;/p&gt;

&lt;p&gt;Should extol the scholars and overseer of the film. Diane Lane does an amazing exhibition as the persevering single parent and the supporting cast is splendid as well.&lt;/p&gt;




&lt;p&gt;These were a portion of the top programming films that each software engineer should watch. The Matrix series is by a wide margin the best establishment that shows hacking. Beside it, The Social Network and Jobs verge on showing reality. &lt;/p&gt;

&lt;p&gt;The rundown doesn't end here.. Here. We will bring additional astonishing films out there.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>movies</category>
      <category>developer</category>
      <category>programming</category>
    </item>
    <item>
      <title>2021 JavaScript framework</title>
      <author>Yisar</author>
      <pubDate>Mon, 23 Aug 2021 03:45:32 +0000</pubDate>
      <link>https://dev.to/132/2021-javascript-framework-2d0e</link>
      <guid>https://dev.to/132/2021-javascript-framework-2d0e</guid>
      <description>&lt;p&gt;2021 is very different from previous years. Many web frameworks have released their new versions. Let's discuss them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vdombased"&gt;
  &lt;/a&gt;
  Vdom-based
&lt;/h3&gt;

&lt;p&gt;For example, React, Vue and Preact all belong to this category.&lt;/p&gt;

&lt;p&gt;This is also the most mature framework. Their advantages are mature, stable and suitable for most scenarios.&lt;/p&gt;

&lt;p&gt;With SSR and partial hydration, react 18's fizz renderer is very interesting.&lt;/p&gt;

&lt;p&gt;In addition, such as concurrent mode, scheduling optimization has been discussed for many years.&lt;/p&gt;

&lt;p&gt;Fre is a little soldier in this camp. It is the smallest but the fastest.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/yisar/fre"&gt;https://github.com/yisar/fre&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#compilation-instead-of-runtime"&gt;
  &lt;/a&gt;
  Compilation instead of runtime
&lt;/h3&gt;

&lt;p&gt;Svelte, solidjs belongs to this category.&lt;/p&gt;

&lt;p&gt;I always think that the web does not need to be optimized to the extreme, but the code architecture needs to be pursued unilaterally.&lt;/p&gt;

&lt;p&gt;So I prefer Svelte a bit. Compilation and runtime should not coexist, which will make the framework more messy and mediocre.&lt;/p&gt;

&lt;p&gt;Solidjs and Vue3 do not do this well. They have compilation and want to runtime. They can't have both fish and bear's paw.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html-first"&gt;
  &lt;/a&gt;
  Html first
&lt;/h3&gt;

&lt;p&gt;History is reversing，recently, some frameworks want to return to HTML, away from vdom and away from compilation.&lt;/p&gt;

&lt;p&gt;Such as Qwikjs and Alpinejs. They are enhancing HTML, Sprinkling intead of Hydration.&lt;/p&gt;

&lt;p&gt;This does fill a part of the cake, but the performance will be lost. For example, alpine has always ranked last in the benchmark.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;I like all three ideas. How about you?&lt;/p&gt;

&lt;p&gt;Using one of them is entirely determined by my work.&lt;/p&gt;

</description>
      <category>react</category>
      <category>vue</category>
      <category>svelte</category>
      <category>solidjs</category>
    </item>
  </channel>
</rss>
