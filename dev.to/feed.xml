<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>TestOps: The Future of Software Testing</title>
      <author>Cody Simons</author>
      <pubDate>Fri, 17 Dec 2021 13:20:01 +0000</pubDate>
      <link>https://dev.to/codysimons20/testops-the-future-of-software-testing-3idi</link>
      <guid>https://dev.to/codysimons20/testops-the-future-of-software-testing-3idi</guid>
      <description>&lt;p&gt;Although terms like “quality testing” may seem modern, software testing has been around since the advent of computing roughly 70 years ago. Harvard University scientist Grace Murray coined the terms “bugging” and “debugging” in 1947 when a literal “bug” — in this case, a moth — got stuck in the computer circuitry and interrupted a connection. Since then, software testing has evolved rapidly with the increasing complexity of computer applications, and it continues to evolve. Nowadays there are many different software testing approaches, depending on the functionality of the software and what you want to test it for, but the overall goal of any software test is to provide an objective assessment of the quality of the software and the risk of its failure. As the capabilities and intricacies of computer software have grown, testing has, by necessity, become its own field, to the point where it can and should be operationalized to be done correctly. &lt;/p&gt;

&lt;p&gt;This article discusses modern testing operations, or TestOps, and provides a definition of TestOps, reviews the difference between TestOps and DevOps, and explains what to look for in a TestOps solution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.katalon.com/resources-center/blog/what-is-testops/"&gt;Continue reading&lt;/a&gt;&lt;/p&gt;

</description>
      <category>testops</category>
      <category>devops</category>
      <category>softwaretesting</category>
    </item>
    <item>
      <title>Visualize GitHub Pages Build Logs</title>
      <author>Rizèl Scarlett</author>
      <pubDate>Fri, 17 Dec 2021 12:50:50 +0000</pubDate>
      <link>https://dev.to/github/visualize-github-pages-build-logs-1mc1</link>
      <guid>https://dev.to/github/visualize-github-pages-build-logs-1mc1</guid>
      <description>&lt;p&gt;GitHub Pages has always felt magical because we never had a way to see the build logs for Jekyll sites. Admittedly, that can be a bit frustrating because it's harder to identify and solve problems without context. If GitHub Pages failed to build a site, the reason wasn't always clear.&lt;/p&gt;

&lt;p&gt;Fortunately, GitHub recently enabled GitHub Pages builds with GitHub Actions, a feature that allows developers to view the logs for their Jekyll and HTML page builds and deployments in the same place they see action logs. &lt;/p&gt;

&lt;p&gt;Before I explain how this works, I'll briefly describe GitHub Pages and GitHub Actions for those unfamiliar with these products.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-github-pages"&gt;
  &lt;/a&gt;
  About GitHub Pages
&lt;/h2&gt;

&lt;p&gt;GitHub Pages is a static hosting service. It generates and publishes a website based on the HTML, CSS, and JavaScript stored in your repository. The website will have a github.io domain by default, but you can also use a custom domain if preferred. For more information on GitHub Pages, read the &lt;a href="https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages"&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-github-actions"&gt;
  &lt;/a&gt;
  About GitHub Actions
&lt;/h2&gt;

&lt;p&gt;GitHub Actions is a tool that conveniently enables you to automate custom workflows inside of your GitHub repository. The workflows fire on specific events, such as a pull request or push. For example, one can trigger a workflow by creating a pull request.  While you can write your own action, you can use an existing action. There are over 10,000 actions in the GitHub Marketplace created by developers worldwide. Developers commonly use GitHub Actions for repetitive tasks such as checking for passing tests and release management. Visit GitHub’s &lt;a href="https://docs.github.com/en/actions"&gt;documentation&lt;/a&gt; about GitHub Actions for more information. You can better understand the difference between an action, an event, a workflow, and other GitHub Action related terminology with this &lt;a href="https://dev.to/github/whats-the-difference-between-a-github-action-and-a-workflow-2gba"&gt;post&lt;/a&gt; by Michelle Mannering. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#view-build-logs-for-jekyll-and-html-pages"&gt;
  &lt;/a&gt;
  View Build Logs for Jekyll and HTML Pages
&lt;/h2&gt;

&lt;p&gt;By default, when you enable GitHub Pages for your static site's repo, it will create and trigger a workflow called &lt;code&gt;pages build and deployment&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Let’s try it!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: In an empty repo, create an index.html file with any contents you prefer. For now, you can add&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;What’s up world?&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: In your repo, click Settings. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sKmL0UCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c37pjzjihy4gfwyb4zgo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sKmL0UCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c37pjzjihy4gfwyb4zgo.png" alt="Image description" width="880" height="156"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;: On the left sidebar, choose Pages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JfTIlrQ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8wvng567fgi7i0xmy4wa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JfTIlrQ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8wvng567fgi7i0xmy4wa.png" alt="Image description" width="622" height="506"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;:  Enable GitHub Pages by choose the branch with the code you want reflected on your site, and don't forget to press save!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MF7soa_q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnzxy8h2btonoa961am5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MF7soa_q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnzxy8h2btonoa961am5.png" alt="Image description" width="880" height="172"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5&lt;/strong&gt;: Head over to the Actions tab within your repo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FdVegksO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/de3g3uobiw3hontg2vvc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FdVegksO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/de3g3uobiw3hontg2vvc.png" alt="Image description" width="880" height="55"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6&lt;/strong&gt;: Now, you should see the newly created workflow called &lt;code&gt;pages build and deployment&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NGfvrAAt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfhawd9yijuwagq65qc7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NGfvrAAt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfhawd9yijuwagq65qc7.png" alt="Image description" width="880" height="208"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 7&lt;/strong&gt;: View the log details by clicking the workflow. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TjCtyGcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tyq5fc4b24lps3zw9avj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TjCtyGcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tyq5fc4b24lps3zw9avj.png" alt="Image of build logs" width="369" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 8&lt;/strong&gt;: If successful, you can view your live site at: &lt;code&gt;https://{your github name}.github.io/{your repo name}/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 9&lt;/strong&gt;: A new pages build and deployment workflow will run with every new push to the branch hosted on GitHub Pages. Try this out by adding this new line to your index.html:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;What’s up world?&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;I’m using GitHub Pages builds with GitHub Actions&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your workflow should successfully run a second time and update your GitHub Pages site. If the update fails, you can check the logs to analyze and diagnose the problem!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-nonjekyll-workaround"&gt;
  &lt;/a&gt;
  The Non-Jekyll Workaround
&lt;/h2&gt;

&lt;p&gt;If you want to see the logs for a site that's not built in Jekyll or HTML, you can do that with community-built workarounds. &lt;/p&gt;

&lt;p&gt;Below is an example workflow (created by the community) that builds and deploys a static React application to GitHub Pages:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;React build &amp;amp; deploy&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout code&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install Node.js&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-node@v1&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;node-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;14.x&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install NPM packages&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm ci&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build project&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm run build&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run tests&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm run test&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Upload production-ready build files&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/upload-artifact@v2&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;production-files&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;./build&lt;/span&gt;

  &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deploy&lt;/span&gt;
    &lt;span class="na"&gt;needs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;build&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;if&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;github.ref == 'refs/heads/main'&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Download artifact&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/download-artifact@v2&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;production-files&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;./build&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deploy to gh-pages&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;peaceiris/actions-gh-pages@v3&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;github_token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
        &lt;span class="na"&gt;publish_dir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;./build&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I learned this genius method from Clyde D'Souza's blog post on &lt;a href="https://codeburst.io/deploying-a-react-app-using-github-pages-and-github-actions-7fc14d380796"&gt;Deploying a React App Using GitHub Pages and GitHub Actions&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reminders"&gt;
  &lt;/a&gt;
  Reminders
&lt;/h3&gt;

&lt;p&gt;Remember that GitHub Pages is looking for an index.html, index.md, or readme.md in the root of your project to render as a landing page. If you are using a framework like React, those files don't reside in the root of your project, so you need to run &lt;code&gt;npm run build&lt;/code&gt; to generate static assets, including an index.html file, for your app. Read this Pluralsight &lt;a href="https://www.pluralsight.com/guides/fix-create-react-app-showing-readme.md"&gt;blog post&lt;/a&gt; by Desmond Nyamador for detailed guidance on how to generate the needed assets. Desmond walks readers through generating an index.html and pointing GitHub pages to the correct file.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Learn more about GitHub Pages using GitHub Actions for builds with this &lt;a href="https://github.blog/changelog/2021-12-16-github-pages-using-github-actions-for-builds-and-deployments-for-public-repositories/"&gt;announcement post&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you liked this post, follow &lt;a href="https://dev.to/blackgirlbytes"&gt;me&lt;/a&gt; and &lt;a href="https://dev.to/github"&gt;GitHub&lt;/a&gt; on Dev.to for more content!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>devops</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>18 amazing 🤩 GitHub repositories that will help you 🪄 make a Beautiful Project </title>
      <author>Dev Journal</author>
      <pubDate>Fri, 17 Dec 2021 12:17:13 +0000</pubDate>
      <link>https://dev.to/devjournal/18-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-5d51</link>
      <guid>https://dev.to/devjournal/18-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-5d51</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Today I would like to give examples of good GitHub repositories that will help you implement complex animations, as well as useful functions in your projects.&lt;/p&gt;
&lt;p&gt;So let's get started &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/10-awesome-github-repos-every-web-developer-should-know/&amp;amp;ved=2ahUKEwiw1e_qpqbzAhU78HMBHVvBAWkQFnoECBAQAQ&amp;amp;usg=AOvVaw1YdY91hlP3suK6HGMF0MXW"&gt;18 amazing 🤩 GitHub repositories that will help you 🪄 make a Beautiful Project&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Bulk SMTP Hosting - Dedicated SMTP Server | Bulk Email Service | Buy SMTP</title>
      <author>massmailservers</author>
      <pubDate>Fri, 17 Dec 2021 11:58:02 +0000</pubDate>
      <link>https://dev.to/masmailservers/bulk-smtp-hosting-dedicated-smtp-server-bulk-email-service-buy-smtp-31ag</link>
      <guid>https://dev.to/masmailservers/bulk-smtp-hosting-dedicated-smtp-server-bulk-email-service-buy-smtp-31ag</guid>
      <description>&lt;p&gt;Cheap smtp server for email marketing&lt;br&gt;&lt;br&gt;
Massmailservers a cheapest SMTP Service Provider. We offer the best SMTP Server for Mass Mailing, Send limitless Bulk promoting and transnational messages. Selecting an smtp server to simplify e mail sending shouldn't be the most difficult venture. MMS is a Cheapest smtp server that allows you to ship advertising and transaction emails in bulk. Mass Mail Servers presents you with flexible and cheap email marketing plans. Send unlimited cold emails with a reliable, affordable and best email blast service.&lt;/p&gt;

&lt;p&gt;CHOOSE YOUR PLAN,&lt;br&gt;
Send unlimited mass emails at affordable price.&lt;/p&gt;

&lt;p&gt;BSH - 01&lt;br&gt;
Best for Small businesses and Ecommerce websites to send transactional emails.&lt;br&gt;
 $175/mo&lt;br&gt;
 5000 Emails/hour&lt;br&gt;
 Unlimited Email Addresses&lt;br&gt;
 1 Dedicated IP&lt;br&gt;
 50 GB Disk Space&lt;br&gt;
 500 GB Bandwidth&lt;br&gt;
 Free IP Replacement*&lt;br&gt;
 Fast SSD Storage&lt;br&gt;
 FREE Bulk Email Software&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.massmailservers.net/bulk-smtp"&gt;https://www.massmailservers.net/bulk-smtp&lt;/a&gt;&lt;/p&gt;

</description>
      <category>writing</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>7 Tips to Crush Your Next System Design Interview</title>
      <author>Daniel Emod Kovacs</author>
      <pubDate>Fri, 17 Dec 2021 11:46:41 +0000</pubDate>
      <link>https://dev.to/superbet/7-tips-to-crush-your-next-system-design-interview-4cfe</link>
      <guid>https://dev.to/superbet/7-tips-to-crush-your-next-system-design-interview-4cfe</guid>
      <description>&lt;p&gt;It is no secret that the tech industry is blooming right now. Many big tech companies are expanding at a mind-boggling pace, which of course means a rapid influx of applicants. This leads to a need for optimising and streamlining the interview experience.&lt;/p&gt;

&lt;p&gt;We at &lt;a href="https://superbet.engineering"&gt;Superbet&lt;/a&gt; invest a lot into making our interviews concise, comprehensive and reproducible, to ensure all applicants get a fair and equal chance.&lt;/p&gt;

&lt;p&gt;One of the essential parts of our interview process is the &lt;strong&gt;System Design Interview&lt;/strong&gt;. It is not something we invented, but I think we're pretty good at giving candidates fair, yet challenging problems to think about for this ~1 hour section of our hiring flow. In my first 6 months of working at Superbet as a tech lead, I've conducted more than 20 interviews - the majority of which had been focusing on system design. With that experience in my bag, I'll spoil you with the best 7 pieces of advice I could come up with to help you ace your next system design interview.&lt;/p&gt;

&lt;p&gt;During a system design interview you're presented with a technical problem, e.g.: "how would you design an application, like DEV.to?" and your task is to talk the interviewers through your solution while covering a couple of different topic, e.g.: data modelling, services, scaling, frontend, logging and error handling, just to name a few.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-understand-the-problem"&gt;
  &lt;/a&gt;
  1. Understand the Problem
&lt;/h2&gt;

&lt;p&gt;This may sound cliché, but understanding the problem you're presented is going to give you a great advantage. So many candidates rush into trying to pump out a solution as quickly as they humanly can, without taking the time to really try to understand the question or problem in the first place.&lt;/p&gt;

&lt;p&gt;Let's examine why system design interviews exist and what we're trying to measure. Contrary to popular belief, after the interview concludes, we don't actually take the plan you've given us and turn it into the next unicorn startup. We're actually okay with you not giving us a full solution. What we're looking for is the way you approach a technical problem and how well you can reason about your decision making.&lt;/p&gt;

&lt;p&gt;The skills you will showcase during the system design interview will be able to tell us how well you'll manage problems in all sort of areas of engineering and not just in the specific environment that's presented during the interview.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-collect-all-of-the-requirements"&gt;
  &lt;/a&gt;
  2. Collect all of the Requirements
&lt;/h2&gt;

&lt;p&gt;A big mistake a lot of good engineers make, when tackling a system design interview is the lack of questions about the problem. We can't really score you on the assumptions you've made during the interview, although they do give us good insight into how your mind works. It's always safer to just take your time and ask all of the questions that come to your mind.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I like to say this phrase when introducing the system design interview to candidates who hadn't had a chance to take part in one yet: "your questions are just as valuable as your answers".&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A good rule of thumb is, if you're about to answer a question starting with "it depends", instead, explain that you need further clarification of specific parameters of the problem that will help you inform your decision. For example, don't just assume you can use AWS for everything. Certain countries may have regulations that prohibit businesses in a couple of different sectors from relying on cloud infrastructure and therefore you'd need to take into consideration the use of on-premise solutions if this is the case.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-focus-on-note-taking"&gt;
  &lt;/a&gt;
  3. Focus on Note Taking
&lt;/h2&gt;

&lt;p&gt;I know I have a horrible short term memory. To help with remembering details I take notes throughout the day and review them regularly. You don't have to have a bad memory to take advantage of note taking. It will not only benefit you in an extremely stressful situation, by taking reliance on your memory out of the equation, but it also helps interviewers by showcasing what information you're focusing on.&lt;/p&gt;

&lt;p&gt;Sometimes a system design interview will present you with a complex problem, especially as you climb higher on the engineering ladder. It's okay to lose track during the interview, however, the way you handle the situation or prevent it from happening in the first place is what's really important to us.&lt;/p&gt;

&lt;p&gt;If you're sharing your screen during the interview or are doing the interview in person, you will have a way of showing your notes to your interviewers. I recommend making sure they're aware that you're taking notes and ask if they're interested in your notes. Chances are they will be.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-use-a-visualisation-tool"&gt;
  &lt;/a&gt;
  4. Use a Visualisation Tool
&lt;/h2&gt;

&lt;p&gt;The result of the system design interview is a snapshot of a working system with explanation of the choices you've made while coming up with the design. One of the biggest challenges for both the interviewers and the candidates is to keep track of the final solution. We always recommend our candidates to use a visualisation tool that can not only help them with an overview of what they have so far, but also to help us see the solution at a bird's eye view.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The tool I recommend using is &lt;a href="https://app.diagrams.net/"&gt;Draw.io&lt;/a&gt;. The disadvantage of it is that there's no live sharing feature, so the only way for us to see your solution is for you to share your screen. &lt;a href="https://docs.google.com"&gt;Google Docs&lt;/a&gt; is also a viable alternative, albeit with limited options when it comes to drawing shapes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#5-do-not-get-lost-in-the-details"&gt;
  &lt;/a&gt;
  5. Do Not Get Lost in the Details
&lt;/h2&gt;

&lt;p&gt;Your solution should be comprehensive and should cover a wide array of topics of software design. It's also important to discuss edge cases and non-critical system components, e.g.: logging. The number one reason candidates fail to deliver a full solution to the system design interview on time is lack of focus on higher level issues, a.k.a.: getting lost in details.&lt;/p&gt;

&lt;p&gt;To make sure you don't lose yourself in the little details of your solution, I recommend the following approach. Instead of picking the area you're most familiar with, and expanding on it horizontally - you should start at the highest possible level. Explain what you expect your application to be able to do and then work your way down into the specifics of each component of the system.&lt;/p&gt;

&lt;p&gt;As an interviewer, I want to intervene as little as possible during the interview. I want to keep the candidate talking, without having to guide them. When you get lost in the details, your interviewer has to make a decision to intervene and interrupt the flow or let you talk, but risk you wasting precious time in details that are not required in your solution. The best way to make sure you provide enough detail is to ask before you give your solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-talk-through-your-process"&gt;
  &lt;/a&gt;
  6. Talk Through Your Process
&lt;/h2&gt;

&lt;p&gt;From my experience, the most successful candidates all have one quality in common. They are vocal. You might be someone who finds it easy to talk through your thinking process, however that isn't true for everybody and I appreciate that. It's something not everyone's good at naturally, however I recommend practicing thinking out loud, while you're preparing for an interview and you'll find it easier to do during your system design interview as well.&lt;/p&gt;

&lt;p&gt;Why is this important at all? To be an effective engineer, your communication skills are extremely important. For more junior engineers we want to make sure that you'll be able to ask your more senior teammates for advice when working on your tasks, while as a senior, we're looking for you to be able to jump in and mentor your teammates, as well as take part in discussions about tech.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-do-not-be-afraid-to-ask-for-help"&gt;
  &lt;/a&gt;
  7. Do Not Be Afraid to Ask for Help
&lt;/h2&gt;

&lt;p&gt;When you're doing your system design interview at Superbet, we'll try to create the atmosphere of a nice open-ended discussion between tech enthusiasts. As such, we'll be open to answering any and all of the questions you may come up with during the interview.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Have you ever wanted to say during an interview: "I'd just Google x and y"?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On a system design interview it's okay not to know the exact technology or library that you'd use for a solution. In the real world you will be able to get help with all of that, whether it be reading documentation or looking the problem up on StackOverflow.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"I'd use Redis, because I don't have to worry about persistence or memory use, but I need very quick reads and a way to publish changes as they happen"&lt;/em&gt; scores just as well as &lt;em&gt;"I'd use an in-memory database, because I don't have to worry about memory and they have quicker access speeds. If it's got built in pub/sub, it's even better. Can you suggest such a database?"&lt;/em&gt;. Remember, we're interested in your reasoning above all and if the actual answer is just a Google search away, we'll be happy to help you out with it.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you haven't been in a system design interview or are looking to improve the outcome of your next one, hopefully my tips will get you there. Remember, your mileage may vary. Not everybody does interviews the same way, so if you want to be safe, you can use all of the above in your interview at Superbet. You can find a link to our open positions page on &lt;a href="https://superbet.engineering"&gt;our engineering website&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>systems</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>career</category>
    </item>
    <item>
      <title>How to use the Spotify API In Your React JS App</title>
      <author>Dom the dev</author>
      <pubDate>Fri, 17 Dec 2021 11:14:02 +0000</pubDate>
      <link>https://dev.to/dom_the_dev/how-to-use-the-spotify-api-in-your-react-js-app-50pn</link>
      <guid>https://dev.to/dom_the_dev/how-to-use-the-spotify-api-in-your-react-js-app-50pn</guid>
      <description>&lt;p&gt;In this tutorial you will learn how to use the Spotify Api in your application.&lt;/p&gt;

&lt;p&gt;GitHub Files: &lt;a href="https://github.com/dom-the-dev/spotify-with-react"&gt;https://github.com/dom-the-dev/spotify-with-react&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/channel/UCAa2t4QIxlaUuPO2FKq5TDw?sub_confirmation=1"&gt;Subscribe to my YouTube Channel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also made a step by step &lt;a href="#video"&gt;video&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#list-of-contents"&gt;
  &lt;/a&gt;
  List of contents
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#create-spotify"&gt;Create Spotify App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup-react"&gt;Setup React Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#token"&gt;Access Token&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#logout"&gt;Logout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetch-data"&gt;Fetching Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#display-data"&gt;Displaying Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#create-spotify-app"&gt;
  &lt;/a&gt;
  Create Spotify App &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;First, we need to create a Spotify App at Spotifys developer dashboard. For that you need to login at &lt;a href="https://developer.spotify.com/dashboard/login"&gt;https://developer.spotify.com/dashboard/login&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Click on the green button "Create an App". In the Modal you need to set an app name as well as a description. Confirm the terms and hit the Create button.&lt;/p&gt;

&lt;p&gt;You will be redirected to the spotify app overview. Here you get the Client ID which we will be needing later in our react app.&lt;/p&gt;

&lt;p&gt;To complete this step we need to set the redirect URI. For that click on "edit settings". Under "Redirect URIs" type in  &lt;code&gt;http://localhost:3000&lt;/code&gt; and confirm by clicking on add, then save the settings.&lt;/p&gt;

&lt;p&gt;Now we are ready to start coding.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#setup-react-application"&gt;
  &lt;/a&gt;
  Setup React Application &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Open your terminal and create a new react application with following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app spotify-react
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates a complete react application. With &lt;code&gt;cd spotify-react &amp;amp;&amp;amp; yarn start&lt;/code&gt; you jump into the projects directy and start the development server which then runs at &lt;code&gt;http://localhost:3000&lt;/code&gt; by default.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;(If for whatever reason the port is not 3000 make sure to change the redirect url in your spotify app settings.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  Authentication &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;To be able to use the API, the user needs to be authenticated with his Spotify Account. For that case we need to create a link which leads us to the Spotify Authentication/Login page. &lt;/p&gt;

&lt;p&gt;This links consists of the following params:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Endpoint&lt;/li&gt;
&lt;li&gt;Client ID&lt;/li&gt;
&lt;li&gt;Redirect URI &lt;/li&gt;
&lt;li&gt;Response Type&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's start coding, open up &lt;code&gt;App.js&lt;/code&gt; and remove all that stuff you don't need, so you app will look similiar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App-header"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's add the variables which we then use for our authentication link. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;(You get the &lt;code&gt;CLIENT_ID&lt;/code&gt; from the Spotify App Overview, mentioned at the beginning.)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CLIENT_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;+++++++++++++++++++++++++++++&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;REDIRECT_URI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:3000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AUTH_ENDPOINT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://accounts.spotify.com/authorize&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;RESPONSE_TYPE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can create the link in the return of our &lt;code&gt;App.js&lt;/code&gt; which looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;AUTH_ENDPOINT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?client_id=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;CLIENT_ID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;redirect_uri=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;REDIRECT_URI&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;response_type=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;RESPONSE_TYPE&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Login to Spotify&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's open http//:localhost:3000 in your browser. When you click on the Login to Spotify link, you will be redirected to the Spotify Authentication page. &lt;/p&gt;

&lt;p&gt;Either you are already logged in, than you just need to accept the terms, or you need to login with your Spotify Account credentials.&lt;/p&gt;

&lt;p&gt;After accepting the terms you will be redirected back to the app at &lt;code&gt;localhost:3000&lt;/code&gt;.&lt;br&gt;
A hash is passed to the URL which contains the &lt;code&gt;access token&lt;/code&gt; which we need to authorize the API calls.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#access-token"&gt;
  &lt;/a&gt;
  Access Token &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;As we want to check for the token as soon as we come back, we use the &lt;code&gt;useEffect&lt;/code&gt; from react.&lt;br&gt;
Then we check the URL for the &lt;code&gt;hash&lt;/code&gt; and extract the &lt;code&gt;token&lt;/code&gt; by performing some tasks. After that we store the token in a state variable with help of the &lt;code&gt;useState&lt;/code&gt; hook as well as we save the token in our localeStorage.&lt;/p&gt;

&lt;p&gt;Import the &lt;code&gt;useEffect&lt;/code&gt; as well as the &lt;code&gt;useState&lt;/code&gt; hook to your application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create the state variable for the token and set it to an empty string by default.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setToken&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The useEffect function will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;access_token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;setToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let me explain what happens in here: &lt;br&gt;
When we open the app, we check if we have a &lt;code&gt;hash&lt;/code&gt; or we already have a token saved in our localStorage. &lt;br&gt;
If we do have a token stored, we simply continue by setting our token state variable.&lt;br&gt;
If we don't have a token, we check if we have a hash. If so we perform tasks on that string to extract the token.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We substring the hash at the beginning. We split the String by the ampersands. Then we search vor that element which contains &lt;code&gt;access_token&lt;/code&gt;. This element than again will be split at the equal sign. The array we get contains the token at index 1.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once we got the token we save it in our localStorage and reset the hash.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#logout"&gt;
  &lt;/a&gt;
  Logout &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;To logout we simply create a function which removes the token from our localStorage as well as we set the state token back to an empty string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's add the Logout Button to our app, rendering conditionally depending on token state.&lt;/p&gt;

&lt;p&gt;The intermediate stand of &lt;code&gt;App.js&lt;/code&gt; should now look like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CLIENT_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;+++++++++++++++++++++++++++++&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;REDIRECT_URI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:3000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AUTH_ENDPOINT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://accounts.spotify.com/authorize&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;RESPONSE_TYPE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setToken&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;access_token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

            &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;
            &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nx"&gt;setToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App-header"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Spotify React&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;AUTH_ENDPOINT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?client_id=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;CLIENT_ID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;redirect_uri=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;REDIRECT_URI&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;response_type=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;RESPONSE_TYPE&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Login
                        to Spotify&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;logout&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Logout&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#fetching-data"&gt;
  &lt;/a&gt;
  Fetching Data &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Now we are ready to start with the fun part. In this tutorial we are searching for artists and display some informations like name and their profile image. Check out the &lt;a href="https://developer.spotify.com/documentation/"&gt;documentation&lt;/a&gt; for way more possibilities.&lt;/p&gt;

&lt;p&gt;First, create two new states, one which will keep our search term, and one which will keep the fetched data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;searchKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setSearchKey&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;artists&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setArtists&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install &lt;code&gt;axios&lt;/code&gt; which will handle our HTTP request with following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and import it to the app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios";
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create the &lt;code&gt;searchArtists&lt;/code&gt; function. We use axios to perform the &lt;code&gt;GET&lt;/code&gt; request to the spotify API endpoint. As request configuration we pass an object which contains the header with the Bearer Authorization and the token. As well as a params object containing the search term and the type of search which is here set to &lt;code&gt;artist&lt;/code&gt;.&lt;br&gt;
Once the request is done, and the fetch successful the response is set to our artists state.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;searchArtists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://api.spotify.com/v1/search&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Bearer &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;q&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;searchKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;artist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="nx"&gt;setArtists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;artists&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To perfom the search lets add the form to our app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;searchArtists&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setSearchKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Search&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are almost there.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#displaying-data"&gt;
  &lt;/a&gt;
  Displaying Data &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The last step is to display the data in our application. For that we let's create the &lt;code&gt;renderArtists&lt;/code&gt; function and call it inside the return of our &lt;code&gt;App.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;renderArtists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;artists&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;artist&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;artist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;artist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;artist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;No Image&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;artist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;renderArtists&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Visit your browser at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;. Login with your Spotify account, enter an artists in the search field and see the data rendered in your app.&lt;/p&gt;




&lt;p&gt;Thank's for reading! I hope you liked this article. Please leave me some feedback! :) &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-by-step-video"&gt;
  &lt;/a&gt;
  Step by Step Video &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/wBq3HCvYfUg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>spotify</category>
      <category>react</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>You want enabling CSS selectors, not disabling ones</title>
      <author>Silvestar Bistrović</author>
      <pubDate>Fri, 17 Dec 2021 11:10:29 +0000</pubDate>
      <link>https://dev.to/starbist/you-want-enabling-css-selectors-not-disabling-ones-4l63</link>
      <guid>https://dev.to/starbist/you-want-enabling-css-selectors-not-disabling-ones-4l63</guid>
      <description>&lt;p&gt;An enabling selector is what I call a selector that does a job without disabling the particular rule. I'll explain using the following example.&lt;/p&gt;

&lt;p&gt;Let's say we have list items and we want to add the margin to the last one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Item 1&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Item 2&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Item 3&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Item 4&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Item 5&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's the usual, disabling way.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nd"&gt;:last-child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, we add &lt;code&gt;margin-bottom&lt;/code&gt; to all elements. Then, we disable the bottom margin on the last element. I call this technique disabling selector since the &lt;code&gt;li:last-child&lt;/code&gt; selector disables the previous selector's rule.&lt;/p&gt;

&lt;p&gt;But we could do better using enabling selectors.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;:last-child&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The selector &lt;code&gt;li:not(:last-child)&lt;/code&gt; is enabling &lt;code&gt;margin-bottom&lt;/code&gt; on all elements except the last one. There's no need to disable anything. That is much readable and maintainable if you ask me.&lt;/p&gt;

&lt;p&gt;Here's another version of the enabling selector for the same example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this version, we add &lt;code&gt;margin-top&lt;/code&gt; to all elements that have a previous sibling, which means to all elements except the first one, which doesn't have a previous sibling.&lt;/p&gt;

&lt;p&gt;There you have it, enabling selectors that do a better job in less code. Here's the demo:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/CiTA/embed/WNogPdB?height=600&amp;amp;default-tab=css&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Kickass VS Code Extensions To Make Your Life Easy</title>
      <author>notmahnoor</author>
      <pubDate>Fri, 17 Dec 2021 11:01:30 +0000</pubDate>
      <link>https://dev.to/notmahnoor/kickass-vs-code-extensions-to-make-your-life-easy-27mn</link>
      <guid>https://dev.to/notmahnoor/kickass-vs-code-extensions-to-make-your-life-easy-27mn</guid>
      <description>&lt;p&gt;Here is a list of some of the extensions that could be useful for primarily front-end developers who want to get the most out of their VS Code. You might be familiar with a lot of them, or you might be not. Either way, these extensions can drastically improve your workflow and make your IDE more attractive. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#for-faster-coding"&gt;
  &lt;/a&gt;
  For Faster Coding
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=kiteco.kite"&gt;Kite&lt;/a&gt;&lt;/strong&gt;: You just have to press the TAB button to have your code auto-completed, saving you a ton of time. Kite works with almost every language!
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"&gt;Live Server&lt;/a&gt;&lt;/strong&gt;: A live reload feature reflected on a local server with whatever it is you’re coding. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.live-sass"&gt;Live SASS Compiler&lt;/a&gt;&lt;/strong&gt;: Compiles your SASS/SCSS file to CSS files in real time all with a live browser reload. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=vsblox.blox"&gt;blox&lt;/a&gt;&lt;/strong&gt;: helps you access the full code of pre-built UI kit components with just a click. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker"&gt;Code Spell Checker&lt;/a&gt;&lt;/strong&gt;: This will tell you when you’ve mistyped something in your code. &lt;/li&gt;
&lt;li&gt;stylint: Amazing to clean up your messy CSS. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=pranaygp.vscode-css-peek"&gt;CSS Peek&lt;/a&gt;&lt;/strong&gt;: Manages pull requests and conducts code reviews in your IDE with full source-tree context.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense"&gt;Path Intellisense&lt;/a&gt;&lt;/strong&gt;: Automatically suggests paths you’re currently working with if you forget the location of your image or you need to fill ‘href’ and ‘src’ tags.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=mikestead.dotenv"&gt;DotENV&lt;/a&gt;&lt;/strong&gt;: Supports and highlights .env files. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#for-easy-reading"&gt;
  &lt;/a&gt;
  For Easy Reading
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=HookyQR.beautify"&gt;Beautify&lt;/a&gt;&lt;/strong&gt;: de-minifies and properly spaces your ugly markup. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;Prettier&lt;/a&gt;&lt;/strong&gt;: Very similar to Beautify, Prettier makes your code pretty and more readable like placing brackets and properly spacing everything automatically. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments"&gt;Better Comments&lt;/a&gt;&lt;/strong&gt;: Creates human-friendly comments in your code. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=alefragnani.Bookmarks"&gt;Bookmarks&lt;/a&gt;&lt;/strong&gt;: Helps you navigate your code, jumping from one section to the other easily. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=emilast.LogFileHighlighter"&gt;Log File Highlighter&lt;/a&gt;&lt;/strong&gt;: This gives your VS Code .log file support so the next time you’re reading a log dump, you won’t go bonkers. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=metaseed.metago"&gt;MetaGo&lt;/a&gt;&lt;/strong&gt;: Focused on more keyboard usage with fast cursor movements/selections. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme"&gt;Material Icon Theme&lt;/a&gt;&lt;/strong&gt;: Adds visual icons for every file you’re currently using to help you keep track of all the files. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2"&gt;Bracket Pair Colorizer 2&lt;/a&gt;&lt;/strong&gt;: Helps you find where one bracket starts and ends, and helps you understand the structure of a function. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=kisstkondoros.vscode-gutter-preview"&gt;Image Preview&lt;/a&gt;&lt;/strong&gt;: Helps you check if you’ve referenced the correct image/icon by showing a preview on hover and in the gutter. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=2gua.rainbow-brackets"&gt;Rainbow Brackets&lt;/a&gt;&lt;/strong&gt;: Highlights the current bracket-set you are in to identify your location easily.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#other-fun-extensions"&gt;
  &lt;/a&gt;
  Other Fun Extensions
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=icrawl.discord-vscode"&gt;Discord Presence&lt;/a&gt;&lt;/strong&gt;: Displays your discord status as ‘coding’ so your friends know when it’s best to not disturb you. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync"&gt;Settings Sync&lt;/a&gt;&lt;/strong&gt;: Syncs your settings, themes, snippets, launch, file icons, keybindings, extensions, and workspaces between multiple VS Code instances using a private gist. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=pnp.polacode"&gt;Polacode&lt;/a&gt;&lt;/strong&gt;: Highlights your code and snaps a clean screenshot with your code’s theme colors. Great tutorials and documentation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme"&gt;One Dark Pro&lt;/a&gt;&lt;/strong&gt;: This is for when you don’t quite like VS Code’s default design theme. You can configure everything as you want it—font size, italics, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A lot of these have been tried and tested by me and my fellow devs, so if you spot the one that's your ideal choice and a choice you can’t live without, give a hoot! And if this article helps you find ‘the one’ for you, please comment and let others know so they could hop on the bandwagon as well!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>vscode</category>
      <category>webcomponents</category>
      <category>programming</category>
    </item>
    <item>
      <title>Number one question on every PHP interview </title>
      <author>Damian Brdej</author>
      <pubDate>Fri, 17 Dec 2021 10:40:27 +0000</pubDate>
      <link>https://dev.to/quentindamianino/number-one-question-on-every-php-interview-2na2</link>
      <guid>https://dev.to/quentindamianino/number-one-question-on-every-php-interview-2na2</guid>
      <description>&lt;p&gt;I am a PHP programmer and have been on many job interviews. I noticed that on each of them one question always came up.&lt;/p&gt;

&lt;p&gt;That question is:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's the difference between abstract class and interface?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The answer to this question is simple and proves the candidate's familiarity with object-oriented programming.&lt;/p&gt;

&lt;p&gt;So let's compare these two:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#abstract-class"&gt;
  &lt;/a&gt;
  Abstract class
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It can provide some functionality and leave the rest for the derived class.&lt;/li&gt;
&lt;li&gt;The derived class may or may not override the concrete functions defined in the base class.&lt;/li&gt;
&lt;li&gt;A child class extended from an abstract class should logically be related.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To declare class to be abstract just simply &lt;code&gt;abstract&lt;/code&gt; before &lt;code&gt;class&lt;/code&gt; keyword&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interface"&gt;
  &lt;/a&gt;
  Interface
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It cannot contain any functionality. It only contains definitions of the methods.&lt;/li&gt;
&lt;li&gt;The derived class MUST provide code for all the methods defined in the interface.&lt;/li&gt;
&lt;li&gt;Completely different and non-related classes can be logically grouped together using an interface.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To declare interface use &lt;code&gt;interface&lt;/code&gt; keyword&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Template
{
    public function setVariable($name, $var);
    public function getHtml($template);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>programming</category>
      <category>webdev</category>
      <category>php</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Node.js vs PHP: Which is better for backend development?</title>
      <author>indumathysk</author>
      <pubDate>Fri, 17 Dec 2021 10:25:57 +0000</pubDate>
      <link>https://dev.to/hireindianprogrammers/nodejs-vs-php-which-is-better-for-backend-development-4p4n</link>
      <guid>https://dev.to/hireindianprogrammers/nodejs-vs-php-which-is-better-for-backend-development-4p4n</guid>
      <description>&lt;p&gt;There are many facets of web development that are constantly evolving. Likewise, the app development and programming communities have to contend with a constant influx of new technologies and tools. In their minds, the two types of solutions are not distinct: the long-term and mature and the latest and upcoming.&lt;/p&gt;

&lt;p&gt;Programmers dealing with backends usually have to choose between PHP vs Node.js. Both these languages are used to create unique websites. In addition, people use PHP to develop server-side applications and Javascript for constructing front-end applications.&lt;/p&gt;

&lt;p&gt;Popular sites that use Node.js include Twitter, Spotify, Medium, Trello, etc., and sites that use PHP are Facebook, Wikipedia, WordPress, Instagram, etc. &lt;/p&gt;

&lt;p&gt;The market share of PHP stands at 45.43%, and Node.js stands at 4.24%, according to a report by SimilarTech.&lt;/p&gt;

&lt;p&gt;Then, why did everything suddenly change? What changed? Backend programmers shifted their attention from traditional PHP to JS, which took the form of an all-new Node.js.&lt;/p&gt;

&lt;p&gt;Importance Of The Right Backend Technology&lt;br&gt;
A web page features technology from both sides: the client-side and the server. These include a backend language, a database, and a server that is invisible to users. As the most widely used server-side technologies, both Node.js and PHP run the internet, and both are capable of running applications of any complexity. &lt;/p&gt;

&lt;p&gt;Therefore, choosing the correct backend technology is critical for a project. Conversely, a wrong choice can spell disaster for any business. &lt;/p&gt;

&lt;p&gt;Especially for small businesses, selecting the right technology can seem overwhelming because a wrong decision will have more significant consequences for a small company that often has limited resources. &lt;/p&gt;

&lt;p&gt;Here in this article, we compare both PHP vs Node.js in greater detail.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A Brief Overview Of Node.js&lt;/strong&gt;&lt;br&gt;
JavaScript V8 Engine in Chrome is the foundation for Node.js backend development, a cross-platform and open-source javascript runtime environment. It was developed by Ryan Dahl, an American software engineer. &lt;/p&gt;

&lt;p&gt;Although Node.js is relatively new, Microsoft, Yahoo, LinkedIn, and PayPal are among the companies that already use Node.js. &lt;/p&gt;

&lt;p&gt;As per a report, 1.6% of all websites known to web use Node.js. It allows the developers to leverage asynchronous programming, which is the primary advantage of Node.js. Developers no longer need to wait for functions and procedures to run. &lt;/p&gt;

&lt;p&gt;There is no linear or line-by-line execution of the code, and it is executed all at once.  Another great advantage is that multiple databases are supported by Node.js backend development. That is why people are saying that Node.Js is the future of web development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When To Use Node.js&lt;/strong&gt;&lt;br&gt;
To achieve the best app performance, we will determine when to use Node.js. Also, now that you have an overview of Node.js, let’s look at some examples illustrating when to use Node.js’ on the practical level. &lt;/p&gt;

&lt;p&gt;Real-time Application&lt;br&gt;
IoT Applications&lt;br&gt;
Data Streaming Applications&lt;br&gt;
Chat Application&lt;br&gt;
Single-page Application&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages Of Node.js&lt;/strong&gt;&lt;br&gt;
Node.js has many advantages, but the below mentioned are the prominent ones:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Node.js Offers Easy Scalability&lt;br&gt;
Node.js is built to scale; also, it’s an excellent choice to use Node.js for microservices architecture because it’s a lightweight technology tool. Small app developers use it to build light, fast, real-time systems that can be scaled up later or easily added on to existing systems. There is no limit to the heights you can reach with it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Easy To Learn&lt;br&gt;
Node.js programming is relatively intuitive once you are proficient in JavaScript and Object-Oriented Programming. Also, to be successful with Node’s asynchronous flow, you have to have a clear understanding of the client-server model.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Because of this, it becomes effortless for them when they choose to use Node.js for the backend. In addition, the high adaptation rate reduces overall development time since the development rate is high.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Node.js – A Single Programming Language&lt;br&gt;
Node.js is a programming language that you can use to power back-end applications developed with JavaScript. Also, JavaScript is used on the front end and the back end, and you can use the same language for both ends of the website, resulting in better productivity. In addition to its simplicity, Node.js allows you to create web applications compatible with nearly every web browser because it supports JavaScript.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Benefit Of Fullstack Js&lt;br&gt;
JavaScript was used exclusively on the client-side before Node.js. At the same time, server-side development was then handled by a different language. As a result, backend and frontend developers have to be hired separately in practice.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Full-stack JavaScript became possible due to the popularity of Node.js. These days, web applications can be implemented in the front-end and back-end with JavaScript, allowing much more efficient app deployments.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Fast Solution&lt;br&gt;
The response time in the middle of testing can be significant, as it determines how well the startup will perform in the long run. Node.js provides a quick response time for developers, thus providing a much-needed benefit. Also, Node.js lightweight technology comes with a set of tools that speeds up the development process. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enhanced Flexibility&lt;br&gt;
Technology such as Node.js is highly flexible, so the requirements of a business or project can be met by customizing it. Moreover, web developers can create client-server communication by combining JSON and Node.js. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thanks to its support for JSON formats, Node.js is a highly flexible framework. JSON is an API that can communicate with apps, clients, and servers across the network.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Known For Offering High Performance
To understand how Node.js accomplishes this, it is vital to know how the underlying technology works. Software development calls for smooth operations, and Node.js makes that possible. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For Node.js to function appropriately, Google’s V8 JavaScript engine is needed as JavaScript engines compile directly to machine code. Thus, when the code is compiled directly into machine code, it runs faster and better. Also, due to non-blocking I/O operations provided by the runtime environment, executing the code is made considerably faster.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The Advantage Of Caching
The Node.js runtime environment has a caching module among its many features. Also, it is possible to optimize Node.js by using caching services. An application memory cache stores the first module request made when a request is made. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As a result, developers don’t have to execute their code as often as site loads by the caching module respond instantly to users. Using this method, you can let your users view your web pages within a fraction of a second, so they will not have to wait too long.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Offers The Freedom To Develop Apps&lt;br&gt;
Node.js offers more freedom and room to do things your way than other programming languages. This language is incredibly flexible so that you can customize every element completely. It allows you to add features with fewer restrictions from a fresh install, but it can only execute basic tasks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Real-Time Communication &lt;br&gt;
When it comes to data-intensive, real-time apps and IoT devices, Node.js is considered the most suitable technology because it is both scalable and quick at the same time. Therefore, IoT apps and real-time apps using this technology are perfect for IoT devices. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Applications such as forums, social networks, stock exchange software, and advertising servers can be connected to node.js constantly via two-way connections. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages Of Node.js&lt;/strong&gt;&lt;br&gt;
Node.js isn’t picture-perfect. Here we have mentioned a few weak points you can look out for when choosing Node.js:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Application Programming Interface (API) Is Not Stable&lt;br&gt;
Node.js has a significant disadvantage because the API frequently changes, resulting in backward incompatibility. The incompatibility leads to its instability, which leads to heavy code changes. To sync with the latest Node.js API version, they constantly have to change the access code. Additionally, constant changes in codes are needed to keep up with the newest version.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lacks a robust library support system&lt;br&gt;
If Node.js is used to create a web application, monitoring becomes complex. This is only because Node.js has several registrations and libraries of poor quality or incomplete and inadequately documented. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Due to the extensive libraries and modules available, it is open-source, resulting in low coding standards. Therefore, you can only succeed in your project if you hire well-qualified and experienced experts with reputable expertise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A Brief Overview Of PHP&lt;/strong&gt;&lt;br&gt;
PHP stands for Hypertext Preprocessor. Rasmus Lerdorf developed it in 1995. &lt;/p&gt;

&lt;p&gt;A PHP application runs on a web server and does not rely on the online browser. It uses the same syntax as that of a C programming language. &lt;/p&gt;

&lt;p&gt;PHP is a favorite amongst newbies and established developers worldwide for various reasons, including its range of functionalities, a fantastic array of add-ins to extend functionality, and a unique online community, which directly contributes to its popularity. According to a report by Statista, PHP is the 11th most practiced programming language worldwide as of 2021. Even it is very important for PHP developers to take their roles and responsibilities seriously for developing any applications. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When To Use PHP?&lt;/strong&gt;&lt;br&gt;
All domains use PHP to develop web applications and other software. Below we have mentioned a few areas where you should use PHP for development by hiring the best PHP developers:  &lt;/p&gt;

&lt;p&gt;Image processing&lt;br&gt;
Representation and data analytics&lt;br&gt;
E-commerce applications and websites&lt;br&gt;
Content Management System&lt;br&gt;
UI/UX based Applications&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages Of PHP&lt;/strong&gt;&lt;br&gt;
Among PHP’s many advantages are its performance, stability, and user-friendliness, which have led to its popularity. In the following list, we discuss the benefits of PHP in more detail:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Quick Unit Testing&lt;br&gt;
It is easy to test PHP-based web applications. Its quick testing feature is an easy way to test PHP backend development. This feature also helps the programmers with writing test cases and facilitates smooth testing. Furthermore, PHP-based web applications do not require additional code written by the developers as many of the tasks can be automated using PHP frameworks. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Platform Independent&lt;br&gt;
Almost all operating systems are supported by PHP, including Windows, Unix, and Linux. Therefore, you can use PHP to develop web applications on any operating system. Furthermore, with PHP, integration with other programming languages and databases is easy, and also there is no need to rewrite the program.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Maintenance&lt;br&gt;
Frameworks like PHP help in developing web applications, and also maintaining the code is much easier. PHP framework’s model view controller architecture simplifies the maintenance and use of code. In addition, it helps separate files for different modules according to the MVC architecture.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stability&lt;br&gt;
In addition to its user-friendly features, the PHP backend development is also very stable. Since PHP was developed, it has grown in popularity. Its goal is to make it easier for programmers to build PHP-based web applications. During the time they have been using PHP, they have fixed many of the issues and bugs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Higher Loading Speed&lt;br&gt;
Compared with other programming languages, PHP is fast. Therefore, slow internet and data speeds are no problem for PHP applications. However, it takes a long time for other applications to connect to the database and download the data after queries are made. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Less Coding &lt;br&gt;
Programmers can keep the source code of web applications clean and maintainable with the code generation tools provided by specific PHP frameworks. This makes it easy for PHP programmers to add features or functionality to a website without writing lengthy and complex codes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;User-Friendly&lt;br&gt;
The PHP language is easy to learn in application development, especially for developers with C programming experience. However, among all the programming languages available to developers, PHP is only the first choice if you are trying to build dynamic, complex, and user-friendly web applications.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Built-In Database Connection&lt;br&gt;
Connecting multiple built-in databases directly reduces the time and trouble needed to develop web applications and content-based sites altogether. There are a variety of widely used relational databases that PHP developers can use. Frameworks that provide object-relational mapping systems further simplify database operations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Library Support&lt;br&gt;
Utilizing PHP has another advantage of providing functional modules. Different available modules are essential for helping to simplify your work. Since the modules have already been developed, you don’t need to create them from scratch. Including the module and maybe making a few modifications is all that will be required. PHP includes a variety of modules, including Graphics and PDF&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages Of PHP&lt;/strong&gt;&lt;br&gt;
Despite PHP’s usefulness, the language also has several drawbacks that limit its dominance in that field. These are the drawbacks that we examined to get a clearer picture.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Security Issues&lt;br&gt;
PHP-based products continue to raise security concerns due to several reasons over the years. First, its open-source nature ensures that once a vulnerability is found, it becomes common knowledge. These vulnerabilities can therefore be exploited by any programmer with malicious intent and adequate skills. And it can only be fixed when the bug is removed in a new version.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Doesn’t Allow Change Or Modification&lt;br&gt;
Frameworks for PHP provide a base structure for developing web applications and a way to build custom applications. Although developers do not have any control over the core behavior of these frameworks, they still lack any option to modify them. In this way, you cannot change the core behavior of a web application in PHP.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Difference Between Node.js And PHP&lt;/strong&gt;&lt;br&gt;
PHP and Node.js provide robust, dynamic, and efficient server-side development platforms, which have become competitors because of their powerful features. &lt;/p&gt;

&lt;p&gt;Although the two scripting languages compete with each other, there are also some differences between them. Listed are some examples of some of the differences. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Runtime Environment
JS languages are run on a server with Node.js, designed to run externally in a browser. Web browsers with such capabilities can perform functions on the client-side without requiring any platform-specific components. In addition, it allows developers to use JavaScript beyond the browser.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The PHP scripting language is used to write web pages. The webserver module of the Zend engine could be used with an interpreter to run it in a browser. The PHP programming language was designed to deliver web content to browsers.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Modules
Node.js supporters complain that PHP projects are more stable than Node.js projects. With the npm-audit initiative, the Node.js package registry aims to provide more control over its packages. This enables you to check for malicious code in each box. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;On the other hand, the PHP programming language has been dominant in this area for many years. There have been recent complaints from some PHP loyalists that they don’t receive good projects. Since PHP is capable of being imported on other platforms, they have migrated to other platforms.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Scalability
Upon comparing Node.js vs PHP scalability, both technologies prove to be scalable. It’s possible to build large scalable applications with either PHP or Node.js. Yet, there are some critical differences in how efficiently you can create scalable applications.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the context of e-commerce and blogs, PHP is often a go-to tool for building web applications where most content management systems are supported. The Node.js framework, on the other hand, can be used to create dynamic, scalable solutions geared towards handling numerous I/O operations. Additionally, you can scale Node.js on multi-core systems, but this may require more work.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Performance
Code performance is measured by how well PHP or Node.js code is written, how quickly pages load, and how seamless the application performs. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Its asynchronous nature and its JavaScript V8 engine make Node.js extremely fast and remarkably fast at executing code. However, the event-driven nature of Node.js prevents it from blocking existing requests from being completed.&lt;/p&gt;

&lt;p&gt;PHP performance on page-load time efficiency shows that it was developed much earlier. This results in slow loading and no chance for concurrency since the process is blocked until it’s fully calculated. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;DataBase
It’s much easier to understand how disparate data points are related when using relational databases because data is stored in tables. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Databases stored in NoSQL databases can include almost any data structure, including structured, semistructured, and unstructured. NoSQL databases are therefore the best choice for developers. &lt;/p&gt;

&lt;p&gt;Node.js has grown in tandem with the NoSQL database revolution, which means it is compatible with various databases. Databases like MongoDB and CouchDB are compatible with Node.js.&lt;/p&gt;

&lt;p&gt;While PHP works on traditional databases like MySQL and MariaDB, you can access NoSQL databases with library import, but it is a complicated process that takes time.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Frameworks
The most common components of your project are already provided in the form of libraries, functions, and APIs by frameworks. Therefore, it takes you less time to write redundant code using an extensive framework. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Node.js’s libraries have seen massive growth in a relatively short period due to frameworks like Meteor and Sails. As a result, the number of frameworks is much higher, allowing for faster development by reducing resource consumption.&lt;/p&gt;

&lt;p&gt;Moreover, PHP frameworks have been around since 1995 with hundreds of niche markets. Laravel, CakePHP, and Phalcon are some of the most commonly used frameworks by many programmers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What to Choose:&lt;/strong&gt; &lt;a href="https://hireindianprogrammers.com/nodejs-vs-php/"&gt;Node.js or PHP for Backend Development?&lt;/a&gt;&lt;br&gt;
To compare Node.js vs PHP, it is impossible to determine which is better. Rather than choosing a technology based on features alone, you should first assess the project’s requirements and then select the one that fits them.&lt;/p&gt;

&lt;p&gt;For instance, the prominent companies that utilize Node.js include  Netflix, Paypal, NASA, Trello, etc. These companies decided to move to Node.js for its features like real-time open connection, speedy delivery, and reduced development time. &lt;/p&gt;

&lt;p&gt;Therefore, if you have an app that needs frequent updates, Node.js would be a good choice.&lt;/p&gt;

&lt;p&gt;Companies like Facebook, Wikipedia, MailChimp, WordPress, etc., utilize PHP for their app development. These companies have been using PHP for quite some time now. &lt;/p&gt;

&lt;p&gt;They use PHP to create full-fledged static HTML websites to improve the development process and save time making a source code each time.&lt;/p&gt;

&lt;p&gt;However, it is essential to remember the best thing about both of them is that the best experts create them in the field to develop web and mobile applications more effectively and efficiently.&lt;/p&gt;

&lt;p&gt;So, when selecting a technology, your task should determine which one will best satisfy your project requirements. Then, with an understanding of your business logic and project goals, you can select the most suitable technology platform for your project.&lt;/p&gt;

</description>
      <category>php</category>
      <category>node</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Test Orchestration: What, Why, and How</title>
      <author>Cody Simons</author>
      <pubDate>Fri, 17 Dec 2021 10:20:18 +0000</pubDate>
      <link>https://dev.to/codysimons20/test-orchestration-what-why-and-how-3cbc</link>
      <guid>https://dev.to/codysimons20/test-orchestration-what-why-and-how-3cbc</guid>
      <description>&lt;p&gt;In the agile development methodology, the velocity of testing holds the key to delivering the best quality software within the stipulated budget and time constraints. As such, this drives the need to automate the testing process. Most software development teams visualize test automation as a discreet step in the delivery lifecycle instead of viewing it as a designed sequence of steps. There are various aspects of testing through which software needs to pass, such as unit testing, functional testing, integration testing, smoke testing, performance testing, and more. Each of these needs to be automated in order to achieve certainty of software behavior and reduce the time to test. However, simply automating the tests is not enough to achieve the desired levels of quality and reduction in the time and cost to get there. This is where test orchestration plays an essential role.&lt;br&gt;
&lt;a href="https://www.katalon.com/resources-center/blog/test-orchestration/"&gt;Continue reading&lt;/a&gt;&lt;/p&gt;

</description>
      <category>testorchestration</category>
      <category>testautomation</category>
      <category>tests</category>
    </item>
    <item>
      <title>The Arrow Function in JS!</title>
      <author>Ustariz Enzo</author>
      <pubDate>Fri, 17 Dec 2021 10:14:06 +0000</pubDate>
      <link>https://dev.to/ziratsu/the-arrow-function-in-js-528f</link>
      <guid>https://dev.to/ziratsu/the-arrow-function-in-js-528f</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;arrow function&lt;/em&gt; exists since 2015 and is quite different from the classic functions. Let’s see how !&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/O6lMYOT6XLs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-how-to-use-an-arrow-function"&gt;
  &lt;/a&gt;
  1. How to use an arrow function.
&lt;/h2&gt;

&lt;p&gt;Here is the basic syntax, we don't need the "function" keyword and we put it by default in a constant, that way we won't have hoisting issues.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have just a return, you can use the short version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have one parameter (but only one), you can remove the parenthesis which would make it even more concise:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It’s very useful when you use it with some higher order function like the &lt;em&gt;map.()&lt;/em&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;multiplied&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-the-difference-between-a-classic-function-and-an-arrow-function"&gt;
  &lt;/a&gt;
  2. The difference between a classic function and an arrow function.
&lt;/h2&gt;

&lt;p&gt;The main difference between the classic and arrow function is the value of "this".&lt;/p&gt;

&lt;p&gt;If you use a classic function as the value of a property in an object, "this" will refer to the calling context, i.e. the obj where the function is defined :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// {a: 5, foo: ƒ}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Otherwise, if you use an arrow function, "this" will return the global object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Window Object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In that case, this will refer to the parent of the calling context, thus the global object.&lt;/p&gt;

&lt;p&gt;Instead of refering the direct context, it will refer to the parent of that context.&lt;/p&gt;

&lt;p&gt;You need to keep that difference in mind when you are dealing with functions and the "this" keyword.&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
