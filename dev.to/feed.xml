<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>JavaScript Baseball</title>
      <author>Tim Myers</author>
      <pubDate>Sat, 10 Apr 2021 15:40:05 +0000</pubDate>
      <link>https://dev.to/denvercoder/javascript-baseball-3pl4</link>
      <guid>https://dev.to/denvercoder/javascript-baseball-3pl4</guid>
      <description>&lt;h1&gt;
  &lt;a href="#do-it-because-its-fun"&gt;
  &lt;/a&gt;
  Do It Because It's Fun
&lt;/h1&gt;

&lt;p&gt;Some advice I give to people a lot is once you have a good grasp on your preferred language you should build something you're passionate about or something you enjoy.&lt;/p&gt;

&lt;p&gt;With new programmers a lot of the struggle is habit building. Getting into the groove of studying and learning takes time. And it's a lot easier if you're having fun while you're doing it.&lt;/p&gt;

&lt;p&gt;Now the key like I said before is to try and create a project that you find interesting. You may be thinking, "But I only like nuclear physics... how am I going to write a program about that?"&lt;/p&gt;

&lt;p&gt;The key here is not to build some elaborate project... at least not at first. You could create a project that asks you Nuclear Physics questions and you can keep track of correct answers and provide a scoreboard.&lt;/p&gt;

&lt;p&gt;Then you can build on that idea. You can add multiplayer support. A timer to answer the questions. Some fun animations, etc. Just add onto it piece by piece until you have something.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#play-ball"&gt;
  &lt;/a&gt;
  Play Ball
&lt;/h1&gt;

&lt;p&gt;I'm not particularly fond of Baseball. I played Little League as a kid, I umpired games for the &lt;strong&gt;really&lt;/strong&gt; small kids, and I played in High School. But I sort of lost interest in it after that.&lt;/p&gt;

&lt;p&gt;I decided to do this project because I had given this project to people that I had mentored in the past and I wanted to see how difficult it really was, (maybe I was asking too much of them). Now, I didn't build a Baseball game with full 3D graphics and controller support. It's basically just a bunch of HTML output in the browser:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oRq834rI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ro0xnc7dp9ycq3rxzn7q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oRq834rI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ro0xnc7dp9ycq3rxzn7q.png" alt="A baseball scoreboard with Away Team and Home team, outs, strikes, balls, who is at bat, and runners on base"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I've abstracted away a lot of the complexity. You don't swing at a pitch or anything. You just pitch the ball. Then a random number generator will either make that pitch a "strike", or a "ball". Once you get to 4 balls the batter is "walked". If you get 3 "strikes" the batter is out. Basically I just use the fundamental rules of baseball to keep track of everything.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nbz3I8M8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilxlidn6mqnind98t4qd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nbz3I8M8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilxlidn6mqnind98t4qd.png" alt="A code file showing a switch statement"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I picked baseball because it's a relatively slow paced game but you can really do this with anything:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Horse Racing&lt;/li&gt;
&lt;li&gt;Tennis&lt;/li&gt;
&lt;li&gt;A simple solar system simulator&lt;/li&gt;
&lt;li&gt;Cricket&lt;/li&gt;
&lt;li&gt;A (Pet) Program where there is a creature of some sort that you have to take care of.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are tons of options. Pick something you enjoy and simulate it. Start small, and build the project up. Do you think that Twitter or Dev.to started out the way they are now? Nope. Twitter probably had the ability to login and send a message and that was it. You probably couldn't like, follow, retweet, block, mute, etc. They built an app with minimal functionality and build up from there.&lt;/p&gt;

&lt;p&gt;Here is the link to my &lt;a href="https://github.com/denvercoder/easy-baseball"&gt;easy-baseball&lt;/a&gt; repo if you'd like to take a look at the whole project. You can run it yourself and try and figure out how it works. It's actually not a lot of code so don't be intimidated. Just go have a look. &lt;/p&gt;

&lt;p&gt;If you want you have my full permission and encouragement to build on this project. There isn't a lot of functionality and there are a few bugs. See if you can find them and fix them.&lt;/p&gt;

&lt;p&gt;Thanks for reading and that's all y'all.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>API, FUNCTIONS, BUTTON NOT FIRING IN REACT</title>
      <author>ADEKOLA Abdwahab</author>
      <pubDate>Sat, 10 Apr 2021 14:53:36 +0000</pubDate>
      <link>https://dev.to/codarbind/api-functions-button-not-firing-in-react-2hcc</link>
      <guid>https://dev.to/codarbind/api-functions-button-not-firing-in-react-2hcc</guid>
      <description>&lt;p&gt;I am currently building a MERN application.&lt;/p&gt;

&lt;p&gt;It is working fine on localhost - desktop, then I thought of exploring it on mobile, so I created a local network. See below for how to create and connect to local network.&lt;/p&gt;

&lt;p&gt;Alas, some of my buttons were not responding.&lt;/p&gt;

&lt;p&gt;What could have happened?&lt;/p&gt;

&lt;p&gt;Upon troubleshooting, I realized that only 'SUBMIT' buttons were not working.&lt;/p&gt;

&lt;p&gt;... after hours of googling ...&lt;/p&gt;

&lt;p&gt;I threw &lt;em&gt;alert('i clicked')&lt;/em&gt; inside the onclick function, I got the alert whenever I clicked.&lt;/p&gt;

&lt;p&gt;It was then I realized that I was calling a wrong API url. &lt;/p&gt;

&lt;p&gt;How?&lt;/p&gt;

&lt;p&gt;The API URL i was calling is &lt;a href="http://localhost:4000"&gt;http://localhost:4000&lt;/a&gt;. Port 4000 was where my backend is connected to. This would work fine on my local machine. However, it wont work over the network, because localhost === 127.0.0.1, which is different from Local Area Network Address - 192.168.43.263 .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOLUTION:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I change &lt;a href="http://localhost:4000"&gt;http://localhost:4000&lt;/a&gt; to &lt;a href="http://192.168.43.263:4000"&gt;http://192.168.43.263:4000&lt;/a&gt; for all instances.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HOW TO CREATE A LOCAL NETWORK?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Simple and straight forward:&lt;/p&gt;

&lt;p&gt;A. Get your local ip:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;open command prompt or any command line interface:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ATlKaTrN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mupzw01wx2atcpvazq6u.png" alt="image"&gt;
&lt;/li&gt;
&lt;li&gt;Type in ipconfig:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1v7iSztD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tentpqkksi71jbdfn04i.png" alt="image"&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click enter:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cX74w4w5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqoupy3sctbr5x90vw5d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cX74w4w5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqoupy3sctbr5x90vw5d.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The marked is your IP.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;B. Connect your laptop (where your localhost is domiciled) to the same network with the other device (may be your phone) you want to use. This could be achieved by connecting them to the same wifi hubspot. &lt;/p&gt;

&lt;p&gt;My mobile device is connected to ColdVi wifi, same with my laptop, hence they are on the same network.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--35yxS5g1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lk42n9evmxxool1nh3a6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--35yxS5g1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lk42n9evmxxool1nh3a6.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C6sSL9qq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi02ezc78wfpgb01ehuc.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C6sSL9qq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi02ezc78wfpgb01ehuc.jpeg" alt="WhatsApp Image 2021-04-10 at 3.26.42 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;C. On the other device, enter this combination in your browser:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://yourIP:port"&gt;http://yourIP:port&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Hjph4Ir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwvpbcvj201i75zct1l7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Hjph4Ir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwvpbcvj201i75zct1l7.jpeg" alt="WhatsApp Image 2021-04-10 at 3.46.29 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;do not miss out the colon in between&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Your site should load.&lt;/p&gt;

</description>
      <category>react</category>
      <category>api</category>
      <category>function</category>
      <category>button</category>
    </item>
    <item>
      <title>Upload images with React, ExpressJS and mySQL</title>
      <author>Maureen </author>
      <pubDate>Sat, 10 Apr 2021 14:53:25 +0000</pubDate>
      <link>https://dev.to/maureenoldyck/upload-images-with-react-expressjs-and-mysql-47jn</link>
      <guid>https://dev.to/maureenoldyck/upload-images-with-react-expressjs-and-mysql-47jn</guid>
      <description>&lt;p&gt;For a project I was working on, we wanted to upload images so users could change their profile picture. As a beginner in React and Node, it took me a little while to finally figure out how to upload an image. That’s why I thought it would be a great subject to write an article about.&lt;/p&gt;

&lt;p&gt;This tutorial will explain you how I upload images in the backend, store the path to that image in our database and finally show the image on the frontend.&lt;/p&gt;

&lt;p&gt;For this tutorial I used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ReactJS -  ^17.0.1 - Frontend library&lt;/li&gt;
&lt;li&gt;NodeJs - ^14.15.4 - Runtime environment for the server&lt;/li&gt;
&lt;li&gt;Multer - ^1.4.2 - Middleware for handling multipart/form-data&lt;/li&gt;
&lt;li&gt;CORS - ^2.8.5 - Package for Cross-origin resource sharing &lt;/li&gt;
&lt;li&gt;ExpressJS - ^4.17.1 - Framework to build our application&lt;/li&gt;
&lt;li&gt;mySQL - ^2.18.1 - Database&lt;/li&gt;
&lt;li&gt;npm - ^6.14.10 - Package manager &lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#1-setup"&gt;
  &lt;/a&gt;
  1. Setup
&lt;/h2&gt;

&lt;p&gt;First things first, create a map where you set-up a React app and ExpressJS. (Please note, NodeJS is already installed on my computer, if you don’t have Node and/or npm yet please follow these instructions: (&lt;a href="https://nodejs.org/en/"&gt;https://nodejs.org/en/&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  React
&lt;/h3&gt;

&lt;p&gt;To create the frontend or "client" map, type in your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app client
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#express-amp-multer-amp-cors"&gt;
  &lt;/a&gt;
  Express &amp;amp; Multer &amp;amp; CORS
&lt;/h3&gt;

&lt;p&gt;Create a server map in your root. Then in the terminal do:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd server
npm init // To create packageJSON
npm install --save express multer cors
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, create an index.js in the server map and require Express, cors and Multer like this ⬇️&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;multer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;multer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For Multer, also set up a storage variable, that leads to the map you want your images to be stored (destination) and a filename, I used the original name of the picture here for filename.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1IVUlLIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0xohhzcmvgaciujhx5fu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1IVUlLIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0xohhzcmvgaciujhx5fu.png" alt="Multer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For CORS, you also need to specify some CORS options, mine are like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yYjB5IDZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chi0eyc0xtp1brvitkez.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yYjB5IDZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chi0eyc0xtp1brvitkez.png" alt="CORS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We use CORS so that we can allow web browsers to access our APIs we are going to create.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mysql"&gt;
  &lt;/a&gt;
  mysql
&lt;/h3&gt;

&lt;p&gt;In your server map install mysql, a node module that will allow you to connect to the database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When that is installed, make a simple database connection like so ⬇️&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U6tUJCdN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hrgn6p5wdguiijqgbjal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U6tUJCdN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hrgn6p5wdguiijqgbjal.png" alt="Database Connection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For easier understanding, this is how my final map structure looks like: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fDglnA7N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9amkvubafpkee3mc2oyf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fDglnA7N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9amkvubafpkee3mc2oyf.png" alt="File Structure"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-code"&gt;
  &lt;/a&gt;
  2. Code
&lt;/h2&gt;

&lt;p&gt;Normally you would write this into a component, however for this tutorials sake I will write it straight into the App.js file.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#21-create-input"&gt;
  &lt;/a&gt;
  2.1 Create input
&lt;/h3&gt;

&lt;p&gt;Create an input that only allows images, one at a time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"file"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"image"&lt;/span&gt; &lt;span class="na"&gt;accept=&lt;/span&gt;&lt;span class="s"&gt;"image/*"&lt;/span&gt; &lt;span class="na"&gt;multiple=&lt;/span&gt;&lt;span class="s"&gt;{false}&lt;/span&gt; &lt;span class="na"&gt;onChange=&lt;/span&gt;&lt;span class="s"&gt;{imageHandler}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#22-access-file-with-handler"&gt;
  &lt;/a&gt;
  2.2 Access file with handler
&lt;/h3&gt;

&lt;p&gt;To access the file we attach a handle to it with the &lt;code&gt;onChange&lt;/code&gt; method. With this handle we can use the event object which gives access to file uploaded. &lt;br&gt;
Then, we put that file inside a &lt;code&gt;new FormData&lt;/code&gt; interface as it provides a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent to the server. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#23-send-to-backend-with-fetch-post"&gt;
  &lt;/a&gt;
  2.3 Send to backend with fetch post
&lt;/h3&gt;

&lt;p&gt;We are writing this fetch API to get data from an external API (that we will create later in the server side). We set the method to POST because we want to send data, the data we want to send is inside the body. Here it is the formData variable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xeQywsp_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uipyckv884ueh3yexhw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xeQywsp_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uipyckv884ueh3yexhw7.png" alt="POST fetch"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-database-query"&gt;
  &lt;/a&gt;
  3. Database query
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#31-api"&gt;
  &lt;/a&gt;
  3.1 API
&lt;/h3&gt;

&lt;p&gt;In the previous step we wrote a fetch POST from an API that we are now going to create. We need to make sure the fetch info needs to be the same.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/api/image&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;upload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;single&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Single stands for what type of multipart formdata we are expecting (in this case one image), and 'image' should be the value of the name attribute of your input.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#32-check-for-valid-file-extension"&gt;
  &lt;/a&gt;
  3.2 Check for valid file extension
&lt;/h3&gt;

&lt;p&gt;After that, we first want to check if the image uploaded is from a valid extension. This goes easily with an if statement:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;originalname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.(&lt;/span&gt;&lt;span class="sr"&gt;jpg|JPG|jpeg|JPEG|png|PNG|gif|GIF&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Only image files (jpg, jpeg, png) are allowed!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#33-post-sql"&gt;
  &lt;/a&gt;
  3.3 POST SQL
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we get the image pathname, that we will store in our database. In the instance that we already have a database with data and we just want to change the image, we use the UPDATE statement in the connection query.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sqlInsert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;UPDATE&lt;/span&gt; &lt;span class="nx"&gt;images&lt;/span&gt; &lt;span class="nx"&gt;SET&lt;/span&gt; &lt;span class="s2"&gt;`image`&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;WHERE&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;?;&lt;/span&gt;
&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqlInsert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This query will either give an error or result. We use res.send to send the data given by the database, to the client side with the API.&lt;/p&gt;

&lt;p&gt;Here is what this whole query looks like in my code ⬇️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tHvKGv-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fp170pkl7out72413pyw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tHvKGv-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fp170pkl7out72413pyw.png" alt="POST Query"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#34-display-message"&gt;
  &lt;/a&gt;
  3.4 Display message
&lt;/h3&gt;

&lt;p&gt;As you saw in the query part, we send 'msg' to the client side but we also need to create a variable for that inside our code. For that we create a state variable that I called uploadStatus here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;uploadStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUploadStatus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&amp;amp;&amp;amp;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt; {uploadStatus} &lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-accessing-the-image"&gt;
  &lt;/a&gt;
  4. Accessing the image
&lt;/h2&gt;

&lt;p&gt;Now our image path is uploaded into our database, so now we can link that path to the image and finally display our image. &lt;/p&gt;

&lt;p&gt;First, because we are storing our images inside our server map, we need to be able to access this map from our frontend as well, we can do that by this line of code :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#41-get-sql-request"&gt;
  &lt;/a&gt;
  4.1 GET SQL request
&lt;/h3&gt;

&lt;p&gt;Next, we need to create a GET API and SQL query to get the data we need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R8ZZ2ZYg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48bb946eis0nzeh4dct1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R8ZZ2ZYg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48bb946eis0nzeh4dct1.png" alt="GET SQL"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#42-display-image"&gt;
  &lt;/a&gt;
  4.2 Display image
&lt;/h3&gt;

&lt;p&gt;Like as we did a POST fetch, to get the data we need to do a GET fetch. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jmLaXANS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wdmalemiccp4yag7spt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jmLaXANS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wdmalemiccp4yag7spt.png" alt="GET Fetch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, to set state of the image we use the url to the backend server location.&lt;/p&gt;

&lt;p&gt;Now the only thing we have to do is add the image path into the src of the image element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;{image &lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;{image}&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"img"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, &lt;code&gt;npm start&lt;/code&gt; both your client and server folder. Here is the result: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q0ppnJ2p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/593bkbcn9sxcxnjdtarh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q0ppnJ2p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/593bkbcn9sxcxnjdtarh.png" alt="Final result"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;We made it to the end of the tutorial! &lt;/p&gt;

&lt;p&gt;Hopefully this tutorial was helpful for you. If there is anything you would do different or make my code better, please do let me know as I am still a beginner and eager to learn. &lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#icon-i-used-as-image-is-from-flaticoncom"&gt;
  &lt;/a&gt;
  Icon I used as image is from &lt;a href="https://www.flaticon.com/"&gt;flaticon.com&lt;/a&gt;
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#header-image-is-by-marcel-friedrich-on-unsplash"&gt;
  &lt;/a&gt;
  Header image is by &lt;a href="https://unsplash.com/@screenwork_ch?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Marcel Friedrich&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/computer-image-upload?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;
&lt;/h6&gt;

</description>
      <category>react</category>
      <category>mysql</category>
      <category>beginners</category>
      <category>node</category>
    </item>
    <item>
      <title>50 Python Projects with Source Code</title>
      <author>Kiran Sethumadhavan</author>
      <pubDate>Sat, 10 Apr 2021 14:31:59 +0000</pubDate>
      <link>https://dev.to/kiransethu46/50-python-projects-with-source-code-2n7g</link>
      <guid>https://dev.to/kiransethu46/50-python-projects-with-source-code-2n7g</guid>
      <description>&lt;p&gt;*&lt;em&gt;Do you want to Kickstart a career in CyberSecurity and want to know how hackers hack in real life  *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Join Now&lt;/p&gt;

&lt;p&gt;t.me/infosecbugbounty&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.me/joinchat/aYDOfr2Hhr4xNmRl"&gt;https://t.me/joinchat/aYDOfr2Hhr4xNmRl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Python Projects For Beginners:&lt;br&gt;
If you’re a newbie to Python where you’ve just learned lists, tuples, dictionaries, and some basic Python modules like the random module, here are some Python projects with source code for beginners for you:&lt;/p&gt;

&lt;p&gt;1 Create Acronyms using Python (&lt;a href="https://thecleverprogrammer.com/2021/01/13/acronyms-using-python/"&gt;https://thecleverprogrammer.com/2021/01/13/acronyms-using-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;2 Alarm Clock with Python (&lt;a href="https://thecleverprogrammer.com/2021/01/13/alarm-clock-with-python/"&gt;https://thecleverprogrammer.com/2021/01/13/alarm-clock-with-python/&lt;/a&gt;)&lt;br&gt;
3 Email Slicer with Python(&lt;a href="https://thecleverprogrammer.com/2021/01/12/email-slicer-with-python/"&gt;https://thecleverprogrammer.com/2021/01/12/email-slicer-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;4 Story Generator with Python (&lt;a href="https://thecleverprogrammer.com/2021/01/11/story-generator-with-python/"&gt;https://thecleverprogrammer.com/2021/01/11/story-generator-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;5 Generate Password with Python(&lt;a href="https://thecleverprogrammer.com/2021/01/11/python-program-to-generate-password/"&gt;https://thecleverprogrammer.com/2021/01/11/python-program-to-generate-password/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;6 Play Rock, Paper, and Scissors with Python(&lt;a href="https://thecleverprogrammer.com/2021/01/10/rock-paper-and-scissors-game-with-python/"&gt;https://thecleverprogrammer.com/2021/01/10/rock-paper-and-scissors-game-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;7 Dice Roll Simulator (&lt;a href="https://thecleverprogrammer.com/2021/01/10/dice-roll-simulator-with-python/"&gt;https://thecleverprogrammer.com/2021/01/10/dice-roll-simulator-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;8 QR Code Generator(&lt;a href="https://thecleverprogrammer.com/2021/01/09/qr-codes-with-python/"&gt;https://thecleverprogrammer.com/2021/01/09/qr-codes-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;9 Animal Quiz Game(&lt;a href="https://thecleverprogrammer.com/2021/01/03/create-a-quiz-game-with-python/"&gt;https://thecleverprogrammer.com/2021/01/03/create-a-quiz-game-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;10 Print Coloured Text(&lt;a href="https://thecleverprogrammer.com/2020/12/23/print-colored-text-with-python/"&gt;https://thecleverprogrammer.com/2020/12/23/print-colored-text-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;11 BMI Calculator(&lt;a href="https://thecleverprogrammer.com/2020/12/21/bmi-calculator-with-python/"&gt;https://thecleverprogrammer.com/2020/12/21/bmi-calculator-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;12 Fahrenheit to Celcius Converter(&lt;a href="https://thecleverprogrammer.com/2020/11/30/convert-fahrenheit-to-celsius-with-python/"&gt;https://thecleverprogrammer.com/2020/11/30/convert-fahrenheit-to-celsius-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;13 Taking Multiple User Inputs(&lt;a href="https://thecleverprogrammer.com/2021/01/08/multiple-inputs-with-python-using-while-loop/"&gt;https://thecleverprogrammer.com/2021/01/08/multiple-inputs-with-python-using-while-loop/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;14 Convert Roman Numbers to Decimals(&lt;a href="https://thecleverprogrammer.com/2021/01/07/convert-roman-numbers-to-decimals-with-python/"&gt;https://thecleverprogrammer.com/2021/01/07/convert-roman-numbers-to-decimals-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Advance Python Projects:&lt;/p&gt;

&lt;p&gt;15 Digital Clock GUI &lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2021/01/09/digital-clock-with-python/"&gt;https://thecleverprogrammer.com/2021/01/09/digital-clock-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;16 Get Desktop Notifications with Python(&lt;a href="https://medium.com/coders-camp/60-python-projects-with-source-code-919cd8a6e512"&gt;https://medium.com/coders-camp/60-python-projects-with-source-code-919cd8a6e512&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;17 Use Your Phone Camera for Computer Vision(&lt;a href="https://thecleverprogrammer.com/2021/01/05/use-phone-camera-with-python/"&gt;https://thecleverprogrammer.com/2021/01/05/use-phone-camera-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;18 Music Player GUI (&lt;a href="https://thecleverprogrammer.com/2020/12/27/music-player-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/12/27/music-player-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;19 Game of Life with Python(&lt;a href="https://thecleverprogrammer.com/2020/12/25/game-of-life-with-python/"&gt;https://thecleverprogrammer.com/2020/12/25/game-of-life-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;20 Extract Text from videos(&lt;a href="https://thecleverprogrammer.com/2020/12/25/extract-text-from-videos-using-python/"&gt;https://thecleverprogrammer.com/2020/12/25/extract-text-from-videos-using-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;21 Fidget Spinner Game(&lt;a href="https://thecleverprogrammer.com/2020/12/23/create-a-game-with-python/"&gt;https://thecleverprogrammer.com/2020/12/23/create-a-game-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;22 Spelling Correction with Python(&lt;a href="https://thecleverprogrammer.com/2020/12/18/spelling-correction-with-python/"&gt;https://thecleverprogrammer.com/2020/12/18/spelling-correction-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;23 Create Amazing Graphics with Python(&lt;a href="https://thecleverprogrammer.com/2020/12/10/turtle-graphics-with-python/"&gt;https://thecleverprogrammer.com/2020/12/10/turtle-graphics-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;24 Monty Hall Simulator(&lt;a href="https://thecleverprogrammer.com/2020/12/09/monty-hall-problem-with-python/"&gt;https://thecleverprogrammer.com/2020/12/09/monty-hall-problem-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;25 Video to Audio Converter(&lt;a href="https://thecleverprogrammer.com/2020/12/08/video-to-audio-converter-with-python/"&gt;https://thecleverprogrammer.com/2020/12/08/video-to-audio-converter-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;26 Tic Tac Toe GUI(&lt;a href="https://thecleverprogrammer.com/2020/12/06/tic-tac-toe-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/12/06/tic-tac-toe-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;27 Calculator GUI (&lt;a href="https://thecleverprogrammer.com/2020/12/05/calculator-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/12/05/calculator-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;28 Number Guessing Game(&lt;a href="https://thecleverprogrammer.com/2020/12/04/number-guessing-game-with-python-and-c/"&gt;https://thecleverprogrammer.com/2020/12/04/number-guessing-game-with-python-and-c/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;29 Image Converter GUI(&lt;a href="https://thecleverprogrammer.com/2020/12/02/image-converter-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/12/02/image-converter-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;30 Weight Converter GUI(&lt;a href="https://thecleverprogrammer.com/2020/11/28/weight-converter-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/11/28/weight-converter-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;31 Visualize a Chess Board with Python(&lt;a href="https://thecleverprogrammer.com/2020/11/27/chessboard-with-python/"&gt;https://thecleverprogrammer.com/2020/11/27/chessboard-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;32 Age and Gender Detection (&lt;a href="https://thecleverprogrammer.com/2020/10/29/age-and-gender-detection-with-python/"&gt;https://thecleverprogrammer.com/2020/10/29/age-and-gender-detection-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;33 Bar Code and QR Code Reader(&lt;a href="https://thecleverprogrammer.com/2020/10/23/barcode-and-qr-code-reader-with-python/"&gt;https://thecleverprogrammer.com/2020/10/23/barcode-and-qr-code-reader-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;34 Create Audiobook with Python(&lt;a href="https://thecleverprogrammer.com/2020/10/22/create-an-audiobook-with-python/"&gt;https://thecleverprogrammer.com/2020/10/22/create-an-audiobook-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;35 FaceDetection&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/10/22/create-an-audiobook-with-python/"&gt;https://thecleverprogrammer.com/2020/10/22/create-an-audiobook-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;36 Extract Text from PDF(&lt;a href="https://thecleverprogrammer.com/2020/10/06/extract-text-from-pdf-using-python/"&gt;https://thecleverprogrammer.com/2020/10/06/extract-text-from-pdf-using-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;37 Card Game using DS and Algo(&lt;a href="https://thecleverprogrammer.com/2020/10/04/card-game-with-python/"&gt;https://thecleverprogrammer.com/2020/10/04/card-game-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;38 Web Scrapper with Python&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/10/01/web-scraper-with-python/"&gt;https://thecleverprogrammer.com/2020/10/01/web-scraper-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;39 Create a Pencil Sketch using Python(&lt;a href="https://thecleverprogrammer.com/2020/09/30/pencil-sketch-with-python/"&gt;https://thecleverprogrammer.com/2020/09/30/pencil-sketch-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;40 Text Editor GUI(&lt;a href="https://thecleverprogrammer.com/2020/09/25/text-editor-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/09/25/text-editor-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;41 Instagram Filters with Python&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/09/24/instagram-filters-with-python/"&gt;https://thecleverprogrammer.com/2020/09/24/instagram-filters-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;42 Count Number of Rainy days in a year(&lt;a href="https://thecleverprogrammer.com/2020/09/18/count-rainy-days-with-python/"&gt;https://thecleverprogrammer.com/2020/09/18/count-rainy-days-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;43 Send Emails with  Python&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/09/15/send-emails-with-python/"&gt;https://thecleverprogrammer.com/2020/09/15/send-emails-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;44 Image Segmentation&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/09/01/image-segmentation-with-python/"&gt;https://thecleverprogrammer.com/2020/09/01/image-segmentation-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;45 OTP Verification GUI&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/24/otp-verification-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/08/24/otp-verification-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;46 Deploy a Chatbot&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/21/deploy-a-chatbot-with-python/"&gt;https://thecleverprogrammer.com/2020/08/21/deploy-a-chatbot-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;47 Create a Telegram Bot&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/18/telegram-bot-with-python/"&gt;https://thecleverprogrammer.com/2020/08/18/telegram-bot-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;48 Scraping Twitter without API&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/17/scraping-twitter-with-python/"&gt;https://thecleverprogrammer.com/2020/08/17/scraping-twitter-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;49 Text to Speech Converter&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/16/text-to-speech-with-python/"&gt;https://thecleverprogrammer.com/2020/08/16/text-to-speech-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;50 Keyword Research with Python&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/14/keyword-research-with-python/"&gt;https://thecleverprogrammer.com/2020/08/14/keyword-research-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bonus&lt;/strong&gt; &lt;br&gt;
1 .Scrape Wikipedia&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/07/30/scraping-instagram-with-python/"&gt;https://thecleverprogrammer.com/2020/07/30/scraping-instagram-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;2.Web Scraping to create a CSV&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/08/web-scraping-to-create-csv/"&gt;https://thecleverprogrammer.com/2020/08/08/web-scraping-to-create-csv/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;3.Scrape Instagram&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/07/30/scraping-instagram-with-python/"&gt;https://thecleverprogrammer.com/2020/07/30/scraping-instagram-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;4.Image Filtering&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/07/25/image-filtering-with-machine-learning/"&gt;https://thecleverprogrammer.com/2020/07/25/image-filtering-with-machine-learning/&lt;/a&gt;)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;3D Graphs (&lt;a href="https://thecleverprogrammer.com/2020/05/02/3d-graphs-with-matplotlib/"&gt;https://thecleverprogrammer.com/2020/05/02/3d-graphs-with-matplotlib/&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;*&lt;em&gt;Do you want to Kickstart a career in CyberSecurity and want to know how hackers hack in real life . *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Join Now&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;t.me/infosecbugbounty&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.me/joinchat/aYDOfr2Hhr4xNmRl"&gt;https://t.me/joinchat/aYDOfr2Hhr4xNmRl&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>productivity</category>
      <category>devops</category>
    </item>
    <item>
      <title>Tailwind CSS has changed the way you think about css, and you should let everyone know that!</title>
      <author>Siddharth Chaudhary</author>
      <pubDate>Sat, 10 Apr 2021 14:02:00 +0000</pubDate>
      <link>https://dev.to/sidchaudhary04/tailwind-css-has-changed-the-way-you-think-about-css-and-you-should-let-everyone-know-that-1ff4</link>
      <guid>https://dev.to/sidchaudhary04/tailwind-css-has-changed-the-way-you-think-about-css-and-you-should-let-everyone-know-that-1ff4</guid>
      <description>&lt;p&gt;Face it, Tailwind CSS has probably changed the way you think about css. &lt;/p&gt;

&lt;p&gt;So make noise about it on twitter. I WANT TAILWIND CSS TO BE TRENDING ON TWITTER AND YOU PROBABLY WANT THAT AS WELL.&lt;/p&gt;

&lt;p&gt;So tweet as follows&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MQO0Ia_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1340323301806268418/3zautVjO_normal.jpg" alt="Siddharth Chaudhary profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Siddharth Chaudhary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/sidchaudhary04"&gt;@sidchaudhary04&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/hashtag/tailwindcss"&gt;#tailwindcss&lt;/a&gt; &lt;a href="https://twitter.com/tailwindcss"&gt;@tailwindcss&lt;/a&gt; has changed the way I think about &lt;a href="https://twitter.com/hashtag/css"&gt;#css&lt;/a&gt;!
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:59 PM - 10 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1380883245550743556" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1380883245550743556" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1380883245550743556" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I guarantee this will work 😂 &lt;br&gt;
-Sid&lt;/p&gt;

</description>
      <category>discuss</category>
    </item>
    <item>
      <title>How to implement dark mode in React</title>
      <author>collegewap</author>
      <pubDate>Sat, 10 Apr 2021 13:55:58 +0000</pubDate>
      <link>https://dev.to/collegewap/how-to-implement-dark-mode-in-react-4nek</link>
      <guid>https://dev.to/collegewap/how-to-implement-dark-mode-in-react-4nek</guid>
      <description>&lt;p&gt;You might have seen in recent times that people are shifting towards dark mode, be it mobile screens,&lt;br&gt;
the browser or you favorite social media app. You might be wondering how can you implement the same in react in your website.&lt;br&gt;
In this tutorial, we will see how we can have a toggle button and change the theme of the page when the user clicks on it.&lt;br&gt;
We will also see how we can read the browser theme (dark/light) and load the page based on that theme.&lt;br&gt;
Also, we would see how the user preference can be saved so that we can retain the theme settings for future visits.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#creating-the-app"&gt;
  &lt;/a&gt;
  Creating the app
&lt;/h1&gt;

&lt;p&gt;First of all, as usual, let's create a react app using the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app dark-theme
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#basic-page-setup"&gt;
  &lt;/a&gt;
  Basic page setup
&lt;/h1&gt;

&lt;p&gt;Let's set up a sample HTML page for the demonstration.&lt;br&gt;
Update the &lt;code&gt;App.js&lt;/code&gt; file with the following code.&lt;br&gt;
You could see that we have created a navbar that has a toggle button,&lt;br&gt;
which will be used to switch the theme and a heading and a couple of paragraphs of lorem ipsum text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navigation"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"logo"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Dark Mode&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"toggle_btn"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Toggle&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Rem, placeat
        adipisci aut repudiandae molestias quis possimus dignissimos tenetur
        tempore numquam, eos, sed deleniti quae voluptas asperiores harum labore
        ab deserunt? Perspiciatis, quisquam totam sapiente dolore cum, officiis
        veritatis sed ut quidem corrupti animi! Officiis animi quaerat officia
        ducimus, eveniet magnam delectus cupiditate amet vero aspernatur
        perferendis dolorem dignissimos praesentium vitae. Architecto dolorem
        eius distinctio nostrum fugit! Quas molestias, unde possimus vitae
        totam, quam eum earum est inventore harum aperiam praesentium sapiente
        repellat minima dolor corrupti eligendi, tempore reprehenderit animi
        delectus. Perferendis, et maxime reprehenderit possimus numquam
        corrupti, libero sed veniam optio vel a voluptates? Vel deserunt a animi
        saepe, dolores consequatur obcaecati ratione odio, ducimus repellendus
        aperiam error, laborum sed. Aspernatur excepturi vitae sint doloremque
        unde ipsa veniam placeat debitis? Aspernatur reprehenderit quibusdam
        pariatur fuga numquam voluptate magni praesentium optio nisi repellat
        placeat maxime at similique, provident, consequuntur, corrupti adipisci!
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quis tempora
        maiores fugiat neque doloribus illum omnis expedita aliquam voluptatum
        possimus ad mollitia laudantium, non cumque quia, illo tempore odit
        veniam! Nisi enim, eligendi error quod dicta sunt fugit non et. Repellat
        corporis officiis odio repudiandae doloremque similique quisquam dicta
        enim, porro sed assumenda architecto iste accusantium quo quod, in
        incidunt? Eaque ipsum, id commodi reprehenderit quam exercitationem ad
        iure a cum necessitatibus corporis quas, odit, deserunt atque reiciendis
        deleniti fuga et laudantium officia adipisci. Voluptates, nesciunt!
        Repellendus consequuntur voluptate vero? Officia quaerat voluptates
        dolorem provident excepturi expedita nostrum, voluptas consequatur
        architecto. Vel recusandae officia quidem impedit magni cupiditate?
        Deserunt qui velit totam dolorem delectus necessitatibus possimus
        explicabo veritatis doloremque sequi. Optio, quod quaerat fugiat
        recusandae officia earum voluptatem aliquam unde obcaecati laborum
        necessitatibus porro omnis laboriosam esse, illum numquam quibusdam
        magnam. Voluptate et nesciunt quisquam sequi perferendis minus quaerat
        temporibus!
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now add some basic styling in the &lt;code&gt;index.css&lt;/code&gt; file.&lt;br&gt;
You might notice that css variables are made use of, which will come handy in the upcoming sections.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;800px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--button-text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--button-bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.toggle_btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--button-bg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--button-text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.navigation&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.logo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run the app by using &lt;code&gt;yarn start&lt;/code&gt; command and opening &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;.&lt;br&gt;
You should be able to see a similar page given below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gPcM5Hpq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck2vtffya0xwt3f5ntg3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gPcM5Hpq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck2vtffya0xwt3f5ntg3.png" alt="Basic Setup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now clicking on toggle button will not do anything. Let's make it work!&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#the-usedarkmode-hook"&gt;
  &lt;/a&gt;
  The useDarkMode Hook
&lt;/h1&gt;

&lt;p&gt;We will be writing a custom hook in order to implement the dark mode functionality.&lt;br&gt;
So let's create a folder named &lt;code&gt;hooks&lt;/code&gt; inside the &lt;code&gt;src&lt;/code&gt; directory and create a file called &lt;code&gt;useDarkMode.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Update the file with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You could see that in the above code, we are initializing a local state variable using &lt;code&gt;useState&lt;/code&gt; hook and defaulting it to false.&lt;br&gt;
This state will determine if dark mode is enabled or not. Also, we are making use of &lt;code&gt;useEffect&lt;/code&gt; hook,&lt;br&gt;
where we are checking if the &lt;code&gt;isDark&lt;/code&gt; state is set true or false and adding/removing the class named &lt;code&gt;dark&lt;/code&gt; from the body of the document.&lt;br&gt;
You could also see that we have added &lt;code&gt;isDark&lt;/code&gt; as a dependency to the &lt;code&gt;useEffect&lt;/code&gt; hook,&lt;br&gt;
such that the effect runs only when the value of the &lt;code&gt;isDark&lt;/code&gt; state changes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#making-use-of-the-usedarkmode-hook"&gt;
  &lt;/a&gt;
  Making use of the useDarkMode hook
&lt;/h2&gt;

&lt;p&gt;Now let's make use of the hook we have created, in the &lt;code&gt;App.js&lt;/code&gt; and binding it with the button click:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useDarkMode&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./hooks/useDarkMode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDarkMode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setDarkMode&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDarkMode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navigation"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"logo"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Dark Mode&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"toggle_btn"&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setDarkMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isDarkMode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          Toggle
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      ...
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code you will see that each time the user clicks on the toggle button,&lt;br&gt;
we are calling &lt;code&gt;setDarkMode&lt;/code&gt; with a negated value of &lt;code&gt;isDarkMode&lt;/code&gt;, so that it will be set to &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; in successive clicks.&lt;/p&gt;

&lt;p&gt;Now, if you try to click on the toggle button, you may not see any changes happening.&lt;br&gt;
But, if you inspect the document and see, you will see the class &lt;code&gt;dark&lt;/code&gt; being added and removed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nIg8Y8N2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mq79ylngue6e4apt103r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nIg8Y8N2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mq79ylngue6e4apt103r.png" alt="Dark class added to body"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#adding-styles-to-dark-mode"&gt;
  &lt;/a&gt;
  Adding styles to dark mode
&lt;/h1&gt;

&lt;p&gt;Now that we have added &lt;code&gt;dark&lt;/code&gt; class to the body, we can use the css to change the background and font colors to establish the dark mode.&lt;br&gt;
Add the following rules to &lt;code&gt;index.css&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="nc"&gt;.dark&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--button-text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--button-bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above styles, we are setting the background color to black and text color to white whenever &lt;code&gt;body&lt;/code&gt; has the class &lt;code&gt;dark&lt;/code&gt;.&lt;br&gt;
Also, you will see that we are making use of css variables to control the styles of the button.&lt;/p&gt;

&lt;p&gt;If you click on the toggle button now, you should be able to see the theme getting toggled:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vt8rmFpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sxogqogidax7664mrkk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vt8rmFpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sxogqogidax7664mrkk.gif" alt="Animation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#storing-user-preference-in-local-storage"&gt;
  &lt;/a&gt;
  Storing user preference in Local Storage
&lt;/h1&gt;

&lt;p&gt;As a user, you might want your choice of theme to be remembered and retained in that mode whenever you revisit the page in the future.&lt;br&gt;
Currently, if you set to dark mode and reload the page, the page will load in light mode.&lt;br&gt;
To preserve the mode, we will store the user preference in Local Storage.&lt;/p&gt;

&lt;p&gt;Update &lt;code&gt;useDarkMode.js&lt;/code&gt; with the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;isDarkMode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Get from local storage by key&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="c1"&gt;// JSON.parse converts from Sting to Boolean&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// If error return false, i.e, light mode&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error in setting preference&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you see in the above code, we are using a callback for initializing the &lt;code&gt;isDark&lt;/code&gt; state and in the callback, we are accessing the local storage to fetch the preference of the user. When the user toggles the state, we save the preference to the local storage in the &lt;code&gt;useEffect&lt;/code&gt; callback.&lt;/p&gt;

&lt;p&gt;If you set the preference to dark mode and reload the page, you would see that the page loads in dark mode.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reading-browser-themesettings"&gt;
  &lt;/a&gt;
  Reading browser theme/settings
&lt;/h1&gt;

&lt;p&gt;Most of the modern browsers support media query called &lt;a href="https://caniuse.com/#search=prefers-color-scheme"&gt;prefers-color-scheme&lt;/a&gt;,&lt;br&gt;
using which we can determine if the user prefers dark mode or light mode.&lt;br&gt;
We can make use of the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia"&gt;Window.matchMedia()&lt;/a&gt;&lt;br&gt;
method to query the value of &lt;code&gt;prefers-color-scheme&lt;/code&gt;, as highlighted in the code below.&lt;br&gt;
Also, note that we have introduced a new variable &lt;code&gt;darkModeEnabled&lt;/code&gt;, which now stores the preference value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;isDarkMode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Get from local storage by key&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="c1"&gt;// JSON.parse converts from Sting to Boolean&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// If error return false, i.e, light mode&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="c1"&gt;// Check if user has any preference in the local storage.&lt;/span&gt;
  &lt;span class="c1"&gt;// If not then load the system preference&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;darkModeEnabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;isDark&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;isDark&lt;/span&gt;
      &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matchMedia&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;(prefers-color-scheme: dark)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;darkModeEnabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;darkModeEnabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error in setting preference&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;darkModeEnabled&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;darkModeEnabled&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if your system set into dark mode, then by default the page will open in dark mode.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#displaying-different-icons-for-each-mode"&gt;
  &lt;/a&gt;
  Displaying different Icons for each mode
&lt;/h1&gt;

&lt;p&gt;Now let's show a separate icon for both dark and light mode.&lt;br&gt;
We will make use of &lt;a href="https://react-icons.github.io/react-icons/"&gt;react-icons&lt;/a&gt; for this purpose.&lt;/p&gt;

&lt;p&gt;Install react-icons using the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add react-icons
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the installation completes, make use of the &lt;code&gt;BsSun&lt;/code&gt; and &lt;code&gt;BsMoon&lt;/code&gt; icons to represent the light and dark mode respectively:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useDarkMode&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./hooks/useDarkMode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BsMoon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;BsSun&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-icons/bs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDarkMode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setDarkMode&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDarkMode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navigation"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"logo"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Dark Mode&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"toggle_btn"&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setDarkMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isDarkMode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isDarkMode&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BsSun&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#ff0"&lt;/span&gt; &lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"24"&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Switch to light mode"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BsMoon&lt;/span&gt; &lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"24"&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Switch to dark mode"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      ...
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, update the CSS file to remove the border from the button&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="nc"&gt;.toggle_btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--button-bg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--button-text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now load the page and you should be able to see the icons added!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M9Inj8QD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cz4n4tzdhv8xfnvgyjhj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M9Inj8QD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cz4n4tzdhv8xfnvgyjhj.gif" alt="Dark Mode with Icon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#source-code-and-demo"&gt;
  &lt;/a&gt;
  Source code and Demo
&lt;/h1&gt;

&lt;p&gt;You can view the complete &lt;a href="https://github.com/collegewap/react-dark-mode"&gt;source code here&lt;/a&gt; and a &lt;a href="https://react-dark-mode-mu.vercel.app/"&gt;demo here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>localstorage</category>
    </item>
    <item>
      <title>Tutorial Vue Router Indonesia</title>
      <author>Dimas Andhika</author>
      <pubDate>Sat, 10 Apr 2021 13:54:07 +0000</pubDate>
      <link>https://dev.to/dimasngoding/tutorial-vue-router-indonesia-3j64</link>
      <guid>https://dev.to/dimasngoding/tutorial-vue-router-indonesia-3j64</guid>
      <description>&lt;h2&gt;
  &lt;a href="#perkenalan"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Perkenalan&lt;/strong&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Vue sangat berguna untuk membuat Aplikasi Satu Halaman, halaman webnya juga sangat interaktif yang memungkinkan kita untuk tidak me-refresh halaman ketika kita mengubah dari halaman satu ke halaman yang lain.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Jika website kamu memiliki banyak halaman dan kamu menggunakan Vue&lt;/strong&gt;, itulah mengapa kamu membutuhkan Vue Router. &lt;strong&gt;Note: Pastikan kalian paham tentang Vue dan Javascript dasar&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#basic-dari-vue-router"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Basic Dari Vue Router&lt;/strong&gt;
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#mempersiapkan-vue-router-dari-awal"&gt;
  &lt;/a&gt;
  🚀 Mempersiapkan Vue Router dari awal
&lt;/h4&gt;

&lt;p&gt;1.Pertama Kita Install Vue Router di Command Line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i vue-router@next
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.Konfigurasi pada Direktori &lt;strong&gt;&lt;em&gt;/src/router/index.js&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createWebHistory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createRouter&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue-router&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Import Component2 Kalian&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@/views/Home.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@/views/About.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; 
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/about&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;About&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;About&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createRouter&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;history&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;createWebHistory&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="nx"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Di direktori &lt;strong&gt;&lt;em&gt;/src/router/index.js&lt;/em&gt;&lt;/strong&gt; kita membuat routes di dalam sebuah array yang akan mengspesifikasikan beberapa hal:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Path - URL / Tempat dimana component akan di load&lt;/li&gt;
&lt;li&gt;Component - Komponen yang akan diload saat path dipanggil&lt;/li&gt;
&lt;li&gt;Name - (Opsional)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Dibawah array routes &lt;strong&gt;terdapat &lt;code&gt;createRouter&lt;/code&gt; yang pastinya diperlukan untuk membuat router itu sendiri&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;



&lt;blockquote&gt;
&lt;p&gt;Dan juga terdapat &lt;strong&gt;&lt;code&gt;createWebHistory&lt;/code&gt; yang digunakan untuk beralih dari mode hash ke mode history di dalam browser, menggunakan API history HTML5, Ini yang akan membuat history pada browser kita setiap kita meload router&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;3.Konfigurasi pada direktori &lt;strong&gt;&lt;em&gt;/src/main.js&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Pada direktori &lt;strong&gt;&lt;em&gt;/src/main.js&lt;/em&gt;&lt;/strong&gt; kita juga perlu menambahkan sesuatu&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./router&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;---&lt;/span&gt;

&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;---&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ya, tentunya kita perlu mengimpornya ke file utama kita&lt;/p&gt;



&lt;h4&gt;
  &lt;a href="#menggunakan-router"&gt;
  &lt;/a&gt;
  🚀 Menggunakan Router
&lt;/h4&gt;

&lt;p&gt;Ada 2 component yang diberikan oleh Vue Router yaitu &lt;code&gt;&amp;lt;router-view /&amp;gt;&lt;/code&gt; dan &lt;code&gt;&amp;lt;router-link to="/" /&amp;gt;&lt;/code&gt;. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;router-view /&amp;gt;&lt;/code&gt; digunakan untuk membungkus component2 yang akan dirender , dan &lt;code&gt;&amp;lt;router-link to="/" /&amp;gt;&lt;/code&gt; ini mirip seperti tag anchor pada html, pada tag anchor biasanya kita menggunakan href tetapi pada router link kita menggunakan 'to'&lt;/p&gt;
&lt;/blockquote&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Biasanya &lt;code&gt;&amp;lt;router-view /&amp;gt;&lt;/code&gt; dideklarasikan di file App.vue karena file tersebut adalah halaman utama yang isinya akan kita ubah2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Contoh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// (/src/App.vue)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/about"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;About&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// (Home.vue)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Home&lt;/span&gt; &lt;span class="nc"&gt;Page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// (About.vue)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;About&lt;/span&gt; &lt;span class="nc"&gt;Page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🚀 Selesai.. ya mungkin seperti itu konsep dasar vue router, mohon maaf bila bahasa yang digunakan membingungkan&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What is Linux?</title>
      <author>Suchitra</author>
      <pubDate>Sat, 10 Apr 2021 13:46:49 +0000</pubDate>
      <link>https://dev.to/suchitr36309633/what-is-linux-3jnc</link>
      <guid>https://dev.to/suchitr36309633/what-is-linux-3jnc</guid>
      <description>&lt;p&gt;Before starting the topic of Linux I want to ask you something like...&lt;br&gt;
&lt;strong&gt;What you people think about Linux is it an operating System??&lt;br&gt;
If your answer is Yes!&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t6r5c3ZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdk31288brluia7nrv1g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t6r5c3ZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdk31288brluia7nrv1g.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then probably you are wrong❌&lt;br&gt;
So let us discuss ...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nh-KXz_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3azdx6ni5z9fqxruq0d9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nh-KXz_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3azdx6ni5z9fqxruq0d9.jpg" alt="what-is-Linux"&gt;&lt;/a&gt;&lt;br&gt;
Linux is not an operating system, it basically a &lt;strong&gt;kernel&lt;/strong&gt;.&lt;br&gt;
A kernel means it is a core component of the operating system which directly interacts with the hardware and communicates with the hardware and users. A kernel is a very crucial thing in any operating system.&lt;br&gt;
So, whatever operating system uses Linux kernel those operating system is known as Linux based operating system like Debian, Ubuntu, Linux mint, etc. These are some Linux-based operating systems that are very popular nowadays. These variations of Linux-based os are also known as Linux distributions or distros.👇&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--exFJr5jP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7g03xe4hlnfh7i8vfoom.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--exFJr5jP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7g03xe4hlnfh7i8vfoom.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-lets-know-about-its-history-"&gt;
  &lt;/a&gt;
  So, let's know about its History :
&lt;/h2&gt;

&lt;p&gt;Linux began in 1991 by &lt;strong&gt;Linus Torvald&lt;/strong&gt; who was a university student by his personal interest he created Linux as his final year project and after that, in 1992 he released Linux as an open-source operating system kernel.&lt;br&gt;
Here Open source means it is open for everyone, anyone can see the code, use the code, and if wanted to change or contribute also can contribute to the code and here all are free you don't need to pay for it because it is free for everyone unlike other operating systems Windows and macOS!&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hu2igtQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wa1lybg3yebvxw29i2h6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hu2igtQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wa1lybg3yebvxw29i2h6.png" alt="image"&gt;&lt;/a&gt;&lt;em&gt;Linus Torvald&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#history-of-linux-brand-character"&gt;
  &lt;/a&gt;
  History of Linux brand Character
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MFx-txes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1ocobr68el55bvsa6cc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MFx-txes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1ocobr68el55bvsa6cc.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;This image is an inspiration of Linux brand character, also it is a favorite image of Linus Torvalds&lt;/em&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The concept of the Linux brand character being a penguin came from Linus Torvalds, the creator of Linux. Tux was created by Larry Ewing in 1996 after an initial suggestion made by Alan Cox[2] and further refined by Linus Torvalds on the Linux kernel mailing list.[3] Torvalds took his inspiration from an image he found on an FTP site,[4] showing a penguin figurine depicted in a similar style to the Creature Comforts characters created by Nick Park. The first person to call the penguin "Tux" was James Hughes, who said that it stood for "(T)orvalds (U)ni(X)".&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For more you can follow &lt;a href="https://en.wikipedia.org/wiki/Tux_(mascot)#:~:text=Tux%20is%20a%20penguin%20character,depict%20Tux%20in%20various%20styles"&gt;this&lt;/a&gt;. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#as-we-got-some-idea-about-what-is-linux-so-now-we-should-move-into-some-basic-features-of-linux-"&gt;
  &lt;/a&gt;
  As we got some idea about what is Linux so now we should move into some basic features of Linux :
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;It is an open-source&lt;/li&gt;
&lt;li&gt;Less vulnerable &lt;/li&gt;
&lt;li&gt;Stable&lt;/li&gt;
&lt;li&gt;More compatible with any type of hardware&lt;/li&gt;
&lt;li&gt;Multitasking&lt;/li&gt;
&lt;li&gt;Multiprogramming&lt;/li&gt;
&lt;li&gt;Secure&lt;/li&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now you are wondered that it has many features &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ESKwhm0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxadgyz02gh06hk9lqyr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ESKwhm0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxadgyz02gh06hk9lqyr.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;but still many people stick with Windows or macOS Why?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xjw0wGu2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97qtt1ybfwmp0r221xf2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xjw0wGu2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97qtt1ybfwmp0r221xf2.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Linux is free, Open source, and many more but still we pay lots of money to buy other operating systems such as Windows or macOS.&lt;br&gt;
It's just because of the complexity of the interface which used in Linux based operating system which is CLI(Command Line Interface). Whereas Windows and macOS use GUI interface( Graphical User Interface). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gui-vs-cli"&gt;
  &lt;/a&gt;
  GUI Vs CLI
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dG3zSbxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l5h0s15pk3i46bgom38o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dG3zSbxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l5h0s15pk3i46bgom38o.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
GUI is easy to use as compared to CLI, common users can use GUI but it's quite difficult to use CLI for them(because of commands). To use CLI we should know some commands programming language as well.&lt;br&gt;
So, the disadvantage of a Linux-like operating system is that you have to learn programs as well as commands so that you can use it. But if you are a programmer you good to go... It's really awesome!! 👩‍💻&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---qIQVmTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kcn2g5jz6r5k63m59ri.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---qIQVmTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kcn2g5jz6r5k63m59ri.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.kernel.org/doc/html/latest/"&gt;Curious to know more&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-its-time-to-know-about-linux-architecture"&gt;
  &lt;/a&gt;
  Now its time to know about Linux Architecture
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tZphlDfC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzh1rm2hubg5czncjb31.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tZphlDfC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzh1rm2hubg5czncjb31.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 Here, by referring to the above picture you can see that it depicts how the internal structure of the operating system looks, in this system architecture Linux kernel is used that's why it is written &lt;em&gt;Linux System Architecture&lt;/em&gt;!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-discuss-one-by-one"&gt;
  &lt;/a&gt;
  Let's discuss one by one
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Hardware&lt;/em&gt;:
It consists of all physical devices attached to your system like hard disk, pen drive, motherboard, RAM, etc.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Kernel&lt;/em&gt;:
As I already discussed Kernal is a core component that is used for communication with hardware directly.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Shell&lt;/em&gt;:
Shell is the interface that takes input from Users and sends instructions to the Kernel, Also takes the output from Kernel and sends the result back to the output shell.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Application&lt;/em&gt;:
These are the utility programs that run on Shell. This can be any application like Your web browser, media player, text editor, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Suppose, the user request for play music from the system then, the request 1st go to the shell here shell take user's input as instructions and send that instruction to the kernel and here the main task is performed by the kernel which directly tells the hardware what to do??&lt;br&gt;
This means the kernel tells the speaker to get turns on or start functioning the hardware part.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-linux-is-used"&gt;
  &lt;/a&gt;
  Where Linux is used??
&lt;/h2&gt;

&lt;p&gt;Almost Everywhere&lt;br&gt;
👼🕵️‍♂️👩‍🏫👨‍💻&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aerospace-and-defense"&gt;
  &lt;/a&gt;
  Aerospace and defense
&lt;/h3&gt;

&lt;p&gt;NASA runs on Linux, The International Space Station switched from&lt;br&gt;
Windows to Linux a few years ago due to the operating.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#systems%C2%A0reliability"&gt;
  &lt;/a&gt;
  System's reliability
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#scientific-instrumentation"&gt;
  &lt;/a&gt;
  Scientific instrumentation;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#printing-and-imaging"&gt;
  &lt;/a&gt;
  Printing and imaging
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#storage-aws-cloud-azure-etc"&gt;
  &lt;/a&gt;
  Storage (AWS cloud, Azure, etc)
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#home-entertainment-and-multimedia-eg-settop-boxes-dvrs-and-hddtv"&gt;
  &lt;/a&gt;
  Home Entertainment and multimedia (e.g., set-top boxes, DVRs, and HD/DTV)
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#the-emerging-internet-of-things"&gt;
  &lt;/a&gt;
  The emerging Internet of Things
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#telecoms-and-networking-equipment"&gt;
  &lt;/a&gt;
  Telecoms and networking equipment
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#network-security"&gt;
  &lt;/a&gt;
  Network security
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#ehealth-and-medical-equipment"&gt;
  &lt;/a&gt;
  EHealth and medical equipment
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#even-our-smartphones-and-smartwatches-run-on-linux"&gt;
  &lt;/a&gt;
  Even our smartphones and smartwatches run on Linux🙌
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#gaming-run-on-linux"&gt;
  &lt;/a&gt;
  Gaming run on Linux
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mp9WZyv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0ptt3ygjla3rplxc81y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mp9WZyv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0ptt3ygjla3rplxc81y.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
If you are a gamer, then you might be using SteamOS, which is a Linux-based operating system. Also, if you use any of Google’s myriad of services, then you are running on Linux.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading, hope you found it useful and also one request from my side if you have any query, suggestions or anything else you want to tell please comment it here!!&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#i-will-be-waiting-for-your-response%E2%9D%A4"&gt;
  &lt;/a&gt;
  I will be waiting for your response❤
&lt;/h5&gt;

</description>
      <category>linux</category>
      <category>beginners</category>
    </item>
    <item>
      <title>5 Python Libraries You Need to Know</title>
      <author>jones268</author>
      <pubDate>Sat, 10 Apr 2021 13:32:01 +0000</pubDate>
      <link>https://dev.to/jones268/5-python-libraries-you-need-to-know-1cp8</link>
      <guid>https://dev.to/jones268/5-python-libraries-you-need-to-know-1cp8</guid>
      <description>&lt;p&gt;On the internet, you can find thousands of tutorials and blog posts about the Python programming language. With so much information out there, it’s hard to know which libraries are worth learning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#discovering-the-best-python-libraries"&gt;
  &lt;/a&gt;
  Discovering The Best Python Libraries
&lt;/h2&gt;

&lt;p&gt;We’ve handpicked 5 of the best and most useful Python libraries:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PyQt&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A cross-platform application and &lt;a href="https://pythonpyqt.com/"&gt;GUI framework&lt;/a&gt;. It provides classes to create classic multi-window applications with a native look and feel. It can be used in Python or C++. It comes with a &lt;a href="https://pythonbasics.org/qt-designer-python/"&gt;GUI designer&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Requests&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;a href="https://2.python-requests.org/en/master/"&gt;Requests package&lt;/a&gt; provides a simple interface for making HTTP requests. It wraps the powerful module urllib2 with a much simpler interface while providing useful information such as HTTP headers and cookies.&lt;br&gt;
The requests library makes it easy to perform complex interactions that would otherwise require lots of code and multiple calls to external APIs.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scrapy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://scrapy.org/"&gt;Scrapy&lt;/a&gt; is a fast high-level screen scraping and web crawling framework, used to crawl websites and extract structured data from their pages. It can be used for a wide range of purposes, from data mining to monitoring and automated testing.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BeautifulSoup&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since 2004, &lt;a href="https://beautiful-soup-4.readthedocs.io/en/latest/"&gt;BeautifulSoup&lt;/a&gt; has been one of the most important libraries for parsing HTML. It is flexible and allows users to create solutions that work with any web page structure.&lt;br&gt;
Libraries like BeautifulSoup allow programmers to do anything from &lt;a href="https://pythonspot.com/extract-links-from-webpage-beautifulsoup/"&gt;extracting simple links&lt;/a&gt;, &lt;a href="https://pythonprogramminglanguage.com/web-scraping-with-pandas-and-beautifulsoup/"&gt;tables&lt;/a&gt; to more complex analysis and data manipulation.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;numpy and pandas&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://numpy.org/"&gt;NumPy&lt;/a&gt; is the fundamental package for scientific computing in Python and provides a solid foundation on top of which to build your numerical algorithms. &lt;a href="https://pandas.pydata.org/"&gt;Pandas&lt;/a&gt; provides powerful data structures and tools to make working with large datasets easier. It can &lt;a href="https://python-commandments.org/pandas-apply/"&gt;load data&lt;/a&gt; in many formats including csv, json, html and others.&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>How to Get Started With Azure Devops | beginner's guide</title>
      <author>Adit Modi</author>
      <pubDate>Sat, 10 Apr 2021 13:31:56 +0000</pubDate>
      <link>https://dev.to/cloudhacks/how-to-get-started-with-azure-devops-beginner-s-guide-3lj7</link>
      <guid>https://dev.to/cloudhacks/how-to-get-started-with-azure-devops-beginner-s-guide-3lj7</guid>
      <description>&lt;p&gt;A typical software development team is comprising of software developers, testers, DevOps engineers, architects, and project managers. Azure DevOps is a set of tools that allows software development teams to plan and collaborate on software development life cycle including creating features, coding, build, and deployment, testing, and provide feedback on the product.&lt;/p&gt;

&lt;p&gt;Requirements gathering, analysis and design, coding, testing, and deployment are common functions of software development life cycle. Azure DevOps is a cloud platform that provides tools to manage entire software development life cycle in the cloud.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5taoKyTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ybwh26h03t1ul2tp8ma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5taoKyTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ybwh26h03t1ul2tp8ma.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My Background: I am Cloud , DevOps &amp;amp; Big Data Evangelist | 4x AWS Certified | 3x OCI Certified | 3x Azure Certified | AWS Community Builder | AWS Educate Cloud Ambassador .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Azure DevOps&lt;/strong&gt; offers two options. First, Azure DevOps Services in the cloud and on-premises using Azure DevOps Server.Azure DevOps provides integrated features that you can access through your web browser or IDE client.&lt;/p&gt;

&lt;p&gt;The following is a list of Azure DevOps services that includes Azure Artifacts, Azure Boards, Azure Pipelines, Azure Repos, and Azure Test Plans.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L1oPm2yV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzl3bds6u4um98g91e2z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L1oPm2yV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzl3bds6u4um98g91e2z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Azure DevOps also offers collaboration tools such as to create documentation via wikis, and customizable team dashboards with configurable widgets to share information, progress, and trends&lt;/p&gt;

&lt;p&gt;Azure DevOps supports adding extensions and integrating with other popular services, such as: Campfire, Slack, Trello, UserVoice, and more, and developing your own custom extensions.&lt;/p&gt;

&lt;p&gt;Watch this video to learn more about Azure DevOps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=JhqpF-5E10I"&gt;https://www.youtube.com/watch?v=JhqpF-5E10I&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-boards"&gt;
  &lt;/a&gt;
  Azure Boards
&lt;/h2&gt;

&lt;p&gt;Azure Boards delivers a set of tools that allows development teams to keep track of development features in Agile process. The tools include Kanban boards, backlogs, sprints, queries, and plans. There are also options to add code defects, keep track of issues, and generate reports.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xde1a8ZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwwpg9hi30qs2wyoceu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xde1a8ZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwwpg9hi30qs2wyoceu2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a typical agile software development process, requirements are added to a backlog and moved to sprints. In a backlog, you can create epics, features, and tasks.&lt;/p&gt;

&lt;p&gt;Learn more about Azure boards here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=JhqpF-5E10I"&gt;https://www.youtube.com/watch?v=JhqpF-5E10I&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we know that Azure Boards has all the features your team needs to successfully manage your work. Azure boards allows you to visualize work with Kanban boards, execute in sprints, manage your backlog, and use queries to find work and visualize results. In this video, learn how to get started with Azure Boards.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-repos"&gt;
  &lt;/a&gt;
  Azure Repos
&lt;/h2&gt;

&lt;p&gt;Source code version control is a common need of software projects to keep track of different versions and changes in the code. Azure Repos is a set of version control tools hosted in Azure cloud. Azure DevOps service includes free unlimited private Git repos.&lt;/p&gt;

&lt;p&gt;Azure Repos provides two types of version control, Git and Team Foundation Version Control (TFVC).&lt;/p&gt;

&lt;p&gt;Git is one of the most popular distributed version control system that allows developers to have a local copy their source code on their development machine as local repositories and a copy stays on the server. This helps developers to work locally offline and developer commit their work locally, and then the changes are sync with the copy on the server. Unlike Git, which is distributed, TFVC is a centralized version control system.&lt;/p&gt;

&lt;p&gt;Azure Repos UI looks like the following that allows users to pull requests of projects. Azure portal looks like the following where&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oMsoZCpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fi5fk0is0s39epdz3581.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oMsoZCpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fi5fk0is0s39epdz3581.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Watch this video to learn how to get started with Git in Azure Repos and how your team can use pull requests to work together to collaborate on code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=-5QzZzkBpF8"&gt;https://www.youtube.com/watch?v=-5QzZzkBpF8&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-pipelines"&gt;
  &lt;/a&gt;
  Azure Pipelines
&lt;/h2&gt;

&lt;p&gt;Continuous integration (CI) and continuous delivery (CD) of software projects is a major task that is automated where tools are used to get latest versions of the code, build it, and deploy to the destinations. Azure Pipelines of Azure DevOps is a set of tools that provides build and release services for software development teams.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S6y17hlM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idmw875g7yivf3pdeibk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S6y17hlM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idmw875g7yivf3pdeibk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Azure Pipelines support build, test, and deploy Node.js, Python, Java, PHP, Ruby, C/C++, .NET, Android, and iOS apps. Run in parallel on Linux, macOS, and Windows.&lt;/p&gt;

&lt;p&gt;Azure Pipelines supports containers and Kubernetes that allows teams to easily build and push images to container registries like Docker Hub and Azure Container Registry.&lt;/p&gt;

&lt;p&gt;Deploy containers to individual hosts or Kubernetes.&lt;/p&gt;

&lt;p&gt;Azure Pipelines are extensible and allows a wide range of community-built build, test, and deployment tasks, along with hundreds of extensions from Slack to SonarCloud.&lt;/p&gt;

&lt;p&gt;Azure Pipelines allows teams to deploy their apps to any cloud including Azure, AWS, and GCP.&lt;/p&gt;

&lt;p&gt;Watch this video tp learn why Azure Pipelines is the best tool on the planet for Continuous Integration and Continuous Deployment (CI/CD) of your code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=NuYDAs3kNV8"&gt;https://www.youtube.com/watch?v=NuYDAs3kNV8&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-test-plans"&gt;
  &lt;/a&gt;
  Azure Test Plans
&lt;/h2&gt;

&lt;p&gt;Azure Test Plans are for software testing and QA teams to create test cases, test and report results, and generate reports. Azure Test Plans support manual testing and continuous testing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m7SQf8ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztqkd28cdk7j5tkm5xxb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m7SQf8ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztqkd28cdk7j5tkm5xxb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The four key functionalities of Azure Test Plans are,&lt;br&gt;
Planned manual testing&lt;br&gt;
Manual testing by organizing tests into test plans and test suites by designated testers and test leads.&lt;/p&gt;

&lt;p&gt;User acceptance testing&lt;br&gt;
Testing carried out by designated user acceptance testers to verify the value delivered meets customer requirements, while reusing the test artifacts created by engineering teams.&lt;/p&gt;

&lt;p&gt;Exploratory testing&lt;br&gt;
Testing carried out by development teams, including developers, testers, UX teams, product owners and more, by exploring the software systems without using test plans or test suites.&lt;/p&gt;

&lt;p&gt;Stakeholder feedback&lt;br&gt;
Testing carried out by stakeholders outside the development team, such as users from marketing and sales divisions.&lt;br&gt;
Watch this video to learn the basic aspects on how to get started with Azure Test Plan, so you can start testing your application today.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=LF0hmSysWCg"&gt;https://www.youtube.com/watch?v=LF0hmSysWCg&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-artifacts"&gt;
  &lt;/a&gt;
  Azure Artifacts
&lt;/h2&gt;

&lt;p&gt;Azure Artifacts allows teams to share packages such as Maven, npm, NuGet and more from public and private sources and integrate package sharing into your CI/CD pipelines&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wuaMdxK5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgpxstrh12qclr616ho1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wuaMdxK5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgpxstrh12qclr616ho1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this video, learn how to get started with Azure artifacts and start creating a feed for an npm package to use in your Azure Pipeline.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=b3BPkyikvNM"&gt;https://www.youtube.com/watch?v=b3BPkyikvNM&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-devops-azure-pipelines-azure-boards-github"&gt;
  &lt;/a&gt;
  Azure DevOps, Azure Pipelines, Azure Boards + Github
&lt;/h2&gt;

&lt;p&gt;Azure DevOps integrates seamlessly with GitHub. Watch this video to learn how you can easily track our work with the Azure Boards and GitHub integration and how we can easily create CI/CD pipelines for our code in GitHub using Azure Pipelines.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=_gURf7CW1lg"&gt;https://www.youtube.com/watch?v=_gURf7CW1lg&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Azure DevOps is one of the recent products of Azure that allows development teams to collaborate and mange their tasks and releases. In this article, we learned about basics of Azure DevOps and its various products.&lt;/p&gt;

&lt;p&gt;Azure DevOps and entire cloud ecosystem is a growing and changing space. Make sure to learn about latest changes in Azure DevOps that may not have mentioned here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fFhhQYYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jv1lx235iniqdmhk5r0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFhhQYYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jv1lx235iniqdmhk5r0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this guide helps you understand on How to Get Started With Azure Devops, feel free to connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn.&lt;/a&gt;&lt;br&gt;
You can view my badges &lt;a href="https://www.youracclaim.com/users/adit-modi/badges"&gt;here.&lt;/a&gt;&lt;br&gt;
If you are interested in learning more about AWS / Azure Services then follow me on &lt;a href="https://github.com/AditModi"&gt;github.&lt;/a&gt;&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

</description>
      <category>azure</category>
      <category>devops</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to add an icon inside the button using CSS</title>
      <author>Stackfindover</author>
      <pubDate>Sat, 10 Apr 2021 13:29:12 +0000</pubDate>
      <link>https://dev.to/stackfindover/how-to-add-an-icon-inside-the-button-using-css-42de</link>
      <guid>https://dev.to/stackfindover/how-to-add-an-icon-inside-the-button-using-css-42de</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Hello, guys In this tutorial we will learn how to add an icon inside the button using CSS.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#common-query"&gt;
  &lt;/a&gt;
  Common Query
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;How to add icon inside button&lt;/li&gt;
&lt;li&gt;Button with icon CSS&lt;/li&gt;
&lt;li&gt;add icon using CSS&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Hello, guys In this tutorial we will try to solve the mentioned query. and also we will learn how to add an icon inside the button using CSS.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First, we need to create two files &lt;strong&gt;index.html&lt;/strong&gt; and &lt;strong&gt;style.css&lt;/strong&gt; then we need to do code for it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step1"&gt;
  &lt;/a&gt;
  Step:1
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Add below code inside index.html&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;How to add icon inside button using CSS Only&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"ie=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans&amp;amp;display=swap"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button-outer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Book Now
      &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step2"&gt;
  &lt;/a&gt;
  Step:2
&lt;/h3&gt;

&lt;p&gt;Then we need to add code for &lt;strong&gt;style.css&lt;/strong&gt; which code I provide in the below screen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url(https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'IBM Plex Sans'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3f0069&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.button&lt;/span&gt;&lt;span class="nd"&gt;:before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"\f017"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;normal&lt;/span&gt; &lt;span class="nb"&gt;normal&lt;/span&gt; &lt;span class="nb"&gt;normal&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="n"&gt;FontAwesome&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-rendering&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;-webkit-font-smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;antialiased&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;-moz-osx-font-smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grayscale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-an-icon-inside-the-button-video-output"&gt;
  &lt;/a&gt;
  Add an icon inside the button Video Output:
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/b086muQeNnI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-an-icon-inside-the-button-output"&gt;
  &lt;/a&gt;
  Add an icon inside the button Output:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;We will update soon:)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#some-javascript-tutorial"&gt;
  &lt;/a&gt;
  Some JavaScript Tutorial
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://blogs.stackfindover.com/how-to-integrate-webcam-using-javascript/"&gt;How to Integrate Webcam using JavaScript&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blogs.stackfindover.com/best-way-to-use-iframe/"&gt;Best way to use iframe on any website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blogs.stackfindover.com/what-is-javascript/"&gt;What is JavaScript&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>System Design - How to design Google Drive / Dropbox (a cloud file storage service)</title>
      <author>Pankaj Tanwar</author>
      <pubDate>Sat, 10 Apr 2021 13:24:22 +0000</pubDate>
      <link>https://dev.to/pankajtanwarbanna/system-design-how-to-design-google-drive-dropbox-a-cloud-file-storage-service-284</link>
      <guid>https://dev.to/pankajtanwarbanna/system-design-how-to-design-google-drive-dropbox-a-cloud-file-storage-service-284</guid>
      <description>&lt;p&gt;System design is one of the most important aspect of software engineering. System design problems are usually open-ended discussions.&lt;/p&gt;

&lt;p&gt;Let’s design a cloud file storage service like Google drive or drop box. These services provides a platform that allow users to upload their files online and access them from any device. In this article, we will focus on architecture design &amp;amp; performance analysis of the system.&lt;/p&gt;

&lt;p&gt;So let’s dive right in!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-statement"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Problem Statement&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We need to design a service like Google Drive or Dropbox which allows users to store their data securely, synchronised &amp;amp; effectively on remote servers. User should be able to download and upload files from all their devices. System should be highly available, reliable and scalable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#feature-expectations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Feature Expectations&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The top level requirements of the system are as follows -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Functional Requirements&lt;/strong&gt; -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User should be able to download/upload, update, delete files from any device&lt;/li&gt;
&lt;li&gt;Files should be synchronised in all the devices that the user is logged in&lt;/li&gt;
&lt;li&gt;History/versioning of files (snapshotting of data)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Non-functional requirements&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our service needs to be highly available&lt;/li&gt;
&lt;li&gt;The system should be highly reliable; any uploaded file should never be lost&lt;/li&gt;
&lt;li&gt;System should support large files uploading &lt;/li&gt;
&lt;li&gt;ACID operations :&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Atomic          - File upload should be all or none &lt;br&gt;&lt;br&gt;
Consistency - Both versions on device and server must be same &lt;br&gt;&lt;br&gt;
Isolation           - Ensure multiple transactions at same time, with data consistency &lt;br&gt;&lt;br&gt;
Durability      - Must be highly available &amp;amp; durable &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not in Scope&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sharing file access with other users, offline editing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scale"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Scale&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Total Users&lt;/strong&gt;       : ~100 M&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Daily Active Users&lt;/strong&gt;    : ~50 M&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;QPS&lt;/strong&gt;           : ~500M request per day (~9000 Queries Per Second)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Storage Estimate&lt;/strong&gt;  : Assume, every user has avg 100 files (avg file size ~1MB) so we will have a total of 100B files. Hence, total storage would be -&lt;/p&gt;

&lt;p&gt;100MB x 100B = 10000PB.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Read/Write ratio&lt;/strong&gt;  : ~ 1:1 &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Traffic Estimate&lt;/strong&gt;  : ~5 GB new file writes per second&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Memory Usage&lt;/strong&gt;      : Assume, each user access 5 files daily and reading chunks of 200KB out of 1MB. So, following the 80-20 rule (80% traffic comes for 20% of the files), our cache size -&lt;/p&gt;

&lt;p&gt;((50 M x 200KB x 5 ) x 20) / 100  = 10 Tera Byte&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Active Connections&lt;/strong&gt;    : 1 M active connections per minute &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#high-level-design"&gt;
  &lt;/a&gt;
  &lt;strong&gt;High Level Design&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;On a high level, we need to support two scenarios, one to upload/edit/delete files and other to view/search files. We would need some object storage server (cloud storage) to store files, one block server with whom client would interact, one database server to store metadata information (file name, file size, path etc) about the files and one synchronisation server. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AUxFBhBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617952845935/_gcU4laIG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AUxFBhBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617952845935/_gcU4laIG.png" alt="high-level-design.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#system-apis"&gt;
  &lt;/a&gt;
  &lt;strong&gt;System APIs&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Following are the APIs we can expose from our service -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;upload(string uploadToken, fileInfo file, userInfo user)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;edit(string authToken, fileInfo file, userInfo user)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;delete(string authToken, fileInfo file, userInfo user)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;download(string authToken, fileInfo file, userInfo user)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We can have an another API to generate a write token (uploadToken) before hand when a user request to upload a new file. Here we will have an opportunity to authenticate &amp;amp; validate the user. If we need to block a user from uploading new files, a check can be put here instead of allowing user to send whole file in request and then discard it. It can avoid unnecessary resources consumption.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#component-design-amp-deep-dive"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Component Design &amp;amp; Deep dive&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd1ea0Qt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617952954142/fiX9kr9T_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd1ea0Qt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617952954142/fiX9kr9T_.png" alt="component-design.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s go through the major components of our system one by one:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Client&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A client application on user's device talks to our service to upload, download and modify files to backend cloud storage. Below are some major operations done by client -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Upload/download file&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we upload/download the file with full size, it will cost us storage and bandwidth. And also, latency will be increased for this process. If a user attempts to upload a 10MB file, that's a lot of resource usage :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;10MB of server memory tied up&lt;/li&gt;
&lt;li&gt;A request handler being tied up for the entire amount of time to upload a 10MB file&lt;/li&gt;
&lt;li&gt;High CPU Usage&lt;/li&gt;
&lt;li&gt;Suppose, If uploading fails after 90%, the whole file would be required to upload again.&lt;/li&gt;
&lt;li&gt;No efficient method to update the file for small edits as we would have the entire file, not chunks&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It will hit scalability very hard. It's not a wise choice to use full file upload approach at this scale.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Handling file transfer efficiently&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We may divide the file into smaller chunks to make it easier to upload. Details of chunks can be included in metadata. Naming of chunks can be done by the hash value of chunks content.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e3nUmEsb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953135029/JCCPxt9Fa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e3nUmEsb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953135029/JCCPxt9Fa.png" alt="file-upload.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This strategy will helps us in many ways -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bandwidth Optimisation&lt;/strong&gt; - Smaller chunks size optimises network bandwidth utilisation. While uploading, we can break the file into chunks and then upload it. In case of file upload failure, we don't need to upload whole file again, only failing chunk will be retried. If user updates the file, only modified chunk will be sent. &lt;/p&gt;

&lt;p&gt;Less amount of data transfer between client and server will reduce network bandwidth and most importantly, it will help us achieve a better response time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cloud Storage utilisation&lt;/strong&gt; - As we are sending modified chunks only to the server in case of update instead of the entire file again, it will decrease the cloud storage consumption.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Latency or Concurrency Utilisation&lt;/strong&gt;  - Transmitting the entire file at once consumes a lot more time as compared to small chunks. With multiple smaller data chunks, we can make use of concurrency also to upload/download the file using multi threading or multi processes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Faster lookup &amp;amp; version control&lt;/strong&gt;  - As we are only transmitting the modified chunks in case of updates, it helps us in proving a history of versions of the file. We can directly lookup at the modified chunks to see the modifications.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How to calculate chunk size&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Calculation of optimal chunk size can be done based on below parameters -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Input/Output operations per second on cloud storage devices&lt;/li&gt;
&lt;li&gt;Network bandwidth&lt;/li&gt;
&lt;li&gt;Average file size in storage &lt;/li&gt;
&lt;li&gt;Metadata information&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How to implement synchronisation server&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have a synchronisation server which ensures that any updates from one client as sync with other devices. But how can we implement client efficiently listening to changes happening with other clients? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Basic Solution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The very first basic solution would be, to periodically hit and check with the server for new changes. But this approach is highly inefficient as most of the time we would be getting empty responses. It is a waste of network bandwidth too and we are unnecessary putting extra load on the servers. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTTP Long Polling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An effective solution would be to use HTTP long polling. With long polling, client does not expect immediate response from the server. Server keeps the request open and waits for the new changes. Whenever there are new modifications by any client, server would immediately send an HTTP response to the client.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; - Unlike desktop or web clients, mobile clients usually sync on demand to save user’s bandwidth and space.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#metadata-database"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Metadata database&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We store the metadata &amp;amp; indexes of all chunks in our database as we have to track it. Important thing here is that we are not storing the actual file/chunks itself here, we are storing only the metadata information to retrieve the file later. It is also responsible for maintaining the history (versioning) of files.&lt;/p&gt;

&lt;p&gt;Database can be a relational database such as MySQL or a non-relational database such as cassandra, dynamoDB or MongoDB. Let's discuss which database to consider for our use case -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Relational vs Non-relational Database&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;As, multiple users might be on the same file simultaneously &amp;amp; we need to ensure data consistency. Since NoSQL data storage do not support ACID properties in favour of performance and scalability. We would need to implement ACID properties pro-grammatically in synchronisation service. It would require extra DB configurations. (For example, Cassandra replication factor gives the consistency level). Here, relational database (MySQL) has a plus point as they support ACID properties.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Relational databases are difficult to scale as if we are using MySQL, we would need to use sharding or master slave techniques and it would become more difficult these multiple databases for any new updates. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To overcome this problem, we can have a wrapper around all databases and cache instead of directly talking to the database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f9vEAGV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953330392/T-REe_Lzm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f9vEAGV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953330392/T-REe_Lzm.png" alt="System-Design-Dropbox-Metadata-Edge-Wrapper.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; : Storing file URL in database is a really bad idea. Using stored metadata information to construct the URL is a lot more robust and scalable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#synchronisation-service"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Synchronisation Service&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;For every new update, synchronisation service is responsible to efficiently process updates and apply changes to other subscribed devices to keep their local db and remote db in sync. &lt;/p&gt;

&lt;p&gt;Synchronisation service should be designed to transmit as less data as possible to avoid unnecessary network bandwidth and achieve a better response time. Server and client can calculate a hash (SHA-256) to check if chunk is updated or not. On server also, if we have the chunk with similar hash(even from another user), we can use the same chunk instead of creating a new copy to avoid data deduplication.&lt;/p&gt;

&lt;p&gt;For more efficiency, we can consider using a communication middleware between client and sync service. It will provide a global message queue to support a very high number of pull or push from client. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#message-queuing-service"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Message Queuing Service&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;To enable asynchronous message based communication between client and server to serve huge number of requests, we can make use of a scalable message queuing service. It should support efficient storing of any number of messages in a highly available, reliable and scalable queue.&lt;/p&gt;

&lt;p&gt;It will implement request and response queue. Request queue is a global queue which all client share. For each modification, the request will go to the global queue first to update the meta data DB and after that, synchronisation Service will update the meta data and update message is sent to all subscribed clients via response queue.&lt;/p&gt;

&lt;p&gt;Along with high scalabiliy and high performance, it provides load balancing and elasticity for multiple instances of the Synchronisation Service. RabbitMQ, Apache Kafka, etc. are some of the examples of the messaging queue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rJTW2HTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953447327/3aRsoDsiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rJTW2HTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953447327/3aRsoDsiw.png" alt="message-queue.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloudblock-storage"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Cloud/Block Storage&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Cloud/Block storage stores all the chunks, uploaded by users to the service. As we have metadata database, separate from storage, we can use any cloud storage approach eg - Amazon S3, Azure etc.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When Dropbox started, they used S3 as block storage. However as they grew, they developed an in-house multi-exabyte storage system known as Magic Pocket. In magic Pocket, files are split up into blocks, replicated for durability, and distributed across data centres in multiple geographic regions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#database-partitioning"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Database Partitioning&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;From database scalability point of view, database partitioning comes into picture to ensure scalability. Partitioning is the database process where very large tables are divided into multiple smaller parts for faster queries. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Metadata Partitions&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Based on first latter of file&lt;/strong&gt; :&lt;/p&gt;

&lt;p&gt;We can store file/chunks in partitions based on the first letter of a file path, means all files starting with same letter will stay in one partition. This is called "range based partitioning".&lt;/p&gt;

&lt;p&gt;The major disadvantage of this approach is that, it can lead to unbalanced servers. It might possible that some database partitions get filled completely as there are more files starting with same letter and some remains with no traffic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Based on hash of file ID&lt;/strong&gt; :&lt;/p&gt;

&lt;p&gt;Based on hash of fileId, randomly generated by our hash function, we can have partitions. Hash will be mapped to a number and it would be our partition to store the object. This approach can still lead to unbalanced partitions but can be solved by using consistent hashing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#caching"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Caching&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Caching is a very common technique for performance. This is very helpful to lower the latency. For our use case, &lt;strong&gt;Memcached&lt;/strong&gt; would be a good choice which can store the whole chunk, with it's respective hash. A cache for Metadata Database can also be used.   &lt;/p&gt;

&lt;p&gt;Cache servers are determined based on users' usage pattern &amp;amp; &lt;strong&gt;LRU&lt;/strong&gt; (Least Recently Used) can be the optimal policy for our cache.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#load-balancer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Load Balancer&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We can adopt round robin or some other fancy algorithm for load balancing layer to distribute the incomming traffic uniformly. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Source : INTERNET&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;About me : &lt;a href="https://pankajtanwar.in"&gt;https://pankajtanwar.in&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I write about System Design, Backend Engineering and Web Tech at : &lt;a href="https://blog.pankajtanwar.in"&gt;https://blog.pankajtanwar.in&lt;/a&gt;&lt;/p&gt;

</description>
      <category>systems</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
