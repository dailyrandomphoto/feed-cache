<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The Cost of a Websites: From Landing Page to the Complex Platform</title>
      <author>Maksym Babych</author>
      <pubDate>Tue, 22 Dec 2020 15:18:22 +0000</pubDate>
      <link>https://dev.to/maksymbabych/the-cost-of-a-websites-from-landing-page-to-the-complex-platform-4idf</link>
      <guid>https://dev.to/maksymbabych/the-cost-of-a-websites-from-landing-page-to-the-complex-platform-4idf</guid>
      <description>&lt;p&gt;When you ask how much does it cost to make a business website to a developer, the answer can be. &lt;/p&gt;

&lt;p&gt;How much are you looking to spend?&lt;/p&gt;

&lt;p&gt;Or&lt;/p&gt;

&lt;p&gt;What kind of platform do you want to make?&lt;/p&gt;

&lt;p&gt;There is no denying the fact that you need a website if you have a business. &lt;/p&gt;

&lt;p&gt;If you are planning to start a business, you need to have at least a landing page before launching. &lt;/p&gt;

&lt;p&gt;So, the answer to your question is how much does it cost to make a website have a range. &lt;/p&gt;

&lt;p&gt;You can expect to incur $1000 to as much as $300,000 as website development costs. &lt;/p&gt;

&lt;p&gt;$1000 being the cost to build a simple and static website. &lt;/p&gt;

&lt;p&gt;On the higher end, $300,000 might sound like a ridiculous figure. &lt;/p&gt;

&lt;p&gt;But that is the price that Airbnb spends to build their platform. &lt;/p&gt;

&lt;p&gt;Within this range, there are levels of website design and development.&lt;/p&gt;

&lt;p&gt;For a typical site with minimal functionalities, expect to put down $20,000 to $25,000 as website creation costs. &lt;/p&gt;

&lt;p&gt;Social media and eCommerce platforms require more investment. &lt;/p&gt;

&lt;p&gt;And in this case, you can expect to spend somewhere between $60,000 to $100,000. &lt;/p&gt;

&lt;p&gt;Lastly, the cost of building a website with highly advanced and includes savvy technological elements is more than $120,000. &lt;/p&gt;

&lt;p&gt;So, as you can see, the final answer to how much does it cost to make a business website is not standardized. &lt;/p&gt;

&lt;p&gt;Instead, there are multiple aspects involved in the calculation of this cost. &lt;/p&gt;

&lt;p&gt;Web Design&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Typical Site - $10,000 to $12,000&lt;/li&gt;
&lt;li&gt;Social Media or eCommerce - $15,000 to $20,000&lt;/li&gt;
&lt;li&gt;Advanced Platform - $25,000 to $35,000&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Development Services&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Typical Site - $10,000 to $12,000&lt;/li&gt;
&lt;li&gt;Social Media or eCommerce - $20,000 to $30,000 &lt;/li&gt;
&lt;li&gt;Advanced - $50,000 to $60,000&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Website Marketing&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Typical Site - $2000 to $4000 (per month)&lt;/li&gt;
&lt;li&gt;Social Media or eCommerce - $4,000 to $8,000&lt;/li&gt;
&lt;li&gt;Advanced - $10,000 to $15,000&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Website Maintenance (per month)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Typical Site - $500 to $700&lt;/li&gt;
&lt;li&gt;Social Media or eCommerce - $1500 to $2500&lt;/li&gt;
&lt;li&gt;Advanced - $3000 to $5000&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that you have a general idea about how much does it cost to make a website, let’s get into the details. &lt;/p&gt;

&lt;p&gt;Indeed, we won’t leave you guessing about how this cost adds up. &lt;/p&gt;

&lt;p&gt;Moreover, it is essential to understand every single aspect associated with website creation. &lt;/p&gt;

&lt;p&gt;However, this itinerary of costs takes inspiration from our experience in delivering multiple projects. &lt;/p&gt;

&lt;p&gt;Because every business is unique and has an exclusive value proposition, the website creation cost for the same can also vary. &lt;/p&gt;

&lt;p&gt;But, with this guide, we aim to give you a general idea about the cost of building a website from tip to toe. &lt;/p&gt;

&lt;p&gt;What follows is a detailed account of &lt;a href="https://spdload.com/blog/how-much-does-it-cost-to-make-a-website-from-scratch/"&gt;how much does it cost to make a business website&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>business</category>
      <category>websites</category>
      <category>startup</category>
    </item>
    <item>
      <title>Create a really nice Discord-like emoji switcher with these 3 simple steps</title>
      <author>Michael Grigoryan</author>
      <pubDate>Tue, 22 Dec 2020 15:06:06 +0000</pubDate>
      <link>https://dev.to/michaelgrigoryan25/create-a-really-nice-discord-like-emoji-switcher-with-these-3-simple-steps-426e</link>
      <guid>https://dev.to/michaelgrigoryan25/create-a-really-nice-discord-like-emoji-switcher-with-these-3-simple-steps-426e</guid>
      <description>&lt;p&gt;So, I use Discord every day. It is a nice piece of software that let's you connect and do more with people very.. no VEEEERY easily. So I'm talking to my friend and then I suddenly got the idea to create an emoji switcher like in Discord!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-1-finding-an-emoji-api" class="anchor"&gt;
  &lt;/a&gt;
  Step 1 — Finding an emoji API 📶
&lt;/h1&gt;

&lt;p&gt;I started off by searching for an emoji API and by luck found &lt;a href="https://emoji-api.com/"&gt;this&lt;/a&gt; one.&lt;br&gt;
So I made a key and started testing right away!&lt;br&gt;
When I fetched data from it I got an array with lots and lots of emojis in them. &lt;br&gt;
The object looked like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;character:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"😀"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;codePoint:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1F600"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;group:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"smileys-emotion"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;slug:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"grinning-face"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;subGroup:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"face-smiling"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;unicodeName:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"grinning face"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#step-2-creating-a-bolierplate-html" class="anchor"&gt;
  &lt;/a&gt;
  Step 2 — Creating a bolierplate HTML 📄
&lt;/h1&gt;

&lt;p&gt;So, this is really straightforward. You just create a basic HTML and hook it up with CSS and JS.&lt;br&gt;
I went with these parameters:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"picker"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"script.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#step-3-styling" class="anchor"&gt;
  &lt;/a&gt;
  Step 3 — Styling ✨
&lt;/h1&gt;

&lt;p&gt;I just added a hover effect on the &lt;code&gt;.picker&lt;/code&gt; defined some initial parameters for the &lt;code&gt;body&lt;/code&gt; tag and that's it! Easy!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.picker&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;user-select&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grayscale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;250ms&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.picker&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grayscale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#step-3-the-logic" class="anchor"&gt;
  &lt;/a&gt;
  Step 3 — The Logic 🤖
&lt;/h1&gt;

&lt;p&gt;JavaScript will do all the logic in this project. Here's how it's done:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accessKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// YOUR EMOJI-API ACCESS KEY GOES HERE&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;picker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.picker&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getEmotes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Fetching the data from the api&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://emoji-api.com/emojis?access_key=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;accessKey&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// Getting the response&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="c1"&gt;// Returning the response&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Fetching emotes with the function we defined earlier&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;emotes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getEmotes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="c1"&gt;// Getting a random emote from the array&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;emotes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

  &lt;span class="c1"&gt;// Setting the text of the p tag to a random emoji&lt;/span&gt;
  &lt;span class="nx"&gt;picker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Setting an event listener. When the mouse hovers we are basically doing the same thing but without fetching the data again&lt;/span&gt;
  &lt;span class="nx"&gt;picker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmouseover&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;_random&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;emotes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="nx"&gt;picker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;That's it! You have successfully built a Discord-like emoji switcher from scratch with vanilla JS, HTML and CSS! Great Job!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What is AJAX ?</title>
      <author>Edwin Henriquez</author>
      <pubDate>Tue, 22 Dec 2020 14:58:19 +0000</pubDate>
      <link>https://dev.to/edwincoder/what-is-ajax-1c8i</link>
      <guid>https://dev.to/edwincoder/what-is-ajax-1c8i</guid>
      <description>&lt;p&gt;Imagine scrolling down on twitter when suddenly the whole page refreshes on you! Imagine this happening every ten seconds just so twitter can show you new tweets. You were probably reading comments or a post that you were very interested in, but now lost your spot because the whole page just refreshed on you. If this happened, you will probably think the website is broken and never want to use it again. To prevent this bad experience, Twitter and Instagram use AJAX. AJAX stands for Asynchronous Javascript and XML. It uses an asynchronous processing model to render dynamic components of a page without having to refresh the entire page. The features that update itself without having to refresh the browser like amount of followers, new tweets, and new post are all results of using AJAX. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#working-ajax" class="anchor"&gt;
  &lt;/a&gt;
  Working AJAX
&lt;/h1&gt;

&lt;p&gt;Since you don’t have to load the whole page the data will load faster! This improves the users experience and also allows users to do other things on the page until that section of the page comes back with new data. AJAX gets the browser to request data from the server. Then the server sends back data that is in  HTML , XML or JSON format. You can read more about &lt;a href="https://www.quirksmode.org/blog/archives/2005/12/the_ajax_respon.html"&gt;AJAX response data formats&lt;/a&gt; here . Once the browser has successfully received the data it needs, it will fire an event that renders the new data to the page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DHCnOZ8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/muk7go8ql72pz74i8vm3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DHCnOZ8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/muk7go8ql72pz74i8vm3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This AJAX call is enclosed in a jQuery on click event.&lt;br&gt;
There are some settings you must set before making the AJAX call. The first to take a look at is the &lt;strong&gt;url&lt;/strong&gt; property. You must have the correct endpoint to get back data from your server. In this, i'm using a joke api to render random jokes to my plain Jane page. The &lt;strong&gt;type&lt;/strong&gt; property will take a HTTP verb GET or POST to retrieve data depending on what you need back. GET will retrieve data already saved to the database and POST will update the database with new information retrieved. &lt;strong&gt;Timeout&lt;/strong&gt; will do what it says, timeout after five seconds if the server doesn't respond. &lt;strong&gt;BeforeSend&lt;/strong&gt; method will display loading if it takes a while to load or an error occurs. Finally if the request come back correctly the &lt;strong&gt;success&lt;/strong&gt; function will run which appends my jokes to the web page. If there is a problem with the request, the &lt;strong&gt;error&lt;/strong&gt; function will fire off!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iqedDOE3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/do51v7cqcdrfx0vmqtla.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iqedDOE3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/do51v7cqcdrfx0vmqtla.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Now when you click the joke button it will request new jokes from the server. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;My example was plain but I wanted to show at the simplest level how AJAX is used. This can be a powerful technique due to its asynchronous processing model. You can improve the users experience by having components on the page render without refreshing the page entirely. It also makes your data load faster. Also, using Ajax with Jquery can also make things easier when requesting and appending data back onto the page. Thank you for reading ! Happy coding!&lt;/p&gt;

</description>
      <category>beginners</category>
    </item>
    <item>
      <title>Murders in the ocean - What I learned (Part 2)</title>
      <author>Denislav Gavrilov 👨‍🚀🤖🤷‍♂️</author>
      <pubDate>Tue, 22 Dec 2020 14:47:48 +0000</pubDate>
      <link>https://dev.to/denislav__/murders-in-the-ocean-what-i-learned-part-2-2nmm</link>
      <guid>https://dev.to/denislav__/murders-in-the-ocean-what-i-learned-part-2-2nmm</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Okay now. I want to start with that I have never played in a hackathon before. Boy, oh, boy did I learn a bunch of new stuff. I always admired people who write their hundreds of lines of code without looking at tutorials/Stack Overflow and look at me now - 650+ lines and counting! Okay, enough with the bragging... Actually, I want to confess. Maybe my code is one huge mess and that's why it has so many lines 😩. Anyway, it seems to be working somehow, and that's what matters, right?!&lt;/p&gt;

&lt;p&gt;Okay, let's get to the point. This is my second post on my DO+DEV hackathon submission and for those of you who don't know what I'm building, I am building a game. A murder mystery game. The rules of the game and how to play instructions are in my first post so go check it out. You can also check the rules on the home page of my app.&lt;/p&gt;

&lt;p&gt;So, in this second part, I want to share with all of you what I learned along the way and try to motivate you to join the hackathon if you aren't already building stuff. If not for this hackathon, I highly recommend giving another one a go!&lt;/p&gt;

&lt;p&gt;The structure of this post will be the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Current status&lt;/li&gt;
&lt;li&gt;What I learned&lt;/li&gt;
&lt;li&gt;What were my challenges&lt;/li&gt;
&lt;li&gt;What is left for my game&lt;/li&gt;
&lt;li&gt;Next steps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Without further due, let's get right into it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#current-status" class="anchor"&gt;
  &lt;/a&gt;
  Current status
&lt;/h1&gt;

&lt;p&gt;I will post some photos and explain the status of my game.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#starting-screen" class="anchor"&gt;
  &lt;/a&gt;
  Starting Screen
&lt;/h3&gt;

&lt;p&gt;There are now 3 buttons - to the GitHub repo, instructions on how to play, and a link to my personal website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K1Gg-GCH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8m77pjskhlgvwjy7skbr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K1Gg-GCH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8m77pjskhlgvwjy7skbr.png" alt="Start Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-login" class="anchor"&gt;
  &lt;/a&gt;
  First login
&lt;/h3&gt;

&lt;p&gt;Now all the players who are logged in are being shown before the game is started.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h_beT0VC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rjdqzdl0nt820glm9y8o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h_beT0VC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rjdqzdl0nt820glm9y8o.png" alt="login-shows-names"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#eject-player" class="anchor"&gt;
  &lt;/a&gt;
  Eject Player
&lt;/h3&gt;

&lt;p&gt;Now if a player tries to log in but there is already a player with that name, the 2nd player who tries to join is being disconnected.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lTqnT_q9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g1oqg3tasdgi5kfxwylq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lTqnT_q9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g1oqg3tasdgi5kfxwylq.png" alt="player-ejected-if-existing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dead-player" class="anchor"&gt;
  &lt;/a&gt;
  Dead player
&lt;/h3&gt;

&lt;p&gt;If a player is dead, it's card shows skull and bones at the end of the round (before the discussion round).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FiBUxYuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/czfjegsnpjwnysbbbrxk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FiBUxYuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/czfjegsnpjwnysbbbrxk.png" alt="if-dead-player"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quorum-and-jailed-player" class="anchor"&gt;
  &lt;/a&gt;
  Quorum and jailed player
&lt;/h3&gt;

&lt;p&gt;There is a quorum that has to be achieved in order for the voted player to be jailed. In the second photo, the Killer is being ejected and a message that the players won the game, appears. After that, they are being returned to the join screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--spWm0_gy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/d9xc68vm2twgk3u43i91.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--spWm0_gy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/d9xc68vm2twgk3u43i91.png" alt="quorum"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RwF6Fach--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ucmccsmvq4nggktp8mch.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RwF6Fach--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ucmccsmvq4nggktp8mch.png" alt="killer-ejected-victorious"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-i-learned" class="anchor"&gt;
  &lt;/a&gt;
  What I learned
&lt;/h1&gt;

&lt;p&gt;Oh man, where should I start... I learned so much about javascript (and programming in general) considering my previous skill level, I could write 5 posts about 5 different things and still have material to write about. The first and most important lesson I learned, is what to do if I'm stuck. I just get off my computer, I go do something different and I come back later (10-15 minutes). Something really interesting related to this one is when I went to sleep, I always came back in my best shape. Not sure how sleeping helps me in such an enormous way, but hey, it works!&lt;/p&gt;

&lt;p&gt;The second thing I learned is that there is no better way of learning stuff than to build projects. I mean, I already knew that, but I explored the power of this method.&lt;/p&gt;

&lt;p&gt;The third thing I learned is if I am lazy, I should just start coding and in 10 minutes I will be deep into my code, not thinking about anything else.&lt;/p&gt;

&lt;p&gt;The rest of what I learned, is technical stuff which I will be covering in my future posts. I will list some of them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Event listeners are actually working as intended... don't try overwriting them&lt;/li&gt;
&lt;li&gt;The JS .filter is one of the best things when it comes to arrays&lt;/li&gt;
&lt;li&gt;Looping through arrays is not actually that hard&lt;/li&gt;
&lt;li&gt;The JS .map is one powerful tool&lt;/li&gt;
&lt;li&gt;I can now use classes and constructors&lt;/li&gt;
&lt;li&gt;I can now construct a JSON.parse string&lt;/li&gt;
&lt;li&gt;A bunch of generic HTML-related stuff through JS&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#what-were-my-challenges" class="anchor"&gt;
  &lt;/a&gt;
  What were my challenges
&lt;/h1&gt;

&lt;p&gt;Well, I am having a lot of challenges throughout my way, but that's the fun in building projects, isn't it? The challenge that mostly demotivated me, was at the beginning of my project I did not know how to use classes, constructors, how to call them, and properly get data from them. When I overcame this bottleneck I raised the speed of my programming by a lot. I then had small challenges with socket.io calls but they were nothing like the class one.&lt;/p&gt;

&lt;p&gt;I also had a minor challenge with the naming of my variables, functions, IDs, classes.&lt;/p&gt;

&lt;p&gt;I usually have problems with motivation but since I am on leave from work for 12 days, I am not having such now. I am actually more motivated to code than ever. Makes you wonder...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-left-for-my-game" class="anchor"&gt;
  &lt;/a&gt;
  What is left for my game
&lt;/h1&gt;

&lt;p&gt;The stuff I need to do are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Work with my friend to design the rest of the illustrations&lt;/li&gt;
&lt;li&gt;Make a touch or two on the overall design&lt;/li&gt;
&lt;li&gt;Implement lose game functionality if the killer manages to kill all the players&lt;/li&gt;
&lt;li&gt;Chose a domain&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#next-steps" class="anchor"&gt;
  &lt;/a&gt;
  Next steps
&lt;/h1&gt;

&lt;p&gt;Well, here we are. This is the end of this second part of my 3-part series on how I attended my first hackathon. I learned a lot of stuff and I will certainly be joining more hackathons when I have the time. I am once again highly recommending to everyone who is still not playing in this one, to give it a go. In the end, the project will go in your portfolio anyway so what are you waiting for?!&lt;/p&gt;

&lt;p&gt;For my third post in this series, I will try and explain how my app works, what some pieces of code do so maybe you can fork it and make it better. However, this will be quite hard as there are too many lines of code to explain each and every one of them. Anyway, I will document my code with a lot of comments for you, users, to make it easier to read.&lt;/p&gt;

&lt;p&gt;Alrighty, thanks for reading, and have a great one!&lt;/p&gt;

</description>
      <category>dohackathon</category>
      <category>codenewbie</category>
      <category>gamedev</category>
    </item>
    <item>
      <title>IIFEs JS</title>
      <author>Dimitris Chitas</author>
      <pubDate>Tue, 22 Dec 2020 14:39:28 +0000</pubDate>
      <link>https://dev.to/feco2019/iifie-js-16om</link>
      <guid>https://dev.to/feco2019/iifie-js-16om</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hello there guys!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Today we will speak about IIFEs and why sometimes could be handy for your projects.&lt;/p&gt;

&lt;p&gt;IIFEs in javascript stands for immediately invoked function expressions,in simple terms just a function that runs directly after of its statement.&lt;/p&gt;

&lt;p&gt;Commonly we declare a function on the stack flow and when we need it we call it lets see a quick example.&lt;/p&gt;

&lt;p&gt;Let's imagine that we have a function that we would like to show to us a console message,simple enough?&lt;/p&gt;

&lt;p&gt;It could be something like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function showMessage() {
console('Hello DevCommunity)
};


&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Right?&lt;br&gt;
Right,now if we need to use this function we just say&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;showMessage();
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;with ease we solved our problem.&lt;br&gt;
But what happening if we want to initiate that function instantly.&lt;/p&gt;

&lt;p&gt;In this condition it is where IIFEs be useful, lets see this kind of syntax for the exact example above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(function () {
console.log('Hello')
}) ();
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As you can see,we wrap our function declaration inside parentheses and after the addition of functionality (console.log) , we close them and the curly braces as well, we add one more pair of parentheses out of the function scope that does our job, to invoke this function immediately.&lt;/p&gt;

&lt;p&gt;Of course we can set parameters,so we can say&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(function (text) {
console.log('Hello'  + text)
}) ('Community');

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;I hope you got an idea for a better usage of IIFEs.&lt;/p&gt;

&lt;p&gt;Have a nice workday guys, in case for further explanation do not hesitate to contact me or find me in github or linkedin.&lt;br&gt;
GitHub : &lt;a href="https://github.com/feco2019"&gt;https://github.com/feco2019&lt;/a&gt;&lt;br&gt;
Linkedin : &lt;a href="https://www.linkedin.com/in/dimitris-chitas-930285191/"&gt;https://www.linkedin.com/in/dimitris-chitas-930285191/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>iifie</category>
      <category>javascript</category>
      <category>functional</category>
      <category>workflow</category>
    </item>
    <item>
      <title>Acing CSS Grid Model in 2021 with 5 Exercises || CSS 2021 
🔥</title>
      <author>Khondokor Alam</author>
      <pubDate>Tue, 22 Dec 2020 14:03:27 +0000</pubDate>
      <link>https://dev.to/joyshaheb/acing-css-grid-model-in-2021-with-5-exercises-css-2021-51ci</link>
      <guid>https://dev.to/joyshaheb/acing-css-grid-model-in-2021-with-5-exercises-css-2021-51ci</guid>
      <description>&lt;p&gt;Here's a practical guide to learn the CSS Grid System/Model with &lt;strong&gt;High Efficiency&lt;/strong&gt; in 2021 by Building 5 Responsive Layouts across all screen sizes. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#check-the-figma-design-here" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.figma.com/file/OQLU5rBvgCpkR443VmoMGz/CSS-Grid-Model-Dev.to?node-id=0%3A1"&gt;Check The Figma Design Here&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Originally Inspired from &lt;a href="https://dev.to/nghiemthu/master-css-grid-with-5-layouts-in-17-minutes-3phf"&gt;Thu Nghiem&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents-" class="anchor"&gt;
  &lt;/a&gt;
  Table of Contents --
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#level-1"&gt;Level-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#level-2"&gt;Level-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#level-3"&gt;Level-3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#level-4"&gt;Level-4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#level-5"&gt;Level-5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#level-6"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#youtube" class="anchor"&gt;
  &lt;/a&gt;
  Youtube
&lt;/h1&gt;

&lt;h4&gt;
  &lt;a href="#if-this-is-difficult-for-you-then-see-step-by-step-tutorial-on-youtube" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://youtu.be/OtpDP8k-2iM"&gt;If this is difficult for you then see Step by step Tutorial on Youtube 🔥&lt;/a&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/OtpDP8k-2iM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#setup" class="anchor"&gt;
  &lt;/a&gt;
  Setup 🔥
&lt;/h1&gt;

&lt;p&gt;Open &lt;a href="//codepen.io"&gt;Codepen&lt;/a&gt; / any code editor and place these 👇&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scss" class="anchor"&gt;
  &lt;/a&gt;
  SCSS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Defining Break-Points&lt;/span&gt;

&lt;span class="nv"&gt;$bp&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;mobile&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;480px&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;tablet&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;768px&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;desktop&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1440px&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Defining our Conditional Media query Mixins.&lt;/span&gt;
&lt;span class="c1"&gt;//To save Time &amp;amp; Coffee.&lt;/span&gt;

&lt;span class="k"&gt;@mixin&lt;/span&gt; &lt;span class="nf"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$screen&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;@each&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$bp&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;//  defining max-width&lt;/span&gt;

    &lt;span class="k"&gt;@if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$screen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="k"&gt;@content&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Again .......&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Changing The Default Settings..&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//Defining settings of all .box- classes with&lt;/span&gt;
&lt;span class="c1"&gt;//Border color &amp;amp; placing text at Center.&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt; &lt;span class="o"&gt;^=&lt;/span&gt;&lt;span class="s2"&gt;"box-"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="na"&gt;place-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//Set any color you wish for testing purposes.&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#were-all-set-boys" class="anchor"&gt;
  &lt;/a&gt;
  We're All Set Boys 😆👌
&lt;/h3&gt;

&lt;h1&gt;
  &lt;a href="#level1" class="anchor"&gt;
  &lt;/a&gt;
  Level-1 &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A beginner Friendly Level XD&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VRHSzy53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/7uakossj8mqxenek5fx4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VRHSzy53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/7uakossj8mqxenek5fx4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html" class="anchor"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Header&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Main&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Footer&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#scss" class="anchor"&gt;
  &lt;/a&gt;
  SCSS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// The Main Sauce. It means, define --&lt;/span&gt;
&lt;span class="c1"&gt;// [.box-1 auto] [.box-2 1fr unit] &amp;amp; [.box-3 auto]&lt;/span&gt;

  &lt;span class="na"&gt;grid-template-rows&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt; &lt;span class="m"&gt;1fr&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//Defining gap between rows.&lt;/span&gt;
  &lt;span class="na"&gt;grid-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#level2" class="anchor"&gt;
  &lt;/a&gt;
  level-2 &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DlWdiWcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ipy4mkgt21gtpcwlxlvy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DlWdiWcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ipy4mkgt21gtpcwlxlvy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html" class="anchor"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Left&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Right&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#scss" class="anchor"&gt;
  &lt;/a&gt;
  SCSS
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#for-large-screen" class="anchor"&gt;
  &lt;/a&gt;
  For Large Screen
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;
&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Dividing the Width of screen&lt;/span&gt;
&lt;span class="c1"&gt;// in 12 equal fractions.&lt;/span&gt;

  &lt;span class="na"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1fr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="na"&gt;grid-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;There's confusion in picking number of columns to cover with grid-columns. No need to panic. Just add 1. For this case, we want .box-1 to cover 4 columns. so, we write 1/5. Like this 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="nc"&gt;.box-1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="c1"&gt;// Cover 4 columns. &lt;/span&gt;
&lt;span class="c1"&gt;//So, start = 1 || end = 4+1 = 5;&lt;/span&gt;
&lt;span class="c1"&gt;// grid-column : start/end; 👈 Short-Hand&lt;/span&gt;

  &lt;span class="nl"&gt;grid-column&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.box-2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="c1"&gt;// Cover remaining columns. &lt;/span&gt;
&lt;span class="c1"&gt;//This value 👇 is taken from .box-1 ☝️&lt;/span&gt;
&lt;span class="c1"&gt;//So, start = 5 || end = 12+1 = 13;&lt;/span&gt;
&lt;span class="c1"&gt;// grid-column : start/end; 👈 Short-Hand&lt;/span&gt;

  &lt;span class="nl"&gt;grid-column&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#for-mobile-screen" class="anchor"&gt;
  &lt;/a&gt;
  For Mobile Screen
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="c1"&gt;// The Media query mixin we defined at start.&lt;/span&gt;
&lt;span class="c1"&gt;//Took (mobile) 👇 from $bp;&lt;/span&gt;
&lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mobile&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="c1"&gt;// Defining that, make the column 1 piece/100%;&lt;/span&gt;
    &lt;span class="na"&gt;grid-template-columns&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//or, write 1fr&lt;/span&gt;

&lt;span class="c1"&gt;//Defining that, make 2 rows, 1fr (fraction) each,&lt;/span&gt;
    &lt;span class="na"&gt;grid-template-rows&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1fr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// To remove the previously defined values &lt;/span&gt;
  &lt;span class="nc"&gt;.box-1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nc"&gt;.box-2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;//inherit defines the original value.&lt;/span&gt;
    &lt;span class="nl"&gt;grid-column&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#lets-change-the-game-with-gridtemplate-areas" class="anchor"&gt;
  &lt;/a&gt;
  Let's Change the Game with Grid-template areas 😎
&lt;/h1&gt;

&lt;p&gt;Life's Quite Easier With Grid-Template-Areas tbh. It allows us to see visually what we're doing. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#level3" class="anchor"&gt;
  &lt;/a&gt;
  Level-3 &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_fhn5jbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/y1wpthpx3z2p8c327z3f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_fhn5jbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/y1wpthpx3z2p8c327z3f.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html" class="anchor"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;A&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;B&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;C&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#scss" class="anchor"&gt;
  &lt;/a&gt;
  SCSS
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#for-larger-screen" class="anchor"&gt;
  &lt;/a&gt;
  For Larger Screen
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;
&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Creating a 12 column X 3 row grid;&lt;/span&gt;

  &lt;span class="na"&gt;grid-template-areas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Defining&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="s1"&gt;'a'&lt;/span&gt; &lt;span class="n"&gt;takes&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="s1"&gt;'b'&lt;/span&gt; &lt;span class="n"&gt;takes&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2rows&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;'c'&lt;/span&gt; &lt;span class="n"&gt;takes&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2rows&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;There&lt;/span&gt;&lt;span class="s1"&gt;'s a high chance to get lost here,&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;//so, divide the areas in 3 columns with blank spaces=&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;    "a a a a    a a a a    a a a a"&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;    "b b b b    b b b b    c c c c"&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;    "b b b b    b b b b    c c c c";&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;  grid-gap: 10px;&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;}&lt;/span&gt;&lt;span class="err"&gt;

&lt;/span&gt;&lt;span class="s1"&gt;.box-1{&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;  grid-area: a;&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;}&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;.box-2{&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;  grid-area: b;&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;}&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;.box-3{&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;  grid-area: c;&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s1"&gt;}&lt;/span&gt;&lt;span class="err"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#for-mobile-screen" class="anchor"&gt;
  &lt;/a&gt;
  For Mobile Screen
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mobile&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;grid-template-areas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="s2"&gt;"a a a a    a a a a    a a a a"&lt;/span&gt;
    &lt;span class="s2"&gt;"a a a a    a a a a    a a a a"&lt;/span&gt;

    &lt;span class="s2"&gt;"b b b b    b b b b    b b b b"&lt;/span&gt;
    &lt;span class="s2"&gt;"b b b b    b b b b    b b b b"&lt;/span&gt;
    &lt;span class="s2"&gt;"b b b b    b b b b    b b b b"&lt;/span&gt;
    &lt;span class="s2"&gt;"b b b b    b b b b    b b b b"&lt;/span&gt;

    &lt;span class="s2"&gt;"c c c c    c c c c    c c c c"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#level4" class="anchor"&gt;
  &lt;/a&gt;
  Level-4 &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pu8W7wWQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xsbgskef01vaqtg75hep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pu8W7wWQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xsbgskef01vaqtg75hep.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html" class="anchor"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;A&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;B&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;C&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;D&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;E&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#scss" class="anchor"&gt;
  &lt;/a&gt;
  SCSS
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#for-larger-screens" class="anchor"&gt;
  &lt;/a&gt;
  For Larger Screens
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="na"&gt;grid-template-areas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="s2"&gt;"a a a a    a a a a    a a a a"&lt;/span&gt;

    &lt;span class="s2"&gt;"b b b b    b b b b    e e e e"&lt;/span&gt;
    &lt;span class="s2"&gt;"b b b b    b b b b    e e e e"&lt;/span&gt;

    &lt;span class="s2"&gt;"c c c c    d d d d    e e e e"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="na"&gt;grid-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.box-1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box-2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box-3&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box-4&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box-5&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#for-mobile-screens-" class="anchor"&gt;
  &lt;/a&gt;
  For Mobile Screens :
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mobile&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;grid-template-areas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 

    &lt;span class="s2"&gt;"a a a a    a a a a    a a a a"&lt;/span&gt;

    &lt;span class="s2"&gt;"b b b b    b b b b    b b b b"&lt;/span&gt;
    &lt;span class="s2"&gt;"b b b b    b b b b    b b b b"&lt;/span&gt;

    &lt;span class="s2"&gt;"c c c c    c c d d    d d d d"&lt;/span&gt;
    &lt;span class="s2"&gt;"e e e e    e e e e    e e e e"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#are-you-winning-son-lets-turn-up-the-heat" class="anchor"&gt;
  &lt;/a&gt;
  Are You winning Son? Let's Turn Up the heat 🥵
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#level5" class="anchor"&gt;
  &lt;/a&gt;
  Level-5 &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r0GeNTqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lio9zp1fuvq4kj35cn5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r0GeNTqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lio9zp1fuvq4kj35cn5x.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html" class="anchor"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;A&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;B&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;C&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;D&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;E&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;F&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#scss" class="anchor"&gt;
  &lt;/a&gt;
  SCSS
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#for-desktop" class="anchor"&gt;
  &lt;/a&gt;
  For Desktop
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;
&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="na"&gt;grid-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="na"&gt;grid-template-areas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="s2"&gt;"a a a a   a a a a   a a a a"&lt;/span&gt;
    &lt;span class="s2"&gt;"c c b b   b b b b   b b e e"&lt;/span&gt;
    &lt;span class="s2"&gt;"c c d d   d d d d   d d e e"&lt;/span&gt;
    &lt;span class="s2"&gt;"c c d d   d d d d   d d e e"&lt;/span&gt;
    &lt;span class="s2"&gt;"c c d d   d d d d   d d e e"&lt;/span&gt;
    &lt;span class="s2"&gt;"f f f f   f f f f   f f f f"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.box-1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box-2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box-3&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box-4&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box-5&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box-6&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#for-tablet" class="anchor"&gt;
  &lt;/a&gt;
  For Tablet
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;
&lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tablet&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;grid-template-areas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="s2"&gt;"a a a a   a a a a   a a a a"&lt;/span&gt;
    &lt;span class="s2"&gt;"b b b b   b b b b   b b b b "&lt;/span&gt;
    &lt;span class="s2"&gt;"c c d d   d d d d   d d d d"&lt;/span&gt;
    &lt;span class="s2"&gt;"c c d d   d d d d   d d d d"&lt;/span&gt;
    &lt;span class="s2"&gt;"c c d d   d d d d   d d d d"&lt;/span&gt;
    &lt;span class="s2"&gt;"e e f f   f f f f   f f f f"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#for-mobile-screen" class="anchor"&gt;
  &lt;/a&gt;
  For Mobile Screen
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;
&lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mobile&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;grid-template-areas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="s2"&gt;"a a a a   a a a a   a a a a"&lt;/span&gt;
    &lt;span class="s2"&gt;"b b b b   b b b b   b b b b "&lt;/span&gt;
    &lt;span class="s2"&gt;"c c c c   c c c c   c c c c"&lt;/span&gt;
    &lt;span class="s2"&gt;"d d d d   d d d d   d d d d"&lt;/span&gt;
    &lt;span class="s2"&gt;"d d d d   d d d d   d d d d"&lt;/span&gt;
    &lt;span class="s2"&gt;"d d d d   d d d d   d d d d"&lt;/span&gt;
    &lt;span class="s2"&gt;"e e e e   e e e e   e e e e"&lt;/span&gt;
    &lt;span class="s2"&gt;"f f f f   f f f f   f f f f"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Here's your medal 🎖️ for successfully completing CSS Grid Model/System. ❤️&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#suggestions-amp-criticisms-are-highly-appreciated-%EF%B8%8F" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Suggestions &amp;amp; Criticisms are Highly Appreciated ❤️️&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Youtube&lt;a href="//youtube.com/channel/UCHG7IJuST_BXJkne-0u0Xtw"&gt; / Joy Shaheb&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Twitter&lt;a href="https://twitter.com/JoyShaheb"&gt; / JoyShaheb&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Instagram&lt;a href="https://www.instagram.com/joyshaheb/"&gt; / JoyShaheb&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>tutorial</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>My Advice to New Programmers After Coding for the Last 3 Years</title>
      <author>Fahad Imran</author>
      <pubDate>Tue, 22 Dec 2020 11:23:14 +0000</pubDate>
      <link>https://dev.to/dailydotdev/my-advice-to-new-programmers-after-coding-for-the-last-3-years-39pf</link>
      <guid>https://dev.to/dailydotdev/my-advice-to-new-programmers-after-coding-for-the-last-3-years-39pf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#my-programming-background-or-lack-thereof" class="anchor"&gt;
  &lt;/a&gt;
  💻 My Programming Background (Or lack thereof)
&lt;/h2&gt;

&lt;p&gt;My journey as a programmer started when I chose to pursue &lt;strong&gt;Software Engineering&lt;/strong&gt; as a major after completing my High School Education. Since then, I have been programming for the better part of the last &lt;strong&gt;3 years&lt;/strong&gt; in various programming languages from Python, Java, C++, and recently JavaScript.&lt;/p&gt;

&lt;p&gt;It is important to mention that I had literally &lt;strong&gt;never&lt;/strong&gt; written a single line of code before starting my bachelor's. In fact, I don't remember taking a computer course throughout my middle and high school years. Suffice it to say. I was not like those students in my class, who had been coding as a hobby for a long time, or those who had already published entire Apps to the Play Store.&lt;/p&gt;

&lt;p&gt;Thus, in all aspects, I was a complete &lt;strong&gt;Newbie&lt;/strong&gt;. Therefore, I also had some &lt;strong&gt;misconceptions&lt;/strong&gt; about programming and coding in general. It took me the better part of the last 2 and a half years to understand my negligence and realize how mistaken I was. Thus, I am writing this blog post to help others who are new to programming like I was by &lt;strong&gt;debunking&lt;/strong&gt; some common misconceptions about programming.&lt;/p&gt;

&lt;p&gt;Enough talking, let's get into it, shall we?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#focus-on-the-fundamentals" class="anchor"&gt;
  &lt;/a&gt;
  🎯 Focus on the Fundamentals
&lt;/h2&gt;

&lt;p&gt;As a new programmer, your number one priority should be to &lt;strong&gt;master the fundamentals&lt;/strong&gt;. By this, I mean you should grasp concepts like variables, data types, data structures, conditionals, loops, algorithms, etc. &lt;/p&gt;

&lt;p&gt;The reason being, once you have sound knowledge of the fundamentals, you can learn any programming language in a matter of days. At the core, all programming languages generally have the same concepts. Good knowledge of the fundamentals will help you regardless of the programming language you choose to pick up.&lt;/p&gt;

&lt;p&gt;With my own example, I can say that once you know the &lt;strong&gt;basics&lt;/strong&gt;, picking up a new language will be &lt;strong&gt;a piece of cake&lt;/strong&gt;. So, if you take away one thing from this post, it should concentrate on sharpening up your fundamental programming concepts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#please-make-lots-of-mistakes" class="anchor"&gt;
  &lt;/a&gt;
  🙏 Please Make Lots of Mistakes
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Fear of making mistakes&lt;/strong&gt; is another big reason people fail at programming. I, too, was in the same boat. I had the notion that a good programmer knows the exact syntax of the language and wrote the perfect code that runs the first time around. This notion &lt;strong&gt;hindered&lt;/strong&gt; my ability to learn new things because I was so afraid of making mistakes that I never even tried.&lt;/p&gt;

&lt;p&gt;This concept of mine was blasted to smithereens in a concise span of time. Writing clean and elegant code that runs on the first try and produces the correct output is nothing short of a &lt;strong&gt;fantasy&lt;/strong&gt;. Even the most experienced developers cannot write fully functioning and error-free code on the first attempt. The sooner you realize this, the faster you will learn from your mistakes.&lt;/p&gt;

&lt;p&gt;You must understand that most of your time coding will be spent on &lt;strong&gt;debugging and looking up errors on the internet.&lt;/strong&gt; To succeed as a developer, you are not expected to memorize the entire syntax of a language in your head. I hardly believe anyone can do that. &lt;/p&gt;

&lt;p&gt;Instead, you focused on effectively &lt;strong&gt;debugging your applications&lt;/strong&gt;. Errors are an essential part of programming. The sooner you feel comfortable seeing red output on the screen screaming at you, the quicker you will master programming. Some of the best programmers I know or follow still spend a considerable amount of time-solving simple errors and looking up syntax that they cannot remember.&lt;/p&gt;

&lt;p&gt;You should also realize that the first time you write a piece of code, it will never be perfect. Instead, a good practice is to write code that works and then refine and &lt;strong&gt;refactor&lt;/strong&gt; that code to make it more readable and concise.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-rely-on-college-to-teach-you-everything" class="anchor"&gt;
  &lt;/a&gt;
  👨‍🎓 Don't Rely on College to teach you everything
&lt;/h2&gt;

&lt;p&gt;By far, the worst notion you could have as a new programmer is expecting the university or college to teach you everything.&lt;br&gt;
Universities follow a fixed curriculum, and while certain courses have greatly benefited me, like Database Systems, Computer Networks, Data structures, and Algorithms, etc. Many courses were not relevant to what is required in the field. &lt;/p&gt;

&lt;p&gt;For example, most universities don't teach you about web development in detail or about tools like git and GitHub, widely used throughout the industry.&lt;/p&gt;

&lt;p&gt;Thus, the cold truth is that you have to &lt;strong&gt;develop a habit of learning on your own&lt;/strong&gt;. In my case, the entire knowledge I have about &lt;strong&gt;web development&lt;/strong&gt; is through my &lt;strong&gt;own efforts&lt;/strong&gt; and learning. While it may be true in other Engineering fields, the programming landscape changes so quickly that educational institutions can't keep pace. Learning to code is a continuous process, and you must keep practicing and expanding your skillset if you want to stay relevant in today's competitive market.&lt;/p&gt;

&lt;p&gt;And the best thing is the &lt;strong&gt;abundance of online resources&lt;/strong&gt; available to help you in this regard. If you want to learn a language or framework, there are probably many tutorials and articles you can consult. So, it's a matter of dedication and hard work you are willing to put in, and you can master a skill in no time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-fall-into-tutorial-hell" class="anchor"&gt;
  &lt;/a&gt;
  😵 Don’t Fall into Tutorial Hell
&lt;/h2&gt;

&lt;p&gt;Another problem that new programmers face is that they tend to fall into &lt;strong&gt;Tutorial Hell&lt;/strong&gt;. Most of us resort to coding tutorials on YouTube and Udemy courses to learn any new language, framework, or skill. But these courses have a critical flaw that many of us don't realize.&lt;/p&gt;

&lt;p&gt;As you follow along with your instructor, you might feel very confident and even feel like you're getting everything. But as soon as you finish a course and try to develop something on your own, you'll feel &lt;strong&gt;completely blank&lt;/strong&gt; and have no idea where even to start. This has happened to me many times, and it's a very sinking feeling.&lt;/p&gt;

&lt;p&gt;The problem with these tutorials and courses is that they teach you how to build a specific application. They don't teach you how to develop the mindset to &lt;strong&gt;solve a particular problem&lt;/strong&gt;. Additionally, you also don't understand why the instructor uses a particular framework or why he/she is writing a piece of code in that way and not the other way round. &lt;/p&gt;

&lt;p&gt;Thus, it just becomes a case of copying code that the instructor is writing and not understanding its reasoning. So, while you may finish the course and build the application yet, you will be &lt;strong&gt;unable&lt;/strong&gt; to code something from scratch on your own.&lt;/p&gt;

&lt;p&gt;Instead, the best way to benefit from these courses is to &lt;strong&gt;modify the code&lt;/strong&gt; after you have finished the project. Try to break the code and change things around. Experiment with a different approach to implementing a specific feature. At the very least, try to add some &lt;strong&gt;functionality&lt;/strong&gt; on top of the course project. By adopting this approach, you will learn &lt;strong&gt;why things work the way they do&lt;/strong&gt; and understand the &lt;strong&gt;purpose&lt;/strong&gt; behind the code instead of merely copying it as your own.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-try-to-master-everything" class="anchor"&gt;
  &lt;/a&gt;
  🏹 Don't try to Master Everything
&lt;/h2&gt;

&lt;p&gt;Finally, the last bit of advice I will give to upcoming programmers is that &lt;strong&gt;you don't have to learn each and everything under the sun&lt;/strong&gt;. When you first start to code, you quickly realize that there are WAY too many fields that you can choose from, and it can be quite overwhelming to decide what you want to do.&lt;/p&gt;

&lt;p&gt;Let me give you a taste of what I am talking about. Let's say you are interested in &lt;strong&gt;Web Development&lt;/strong&gt;. You can choose to become a front-end web developer and work with things like HTML, CSS, JavaScript, Sass, and frameworks like React, Angular, Vue, or libraries like Bootstrap, Tailwind CSS, etc.&lt;/p&gt;

&lt;p&gt;Or you can choose to be a back-end developer and work with languages like Python, PHP, JavaScript or frameworks like Django, Flask, Express, etc., and databases like MySQL, PostgreSQL or MongoDB, etc. &lt;/p&gt;

&lt;p&gt;Or you can choose both and become a full-stack developer and handle both the front and back-end of a web app. Do you see where I am getting at? And this is just one field. &lt;/p&gt;

&lt;p&gt;Maybe you fancy &lt;strong&gt;Mobile Development&lt;/strong&gt; or perhaps &lt;strong&gt;Game Development&lt;/strong&gt;. You might be into &lt;strong&gt;Machine Learning&lt;/strong&gt; or &lt;strong&gt;Artificial Intelligence&lt;/strong&gt; and work with data analysis and training complex neural networks. Or you might want to indulge in the field of &lt;strong&gt;cybersecurity&lt;/strong&gt; and work on ethical hacking and so on.&lt;/p&gt;

&lt;p&gt;Suffice it to say, and whatever you want to do, there is a field for it. My advice is to &lt;strong&gt;choose what you want to specialize in&lt;/strong&gt; and go all out in it. There is a high demand for talented individuals who are great developers in a specific field instead of knowing a bit about everything. So, experiment to find what you like and then focus on mastering skills needed in that field, and you'll be doing better than most.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts" class="anchor"&gt;
  &lt;/a&gt;
  💭 Closing Thoughts
&lt;/h2&gt;

&lt;p&gt;Thus, these were some of the things I learned since I started to code. I am in &lt;strong&gt;no way an expert&lt;/strong&gt; yet. This is the essence of what I have personally experienced in my 3 years of programming. I am thrilled to choose this field as my profession, and I want to give back to the community as much as possible. &lt;/p&gt;

&lt;p&gt;For all the new programmers starting, &lt;strong&gt;focus on fundamentals&lt;/strong&gt;, &lt;strong&gt;continue learning in your time&lt;/strong&gt; and &lt;strong&gt;don't forget to have fun!&lt;/strong&gt; 😊&lt;/p&gt;




&lt;p&gt;&lt;em&gt;&lt;a href="https://api.daily.dev/get?r=devto"&gt;daily.dev&lt;/a&gt; delivers the best programming news every new tab. We will rank hundreds of qualified sources for you so that you can hack the future.&lt;/em&gt;&lt;br&gt;
&lt;a href="https://api.daily.dev/get?r=devto"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GnRWXIbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/b996k4sm4efhietrzups.png" alt="Daily Poster"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Responsive Website using CSS Grid</title>
      <author>Olena Drugalya</author>
      <pubDate>Tue, 22 Dec 2020 10:50:19 +0000</pubDate>
      <link>https://dev.to/olenadrugalya/responsive-website-using-css-grid-4i8c</link>
      <guid>https://dev.to/olenadrugalya/responsive-website-using-css-grid-4i8c</guid>
      <description>&lt;p&gt;This blog post describes one of the websites I have built using a powerful tool for building responsive websites - &lt;a href="https://www.w3schools.com/css/css_grid.asp"&gt;CSS Grid layout&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I have watched &lt;a href="https://www.youtube.com/watch?v=T-slCsOrLcc&amp;amp;list=PLu8EoSxDXHP5CIFvt9-ze3IngcdAc2xKG&amp;amp;ab_channel=WesBos"&gt;WesBos tutorial&lt;/a&gt; while I was learning Grid and practiced it afterwards (which is a good way of study for me).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#page-content-and-layout" class="anchor"&gt;
  &lt;/a&gt;
  Page Content and Layout
&lt;/h2&gt;

&lt;p&gt;The page content is pretty simple here:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;code&gt;div&lt;/code&gt; with a class &lt;code&gt;wrapper&lt;/code&gt; - main wrapping layout element
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt; Inside the &lt;strong&gt;wrapper&lt;/strong&gt; there is &lt;code&gt;div&lt;/code&gt; with a class &lt;code&gt;top&lt;/code&gt; -  this element is responsible for the content on the top of page:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"top"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt; Inside the &lt;strong&gt;top&lt;/strong&gt;  there are &lt;code&gt;header&lt;/code&gt;, 2 call-to-actions &lt;code&gt;div&lt;/code&gt; areas to the right of the main image:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;header&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hero"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"call-to-action call-to-actiont-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"call-to-action call-to-actiont-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;After &lt;strong&gt;top&lt;/strong&gt; there is &lt;code&gt;nav&lt;/code&gt; element for the menu:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"menu"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt; Inside the &lt;strong&gt;menu&lt;/strong&gt; navigation there are &lt;code&gt;button&lt;/code&gt; and &lt;code&gt;ul&lt;/code&gt; elements. We create &lt;code&gt;button&lt;/code&gt; here to be able to toggle it and expand/ collapse the menu. &lt;strong&gt;Menu-list&lt;/strong&gt; element contains links of different dishes in the menu:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;aria-expanded=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt; &lt;span class="na"&gt;aria-controls=&lt;/span&gt;&lt;span class="s"&gt;"menu-list"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"menu-list"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt; Inside the &lt;strong&gt;wrapper&lt;/strong&gt; after &lt;strong&gt;menu&lt;/strong&gt; class there are 3 sections:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"features"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"about"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"gallery"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt; There are 4 &lt;code&gt;div&lt;/code&gt; elements inside &lt;strong&gt;features&lt;/strong&gt; section, they describe Tacos, Beer, Wine and Music:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"feature"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;About&lt;/strong&gt; section contains info about Featured Taco and &lt;strong&gt;gallery&lt;/strong&gt; section contains images.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Every HTML block of code was styled using CSS Grid layout.  The most frequently used CSS properties in this project were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;display: grid&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid-gap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;grid-template-areas&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid-template-columns&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;.features {
    display: grid;
    grid-gap: 20px;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Website is fully responsive, we use here &lt;code&gt;@media&lt;/code&gt; queries to re-arrange the page layout according to &lt;code&gt;width&lt;/code&gt;.  See pictures below for desktop, tablet and mobile versions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#desktop-version" class="anchor"&gt;
  &lt;/a&gt;
  Desktop Version
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0AeKMEV5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g2qt99w8ggu8p3yq58b0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0AeKMEV5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g2qt99w8ggu8p3yq58b0.png" alt="page_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jw_g7GDA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vb37ukik4hw97q1ak1a7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jw_g7GDA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vb37ukik4hw97q1ak1a7.png" alt="page_2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ArucyIF1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/odnogou09whkgqqzr8ud.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ArucyIF1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/odnogou09whkgqqzr8ud.png" alt="page_3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tablet-version" class="anchor"&gt;
  &lt;/a&gt;
  Tablet Version
&lt;/h2&gt;

&lt;p&gt;On tablet version &lt;strong&gt;Menu&lt;/strong&gt; collapses and only &lt;strong&gt;Menu&lt;/strong&gt; button is shown. Also the layout of the page is being changed:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F2InpyhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/1txe7136lnwykx7qn9dt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F2InpyhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/1txe7136lnwykx7qn9dt.png" alt="pic_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This image demonstrates &lt;strong&gt;Menu&lt;/strong&gt; section  when a user toggles Menu button:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JNCjSXMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mm1rcn1kh46aci5sbgmh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JNCjSXMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mm1rcn1kh46aci5sbgmh.png" alt="page_tablet_openMenu.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_T9MOF9a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/sfmjrqsyqf11q2r7s0bx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_T9MOF9a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/sfmjrqsyqf11q2r7s0bx.png" alt="page_tablet_1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JA7eLlF5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8vnwotqlncxb17i3kurm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JA7eLlF5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8vnwotqlncxb17i3kurm.png" alt="page_tablet_2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mobile-version" class="anchor"&gt;
  &lt;/a&gt;
  Mobile Version
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H-2xScDE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608633051006/HoeaYc7IF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H-2xScDE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608633051006/HoeaYc7IF.png" alt="page_mobile.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F-OjtuCY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608633057363/Nw0jUxo8k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F-OjtuCY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608633057363/Nw0jUxo8k.png" alt="page_mobile_1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zZesdpk0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608633066123/zZa3ZOTpE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zZesdpk0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608633066123/zZa3ZOTpE.png" alt="page_mobile_2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BnUHft-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608633076446/mT3cpTaff.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BnUHft-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608633076446/mT3cpTaff.png" alt="page_mobile_3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to connect on &lt;a href="https://www.linkedin.com/in/olenadrugalya/"&gt;LinkedIn&lt;/a&gt; or &lt;a href="https://twitter.com/OlenaDrugalya"&gt;Twitter&lt;/a&gt; :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ko-fi.com/J3J42JOOA"&gt;&lt;img height="12" width="30%" src="https://res.cloudinary.com/practicaldev/image/fetch/s--KS7c42cU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.ko-fi.com/cdn/kofi1.png%3Fv%3D2" alt="Buy Me a Coffee at ko-fi.com"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>html</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How to use Chart.js in React</title>
      <author>Harshil Parmar</author>
      <pubDate>Tue, 22 Dec 2020 08:42:26 +0000</pubDate>
      <link>https://dev.to/harshilparmar/how-to-use-chart-js-in-react-17jp</link>
      <guid>https://dev.to/harshilparmar/how-to-use-chart-js-in-react-17jp</guid>
      <description>&lt;p&gt;The purpose of this tutorial is to show how to use ChartJS in React. In this tutorial, a small activity logging system is created from scratch.  Based on the activity logged and hours spent, the user will be able to see the relevant chart formed on the screen. At the end of this tutorial, learners will get the basic understanding of ChartJS with React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo" class="anchor"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://harshilparmar.github.io/React-Chart-Tutorial/"&gt;https://harshilparmar.github.io/React-Chart-Tutorial/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents" class="anchor"&gt;
  &lt;/a&gt;
  Table of contents:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;How will it work?&lt;/li&gt;
&lt;li&gt;Prerequisites&lt;/li&gt;
&lt;li&gt;Development &lt;/li&gt;
&lt;li&gt;Summary&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-will-it-work-" class="anchor"&gt;
  &lt;/a&gt;
  How will it work ?
&lt;/h2&gt;

&lt;p&gt;The app will work according to given steps,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Enter activity &amp;amp; hours spent&lt;/li&gt;
&lt;li&gt;Press Submit or Add another activity&lt;/li&gt;
&lt;li&gt;Charts will be shown(based on the activity &amp;amp; hours logged)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Flow of the web application is shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jGWY9aBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p70166jz1ymy4nukcmqd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jGWY9aBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p70166jz1ymy4nukcmqd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites" class="anchor"&gt;
  &lt;/a&gt;
  Prerequisites:
&lt;/h2&gt;

&lt;p&gt;To develop the Activity Logging System, we need to use few things. &lt;br&gt;
Those are, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install Node&lt;/li&gt;
&lt;li&gt;Install VSCode&lt;/li&gt;
&lt;li&gt;Install React&lt;/li&gt;
&lt;li&gt;Install Chart&lt;/li&gt;
&lt;li&gt;Install Bootstrap (optional)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s walk through each of them,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Download Node:&lt;br&gt;
&lt;a href="https://nodejs.org/en/download/"&gt;To download node&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install VSCode:&lt;br&gt;
You can visit &lt;a href="https://code.visualstudio.com/download"&gt;here&lt;/a&gt; to download VSCode according to your OS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install react:&lt;br&gt;
To install react on your machine, please run&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npx create-react-app my-app&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
,&lt;/p&gt;

&lt;p&gt;You can visit &lt;a href="https://reactjs.org/docs/create-a-new-react-app.html"&gt;here&lt;/a&gt; for official documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Chart-js:&lt;br&gt;
&lt;br&gt;
&lt;code&gt;npm install react-chartjs-2 chart.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;You can visit &lt;a href="https://www.npmjs.com/package/react-chartjs-2"&gt;here&lt;/a&gt;.&lt;/p&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Install Bootstrap:&lt;br&gt;
&lt;br&gt;
&lt;code&gt;npm i bootstrap&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;You can visit &lt;a href="https://www.npmjs.com/package/bootstrap"&gt;here&lt;/a&gt;.&lt;/p&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#development" class="anchor"&gt;
  &lt;/a&gt;
  Development:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#folder-structure" class="anchor"&gt;
  &lt;/a&gt;
  Folder Structure
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TqvU3G03--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wzo1rpgy3s1a2i0hdtqd.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TqvU3G03--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wzo1rpgy3s1a2i0hdtqd.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#styling-in-react" class="anchor"&gt;
  &lt;/a&gt;
  Styling  in React
&lt;/h3&gt;

&lt;p&gt;There are various technics to style react application.We have used CSS Modules style.&lt;br&gt;
There is a separate style file for each component  &lt;code&gt;component-name.module.css&lt;/code&gt;.&lt;br&gt;
We can easily use that by importing them in js/jsx file and access that by &lt;code&gt;className={styles.form}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For more details,you can visit below links: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@dmitrynozhenko/9-ways-to-implement-css-in-react-js-ccea4d543aa3"&gt;https://medium.com/@dmitrynozhenko/9-ways-to-implement-css-in-react-js-ccea4d543aa3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://create-react-app.dev/docs/adding-a-css-modules-stylesheet/"&gt;https://create-react-app.dev/docs/adding-a-css-modules-stylesheet/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#form-component-formjsx" class="anchor"&gt;
  &lt;/a&gt;
  Form component (Form.jsx)
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#form-in-react" class="anchor"&gt;
  &lt;/a&gt;
  Form in React
&lt;/h4&gt;

&lt;p&gt;To make form in react, we have to make states which store local values and change it according to user-inputs.&lt;br&gt;
For Function component we can use useState hook to make state.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const initialState = {
  dailyData: [
    {
      activity: "",
      timeSpent: 0,
    },
  ],
  chartLabels: [],
  chartData: [],
  chartColot: [],
};
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;By following  above code snippets, we can initialize state.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const [state, setstate] = useState(initialState);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here initial state will become initial value for our form field.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{state.dailyData.map((data, index) =&amp;gt; (
          &amp;lt;Fragment key={index}&amp;gt;
            &amp;lt;div className="row"&amp;gt;
              &amp;lt;div className="col"&amp;gt;
                &amp;lt;input
                  type="text"
                  name="activity"
                  value={data.activity}
                  className="form-control"
                  onChange={(e) =&amp;gt; onChange(e, index)}
                  placeholder="Activity"
                /&amp;gt;
              &amp;lt;/div&amp;gt;
              &amp;lt;div className="col"&amp;gt;
                &amp;lt;input
                  type="number"
                  name="timeSpent"
                  value={data.timeSpent}
                  className="form-control"
                  onChange={(e) =&amp;gt; onChange(e, index)}
                  placeholder="Time Spent"
                /&amp;gt;
              &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;br /&amp;gt;
          &amp;lt;/Fragment&amp;gt;
        ))}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;There are two fields in our form:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Activity&lt;/li&gt;
&lt;li&gt;Time spent during that activity (in hour)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Each field has value property which is linked to state for showing current value of state in a form.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const onChange = (e, index) =&amp;gt; {
    let { name, value } = e.target;

    let updatedState = [...state.dailyData];

    updatedState[index][name] = value;

    setstate((previousState) =&amp;gt; {
      return {
        ...previousState,
        dailyData: [...updatedState],
      };
    });
  };
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Onchange event of form will be handle by onChange handler.It will take event object and index of current changed activity.&lt;br&gt;
For that we can use setState method. &lt;br&gt;
For setting state we have to extract name and value from event object.&lt;br&gt;
Here updatedState is temporary variable for mutating state.&lt;/p&gt;

&lt;p&gt;For more details,you can visit: &lt;a href="https://reactjs.org/docs/forms.html"&gt;https://reactjs.org/docs/forms.html&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#add-dynamic-form-field" class="anchor"&gt;
  &lt;/a&gt;
  Add Dynamic form field
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;       &amp;lt;button
          type="button"
          style={{ marginRight: "25px" }}
          name="addNew"
          onClick={addExtraField}
          className="btn btn-outline-success"
         &amp;gt;
          Add Activity
       &amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;To add an extra activity field we have to click a button which will add a new field to current form.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const addExtraField = (e) =&amp;gt; {
    let extraActivity = [
      ...state.dailyData,
      {
        activity: "",
        timeSpent: 0,
      },
    ];

    setstate((previousState) =&amp;gt; {
      return {
        ...previousState,
        dailyData: [...extraActivity],
      };
    });
  };
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;On every onClick event, addExtraField method will be called and set state after pushing new property to dailyData array.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pass-data-to-chart" class="anchor"&gt;
  &lt;/a&gt;
  Pass data to Chart
&lt;/h4&gt;

&lt;p&gt;To pass current data to chart, we have to convert data in a specific format (array).&lt;br&gt;
For that we use submit button to convert current state data to specific format. On every submit button click onSubmit method will be called.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const onSubmit = (e) =&amp;gt; {
    e.preventDefault();
    let chartLabels = state.dailyData
      .map((data) =&amp;gt; {
        return data.activity;
      })
      .filter((e) =&amp;gt; e);
    let chartData = state.dailyData
      .map((data) =&amp;gt; {
        return parseInt(data.timeSpent);
      })
      .filter((e) =&amp;gt; e);

    setstate((previousState) =&amp;gt; {
      return {
        ...previousState,
        chartData: chartData,
        chartLabels: chartLabels,
      };
    });
  };
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here, we have to convert state object to array using map method of array.&lt;br&gt;
And after that we have to set that data to current state.&lt;/p&gt;

&lt;p&gt;For passing data to chart component we have to check data availability for that we have to use conditional rendering.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{state.chartData.length &amp;amp;&amp;amp; state.chartLabels.length ? (
        &amp;lt;Chart {...state} /&amp;gt;
      ) : null}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Chart will only be rendered if there is a proper data to be passed to the chart.&lt;/p&gt;

&lt;p&gt;For more details,you can visit: &lt;a href="https://reactjs.org/docs/conditional-rendering.html"&gt;https://reactjs.org/docs/conditional-rendering.html&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chart-component-chartjsx" class="anchor"&gt;
  &lt;/a&gt;
  Chart Component (Chart.jsx)
&lt;/h3&gt;

&lt;p&gt;To make charts, we have to use react react-chartjs-2 which is wrapper for Chart.js.&lt;br&gt;
For this tutorial we will make three types of charts Line,Pie,Bar.&lt;br&gt;
For more details,you can visit below links: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/react-chartjs-2"&gt;https://www.npmjs.com/package/react-chartjs-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jerairrest.github.io/react-chartjs-2/#/"&gt;http://jerairrest.github.io/react-chartjs-2/#/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In every chart we have to pass prop object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Line
          data={{
            labels: props.chartLabels,
            datasets: [
              {
                data: props.chartData,
                label: "Activity",
                borderColor: "#3333ff",
                fill: true,
                backgroundColor: "#CAA6DB",
              },
            ],
          }}
        /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here labels are those activities which we have been passed from Form component.&lt;br&gt;
Datasets have various properties in which data property take data which we have to plot on chart.&lt;br&gt;
For more details,you can visit below links: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jerairrest/react-chartjs-2#properties"&gt;https://github.com/jerairrest/react-chartjs-2#properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.newline.co/@dmitryrogozhny/quick-introduction-to-displaying-charts-in-react-with-chartjs-and-react-chartjs-2--a85b4e2e"&gt;https://www.newline.co/@dmitryrogozhny/quick-introduction-to-displaying-charts-in-react-with-chartjs-and-react-chartjs-2--a85b4e2e&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To convert This chart to Bar chart we simply have to import Bar chat from react-chartjs-2 library.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Bar
        data={{
          labels: props.chartLabels,
          datasets: [
            {
              data: props.chartData,
              label: "Activity",
              borderColor: "#3333ff",
              fill: true,
              backgroundColor: colorPicker.map(() =&amp;gt; colorPicker[Math.round(Math.random() * 2)])
              ,
            },

          ],
        }}
      /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And same for pie chart&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Pie
        data={{
          labels: props.chartLabels,
          datasets: [
            {
              data: props.chartData,
              label: "Activity",
              borderColor: "#3333ff",
              fill: true,
              backgroundColor: colorPicker.map(() =&amp;gt; colorPicker[Math.round(Math.random() * 2)])
              ,
            },
          ],
        }}
      /&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;For other examples of chart you can refer &lt;br&gt;
&lt;a href="http://jerairrest.github.io/react-chartjs-2/#/"&gt;http://jerairrest.github.io/react-chartjs-2/#/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here &lt;code&gt;colorPicker&lt;/code&gt; is an array which we are using to generate random colors for charts &lt;code&gt;colorPicker.map(() =&amp;gt; colorPicker[Math.round(Math.random() * 2)])&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary" class="anchor"&gt;
  &lt;/a&gt;
  Summary:
&lt;/h2&gt;

&lt;p&gt;In this tutorial, you learnt how to show data in the form of charts using react.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#points-covered" class="anchor"&gt;
  &lt;/a&gt;
  Points covered:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add new input fields to react app dynamically.&lt;/li&gt;
&lt;li&gt;You can customise the look and feel of charts.&lt;/li&gt;
&lt;li&gt;Real time data representation in form of charts.&lt;/li&gt;
&lt;li&gt;Give random colors to the charts.&lt;/li&gt;
&lt;li&gt;Styling of input fields and buttons using Bootstrap.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#future-scopes" class="anchor"&gt;
  &lt;/a&gt;
  Future scopes:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can create charts for large data sets using react.&lt;/li&gt;
&lt;li&gt;You can create a Task Management System for an organization/school/universities.&lt;/li&gt;
&lt;li&gt;Customise charts to represent data in a more visually appealing way.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#motivation-behind-the-tutorial" class="anchor"&gt;
  &lt;/a&gt;
  Motivation behind the tutorial
&lt;/h3&gt;

&lt;p&gt;I and my friend (Kathan Trivedi) had taken part in the Facebook Community challenge 2020 &lt;a href="https://developercircles2020.devpost.com/"&gt;https://developercircles2020.devpost.com/&lt;/a&gt; .In which we had to make a basic tutorial about any facebook technology.&lt;/p&gt;

&lt;p&gt;Hope It helps.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>challenge</category>
      <category>beginners</category>
    </item>
    <item>
      <title>6 Form Related HTML Tags You Might not Know</title>
      <author>Albert Walicki</author>
      <pubDate>Tue, 22 Dec 2020 07:53:39 +0000</pubDate>
      <link>https://dev.to/albertwalicki/6-form-related-html-tags-you-might-not-know-pge</link>
      <guid>https://dev.to/albertwalicki/6-form-related-html-tags-you-might-not-know-pge</guid>
      <description>&lt;p&gt;HTML5 achieved W3C recommendation in 2014 and added a lot of new tags. Some of them like &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; are semantic replacements for common used &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. Everybody was talking about those tags, but there a lot of different not so often used and not known. Let's discover together 6 form related HTML elements you might not know.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#progress-bar" class="anchor"&gt;
  &lt;/a&gt;
  Progress bar
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8KmggI0h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kj28sk6qqkmvbi02n9u9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8KmggI0h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kj28sk6qqkmvbi02n9u9.gif" alt="How to quickly prototype progress bars for multiple use cases By Steven Douglas"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you create a form and there is a file upload input, you should show how much of file was uploaded. This is a big UX (user experience) improvement. Your first thought might be:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;OK, I will create div and animate background while progress is changing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And that's OK. But we have special HTML tag to display progress indicator! &lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt; was added with other HTML5 elements. Let's take a look at it.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/walickialbert/embed/qBaZxBQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;As you can see, there is a simple layout with basic CSS. Also, there is some javascript code to fake file upload. On &lt;code&gt;&amp;lt;input type='file' /&amp;gt;&lt;/code&gt; change I initialize fake progress function in &lt;code&gt;setInterval&lt;/code&gt;. After 5 seconds, our fake upload is completed, and we have success text. This is the ultimate simple usage of  &lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;Here you can read more about styling &lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt;: &lt;a rel="noreferrer" href="https://css-tricks.com/html5-progress-element/"&gt;The HTML5 progress Element&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unique-attributes" class="anchor"&gt;
  &lt;/a&gt;
  Unique Attributes
&lt;/h3&gt;

&lt;p&gt;This element includes two attributes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;max - this attribute specifies how much work the task requires in total. If max attribute is present, it must have a value greater than 0. The default value is 1.&lt;/li&gt;
&lt;li&gt;value - this attribute specifies how much of task has been completed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#datalist" class="anchor"&gt;
  &lt;/a&gt;
  Datalist
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uyoUZVTa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6z4tau3t9b3ngs5zlnaj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uyoUZVTa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6z4tau3t9b3ngs5zlnaj.png" alt="Example of datalist"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;datalist&amp;gt;&lt;/code&gt; element was created to be used as a recommendation list for inputs. You can choose available options or type your own answer. This element is used by browsers to provide autocomplete feature.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/walickialbert/embed/ExgKEdK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;datalist&amp;gt;&lt;/code&gt; is an invisible helper for your inputs. You might dynamically add options to it, making it personalized for each user of your app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usage" class="anchor"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;The only thing that you have to remember about &lt;code&gt;&amp;lt;datalist&amp;gt;&lt;/code&gt; is that its id must be equal to the input element list attribute. This allows the browser to know that this  &lt;code&gt;&amp;lt;datalist&amp;gt;&lt;/code&gt; belongs to &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fieldset-and-legend" class="anchor"&gt;
  &lt;/a&gt;
  Fieldset and Legend
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; element groups several inputs within one form and the &lt;code&gt;&amp;lt;legend&amp;gt;&lt;/code&gt; element groups related elements. Think about it as a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; but for more than one element.&lt;/p&gt;

&lt;p&gt;Both elements can be used together to group part of the form (&lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt;) and to add a global label to it (&lt;code&gt;&amp;lt;legend&amp;gt;&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/walickialbert/embed/QWKNmRR?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#output" class="anchor"&gt;
  &lt;/a&gt;
  Output
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;output&lt;/code&gt; element is one of my favourite not-well-known HTML tags. This element can inject the results of user calculations.&lt;/p&gt;

&lt;p&gt;In my example, we have two inputs type number and one type range. Math pattern look like this: &lt;code&gt;(a * b) + c = d&lt;/code&gt;;&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/walickialbert/embed/XWjabYL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#optgroup" class="anchor"&gt;
  &lt;/a&gt;
  Optgroup
&lt;/h2&gt;

&lt;p&gt;This HTML tag allows us to group select options. For example, if you have a country select, you can group it by continent.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/walickialbert/embed/MWjvaKg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Thanks! That's all for today. In the next article, I will write about other HTML tags.&lt;/p&gt;

&lt;p&gt;You can follow me on social media or sign up for my newsletter!&lt;br&gt;
🐦 &lt;a href="https://twitter.com/AlbertWalicki"&gt;Twitter&lt;/a&gt;&lt;br&gt;
👨🏻‍💻 &lt;a href="https://albertwalicki.com"&gt;Blog&lt;/a&gt;&lt;br&gt;
📰 &lt;a href="https://albertwalicki.medium.com/"&gt;Medium&lt;/a&gt;&lt;br&gt;
💌 &lt;a href="https://albertwalicki.com/newsletter"&gt;Newsletter&lt;/a&gt;&lt;br&gt;
🦄 &lt;a href="http://frontendunicorn.com/"&gt;Frontend Unicorn book&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The Zen of Python; An In-depth Explanation</title>
      <author>LordGhostX</author>
      <pubDate>Tue, 22 Dec 2020 04:31:42 +0000</pubDate>
      <link>https://dev.to/lordghostx/the-zen-of-python-an-in-depth-explanation-45fm</link>
      <guid>https://dev.to/lordghostx/the-zen-of-python-an-in-depth-explanation-45fm</guid>
      <description>&lt;p&gt;The Zen of Python by Tim Peters are guidelines for how your Python code should be written. Your code doesn’t have to follow these guidelines, but it's good to keep them in mind.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;this&lt;/span&gt;
&lt;span class="s"&gt;"""The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one -- and preferably only one -- obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#beautiful-is-better-than-ugly" class="anchor"&gt;
  &lt;/a&gt;
  Beautiful is better than ugly
&lt;/h2&gt;

&lt;p&gt;I believe this is already self-explanatory but I'll still go over this. It simply says that beautiful code is better than ugly code. Writing a program that once read is easily understood is better than one that'll give the reader some time to figure out. Of course, not every script needs to be beautiful, and beauty is subjective, but much of Python’s popularity is a result of being so easy to work with.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# code 1
&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"lyrics.txt"&lt;/span&gt;
&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"disordered.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"w"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# code 2
&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"lyrics.txt"&lt;/span&gt;
&lt;span class="c1"&gt;# first read the input file
&lt;/span&gt;&lt;span class="n"&gt;lyrics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# split the lyrics into lines and reorder it in reverse form
&lt;/span&gt;&lt;span class="n"&gt;lyrics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lyrics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# reverse each line in the lyrics
&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;lyrics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lyrics&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# merge the new lyrics together
&lt;/span&gt;&lt;span class="n"&gt;lyrics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lyrics&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# save the file
&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"disordered.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"w"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lyrics&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;which of these codes do you prefer and feel is easy to work with?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#explicit-is-better-than-implicit" class="anchor"&gt;
  &lt;/a&gt;
  Explicit is better than implicit
&lt;/h2&gt;

&lt;p&gt;This means that you should avoid hiding your code functionality behind obscure language features that require familiarity to fully understand. Let your code be readable by a stranger who knows nothing about you or your program. Refer back to the code above&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#simple-is-better-than-complex" class="anchor"&gt;
  &lt;/a&gt;
  Simple is better than complex
&lt;/h2&gt;

&lt;p&gt;This tells us that when building anything it can be done using simple techniques. When presented with a simple problem, solve it with a simple solution and when presented with a complex problem, break it into simpler parts, and solve them with simple solutions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#complex-is-better-than-complicated" class="anchor"&gt;
  &lt;/a&gt;
  Complex is better than complicated
&lt;/h2&gt;

&lt;p&gt;Going back to the previous rule, some problems don't have a simple solution to solving them and in such cases, you'll have to use a complex solution. But this is better than using a complicated one. Prefer simplicity to complexity, but know the limits of simplicity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flat-is-better-than-nested" class="anchor"&gt;
  &lt;/a&gt;
  Flat is better than nested
&lt;/h2&gt;

&lt;p&gt;Programmers love to organize things into categories, especially categories that contain subcategories that contain other sub-subcategories. It’s okay to have code in just one top-layer module or class instead of splitting up across multiple submodules or subclasses. If you make packages and modules that require code like &lt;code&gt;import spam.eggs.bacon.ham.foo.bar&lt;/code&gt;, then you’re making your code too complicated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sparse-is-better-than-dense" class="anchor"&gt;
  &lt;/a&gt;
  Sparse is better than dense
&lt;/h2&gt;

&lt;p&gt;This is referring back to the code sample above. A lot of times as programmers we might want to do a lot of functionality with just one line of code. However, spreading code over many lines is better than having one line do all the work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#readability-counts" class="anchor"&gt;
  &lt;/a&gt;
  Readability counts
&lt;/h2&gt;

&lt;p&gt;This means your code should be easily readable, Instead of using single-letter variables or not indenting (however, Python forces this). Use what will be read and easily understood by yourself and other developers. Remember &lt;strong&gt;Code is read more often than it’s written&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#special-cases-arent-special-enough-to-break-the-rules" class="anchor"&gt;
  &lt;/a&gt;
  Special cases aren’t special enough to break the rules
&lt;/h2&gt;

&lt;p&gt;Programming is full of &lt;strong&gt;best practices&lt;/strong&gt; that programmers should strive for in their code. Skirting these practices for a quick hack may be tempting, but can lead to a rat’s nest of inconsistent, unreadable code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#although-practicality-beats-purity" class="anchor"&gt;
  &lt;/a&gt;
  Although practicality beats purity
&lt;/h2&gt;

&lt;p&gt;There may be cases where you might want to make an exception to the rule above. Bending over backward to adhere to rules can result in highly-abstract, unreadable code. Walking the line between these two rules becomes easier with experience. And in time, you’ll not only learn the rules but also learn when to break them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#errors-should-never-pass-silently" class="anchor"&gt;
  &lt;/a&gt;
  Errors should never pass silently
&lt;/h2&gt;

&lt;p&gt;Never let errors that may occur, confuse the reader. You can easily resolve this by printing a string when an error occurs. Just because programmers often ignore error messages doesn’t mean the program should stop emitting them. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unless-explicitly-silenced" class="anchor"&gt;
  &lt;/a&gt;
  Unless explicitly silenced
&lt;/h2&gt;

&lt;p&gt;Regarding the rule above. You can always choose to explicitly ignore the errors your programs cause, just be sure you are making the conscious choice to do so and be clear about it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-the-face-of-ambiguity-refuse-the-temptation-to-guess" class="anchor"&gt;
  &lt;/a&gt;
  In the face of ambiguity, refuse the temptation to guess
&lt;/h2&gt;

&lt;p&gt;If your code isn’t working, there is a reason, and only careful, critical thinking will solve it. Refuse the temptation to blindly try solutions until something seems to work; often you have merely masked the problem rather than solved it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#there-should-be-one-and-preferably-only-one-obvious-way-to-do-it" class="anchor"&gt;
  &lt;/a&gt;
  There should be one -- and preferably only one -- obvious way to do it
&lt;/h2&gt;

&lt;p&gt;It turns out that having three or four different ways to write code that does the same thing is a double-edged sword: you have flexibility in how you write code, but now you have to learn every possible way it could have been written in order to read it. This flexibility isn’t worth the 3x or 4x effort needed to learn a programming language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#although-that-way-may-not-be-obvious-at-first-unless-youre-dutch" class="anchor"&gt;
  &lt;/a&gt;
  Although that way may not be obvious at first unless you’re Dutch
&lt;/h2&gt;

&lt;p&gt;This line is a joke. Guido van Rossum, the creator of Python, is Dutch. Learning or recalling a rule in Python would be easier for him than it would be anybody else, on average.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-is-better-than-never" class="anchor"&gt;
  &lt;/a&gt;
  Now is better than never
&lt;/h2&gt;

&lt;p&gt;This simply tells us that we should not spend too much time planning and pre-optimizing; get something down that does the job and iterate on it. &lt;strong&gt;Don’t procrastinate and Don’t put off the inevitable&lt;/strong&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#although-never-is-often-better-than-right-now" class="anchor"&gt;
  &lt;/a&gt;
  Although never is often better than &lt;em&gt;right&lt;/em&gt; now
&lt;/h2&gt;

&lt;p&gt;This is referring to the previous rule that we should put some thought into what we are doing so you don’t head off down a path that later has no graceful way back up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#if-the-implementation-is-hard-to-explain-its-a-bad-idea" class="anchor"&gt;
  &lt;/a&gt;
  If the implementation is hard to explain, it’s a bad idea
&lt;/h2&gt;

&lt;p&gt;This is telling us that If the implementation is complicated, it is definitely not simple, meaning it is nowhere near a final draft, meaning it’s not good to put out as one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#if-the-implementation-is-easy-to-explain-it-may-be-a-good-idea" class="anchor"&gt;
  &lt;/a&gt;
  If the implementation is easy to explain, it may be a good idea
&lt;/h2&gt;

&lt;p&gt;These two rules remind us that if &lt;strong&gt;high-performance&lt;/strong&gt; code is so complicated as to be impossible for programmers to understand and debug, then it’s bad code. But alas, just because it’s easy to explain a program’s code to someone else doesn’t mean it isn’t bad code. &lt;strong&gt;Programming is hard&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#namespaces-are-one-honking-great-idea-lets-do-more-of-those" class="anchor"&gt;
  &lt;/a&gt;
  Namespaces are one honking great idea — let’s do more of those!
&lt;/h2&gt;

&lt;p&gt;Namespaces (and also global and local scopes) are key for preventing names in one module or scope from conflicting with names in another. But also remember that flat is better than nested: As great as they are, namespaces should be made only to prevent naming conflicts, and not to add needless categorization.&lt;/p&gt;

&lt;p&gt;Like all opinions about programming, the ones written here can be argued against or may simply be irrelevant to your situation. Arguing over how code should be written is rarely as productive as you think it is. (Unless you’re writing an entire book full of programming opinions.)&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>A Friendly Introduction to Cybersecurity</title>
      <author>LordGhostX</author>
      <pubDate>Tue, 22 Dec 2020 04:21:00 +0000</pubDate>
      <link>https://dev.to/lordghostx/a-friendly-introduction-to-cybersecurity-1e3a</link>
      <guid>https://dev.to/lordghostx/a-friendly-introduction-to-cybersecurity-1e3a</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-cybersecurity" class="anchor"&gt;
  &lt;/a&gt;
  What is Cybersecurity?
&lt;/h1&gt;

&lt;p&gt;Cybersecurity is the protection of internet-connected systems such as hardware, software, and data from cyber-threats and attacks. The practice is used by individuals and enterprises to protect against unauthorized access to data centers and other computerized systems.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cyber-threats" class="anchor"&gt;
  &lt;/a&gt;
  Cyber Threats?
&lt;/h1&gt;

&lt;p&gt;This is popularly known as cyber-attacks or hacks, a cyber-threat is an attempt to expose, alter, disable, destroy, steal, or gain unauthorized access to or make unauthorized use of an asset.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o3_uH9mF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606957341096/dm85w2JP5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o3_uH9mF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606957341096/dm85w2JP5.png" alt="133-1338824_transparent-robber-png-cyber-crime-cartoon-png-png.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#forms-of-cyber-attacks" class="anchor"&gt;
  &lt;/a&gt;
  Forms of Cyber Attacks
&lt;/h1&gt;

&lt;p&gt;There are various ways cyber-attacks are carried out depending on the nature of what is being attacked. Some of which include:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phishing-attacks" class="anchor"&gt;
  &lt;/a&gt;
  Phishing Attacks
&lt;/h2&gt;

&lt;p&gt;This form of attack involves an attacker cloning the login page of a website and sharing it with victims in an attempt to steal their login credentials.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#malware-attacks" class="anchor"&gt;
  &lt;/a&gt;
  Malware Attacks
&lt;/h2&gt;

&lt;p&gt;This form of attack involves the creation and distribution of malware. Examples of malware are viruses, trojan horses, network worms, ransomware, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sqlnosql-injection" class="anchor"&gt;
  &lt;/a&gt;
  SQL/NoSQL Injection
&lt;/h2&gt;

&lt;p&gt;This form of attack is targeted at databases. They attempt to steal or clone the database content of a website, or app if the queries constructed from user input are not properly sanitized.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#crosssite-scripting-attacks" class="anchor"&gt;
  &lt;/a&gt;
  Cross-Site Scripting Attacks
&lt;/h2&gt;

&lt;p&gt;This form of attack involves embedding malicious JavaScript code on websites that do not sanitize user input before rendering. They can be used to steal sensitive data from users and send it to an attacker.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dosddos-attacks" class="anchor"&gt;
  &lt;/a&gt;
  DOS/DDOS Attacks
&lt;/h2&gt;

&lt;p&gt;This form of attack seeks to overload a web server by sending more requests than it can handle within a short period of time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bruteforce-attacks" class="anchor"&gt;
  &lt;/a&gt;
  Brute-force Attacks
&lt;/h2&gt;

&lt;p&gt;This form of attack involves a user trying every possible combination of passwords for a user account on a website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#maninthemiddle-attacks-mitm" class="anchor"&gt;
  &lt;/a&gt;
  Man-in-the-middle Attacks (MITM)
&lt;/h2&gt;

&lt;p&gt;This form of attack is common in networks and occurs when an attacker intercepts requests sent outside a network. An example of this is an attacker seeing form data being submitted on websites and even changing their values (the data can include passwords and credit card information).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#zeroday-exploits" class="anchor"&gt;
  &lt;/a&gt;
  Zero-day Exploits
&lt;/h2&gt;

&lt;p&gt;This form of attack is a newly discovered, or developed vulnerability for a system, platform, or application that the creator of the software has not had time to patch or fix.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#social-engineering-attacks" class="anchor"&gt;
  &lt;/a&gt;
  Social Engineering Attacks
&lt;/h2&gt;

&lt;p&gt;This form of attack involves an attacker attempting to get access to a system via the users themselves.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#crosssite-request-forgery-attacks" class="anchor"&gt;
  &lt;/a&gt;
  Cross-Site Request Forgery Attacks
&lt;/h2&gt;

&lt;p&gt;This form of attack allows an attacker to perform actions on websites that a user is authenticated on without their consent or knowledge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#insider-threats" class="anchor"&gt;
  &lt;/a&gt;
  Insider Threats
&lt;/h2&gt;

&lt;p&gt;This form of attack involves attacking a system with inside help. This could be an employee who decides to destroy a system and not an unknown outside attacker.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--66QN-_c6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606959466569/JFlwY9cOq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--66QN-_c6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606959466569/JFlwY9cOq.png" alt="238-2382036_cyber-attack-clipart-hd-png-download.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#effects-of-cyberattacks" class="anchor"&gt;
  &lt;/a&gt;
  Effects of Cyber-attacks
&lt;/h1&gt;

&lt;p&gt;Cyber-attacks cause various damages to businesses, companies, and individuals some of which include but not limited to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Loss of corporate information.&lt;/li&gt;
&lt;li&gt;Loss of money and financial information.&lt;/li&gt;
&lt;li&gt;Disruption of business operations and possible bankruptcy.&lt;/li&gt;
&lt;li&gt;Reputational damage to a company or business.&lt;/li&gt;
&lt;li&gt;Legal consequences of a data breach.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XwLGdvPZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606959549117/118e76aEl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XwLGdvPZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606959549117/118e76aEl.png" alt="G8.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#fields-in-cybersecurity" class="anchor"&gt;
  &lt;/a&gt;
  Fields in Cybersecurity
&lt;/h1&gt;

&lt;p&gt;There are various paths to take in Cybersecurity, all of which have different areas of specialization. Some of the fields include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application Security&lt;/li&gt;
&lt;li&gt;Penetration Testing&lt;/li&gt;
&lt;li&gt;Reverse Engineering&lt;/li&gt;
&lt;li&gt;Digital Forensic Analysis&lt;/li&gt;
&lt;li&gt;Systems Administration&lt;/li&gt;
&lt;li&gt;Malware Analysis&lt;/li&gt;
&lt;li&gt;Cryptography&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WybdUlPg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606959636526/35sKUKaui.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WybdUlPg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606959636526/35sKUKaui.jpeg" alt="cyberattacks.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#categories-of-hackers" class="anchor"&gt;
  &lt;/a&gt;
  Categories of Hackers
&lt;/h1&gt;

&lt;p&gt;There are different categories of hackers, the categories are based upon the end goal of the hacker. Some report, some exploit, others do it for fun. The categories include:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#white-hat-hackers" class="anchor"&gt;
  &lt;/a&gt;
  White Hat Hackers
&lt;/h2&gt;

&lt;p&gt;This set of hackers break into a system, then report vulnerabilities found in the system and work with the development team to fix the flaws found.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#black-hat-hackers" class="anchor"&gt;
  &lt;/a&gt;
  Black Hat Hackers
&lt;/h2&gt;

&lt;p&gt;This set of hackers break into a system, then exploit it for their own personal gain or to destroy a company, or business. These are the set of people referred to as cybercriminals.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#grey-hat-hackers" class="anchor"&gt;
  &lt;/a&gt;
  Grey Hat Hackers
&lt;/h2&gt;

&lt;p&gt;These set of hackers are the hobbyists and people who practice hacking for the fun of it. They break into systems and either report or exploit or even do nothing about it. They have no definite aim, just on the fence between good and bad.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hacktivists" class="anchor"&gt;
  &lt;/a&gt;
  Hacktivists
&lt;/h2&gt;

&lt;p&gt;This set of hackers target corporate and governmental platforms intending to take down their systems, expose information, or just making their voices heard.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-reds-vs-the-blues" class="anchor"&gt;
  &lt;/a&gt;
  The Reds vs The Blues
&lt;/h1&gt;

&lt;p&gt;Red teams are offensive security professionals who are experts in attacking systems and breaking into defenses while Blue teams are defensive security professionals responsible for maintaining internal network defenses against all cyber-attacks and threats.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VPV-Phsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606964075578/kYTOyVQlr.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VPV-Phsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606964075578/kYTOyVQlr.jpeg" alt="red-blue.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#a-little-bit-about-penetration-testing" class="anchor"&gt;
  &lt;/a&gt;
  A little bit about Penetration Testing
&lt;/h1&gt;

&lt;p&gt;Penetration testing also called pen testing or ethical hacking is the practice of testing a computer system, network, or web application to find security vulnerabilities that an attacker could exploit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AuZZRI30--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606964306670/XoUeeWbDQ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AuZZRI30--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606964306670/XoUeeWbDQ.jpeg" alt="Penetration-Testing_Pen-Testing-Model.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#penetration-testing-stages" class="anchor"&gt;
  &lt;/a&gt;
  Penetration Testing Stages
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lEP1ZE3u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606964364507/mNWBLwAtT.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lEP1ZE3u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606964364507/mNWBLwAtT.jpeg" alt="pen-testing.jpg"&gt;&lt;/a&gt;&lt;br&gt;
Penetration testing steps gotten from &lt;a href="https://www.imperva.com/learn/application-security/penetration-testing"&gt;imperva.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-planning-and-reconnaissance" class="anchor"&gt;
  &lt;/a&gt;
  1. Planning and reconnaissance
&lt;/h2&gt;

&lt;p&gt;The first stage involves:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Defining the scope and goals of a test, including the systems to be addressed and the testing methods to be used.&lt;/li&gt;
&lt;li&gt;Gathering intelligence (e.g network and domain names, mail server) to better understand how a target works and its potential vulnerabilities.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-scanning" class="anchor"&gt;
  &lt;/a&gt;
  2. Scanning
&lt;/h2&gt;

&lt;p&gt;The next step is to understand how the target application will respond to various intrusion attempts. This is typically done using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Static analysis&lt;/strong&gt; - Inspecting an application’s code to estimate the way it behaves while running. These tools can scan the entirety of the code in a single pass.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Dynamic analysis&lt;/strong&gt; - Inspecting an application’s code in a running state. This is a more practical way of scanning, as it provides a real-time view of an application’s performance.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-gaining-access" class="anchor"&gt;
  &lt;/a&gt;
  3. Gaining Access
&lt;/h2&gt;

&lt;p&gt;This stage uses web application attacks, such as cross-site scripting, SQL injection, and backdoors, to uncover a target’s vulnerabilities. Testers then try and exploit these vulnerabilities, typically by escalating privileges, stealing data, intercepting traffic, etc., to understand the damage they can cause.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-maintaining-access" class="anchor"&gt;
  &lt;/a&gt;
  4. Maintaining Access
&lt;/h2&gt;

&lt;p&gt;The goal of this stage is to see if the vulnerability can be used to achieve a persistent presence in the exploited system long enough for a bad actor to gain in-depth access. The idea is to imitate advanced persistent threats, which often remain in a system for months to steal an organization’s most sensitive data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-analysis" class="anchor"&gt;
  &lt;/a&gt;
  5. Analysis
&lt;/h2&gt;

&lt;p&gt;The results of the penetration test are then compiled into a report detailing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Specific vulnerabilities that were exploited.&lt;/li&gt;
&lt;li&gt;Sensitive data that was accessed.&lt;/li&gt;
&lt;li&gt;The amount of time the pentester was able to remain in the system undetected.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Chvbhjf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606964567222/j7ULYZMM_.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Chvbhjf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606964567222/j7ULYZMM_.jpeg" alt="stages.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cybersecurity-roadmap" class="anchor"&gt;
  &lt;/a&gt;
  Cybersecurity Roadmap
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Learn Linux (Parrot OS or Kali).&lt;/li&gt;
&lt;li&gt;Familiarising yourself with pen-testing tools on your distro.&lt;/li&gt;
&lt;li&gt;Joining cybersecurity communities.&lt;/li&gt;
&lt;li&gt;Following cybersecurity researchers on Twitter.&lt;/li&gt;
&lt;li&gt;Playing CTF.&lt;/li&gt;
&lt;li&gt;Getting Certifications.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#common-cybersecurity-certifications" class="anchor"&gt;
  &lt;/a&gt;
  Common Cybersecurity Certifications
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Certified Ethical Hacker (CEH)&lt;/li&gt;
&lt;li&gt;CompTIA Security+&lt;/li&gt;
&lt;li&gt;Certified Information System Security Professional (CISSP)&lt;/li&gt;
&lt;li&gt;Certified Information Security Manager (CISM)&lt;/li&gt;
&lt;li&gt;Certified Information Systems Auditor (CISA)&lt;/li&gt;
&lt;li&gt;NIST Cybersecurity Framework (NCSF)&lt;/li&gt;
&lt;li&gt;Certified Cloud Security Professional (CCSP)&lt;/li&gt;
&lt;li&gt;Computer Hacking Forensic Investigator (CHFI)&lt;/li&gt;
&lt;li&gt;Cisco Certified Network Associate (CCNA) Security&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-learn-cybersecurity" class="anchor"&gt;
  &lt;/a&gt;
  Why learn Cybersecurity?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;High paying salary up to $90k annually.&lt;/li&gt;
&lt;li&gt;You're learning and building a skill that only a small percentage of people have.&lt;/li&gt;
&lt;li&gt;High demand for cybersecurity experts.&lt;/li&gt;
&lt;li&gt;Cybersecurity is an evergreen industry where its personnel is needed in every single company operating in the digital space.&lt;/li&gt;
&lt;li&gt;Unlimited career growth options.&lt;/li&gt;
&lt;li&gt;Opportunities to work with high profile agencies.&lt;/li&gt;
&lt;li&gt;It's filled with a lot of fun and interesting moments.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tWsJs7n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607003364576/GV7BoC3V4.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tWsJs7n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607003364576/GV7BoC3V4.jpeg" alt="pepe.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this article, we walked through what Cybersecurity is, saw forms of Cyber Threats and the effects they have on a business, company, or individual. We also explored fields in Cybersecurity, went over different categories of hackers, and learned about Red and Blue Teams. We took a deep dive into penetration testing and explored processes in it then saw a Cybersecurity roadmap, looked at a couple of Cybersecurity certifications, and why people should have Cybersecurity skills.&lt;/p&gt;

&lt;p&gt;I also plan to start a series that goes in-depth into explaining forms of cyber-attacks, how they are carried out, and show how to protect your application from them. Subscribe so you don't miss out on this. If you have any questions, don't hesitate to hit me up on Twitter: &lt;a href="https://twitter.com/LordGhostX"&gt;@LordGhostX&lt;/a&gt;&lt;/p&gt;

</description>
      <category>security</category>
      <category>cybersecurity</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
