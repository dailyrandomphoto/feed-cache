<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Medium like Blog Post Builder in React using typescript</title>
      <author>Selva kumar</author>
      <pubDate>Sat, 10 Apr 2021 07:23:16 +0000</pubDate>
      <link>https://dev.to/selvaece25/medium-like-blog-post-builder-in-react-using-typescript-1g78</link>
      <guid>https://dev.to/selvaece25/medium-like-blog-post-builder-in-react-using-typescript-1g78</guid>
      <description>&lt;p&gt;This blog post is about will give you complete knowledge about how to start with react Graphql using typescript and the separation of concern and clean architecture folder structure.&lt;/p&gt;

&lt;p&gt;Keep in mind that if you get stuck on any step, refer to the &lt;a href="https://github.com/selvaece25/Medium-like-Blog-Post-Builder-in-React-using-typescript"&gt;Github repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To find the completed project, &lt;a href="https://citye.csb.app/#/"&gt;Demo link&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-is-what-we-are-going-to-create"&gt;
  &lt;/a&gt;
  This is what we are going to create:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oTXreK3A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knfgr3by8bvsriv226u1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oTXreK3A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knfgr3by8bvsriv226u1.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-graphql"&gt;
  &lt;/a&gt;
  What is GraphQL?
&lt;/h3&gt;

&lt;p&gt;Before going forward, let me give a very brief overview of GraphQL and what all things we are going to discuss. So GraphQL is a query language for APIs that is developed by Facebook. It is an efficient alternative to REST because of its features such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;With GraphQL there's no over fetching or under fetching of data, unlike REST.&lt;/li&gt;
&lt;li&gt;Strongly typed graphQL schema which can be written in GraphQL Schema Definition Language (SDL) helps you validate your API requests during its compile time.&lt;/li&gt;
&lt;li&gt;With the development of various GraphQL libraries (Apollo, Relay, etc) you are getting a lot of features such as caching, realtime data, etc.&lt;/li&gt;
&lt;li&gt;It provides a large and amazing community! You can always get your queries answered whenever stuck.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This was just a basic introduction to GraphQL, but I recommend you to visit the site to gain deeper insights of the same.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-well-do"&gt;
  &lt;/a&gt;
  What we'll do?
&lt;/h4&gt;

&lt;p&gt;I will be mainly focussing on the front-end side, where I am gonna explain the two very useful react hooks &lt;strong&gt;useQuery&lt;/strong&gt; and &lt;strong&gt;useMutation&lt;/strong&gt;, how are we using these in our project for GraphQL operations along with the code.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#waitwhat-are-graphql-operations"&gt;
  &lt;/a&gt;
  Wait...what are GraphQL operations?
&lt;/h4&gt;

&lt;p&gt;GraphQL provides various types of operations such as Query, Mutation, and Subscription which act as the entry points for the requests sent by the client. In this blog, I'll be discussing the first two types i.e. Query and Mutation.&lt;/p&gt;

&lt;p&gt;I'm going to use &lt;a href="https://www.npmjs.com/package/graphql-hooks"&gt;graphql-hooks&lt;/a&gt; have two operations useQuery, useMutation&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#usequery-basic-syntax"&gt;
  &lt;/a&gt;
  UseQuery: Basic syntax:
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Type1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Type2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;QUERY_STRING&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="na"&gt;onCompleted&lt;/span&gt;&lt;span class="p"&gt;:()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;query successful&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);}&lt;/span&gt;
&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="na"&gt;onError&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;data : The required data we are getting after the query is successful.&lt;br&gt;
loading : It is a boolean value, if true, it means the query is still in flight. After it is successful the value of loading changes to false.&lt;br&gt;
error : It stores the error if occurred while querying.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#usemutation-basic-syntax"&gt;
  &lt;/a&gt;
  useMutation: Basic syntax:
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;mutateFunction&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useMutation&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MUTATION_STRING&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;onCompleted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;details updated&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;onError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;onError&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;refetchQueries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;QUERY_STRING&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;mutateFunction : It is the mutate function which can be called anytime to run the mutation.&lt;br&gt;
The second parameter is the object representing the mutation's execution status such as error , loading which have been explained above.&lt;/p&gt;

&lt;p&gt;To use those operation in App need to wrap your app with the provider:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GraphQLClient&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ClientContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;graphql-hooks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GraphQLClient&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/graphql&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ClientContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* children */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ClientContext.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in your child components you can make use of useQuery&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;graphql-hooks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HOMEPAGE_QUERY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`query HomePage($limit: Int) {
  users(limit: $limit) {
    id
    name
  }
}`&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HOMEPAGE_QUERY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Loading...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Something Bad Happened&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;))}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ul&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;More details and options you can refer &lt;a href="https://www.npmjs.com/package/graphql-hooks"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#our-projects-structure"&gt;
  &lt;/a&gt;
  Our project's structure:
&lt;/h3&gt;

&lt;p&gt;Before we begin let's talk about how our project is going to be organized.&lt;/p&gt;

&lt;p&gt;Once we create our React app using create-react-app, we will have our base React app. Once inside that application, we will create a component pattern and Our folder structure will look like the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yfwAVfiZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4f6cg3y00sui3bo6aqqg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yfwAVfiZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4f6cg3y00sui3bo6aqqg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let’s go over the folders one by one and the and understand the motivation behind them and the type of files you would store in them:&lt;/p&gt;

&lt;p&gt;src/ - Contains all of our react codebase.&lt;br&gt;
    graphql - queries: This folder contains all static graphql query with props settings&lt;br&gt;
    pages - The name is pretty self-explanatory. It contains all the Stateful Components as discussed above.&lt;br&gt;
    views - This folder contains all the Presentational/Stateless Components as discussed above.&lt;br&gt;
    routes - This folder contains public, private, session differentiation and mainly for App navigation &lt;br&gt;
    start - Base react component.&lt;br&gt;
    types - Typescript related files or functions.&lt;br&gt;
    utils - Helper functions&lt;br&gt;
    use -  custom hooks&lt;br&gt;
    templates - I create a different template for React with React Router 4 like global, error handling, promotions like so on.&lt;/p&gt;

&lt;p&gt;Hopefully you understood how to setup a clean, efficient and maintainable folder structure for your React Apps.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#our-goal-today-is-to"&gt;
  &lt;/a&gt;
  Our goal today is to:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Create a new React Blogger App&lt;/li&gt;
&lt;li&gt;Have &lt;a href="https://graphqlzero.almansi.me/api"&gt;Graphqlzero almansi Api&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Using React Routing, be able to navigate our app&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;
  &lt;a href="#generate-project-with-createreactapp"&gt;
  &lt;/a&gt;
  Generate project with CreateReactApp:
&lt;/h4&gt;

&lt;p&gt;I often (to not say always 😁) use Create React App to initiate my React projects.&lt;/p&gt;

&lt;p&gt;In order to generate our project run :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="nx"&gt;typescript&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;let's start coding. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#setting-up-react-router"&gt;
  &lt;/a&gt;
  Setting up React Router:
&lt;/h4&gt;

&lt;p&gt;To get React Router going, we are going to need to install our dependency. In the project, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt; &lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dom&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It define the route and call the Auth.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/start/Routes.tsx&lt;/span&gt;

&lt;span class="nx"&gt;routesTemplates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;routesTemplate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;appRoutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Template&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;routesTemplate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;appRoutes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;appRoute&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;
        &lt;span class="nx"&gt;exact&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;appRoute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exact&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;appRoute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;appRoute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Auth&lt;/span&gt;
            &lt;span class="nx"&gt;appRoute&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;appRoute&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;Template&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#route-types"&gt;
  &lt;/a&gt;
  Route Types
&lt;/h4&gt;

&lt;p&gt;There are three route types defined in the project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/routes/routeTypes.tsx&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;enum&lt;/span&gt; &lt;span class="nx"&gt;routeTypes&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;private&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;session&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;private: private pages like profile, edit-profile, etc. If the user isn’t logged then must to show the login page.&lt;br&gt;
public: public pages like about-us, contact, etc.&lt;br&gt;
session: session pages like login and sign-up. If the user is logged then must to redirect to the private dashboard.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#routes-template"&gt;
  &lt;/a&gt;
  Routes Template
&lt;/h4&gt;

&lt;p&gt;In this file you can define the routes, the template and the rights (public, private, session).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/routes/index.tsx&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;routesTemplate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IRouteTemplate&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;privateRoutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;GlobalLayout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;routeTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;private&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#auth"&gt;
  &lt;/a&gt;
  Auth
&lt;/h4&gt;

&lt;p&gt;Verify the rights and redirection.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/start/Auth.tsx&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isPrivate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;logged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;GlobalLayout&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Error403&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;logged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Redirect&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;appRoute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;appRoute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Layout&lt;/span&gt;
  &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;appRoute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#building-our-react-components"&gt;
  &lt;/a&gt;
  Building our React components
&lt;/h3&gt;

&lt;p&gt;In this application, we are going to have fives pages for templates:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All Posts List with Author Details&lt;/li&gt;
&lt;li&gt;All Author List with Posts listing&lt;/li&gt;
&lt;li&gt;Post details &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--US93rjCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oisxl9vkx1ruyevrsbrw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--US93rjCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oisxl9vkx1ruyevrsbrw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#putting-it-all-together"&gt;
  &lt;/a&gt;
  Putting it all together
&lt;/h4&gt;

&lt;p&gt;Now that we have our components set up, we can head on over to “localhost:3000” and see all pages get render.&lt;/p&gt;

&lt;p&gt;Feel free to ask questions in any area you don't understand.&lt;/p&gt;

&lt;p&gt;To be continued on next article about Graphql implementation...&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>graphql</category>
      <category>hooks</category>
      <category>react</category>
    </item>
    <item>
      <title>C Programming Cheat Sheet - 5</title>
      <author>Codely</author>
      <pubDate>Sat, 10 Apr 2021 05:29:48 +0000</pubDate>
      <link>https://dev.to/codelyf/c-programming-cheat-sheet-5-3ico</link>
      <guid>https://dev.to/codelyf/c-programming-cheat-sheet-5-3ico</guid>
      <description>&lt;p&gt;Here is the C Programming Cheat - 5&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-arrays"&gt;
  &lt;/a&gt;
  5. Arrays
&lt;/h3&gt;

&lt;p&gt;Arrays are structures that hold multiple variables of the same data type. The first element in the array is numbered 0, so the last element is 1 less than the size of the array. An array is also known as a sub scripted variable. Before using an array its type and dimension must be declared.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#51-array-declaration"&gt;
  &lt;/a&gt;
  5.1 Array Declaration
&lt;/h4&gt;

&lt;p&gt;Like other variables an array needs to be declared so that the compiler will know what kind of an array and how large an array we want.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;int marks[30] ;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, &lt;code&gt;int&lt;/code&gt; specifies the type of the variable, just as it does with ordinary variables and the word &lt;code&gt;marks&lt;/code&gt; specifies the name of the variable. The &lt;code&gt;[30]&lt;/code&gt; however is new. The number 30 tells how many elements of the type int will be in our array. This number is often called the "dimension" of the array. The bracket &lt;code&gt;( [ ] )&lt;/code&gt; tells the compiler that we are dealing with an array.&lt;/p&gt;

&lt;p&gt;Let us now see how to initialize an array while declaring it. Following are a few examples that demonstrate this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;int num[6] = { 2, 4, 12, 5, 45, 5 } ; 
int n[] = { 2, 4, 12, 5, 45, 5 } ; 
float press[] = { 12.3, 34.2 -23.4, -11.3 } ;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#52-accessing-elements-of-an-array"&gt;
  &lt;/a&gt;
  5.2 Accessing Elements of an Array
&lt;/h4&gt;

&lt;p&gt;Once an array is declared, let us see how individual elements in the array can be referred. This is done with subscript, the number in the brackets following the array name. This number specifies the element’s position in the array. All the array elements are numbered, starting with 0. Thus, marks [2] is not the second element of the array, but the third.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;int valueOfThirdElement = marks[2];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#53-entering-data-into-an-array"&gt;
  &lt;/a&gt;
  5.3 Entering Data into an Array
&lt;/h4&gt;

&lt;p&gt;Here is the section of code that places data into an array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for(i = 0;i &amp;lt;= 29;i++) 
{ 
    printf("\nEnter marks "); 
    scanf("%d", &amp;amp;marks[i]); 
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;for&lt;/code&gt; loop causes the process of asking for and receiving a student’s marks from the user to be repeated 30 times. The first time through the loop, &lt;code&gt;i&lt;/code&gt; has a value 0, so the &lt;code&gt;scanf()&lt;/code&gt; function will cause the value typed to be stored in the array element &lt;code&gt;marks[0]&lt;/code&gt;, the first element of the array. This process will be repeated until &lt;code&gt;i&lt;/code&gt; becomes 29. This is last time through the loop, which is a good thing, because there is no array element like &lt;code&gt;marks[30]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;scanf()&lt;/code&gt; function, we have used the &lt;em&gt;"address of"&lt;/em&gt; operator (&amp;amp;) on the element &lt;code&gt;marks[i&lt;/code&gt;] of the array. In so doing, we are passing the address of this particular array element to the &lt;code&gt;scanf()&lt;/code&gt; function, rather than its value; which is what &lt;code&gt;scanf()&lt;/code&gt; requires.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#54-reading-data-from-an-array"&gt;
  &lt;/a&gt;
  5.4 Reading Data from an Array
&lt;/h4&gt;

&lt;p&gt;The balance of the program reads the data back out of the array and uses it to calculate the average. The for loop is much the same, but now the body of the loop causes each student’s marks to be added to a running total stored in a variable called sum. When all the marks have been added up, the result is divided by 30, the number of students, to get the average.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for ( i = 0 ; i &amp;lt;= 29 ; i++ )
    sum = sum + marks[i] ; 
avg = sum / 30 ; 
printf ( "\nAverage marks = %d", avg ) ;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#55-example"&gt;
  &lt;/a&gt;
  5.5 Example
&lt;/h4&gt;

&lt;p&gt;Let us try to write a program to find average marks obtained by a&lt;br&gt;
class of 30 students in a test.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;  
main() 
{ 
    int avg, i, sum=0; 
    int marks[30] ; /*array declaration */ 
    for ( i = 0 ; i &amp;lt;= 29 ; i++ ) 
    { 
        printf ( "\nEnter marks " ) ; 
        scanf ( "%d", &amp;amp;marks[i] ) ; /* store data in array */ 
    } 
    for ( i = 0 ; i &amp;lt;= 29 ; i++ ) 
        sum = sum + marks[i] ; /* read data from an array*/ 
    avg = sum / 30 ; 
    printf ( "\nAverage marks = %d", avg ) ; 
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure to Follow me here, to get the update when i post a blog.&lt;/p&gt;

</description>
      <category>c</category>
    </item>
    <item>
      <title>Your Home WiFi - LAN, WAN Or PAN?
</title>
      <author>Konchada Sai Ansul</author>
      <pubDate>Sat, 10 Apr 2021 05:18:07 +0000</pubDate>
      <link>https://dev.to/saiansulsblog/your-home-wifi-lan-wan-or-pan-25ik</link>
      <guid>https://dev.to/saiansulsblog/your-home-wifi-lan-wan-or-pan-25ik</guid>
      <description>&lt;p&gt;Nowadays we use WiFi on a daily basis. We use it for online classes, gaming, surfing on the internet, chatting with our friends, etc. But have you ever wondered about the type of network our home WiFi operates on? In this article, I'm going to explore the various types of network and finally deduct the answer to this question.&lt;/p&gt;

&lt;p&gt;As discussed, let's have a brief introduction on Computer Networks: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--16B6a0hg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612029141483/yY_dH0lEV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--16B6a0hg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612029141483/yY_dH0lEV.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-computer-network"&gt;
  &lt;/a&gt;
  What is Computer Network?
&lt;/h2&gt;

&lt;p&gt;A Computer Network is a combination of networks of the devices linked wirelessly to send or receive the common communication protocols.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G4x1ipdv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612069578398/8SpzLPHTa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G4x1ipdv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612069578398/8SpzLPHTa.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple enough? Now, let's look into the types of networks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-networks"&gt;
  &lt;/a&gt;
  Types of Networks
&lt;/h2&gt;

&lt;p&gt;There are essentially &lt;em&gt;5 types&lt;/em&gt; of Computer Network:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-local-area-network-lan"&gt;
  &lt;/a&gt;
  1. Local Area Network (LAN)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7qTUnCMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612029578157/dfrkSdD6_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7qTUnCMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612029578157/dfrkSdD6_.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Local Area Network(LAN) is a network which is confined to a limited area to share resources. The devices connected to a server called node which is also known as workstation. Typically, the range of LAN varies from 10 Mbps to 1 Gbps .  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Local Area Network(LAN):&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Sharing of resources such as the internet&lt;/li&gt;
&lt;li&gt;Communication is easy, quick and saves time &lt;/li&gt;
&lt;li&gt;Data is secure when saved on servers&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages of Local Area Network(LAN):&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Building LAN is expensive&lt;/li&gt;
&lt;li&gt;If servers are hit, the data will be leaked and may be corrupted &lt;/li&gt;
&lt;li&gt;Area limitation of 1km to 10kms &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Applications:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;LAN is one of the most commonly used networks. LAN is used in schools, laboratories, home, offices etc. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-wide-area-network-wan"&gt;
  &lt;/a&gt;
  2. Wide Area Network (WAN)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HsQ2z6Bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612029365340/tyNP6k3Uj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HsQ2z6Bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612029365340/tyNP6k3Uj.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wide Area Network(WAN) is a group of LAN devices which covers a large area for the main purpose of computer networking. The rate of transmission in WAN is about 150 mbps. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Wide Area Network(WAN):&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Decrease in costs, increase in profits &lt;/li&gt;
&lt;li&gt;Improved privacy than LAN&lt;/li&gt;
&lt;li&gt;Easy Maintenance of IT infrastructures &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages of Wide Area Network(WAN):&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;High setup value to established &lt;/li&gt;
&lt;li&gt;Maintaining WAN is costly&lt;/li&gt;
&lt;li&gt;WAN has some security issues &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Applications:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;WANs are typically used for communication between cities, states and sometimes even countries.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-metropolitian-area-network-man"&gt;
  &lt;/a&gt;
  3. Metropolitian Area Network (MAN)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tmbqdukM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612029510811/ltxpejK0T.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tmbqdukM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612029510811/ltxpejK0T.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Metropolitan Area Network (MAN) has the characteristics of both LAN &amp;amp; WAN. MAN covers a area of city and shares the resources. Its capacity is much more higher than LAN&amp;amp;WAN.  Its range is from 1 Mbps to 10 Mbps .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Metropolitan Area Network (MAN):&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Higher speed than WAN &amp;amp; has lesser security risks than LAN and also PAN&lt;/li&gt;
&lt;li&gt;Sending local mails are faster and secure&lt;/li&gt;
&lt;li&gt;It's a faster way to connects 2 LANs&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages of Metropolitan Area Network (MAN):&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Supplementary wires are required to connect 2 LANs&lt;/li&gt;
&lt;li&gt;Technical issues with hackers threat&lt;/li&gt;
&lt;li&gt;MAN can't work on phones with copper coiled wires, so it gives a very low speed, if high speed is required so there is a need to be installed optic fibers which is expensive &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Applications:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Metropolitan Area Network (MAN) is used in office buildings, university buildings .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4personal-area-network-pan"&gt;
  &lt;/a&gt;
  4.Personal Area Network (PAN)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8-u3QtKq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612029221164/WfTmkiihY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8-u3QtKq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612029221164/WfTmkiihY.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Personal Area Network (PAN) is just for a small area for a personal use. This can be wired or wireless, like Bluetooth &amp;amp; Infrared connections. The range is around 1Mbps to 3Mbps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Personal Area Network (PAN):&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Connects many devices at a time&lt;/li&gt;
&lt;li&gt;Additional cable or wire is not required &lt;/li&gt;
&lt;li&gt;The cost to install is affordable &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages of Personal Area Network (PAN):&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Data transfer speed is slow &lt;/li&gt;
&lt;li&gt;Restricted to a small area&lt;/li&gt;
&lt;li&gt;The infrared connections only travels in a straight line &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Applications:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Personal Area Network (PAN) is used in home devices &amp;amp; supermarket — like printers, mouse, barcode scanners, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-campus-area-network-can"&gt;
  &lt;/a&gt;
  5. Campus Area Network (CAN)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P8eo-cRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612028123272/Rfw7ba-4Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P8eo-cRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612028123272/Rfw7ba-4Q.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Campus Area Network (CAN) connects two or more local area networks within a confined area. As the name suggests its restricted to a area about which covers a whole campus. The commonly used devices are switches, routers and the communication medium are like copper plant, Cat5 network cable &amp;amp; optical-fiber cables &amp;amp; many more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Campus Area Network (CAN):&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The ISP is same all across the departments &lt;/li&gt;
&lt;li&gt;Transfer rate is fastest &amp;amp; easy than all other types of network&lt;/li&gt;
&lt;li&gt;Best in terms of economy &amp;amp; it's wireless too&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages of Campus Area Network (CAN):&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Troubleshooting and maintenance is expensive&lt;/li&gt;
&lt;li&gt;Connection of nodes is limited i.e. 64 nodes in distance of 40m because of electrical load &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Applications:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Campus Area Network (CAN) is used in campus including conference centers, technology centers, and training institutes, etc.&lt;/p&gt;

&lt;p&gt;So, do you know the answer to my question? Take a moment and choose your answer.&lt;/p&gt;

&lt;p&gt;Alright, the answer is LAN also known as WLAN(Wireless Local Area Network). The reason is, as it is used at home with combination of routers and AP(Access Point) to access the internet. Routers are devices which serve 2 main functions: &lt;br&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create and maintain a local area network 
&lt;/li&gt;
&lt;li&gt;Manage the data entering and leaving the network. 
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XECNWeTX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612029811505/hKvrL-EFm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XECNWeTX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612029811505/hKvrL-EFm.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you all got to learn something new today. If you liked this blog and want to support my efforts, do share it with as many friends as possible. And feel free to drop in suggestions for improvements.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Accepting all invites on LinkedIn</title>
      <author>Chris Bongers</author>
      <pubDate>Sat, 10 Apr 2021 04:43:05 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/accepting-all-invites-on-linkedin-n4p</link>
      <guid>https://dev.to/dailydevtips1/accepting-all-invites-on-linkedin-n4p</guid>
      <description>&lt;p&gt;Suppose you're anything like me and get many invites after posting your LinkedIn handle on Twitter. In that case, you might be wondering if there's not a simple way to accept all of them at once.&lt;/p&gt;

&lt;p&gt;LinkedIn used to have the option itself, but for whatever reason, it no longer does.&lt;/p&gt;

&lt;p&gt;Luckily we as developers can leverage the power of JavaScript!&lt;/p&gt;

&lt;p&gt;TL;DR:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Open invite page on LinkedIn and paste this in your debug console&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buttons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button.artdeco-button--secondary&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-accept-all-invites-on-linkedin-at-once"&gt;
  &lt;/a&gt;
  How to accept all invites on LinkedIn at once
&lt;/h2&gt;

&lt;p&gt;First, we need to go to the LinkedIn website and see there are multiple open invites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CxzCMZ5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617687027675/chZI43pls.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CxzCMZ5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617687027675/chZI43pls.png" alt="LinkedIn multiple invites"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next step is to find out what makes an invite button unique, so we will be using the inspector to find this out.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mac: &lt;code&gt;Cmd&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;C&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Windows: &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;C&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Rim6Kn6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617687299054/mkHXNEBSM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Rim6Kn6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617687299054/mkHXNEBSM.png" alt="LinkedIn invitation buttons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here you can see both buttons, the top one being the button to decline an invitation and the bottom one to accept.&lt;/p&gt;

&lt;p&gt;The top one has a unique class of &lt;code&gt;button.artdeco-button--tertiary&lt;/code&gt;.&lt;br&gt;
The bottom one &lt;code&gt;button.artdeco-button--secondary&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With those two selectors, we can either accept or decline all invites at once!&lt;/p&gt;

&lt;p&gt;Let's write a selector to get all the accept buttons.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buttons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button.artdeco-button--secondary&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can simply loop over the results and click them.&lt;br&gt;
Making the full function we need to execute in our console tab:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buttons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button.artdeco-button--secondary&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it, a super simple way to accept all invites on LinkedIn at once!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--omt8UdPt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617687547247/rHd5IPOAu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--omt8UdPt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617687547247/rHd5IPOAu.png" alt="LinkedIn console click all invites"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to &lt;a href="https://www.linkedin.com/in/chrisbongers/"&gt;add me on LinkedIn&lt;/a&gt; as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
    </item>
    <item>
      <title>How to secure your website against Cookies theft and Cross Site Scripting</title>
      <author>Rahul Nayak</author>
      <pubDate>Sat, 10 Apr 2021 03:56:28 +0000</pubDate>
      <link>https://dev.to/pragyes31/how-to-secure-your-website-against-cookies-theft-and-cross-site-scripting-1644</link>
      <guid>https://dev.to/pragyes31/how-to-secure-your-website-against-cookies-theft-and-cross-site-scripting-1644</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;30% of web applications are vulnerable to XSS.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.acunetix.com/white-papers/acunetix-web-application-vulnerability-report-2019/"&gt;Acunetix vulnerability report 2019&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our dependency on the Internet has increased multifold over the last decade. Today we use internet for anything and everything from buying products off the e-commerce platforms to transferring money across boundaries and much more. &lt;/p&gt;

&lt;p&gt;Needless to say, as Developers, it becomes important to save customers from online frauds. One security breach incident can impact your website's brand and reputation.&lt;/p&gt;

&lt;p&gt;In this article, we will learn about Cookies theft and Cross Site Scripting(XSS). Post that, we will learn how to secure our websites and user data against these attacks.&lt;/p&gt;

&lt;p&gt;Now, before we find ways to prevent cookies theft, let's understand what Cookies are and how they are used.  &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-are-cookies"&gt;
  &lt;/a&gt;
  What are Cookies?
&lt;/h2&gt;

&lt;p&gt;Cookies are a small piece of data that your computer stores when you visit a website. It is used to store your interactions with the website that you are on. Some of the primary uses are listed below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tracking your browsing history to serve targeted ads.&lt;/li&gt;
&lt;li&gt;Persistent login credentials&lt;/li&gt;
&lt;li&gt;Persistent shopping cart items in e-commerce sites&lt;/li&gt;
&lt;li&gt;Track unique visits on websites&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By now you must have got an idea about the gravity of the situation in case someone steals them. At the same time, you must be thinking why to save the my personal data in cookies at all if it is prone to thefts?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-cookies"&gt;
  &lt;/a&gt;
  Why use Cookies?
&lt;/h2&gt;

&lt;p&gt;Let's say you visit orderPizza.com to order a Pizza. The site asks you to login to your account and stores the login credentials in the cookies. &lt;/p&gt;

&lt;p&gt;When you navigate to another page on the website, for example, orderPizza.com/pineapple, the website will check the cookies to see if the user login information is stored in the computer. &lt;br&gt;
If it is, you will not have to re-authenticate yourself when you navigate to different parts of the website. Pretty convenient, right!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-cookies-theft"&gt;
  &lt;/a&gt;
  What is Cookies theft?
&lt;/h2&gt;

&lt;p&gt;As the name suggests, cookies theft is when a hacker gets hold of your personal cookies. &lt;/p&gt;

&lt;p&gt;In our example, you stored your login information for orderPizza.com website. &lt;br&gt;
Once they steal the cookies, they can load it in their browser and impersonate you. &lt;/p&gt;

&lt;p&gt;They can then login to orderPizza.com as you, use your credit card details to order as many pizza as they like to their address. &lt;/p&gt;

&lt;p&gt;While this example may look harmless, imagine if it was not orderPizza.com but your internet banking site! &lt;/p&gt;

&lt;p&gt;Cross Site scripting(XSS) is one of the most common way to steal cookies of your computer and yes, we are going to talk about it next.&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#how-cross-site-scriptingxss-is-used-to-steal-cookies"&gt;
  &lt;/a&gt;
  How Cross Site scripting(XSS) is used to steal cookies
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Cross site scripting(XSS)&lt;/strong&gt; is a web security vulnerability which allows the hackers to execute malicious code inside user's browser. &lt;/p&gt;

&lt;p&gt;It bypasses the "same origin policy" by injecting the code into the server through &lt;strong&gt;user input fields&lt;/strong&gt;. Once the code is in the server and requested by the user, the browser is tricked into assuming that this malicious code is coming from the trusted web server of orderPizza.com when in reality, it is not.&lt;/p&gt;

&lt;p&gt;According to The Open Web Application Security Project® (&lt;a href="https://owasp.org/"&gt;OWASP&lt;/a&gt;) which is a non profit organization dedicated to web application security, XSS  is among the top 10 critical attacks on the internet. &lt;/p&gt;

&lt;p&gt;Let's see XSS in action to understand it better.&lt;/p&gt;

&lt;p&gt;Say you can add reviews for each type of Pizza on orderPizza.com website. Here's how the attack will unfold:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The attacker will slide a malicious code through the 'add reviews' input text field which would look something like this.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Pizza is &amp;lt;script&amp;gt;alert("you are hacked!")&amp;lt;/script&amp;gt; delicious
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;The server assuming that it is a review, will save it in the database and will serve it upon request.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let latestReview = document.getElementById('latest-review')
latestReview.innerHTML = Pizza is &amp;lt;script&amp;gt;alert("you are hacked!")&amp;lt;/script&amp;gt; delicious
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Another user when requests the reviews page, the web server will serve all the user reviews including the malicious one. This will activate the code inside the &lt;code&gt;script&lt;/code&gt; tag&lt;/li&gt;
&lt;li&gt;Once the code is activated, it can do whatever it wants. Based on what's inside the &lt;code&gt;script&lt;/code&gt; tags, it can steal cookies which may have your login credentials to the website.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once the attacker obtains your cookies, they can load those cookies to their browser and pose themselves as you to carry out fraudulent activities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; HTML5 doesn't allow to execute &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag inserted with innerHTML. However the hackers have found a way to bypass this. See the code below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;img src='wrongLocation.jpg' onError='alert("You're hacked")'&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;innerHTML will allow the above code to run and this way the hackers can infiltrate and steal data. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-prevent-cookies-theft-and-xss-attacks"&gt;
  &lt;/a&gt;
  How to prevent cookies theft and XSS attacks
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-use-secure-https-connection"&gt;
  &lt;/a&gt;
  1. Use secure https connection
&lt;/h3&gt;

&lt;p&gt;When a user opens a website, a web connection is established between user's browser and your web server. Data continues to flow to and from your web server for as long as the connection is open.&lt;/p&gt;

&lt;p&gt;If you use the &lt;code&gt;http&lt;/code&gt; connection for data transfer, the data is prone to theft because using http, data is transferred in plain text format. So if a hacker intercepts that data, they can read and use it for their advantage. This process of intercepting data is called &lt;strong&gt;packet sniffing&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;On the other hand, &lt;code&gt;https&lt;/code&gt; is a &lt;strong&gt;secure http&lt;/strong&gt; connection which encrypts the data before sending it. So even if it is intercepted along the way, the hacker won't be able to decrypt it and make sense of the data. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-implement-content-security-policycsp"&gt;
  &lt;/a&gt;
  2. Implement Content Security Policy(CSP)
&lt;/h3&gt;

&lt;p&gt;According to MDN:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;CSP allows you to create a set of rules that would control what browsers can do with your website. For example, you can direct the browser to run scripts from a specific location. &lt;br&gt;
This will block all the scripts with malicious intent and mitigate the XSS attacks to a great extent.&lt;/p&gt;

&lt;p&gt;As a server administrator, you can configure the policy by adding the Content Security Policy HTTP header to your website. &lt;/p&gt;

&lt;p&gt;Let's see a few examples to understand the rules a little better:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Allow all scripts from only the origin website&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;Content-Security-Policy: script-src 'self'&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Allow all scripts from the origin and trsutedSite.com domain&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;Content-Security-Policy: script-src 'self' https://trsutedSite.com&lt;br&gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;There are other directives like &lt;code&gt;image-src&lt;/code&gt; or &lt;code&gt;style-src&lt;/code&gt; which specify permitted sources for loading images and css stylesheets respectively.&lt;/p&gt;

&lt;p&gt;For an in-depth understanding of the CSP, you can visit the MDN page &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP"&gt;here&lt;/a&gt; which explains it in great detail.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-use-textcontent-instead-of-innerhtml"&gt;
  &lt;/a&gt;
  3. Use textContent instead of innerHTML
&lt;/h3&gt;

&lt;p&gt;Let's look at the malicious code again which was added as a review to 'orderPizza.com'&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let latestReview = document.getElementById('latest-review')
latestReview.innerHTML = Pizza is &amp;lt;img src='wrongLocation.jpg' onError='alert("You're hacked")'&amp;gt; delicious!!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the hacker hits 'submit review' button, the review will be stored in the database and served on the screen as the new review. &lt;br&gt;
Now if you use &lt;code&gt;innerHTML&lt;/code&gt; to output the review, the user input will be parsed as HTML and for the above example you will get an alert box. &lt;/p&gt;

&lt;p&gt;Instead if you use &lt;code&gt;textContent&lt;/code&gt;, the user input will be parsed as a plain string and not HTML so the new review will be added with this content:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;"Pizza is &amp;lt;img src='wrongLocation.jpg' onError='alert("You're hacked")'&amp;gt; delicious!!"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And that's how you secure your website! 💪💪💪&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-invest-in-web-security-tools"&gt;
  &lt;/a&gt;
  4. Invest in Web Security tools
&lt;/h3&gt;

&lt;p&gt;Web security is a huge undertaking so if you do not feel very confident about managing it on your own, it is always a good idea to invest in a good web security tool that can protect your website against incoming attacks. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-use-modern-frameworks-and-update-them-regularly"&gt;
  &lt;/a&gt;
  5. Use modern frameworks and update them regularly
&lt;/h3&gt;

&lt;p&gt;Using frameworks is an important part of development process now and rightly so. It offers an organized approach to writing and maintaining code, enhances application performance, gives out of the box functionality and the list goes on.&lt;/p&gt;

&lt;p&gt;But it doesn't stop there. Modern frameworks like React, Angular for front end web development also offer rich security measures which prevents the websites from malicious attacks to a great extent. &lt;/p&gt;

&lt;p&gt;They come with a built in mechanism to detect XSS attacks for example and sanitize data before it is stored in server. The implementation and security features may differ between frameworks but they do the job just fine.&lt;/p&gt;

&lt;p&gt;That's why it becomes important that you use well supported frameworks during the development process and make sure to update them on a periodic basis. The teams developing these frameworks update the packages on a regular basis to find loopholes or backdoor entries and build stronger security , among other things.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Cross Site scripting(XSS) attacks are major web security vulnerabilities that bypasses the same origin policy rule to inject malicious code into your website. These attacks poses a major risk to user's personal information, authentication details which is generally stored in browser/computer cookies.&lt;/p&gt;

&lt;p&gt;Using https secure connection, having a strong Content Security Policy in place alongside other measures can mitigate these risks and make your website more secure than ever.&lt;/p&gt;




&lt;p&gt;And this brings me to the end of the article. &lt;/p&gt;

&lt;p&gt;I hope this article helps strengthen your website security further. As always my comment section is open for feedbacks. Keep them coming. 🤗🤗&lt;br&gt;
I can be found on &lt;a href="https://in.linkedin.com/in/nayak-rahul"&gt;LinkedIn&lt;/a&gt; or &lt;a href="https://twitter.com/RhlNyk"&gt;Twitter&lt;/a&gt; if you want to connect. 🙂&lt;/p&gt;

&lt;p&gt;Until next time! ✌️✌️&lt;/p&gt;

&lt;p&gt;Photo credit goes to &lt;a href="https://unsplash.com/@flyd2069?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;FLY:D&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/security?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>security</category>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>8 Rad Themes for Visual Studio Code</title>
      <author>Rithik Samanthula</author>
      <pubDate>Sat, 10 Apr 2021 03:46:06 +0000</pubDate>
      <link>https://dev.to/code2rithik/8-rad-themes-for-visual-studio-code-57f5</link>
      <guid>https://dev.to/code2rithik/8-rad-themes-for-visual-studio-code-57f5</guid>
      <description>&lt;p&gt;Want your to change your text editor from this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZiNq7qcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89eprqaek85ro40194mi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZiNq7qcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89eprqaek85ro40194mi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To This:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zO5SaANi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6bq4omklbqourwftxw5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zO5SaANi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6bq4omklbqourwftxw5.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are eight rad VSCode themes you can start using today:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-synthwave-84"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://marketplace.visualstudio.com/items?itemName=RobbOwen.synthwave-vscode"&gt;Synthwave '84&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This color scheme is influenced by the music and the cover artwork of modern Synthwave bands like FM-84, Timecop 1983, and The Midnight.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d-PRnmJL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/afx9sn0dte49l84yx0u7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d-PRnmJL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/afx9sn0dte49l84yx0u7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-winter-is-coming"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.winteriscoming"&gt;Winter is Coming&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This theme was inspired by the themes Visual Studio Dark+, Monokai, and Dustin Sander’s theme for “An Old Hope”. Custom CSS inspired by Wes Bos.&lt;/p&gt;

&lt;p&gt;The blue background for the Dark theme was inspired by Sarah Drasner’s Night Owl theme which we will see later on in this blog.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tPJlu5Ga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vv06r1pmcw9wps6knjm6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tPJlu5Ga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vv06r1pmcw9wps6knjm6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-ayu"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://marketplace.visualstudio.com/items?itemName=teabyii.ayu"&gt;Ayu&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Ayu is a simple theme with bright colors and comes in three versions — dark, light, and mirage for all-day-long comfortable work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q9a2wezk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0cpf3174hgfxyggwqj5h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q9a2wezk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0cpf3174hgfxyggwqj5h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-shades-of-purple"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://marketplace.visualstudio.com/items?itemName=ahmadawais.shades-of-purple"&gt;Shades of Purple&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Shades of Purple is a professional theme with hand-picked and bold shades of purple for your VS Code editor and terminal. One of the excellent, most downloaded, and top-rated VS Code themes on the marketplace.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i0G1c8Rd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnsarw7ow6n169ymqqjz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i0G1c8Rd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnsarw7ow6n169ymqqjz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-night-owl"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://marketplace.visualstudio.com/items?itemName=sdras.night-owl"&gt;Night Owl&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Night Owl is a Visual Studio Code theme for the night owls out there. Fine-tuned for those of us who like to code late into the night.&lt;/p&gt;

&lt;p&gt;Color choices have taken into consideration what is accessible to people with colorblindness and in low-light circumstances. Decisions were also based on meaningful contrast for reading comprehension and for optimal razzle-dazzle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QzhSryCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2g1o96wmmmf4xdv9jp2j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QzhSryCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2g1o96wmmmf4xdv9jp2j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-the-best-theme"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://marketplace.visualstudio.com/items?itemName=kohlbachjan.the-best-theme"&gt;The Best Theme&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This is my Favorite theme of all. I use this theme. I wrote a blog about &lt;a href="https://dev.to/code2rithik/my-visual-studio-code-setup-483k"&gt;My VSCode Setup&lt;/a&gt;. I included this theme in that blog post too. If you haven't checked it out yet, check it out!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IGhBq3wM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8p0opw6wh63dcoydy4c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IGhBq3wM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8p0opw6wh63dcoydy4c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-one-dark-pro"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme"&gt;One Dark Pro&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Atom’s iconic One Dark theme, and one of the most installed themes for VS Code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ya22TkqN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b69vknzds3g7d38bnijz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ya22TkqN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b69vknzds3g7d38bnijz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#8-dracula"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://marketplace.visualstudio.com/items?itemName=dracula-theme.theme-dracula"&gt;Dracula&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Dracula is a beautiful dark theme for Visual Studio Code. Also, the Dracula theme has an interesting origin story, &lt;a href="https://draculatheme.com/about"&gt;read it here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xZATbyWY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpnylokruvd7myp3ch37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xZATbyWY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpnylokruvd7myp3ch37.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These are 8 best themes that will make your Visual Studio Code outsand!&lt;/p&gt;

&lt;p&gt;Thank You for reading this blog and remember...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#keep-codnig-yall"&gt;
  &lt;/a&gt;
  Keep Codnig Y'All 👨🏻‍💻
&lt;/h1&gt;

</description>
      <category>vscode</category>
      <category>theme</category>
      <category>color</category>
      <category>aesthetic</category>
    </item>
    <item>
      <title>5 Ways To Drive Engagement In 2021 With This One Neat Trick</title>
      <author>Tim Myers</author>
      <pubDate>Sat, 10 Apr 2021 03:24:05 +0000</pubDate>
      <link>https://dev.to/denvercoder/5-ways-to-drive-engagement-in-2021-with-this-one-neat-trick-1agh</link>
      <guid>https://dev.to/denvercoder/5-ways-to-drive-engagement-in-2021-with-this-one-neat-trick-1agh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#use-a-fiver"&gt;
  &lt;/a&gt;
  Use a Fiver
&lt;/h2&gt;

&lt;p&gt;1.) Write a title with the number 5 in it. People like the number 5 because it's not too big and it's not too small.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#set-it-and-forget-it"&gt;
  &lt;/a&gt;
  Set It and Forget It
&lt;/h2&gt;

&lt;p&gt;2.) Write your post and then forget about that shit. Don't look at it, don't respond to comments, basically don't engage at all.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-your-grifter-friends-to-share-your-post"&gt;
  &lt;/a&gt;
  Get Your Grifter Friends to Share Your Post
&lt;/h2&gt;

&lt;p&gt;3.) It's not good grift if no one sees it. Make a deal with your friends that if they share your grift, then you'll share their grift.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keep-it-general-and-worthless"&gt;
  &lt;/a&gt;
  Keep It General and Worthless
&lt;/h2&gt;

&lt;p&gt;4.) Don't ever give away any valuable information. Why would someone buy your course or eBook if they've read it already. Make sure not to hamper your profits by posting any ACTUAL useful information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reduce-reuse-recycle"&gt;
  &lt;/a&gt;
  Reduce, Reuse, Recycle
&lt;/h2&gt;

&lt;p&gt;5.) Don't ever dispose of your grift. Keep juggling your posts over and over again. Just make a small change like changing the date from 2020 to 2021. Share 10 items instead of 5. Share 8 items. You get the picture. Don't &lt;strong&gt;ever&lt;/strong&gt; throw anything away.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#always-make-it-look-like-youre-helping"&gt;
  &lt;/a&gt;
  Always Make It Look Like You're Helping
&lt;/h2&gt;

&lt;p&gt;6.) Don't forget to drop that bonus tip. People will really think you care. They won't know that you're following rule 5 and you just cut a post of 10 tips down to 6. You'll be giving less but they thing they'll be getting more.&lt;/p&gt;

&lt;p&gt;Thanks for reading and that's all y'all.&lt;/p&gt;

</description>
      <category>grifting</category>
      <category>grifter</category>
      <category>grift</category>
      <category>griftish</category>
    </item>
    <item>
      <title>Switching between VSCode terminals using hot keys</title>
      <author>Daniel Feldroy</author>
      <pubDate>Sat, 10 Apr 2021 03:10:14 +0000</pubDate>
      <link>https://dev.to/danielfeldroy/how-to-switch-between-terminals-in-vscode-without-using-the-mouse-2p53</link>
      <guid>https://dev.to/danielfeldroy/how-to-switch-between-terminals-in-vscode-without-using-the-mouse-2p53</guid>
      <description>&lt;p&gt;When I code I prefer to keep my hands on the keyboard as much as possible. For me, this keeps me more focused on the task at hand. Switching to the mouse is something try to I reserve for interacting with browsers.&lt;/p&gt;

&lt;p&gt;By default &lt;a href="https://code.visualstudio.com/"&gt;VSCode&lt;/a&gt; doesn't include the keybinding necessary to switch terminals via the keyboard. You are forced to use the mouse, which disrupts my flow.&lt;/p&gt;

&lt;p&gt;Here's how you add terminal switching keybindings in VSCode:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h1&gt;

&lt;p&gt;Use &lt;code&gt;ctrl+p&lt;/code&gt; (&lt;code&gt;cmd+p&lt;/code&gt; on the Mac) and type &lt;code&gt;keybindings.json&lt;/code&gt;. Select the file from the drop downlist. This will open a file that looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Place&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;bindings&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;to&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;override&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;defaults&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h1&gt;

&lt;p&gt;Replace the contents of &lt;code&gt;keybindings.json&lt;/code&gt; with this for Windows or Linux:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Place&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;bindings&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;to&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;override&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;defaults&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ctrl+down"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"workbench.action.terminal.focusNext"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"when"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"terminalFocus"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ctrl+up"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"workbench.action.terminal.focusPrevious"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"when"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"terminalFocus"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or this when using the Mac:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Place&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;bindings&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;to&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;override&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;defaults&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cmd+down"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"workbench.action.terminal.focusNext"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"when"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"terminalFocus"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cmd+up"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"workbench.action.terminal.focusPrevious"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"when"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"terminalFocus"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can use the keyboard to change terminals in VS Code. &lt;/p&gt;

</description>
      <category>vscode</category>
      <category>tooling</category>
    </item>
    <item>
      <title>A brief guide to Animations in CSS</title>
      <author>Rahul</author>
      <pubDate>Sat, 10 Apr 2021 02:49:02 +0000</pubDate>
      <link>https://dev.to/rahxuls/a-brief-guide-to-animations-in-css-50e5</link>
      <guid>https://dev.to/rahxuls/a-brief-guide-to-animations-in-css-50e5</guid>
      <description>&lt;p&gt;Don't be afraid of animation. They're easy. This small started guide will help you in creating 4 simple type of keyframe animations. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#keyframes"&gt;
  &lt;/a&gt;
  Keyframes
&lt;/h2&gt;

&lt;p&gt;You can use CSS keyframes to create some cool animation by transitioning between CSS properties. This quick intro to keyframe animation will cover the animation properties and show you five simple examples. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#animation-properties"&gt;
  &lt;/a&gt;
  Animation Properties
&lt;/h3&gt;

&lt;p&gt;To apply keyframe animations to your element you need to use the animation properties. Think of these as the setting for the animation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.animated-element&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/*The name of the animation keyframes */&lt;/span&gt;
  &lt;span class="nl"&gt;animation-name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/*How long the animation should be*/&lt;/span&gt;
  &lt;span class="nl"&gt;animation-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/*How many times should it play*/&lt;/span&gt;
  &lt;span class="nl"&gt;animation-iteration-count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/*Anyd elay before the animation starts*/&lt;/span&gt;
  &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/*Specifies the speed curve of the animation*/&lt;/span&gt;
  &lt;span class="nl"&gt;animation-timing-function&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#animation-keyframes"&gt;
  &lt;/a&gt;
  Animation keyframes
&lt;/h3&gt;

&lt;p&gt;You also need to create the keyframes. An animation has timeline (0-100) and you can set a keyframe at any point in the timeline to change the look of the element using any CSS property. To code will then work out the frames in between and leave you with a smooth animation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;animation-name&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="c"&gt;/*start*/&lt;/span&gt;
    &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c"&gt;/*end*/&lt;/span&gt;
    &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;    

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#scale"&gt;
  &lt;/a&gt;
  Scale
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.animation--rotate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;animation-name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;animation-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;animation-iteration-count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;animation-timing-function&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;    
    &lt;span class="k"&gt;@keyframe&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;360deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#translate"&gt;
  &lt;/a&gt;
  Translate
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.animation--translate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;animation-name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation-iteration-count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation-timing-function&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;25&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;75&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#fade"&gt;
  &lt;/a&gt;
  Fade
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.animation--fade&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;fade&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation-iteration-count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;animation-timing-function&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;fade&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;80&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for Reading | Happy Animating 🚀&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#removalai-sponsor"&gt;
  &lt;/a&gt;
  RemovalAI - [SPONSOR]
&lt;/h3&gt;

&lt;p&gt;Remove background from multiple images in a single upload straight to your desktop using Bulk Photo Background Remover for Windows.             &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅  Drag &amp;amp; Drop Multiple Images&lt;/li&gt;
&lt;li&gt;✅  Optimize Product Images&lt;/li&gt;
&lt;li&gt;✅  Select Your Background&lt;/li&gt;
&lt;li&gt;✅  Set Your Output Size&lt;/li&gt;
&lt;li&gt;✅  Exceptional Results&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MiTLFkwG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://removal.ai/wp-content/uploads/2021/02/gif-new-2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MiTLFkwG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://removal.ai/wp-content/uploads/2021/02/gif-new-2.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Visit -&amp;gt; &lt;a href="http://bit.ly/removalai"&gt;RemovalAI&lt;/a&gt; &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>codenewbie</category>
      <category>programming</category>
    </item>
    <item>
      <title>Why I don't like to use Styled-Components</title>
      <author>Daniel Silva</author>
      <pubDate>Sat, 10 Apr 2021 02:28:49 +0000</pubDate>
      <link>https://dev.to/ucvdesh/why-i-don-t-like-to-use-styled-components-22k3</link>
      <guid>https://dev.to/ucvdesh/why-i-don-t-like-to-use-styled-components-22k3</guid>
      <description>&lt;p&gt;It's been a while since I post something here (Really busy, sorry!) and I will start to do it again with a polemic opinion. First, it's important to say that this is completely an opinion and I'm not trying to say "Don't use it!!", but creating a space to discuss some things I do not like about StyledComponents and why I don't use it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-not-a-natural-syntax"&gt;
  &lt;/a&gt;
  &lt;em&gt;- Not a natural syntax:&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;This is probably the main reason and I mean, it's weird...There is no natural syntax about&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Wrapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
   width: 30px;
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What the heck is that string template after the div?! (I know what it is, but come on). It's used to do function callings, method callings, prop passing, but it's weird to get used to tagged template literals for CSS at least.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-theres-no-clear-convention-to-use-it"&gt;
  &lt;/a&gt;
  &lt;em&gt;- There's no clear convention to use it:&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;If you see this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's &lt;code&gt;&amp;lt;Button /&amp;gt;&lt;/code&gt; a component or a Styled-Component? Can be both and we have to search for it and, depending on how big your project is, can be a pain in the a$$. &lt;/p&gt;

&lt;p&gt;Some code editors (sometimes VsCode does this) even have problems going to the code line when you &lt;code&gt;cmd + click&lt;/code&gt; the Styled-Components making it a little awkward to track. &lt;/p&gt;

&lt;p&gt;Sometimes even it's exported from a "General" style file and that makes it even harder to know what you have to do or fix.&lt;/p&gt;

&lt;p&gt;Some projects use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;StyledWrapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;``&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;to differentiate between a React Component and a Styled-Component, but there's not a real convention. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-you-can-do-theming-without-it"&gt;
  &lt;/a&gt;
  &lt;em&gt;- You can do theming without it:&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;You can easily build a &lt;code&gt;ThemeProvider&lt;/code&gt; using &lt;code&gt;React Context API&lt;/code&gt; that could manage the theming for the whole app and can be accessed anywhere you want. You can even build a simple &lt;code&gt;useTheme()&lt;/code&gt; custom hook to make it more descriptive and can manage a lot of things without installing another dependency on your project. &lt;/p&gt;




&lt;p&gt;Again, I'm not saying that Styled-Components are bad or that the creators are bad people or something, this is just my personal opinion based on projects that I've been working with. &lt;/p&gt;

&lt;p&gt;Do you have a different opinion? Do you think just like me? Do you like to add something to the post? Do it in the comments below!&lt;/p&gt;

&lt;p&gt;I do this completely non-profit, but if you want to help me you can go &lt;a href="https://www.buymeacoffee.com/danielsilva"&gt;here and buy me a coffee&lt;/a&gt; ;)&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to Set Environment Variables in Next.js</title>
      <author>Hulya</author>
      <pubDate>Sat, 10 Apr 2021 02:12:43 +0000</pubDate>
      <link>https://dev.to/hulyakarakaya/how-to-set-environment-variables-in-next-js-3n3k</link>
      <guid>https://dev.to/hulyakarakaya/how-to-set-environment-variables-in-next-js-3n3k</guid>
      <description>&lt;p&gt;Hello friends, today I was trying to use environment variables inside a Next.js project, and it is really easy to work with.&lt;/p&gt;

&lt;p&gt;First of all, you don't need to download &lt;a href="https://www.npmjs.com/package/dotenv"&gt;&lt;code&gt;dotenv&lt;/code&gt; &lt;/a&gt; package anymore.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-to-work-with-environment-variables"&gt;
  &lt;/a&gt;
  Steps to work with Environment Variables
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create a &lt;code&gt;.env.local&lt;/code&gt; file inside the root of your project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Put your private keys inside the file in this format:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// .env.local
API_KEY="...."
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;3.Save the file and add it to the &lt;code&gt;.gitignore&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// .gitignore
.env*.local
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;4.Access your keys with &lt;code&gt;process.env&lt;/code&gt;. You can access your environment variables inside the &lt;code&gt;pages&lt;/code&gt; directory or while you are fetching data with the &lt;code&gt;getServerSideProps&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getServerSideProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_KEY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/api/?key=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;articles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;5.Add your environment variables in Vercel deployment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c3i6XYMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p91lrigz3cuna3knlinr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c3i6XYMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p91lrigz3cuna3knlinr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can store your environment variables on Vercel, shown in the picture.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;I hope you will not have any trouble storing your environment variables in your Next.js projects. Whenever I try to use environment variables, something goes wrong; but Next.js worked perfectly. &lt;/p&gt;

&lt;p&gt;If you like this post, share it on your Twitter account to support me writing more, also you can support me by &lt;a href="https://www.buymeacoffee.com/hulya"&gt;buying  a coffee.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/hulya"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kA3wM6t6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-red.png" alt="Buy Me A Coffee" height="40" width="170"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/hulyakarkya"&gt;Twitter&lt;/a&gt;, and &lt;a href="https://github.com/hulyak"&gt;Github&lt;/a&gt;. We can connect with each other. Also, you can check out my other posts. I have shared resources that can help you learn Next.js.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/hulyakarakaya" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LF4uM7bO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HjISEBSW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/278302/e90a2e74-68c7-4187-9daf-bc745c96192f.png" alt="hulyakarakaya image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/hulyakarakaya/learn-next-js-for-free-with-these-resources-jfi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn Next.js For Free with These Resources&lt;/h2&gt;
      &lt;h3&gt;Hulya ・ Mar 29 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#nextjs&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



</description>
      <category>nextjs</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>8 developer habits that help you progress</title>
      <author>Mehdi Zed</author>
      <pubDate>Sat, 10 Apr 2021 02:07:29 +0000</pubDate>
      <link>https://dev.to/jesuisundev/8-developer-habits-that-help-you-progress-24fc</link>
      <guid>https://dev.to/jesuisundev/8-developer-habits-that-help-you-progress-24fc</guid>
      <description>&lt;p&gt;Over time, I came to understand that one of the most important thing as a developer are habits. All the little decisions, the ways of doing things, the way you look at things. It may not seem like much from a day to day point of view. This is the secret for greatness.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#going-into-the-unknown"&gt;
  &lt;/a&gt;
  Going into the unknown
&lt;/h3&gt;

&lt;p&gt;Let's be honest, I haven't always done this. I was not that kind of person. I would take the task made for me. With my go-to language, on the part of the app that I know perfectly. I knew exactly what i needed to do before I even looked at it. &lt;strong&gt;Choosing the easy way, when it becomes a habit, is very dangerous.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One day, I decided I was going to do the opposite. As soon as the opportunity arises to do something totally unknown, I'll jump on it. &lt;strong&gt;And the first time I finally did it, it was a disaster !&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YyUALsdi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/K3RK5zx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YyUALsdi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/K3RK5zx.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The time estimate ? I blew it up. It was a task estimated for one day or two. Took the whole week ! My company at that time was not happy. Me neither. But something more important happened. &lt;strong&gt;Something that seemed impossible and out of reach for me became commonplace.&lt;/strong&gt; And this alone changed everything.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you take the habit of getting into uncomfortable situations all the time, nothing will be uncomfortable anymore.&lt;/strong&gt; If you get out of your comfort zone, you'll stretch it out. And doing it frequently will gradually make you feel better all the time. You really win when the uncomfortable becomes your new norm. It's a lot easier than it sounds.&lt;/p&gt;

&lt;p&gt;What I suggest you do right now is look at the to-do tasks at your job. &lt;strong&gt;Take the one with a title you don't even understand&lt;/strong&gt;. And throw yourself in there in angel jump mode. For damage control, let's discuss how to handle the unknown.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#take-time-for-understanding"&gt;
  &lt;/a&gt;
  Take time for understanding
&lt;/h3&gt;

&lt;p&gt;For a long time, upon receiving a new task, i would start to write code immediately. The goal was to go fast. &lt;strong&gt;What could be faster than coding the solution right away ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And I totally understand if you do that too. We're pushed by tight deadlines and we're judged on our speed. &lt;strong&gt;But it's the worst possible habit.&lt;/strong&gt; It's really gonna hit you in the face sooner or later. To avoid that, you need a plan.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G2O_PIcN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/277pvVd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G2O_PIcN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/277pvVd.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The habit I'm advising you to follow is very simple. &lt;strong&gt;Don't do any lines of code until you have a complete solution of the problem.&lt;/strong&gt; It doesn't mean you have to go into detail and write a novel.&lt;/p&gt;

&lt;p&gt;It just means that, at least you know where you're going. &lt;strong&gt;Understanding, defining and solving the problem up front.&lt;/strong&gt; Just invest time beforehand! The code part will only be the application of a problem that has already been fixed.&lt;/p&gt;

&lt;p&gt;What you can do right now to start this habit is &lt;strong&gt;making diagrams for everything&lt;/strong&gt;. Before coding, use a paper and pencil. Or even better : whiteboard. Just draw your solution and make it work on paper. That all you need to do and it's terribly efficient!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#always-keep-it-simple"&gt;
  &lt;/a&gt;
  Always keep it simple
&lt;/h3&gt;

&lt;p&gt;I'm still amaze when i run into hyper-complex code for basic needs. We developers love making everything complex when we code. &lt;strong&gt;We have to abstract, decouple and above all show that we know how to do complex things.&lt;/strong&gt; It's a shitty habit.&lt;/p&gt;

&lt;p&gt;What I'm advising you here is a change of mindset. &lt;strong&gt;You have to get into the habit of asking yourself how to do the simplest things all the time.&lt;/strong&gt; Cut out the complexity, make classes with less responsibility, more functions, shorter that do one thing. Do everything you can to make it simple and readable. Your whole team should instantly understand what's going on in your code!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_gBADQto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://thumbs.gfycat.com/GratefulAthleticGalapagostortoise-size_restricted.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_gBADQto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://thumbs.gfycat.com/GratefulAthleticGalapagostortoise-size_restricted.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can apply this very simply today by making a conscious effort to simplify everything you code. &lt;strong&gt;The main advantage of doing this is maintainability.&lt;/strong&gt; It will save you and your entire team a lot of time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#be-careful-with-deadlines"&gt;
  &lt;/a&gt;
  Be careful with deadlines
&lt;/h3&gt;

&lt;p&gt;I've dedicated an entire article to this subject because it's such a source of anxiety in our profession. &lt;a href="https://www.jesuisundev.com/en/your-time-estimate-is-a-joke/"&gt;&lt;strong&gt;Your time estimate is a joke.&lt;/strong&gt;&lt;/a&gt; A good estimate is almost impossible to come out with.&lt;/p&gt;

&lt;p&gt;Problem is : you have to make estimates. A lot of them, all the time. &lt;strong&gt;Like most developers, you tend to underestimate those timelines.&lt;/strong&gt; It puts you in a world of trouble. And you regularly find yourself having to justify your estimate.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sb2x-yHz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Ani7Egq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sb2x-yHz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Ani7Egq.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To overcome that, I've established two habits. &lt;strong&gt;The first habit is that I always ask for more information.&lt;/strong&gt; More details, more precision, more context, more history, for whom ? why? is it possible to simplify ? is it possible to deliver using steps (alpha, beta and so on)? Yeah, I'm a big pain in the ass. But any information is critical and could save my life.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The second habit is that I never give a fixed estimate.&lt;/strong&gt; Always a range, a min/max. If I think it's going to take two days, I say it's going to take between two to four days. And if I have no choice but to give fixed number, then I say four days. Fuck it if it's too long, that's my estimate.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stepbystep-learning"&gt;
  &lt;/a&gt;
  Step-by-step learning
&lt;/h3&gt;

&lt;p&gt;When I was first introduced to Git, I was told that it was the basis for any respectable developer. Not knowing absolutely everything about Git was a disgrace as a developer. It put a lot of pressure on me. &lt;strong&gt;So I read the whole doc and tried to swallow it all in a few hours.&lt;/strong&gt; Of course, the next day, I was staring the console like an idiot after git status.&lt;/p&gt;

&lt;p&gt;I see a lot of people trying to do the same thing. Learn as much as possible as quickly as possible. &lt;strong&gt;You have to understand that your brain doesn't give a fuck if you want to go fast.&lt;/strong&gt; It'll come out as fast as it went in. People don't want to believe it, but it's true. You turn into a goldfish when you get too much information too fast. You can run as much as you want, you'll forget all about it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x6SxB9vr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/NdcYttr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x6SxB9vr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/NdcYttr.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So how do you learn a lot of things then? &lt;strong&gt;Just study by reasonable lengths, give your brain time to print out the information, and come back to it the next day.&lt;/strong&gt; To do that, you can apply today a habit I picked up years ago that has done wonders.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Every time I hear a term or concept I don't understand, I write it down in a google doc.&lt;/strong&gt; When I have some time, I open this google doc, I take the first term/concept and I learn about it. And that's it, I stop there, we'll see another day for the rest. You don't realize how good it is in the long run. And it's in the long run that you have to invest your time. Development is a marathon, not a sprint.&lt;/p&gt;

&lt;p&gt;Another habit I've picked up is doing the same thing, but with bits of code and commands. &lt;strong&gt;I have long snippets on GitLab filled with complicated commands and other boring syntax to remember.&lt;/strong&gt; I use these snippets every day and it frees my head for something else while remaining efficient.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#taking-a-step-back"&gt;
  &lt;/a&gt;
  Taking a step back
&lt;/h3&gt;

&lt;p&gt;At the beginning of my career, very frequently, I insulted my computer out loud while working. Yeah, so without context, it's weird. Like all developers, I had bugs in my applications. &lt;strong&gt;Being stuck for a long period of time, my frustration was so high that I ended up losing it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tenacity, perseverance and resilience in the face of a problem are essential for all developers. I'm sure you've already lost your temper in front of your PC. We all have.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The secret is to step back and keep a logical and methodical approach.&lt;/strong&gt; Most of the time, when you go crazy over something, you're so into it that you can't see anything. When you get angry, you lose the focus that allows you to think normally. You need to approach things coldly and methodically. You can practice a very simple first habit to start with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Next time you feel this, instead of imploding, get up and do something completely different.&lt;/strong&gt; Every time I do that, I'm gonna get coffee and/or see a colleague. When I get back to my seat : my brain is reset. I've taken a step back from what's going on and it's immediately clearer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W0lsR0SO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/7RbzpVg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W0lsR0SO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/7RbzpVg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Then my second habit is to reduce the parameters and context of the problem to an extreme level.&lt;/strong&gt; In a methodical way, I remove the complexity of my problem to arrive in a simple context that works. Finally, I put back parameters one by one until it crashes. When it crashes, I find the culprit, I fix the bug and I don't insult anyone.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-concentration-tunnels"&gt;
  &lt;/a&gt;
  Creating concentration tunnels
&lt;/h3&gt;

&lt;p&gt;I often hear that to be an effective developer you have to be able to focus NON-STOP on a topic for several hours. I'll tell you right now: it's impossible. &lt;strong&gt;If you can hold 25 minutes on a single topic without flinching, it's already incredible.&lt;/strong&gt; I think it's more efficient to create concentration tunnels (20 to 30 minutes) and to take breaks between each tunnel.&lt;/p&gt;

&lt;p&gt;I've developed several habits over time to do that. &lt;strong&gt;The first habit I've established is the Pomodoro Technique.&lt;/strong&gt; Concretely I set a timer of 25 minutes and I work without pause and without interruption during this time. At the end of the timer, I take a 5 minute break, no matter where I am. You become absolutely imperturbable during the tunnels and it changes everything.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qm6_E3ZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/CIL9awS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qm6_E3ZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/CIL9awS.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another super simple habit that you can put into practice right away: &lt;strong&gt;the next time you want to concentrate, turn your phone over or put it somewhere you can't see it&lt;/strong&gt;. You don't realize how much the notifications on your phone are messing with your brain. Seriously, just try it for one day and see. It's unbelievable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#control-your-ego"&gt;
  &lt;/a&gt;
  Control your ego
&lt;/h3&gt;

&lt;p&gt;I mean, I'm bound to end this article on the ego. &lt;strong&gt;&lt;a href="https://www.jesuisundev.com/en/the-unbelievable-developers-ego/"&gt;The unbelievable developer ego is very real.&lt;/a&gt;&lt;/strong&gt; If I dedicated an entire article on it, it's because there is something to discuss.&lt;/p&gt;

&lt;p&gt;The main problem for a developer with an overflowing ego is that he has no room for improvement. &lt;strong&gt;If you can't control your ego, you feel you have nothing left to learn.&lt;/strong&gt; If you don't learn, you don't progress. If you don't progress, you regress. And believe me, you don't want to regress as a developer.&lt;/p&gt;

&lt;p&gt;Besides, beyond your regression, if you're really full of ego, you're an asshole. &lt;strong&gt;You piss people off and nobody wants to work with you.&lt;/strong&gt; That's not good for your career either. The good news is that you can easily control that oversized ego.&lt;/p&gt;

&lt;p&gt;The very easy to practice habit is very much in line with what I advise you in the first point. &lt;strong&gt;Get out of your comfort zone and fail.&lt;/strong&gt; Nothing better than a good old fail to put your ideas back in place and start afresh on your personal progress.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#epilogue"&gt;
  &lt;/a&gt;
  Epilogue
&lt;/h3&gt;

&lt;p&gt;It's a lot to take in all at once, but believe me, it's worth it. I read a book that gave some tips on how to absorb good habits. The secret is to take it slowly in stages by applying part of the habit a little bit every day. &lt;strong&gt;&lt;a href="https://amzn.to/2zCvuHP"&gt;It's called Atomic Habit, it helped me a lot&lt;/a&gt;&lt;/strong&gt;, I highly recommend it! I promise it will pay off in the long run.&lt;/p&gt;

</description>
      <category>motivation</category>
      <category>habits</category>
      <category>productivity</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
