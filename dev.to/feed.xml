<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Log4j Vulnerability - Important Note to Performance Engineers</title>
      <author>NaveenKumar Namachivayam ⚡</author>
      <pubDate>Fri, 17 Dec 2021 16:40:02 +0000</pubDate>
      <link>https://dev.to/qainsights/log4j-vulnerability-important-note-to-performance-engineers-1e3j</link>
      <guid>https://dev.to/qainsights/log4j-vulnerability-important-note-to-performance-engineers-1e3j</guid>
      <description>&lt;p&gt;The Internet went crazy last week. If you are an avid user of Tech Twitter, you would have known about the Log4j fiasco. Within a few hours, Log4j vulnerability made headlines on popular news outlets, Twitter, LinkedIn, major organizations' internal forums, Slack channels and more. This blog post is all about Log4j vulnerability for performance engineers about how to mitigate the attack.&lt;/p&gt;

&lt;h2&gt;What is Apache Log4j Vulnerability CVE-2021-44228?&lt;/h2&gt;

&lt;p&gt;I am not a security expert. But I closely follow the security news on Twitter and feeds. CVE-2021-44228 is about remote code execution via JNDI lookup. &lt;/p&gt;

&lt;p&gt;Apache Log4j is a popular logging framework for Java applications, websites, enterprises, consumer apps and more. Developers log information about security and performance for debugging, audit, and analysis. &lt;/p&gt;

&lt;p&gt;By sending the JNDI with LDAP, it is possible to extract or operate the remote server or local machine, if the app is using Log4j 2.0-beta9 to 2.14.1. &lt;/p&gt;

&lt;p&gt;There are numerous articles, videos, repos are available to deep-dive into this CVE. &lt;/p&gt;

&lt;p&gt;This article targets performance engineers to help out with how to mitigate this vulnerability for the testing tools we are using. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/12/Log4j-Vulnerability-Important-Note-to-Performance-Engineers.jpeg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pdpUqOrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/12/Log4j-Vulnerability-Important-Note-to-Performance-Engineers-1024x1024.jpeg" alt="Log4j Vulnerability - Important Note to Performance Engineers" width="880" height="880"&gt;&lt;/a&gt;Log4j Vulnerability - Important Note to Performance Engineers&lt;/p&gt;

&lt;h2&gt;Apache JMeter&lt;/h2&gt;

&lt;p&gt;The latest version of JMeter 5.4.1 uses Log4j 2.13.3 which is affected by CVE-2021-44228.&lt;/p&gt;

&lt;p&gt;There are a couple of options available to mitigate the risk. But it is recommended to follow the Apache Log4j guidelines which are mentioned &lt;a href="https://logging.apache.org/log4j/2.x/security.html#CVE-2021-44228" rel="noreferrer noopener"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;CVE-2021-44228 solves the problem partially. CVE-2021-45046 prevents attacks by mitigating attackers various patterns. &lt;/p&gt;

&lt;p&gt;Log4j 2.16.0 fixes this issue by removing support for message lookup patterns and disabling JNDI functionality &lt;strong&gt;by default&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;My recommendation is to update the Log4j jars of JMeter to 2.16.0 completely.&lt;/p&gt;

&lt;p&gt;Go to JMETER_HOME\lib, delete all the log4j* files. &lt;/p&gt;

&lt;p&gt;Download the Log4j zip file from &lt;a href="https://logging.apache.org/log4j/2.x/download.html" rel="noreferrer noopener"&gt;Log4j website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Extract it and copy the below files and paste it into JMETER_HOME\lib folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;log4j-1.2-api-2.16.0.jar
log4j-api-2.16.0.jar
log4j-core-2.16.0.jar
log4j-slf4j-impl-2.16.0.jar&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JMeter 5.4.2 will be released soon with the bumped up version of Log4j. I will update my post, once it is released.&lt;/p&gt;

&lt;p&gt;UPDATE: &lt;a href="https://qainsights.com/whats-new-in-apache-jmeter-5-4-2/" rel="noreferrer noopener"&gt;JMeter 5.4.2 has been released&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Tricentis NeoLoad&lt;/h2&gt;

&lt;p&gt;Tricentis has released NeoLoad 8.0 with Log4j 2.15.0.&lt;/p&gt;

&lt;h2&gt;Grafana k6&lt;/h2&gt;

&lt;p&gt;Grafana's k6 &lt;a href="https://k6.io/blog/k6-products-not-impacted-by-cve-2021-44228/" rel="noreferrer noopener"&gt;doesn't use Log4j&lt;/a&gt;. You are good to go. &lt;/p&gt;

&lt;h2&gt;MicroFocus LoadRunner and Silk Performer&lt;/h2&gt;

&lt;p&gt;MicroFocus LoadRunner family is impacted by Log4j vulnerability. Please &lt;a href="https://portal.microfocus.com/s/article/KM000003046?language=en_US" rel="noreferrer noopener"&gt;follow this link&lt;/a&gt; to mitigate the risk.&lt;/p&gt;

&lt;p&gt;Here is the bulletin link for &lt;a href="https://microfocus.my.salesforce.com/sfc/p/#1t000000vhDP/a/8e000000c7fR/JrOxnycbJxIXDpzlzCCfBOy6pqqRcPD_cu.ySvH5Vc8" rel="noreferrer noopener"&gt;Silk Performer&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Gatling&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://gatling.io/2021/12/log4shell-why-is-gatling-unaffected/" rel="noreferrer noopener"&gt;Gatling uses&lt;/a&gt; logback logging library. If you are using Gatling, you are not affected.&lt;/p&gt;

&lt;h2&gt;RedLine 13&lt;/h2&gt;

&lt;p&gt;RedLine13 itself doesn't use Log4j framework. But once JMeter 5.4.2 is out, it will be available on the RedLine13 platform.&lt;/p&gt;

&lt;h2&gt;EggPlant Performance&lt;/h2&gt;

&lt;p&gt;If you are using &lt;a href="https://blog.eggplantsoftware.com/apache-log4j-2-security-vulnerability" rel="noreferrer noopener"&gt;EggPlant Performance&lt;/a&gt;, you are NOT affected by the Log4j vulnerability. &lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;It is recommended to update the Log4j libraries with 2.16.0 ASAP. I will keep posting this blog post, if I get any new information. &lt;/p&gt;

&lt;p&gt;Log4j developers have been working tirelessly to fix the issues for the past 1 week. A big salute to them from &lt;a href="https://qainsights.com" rel="noreferrer noopener"&gt;QAInsights&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>performance</category>
      <category>webperf</category>
      <category>tutorial</category>
      <category>testing</category>
    </item>
    <item>
      <title>Mistakes I've seen as a Technical Interviewer</title>
      <author>Farhana</author>
      <pubDate>Fri, 17 Dec 2021 15:48:50 +0000</pubDate>
      <link>https://dev.to/farhanaxmustafa/mistakes-ive-seen-as-a-technical-interviewer-1gdm</link>
      <guid>https://dev.to/farhanaxmustafa/mistakes-ive-seen-as-a-technical-interviewer-1gdm</guid>
      <description>&lt;p&gt;I've interviewed new grads looking for their first software engineering role. It seems like yesterday that I was also on the job hunt, so being on the other side of the table was a surreal experience. It's given me a new perspective on what companies are looking for. During these interviews, I've noticed some patterns that candidates fall into. In this post, I'll be discussing some that could make or break the interviewer's final decision.&lt;/p&gt;

&lt;p&gt;Here are the mistakes I've seen new grads make during their technical interviews.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mistake-diving-straight-into-coding"&gt;
  &lt;/a&gt;
  Mistake: Diving straight into coding
&lt;/h2&gt;

&lt;p&gt;Interviewers expect the candidate to have questions after reading the prompt. A common mistake is immediately jumping to code a solution. Not only will this lead to confusion later, but mistakes are more likely to happen and that will cost time. This also signals that the candidate has poor communication skills.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-do-instead"&gt;
  &lt;/a&gt;
  What to do instead:
&lt;/h3&gt;

&lt;p&gt;Spend a few minutes to ask clarifying questions. This may seem like a waste of the small amount of time you have to get a working solution. However, that's not the case. Asking questions can reduce potential mistakes. This can also impress your interviewers. This shows how you collaborate with others and you're able to understand business requirements. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mistake-staying-silent"&gt;
  &lt;/a&gt;
  Mistake: Staying silent
&lt;/h2&gt;

&lt;p&gt;It's awkward for the interviewer if you sit there in silence. If you don't communicate what is going through your head, then you can't prove that you deserve the software engineering role. It's better to say every thought out loud because that's the only way the interviewer can know your thought process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-do-instead"&gt;
  &lt;/a&gt;
  What to do instead:
&lt;/h3&gt;

&lt;p&gt;To confirm that you understand the problem, repeat it in your own words. You can list out some examples of expected inputs and outputs, but if you can't think of any then that's okay. You can ask for examples from the interviewer! Ask all your clarifying questions. Be sure to confirm any assumptions you have. You can do this by double checking with the interviewer if it's safe to assume things or not. It may feel weird at first to talk out loud while coding but it'll feel natural after some practice. &lt;br&gt;
I recommend learning and using the &lt;a href="https://guides.codepath.com/compsci/UMPIRE-Interview-Strategy"&gt;UMPIRE method by CodePath&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mistake-not-knowing-the-programming-language-well"&gt;
  &lt;/a&gt;
  Mistake: Not knowing the programming language well
&lt;/h2&gt;

&lt;p&gt;Usually, a candidate can pick what programming language they want to code in. I've seen candidates use a language and not understand why  compiler errors would appear. This causes frustration and confusion for the candidate, which can hurt their performance. I've also seen a candidate blame the compiler instead of debugging what went wrong. This shows the interviewer that you're not able to debug an issue or handle problems well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-do-instead"&gt;
  &lt;/a&gt;
  What to do instead:
&lt;/h3&gt;

&lt;p&gt;Study up on your language and practice problem solving without autocomplete enabled in your IDE. Make sure you know how to explain why you chose this specific data structure versus others in order to solve the challenge.&lt;br&gt;
For more information on picking a language, read this amazing post in the &lt;a href="https://techinterviewhandbook.org/picking-a-language/"&gt;Tech Interview Handbook&lt;/a&gt; on the pros and cons of using Python vs Java during an interview.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mistake-not-having-questions-at-the-end"&gt;
  &lt;/a&gt;
  Mistake: Not having questions at the end
&lt;/h2&gt;

&lt;p&gt;Not asking your interviewer(s) questions is a missed opportunity. You're depriving yourself of interviewing the company and seeing if this role is a right fit for you. Also some people may view this as a lack of interest in the position. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-do-instead"&gt;
  &lt;/a&gt;
  What to do instead:
&lt;/h3&gt;

&lt;p&gt;Prepare a list of back up questions if you have nothing to ask. This is something you may benefit from without you realizing it. You get to pick the brains of engineers who are in the place that you want to be. And your interviewers are more than happy to share their experiences with you.&lt;br&gt;
Here are some &lt;a href="https://techinterviewhandbook.org/questions-to-ask/"&gt;great examples on what questions you can ask for greatest impact&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;p&gt;I must admit that I once made these mistakes when I was looking to start my career. It's taken me a lot of practice, and a lot of rejections, to improve my technical interviewing skills.&lt;/p&gt;

&lt;p&gt;I can confirm it's true when they say your interviewer(s) want you to succeed. We'll give hints and we'll debug the compiler error with you. I get excited when a candidate is on the right track and I'm happy to give a hint or two if I need to. Technical interviewing is a nerve wracking experience but it gets better with practice. There's no growth in comfort so let's use our mistakes to make ourselves better.&lt;/p&gt;

&lt;p&gt;Let me know in the comments if you've seen any other mistakes I haven't touched on!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Scope in JavaScript(var, let, const)</title>
      <author>Emmanuel Os</author>
      <pubDate>Fri, 17 Dec 2021 15:27:22 +0000</pubDate>
      <link>https://dev.to/eworld/scope-in-javascriptvar-let-const-i1</link>
      <guid>https://dev.to/eworld/scope-in-javascriptvar-let-const-i1</guid>
      <description>&lt;p&gt;Scope in JavaScript is divided into the Block Scope, Function Scope and the Global Scope.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#starting-with-the-global-scope"&gt;
  &lt;/a&gt;
  Starting with the Global Scope
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Global scope
var a = 1;
let b = 2
const c = 3
console.log(`Global Scope ${a} ${b} ${c}`)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;This is a global scope and everything is fine, if you console.log the value&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#function-scope"&gt;
  &lt;/a&gt;
  Function Scope
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Global scope
var a = 1
let b = 2
const c = 3

//Function scope
function num() {
  var a = 10
  let b = 22
  const c = 5
  console.log(`Function Scope ${a} ${b} ${c}`)
}
num()

console.log(`Global Scope ${a} ${b} ${c}`)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So inside the function scope we get our &lt;code&gt;10, 22, 5&lt;/code&gt; while in the global scope we still get our &lt;code&gt;1, 2, 3,&lt;/code&gt; because they are different variables in different scope.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Var&lt;/code&gt; is a &lt;strong&gt;Function scope&lt;/strong&gt; It means they are only available inside the function they’re created in, or if not created inside a function, they are ‘globally scoped..
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var a = 1;
let b = 2
const c = 3

for(var a = 0; a &amp;lt; 10; a++) {
  console.log(a)
}
console.log(`Global Scope ${a} ${b} ${c}`)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The value of &lt;code&gt;var a = 10&lt;/code&gt; in the global scope.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;var a&lt;/code&gt; in the loop actually changes the value &lt;code&gt;var a&lt;/code&gt; in the global scope which is not good, that's the reason &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; was created.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;var&lt;/code&gt; is kind of wired, that's one of the thing that lot of people didn't like about JavaScript. it causes security risks and it can cause confusion if you have some variables in the global scope.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#block-scope"&gt;
  &lt;/a&gt;
  Block Scope
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Global scope
var a = 1
let b = 2
const c = 3

// Block Scope
if(true) {
  var a = 6
  let b = 7
  const c = 10
  console.log(`Block Scope ${a} ${b} ${c}`)
}
console.log(`Global Scope ${a} ${b} ${c}`)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What do you think the global scope &lt;code&gt;var a&lt;/code&gt; result will be? &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The result will be &lt;code&gt;var a = 6&lt;/code&gt; because after declaring the &lt;code&gt;var a = 1&lt;/code&gt; on the global scope it was change in the block scope.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Notice the &lt;code&gt;let and const&lt;/code&gt; &lt;strong&gt;didn't change&lt;/strong&gt;, in the global scope they retain their values and also in the block scope.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Benefit of let &amp;amp; const&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;They aren't scoped to the function, they are scoped to the block.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What is the block?&lt;/strong&gt; A block is a set of opening and closing curly brackets.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#points-to-take"&gt;
  &lt;/a&gt;
  Points to Take
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;var&lt;/code&gt; is function scope.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scope.&lt;/li&gt;
&lt;li&gt;Function scope is within the function.&lt;/li&gt;
&lt;li&gt;Block scope is within curly brackets.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Nmap Go implementation - TCP port scan</title>
      <author>b0r</author>
      <pubDate>Fri, 17 Dec 2021 15:06:02 +0000</pubDate>
      <link>https://dev.to/b0r/nmap-go-implementation-tcp-port-scan-179b</link>
      <guid>https://dev.to/b0r/nmap-go-implementation-tcp-port-scan-179b</guid>
      <description>&lt;p&gt;I remember when I first started learning about computer networks. It was from the excellent &lt;a href="https://www.pearson.com/us/higher-education/program/Tanenbaum-Computer-Networks-5th-Edition/PGM270019.html"&gt;Computer Networks, 5th Edition, Andrew S. Tanenbaum&lt;/a&gt; book. Book is accompanied by the University of Washington video course taught by &lt;a href="https://research.google/people/105021/"&gt;David Wetherall&lt;/a&gt;. Video materials are available at: 👉 &lt;strong&gt;&lt;a href="https://media.pearsoncmg.com/ph/streaming/esm/tanenbaum5e_videonotes/tanenbaum_videoNotes.html"&gt;Tanenbaum, Wetherall Computer Networks 5e, Video Notes&lt;/a&gt;.&lt;/strong&gt; 👈&lt;br&gt;
Be sure to check them out, they are great!!&lt;/p&gt;

&lt;p&gt;After reading a bunch of posts on dev.to on &lt;a href="https://nmap.org/"&gt;Nmap&lt;/a&gt; topic, e.g.: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/leading-edje/getting-started-with-nmap-for-pentesters-59af"&gt; Getting Started with Nmap for Pentesters &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kavishgour/nmap-introduction-part-1-48dn"&gt;Nmap - Introduction (Part 1) &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/vishwasnarayan5/nmap-6jl"&gt;Nmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have decided to refresh my knowledge on computer networks by re-implementing Nmaps` basic functionalities in Go.&lt;/p&gt;

&lt;p&gt;This is first post in the series of posts I'll use to record that journey.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of Contents:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="#"&gt;n2map (noob network mapper)&lt;/a&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#"&gt;TCP connect scan technique&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;n2map requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#"&gt;Implementation&lt;/a&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#s1"&gt;Get target machine IP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#s2"&gt;Connect to the target machine (hard-coded port)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#s3"&gt;Connect to the target machine (user provided port)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#s4"&gt;Connect to the target machine (multiple ports)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#s5"&gt;Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#s6"&gt;Make it go brrrr (parallel)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#n2map-noob-network-mapper"&gt;
  &lt;/a&gt;
  n2map (noob network mapper)
&lt;/h2&gt;

&lt;p&gt;This project is called &lt;strong&gt;n2map (noob network mapper)&lt;/strong&gt; and it will implement a subset of Nmaps` functionalities. That's port scanning functionality for now.&lt;/p&gt;

&lt;p&gt;If we take a look at the Nmap documentation for port scanning we'll see that is supports a dozen or so &lt;a href="https://nmap.org/book/man-port-scanning-techniques.html"&gt;port scan techniques&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TCP SYN scan (half-open scanning, doesn't open a full TCP connection)&lt;/li&gt;
&lt;li&gt;TCP connect scan (full scanning, connect to port on the target machine)&lt;/li&gt;
&lt;li&gt;UDP scans (sends UDP packet to every targeted port)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nmap.org/book/man-port-scanning-techniques.html"&gt;and many more..&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;n2map first functionality will add support to perform port scanning for single IP address. It will use a TCP connect scan technique.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#tcp-connect-scan-technique"&gt;
  &lt;/a&gt;
  TCP connect scan technique
&lt;/h3&gt;

&lt;p&gt;In detail description of TCP connect scan technique is described in &lt;a href="https://nmap.org/book/man-port-scanning-techniques.html"&gt;port scan techniques&lt;/a&gt; part in the Nmap documentation.&lt;/p&gt;

&lt;p&gt;For this post, I think it's enough to know that a TCP connect scan technique is a technique that performs a standard TCP three-way handshake to establish the connection, and does the same for closing the connection.&lt;/p&gt;

&lt;p&gt;Let's see what packets are sent if connect:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;from &lt;code&gt;localhost&lt;/code&gt; (&lt;code&gt;192.168.1.6&lt;/code&gt;) &lt;/li&gt;
&lt;li&gt;to target machine on the &lt;code&gt;http://scanme.nmap.org/&lt;/code&gt; (&lt;code&gt;45.33.32.156&lt;/code&gt;) on port &lt;code&gt;80&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jIHYsQBI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwy1uz6uystp5m16rw3q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jIHYsQBI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwy1uz6uystp5m16rw3q.png" alt="TCP open connection handshake" width="880" height="167"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We see &lt;code&gt;green&lt;/code&gt; rectangle that represents packets sent to establish the connection. We also see &lt;code&gt;red&lt;/code&gt; rectangles representing the packets sent to close the connection.&lt;/p&gt;

&lt;p&gt;In case a connection can't be established, we'll see following packets sent over the network:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D3FB459Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/47v9du7e28mf6cglxc47.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D3FB459Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/47v9du7e28mf6cglxc47.png" alt="TCP cant open connection" width="880" height="71"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#n2map-requirements"&gt;
  &lt;/a&gt;
  n2map requirements
&lt;/h2&gt;

&lt;p&gt;I would like to use n2map the same way I use nmap:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;via terminal&lt;/li&gt;
&lt;li&gt;by providing target machine IP address&lt;/li&gt;
&lt;li&gt;by providing a port range to scan&lt;/li&gt;
&lt;li&gt;by using the TCP connect scan technique

&lt;ul&gt;
&lt;li&gt;this is currently only supported scan technique in n2map so no additional flags are added at the moment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The run command should looks like this: &lt;code&gt;n2map -p 80-433 127.0.0.1&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#get-target-machine-ip"&gt;
  &lt;/a&gt;
  Get target machine IP
&lt;/h3&gt;

&lt;p&gt;First thing we need to have to perform a port scan is a target machine IP address. IP address will be provided as an argument to the &lt;code&gt;n2map&lt;/code&gt; runtime as follows: &lt;code&gt;n2map 127.0.0.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Following Go code shows how to implement that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"flag"&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"os"&lt;/span&gt;
    &lt;span class="s"&gt;"time"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Parse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="c"&gt;// IP is provided as an argument at position 0&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Starting n2map v0.1 at %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UnixDate&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"n2map scan report for %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"PORT&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;STATE&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"error : IP address not provided"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;% go run main.go 127.0.0.1
Starting n2map v0.1 at Fri Dec 17 13:27:55 CET 2021
n2map scan report &lt;span class="k"&gt;for &lt;/span&gt;127.0.0.1
PORT    STATE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#connect-to-the-target-machine-hardcoded-port"&gt;
  &lt;/a&gt;
  Connect to the target machine (hard-coded port)
&lt;/h3&gt;

&lt;p&gt;Once we have a target machine IP address we are ready to make a connection. Luckily, Go provides a &lt;a href="https://pkg.go.dev/net#Dial"&gt;&lt;code&gt;Dial&lt;/code&gt;&lt;/a&gt; function that can be used to connect to a target machine. It can be used like this: &lt;code&gt;Dial("tcp", "198.51.100.1:80")&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's update our code to reflect the changes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;        &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;
        &lt;span class="n"&gt;addr&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s:%d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tcp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\t\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"open"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\t\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"closed"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;% go run main.go 127.0.0.1
Starting n2map v0.1 at Fri Dec 17 13:27:55 CET 2021
n2map scan report &lt;span class="k"&gt;for &lt;/span&gt;127.0.0.1
PORT    STATE
80      closed  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we have hard-coded &lt;code&gt;port&lt;/code&gt; value &lt;code&gt;80&lt;/code&gt;, which means we need to rerun the &lt;code&gt;n2map&lt;/code&gt; for each port we want to scan. We can do better than that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#connect-to-the-target-machine-user-provided-port"&gt;
  &lt;/a&gt;
  Connect to the target machine (user provided port)
&lt;/h3&gt;

&lt;p&gt;To make it possible to provide port we will introduce a new &lt;code&gt;-p&lt;/code&gt; flag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringVar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"p"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"80"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"port to scan"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Parse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Starting n2map v0.1 at %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UnixDate&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"n2map scan report for %s : [%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"PORT&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;STATE&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;addr&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s:%d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tcp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\t\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"open"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\t\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"closed"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"error : IP address not provided"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we are able to use n2map with provided port as:&lt;br&gt;
&lt;code&gt;n2map -p 80 127.0.0.1&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;% go run main.go &lt;span class="nt"&gt;-p&lt;/span&gt; 80 127.0.0.1
Starting n2map v0.1 at Fri Dec 17 13:27:55 CET 2021
n2map scan report &lt;span class="k"&gt;for &lt;/span&gt;127.0.0.1 : &lt;span class="o"&gt;[&lt;/span&gt;80]
PORT    STATE
80      closed 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is still now good enough! We want to be able to scan not only one port per &lt;code&gt;n2map&lt;/code&gt; run but multiple ports. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#connect-to-the-target-machine-multiple-ports"&gt;
  &lt;/a&gt;
  Connect to the target machine (multiple ports)
&lt;/h3&gt;

&lt;p&gt;To make that possible we are going to extend the existing &lt;code&gt;port&lt;/code&gt; flag functionality to include a range of ports to scan by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;extending provided port runtime argument to support port ranges like &lt;code&gt;80-100&lt;/code&gt; (scan ports &amp;gt;= 80 and &amp;lt;= 100)&lt;/li&gt;
&lt;li&gt;making a &lt;code&gt;Dial&lt;/code&gt; call for each port in provided range
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;portRangeFlag&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringVar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;portRangeFlag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"p"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"80"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"port range to scan"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Parse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Starting n2map v0.1 at %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UnixDate&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"n2map scan report for %s : [%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;portRangeFlag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"PORT&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;STATE&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;portRange&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;portRangeFlag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;startPort&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;strconv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;portRange&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;endPort&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;strconv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;portRange&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;startPort&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;endPort&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;addr&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s:%d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tcp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\t\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"open"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\t\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"closed"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"error : IP address not provided"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we are able to use n2map with provided port as:&lt;br&gt;
&lt;code&gt;n2map -p 80-81 127.0.0.1&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;% go run main.go &lt;span class="nt"&gt;-p&lt;/span&gt; 80-81 127.0.0.1
Starting n2map v0.1 at Fri Dec 17 13:46:36 CET 2021
n2map scan report &lt;span class="k"&gt;for &lt;/span&gt;127.0.0.1 : &lt;span class="o"&gt;[&lt;/span&gt;80-81]
PORT    STATE
80      closed  
81      open  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#review"&gt;
  &lt;/a&gt;
  Review
&lt;/h3&gt;

&lt;p&gt;Nice! If we check the initial requirements:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I would like to use n2map the same way I use nmap:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;via terminal&lt;/li&gt;
&lt;li&gt;by providing target machine IP address&lt;/li&gt;
&lt;li&gt;by providing a port range to scan&lt;/li&gt;
&lt;li&gt;by using the TCP connect scan technique

&lt;ul&gt;
&lt;li&gt;this is currently only supported scan technique in n2map so no additional flags are added at the moment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;we can see that all the requirements are implemented.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-it-go-brrrr-parallel"&gt;
  &lt;/a&gt;
  Make it go brrrr (parallel)
&lt;/h3&gt;

&lt;p&gt;Not in the requirement list, but non less important is the time this implementation takes to scan multiple ports, or even all 65535 ports. It's very, very slow.&lt;/p&gt;

&lt;p&gt;If you have read any of my previous posts on &lt;a href="https://dev.to/b0r/series/15904"&gt;Go Channel Patterns&lt;/a&gt; you should have enough knowledge to make improvements needed to speed up this process.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#battle-plan-for-that-is"&gt;
  &lt;/a&gt;
  Battle plan for that is:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;scan ports (make TCP connection)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create a worker goroutines that will do the &lt;code&gt;net.Dial&lt;/code&gt; call for specific port&lt;/li&gt;
&lt;li&gt;create a manager goroutine that will iterate over a &lt;code&gt;portStart&lt;/code&gt; and &lt;code&gt;portEnd&lt;/code&gt; range, and send each port to one of the worker goroutines&lt;/li&gt;
&lt;li&gt;create a channel used to pass data between manager and worker goroutines&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;print results&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;make &lt;code&gt;results&lt;/code&gt; channel used by worker goroutines to pass the results to the manager goroutine&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;for-range&lt;/code&gt; loop to iterate over &lt;code&gt;results&lt;/code&gt; channel and print out the results&lt;/li&gt;
&lt;li&gt;create a new supervisor goroutine that will close the &lt;code&gt;results&lt;/code&gt; channel once there are no more ports to process by worker goroutines&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;sync.WaitGroup&lt;/code&gt; to tell supervisor when to close the &lt;code&gt;results&lt;/code&gt; channel&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this post, TCP connect scan port scanning technique was described (as described by Nmap). In addition, simple implementation was provided.&lt;/p&gt;

&lt;p&gt;Readers are encouraged to try to speed the port scanning process up by using one of the Go concurrency primitives (goroutines, channels...).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Header Photo by Ricardo Esquivel from Pexels&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>go</category>
      <category>programming</category>
      <category>security</category>
      <category>networking</category>
    </item>
    <item>
      <title>GraphQL Postgres Metrics Dashboard with Cube</title>
      <author>Adnan Rahić</author>
      <pubDate>Fri, 17 Dec 2021 14:56:39 +0000</pubDate>
      <link>https://dev.to/cubejs/graphql-postgres-metrics-dashboard-with-cube-4dk8</link>
      <guid>https://dev.to/cubejs/graphql-postgres-metrics-dashboard-with-cube-4dk8</guid>
      <description>&lt;p&gt;You're bound to have heard the term GraphQL. Unless you live under a rock. I doubt that though. GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data.&lt;/p&gt;

&lt;p&gt;This tutorial will show you a step-by-step guide on how to use a GraphQL API to build Postgres metrics dashboards.&lt;/p&gt;

&lt;p&gt;Here's what the end product will look like. You can also check out the &lt;a href="https://graphql-postgres-metrics-dashboard.netlify.app/"&gt;live preview&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_R6xRNSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/8a8507fb-4c19-4069-a178-9bd1036f7e06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_R6xRNSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/8a8507fb-4c19-4069-a178-9bd1036f7e06.png" alt="frame_chrome_mac_light - 2021-12-16T143822.307.png" width="880" height="661"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more. GraphQL makes it easier to evolve APIs over time and enables powerful developer tools.&lt;/p&gt;

&lt;p&gt;The incredible growth in GraphQL's popularity has been noticed by the amazing Cube community. Our community longed for a GraphQL integration, and we listened.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-the-graphql-api-was-added-to-cube"&gt;
  &lt;/a&gt;
  How the GraphQL API was added to Cube
&lt;/h3&gt;

&lt;p&gt;I'd like to give a huge shout-out to &lt;a href="https://twitter.com/lvauvillier"&gt;Luc Vauvillier&lt;/a&gt; who contributed initial support for the GraphQL API and laid out the principal design. Luc is the co-founder at &lt;a href="https://www.gadsme.com/"&gt;Gadsme&lt;/a&gt;. Check &lt;a href="https://cube.dev/blog/gadsme-runs-on-cube/"&gt;this out to read more&lt;/a&gt; about how Gadsme builds awesome stuff with Cube&lt;a href="https://cube.dev/blog/gadsme-runs-on-cube/"&gt;.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We at Cube were thrilled to jump on the problem at hand and build out a GraphQL API. As of the &lt;code&gt;0.29&lt;/code&gt; release of Cube, you can use the GraphQL API!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#set-up-cube-with-graphql-and-postgres"&gt;
  &lt;/a&gt;
  Set up Cube with GraphQL and Postgres
&lt;/h3&gt;

&lt;p&gt;To configure Cube, I first needed to connect a database. I used a demo Postgres database with e-commerce data. The process of connecting a database is identical whether you're using a self-hosted instance of Cube, or Cube Cloud.&lt;/p&gt;

&lt;p&gt;I selected PostgreSQL from the list of database options. Cube &lt;a href="https://cube.dev/docs/config/databases"&gt;supports dozens of databases&lt;/a&gt;, you can select from any mainstream database or data warehouse on the market.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IpQd75rz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/9ca37d9b-cdc4-4ebd-a41b-31b1ded693e5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IpQd75rz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/9ca37d9b-cdc4-4ebd-a41b-31b1ded693e5.png" alt="frame_chrome_mac_light_(37).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, I had to add values to connect to my sample PostgreSQL e-commerce database. If you're using a self-hosted Cube instance, you need to &lt;a href="https://cube.dev/docs/config/databases/postgres"&gt;configure a few environment variables&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In Cube Cloud, it looks like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VXliNlEH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/f44924c6-b117-4d50-9d78-11625238b4b9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VXliNlEH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/f44924c6-b117-4d50-9d78-11625238b4b9.png" alt="frame_chrome_mac_light_(50).png" width="880" height="844"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the connection is established, I have to generate a data schema. Selecting the &lt;code&gt;public&lt;/code&gt; table and clicking generate will build a Cube data schema for me to work with.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xa_2M0rW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/ec5c7697-c698-4d8c-938e-8fdeb2193b7f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xa_2M0rW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/ec5c7697-c698-4d8c-938e-8fdeb2193b7f.png" alt="frame_chrome_mac_light_(51).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now I have access to my Cube cluster. In Cube Cloud you should always enable cluster mode for improved performance if you want to run reliably in production.&lt;/p&gt;

&lt;p&gt;This will make sure your resources will autoscale based on the load. There's no additional cost for autoscaling, and the &lt;a href="https://cube.dev/pricing"&gt;pricing model for Cube Cloud&lt;/a&gt; is based on throughput.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VBftoCxH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/00d52f17-d1c7-4768-b692-6fbb78954d33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VBftoCxH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/00d52f17-d1c7-4768-b692-6fbb78954d33.png" alt="frame_chrome_mac_light_(22).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next up, I ran a set of queries in the Cube Playground to determine what data I need to make the metrics dashboard.&lt;/p&gt;

&lt;p&gt;First of all, I want to run a sample query to list orders by status grouped by day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NajP3X0d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/e23359d8-70a7-4a60-b842-4632c8a0680c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NajP3X0d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/e23359d8-70a7-4a60-b842-4632c8a0680c.png" alt="frame_chrome_mac_light - 2021-12-16T143829.494.png" width="880" height="774"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's open up the Cube GraphiQL interface and run this same query with GraphQL. You can &lt;a href="https://cube.dev/docs/backend/graphql/"&gt;read more about the GraphQL API in our docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here's what the GraphQL query looks like for the example above.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sRA-bEtg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/efd2ca84-0c97-4118-8743-96b6066a3830.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sRA-bEtg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/efd2ca84-0c97-4118-8743-96b6066a3830.png" alt="frame_chrome_mac_light - 2021-12-16T143831.756.png" width="880" height="774"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CubeQuery&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;cube&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orderBy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;desc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;createdAt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running this query in GraphiQL will return the values just like in the playground. Now we're done with the setup, let's move on to some more complex queries.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-analytical-graphql-queries"&gt;
  &lt;/a&gt;
  Running Analytical GraphQL Queries
&lt;/h3&gt;

&lt;p&gt;Lets add a &lt;code&gt;where&lt;/code&gt; clause with a time dimension to the GraphQL query.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CubeQuery&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;cube&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;inDateRange&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"This year"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orderBy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;desc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;createdAt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running this query in GraphiQL will return this result set.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z176mDwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/66776d34-964a-4956-8148-77ba785fec95.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z176mDwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/66776d34-964a-4956-8148-77ba785fec95.png" alt="frame_chrome_mac_light - 2021-12-16T143833.925.png" width="880" height="774"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also want to run another query with only completed order statuses.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CubeQuery&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;cube&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"completed"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;inDateRange&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"This year"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orderBy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;desc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;createdAt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w5mz4MBI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/2965b57a-2d0a-4d28-95a9-c8d03e5e9afc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w5mz4MBI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/2965b57a-2d0a-4d28-95a9-c8d03e5e9afc.png" alt="frame_chrome_mac_light - 2021-12-16T143836.210.png" width="880" height="774"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These queries will be perfect for building my metrics dashboard. Next, we need to build an app to display the metrics.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#visualize-postgres-data-with-graphql"&gt;
  &lt;/a&gt;
  Visualize Postgres Data with GraphQL
&lt;/h3&gt;

&lt;p&gt;I'll start by building a React app and using Chart.js to display the metrics.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app dashboard-app
&lt;span class="nb"&gt;cd &lt;/span&gt;dashboard-app
yarn add @apollo/client graphql chart.js react-chartjs-2 apollo-link-http
npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give me a blank React app. I then add the Apollo client and all the required dependencies for building the charts.&lt;/p&gt;

&lt;p&gt;Next up, create the file &lt;strong&gt;&lt;code&gt;src/ApolloClient/client.js&lt;/code&gt;&lt;/strong&gt; and insert the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ApolloClient&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ApolloLink&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;InMemoryCache&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@apollo/client&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;HttpLink&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apollo-link-http&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://tan-rooster.aws-eu-central-1.cubecloudapp.dev/cubejs-api/graphql&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;httpLink&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HttpLink&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;appJWTToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2Mzk1Nzc2NTh9.ARCF3pyi9rpNAPEF2rBoP-EKjzfJQX1q3X7A3qCDoYc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;authMiddleware&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ApolloLink&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;appJWTToken&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setContext&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;appJWTToken&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; 
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clientWithCubeCloud&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ApolloClient&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;InMemoryCache&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;authMiddleware&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;httpLink&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure to edit your &lt;code&gt;uri&lt;/code&gt; and &lt;code&gt;appJWTToken&lt;/code&gt; to use your values from Cube Cloud. You can get those values from the Overview tab by clicking the &lt;code&gt;How to connect&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3pFsyB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/b499ee43-e261-4086-a8d4-0e7dfb4ed812.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3pFsyB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/b499ee43-e261-4086-a8d4-0e7dfb4ed812.png" alt="frame_chrome_mac_light - 2021-12-16T143824.985.png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you have to make the Apollo client available to the rest of your app. Update your &lt;strong&gt;&lt;code&gt;src/index.js&lt;/code&gt;&lt;/strong&gt; to look as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./index.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;reportWebVitals&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./reportWebVitals&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./ApolloClient/client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ApolloProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@apollo/client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ApolloProvider&lt;/span&gt; &lt;span class="na"&gt;client&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ApolloProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// If you want to start measuring performance in your app, pass a function&lt;/span&gt;
&lt;span class="c1"&gt;// to log results (for example: reportWebVitals(console.log))&lt;/span&gt;
&lt;span class="c1"&gt;// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals&lt;/span&gt;
&lt;span class="nx"&gt;reportWebVitals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nice! Now you can move on to create the chart component, and then call the GraphQL query from the chart itself.&lt;/p&gt;

&lt;p&gt;Create a folder called &lt;code&gt;src/Charts&lt;/code&gt; and create a file called &lt;code&gt;src/Charts/BarChart.js&lt;/code&gt;. Paste this code into it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;gql&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@apollo/client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getRandomColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;formatDate&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Helpers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Bar&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-chartjs-2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Chart&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;ChartJS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;BarElement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CategoryScale&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;LinearScale&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Tooltip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Legend&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;chart.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;ChartJS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;BarElement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CategoryScale&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;LinearScale&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Tooltip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Legend&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;COMPLETEDORDERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gql&lt;/span&gt;&lt;span class="s2"&gt;`
  query CubeQuery {
    cube(
      limit: 10
      where: {
        orders: {
          status: { equals: "completed" }
          createdAt: { inDateRange: "This year" }
        }
      }
    ) {
      orders(orderBy: { count: desc }) {
        count
        status
        createdAt {
          day
        }
      }
    }
  }
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GenerateChart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;COMPLETEDORDERS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;loading&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;chartData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Daily Completed Orders in 2021&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;datasets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cube&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;formatDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
          &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;getRandomColor&lt;/span&gt;&lt;span class="p"&gt;()],&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Bar&lt;/span&gt;
      &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;chartData&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;BarChart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;10px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;paddingTop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;65px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;10px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;textAlign&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Bar Chart
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;10px 100px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;10px 100px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GenerateChart&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BarChart&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll also need to create a file called &lt;code&gt;src/Charts/Helpers.js&lt;/code&gt;. Paste this code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getRandomColor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hexToRgbA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^#&lt;/span&gt;&lt;span class="se"&gt;([&lt;/span&gt;&lt;span class="sr"&gt;A-Fa-f0-9&lt;/span&gt;&lt;span class="se"&gt;]{3}){1,2}&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
        &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rgba(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;,0.5)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bad Hex&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;letters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0123456789ABCDEF&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;letters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;hexToRgbA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;formatDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="nx"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMonth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="nx"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFullYear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
      &lt;span class="nx"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
      &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;getRandomColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;formatDate&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you're done with that, you need to create a file called &lt;code&gt;src/Charts/index.js&lt;/code&gt; to export the chart.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BarChart&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./BarChart&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, edit the &lt;code&gt;App.js&lt;/code&gt; and import the chart.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;BarChart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Charts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BarChart&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Go back to the browser where the React app is running. You should see this fancy chart pop up!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_R6xRNSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/8a8507fb-4c19-4069-a178-9bd1036f7e06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_R6xRNSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/8a8507fb-4c19-4069-a178-9bd1036f7e06.png" alt="frame_chrome_mac_light - 2021-12-16T143822.307.png" width="880" height="661"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As of today, this means you can use Cube's GraphQL API for building any type of metrics dashboard. Alongside the REST API and SQL API, you have an entire toolset at your disposal to choose from.&lt;/p&gt;

&lt;p&gt;But I'm not done here yet. Let's add some role-based access control, also called RBAC.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-rolebased-access-control-with-jwt-tokens"&gt;
  &lt;/a&gt;
  Add Role-Based Access Control with JWT Tokens
&lt;/h3&gt;

&lt;p&gt;You get &lt;a href="https://cube.dev/docs/security/context#top"&gt;multi-tenancy and RBAC in Cube&lt;/a&gt; out of the box. Let's add a security context in the Apollo client to enable RBAC.&lt;/p&gt;

&lt;p&gt;Just like with the REST API you can add security and RBAC with JWT tokens. First open up the Env vars tab in your Cube Cloud deployment settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PdCZYUJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/c96be748-74ef-453d-ba38-f0019cd23345.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PdCZYUJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/c96be748-74ef-453d-ba38-f0019cd23345.png" alt="frame_chrome_mac_light - 2021-12-16T143827.204.png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find the &lt;code&gt;CUBEJS_API_SECRET&lt;/code&gt; environment variable and copy it. This is the API secret that secures your API. Take the value and create a JWT token with &lt;a href="http://jwt.io"&gt;jwt.io&lt;/a&gt; , make sure to add &lt;code&gt;{ "role": "admin" }&lt;/code&gt; to the payload.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PrtqpazC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/2b4bf733-fb93-4576-af03-8a28e400337e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PrtqpazC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/2b4bf733-fb93-4576-af03-8a28e400337e.png" alt="frame_chrome_mac_light - 2021-12-16T143840.773.png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can now copy the JWT token and open up the &lt;code&gt;src/ApolloClient/client.js&lt;/code&gt; file. Add the token value to the &lt;code&gt;appJWTToken&lt;/code&gt; variable. Here's what it should look like.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ApolloClient&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ApolloLink&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;InMemoryCache&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@apollo/client&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;HttpLink&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apollo-link-http&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:4000/cubejs-api/graphql&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;httpLink&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HttpLink&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;appJWTToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYWRtaW4ifQ.FUewE3jySlmMD3DnOeDaMPBqTqirLQeuRG_--O5oPNw&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;authMiddleware&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ApolloLink&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;appJWTToken&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setContext&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;appJWTToken&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; 
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clientWithJwt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ApolloClient&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;InMemoryCache&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;authMiddleware&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;httpLink&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, add the security context and RBAC to the &lt;code&gt;cube.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Cube.js configuration options: https://cube.dev/docs/config&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;queryRewrite&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;securityContext&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;securityContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;No role found in Security Context!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;securityContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;admin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;re not the Admin!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's what it looks like in Cube Cloud.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mbfL-J1f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/2d108149-e4bf-436f-bf61-ca0396daaa44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mbfL-J1f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/2d108149-e4bf-436f-bf61-ca0396daaa44.png" alt="frame_chrome_mac_light - 2021-12-16T143838.484.png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can add any particular logic you might want like RBAC, multi-tenancy, row-level access, and more.&lt;/p&gt;

&lt;p&gt;Now, jump back to the dashboard-app. Restart it, and voila, you've added RBAC. The end outcome is this lovely chart showing orders per day for the whole of 2021 that you can only access with the &lt;code&gt;admin&lt;/code&gt; role. If you remove the &lt;code&gt;appJWTToken&lt;/code&gt;, your dashboard-app won't be able to fetch data anymore.&lt;/p&gt;

&lt;p&gt;If you want to check out the source code in one place, here's the &lt;a href="https://github.com/cube-js/cube.js/tree/master/examples/graphql-api-metrics-dashboard"&gt;GitHub repo&lt;/a&gt;. And, you can also have a look at the &lt;a href="https://graphql-postgres-metrics-dashboard.netlify.app/"&gt;live preview here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_R6xRNSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/8a8507fb-4c19-4069-a178-9bd1036f7e06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_R6xRNSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/8a8507fb-4c19-4069-a178-9bd1036f7e06.png" alt="frame_chrome_mac_light - 2021-12-16T143822.307.png" width="880" height="661"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;In this tutorial, I wanted to show a step-by-step guide on how to use Cube's GraphQL API to build a metrics dashboard with data from a Postgres database.&lt;/p&gt;

&lt;p&gt;With Cube Cloud you get a metrics layer that integrates with every major data visualization library including GraphQL compatible tools like &lt;a href="https://www.chartjs.org/"&gt;Chart.js&lt;/a&gt; and &lt;a href="https://react-chartjs-2.netlify.app/"&gt;react-chartjs-2&lt;/a&gt;. On top of all that, it also comes with multi-tenancy support out-of-the-box. Among the different multi-tenancy options, you can enable tenant-based row-level security, role-based access, using multiple database instances, multiple schemas, and more.&lt;/p&gt;

&lt;p&gt;If you want to learn more about GraphQL with &lt;a href="https://cube.dev/"&gt;Cube&lt;/a&gt; check out &lt;a href="https://cube.dev/blog/introducing-the-cube-graphql-api/"&gt;our announcement&lt;/a&gt; that explains how we added the GraphQL API to Cube.&lt;/p&gt;

&lt;p&gt;You can &lt;a href="https://cube.dev/cloud"&gt;register for Cube Cloud&lt;/a&gt; right away if you want to have a look!&lt;/p&gt;

&lt;p&gt;I'd love to hear your feedback about using GraphQL with Cube Cloud in the Cube Community Slack. &lt;a href="https://slack.cube.dev/"&gt;Click here to join&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Until next time, stay curious, and have fun coding. Also, feel free to &lt;a href="https://github.com/cube-js/cube.js"&gt;leave Cube a ⭐ on GitHub&lt;/a&gt; if you liked this article. ✌️&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>postgres</category>
      <category>analytics</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 17th December 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 17 Dec 2021 14:51:26 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-17th-december-2021-2fmn</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-17th-december-2021-2fmn</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-zod"&gt;
  &lt;/a&gt;
  1. Zod
&lt;/h3&gt;

&lt;p&gt;TypeScript-first schema validation with static type inference. Zod is designed to be as developer-friendly as possible. The goal is to eliminate duplicative type declarations. With Zod, you declare a validator once and Zod will automatically infer the static TypeScript type.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/colinhacks"&gt;
        colinhacks
      &lt;/a&gt; / &lt;a href="https://github.com/colinhacks/zod"&gt;
        zod
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      TypeScript-first schema validation with static type inference
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/colinhacks/zodlogo.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LCTdtFFl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/colinhacks/zodlogo.svg" width="200px"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;h1&gt;
Zod&lt;/h1&gt;
&lt;p&gt;
&lt;a href="https://twitter.com/colinhacks" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5863dad4e2ab44c738b4f25ea58f564f18ee0b8496d68e76cf5ea377bfdbad76/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6372656174656425323062792d40636f6c696e6861636b732d3442424141422e737667" alt="Created by Colin McDonnell"&gt;&lt;/a&gt;
&lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d1a9e2843b5c88866a515b9fce3089de6e783f468bcaa0da0421b781a724ee04/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f636f6c696e6861636b732f7a6f64" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/zod" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1bd2b7c668d5f20c36e05848e165ea709cb150ea2d35ea3c22c86a40474cc5db/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f7a6f642e737667" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/zod" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8119d9857d75c4db7c4028dd99dc6fcb1e7ad2dd0cb0b39ad898687b495cee8c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f636f6c696e6861636b732f7a6f64" alt="stars"&gt;&lt;/a&gt;
&lt;a href="https://github.com/colinhacks/zod./src/__tests__"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o7Pzp3Qy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/colinhacks/zod./coverage.svg" alt="coverage"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
by &lt;a href="https://twitter.com/colinhacks" rel="nofollow"&gt;@colinhacks&lt;/a&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hi! Colin here, creator of Zod. I hope you find it easy to use and powerful enough for all your use cases. If you have any issues or suggestions, please &lt;a href="https://github.com/colinhacks/zod/issues/new"&gt;open an issue&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;If you like typesafety, check out my other library &lt;a href="https://trpc.io" rel="nofollow"&gt;tRPC&lt;/a&gt;. It works in concert with Zod to provide a seamless way to build end-to-end typesafe APIs without GraphQL or code generation — just TypeScript.&lt;/p&gt;
&lt;p&gt;Colin (AKA &lt;a href="https://twitter.com/colinhacks" rel="nofollow"&gt;@colinhacks&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;



&lt;p&gt;This docs have been translated into &lt;a href="https://github.com/colinhacks/zod./README_ZH.md"&gt;Chinese&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
Table of contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#what-is-zod"&gt;What is Zod&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#ecosystem"&gt;Ecosystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#basic-usage"&gt;Basic usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/colinhacks/zod#defining-schemas"&gt;Defining schemas&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#primitives"&gt;Primitives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#literals"&gt;Literals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#strings"&gt;Strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#numbers"&gt;Numbers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#booleans"&gt;Booleans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/colinhacks/zod#enums"&gt;Enums&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#zod-enums"&gt;Zod enums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#native-enums"&gt;Native enums&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#optionals"&gt;Optionals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#nullables"&gt;Nullables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/colinhacks/zod#objects"&gt;Objects&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#shape"&gt;.shape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#extend"&gt;.extend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#merge"&gt;.merge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#pickomit"&gt;.pick/.omit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#partial"&gt;.partial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#deepPartial"&gt;.deepPartial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#passthrough"&gt;.passthrough&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#strict"&gt;.strict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#strip"&gt;.strip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#catchall"&gt;.catchall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/colinhacks/zod#arrays"&gt;Arrays&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#element"&gt;.element&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#nonempty"&gt;.nonempty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#minmaxlength"&gt;.min/.max/.length&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#tuples"&gt;Tuples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#records"&gt;Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#maps"&gt;Maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#sets"&gt;Sets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#unions"&gt;Unions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/colinhacks/zod#recursive-types"&gt;Recursive types&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#json-type"&gt;JSON type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#cyclical-objects"&gt;Cyclical data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#promises"&gt;Promises&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#instanceof"&gt;Instanceof&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#function-schemas"&gt;Function schemas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#preprocess"&gt;Preprocess&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/colinhacks/zod#zodtype-methods-and-properties"&gt;Schema methods&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#parse"&gt;.parse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#parseasync"&gt;.parseAsync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#safeparse"&gt;.safeParse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#safeparseasync"&gt;.safeParseAsync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#refine"&gt;.refine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#superRefine"&gt;.superRefine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#transform"&gt;.transform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#default"&gt;.default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colinhacks/zod#optional"&gt;.optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/colinhacks/zod"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-promisify"&gt;
  &lt;/a&gt;
  2. Promisify
&lt;/h3&gt;

&lt;p&gt;Promisify an entire class or object.This module leverages es6 Proxy and Reflect to promisify every function in an object or class instance.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wraithgar"&gt;
        wraithgar
      &lt;/a&gt; / &lt;a href="https://github.com/wraithgar/gar-promisify"&gt;
        gar-promisify
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Promisify an entire class or object
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a class="mentioned-user" href="https://dev.to/gar"&gt;@gar&lt;/a&gt;/promisify&lt;/h1&gt;
&lt;h3&gt;
Promisify an entire object or class instance&lt;/h3&gt;
&lt;p&gt;This module leverages es6 Proxy and Reflect to promisify every function in an
object or class instance.&lt;/p&gt;
&lt;p&gt;It assumes the callback that the function is expecting is the last
parameter, and that it is an error-first callback with only one value
i.e. &lt;code&gt;(err, value) =&amp;gt; ...&lt;/code&gt;. This mirrors node's &lt;code&gt;util.promisify&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;In order that you can use it as a one-stop-shop for all your promisify
needs, you can also pass it a function.  That function will be
promisified as normal using node's built-in &lt;code&gt;util.promisify&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nodejs.org/api/util.html#util_custom_promisified_functions" rel="nofollow"&gt;node's custom promisified
functions&lt;/a&gt;
will also be mirrored, further allowing this to be a drop-in replacement
for the built-in &lt;code&gt;util.promisify&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
Examples&lt;/h3&gt;
&lt;p&gt;Promisify an entire object&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;promisify&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'&lt;a class="mentioned-user" href="https://dev.to/gar"&gt;@gar&lt;/a&gt;/promisify'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-v"&gt;Foo&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-en"&gt;constructor&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;attr&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-smi"&gt;this&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;attr&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;attr&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;

  &lt;span class="pl-en"&gt;double&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;input&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;cb&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-s1"&gt;cb&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wraithgar/gar-promisify"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-fast-node-manager-fnm"&gt;
  &lt;/a&gt;
  3. Fast Node Manager (fnm)
&lt;/h3&gt;

&lt;p&gt;Fast and simple Node.js version manager, built in Rust&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Schniz"&gt;
        Schniz
      &lt;/a&gt; / &lt;a href="https://github.com/Schniz/fnm"&gt;
        fnm
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚀 Fast and simple Node.js version manager, built in Rust
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
  Fast Node Manager (&lt;code&gt;fnm&lt;/code&gt;)
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9956f1520763e5939e201df39f5553f1f3f81b158f523f7322a91570b1c64808/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f5363686e697a2f666e6d2f746f74616c2e7376673f7374796c653d666c6174"&gt;&lt;img alt="Amount of downloads" src="https://camo.githubusercontent.com/9956f1520763e5939e201df39f5553f1f3f81b158f523f7322a91570b1c64808/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f5363686e697a2f666e6d2f746f74616c2e7376673f7374796c653d666c6174"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/Schniz/fnm/actions"&gt;&lt;img src="https://camo.githubusercontent.com/5e6e5096e30298a37be9b6308dd74421898da83ed0b53e18cee0a1e6bd6449f9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f5363686e697a2f666e6d2f527573742f6d61737465723f6c6162656c3d776f726b666c6f77" alt="GitHub Actions workflow status"&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;🚀 Fast and simple Node.js version manager, built in Rust&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/Schniz/fnm./docs/fnm.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U6rFjVEN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Schniz/fnm./docs/fnm.svg" alt="Blazing fast!"&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;h2&gt;
Features&lt;/h2&gt;
&lt;p&gt;🌎 Cross-platform support (macOS, Windows, Linux)&lt;/p&gt;
&lt;p&gt;✨ Single file, easy installation, instant startup&lt;/p&gt;
&lt;p&gt;🚀 Built with speed in mind&lt;/p&gt;
&lt;p&gt;🤔 Works with &lt;code&gt;.node-version&lt;/code&gt; and &lt;code&gt;.nvmrc&lt;/code&gt; files&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;h3&gt;
Using a script (macOS/Linux)&lt;/h3&gt;
&lt;p&gt;For &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;zsh&lt;/code&gt; and &lt;code&gt;fish&lt;/code&gt; shells, there's an &lt;a href="https://github.com/Schniz/fnm./.ci/install.sh"&gt;automatic installation script&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;curl -fsSL https://fnm.vercel.app/install &lt;span class="pl-k"&gt;|&lt;/span&gt; bash&lt;/pre&gt;

&lt;/div&gt;
&lt;h4&gt;
Upgrade&lt;/h4&gt;
&lt;p&gt;On macOS, it is as simple as &lt;code&gt;brew upgrade fnm&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On other operating systems, upgrading &lt;code&gt;fnm&lt;/code&gt; is almost the same as installing it. To prevent duplication in your shell config file add &lt;code&gt;--skip-shell&lt;/code&gt; to install command.&lt;/p&gt;
&lt;h4&gt;
Parameters&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;--install-dir&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set a custom directory for fnm to be installed. The default is &lt;code&gt;$HOME/.fnm&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--skip-shell&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Skip appending shell specific loader to shell config file, based on the current user shell, defined in &lt;code&gt;$SHELL&lt;/code&gt;. e.g. for Bash, &lt;code&gt;$HOME/.bashrc&lt;/code&gt;. &lt;code&gt;$HOME/.zshrc&lt;/code&gt; for Zsh. For Fish…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Schniz/fnm"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-react-link-preview"&gt;
  &lt;/a&gt;
  4. React Link Preview
&lt;/h3&gt;

&lt;p&gt;A React library that generates beautiful previews for your links.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Dhaiwat10"&gt;
        Dhaiwat10
      &lt;/a&gt; / &lt;a href="https://github.com/Dhaiwat10/react-link-preview"&gt;
        react-link-preview
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A React library that generates beautiful previews for your links.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
React Link Preview&lt;/h1&gt;
&lt;p&gt;A React component that renders beautiful, fully-customizable link previews.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/Dhaiwat10/react-link-previewdemo.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DRuaA6Fo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/Dhaiwat10/react-link-previewdemo.gif" alt="Demo"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/intent/follow?screen_name=dhaiwat10" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/4af83176607e5fc4931dac0144ac140a9c017699a58bd27f42c7bec87127cd97/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f6468616977617431302e7376673f6c6162656c3d466f6c6c6f7725323040646861697761743130" alt="Follow @dhaiwat10"&gt;
&lt;/a&gt;
&lt;a href="https://badge.fury.io/js/%40dhaiwat10%2Freact-link-preview" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b144b741a9dd2cb6a99d42a9802a0fa3a8859a7180e5542bc5ed89bf52e0f91f/68747470733a2f2f62616467652e667572792e696f2f6a732f25343064686169776174313025324672656163742d6c696e6b2d707265766965772e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6c727b7c45a75a798262a6fe3753e636e1aa584a09f1171d2c11e0a479b7a6d5/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f406468616977617431302f72656163742d6c696e6b2d70726576696577"&gt;&lt;img src="https://camo.githubusercontent.com/6c727b7c45a75a798262a6fe3753e636e1aa584a09f1171d2c11e0a479b7a6d5/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f406468616977617431302f72656163742d6c696e6b2d70726576696577" alt="package downloads"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5b29dde9f7acef61ecdee0bb48e4bd79f3db0fef8f58351e7937c0cea3e42936/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6468616977617431302f72656163742d6c696e6b2d707265766965772f4349"&gt;&lt;img src="https://camo.githubusercontent.com/5b29dde9f7acef61ecdee0bb48e4bd79f3db0fef8f58351e7937c0cea3e42936/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6468616977617431302f72656163742d6c696e6b2d707265766965772f4349" alt="CI"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codesandbox.io/s/rlp-demo-90e1x?file=/src/App.js" rel="nofollow"&gt;Demo&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
How to use&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Install the package:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yarn add @dhaiwat10/react-link-preview&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install @dhaiwat10/react-link-preview&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Import and render the preview:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;LinkPreview&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;a class="mentioned-user" href="https://dev.to/dhaiwat10"&gt;@dhaiwat10&lt;/a&gt;/react-link-preview'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-v"&gt;Home&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;LinkPreview&lt;/span&gt; &lt;span class="pl-c1"&gt;url&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;'https://www.youtube.com/watch?v=dQw4w9WgXcQ'&lt;/span&gt; &lt;span class="pl-c1"&gt;width&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;'400px'&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;If the component renders nothing, it means that no metadata could be scraped for the URL. Provide a &lt;code&gt;fallback&lt;/code&gt; component if you don't want to render &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;
Important&lt;/h2&gt;
&lt;p&gt;This package uses a Heroku &lt;a href="https://github.com/dhaiwat10/rlp-proxy"&gt;proxy (open-source)&lt;/a&gt; to get around CORS issues. The public proxy receives a lot of traffic (+ there is a rate limit) and is not recommended for production use.&lt;/p&gt;
&lt;h2&gt;
Recommended workflow (for production)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Please &lt;a href="https://github.com/dhaiwat10/rlp-proxy"&gt;fork the proxy repo&lt;/a&gt; and host your own copy of it.&lt;/li&gt;
&lt;li&gt;You can then use the &lt;code&gt;customFetcher&lt;/code&gt; prop to pass a fetcher function that fetches…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Dhaiwat10/react-link-preview"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-sync-contribution-graph"&gt;
  &lt;/a&gt;
  5. Sync Contribution Graph
&lt;/h3&gt;

&lt;p&gt;Generates empty commits to match contributions from other public GitHub accounts.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/kefimochi"&gt;
        kefimochi
      &lt;/a&gt; / &lt;a href="https://github.com/kefimochi/sync-contribution-graph"&gt;
        sync-contribution-graph
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Generates empty commits to match contributions from other public GitHub accounts.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
  Sync Contribution Graph
&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/kefimochi/sync-contribution-graphimg/cover-photo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EnvlILDK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/kefimochi/sync-contribution-graphimg/cover-photo.png" alt="GitHub Contributions Graph full squares that have various shades of green"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href="https://twitter.com/kefimochi" rel="nofollow"&gt;
    &lt;img alt="Twitter: kefimochi" src="https://camo.githubusercontent.com/638809053e59b1ec5adcd6d621227aace19864ed6666e580d412330c2aef0729/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f6b6566696d6f6368692e7376673f7374796c653d736f6369616c"&gt;
&lt;/a&gt;
&lt;h2&gt;
How to Use 🚀
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/kefimochi/sync-contribution-graph/generate"&gt;Use this repo as a template&lt;/a&gt; to create a new repo, and provide a name.&lt;/li&gt;
&lt;li&gt;Clone your new repo locally.  &lt;code&gt;cd&lt;/code&gt; into the newly created directory.&lt;/li&gt;
&lt;li&gt;It requires NodeJS and &lt;code&gt;npm&lt;/code&gt; (or &lt;code&gt;yarn&lt;/code&gt;) to be installed on your machine. Run &lt;code&gt;npm i&lt;/code&gt; or &lt;code&gt;yarn install&lt;/code&gt; in your terminal.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;npm start&lt;/code&gt; or &lt;code&gt;yarn start&lt;/code&gt; in order to trigger a series of terminal prompts that will help with configuration
&lt;blockquote&gt;
&lt;p&gt;On Windows, please run it from Git Bash.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you change your mind about these commits later, you can delete the repository and they'll disappear from your contribution graph.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/kefimochi/sync-contribution-graphimg/usage.gif"&gt;&lt;img height="400px" width="auto" src="https://res.cloudinary.com/practicaldev/image/fetch/s--nTmjrUrA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/kefimochi/sync-contribution-graphimg/usage.gif" alt="Terminal walkthrough of various prompts that help with configuration."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Requested Information 🌳
&lt;/h2&gt;


&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;br&gt;
&lt;thead&gt;
&lt;br&gt;
&lt;tr&gt;
&lt;br&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;br&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;br&gt;
&lt;th&gt;Default value&lt;/th&gt;
&lt;br&gt;
&lt;/tr&gt;
&lt;br&gt;
&lt;/thead&gt;
&lt;br&gt;
&lt;tbody&gt;
&lt;br&gt;
&lt;tr&gt;
&lt;br&gt;
&lt;td&gt;&lt;code&gt;username&lt;/code&gt;&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;The username whose graph contributions you'd like to copy.&lt;/td&gt;
&lt;br&gt;
&lt;/tr&gt;
&lt;br&gt;
&lt;tr&gt;
&lt;br&gt;
&lt;td&gt;&lt;code&gt;year&lt;/code&gt;&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;Year that you would like to sync with provided &lt;code&gt;username&lt;/code&gt;. Currently doesn't support multiple years.&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;Current year&lt;/td&gt;
&lt;br&gt;
&lt;/tr&gt;
&lt;br&gt;
&lt;tr&gt;
&lt;br&gt;
&lt;td&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;Let's the code know whether to simply generate &lt;/td&gt;
&lt;br&gt;
&lt;/tr&gt;
&lt;br&gt;
&lt;/tbody&gt;
&lt;br&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/kefimochi/sync-contribution-graph"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#6-tinyspy"&gt;
  &lt;/a&gt;
  6. tinyspy
&lt;/h3&gt;

&lt;p&gt;A 4KB package for minimal and easy testing with no dependencies. This package was created for having a tiny spy library to use in vitest, but it can also be used in jest and other test environments.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Aslemammad"&gt;
        Aslemammad
      &lt;/a&gt; / &lt;a href="https://github.com/Aslemammad/tinyspy"&gt;
        tinyspy
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🕵🏻‍♂️ minimal fork of nanospy, with more features 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
tinyspy&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;minimal fork of nanospy, with more features 🕵🏻‍♂️&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A &lt;code&gt;4KB&lt;/code&gt; package for minimal and easy testing with no dependencies
This package was created for having a tiny spy library to use in &lt;code&gt;vitest&lt;/code&gt;, but it can also be used in &lt;code&gt;jest&lt;/code&gt; and other test environments.&lt;/p&gt;
&lt;h2&gt;
Installing&lt;/h2&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;// with npm
npm install -D tinyspy

// with pnpm
pnpm install -D tinyspy

// with yarn
yarn install -D tinyspy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Warning! Does not support ESM mocking. You can use &lt;code&gt;tinyspy&lt;/code&gt; with &lt;code&gt;vitest&lt;/code&gt;, who performs additional transformations to make ESM mocking work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
spy&lt;/h3&gt;
&lt;p&gt;Simplest usage would be:&lt;/p&gt;
&lt;div class="highlight highlight-source-ts position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;n&lt;/span&gt;: &lt;span class="pl-smi"&gt;string&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s1"&gt;n&lt;/span&gt; &lt;span class="pl-c1"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;'!'&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;spied&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;spy&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;fn&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-en"&gt;spied&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'a'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;

&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;spied&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;called&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c"&gt;// true&lt;/span&gt;
&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;spied&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;callCount&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c"&gt;// 1&lt;/span&gt;
&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;spied&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;calls&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c"&gt;// [['a']]&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Aslemammad/tinyspy"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#7-amazing-developers-on-youtube"&gt;
  &lt;/a&gt;
  7. Amazing Developers On YouTube
&lt;/h3&gt;

&lt;p&gt;A curated list of amazing development channels on YouTube. These include web development, back-end development, front-end development live coders and more!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ErikCH"&gt;
        ErikCH
      &lt;/a&gt; / &lt;a href="https://github.com/ErikCH/DevYouTubeList"&gt;
        DevYouTubeList
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      List of Development YouTube Channels
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Amazing Developers On YouTube&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;A curated list of amazing development channels on YouTube. These include web development, back-end development, front-end development live coders and more!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ErikCH/DevYouTubeList#amazing-developers-of-youtube"&gt;Amazing Developers Of YouTube&lt;/a&gt;
&lt;h3&gt;
English&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#tutorial"&gt;Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#informational"&gt;Informational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#live-coding"&gt;Live Coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#game-development"&gt;Game Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#software-entertainment"&gt;Software Entertainment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#competitive-programming-and-interview-preparation"&gt;Competitive Programming &amp;amp; Interview Preparation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#artificial-intelligence-and-machine-learning"&gt;Artificial Intelligence and Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#up-and-coming"&gt;Up and coming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#retired"&gt;Retired&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Non English&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#russian"&gt;Russian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#hindi"&gt;Hindi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#turkish"&gt;Turkish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#italian"&gt;Italian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#bengali"&gt;Bengali&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#brazilian"&gt;Brazilian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#korean"&gt;Korean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#chinese"&gt;Chinese&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#hebrew"&gt;Hebrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#french"&gt;French&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#farsi"&gt;Farsi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#spanish"&gt;Spanish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#catalan"&gt;Catalan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#indonesian"&gt;Indonesian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#arabic"&gt;Arabic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#german"&gt;German&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#polish"&gt;Polish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#somali"&gt;Somali&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ErikCH/DevYouTubeList#vietnam"&gt;Vietnam&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
Resources&lt;/h1&gt;
&lt;h3&gt;
Tutorial&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;These channels focus on tutorials and code along.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://erik.video" rel="nofollow"&gt;Program With Erik&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ" rel="nofollow"&gt;freeCodeCamp.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/programmingwithmosh" rel="nofollow"&gt;Programming with Mosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/TechGuyWeb" rel="nofollow"&gt;Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/derekbanas" rel="nofollow"&gt;Derek Banas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/CalebTheVideoMaker2" rel="nofollow"&gt;Caleb Curry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg" rel="nofollow"&gt;The Net Ninja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCcabW7890RKJzL968QWEykA" rel="nofollow"&gt;CS50&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/noobtoprofessional" rel="nofollow"&gt;Chris Hawkes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/learncodeacademy" rel="nofollow"&gt;LearnCode.academy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/elithecomputerguy" rel="nofollow"&gt;Eli the Computer Guy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCSJbGtTlrDami-tDGPUV9-w/featured" rel="nofollow"&gt;Academind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/LevelUpTuts" rel="nofollow"&gt;Level Up Tuts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/phpacademy" rel="nofollow"&gt;Codecourse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PL8dPuuaLjXtNlUrzyH5r6jN9ulIgZBpdo&amp;amp;app=desktop" rel="nofollow"&gt;Crash Course Computer Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/DevTipsForDesigners" rel="nofollow"&gt;DevTips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCB12jjYsYv-eipCvBDcMbXw" rel="nofollow"&gt;Tech Primers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/wesbos" rel="nofollow"&gt;Wes Bos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UClb90NQQcskPUGDIXsQEz5Q" rel="nofollow"&gt;Dev Ed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCYJ9O6X1oFt7YGXpfRwrcWg" rel="nofollow"&gt;Paul Halliday&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCtb40EQj2inp8zuaQlLx3iQ" rel="nofollow"&gt;Andre Madarang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/hiteshitube" rel="nofollow"&gt;Hitesh Choudhary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCX_b3NNQN5bzExm-22-NVVg" rel="nofollow"&gt;Jason Weimann&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCsBjURrPoezykLs9EqgamOA" rel="nofollow"&gt;Fireship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/99baddawg" rel="nofollow"&gt;Ben Awad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCtxCXg-UvSnTKPOzLH4wJaQ" rel="nofollow"&gt;Coding Tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC4JX40jDee_tINbkjycV4Sg" rel="nofollow"&gt;Tech With Tim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/schafer5" rel="nofollow"&gt;Corey Schafer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/mmumshad" rel="nofollow"&gt;KodeKloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCbwXnUipZsLfUckBPsC7Jog" rel="nofollow"&gt;Online Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/KepowOb" rel="nofollow"&gt;Kevin Powell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/realcsstricks" rel="nofollow"&gt;Chris Coyier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/TheCharmefis" rel="nofollow"&gt;mmtuts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/channel/UCFbNIlppjAuEX4znoulh0Cw" rel="nofollow"&gt;Web&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ErikCH/DevYouTubeList"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-bignumberjs"&gt;
  &lt;/a&gt;
  8. bignumber.js
&lt;/h3&gt;

&lt;p&gt;A JavaScript library for arbitrary-precision decimal and non-decimal arithmetic&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/MikeMcl"&gt;
        MikeMcl
      &lt;/a&gt; / &lt;a href="https://github.com/MikeMcl/bignumber.js"&gt;
        bignumber.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A JavaScript library for arbitrary-precision decimal and non-decimal arithmetic 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/MikeMcl/bignumber.js/gh-pages/bignumberjs.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---KDmj-P0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/MikeMcl/bignumber.js/gh-pages/bignumberjs.png" alt="bignumber.js"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A JavaScript library for arbitrary-precision decimal and non-decimal arithmetic.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/bignumber.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/94878fda3574326ff60c444179cdbb220f5e4e0cb0f116ac72707a417a3016b4/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6269676e756d6265722e6a732e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/bignumber.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec438661e92950de20658e4fecd00368d74ba8ef9bb9bcc95b131602bf9e9c3c/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f6269676e756d6265722e6a73" alt="npm downloads"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Integers and decimals&lt;/li&gt;
&lt;li&gt;Simple API but full-featured&lt;/li&gt;
&lt;li&gt;Faster, smaller, and perhaps easier to use than JavaScript versions of Java's BigDecimal&lt;/li&gt;
&lt;li&gt;8 KB minified and gzipped&lt;/li&gt;
&lt;li&gt;Replicates the &lt;code&gt;toExponential&lt;/code&gt;, &lt;code&gt;toFixed&lt;/code&gt;, &lt;code&gt;toPrecision&lt;/code&gt; and &lt;code&gt;toString&lt;/code&gt; methods of JavaScript's Number type&lt;/li&gt;
&lt;li&gt;Includes a &lt;code&gt;toFraction&lt;/code&gt; and a correctly-rounded &lt;code&gt;squareRoot&lt;/code&gt; method&lt;/li&gt;
&lt;li&gt;Supports cryptographically-secure pseudo-random number generation&lt;/li&gt;
&lt;li&gt;No dependencies&lt;/li&gt;
&lt;li&gt;Wide platform compatibility: uses JavaScript 1.5 (ECMAScript 3) features only&lt;/li&gt;
&lt;li&gt;Comprehensive &lt;a href="http://mikemcl.github.io/bignumber.js/" rel="nofollow"&gt;documentation&lt;/a&gt; and test set&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/MikeMcl/bignumber.js/gh-pages/API.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QSwnPI4---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/MikeMcl/bignumber.js/gh-pages/API.png" alt="API"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If a smaller and simpler library is required see &lt;a href="https://github.com/MikeMcl/big.js/"&gt;big.js&lt;/a&gt;
It's less than half the size but only works with decimal numbers and only has half the methods
It also has fewer configuration options than this library, and does not allow &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;Infinity&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="https://github.com/MikeMcl/decimal.js/"&gt;decimal.js&lt;/a&gt;, which among other things adds support for non-integer powers, and performs all operations to a specified number of significant digits.&lt;/p&gt;
&lt;h2&gt;
Load&lt;/h2&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/MikeMcl/bignumber.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-capsize"&gt;
  &lt;/a&gt;
  9. Capsize
&lt;/h3&gt;

&lt;p&gt;Capsize makes the sizing and layout of text as predictable as every other element on the screen. Using font metadata, text can now be sized according to the height of its capital letters while trimming the space above capital letters and below the baseline.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/seek-oss"&gt;
        seek-oss
      &lt;/a&gt; / &lt;a href="https://github.com/seek-oss/capsize"&gt;
        capsize
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Flipping how we define typography in CSS.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/seek-oss/capsize/HEAD/images/capsize-header.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nHjxgTyI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/seek-oss/capsize/HEAD/images/capsize-header.png" alt="Capsize" title="Capsize" width="443px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;blockquote&gt;
&lt;p&gt;Capsize makes the sizing and layout of text as predictable as every other element on the screen.&lt;/p&gt;
&lt;p&gt;Using font metadata, text can now be sized according to the height of its capital letters while trimming the space above capital letters and below the baseline.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install @capsizecss/core&lt;/pre&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/seek-oss/capsize#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/seek-oss/capsize#createstyleobject"&gt;createStyleObject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seek-oss/capsize#createstylestring"&gt;createStyleString&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/seek-oss/capsize#options"&gt;Options&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/seek-oss/capsize#text-size"&gt;Text size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seek-oss/capsize#line-height"&gt;Line height&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seek-oss/capsize#font-metrics"&gt;Font Metrics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/seek-oss/capsize#core"&gt;Core&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/seek-oss/capsize#precomputevalues"&gt;precomputeValues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seek-oss/capsize#getcapheight"&gt;getCapHeight&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/seek-oss/capsize#integrations"&gt;Integrations&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/seek-oss/capsizepackages/vanilla-extract/README.md"&gt;vanilla-extract&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;h3&gt;
&lt;code&gt;createStyleObject&lt;/code&gt;
&lt;/h3&gt;
&lt;p&gt;Returns a CSS-in-JS style object.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Import &lt;code&gt;createStyleObject&lt;/code&gt; passing the relevant &lt;a href="https://github.com/seek-oss/capsize#options"&gt;options&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-ts position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;createStyleObject&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'@capsizecss/core'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;capsizeStyles&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;createStyleObject&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;fontSize&lt;/span&gt;: &lt;span class="pl-c1"&gt;16&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;leading&lt;/span&gt;: &lt;span class="pl-c1"&gt;24&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;fontMetrics&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;capHeight&lt;/span&gt;: &lt;span class="pl-c1"&gt;700&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;ascent&lt;/span&gt;: &lt;span class="pl-c1"&gt;1058&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;descent&lt;/span&gt;: &lt;span class="pl-c1"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;291&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;lineGap&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;unitsPerEm&lt;/span&gt;: &lt;span class="pl-c1"&gt;1000&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Note: It is recommended that you install the &lt;a href="https://github.com/seek-oss/capsizepackages/metrics/README.md"&gt;@capsizecss/metrics&lt;/a&gt; package and import the metrics from there:&lt;/p&gt;
&lt;div class="highlight highlight-source-ts position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;createStyleObject&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'@capsizecss/core'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/seek-oss/capsize"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-verdaccio"&gt;
  &lt;/a&gt;
  10. Verdaccio
&lt;/h3&gt;

&lt;p&gt;Verdaccio is a simple, zero-config-required local private npm registry. No need for an entire database just to get started! Verdaccio comes out of the box with its own tiny database, and the ability to proxy other registries (eg. npmjs.org), caching the downloaded modules along the way. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/verdaccio"&gt;
        verdaccio
      &lt;/a&gt; / &lt;a href="https://github.com/verdaccio/verdaccio"&gt;
        verdaccio
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📦🔐 A lightweight Node.js private proxy registry
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9ea80fc64c8c54ea0d003f74fedbe2a90beaddac619f4a15d0cbdf7d43ce9cb6/68747470733a2f2f63646e2e76657264616363696f2e6465762f726561646d652f76657264616363696f4032782e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/9ea80fc64c8c54ea0d003f74fedbe2a90beaddac619f4a15d0cbdf7d43ce9cb6/68747470733a2f2f63646e2e76657264616363696f2e6465762f726561646d652f76657264616363696f4032782e706e67" alt="verdaccio logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/a5fb81a8f3bac8d1128cee19b01c28dad4fc1c9a4396acaa1ae4191b1a4b5e57/68747470733a2f2f63646e2e76657264616363696f2e6465762f726561646d652f726561646d652d776562736974652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a5fb81a8f3bac8d1128cee19b01c28dad4fc1c9a4396acaa1ae4191b1a4b5e57/68747470733a2f2f63646e2e76657264616363696f2e6465762f726561646d652f726561646d652d776562736974652e706e67" alt="verdaccio gif"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Version 6 (Development branch)&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Looking for Verdaccio 5? Check branch &lt;code&gt;5.x&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://verdaccio.org/" rel="nofollow"&gt;Verdaccio&lt;/a&gt; is a simple, &lt;strong&gt;zero-config-required local private npm registry&lt;/strong&gt;
No need for an entire database just to get started! Verdaccio comes out of the box with
&lt;strong&gt;its own tiny database&lt;/strong&gt;, and the ability to proxy other registries (eg. npmjs.org)
caching the downloaded modules along the way
For those looking to extend their storage capabilities, Verdaccio
&lt;strong&gt;supports various community-made plugins to hook into services such as Amazon's s3,
Google Cloud Storage&lt;/strong&gt; or create your own plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/verdaccio" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1249c3b0309a231d468b773869e091fc9b25f83db7fa19e04f40cab461730b2e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f76657264616363696f2f6c61746573742e737667" alt="verdaccio (latest)"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/verdaccio" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d10fc8ec12cdbcb6f87b231bfbb619533f596787384bb0a4f7823439ea11273d/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64792f76657264616363696f2e737667" alt="verdaccio (downloads)"&gt;&lt;/a&gt;
&lt;a href="https://verdaccio.org/docs/en/docker.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6f9f55261bd3e94e4e2985f4dd8f8ff05ec5eb81c1c46bd32dffea8eae5e3548/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f76657264616363696f2f76657264616363696f2e7376673f6d61784167653d3433323030" alt="docker pulls"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/verdaccio" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6857951380f8e76de8862d39747d1edbb52c210fbae34af6b1e02e86549869f3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f76657264616363696f2f74696572732f6261636b65722f62616467652e7376673f6c6162656c3d4261636b657226636f6c6f723d627269676874677265656e" alt="backers"&gt;&lt;/a&gt;
&lt;a href="https://stackshare.io/verdaccio" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7281be81812e0f17fcf35519685231607c21ec7883fd1724af3c1282fc47d1d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f466f6c6c6f772532306f6e2d537461636b53686172652d626c75652e7376673f6c6f676f3d737461636b7368617265267374796c653d666c6174" alt="stackshare"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://chat.verdaccio.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f7e54f5775ea852220c12a625fb5b52d5815fe59d0867b217d83a233b8fac76f/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3338383637343433373231393734353739332e737667" alt="discord"&gt;&lt;/a&gt;
&lt;a href="https://github.com/verdaccio/verdaccio/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/2ff6a06f2f6e08b17783133ca7ebc23ce1f8ac4415eee8e835647b57048a8f0d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6173686170652f6170697374617475732e737667" alt="MIT"&gt;&lt;/a&gt;
&lt;a href="https://crowdin.com/project/verdaccio" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e341394ead8a5bcacb82c55733bad5d31112602119c48ac0638cba0b81919150/68747470733a2f2f64333232637174353834626f346f2e636c6f756466726f6e742e6e65742f76657264616363696f2f6c6f63616c697a65642e737667" alt="Crowdin"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/verdaccio_npm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e1909c3e4a4c7c9da65d777644d0bc5761c6581a95ce99c809c7f5cfcfb7ce38/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f76657264616363696f5f6e706d2e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77" alt="Twitter followers"&gt;&lt;/a&gt;
&lt;a href="https://github.com/verdaccio/verdaccio/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/aec00f7f62c2494ea4ea5d317e0f664a6b2c36b77ee7a90a5c55918430d985e0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f76657264616363696f2f76657264616363696f2e7376673f7374796c653d736f6369616c266c6162656c3d5374617273" alt="Github"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Latest Node.js v14&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Install with npm:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install --global verdaccio@6-next&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;docker pull verdaccio/verdaccio:nightly-master&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Donations&lt;/h2&gt;
&lt;p&gt;Verdaccio is run by &lt;strong&gt;volunteers&lt;/strong&gt;; nobody is working full-time on it. If you find this project to be useful and would like to support its development, consider making a donation - &lt;strong&gt;your logo might end up in this readme.&lt;/strong&gt; 😉&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/sponsors/verdaccio"&gt;Donate&lt;/a&gt;&lt;/strong&gt; 💵👍🏻 starting…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/verdaccio/verdaccio"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/Eugeny/tabby"&gt;Tabby&lt;/a&gt; +1,686 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/picocss/pico"&gt;Pico&lt;/a&gt; +1,059 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +833 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/type-challenges/type-challenges"&gt;Type Challenges&lt;/a&gt; +827 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +1,229 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/picocss/pico"&gt;Pico&lt;/a&gt; +157%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/BuilderIO/qwik"&gt;Qwik&lt;/a&gt; +28%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sergiodxa/remix-auth"&gt;Remix Auth&lt;/a&gt; +22%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/statsig-io/statuspage"&gt;Status Page&lt;/a&gt; +20%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wellyshen/react-cool-img"&gt;React Cool Img&lt;/a&gt; +18%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +4,676 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +4,563 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Eugeny/tabby"&gt;Tabby&lt;/a&gt; +4,504 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +4,363 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +3,960 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; +198%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/picocss/pico"&gt;Pico&lt;/a&gt; +184%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/eBay/nice-modal-react"&gt;Nice Modal React&lt;/a&gt; +87%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NitzanHen/agrippa"&gt;Agrippa&lt;/a&gt; +85%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/estruyf/vscode-front-matter"&gt;VSCode Front Matter&lt;/a&gt; +56%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>javascript</category>
    </item>
    <item>
      <title>"Hello, world!"</title>
      <author>Siddharth Chaudhary</author>
      <pubDate>Fri, 17 Dec 2021 14:24:57 +0000</pubDate>
      <link>https://dev.to/sidcraftscode/hello-world-2cd4</link>
      <guid>https://dev.to/sidcraftscode/hello-world-2cd4</guid>
      <description>&lt;p&gt;We've all been here before. When we start learning a language, the first thing we probably get taught to do is to output &lt;code&gt;Hello, world!&lt;/code&gt; to the console. For some, "Hello, world!" can turn into a new opportunity, a new career, a new life..&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-where-did-it-originate"&gt;
  &lt;/a&gt;
  But where did it originate?
&lt;/h2&gt;

&lt;p&gt;The origins of hello world are unclear, but the phrase was first seen in Brian Kernigham’s book in 1972, A Tutorial Introduction to the Language B. After that, it was used in &lt;em&gt;The C Programming Language&lt;/em&gt; in 1978, which is what really made the phrase popular.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-it-looks-like-in-different-languages-today"&gt;
  &lt;/a&gt;
  What it looks like in different languages today
&lt;/h2&gt;

&lt;p&gt;Here is what "Hello, world!" looks like in some of the most popular programming languages today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  Javascript
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello, world!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#swift"&gt;
  &lt;/a&gt;
  Swift
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#ruby"&gt;
  &lt;/a&gt;
  Ruby
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Hello, world!"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#shell"&gt;
  &lt;/a&gt;
  Shell
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Hello, world!'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#java"&gt;
  &lt;/a&gt;
  Java
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HelloWorld&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, world!"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#php"&gt;
  &lt;/a&gt;
  PHP
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#go"&gt;
  &lt;/a&gt;
  Go
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="s"&gt;"fmt"&lt;/span&gt;
&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C++
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;C#&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;HelloWorld&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Hello&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;         
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#rust"&gt;
  &lt;/a&gt;
  Rust
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for reading, and I hoped you enjoyed my post on "Hello, world!"&lt;/p&gt;

&lt;p&gt;Check out my &lt;a href="https://sidcrafts.com"&gt;Website&lt;/a&gt; | &lt;a href="https://twitter.com/sidcraftscode"&gt;Twitter&lt;/a&gt; | &lt;a href="https://github.com/sidcraftscode"&gt;Github&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>python</category>
      <category>swift</category>
    </item>
    <item>
      <title>How did we tackle Airtable's API limits at FINN?</title>
      <author>Emin Buğra Saral</author>
      <pubDate>Fri, 17 Dec 2021 14:16:03 +0000</pubDate>
      <link>https://dev.to/ebsaral/how-did-we-tackle-airtables-api-limits-at-finn-5h71</link>
      <guid>https://dev.to/ebsaral/how-did-we-tackle-airtables-api-limits-at-finn-5h71</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AcMx4jfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/058c8qca6gbn9b0z5kgp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AcMx4jfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/058c8qca6gbn9b0z5kgp.png" alt="Airtable logo" width="512" height="256"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We started to use &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; at the early stages as I described in my previous article. Today, you will be reading how we tackled &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt;'s API limits while the company grows to 10.000 car subscribers since 2019. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IUGtEXma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kactokl0fuqk4irk9pc6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IUGtEXma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kactokl0fuqk4irk9pc6.png" alt="Andreas Wixler (CTO) initiated the Slack channel for Airtable Action Squad" width="880" height="79"&gt;&lt;/a&gt;&lt;br&gt;
(Andreas Wixler (CTO) initiated the Slack channel for &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; Action Squad)&lt;/p&gt;

&lt;p&gt;After we hit the limit, we were no longer able to provide a reliable service to our customers. Therefore, we initiated an immediate action squad functioning cross-departments with the lead of &lt;a href="https://www.linkedin.com/in/cpoetter/"&gt;Christian&lt;/a&gt; (VP Engineering - B2B), &lt;a href="https://www.linkedin.com/in/tomepejoski/"&gt;Tome&lt;/a&gt; (Tech Lead - Customer Product), and &lt;a href="https://www.linkedin.com/in/alexanderyasnogor/"&gt;Alexander&lt;/a&gt; (VP Engineering - Data &amp;amp; Finance). I was representing the user acquisition team. Initially, we planned a sprint for two weeks, created our Kanban board in Jira, identified issues, and scheduled regular meetings for status updates on the tasks. &lt;/p&gt;

&lt;p&gt;Before tackling the API limits, we created an &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; migration plan and focused on certain topics for investigation earlier before we hit the issues. So, it's quite important to be ready when you hit the limit. But, we were not 100% ready when the issue occurred, it took a few weeks to solve the problems. Still, the performance we gained by the speed of moving fast while we grow was pushed by &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;These were the core points we focused on earlier when we already decided on &lt;a href="https://www.nocodb.com/"&gt;NocoDB&lt;/a&gt; as an alternative for &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One database-instance per department (PostgreSQL) - AWS Aurora PostgreSQL&lt;/li&gt;
&lt;li&gt;Hourly backups&lt;/li&gt;
&lt;li&gt;Unlimited databases per department&lt;/li&gt;
&lt;li&gt;Connected with Google Workspace SSO&lt;/li&gt;
&lt;li&gt;Role-based control is department responsibility (VP Engineering of the Department, Department Head)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://integromat.com"&gt;Integromat&lt;/a&gt; - &lt;a href="https://www.nocodb.com/"&gt;NocoDB&lt;/a&gt; Module - Customer Product write &lt;a href="https://integromat.com"&gt;Integromat&lt;/a&gt; Module
Retool - Connecting via API (recommend)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So we were getting ready but not as fast as we were growing. Customers just loved us. :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#analysis-of-failure-points"&gt;
  &lt;/a&gt;
  Analysis of failure points
&lt;/h2&gt;

&lt;p&gt;First, we sat down and looked for every scenario in &lt;a href="https://integromat.com"&gt;Integromat&lt;/a&gt; and sometimes analyzed the API calls from the logs to have some metrics in front of us. We have a Slack bot that alerts us whenever there is an issue in &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; modules (API limits). Every person checked their scenarios which they own. Some people came up with alternative ideas for better performance. We took the notes down. &lt;/p&gt;

&lt;p&gt;These were the main issues we realized in our flows within all departments:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt;'s every base has a request limit of 5 per second. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; gives a warning at the top of a base because we reached and crossed total row limits. Sad. :/&lt;/li&gt;
&lt;li&gt;We almost collected everything in one base. This is because the company started with a simple base and then grew fast while the number of employees and orders increased quickly. We realized this issue earlier and created the new projects on different bases already. &lt;/li&gt;
&lt;li&gt;We were using tons of modules in &lt;a href="https://integromat.com"&gt;Integromat&lt;/a&gt; running in parallel (we have more than 15 workers in our &lt;a href="https://integromat.com"&gt;Integromat&lt;/a&gt;). Also, due to the pagination requests in some modules because of data being too big, we were increasing the risk of hitting timeout errors. &lt;/li&gt;
&lt;li&gt;Our checkout process was using services that were talking to &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; directly and synchronously. If there was a limit/timeout issue, the customer couldn't proceed further. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; is calculating every formula, within a base, when there is an edit, creation, update, or deletion of data. This causes a delay and timeout issue from time to time. Sometimes the response is timed out, but the action is successful. This can also deceive our &lt;a href="https://integromat.com"&gt;Integromat&lt;/a&gt; modules. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#work-we-have-done-to-fix-the-issues"&gt;
  &lt;/a&gt;
  Work we have done to fix the issue(s)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pIRI3c4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oj5dge55tbutk3de9hjs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pIRI3c4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oj5dge55tbutk3de9hjs.png" alt="Timeline of the total number of records in Vehicle Subscription Management (VSM) main base - decreasing" width="880" height="539"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_4UIkO5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jvm8erff5jj7x079f43m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_4UIkO5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jvm8erff5jj7x079f43m.png" alt="Timeline of the total number of tables in Vehicle Subscription Management (VSM) main base - decreasing" width="880" height="551"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Most of our &lt;a href="https://integromat.com"&gt;Integromat&lt;/a&gt; scenarios are using &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; for read-only operations. When &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; introduced their &lt;a href="https://support.airtable.com/hc/en-us/articles/360052521254-Airtable-Sync-Basic-setup"&gt;Airtable Sync&lt;/a&gt;, we immediately increased the number of bases by taking away some responsibilities (tables, records) from the main base into different bases.  From these bases, we created synced tables from the main base and used these bases as the reference point so we could gain their API request limit for read-only operations. Each department created its own small bases for read-only operations and updated its &lt;a href="https://integromat.com"&gt;Integromat&lt;/a&gt; scenarios. &lt;/p&gt;

&lt;p&gt;While doing this, we also started to use Sync Inc to have a copy of our &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; base synced in PostgreSQL. Initially, we set the limit of writing at Sync to 1, and gradually we increased this limit (max 5) while monitoring our &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; performance and data quality. This way we could connect this solution to our own &lt;a href="https://www.nocodb.com/"&gt;NocoDB&lt;/a&gt; instance. After our beloved engineer &lt;a href="https://www.linkedin.com/in/ishtiaquezafar/"&gt;Ishtiaque&lt;/a&gt; (Senior Engineer - Operations) created an &lt;a href="https://integromat.com"&gt;Integromat&lt;/a&gt; module for &lt;a href="https://www.nocodb.com/"&gt;NocoDB&lt;/a&gt;, we started reading from our own PostgreSQL instance UNLIMITED and we initiated the migration to the &lt;a href="https://www.nocodb.com/"&gt;NocoDB&lt;/a&gt; this way. We first started with Sync solution, then switched to &lt;a href="https://www.nocodb.com/"&gt;NocoDB&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;We had to update our &lt;a href="https://www.nocodb.com/"&gt;NocoDB&lt;/a&gt; modules. We used &lt;a href="https://integromat.com"&gt;Integromat&lt;/a&gt; API to search for certain &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; modules and then replaced them with &lt;a href="https://www.nocodb.com/"&gt;NocoDB&lt;/a&gt; modules. &lt;a href="https://www.linkedin.com/in/dinalivia/"&gt;Dina&lt;/a&gt; (Software Engineer - Operations) and Vijay (our &lt;a href="https://www.nocodb.com/"&gt;NocoDB&lt;/a&gt; guru) contributed heavily to this. &amp;lt;3&lt;/p&gt;

&lt;p&gt;I moved our calls to the &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; from our checkout process. We created an &lt;a href="https://integromat.com"&gt;Integromat&lt;/a&gt; module that would book the car for the customer asynchronously while the customer could proceed with their process - no waiting. &lt;/p&gt;

&lt;p&gt;We analyzed company-wide each column in each table to detect if they are being used or not. It was a huge company effort because dependencies were too many, all spread over different tools. We removed all unneeded columns successfully. After that, we also optimized the formulas that we use and tried to decrease dependencies in formulas and between columns. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tCOJmdpb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfv0ce12bmkkx2gg2qfi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tCOJmdpb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfv0ce12bmkkx2gg2qfi.png" alt="Airtable timeouts per day" width="880" height="547"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks, everyone involved!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#highlights-and-achievements"&gt;
  &lt;/a&gt;
  Highlights and achievements
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;More than halved the numbers of records in VSM
Halved the numbers of tables in VSM&lt;/li&gt;
&lt;li&gt;Reduced massively the # numbers of &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; timeouts per day&lt;/li&gt;
&lt;li&gt;Switch to read from &lt;a href="https://www.nocodb.com/"&gt;NocoDB&lt;/a&gt; directly where ever possible and write to &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Proof of concept migration of car sales to &lt;a href="https://www.nocodb.com/"&gt;NocoDB&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Last but not least, worked for the first time all together cross-department, with a great time spirit and achieving the goals set at the beginning&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks, &lt;a href="https://www.linkedin.com/in/emanuele-gennusa/"&gt;Emanuele&lt;/a&gt; (Senior Product Manager - Operations) for managing our sprints!&lt;/p&gt;

&lt;p&gt;While we move away from &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; with our core data, we will be still using it for some time. &lt;a href="https://www.nocodb.com/"&gt;NocoDB&lt;/a&gt; is still in the early stages. We built a dedicated team to work on this open-source project to fit our needs by the time. At &lt;a href="https://www.finn.auto"&gt;FINN&lt;/a&gt;, we will be always using No Code - whether &lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; or not. &lt;/p&gt;




&lt;p&gt;I will write about how we are using &lt;a href="https://www.nocodb.com/"&gt;NocoDB&lt;/a&gt; at &lt;a href="https://wwww.finn.auto"&gt;FINN&lt;/a&gt; in one of my next articles. &lt;/p&gt;

&lt;p&gt;Stay tuned and don't forget to like/follow! :)&lt;/p&gt;

</description>
      <category>airtable</category>
      <category>nocode</category>
      <category>productivity</category>
      <category>database</category>
    </item>
    <item>
      <title>Boost Your Productivity: My Scrappy Way of Getting Things Done 🚀</title>
      <author>Stanley Lim</author>
      <pubDate>Fri, 17 Dec 2021 14:06:21 +0000</pubDate>
      <link>https://dev.to/spiderpig86/boost-your-productivity-my-scrappy-way-of-getting-things-done-43p3</link>
      <guid>https://dev.to/spiderpig86/boost-your-productivity-my-scrappy-way-of-getting-things-done-43p3</guid>
      <description>&lt;p&gt;Every year there seems to be a slew of new productivity apps that aim to one-up the next in making you more productive. Every year, there's also a new JavaScript framework that aims to make the world a better place, but that's a topic for another time. From simple observation, many of the productivity apps today offer various features and methods meant to help you be more effective in tackling your goals. This seems to be well-intentioned, but gamifying with a points system, adding fancy charts, and including many templates can even do so much to incentivize users to perform.&lt;/p&gt;

&lt;p&gt;At the end of the day, if your main goal is to finish something, the only thing that matters is the progress -- not the process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#planning-vs-doing"&gt;
  &lt;/a&gt;
  Planning vs. Doing
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;If you fail to plan, you are planning to fail! ― &lt;strong&gt;Benjamin Franklin&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In battle, proper planning makes the difference between swift victory and a long, arduous defeat. But sometimes, over-planning can end up making you less productive overall. Applications like &lt;em&gt;Notion&lt;/em&gt;, &lt;em&gt;Habitica&lt;/em&gt;, and &lt;em&gt;Todoist&lt;/em&gt; are some of the most popular productivity apps out there with the sole purpose of task management. These work immensely well for more long-term planning, but these applications' complexity could lead you to over plan and procrastinate on smaller, more immediate items. It is relatively easy to get sucked into the positive feedback loop of continually writing, categorizing, and reorganizing without crossing anything off. Over time, your small list of things to do ends up spreading across two calendars, 5 Kanban boards, and 12 spreadsheets.&lt;/p&gt;

&lt;p&gt;My point is, in the time some people spent organizing and tinkering with an app's features, they could have crossed off a couple of items, if not all the things, from their list.&lt;/p&gt;

&lt;p&gt;These apps' vast capabilities, which are supposed to be their selling point, could end up being their greatest weakness. There simply is no need to spend so much time thinking about which emojis to use for your title, what color scheme to set for your tasks, or over embellishing the layout. This is time that you could've spent getting things done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#back-to-the-basics"&gt;
  &lt;/a&gt;
  Back to the Basics
&lt;/h2&gt;

&lt;p&gt;Now, I'm not trying to entirely knock on these platforms by saying that they add unnecessary overhead. These tools are great for many uses, but just not all. When so many bloggers and YouTubers recommend these applications as the best tools to be productive for *insert year here*, you'd be hard-pressed to find anyone willing to switch from these to a simple text editor.&lt;/p&gt;

&lt;p&gt;After giving many of these applications a chance, I ended up using &lt;em&gt;Notepad&lt;/em&gt; to keep track of the things I need to do. What is &lt;em&gt;Notepad&lt;/em&gt; you ask?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Notepad is a revolutionary new way to manage your tasks with dozens of free productivity templates, calendars synced across multiple devices, real-time collaborative tools, and more!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not really. &lt;em&gt;Notepad&lt;/em&gt; is a standard Windows application for text editing. s Besides, I also recommend any text editor native to OSX, Linux, Android, iOS, etc. as they:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open up super fast.&lt;/li&gt;
&lt;li&gt;Work offline.&lt;/li&gt;
&lt;li&gt;No extra fluff that bogs the whole application down.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sometimes my best ideas on what to do next come during unexpected moments, whether if I'm getting groceries, playing video games, or making an offering to the porcelain throne. I want to be able to record something down whenever I want before my thought ultimately vanishes. Some apps either didn't have offline support or had a very clunky interface with slow performance. I can recall numerous occasions that I forgot about an idea due to a bad network connection or an app freezing on my phone.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#organizing-my-notes"&gt;
  &lt;/a&gt;
  Organizing My Notes
&lt;/h3&gt;

&lt;p&gt;There is a system I tend to follow for my notes, and it looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Project A
----------
- Task 1 (optional due date)
- Task 2
- Task 3

Project B
----------
- Task 1
- Task 2 - URGENT do EOD
- Task 3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Tasks are broken up into different groups. Each task should be descriptive enough that I know what to do even after all the context switching throughout the day.&lt;/p&gt;

&lt;p&gt;Now, what if you end up with a never-ending list of things to do? To combat this, I maintain a separate list of things that I either: 1) need to do ASAP 2) need the motivation to do. The critical point of this list is that &lt;strong&gt;you don't save it at all&lt;/strong&gt;. This sounds crazy, but hear me out.&lt;/p&gt;

&lt;p&gt;If you're a Windows user, you're very familiar with the forced auto-updates you get now and then. If I'm not at the computer to delay the update, Windows will proceed automatically. Because of this &lt;em&gt;feature&lt;/em&gt;, anything in Notepad not already saved will be deleted. This gives me a sense of urgency to keep this list as empty as possible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#drawbacks-of-this-approach"&gt;
  &lt;/a&gt;
  Drawbacks of this Approach
&lt;/h3&gt;

&lt;p&gt;With all this simplicity, there are some drawbacks. For starters, you cannot sync across different devices. Unless you manually transfer each item across your devices, you'll be stuck with a split-brain to-do list.&lt;/p&gt;

&lt;p&gt;Another point is the overall lack of features. A text editor is &lt;strong&gt;just&lt;/strong&gt; a text editor. However, I urge you to give it a shot because sometimes its strength comes from its sheer simplicity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-this-approach-for-you"&gt;
  &lt;/a&gt;
  Is this approach for you?
&lt;/h2&gt;

&lt;p&gt;I can't speak for everyone, but I can speak for myself and say that I have spent more time getting my work done rather than tinkering with my schedule after trying this method for eight months. Without the app's complexity getting in the way, you can focus on the things that matter most.&lt;/p&gt;

&lt;p&gt;If this approach sounds interesting or it may work for you, definitely try it out 🚀. I'd love to hear how it works for you. Did it help you do more or remember more? Did it slow things down?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h2&gt;

&lt;p&gt;💎 Thank you for taking the time to check out this post. For more content like this, head over to my actual &lt;a href="https://blog.stanleylim.me/"&gt;blog&lt;/a&gt;. Feel free to reach out to me on &lt;a href="https://www.linkedin.com/in/serbis/"&gt;LinkedIn&lt;/a&gt; and follow me on &lt;a href="https://github.com/Spiderpig86"&gt;Github&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>Low Code Approach To Design Highly Effective UIs</title>
      <author>Hamza Ahmad</author>
      <pubDate>Fri, 17 Dec 2021 13:56:32 +0000</pubDate>
      <link>https://dev.to/pythonbutsnake/low-code-approach-to-design-highly-effective-uis-5gco</link>
      <guid>https://dev.to/pythonbutsnake/low-code-approach-to-design-highly-effective-uis-5gco</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-low-code"&gt;
  &lt;/a&gt;
  What is low code?
&lt;/h2&gt;

&lt;p&gt;Low code is an approach used for software development that requires almost no coding. It includes building interfaces/UIs using simple drag and drop and then doing minor customization to finalize everything. Low code approach helps people with no extensive coding knowledge to build different multipurpose applications. The logic is simple and the UI is accurate; appropriately, it offers the opportunity to customize many parts with code, but the idea is that most work can be done without wasting time writing custom code. &lt;/p&gt;

&lt;p&gt;These are the things you should keep in mind for designing high effective UIs using a low code approach.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#suitable-platforms"&gt;
  &lt;/a&gt;
  Suitable platforms
&lt;/h2&gt;

&lt;p&gt;In order to fit your requirements, you should always do your research and look for suitable platforms to get the components, and see what suits you best. For example, if you need your UI to be React supportive, you should head to a platform that has pre-made components that support react. Some popular platforms include: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.outsystems.com/"&gt;OutSystems&lt;/a&gt;&lt;br&gt;
Contains powerful tools, templates, connectors all in a single platform, and helps you create any kind of application very easily. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://elements.envato.com/lp/ux-ui-kits/?adposition=&amp;amp;gclid=Cj0KCQiA5OuNBhCRARIsACgaiqWjkHJgaBqCDGNlDjlyv4mu_mxXrqxaWDQ4ItgytLO19y9hzOEnDlUaAtxoEALw_wcB"&gt;Envato elements&lt;/a&gt;&lt;br&gt;
Provides you with a comprehensive library of UI Kits to create websites and mobile interfaces. And contains ready to use graphic, web, and video assets.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://tuk.dev"&gt;TUK&lt;/a&gt;&lt;br&gt;
Provides you with 250+ free and 1500+ paid UI components to seamlessly create mobile and web interfaces. All the components are fully responsive and drop-in ready to save you a ton of time. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.justinmind.com/ui-kits"&gt;justinmind&lt;/a&gt;&lt;br&gt;
Contains plenty of interactive UI components to design hi-fi prototypes and wireframes of your project. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And if you want to avoid the hassle of shifting tabs to copy the code of one component after the other, you can do that with the &lt;a href="https://marketplace.visualstudio.com/items?itemName=vsblox.blox"&gt;blox&lt;/a&gt; extension on VS Code that allows you to access various UI Kits and components without leaving VS Code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#right-colors"&gt;
  &lt;/a&gt;
  Right Colors
&lt;/h2&gt;

&lt;p&gt;One thing that stands out in your UI design is the color scheme you are using. Users tend to avoid web applications or sites with bad color schemes. While you are depending on drag and drop for building the UI. You should be mindful of what are the requirements and have clarity while approaching the design.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#consistent-designs"&gt;
  &lt;/a&gt;
  Consistent Designs
&lt;/h2&gt;

&lt;p&gt;Having a consistent design is extremely important for an effective UI Design. It increases learnability. A beautiful UI design comes from creating a sense of familiarity and ensuring that everything on the screen makes sense and works in ways that the user expects it to work. UI designers achieve this by using component usage, functional architecture information, and a structured look and feel of product marketing throughout. Structuring your component in a consistent manner is the key. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-right-language"&gt;
  &lt;/a&gt;
  Using the Right Language
&lt;/h2&gt;

&lt;p&gt;To help users navigate easily in the social networks we create, we need to make sure everything is written in ways that help them move freely and confidently from one object to another. &lt;/p&gt;

&lt;p&gt;Consistency is key here. “Add” and “Create,” for example, may seem to change. But if your device constantly uses "add", users may fail to understand the action required when using "create." As a UI designer, you can take the lead in developing the language and vocabulary you want to use in every product. Just make sure you stick to your decisions and stick to the rules you and your team choose to label things with the same function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;While the Less Code approach helps a great deal, one should have a basic knowledge of this art in order to achieve great results. Totally depending on an outside source may cause serious damage. The only way to approach low code for designing high effective UIs is the wise way.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>uiweekly</category>
      <category>ux</category>
      <category>lowcode</category>
    </item>
    <item>
      <title>Stop Using Branches for Deploying to Different GitOps Environments</title>
      <author>Kostis Kapelonis</author>
      <pubDate>Fri, 17 Dec 2021 13:20:56 +0000</pubDate>
      <link>https://dev.to/codefreshio/stop-using-branches-for-deploying-to-different-gitops-environments-5bmj</link>
      <guid>https://dev.to/codefreshio/stop-using-branches-for-deploying-to-different-gitops-environments-5bmj</guid>
      <description>&lt;p&gt;In our big guide &lt;a href="https://codefresh.io/about-gitops/pains-gitops-1-0/"&gt;for GitOps problems&lt;/a&gt;, we briefly explained (see points 3 and 4) how the current crop of GitOps tools don’t really cover the case of promotion between different environments or how even to model multi-cluster setups. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RUD8aHf8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hz1b2h79cvw9qk5ngpv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RUD8aHf8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hz1b2h79cvw9qk5ngpv.png" alt="Image description" width="851" height="218"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The question of “How do I promote a release to the next environment?” &lt;a href="https://github.com/argoproj/argocd-example-apps/issues/57"&gt;is becoming increasingly popular&lt;/a&gt; among organizations that want to adopt GitOps. And even though there are several possible answers, in this particular article I want to focus on what you should NOT do.&lt;/p&gt;

&lt;p&gt;You should NOT use Git branches for modeling different environments. If the Git repository holding your configuration (manifests/templates in the case of Kubernetes) has branches named “staging”, “QA”, “Production” and so on, then you have fallen into a trap. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TiC6mR9P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lq4pdn51s90e92evaq4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TiC6mR9P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lq4pdn51s90e92evaq4.png" alt="Branch for environment" width="880" height="628"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let me repeat that. Using Git branches for modeling different environments is an anti-pattern. Don’t do it!&lt;/p&gt;

&lt;p&gt;We will explore the following points on why this practice is an anti-pattern:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using different Git branches for deployment environments is a relic of the past.&lt;/li&gt;
&lt;li&gt;Pull requests and merges between different branches is problematic.&lt;/li&gt;
&lt;li&gt;People are tempted to include environment specific code and create configuration drift.&lt;/li&gt;
&lt;li&gt;As soon as you have a large number of environments, maintenance of all environments gets quickly out of hand.&lt;/li&gt;
&lt;li&gt;The branch-per-environment model goes against the existing Kubernetes ecosystem.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#using-branches-for-different-environments-should-only-be-applied-to-legacy-applications"&gt;
  &lt;/a&gt;
  Using branches for different environments should only be applied to legacy applications.
&lt;/h2&gt;

&lt;p&gt;When I ask people why they chose to use Git branches for modelling different environments, almost always the answer is a variation of “we’ve always done it that way,” “it feels natural,” “this is what our developers know,” and so on.&lt;/p&gt;

&lt;p&gt;And that is true. Most people are familiar with using branches for different environments. This practice was heavily popularized by the &lt;a href="https://nvie.com/posts/a-successful-git-branching-model/"&gt;venerable Git-Flow model&lt;/a&gt;. But since the introduction of this model, things have changed a lot. Even the original author has placed a huge warning at the top advising people &lt;strong&gt;against&lt;/strong&gt; adopting this model without understanding the repercussions.&lt;/p&gt;

&lt;p&gt;The fact is that the Git-flow model:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is focused on application source code and not environment configuration (let alone Kubernetes manifests).&lt;/li&gt;
&lt;li&gt;Is best used when you need to support multiple versions of your application in production. This happens, but is not usually the case.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am not going to talk too much about Git-flow here and its disadvantages because the present article is about GitOps environments and not application source code, but in summary, you should follow &lt;a href="https://trunkbaseddevelopment.com/"&gt;trunk-based development&lt;/a&gt; and use &lt;a href="https://trunkbaseddevelopment.com/feature-flags/"&gt;feature-flags&lt;/a&gt; if you need to support different features for different environments.&lt;/p&gt;

&lt;p&gt;In the context of GitOps, the application source code and your configuration should also be in different Git repositories (one repository with just application code and one repository with Kubernetes manifests/templates). This means that your choice of branching for the application source code should not affect how branches are used in the environment repository that defines your environments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nafL65i8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76yb7to3r790jvn7nl52.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nafL65i8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76yb7to3r790jvn7nl52.png" alt="Different Git repos" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you adopt GitOps for your next project, you should start with a clean slate.  Application developers can choose whatever branching strategy they want for the application source code (and even use Git-flow), but the configuration Git repository (that has all the Kubernetes manifests/templates) should NOT follow the branch-per-environment model. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#promotion-is-never-a-simple-git-merge"&gt;
  &lt;/a&gt;
  Promotion is never a simple Git merge
&lt;/h2&gt;

&lt;p&gt;Now that we know the history of using a branch-per-environment approach for deployments, we can talk about the actual disadvantages.&lt;/p&gt;

&lt;p&gt;The main advantage of this approach is the argument that “Promotion is a simple git merge.” In theory, if you want to promote a release from QA to staging, you simply merge your QA branch into the staging branch. And when you are ready for production, you again merge the staging branch into the production branch, and you can be certain that all changes from staging have reached production. &lt;/p&gt;

&lt;p&gt;Do you want to see what is different between production and staging? Just do a standard &lt;a href="https://git-scm.com/docs/git-diff"&gt;git diff&lt;/a&gt; between the two branches. Do you want to backport a configuration change from staging to QA? Again, a simple Git merge from the staging branch to qa will do the trick.&lt;/p&gt;

&lt;p&gt;And if you want to place extra restrictions on promotions, you can use Pull Requests. So even though anybody could merge from qa to staging, if you want to merge something in the production branch, you can use a Pull Request and demand manual approval from all critical stakeholders.&lt;/p&gt;

&lt;p&gt;This all sounds great in theory, and some trivial scenarios can actually work like this. But in practice, this is never the case. Promoting a release via a Git merge can suffer from merge conflicts, unwanted changes, and even the wrong order of changes.&lt;/p&gt;

&lt;p&gt;As a simple example, let’s take this Kubernetes deployment that is currently sitting in the staging branch:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;apps/v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deployment&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;example-deployment&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;replicas&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;my-app&lt;/span&gt;
    &lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;backend&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;my-app:2.2&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;containerPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your QA team has informed you that version 2.3 (which is in the QA branch) looks good, and it is ready to be moved to staging. You merge the QA branch to the staging branch, promoting the application and think that everything is good.&lt;/p&gt;

&lt;p&gt;What you didn’t know is that somebody also changed the number of replicas in the QA branch to 2 because of some resource limitations. With your Git merge, you not only deployed 2.3 to staging, but you also scaled the replicas to 2 (instead of 15), and that is probably something that you don’t want.&lt;/p&gt;

&lt;p&gt;You might argue that it would be easy to look at the replica count before merging, but remember that in a real scenario you have a large number of applications with a big number of manifests that are almost always templated (via Helm or Kustomize). So understanding what changes you want to bring and what to leave behind is not a trivial task.&lt;/p&gt;

&lt;p&gt;And even if you do find changes that should not be promoted, you need to manually choose the “good” parts using &lt;a href="https://git-scm.com/docs/git-cherry-pick"&gt;git cherry-pick&lt;/a&gt; or other non-standard methods which are a far cry from the original “simple” Git merge.&lt;/p&gt;

&lt;p&gt;But even if you are aware of all the changes that can be promoted, there are several cases where the order of promotion is not the same as the order of committing. As an example, the following 4 changes happen to the QA environment.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The &lt;a href="https://kubernetes.io/docs/concepts/services-networking/ingress/"&gt;ingress of the application&lt;/a&gt; is updated with an extra hostname.&lt;/li&gt;
&lt;li&gt;Release 2.5 is promoted to the QA branch and all QA people start testing.&lt;/li&gt;
&lt;li&gt;A problem is found with 2.5 and a Kubernetes configmap is fixed.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"&gt;Resource limits&lt;/a&gt; are fine-tuned and committed to QA.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It is then decided that the ingress setting and the resource limits should move to the next environment (staging). But the QA team has not finished testing with the 2.5 release. &lt;/p&gt;

&lt;p&gt;If you blindly merge the QA branch to the staging branch, you will get all 4 changes at once, including the promotion of 2.5.&lt;/p&gt;

&lt;p&gt;To resolve this, again you need to use git cherry-pick or other manual methods.&lt;/p&gt;

&lt;p&gt;There are even more complicated cases where the commits have dependencies between them, so even cherry-pick will not work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--89WJ0co7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mixt5bdlgy02wrrux4pk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--89WJ0co7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mixt5bdlgy02wrrux4pk.png" alt="Git dependencies" width="880" height="686"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the example above, release 1.24 must be promoted to production. The problem is that one of the commits (the hotfix) contains a multitude of changes where some of them depend on another commit (the ingress config change) which itself cannot be moved to production (as it only applies only to staging). So even with cherry-picks, it is impossible to bring only the required changes from staging to production.&lt;/p&gt;

&lt;p&gt;The end result is that promotion is never a simple Git merge. Most organizations will also have a large number of applications that go on a large number of clusters, composed by a large number of manifests. Manually choosing commits is a losing battle.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuration-drift-can-be-easily-created-by-environmentspecific-changes"&gt;
  &lt;/a&gt;
  Configuration drift can be easily created by environment-specific changes
&lt;/h2&gt;

&lt;p&gt;In theory, configuration drift should not be an issue with Git merges. If you make a change in staging and then merge that branch to production, then all your changes should transfer to the new environment.&lt;/p&gt;

&lt;p&gt;In practice, however, things are different because most organizations only merge to one direction, and team members are easily tempted to change upstream environments and never back-port the changes to downstream environments.&lt;/p&gt;

&lt;p&gt;In the classic example with 3 environments for QA, Staging, and Production, the direction of Git merges only goes to one direction. People merge the qa branch to staging and the staging branch to production. This means that changes only flow upwards.&lt;/p&gt;

&lt;p&gt;QA -&amp;gt; Staging -&amp;gt; Production.&lt;/p&gt;

&lt;p&gt;The classic scenario is that a quick configuration change is needed in production (a hotfix), and somebody applies the fix there. In the case of Kubernetes, this hotfix can be anything such as a change in an existing manifest or even a brand new manifest.&lt;/p&gt;

&lt;p&gt;Now Production has a completely different configuration than staging. Next time a release is promoted from Staging to Production, Git will only notify you on what you will bring from Staging. The ad hoc change on production will never appear anywhere in the Pull Request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MOSfGR4A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pnnywcgta49ahrbcwox8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MOSfGR4A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pnnywcgta49ahrbcwox8.png" alt="One direction only" width="880" height="647"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This means that all subsequent deployments can fail, as production now has an undocumented change that will never be detected by any subsequent promotions.&lt;/p&gt;

&lt;p&gt;In theory, you could backport such changes and merge periodically all commits from production to staging (and staging to QA). In practice, this never happens due to the reasons outlined in the previous point.&lt;/p&gt;

&lt;p&gt;You can imagine that a large number of environments (and not just 3) further increases the problem. &lt;/p&gt;

&lt;p&gt;In summary, promoting releases by Git merges does not solve configuration drift and in fact makes it even more problematic as teams are tempted to make ad hoc changes that are never promoted in sequence.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#managing-different-git-branches-for-a-large-number-of-environments-is-a-losing-battle"&gt;
  &lt;/a&gt;
  Managing different Git branches for a large number of environments is a losing battle
&lt;/h2&gt;

&lt;p&gt;In all the previous examples, I only used 3 environments (qa-&amp;gt; staging-&amp;gt; production) to illustrate the disadvantages of branch-based environment promotion.&lt;/p&gt;

&lt;p&gt;Depending on the size of your organization, you will have many more environments. If you factor in other dimensions such as geographical location, the number of environments can quickly skyrocket.&lt;/p&gt;

&lt;p&gt;For example, let’s take a company that has 5 environments:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Load Testing &lt;/li&gt;
&lt;li&gt;Integration testing &lt;/li&gt;
&lt;li&gt;QA&lt;/li&gt;
&lt;li&gt;Staging&lt;/li&gt;
&lt;li&gt;Production&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then let’s assume that the last 3 environments are also deployed to EU, US, and Asia while the first 2 also have GPU and Non-GPU variations. This means that the company has a total of 13 environments. And this is for a single application.&lt;/p&gt;

&lt;p&gt;If you follow a branch-based approach for your environments:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You need to have 13 long living Git branches at all times.&lt;/li&gt;
&lt;li&gt;You need 19 pull requests for promoting a single change across all environments.&lt;/li&gt;
&lt;li&gt;You have a two dimensional promotion matrix with 5 steps upwards and 2-3 steps outwards.&lt;/li&gt;
&lt;li&gt;The possibilities for wrong merges, configuration drift and ad-hoc changes is now non-trivial across all environment combinations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the context of this example organization, all previous issues are now more prevalent. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-branchperenvironment-model-goes-against-helmkustomize"&gt;
  &lt;/a&gt;
  The branch-per-environment model goes against Helm/Kustomize
&lt;/h2&gt;

&lt;p&gt;Two of the most popular Kubernetes tools for describing applications are Helm and Kustomize. Let’s see how these two tools recommend modeling different environments.&lt;/p&gt;

&lt;p&gt;For Helm, you need to create a generic chart that itself accepts parameters in the form of a values.yaml file. If you want to have different environments, &lt;a href="https://codefresh.io/helm-tutorial/helm-deployment-environments/"&gt;you need multiple values files&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_x087J3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3z0yl4gtd03ukjrghdxt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_x087J3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3z0yl4gtd03ukjrghdxt.png" alt="Helm environments" width="397" height="344"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For Kustomize, you need to create a “base” configuration, and then each environment is modeled as &lt;a href="https://codefresh.io/about-gitops/applied-gitops-with-kustomize/"&gt;an overlay that has its own folder&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n1nnEX00--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7xtgokjcisalztqsy7t3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n1nnEX00--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7xtgokjcisalztqsy7t3.png" alt="Kustomize Overlays" width="616" height="630"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In both cases, different environments are modeled with different folders/files. Helm and Kustomize know nothing about Git branches or Git merges or Pull Requests. They use just plain files.&lt;/p&gt;

&lt;p&gt;Let me repeat that again: Both Helm and Kustomize use plain files for different environments and not Git branches. This should be a good hint on how to model different Kubernetes configurations using either of these tools.&lt;/p&gt;

&lt;p&gt;If you introduce Git branches in the mix, you not only introduce extra complexity, but you also go against your own tooling.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-recommended-way-to-promote-releases-in-gitops-environments"&gt;
  &lt;/a&gt;
  The recommended way to promote releases in GitOps environments
&lt;/h2&gt;

&lt;p&gt;Modeling different Kubernetes environments and promoting a release between them is a very common issue for all teams that adopt GitOps. Even though a very popular method is to use Git branches for each environment and assume that a promotion is a “simple” Git merge, we have seen in this article that this is an anti-pattern.&lt;/p&gt;

&lt;p&gt;In the next article, we will see a better approach to model your different environments and promote releases between your Kubernetes cluster. The last point of the article (regarding Helm/Kustomize) should already give you a hint on how this approach works.&lt;/p&gt;

&lt;p&gt;Stay tuned!&lt;/p&gt;

</description>
      <category>devops</category>
      <category>gitops</category>
      <category>kubernetes</category>
      <category>cloud</category>
    </item>
    <item>
      <title>TestOps: The Future of Software Testing</title>
      <author>Cody Simons</author>
      <pubDate>Fri, 17 Dec 2021 13:20:01 +0000</pubDate>
      <link>https://dev.to/codysimons20/testops-the-future-of-software-testing-3idi</link>
      <guid>https://dev.to/codysimons20/testops-the-future-of-software-testing-3idi</guid>
      <description>&lt;p&gt;Although terms like “quality testing” may seem modern, software testing has been around since the advent of computing roughly 70 years ago. Harvard University scientist Grace Murray coined the terms “bugging” and “debugging” in 1947 when a literal “bug” — in this case, a moth — got stuck in the computer circuitry and interrupted a connection. Since then, software testing has evolved rapidly with the increasing complexity of computer applications, and it continues to evolve. Nowadays there are many different software testing approaches, depending on the functionality of the software and what you want to test it for, but the overall goal of any software test is to provide an objective assessment of the quality of the software and the risk of its failure. As the capabilities and intricacies of computer software have grown, testing has, by necessity, become its own field, to the point where it can and should be operationalized to be done correctly. &lt;/p&gt;

&lt;p&gt;This article discusses modern testing operations, or TestOps, and provides a definition of TestOps, reviews the difference between TestOps and DevOps, and explains what to look for in a TestOps solution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.katalon.com/resources-center/blog/what-is-testops/"&gt;Continue reading&lt;/a&gt;&lt;/p&gt;

</description>
      <category>testops</category>
      <category>devops</category>
      <category>softwaretesting</category>
    </item>
  </channel>
</rss>
