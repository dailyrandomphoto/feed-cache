<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Django Infinite scrolling with javascript fetch api and function based view.</title>
      <author>tochimclaren</author>
      <pubDate>Thu, 12 Aug 2021 23:35:43 +0000</pubDate>
      <link>https://dev.to/tochimclaren/django-infinite-scrolling-with-javascript-fetch-api-and-function-based-view-47fo</link>
      <guid>https://dev.to/tochimclaren/django-infinite-scrolling-with-javascript-fetch-api-and-function-based-view-47fo</guid>
      <description>&lt;p&gt;Hello, I will take you straight through the process of adding inifinte pagination in your django application like it's abc complete code is down below&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note: this is for absolute beginner&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tochimclaren/django-infinite-scroll.git"&gt;django-infinite-scroll&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First thing first, we create our django project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir django-infinite-scroll
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd django-infinite-scroll
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pipenv shell #this initializes with Pipfile and creates the environment
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We install our django application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pipenv install django
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We create a new django project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;django-admin startproject core .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We create our app blog and add it to &lt;code&gt;INSTALLED_APPS&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python manage.py startapp blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # our blog app
    'blog.apps.BlogConfig',
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the development server and make sure everything is working properly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Migrate the database and createsuperuser in my case the credentials were username: &lt;code&gt;admin&lt;/code&gt; password: &lt;code&gt;admin&lt;/code&gt; run the server and let the fun begin!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python manage.py createsuperuser
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Creating a simple model for a blog to hold&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# models.py
from django.db import models

class Post(models.Model):
    title = models.CharField(max_length=255)
    content = models.TextField()
    created = models.DateTimeField(auto_now_add=True)
    updated = models.DateTimeField(auto_now=True)
    published = models.BooleanField(default=False)

    def __str__(self):
        return self.title
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# views.py
from django.core.paginator import Paginator
from django.http import JsonResponse
from django.shortcuts import render
from .models import Post


def posts(request):
    # it's not a bug if it's intentional ;)
    post_list = Post.objects.filter(published=False)
    # we get page 1 returns 10 post objects
    paginator = Paginator(post_list, 10)

    # page_number is initialized to `1` see main.js
    page_number = request.GET.get('page')

    # we are applying page number which defaults to `1`
    page_obj = paginator.get_page(page_number)

    if page_number:
        # We are checking if `page_number` &amp;lt; or == 
        paginator.num_pages total amount of pages returned by the `Paginator` this only runs if the above conditions are met
        if int(page_number) &amp;lt;= paginator.num_pages:

            obj_list = paginator.get_page(page_number)

            obj_list = obj_list.object_list.values()

            return JsonResponse(list(obj_list), status=200, safe=False)

    ctx = {'page_obj': page_obj}
    return render(request, 'post/posts.html', ctx)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add your app url to project url config&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#core/urls.py

from django.contrib import admin
from django.urls import include, path

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('blog.urls'))
]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Define your app urls.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# blog/urls.py
from django.urls import path
from . import views

urlpatterns = [
    path('', views.posts, name="posts")
]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We create a simple example template&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# template
# 'blog/templates/post/posts.html'
{% load static %}
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;

&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style&amp;gt;
        #content{
            margin: 0 auto;
            width: 40vw;
        }
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;div id="content"&amp;gt;
        {% for post in page_obj %}
            &amp;lt;div&amp;gt;
                &amp;lt;h1&amp;gt;{{post.title}}&amp;lt;/h1&amp;gt;
                &amp;lt;p&amp;gt;{{post.content}}&amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
        {% endfor %}
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;script type="text/javascript" src="{% static 'blog/js/main.js' %}"&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;/html&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the js side of things, we are listening to scroll event, when we scroll to the bottom of the page, we trigger a function that calls our view which in turn returns a Json objects that we can inject to our template.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# main.js
# 'blog/static/blog/js/main.js'

content = document.querySelector("#content");
let page = 1

window.onscroll = function() {
    url = `/?page=${page}`
    if (window.innerHeight + window.pageYOffset &amp;gt;= document.body.offsetHeight) {
        fetch(url).then(res =&amp;gt; {
            if (res.ok) {
                return res.json();
            }
        }).then(data =&amp;gt; {
            console.dir(data)
            page += 1
            content.innerHTML += data.map(
                obj=&amp;gt;`&amp;lt;div&amp;gt;
                &amp;lt;h1&amp;gt;${obj.title}&amp;lt;/h1&amp;gt; 
                &amp;lt;p&amp;gt;${obj.content}&amp;lt;/p&amp;gt; 
                &amp;lt;/div&amp;gt;`
                ).join("\n")
        }).catch(err =&amp;gt; {

        })
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope this helps shed some weight on your web application, because things like these are not worth intsalling an external library (waypointjs i'm looking at you), please help your app shed some weight! Happy coding!&lt;/p&gt;

</description>
      <category>django</category>
      <category>ajax</category>
      <category>fetch</category>
      <category>pagination</category>
    </item>
    <item>
      <title>üê≥ Docker para desarrolladores</title>
      <author>Fernando Cutire</author>
      <pubDate>Thu, 12 Aug 2021 23:05:11 +0000</pubDate>
      <link>https://dev.to/fernandocutire/docker-para-desarrolladores-bk6</link>
      <guid>https://dev.to/fernandocutire/docker-para-desarrolladores-bk6</guid>
      <description>&lt;p&gt;Docker es una herramienta maravillosa para desarrolladores y el concepto de empaquetar tus dependencias en un solo lugar que corre en cualquier lugar suena casi ut√≥·πïico.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#en-este-art%C3%ADculo-aprender%C3%A1s"&gt;
  &lt;/a&gt;
  En este art√≠culo aprender√°s
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;C√≥mo leer un Dockerfile&lt;/li&gt;
&lt;li&gt;Problemas comunes al correr tu Dockerfile&lt;/li&gt;
&lt;li&gt;Analizar Dockerfile de una SPA&lt;/li&gt;
&lt;li&gt;C√≥mo construir tus propios dockerfile&lt;/li&gt;
&lt;li&gt;Keywords b√°sicas sobre los Dockerfile&lt;/li&gt;
&lt;li&gt;Qu√© es alpine y porqu√© es usado&lt;/li&gt;
&lt;li&gt;Donde buscar im√°genes para tus contenedores&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Usar√© un ejemplo para que podamos entender mejor el funcionamiento de un Dockerfile, un ejemplo para una aplicaci√≥n de react&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:current-alpine3.14&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package.json /app&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;progress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8086&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["npm", "start"]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Si empleamos la similitud entre un contenedor de esos que los barcos transportan y los docker lo podemos entender de una manera mucho m√°s sencilla y pr√°ctica.&lt;/p&gt;

&lt;p&gt;Es verdad que dentro de un contenedor puedes meter una cantidad exacta de mercanc√≠a, pero de diferentes tipos y estos poseen un tama√±o espec√≠fico para que sean f√°ciles de identificar y de llevar por los barcos.&lt;/p&gt;

&lt;p&gt;En docker funciona de forma similar, solo que nuestra mercanc√≠a es nuestra aplicaci√≥n y las reglas son las siguientes.&lt;/p&gt;

&lt;p&gt;De manera pr√°ctica nos encontraremos con &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#from"&gt;
  &lt;/a&gt;
  FROM
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:current-alpine3.14&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Esto significa que se genera un contenedor a partir de una &lt;strong&gt;imagen&lt;/strong&gt;, podemos pensar en ella como un molde que es la primera capa de nuestro contenedor. Ella tendr√° configuraciones espec√≠ficas que servir√°n para correr los comandos consecuentes, puedes ver que uso node:current-alpine3.14&lt;/p&gt;

&lt;p&gt;Esta imagen la encuentro en la p√°gina de &lt;a href="https://hub.docker.com/_/node"&gt;docker hub&lt;/a&gt;, que podemos pensar en ella como un repositorio de im√°genes, com√∫nmente buscar√°s &lt;strong&gt;im√°genes oficiales&lt;/strong&gt; (estas tienen un s√≠mbolo de imagen oficial a lado del nombre). &lt;/p&gt;

&lt;p&gt;En docker funciona de forma similar, solo que nuestra mercanc√≠a es nuestra aplicaci√≥n y las reglas son las siguientes.&lt;/p&gt;

&lt;p&gt;Ahora conocemos que esto de node:current-alpine3.14 es el nombre completo de la imagen que usamos como base, pero ¬øQu√© es alpine? Alpine es el sistema operativo (basado en linux) de nuestra imagen. Este nombre es famoso porque representa una imagen con un peso m√≠nimo de mega bytes , y esto se busca para que tu contenedor final no pese mucho, ya que no conviene mucho tener tu aplicaci√≥n de 50mb y que tu imagen base pese 250 mb.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#workdir"&gt;
  &lt;/a&gt;
  Workdir
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;El WORKDIR indica el directorio de trabajo, nos referimos a el como un directorio que se crea dentro del contenedor que se usar√° como base para correr los comandos consecuentes.&lt;/p&gt;

&lt;p&gt;Entonces conocemos que el workdir se refiere m√°s a nuestro contenedor que a tu aplicaci√≥n por eso ver√°s que en muchos lugares se le conoce como /app, si tu aplicaci√≥n usa sus archivos en src/, nada de preocupaciones, recuerda que se habla del contenedor y no tanto de tu aplicaci√≥n, esto vendr√° en los pr√≥ximos comandos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#copy"&gt;
  &lt;/a&gt;
  COPY
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package.json /app&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Los comandos COPY, hacen honor a su nombre de copiar los archivos de tu aplicaci√≥n a la del contenedor /app.&lt;/p&gt;

&lt;p&gt;Primero copiamos el package.json porque de all√≠ correremos comandos npm.&lt;/p&gt;

&lt;p&gt;Luego empleamos el COPY . . &lt;/p&gt;

&lt;p&gt;Admito que esto no es muy explicativo pero b√°sicamente es copiar lo de tu directorio al directorio de trabajo (WORKDIR) el que ya hab√≠amos espec√≠ficado anteriormente. &lt;/p&gt;

&lt;p&gt;Podr√≠amos traducir a COPY . /app&lt;/p&gt;

&lt;p&gt;El WORKDIR indica el directorio de trabajo, nos referimos a el como un directorio que se crea dentro del contenedor que se usar√° como base para correr los comandos consecuentes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run"&gt;
  &lt;/a&gt;
  RUN
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;progress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Este puede aparecer bastante en el desarrollo de una aplicaci√≥n, y hace lo que su nombre, corre en tu contenedor lo que le pongas a su izquierda as√≠ de simple.&lt;/p&gt;

&lt;p&gt;Usualmente cuando agarras una aplicaci√≥n , lo primero que haces es instalar las dependencias porque sino la aplicaci√≥n no corre, esto es un cl√°sico. Bueno en docker sucede similar, corre el npm install que har√≠as normalmente. Sobre el set progress=false es para que no meustre la barra de progreso al instalar dependencias , el &amp;amp;&amp;amp; une comandos por lo que le coloco npm install.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#expose"&gt;
  &lt;/a&gt;
  EXPOSE
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8086&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;EXPOSE sirve para decir que el puerto que tu contenedor usar√°. &lt;/p&gt;

&lt;p&gt;Aqu√≠ est√° el dilema y es que colocarlo no har√° efecto a la hora de correr el contenedor, entonces esto sirve m√°s de documentaci√≥n. Lee sobre como correr un contenedor&lt;/p&gt;

&lt;p&gt;En mi opini√≥n est√° bien colocarlo porque la documentaci√≥n es muy importante pero es bueno tener en cuenta que su utilidad es esa y a la hora de correrlo no esperar que abra en ese puerto por defecto.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cmd"&gt;
  &lt;/a&gt;
  CMD
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["npm", "start"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CMD es la consola que corre el comando que coloques entre sus corchetes, esto suceder√° cuando se termine de correr el contenedor.&lt;/p&gt;

&lt;p&gt;Quiz√° al final de la construcci√≥n de la imagen no se ejecute pero su funci√≥n se realizar√° al final de correr el contenedor y no la construcci√≥n.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recapitulando"&gt;
  &lt;/a&gt;
  Recapitulando
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;
&lt;span class="c"&gt;# Usar una imagen  &lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:current-alpine3.14&lt;/span&gt;

&lt;span class="c"&gt;# Establecer el directorio de trabajo de nuestro contenedor&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;

&lt;span class="c"&gt;# Copiar el package.json a la carpeta /app de nuestro contenedor&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package.json /app&lt;/span&gt;

&lt;span class="c"&gt;# Copiar√° otros archivos de la aplicaci√≥n&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="c"&gt;# Ejecutar el comando npm set progress=false &amp;amp;&amp;amp; npm install&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;progress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="c"&gt;# Exponer el puerto 8086 de el contenedor docker, fin de documentaci√≥n&lt;/span&gt;
&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8086&lt;/span&gt;

&lt;span class="c"&gt;# Correr√° este comando al final cuando se est√© corriendo el contenedor&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["npm", "start"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finalizando"&gt;
  &lt;/a&gt;
  Finalizando
&lt;/h2&gt;

&lt;p&gt;Al final de todo esto recuerda que puedes ejecutar el comando &lt;code&gt;docker build -t aplicacion-docker .&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-t&lt;/code&gt; significa que colocar√°s un tag que vendr√≠a a ser un nombre, aqu√≠ no puedes usar letras may√∫sculas as√≠ que separo con un gui√≥n.&lt;/p&gt;

&lt;p&gt;El &lt;code&gt;.&lt;/code&gt; al final significa que buscar√° dentro de la carpeta un Dockerfile y lo leer√° para crear una imagen a partir de las instrucciones, si abres la terminal desde otra carpeta y quieres correr el comando debes sustituir ese punto con la ubicaci√≥n de el Dockerfile, lo mismo sucede si tienes m√°s de un Dockerfile en tu aplicaci√≥n pero esto es algo que no suele suceder.&lt;/p&gt;

&lt;p&gt;Tambi√©n quiero destacar que tu archivo se debe llamar Dockerfile, si le llamas DockerFile, u otro nombre te mandar√° error, este es un error frecuente tambi√©n, recuerda Dockerfile.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>frontend</category>
    </item>
    <item>
      <title>11 Websites To Practice You Coding And Your Problem Solving Skills</title>
      <author>Aya Bouchiha</author>
      <pubDate>Thu, 12 Aug 2021 23:00:46 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/11-websites-to-practice-you-coding-and-your-problem-solving-skills-51k9</link>
      <guid>https://dev.to/ayabouchiha/11-websites-to-practice-you-coding-and-your-problem-solving-skills-51k9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#11-websites-to-practice-your-coding-and-problemsolving-skills"&gt;
  &lt;/a&gt;
  11 websites to practice your coding and problem-solving skills
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://coderbyte.com/"&gt;coderbyte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.topcoder.com/"&gt;topcoder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codewars.com/"&gt;codewars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/"&gt;Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com/"&gt;hackerrank&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://exercism.io/"&gt;exercism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codechef.com/"&gt;codechef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://coderbyte.com/"&gt;coderbyte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codefights.com/"&gt;coderfights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.spoj.com/"&gt;SPOJ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeforces.com/"&gt;codeforces&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#suggested-posts"&gt;
  &lt;/a&gt;
  Suggested Posts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/youtube-courses-projects-to-master-javascript-3lhc"&gt;Youtube Courses, Projects To Learn Javascript&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/you-complete-guide-to-set-object-in-javascript-12gc"&gt;You Complete Guide To Set Object In Javascript&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/all-js-string-methods-in-one-post-4h23"&gt;All JS String Methods In One Post!&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To Contact Me:&lt;/p&gt;

&lt;p&gt;email:&lt;a href="mailto:developer.aya.b@gmail.com"&gt;developer.aya.b@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;telegram: &lt;a href="https://t.me/AyaBouchiha"&gt;Aya Bouchiha&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have a nice day!&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>programming</category>
    </item>
    <item>
      <title>Build End-to-End Encryption in 51 lines of Rust</title>
      <author>Mrinal Wadhwa</author>
      <pubDate>Thu, 12 Aug 2021 22:19:41 +0000</pubDate>
      <link>https://dev.to/mrinal/build-end-to-end-encryption-in-51-lines-of-rust-340p</link>
      <guid>https://dev.to/mrinal/build-end-to-end-encryption-in-51-lines-of-rust-340p</guid>
      <description>&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ockam-network"&gt;
        ockam-network
      &lt;/a&gt; / &lt;a href="https://github.com/ockam-network/ockam"&gt;
        ockam
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      End-to-end encryption and mutual authentication for distributed applications.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Ockam is a &lt;a href="https://github.com/ockam-network/ockam"&gt;rust library&lt;/a&gt; that makes it simple for distributed applications to guarantee end-to-end integrity, authenticity, and confidentiality of data.&lt;/p&gt;

&lt;p&gt;In this post, we'll create two small Rust programs called Alice and Bob. Alice and Bob will send each other messages, over the network, via a cloud service. They will mutually authenticate each other and will have a cryptographic guarantee that en-route messages were not tampered or forged.&lt;/p&gt;

&lt;p&gt;The intermediary cloud service and attackers on the network will not be able to see or change the contents of en-route messages. In &lt;a href="https://github.com/ockam-network/ockam/tree/develop/documentation/guides/rust#readme"&gt;later examples&lt;/a&gt; we'll also see how we can have this end-to-end protection even when the communication path between Alice and Bob is more complex - with multiple transport connections, a variety of transport protocols and many intermediaries.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3IgHbSE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iet0jafct83uggj57ygp.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3IgHbSE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iet0jafct83uggj57ygp.jpeg" alt="Alice and Bob have an end-to-end protected secure channel between them that passes through a cloud service"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="#rust-example"&gt;Show me the code&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remove-implicit-trust-in-porous-network-boundaries"&gt;
  &lt;/a&gt;
  Remove implicit trust in porous network boundaries
&lt;/h3&gt;

&lt;p&gt;Modern distributed applications operate in highly dynamic environments. Infrastructure automation, microservices in multiple clouds or data centers, a mobile workforce, the Internet of Things, and Edge computing mean that machines and applications are continuously leaving and entering network boundaries. Application architects have learnt that they must lower the amount of trust they place in network boundaries and infrastructure.&lt;/p&gt;

&lt;p&gt;The vulnerability surface of our application cannot include &lt;em&gt;all code&lt;/em&gt; that may be running within the same porous network boundary. That surface is too big, too dynamic and usually outside the control of an application developer. Applications must instead take control of the security and reliability of their own data. To do this, all messages that are received over the network must prove who sent them and show that they weren't tampered with or forged.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lower-trust-in-intermediaries"&gt;
  &lt;/a&gt;
  Lower trust in intermediaries
&lt;/h3&gt;

&lt;p&gt;Another aspect of modern applications that can take away Alice's and Bob's ability to rely on the integrity and authenticity of incoming messages are intermediary services, such as the cloud service in our example below.&lt;/p&gt;

&lt;p&gt;Data, within distributed applications, are rarely exchanged over a single point-to-point transport connection. Application messages routinely flow over complex, multi-hop, multi-protocol routes ‚Äî &lt;em&gt;across data centers, through queues and caches, via gateways and brokers&lt;/em&gt; ‚Äî before reaching their end destination.&lt;/p&gt;

&lt;p&gt;Typically, when information or commands are exchanged through an intermediary service, the intermediary is able to &lt;code&gt;READ&lt;/code&gt; the messages that are being exchanged, &lt;code&gt;UPDATE&lt;/code&gt; en-route messages, &lt;code&gt;CREATE&lt;/code&gt; messages that were never sent, and &lt;code&gt;DELETE&lt;/code&gt; (never deliver) messages that were actually sent. Alice and Bob are entirely dependent on the security of such intermediaries. If the defenses of an intermediary are compromised, our application is also compromised.&lt;/p&gt;

&lt;p&gt;Transport layer security protocols are unable to protect application messages because their protection is constrained by the length and duration of the underlying transport connection. If there is an intermediary between Alice and Bob, the transport connection between Alice and the intermediary is completely different from the transport connection between Bob and the intermediary.&lt;/p&gt;

&lt;p&gt;This is why the intermediary has full &lt;code&gt;CRUD&lt;/code&gt; permissions on the messages in motion.&lt;/p&gt;

&lt;p&gt;In environments like &lt;em&gt;Microservices, Internet-of-Things, and Edge Computing&lt;/em&gt; there are usually many such intermediaries. Our application‚Äôs vulnerability surface quickly grows and becomes unmanageable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mutually-authenticated-endtoend-encrypted-secure-channels-with-ockam"&gt;
  &lt;/a&gt;
  Mutually Authenticated, End-to-End Encrypted Secure Channels with Ockam
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/ockam-network/ockam"&gt;Ockam&lt;/a&gt; crate makes it simple for applications to create any number of lightweight, mutually-authenticated, end-to-end encrypted secure channels. These channels use cryptography to guarantee end-to-end integrity, authenticity, and confidentiality of messages.&lt;/p&gt;

&lt;p&gt;An application can use Ockam Secure Channels to enforce &lt;strong&gt;least-privileged access&lt;/strong&gt; to commands, data, configuration, machine-learning models, and software updates that are flowing, as messages, between its distributed parts. Intermediary services and compromised software (that may be running within the same network boundary) no longer have implicit CRUD permissions on our application's messages. Instead, we have granular control over access permissions ‚Äì tampering or forgery of &lt;em&gt;data-in-motion&lt;/em&gt; is immediately detected.&lt;/p&gt;

&lt;p&gt;With end-to-end secure channels, we can make the vulnerability surface of our application strikingly small.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rust-example"&gt;
  &lt;/a&gt;
  Rust Example
&lt;/h2&gt;

&lt;p&gt;Let's build end-to-end protected communication between Alice and Bob, through a cloud service.&lt;/p&gt;

&lt;p&gt;We'll create two small Rust programs called Alice and Bob. We want Bob to create a secure channel listener and ask Alice to initiate a secure handshake (authenticated key exchange) with this listener. We'll imagine that Bob and Alice are running on two separate computers and this handshake must happen over the Internet.&lt;/p&gt;

&lt;p&gt;We'll also imagine that Bob is running within a private network and cannot open a public port exposed to the Internet. Instead, Bob registers a forwarding address on an Ockam Node, running as a cloud service in Ockam Hub.&lt;/p&gt;

&lt;p&gt;This node is at TCP address &lt;code&gt;1.node.ockam.network:4000&lt;/code&gt; and offers two general purpose Ockam services: &lt;em&gt;routing and forwarding.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;

&lt;p&gt;If you don't have it, please &lt;a href="https://www.rust-lang.org/tools/install"&gt;install&lt;/a&gt; the latest version of Rust.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Next, create a new cargo project to get started:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cargo new --lib hello_ockam &amp;amp;&amp;amp; cd hello_ockam &amp;amp;&amp;amp; mkdir examples &amp;amp;&amp;amp;
  echo 'ockam = "*"' &amp;gt;&amp;gt; Cargo.toml &amp;amp;&amp;amp; cargo build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If the above instructions don't work on your machine please &lt;a href="https://github.com/ockam-network/ockam/discussions/1642"&gt;post a question&lt;/a&gt;, we would love to help.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#bob"&gt;
  &lt;/a&gt;
  Bob
&lt;/h3&gt;

&lt;p&gt;Create a file at &lt;code&gt;examples/bob.rs&lt;/code&gt; and copy the below code snippet to it.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="c"&gt;// examples/bob.rs&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ockam&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SecureChannels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TrustEveryonePolicy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Vault&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ockam&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;RemoteForwarder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Routed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TcpTransport&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;Echoer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;// Define an Echoer worker that prints any message it receives and&lt;/span&gt;
&lt;span class="c"&gt;// echoes it back on its return route.&lt;/span&gt;
&lt;span class="nd"&gt;#[ockam::worker]&lt;/span&gt;
&lt;span class="k"&gt;impl&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;Echoer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;handle_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Routed&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[‚úì] Address: {}, Received: {}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="nf"&gt;.address&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c"&gt;// Echo the message body back on its return_route.&lt;/span&gt;
        &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="nf"&gt;.send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="nf"&gt;.return_route&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="nf"&gt;.body&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nd"&gt;#[ockam::node]&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// Initialize the TCP Transport.&lt;/span&gt;
    &lt;span class="nn"&gt;TcpTransport&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// Create a Vault to safely store secret keys for Bob.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;vault&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Vault&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// Create an Entity to represent Bob.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;bob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;vault&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// Create a secure channel listener for Bob that will wait for requests to&lt;/span&gt;
    &lt;span class="c"&gt;// initiate an Authenticated Key Exchange.&lt;/span&gt;
    &lt;span class="n"&gt;bob&lt;/span&gt;&lt;span class="nf"&gt;.create_secure_channel_listener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"listener"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TrustEveryonePolicy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// The computer that is running this program is likely within a private network and&lt;/span&gt;
    &lt;span class="c"&gt;// not accessible over the internet.&lt;/span&gt;
    &lt;span class="c"&gt;//&lt;/span&gt;
    &lt;span class="c"&gt;// To allow Alice and others to initiate an end-to-end secure channel with this program&lt;/span&gt;
    &lt;span class="c"&gt;// we connect with 1.node.ockam.network:4000 as a TCP client and ask the forwarding&lt;/span&gt;
    &lt;span class="c"&gt;// service on that node to create a forwarder for us.&lt;/span&gt;
    &lt;span class="c"&gt;//&lt;/span&gt;
    &lt;span class="c"&gt;// All messages that arrive at that forwarding address will be sent to this program&lt;/span&gt;
    &lt;span class="c"&gt;// using the TCP connection we created as a client.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;node_in_hub&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TCP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"1.node.ockam.network:4000"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;forwarder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;RemoteForwarder&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node_in_hub&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"listener"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[‚úì] RemoteForwarder was created on the node at: 1.node.ockam.network:4000"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Forwarding address for Bob is:"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;forwarder&lt;/span&gt;&lt;span class="nf"&gt;.remote_address&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="c"&gt;// Start a worker, of type Echoer, at address "echoer".&lt;/span&gt;
    &lt;span class="c"&gt;// This worker will echo back every message it receives, along its return route.&lt;/span&gt;
    &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="nf"&gt;.start_worker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"echoer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Echoer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// We won't call ctx.stop() here, this program will run until you stop it with Ctrl-C&lt;/span&gt;
    &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(())&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#alice"&gt;
  &lt;/a&gt;
  Alice
&lt;/h3&gt;

&lt;p&gt;Create a file at &lt;code&gt;examples/alice.rs&lt;/code&gt; and copy the below code snippet to it.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="c"&gt;// examples/alice.rs&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ockam&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SecureChannels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TrustEveryonePolicy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Vault&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ockam&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;TcpTransport&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;#[ockam::node]&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// Initialize the TCP Transport.&lt;/span&gt;
    &lt;span class="nn"&gt;TcpTransport&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// Create a Vault to safely store secret keys for Alice.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;vault&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Vault&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// Create an Entity to represent Alice.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;alice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;vault&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// This program expects that Bob has setup a forwarding address,&lt;/span&gt;
    &lt;span class="c"&gt;// for his secure channel listener, on the Ockam node at 1.node.ockam.network:4000.&lt;/span&gt;
    &lt;span class="c"&gt;//&lt;/span&gt;
    &lt;span class="c"&gt;// From standard input, read this forwarding address for Bob's secure channel listener.&lt;/span&gt;
    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Enter the forwarding address for Bob: "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;String&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nn"&gt;io&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nf"&gt;.read_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error reading from stdin."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;forwarding_address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="nf"&gt;.trim&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c"&gt;// Combine the tcp address of the node and the forwarding_address to get a route&lt;/span&gt;
    &lt;span class="c"&gt;// to Bob's secure channel listener.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;route_to_bob_listener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;route!&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;TCP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"1.node.ockam.network:4000"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;forwarding_address&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c"&gt;// As Alice, connect to Bob's secure channel listener, and perform an&lt;/span&gt;
    &lt;span class="c"&gt;// Authenticated Key Exchange to establish an encrypted secure channel with Bob.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alice&lt;/span&gt;&lt;span class="nf"&gt;.create_secure_channel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;route_to_bob_listener&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TrustEveryonePolicy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[‚úì] End-to-end encrypted secure channel was established.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;// Read a message from standard input.&lt;/span&gt;
        &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Type a message for Bob's echoer:"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;String&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nn"&gt;io&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nf"&gt;.read_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error reading from stdin."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="nf"&gt;.trim&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="c"&gt;// Send the provided message, through the channel, to Bob's echoer.&lt;/span&gt;
        &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="nf"&gt;.send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;route!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="nf"&gt;.clone&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;"echoer"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="nf"&gt;.to_string&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c"&gt;// Wait to receive an echo and print it.&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;reply&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="py"&gt;.receive&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Alice received an echo: {}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;// should print "Hello Ockam!"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// This program will keep running until you stop it with Ctrl-C&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#run-the-example"&gt;
  &lt;/a&gt;
  Run the example
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Run Bob‚Äôs program:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cargo run --example bob
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;The Bob program creates a Secure Channel Listener to accept requests to begin an Authenticated Key Exchange. It also connects, over TCP, to the cloud node at &lt;code&gt;1.node.ockam.network:4000&lt;/code&gt; and creates a Forwarder on that cloud node. All messages that arrive at that forwarding address will be forwarded to Bob using the TCP connection that Bob created as a client.&lt;/p&gt;

&lt;p&gt;Bob also starts an Echoer worker that prints any message it receives and echoes it back on its return route.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Bob program will print a hex value which is the forwarding address for Bob on the cloud node, copy it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In a separate terminal window, in the same directory path, run the Alice program:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cargo run --example alice
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It will stop to ask for Bob's forwarding address that was printed in step 2. Give it that address.&lt;/p&gt;

&lt;p&gt;This will tell Alice that the route to reach Bob is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[(TCP, "1.node.ockam.network:4000"), forwarding_address]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When Alice sends a message along this route, the Ockam routing layer will look at the first address in the route and hand the message to the TCP transport. The TCP transport will connect with the cloud node over TCP and hand the message to it.&lt;/p&gt;

&lt;p&gt;The routing layer on the cloud node will then take the message to the forwarding address for Bob. The forwarder at that address will send the message to Bob over the TCP connection Bob had earlier created with the cloud node.&lt;/p&gt;

&lt;p&gt;Replies, from Bob, take the same path back and the entire secure channel handshake is completed is this way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;End-to-end Secure Channel is established. Send messages to Bob and get their echoes back.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once the secure channel is established, the Alice program will stop and ask you to enter a message for Bob. Any message that you enter, is delivered to Bob using the secure channel, via the cloud node. The echoer on Bob will echo the messages back on the same path and Alice will print it.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Congratulations on creating your first end-to-end encrypted application ü•≥.&lt;/p&gt;

&lt;p&gt;We discussed that, in order to have a small and manageable vulnerability surface, distributed applications must use mutually authenticated, end-to-end encrypted channels. Implementing an end-to-end secure channel protocol, from scratch, is complex, error prone, and will take more time than application teams can typically dedicate to this problem.&lt;/p&gt;

&lt;p&gt;In the above example, we created a mutually authenticated, end-to-end encrypted channel in &lt;strong&gt;51 lines of code&lt;/strong&gt; (excluding comments).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ockam-network/ockam"&gt;Ockam&lt;/a&gt; combines proven cryptographic building blocks into a set of reusable protocols for distributed applications to communicate security and privately. The above example only scratched the surface of what is possible with the tools that our included in the &lt;code&gt;ockam&lt;/code&gt; Rust crate.&lt;/p&gt;

&lt;p&gt;To learn more, please see our use-case guide on &lt;a href="https://github.com/ockam-network/ockam/tree/develop/documentation/use-cases/end-to-end-encryption-through-kafka#readme"&gt;End-to-End Encryption through Kafka&lt;/a&gt; ü¶Ä and our &lt;a href="https://github.com/ockam-network/ockam/tree/develop/documentation/guides/rust#step-by-step"&gt;Step-by-Step Deep Dive&lt;/a&gt; ü¶Ä into the various building blocks that makeup &lt;a href="https://github.com/ockam-network/ockam"&gt;Ockam&lt;/a&gt;. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ockam-network"&gt;
        ockam-network
      &lt;/a&gt; / &lt;a href="https://github.com/ockam-network/ockam"&gt;
        ockam
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      End-to-end encryption and mutual authentication for distributed applications.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>rust</category>
      <category>security</category>
      <category>showdev</category>
      <category>technology</category>
    </item>
    <item>
      <title>Styling issues with response Templates Buttons</title>
      <author>Thomas Bnt</author>
      <pubDate>Thu, 12 Aug 2021 21:49:14 +0000</pubDate>
      <link>https://dev.to/thomasbnt/styling-issues-with-response-templates-buttons-20jf</link>
      <guid>https://dev.to/thomasbnt/styling-issues-with-response-templates-buttons-20jf</guid>
      <description>&lt;p&gt;Hello here! I'm Thomas and 22 years old. I really in love of DEV.to(gether) and sometimes I contribute to the code. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#open-source-background"&gt;
  &lt;/a&gt;
  Open Source Background
&lt;/h3&gt;

&lt;p&gt;I started a few years ago to contribute to Open Source projects, basically I love helping people. &lt;/p&gt;

&lt;p&gt;This merger allowed me to better understand some aspects of web developers, to say that you are never alone with a problem, that you can always be helped. You just have to ask!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-this-bug"&gt;
  &lt;/a&gt;
  About This Bug
&lt;/h3&gt;

&lt;p&gt;I have already seen this possibility issue, but never created a new issue on the repository. it's absolutely nothing but seeing buttons with a default style, it stings my eyes üòµ &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PNZ8_ySg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.thomasbnt.dev/i/y4i7o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PNZ8_ySg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.thomasbnt.dev/i/y4i7o.png" alt="Preview of the default buttons"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/13747"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Styling Issues With Response Templates Buttons
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#13747&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/michael-tharrington"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s----ubsuNC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/16007075%3Fv%3D4" alt="michael-tharrington avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/michael-tharrington"&gt;michael-tharrington&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/13747"&gt;&lt;time&gt;May 12, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The moderator templates button under response templates is not styled.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The buttons should be styled so that you can see when you click on one!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/16007075/117997048-a68c6700-b310-11eb-8148-dd425b3b01f9.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PfA5EAoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/16007075/117997048-a68c6700-b310-11eb-8148-dd425b3b01f9.png" alt="Image 2021-05-12 at 9 28 42 AM"&gt;&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/13747"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#how-i-smashed-it"&gt;
  &lt;/a&gt;
  How I Smashed It
&lt;/h3&gt;

&lt;p&gt;I modified the style of the two buttons while adding a black color to the &lt;code&gt;active&lt;/code&gt; class. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OGIXc-3X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.thomasbnt.dev/i/156452615641516_devto.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OGIXc-3X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.thomasbnt.dev/i/156452615641516_devto.gif" alt="Preview of buttons stylised"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Others themes work, good! &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kuXg3Y_F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.thomasbnt.dev/i/yp43g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kuXg3Y_F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.thomasbnt.dev/i/yp43g.png" alt="Others themes colors"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oh and edited &lt;strong&gt;submit buttons&lt;/strong&gt; like 'Send as Mod' and 'Insert'. More margin üòé&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--djdbGtwd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/14293805/129024997-5c0ac9c7-c1f8-4827-bf01-a46bca22b691.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--djdbGtwd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/14293805/129024997-5c0ac9c7-c1f8-4827-bf01-a46bca22b691.png" alt="Two buttons with style"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/pull/14468"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Edit buttons styles for Templates responses (Mod)
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#14468&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/thomasbnt"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--CDzcgoCT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/14293805%3Fv%3D4" alt="thomasbnt avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/thomasbnt"&gt;thomasbnt&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/pull/14468"&gt;&lt;time&gt;Aug 10, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;h2&gt;
&lt;a id="user-content-what-type-of-pr-is-this-check-all-applicable" class="anchor" href="#what-type-of-pr-is-this-check-all-applicable"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What type of PR is this? (check all applicable)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Refactor&lt;/li&gt;
&lt;li&gt;[ ] Feature&lt;/li&gt;
&lt;li&gt;[ ] Bug Fix&lt;/li&gt;
&lt;li&gt;[ ] Optimization&lt;/li&gt;
&lt;li&gt;[ ] Documentation Update&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-description" class="anchor" href="#description"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;Make styles for buttons "Personal" and "Moderator" for &lt;strong&gt;Templates responses&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-related-tickets--documents" class="anchor" href="#related-tickets--documents"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Related Tickets &amp;amp; Documents&lt;/h2&gt;
&lt;p&gt;From &lt;a href="https://github.com/forem/forem/issues/13747"&gt;https://github.com/forem/forem/issues/13747&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-qa-instructions-screenshots-recordings" class="anchor" href="#qa-instructions-screenshots-recordings"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;QA Instructions, Screenshots, Recordings&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/14293805/128946040-412c7195-ad9b-4c2b-8186-2dcba84a992f.mp4" rel="nofollow"&gt;https://user-images.githubusercontent.com/14293805/128946040-412c7195-ad9b-4c2b-8186-2dcba84a992f.mp4&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-addedupdated-tests" class="anchor" href="#addedupdated-tests"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Added/updated tests?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Yes&lt;/li&gt;
&lt;li&gt;[ ] No, and this is why: &lt;em&gt;please replace this line with details on why tests
have not been included&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;[ ] I need help with writing tests&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-forem-core-team-only-how-will-this-change-be-communicated" class="anchor" href="#forem-core-team-only-how-will-this-change-be-communicated"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;[Forem core team only] How will this change be communicated?&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Will this PR introduce a change that impacts Forem members or creators, the
development process, or any of our internal teams? If so, please note how you
will share this change with the people who need to know about it.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] I've updated the &lt;a href="https://docs.forem.com" rel="nofollow"&gt;Developer Docs&lt;/a&gt; and/or
&lt;a href="https://admin.forem.com/" rel="nofollow"&gt;Admin Guide&lt;/a&gt;, or
&lt;a href="https://storybook.forem.com/" rel="nofollow"&gt;Storybook&lt;/a&gt; (for Crayons components)&lt;/li&gt;
&lt;li&gt;[ ] I've updated the README or added inline documentation&lt;/li&gt;
&lt;li&gt;[ ] I've added an entry to
&lt;a href="https://github.com/forem/forem/tree/main/CHANGELOG.md"&gt;&lt;code&gt;CHANGELOG.md&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;[ ] I will share this change in a &lt;a href="https://forem.dev/t/changelog" rel="nofollow"&gt;Changelog&lt;/a&gt;
or in a &lt;a href="http://forem.dev" rel="nofollow"&gt;forem.dev&lt;/a&gt; post&lt;/li&gt;
&lt;li&gt;[ ] I will share this change internally with the appropriate teams&lt;/li&gt;
&lt;li&gt;[ ] I'm not sure how best to communicate this change and need help&lt;/li&gt;
&lt;li&gt;[ ] This change does not need to be communicated, and this is why not: &lt;em&gt;please
replace this line with details on why this change doesn't need to be
shared&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-optional-what-gif-best-describes-this-pr-or-how-it-makes-you-feel" class="anchor" href="#optional-what-gif-best-describes-this-pr-or-how-it-makes-you-feel"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;[optional] What gif best describes this PR or how it makes you feel?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/27598177e106725893e571e8ebfca4933b4da2ecd64ccaca6a1c85f7c31f5ded/68747470733a2f2f632e74656e6f722e636f6d2f734f77357662443961346b41414141432f6e65772d6769726c2d6669737462756d702e676966" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/27598177e106725893e571e8ebfca4933b4da2ecd64ccaca6a1c85f7c31f5ded/68747470733a2f2f632e74656e6f722e636f6d2f734f77357662443961346b41414141432f6e65772d6769726c2d6669737462756d702e676966" alt="New Girl Fistbump GIF"&gt;&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/pull/14468"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#reflection"&gt;
  &lt;/a&gt;
  Reflection
&lt;/h3&gt;

&lt;p&gt;I learned how used &lt;code&gt;@extend&lt;/code&gt; with &lt;strong&gt;SCSS&lt;/strong&gt;. Pretty nice tool, yeah! üí™üèº&lt;br&gt;
Maybe smash others bugs like that for Forem üòé&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#suggestions-for-dev-community-bug-smash"&gt;
  &lt;/a&gt;
  Suggestions for DEV Community Bug Smash
&lt;/h3&gt;

&lt;p&gt;Noope ! Just thanks &lt;em&gt;again&lt;/em&gt; to &lt;a class="mentioned-user" href="https://dev.to/nickytonline"&gt;@nickytonline&lt;/a&gt;
 &lt;a class="mentioned-user" href="https://dev.to/rhymes"&gt;@rhymes&lt;/a&gt;
 &lt;a class="mentioned-user" href="https://dev.to/citizen428"&gt;@citizen428&lt;/a&gt;
 &lt;a class="mentioned-user" href="https://dev.to/s_aitchison"&gt;@s_aitchison&lt;/a&gt;
 and &lt;a class="mentioned-user" href="https://dev.to/coffeecraftcode"&gt;@coffeecraftcode&lt;/a&gt;
 for helping me ! &lt;/p&gt;

</description>
      <category>devbugsmash</category>
    </item>
    <item>
      <title>tty only</title>
      <author>borislav nikolov</author>
      <pubDate>Thu, 12 Aug 2021 21:35:45 +0000</pubDate>
      <link>https://dev.to/jackdoe/tty-only-1ijn</link>
      <guid>https://dev.to/jackdoe/tty-only-1ijn</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A6fow3zG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u304wn2e1cbnd25lezi1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A6fow3zG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u304wn2e1cbnd25lezi1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I used only the tty (no X installed) for 5 nights. It was relaxing, and now I go back to it every time I am overwhelmed. &lt;/p&gt;

&lt;p&gt;I have to seriously re-think the way I spend time on my&lt;br&gt;
computer. Working only on a tty is completely calming experience, there are no ads, no hundreds of tabs open, no pressure, only code and text. I also noticed I read way way way less news, hacker or not.&lt;/p&gt;

&lt;p&gt;BTW, browsing was actually way better than I thought, between eww, w3m, lynx, links2 and links2 -g, and sometimes just reading the html dump, I was able to navigate the modern web with reasonable success.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#laptop"&gt;
  &lt;/a&gt;
  Laptop
&lt;/h1&gt;

&lt;p&gt;I bought used t440p laptop, they go from 100 to 300E. Super sturdy machine, like the opposite of my xps. Very easy to open, and very hackable.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h1&gt;

&lt;p&gt;Install debian and do some basic fixes to make the tty usable.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rate (whoa slow keyboard rate pisses me off)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;add 'kbdrate -r 30 -d 0' to /etc/rc.local&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ctrl+/ etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;super annoying that &lt;code&gt;ctrl+/&lt;/code&gt; sends Delete and I want to bind it to &lt;code&gt;undo&lt;/code&gt;, to do that you have to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ showkeys

press ctrl + /

check out the keycode, (in my case it is 53)

$ dumpkeys &amp;gt; keymap

change
    control keycode  53 = Delete
    shift   control keycode  53 = Delete

to
    control keycode  53 = Control_underscore
    shift   control keycode  53 = Meta_underscore

and 51 and 52 to
    shift   control keycode  51 = Control_asciicircum
    shift   control keycode  52 = Meta_asciicircum
    (I use S-C-. and S-C-, for cursor)

add 'loadkeys path/to/keymap' in /etc/rc.local

then the bindings:

(define-key global-map (kbd "C-_") 'undo)
(define-key global-map (kbd "M-_") 'undo)
(define-key global-map (kbd "M-^") 'mc/mark-next-like-this)
(define-key global-map (kbd "C-^") 'mc/mark-previous-like-this)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;mouse&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;install consolation or gpm&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;cursor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;instead of block cursor this will show the tty setup cursor (blinking underscore)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(setq visible-cursor nil)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;otherwise emacs has blinking (HZ/5 ~200ms) block cursor which is horrible, so replace it with blinking underscore to take less attention from your eyes. I tried all kinds of ways to stop the blinking but none worked.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;brightness
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;max=$(cat /sys/class/backlight/intel_backlight/max_brightness)
echo -n $max | sudo tee /sys/class/backlight/intel_backlight/brightness
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;font&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;install terminus and then add the setfont command to your bash/zshrc&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;setfont Uni3-Terminus20x10 # 12x6 14 16 22x11 24x12 28x14 32x16
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;emacs
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;init.el:

(package-initialize)
(require 'go-mode)
(require 'multiple-cursors)
(require 'tramp)
(load-library "view")
(require 'cc-mode)
(require 'ido)
(require 'compile)

(setq tramp-default-method "ssh")
(setq undo-limit 20000000)
(setq undo-strong-limit 40000000)

(defun delete-word (arg)
  "Delete characters backward until encountering the beginning of a word.
With argument ARG, do this that many times."
  (interactive "p")
  (delete-region (point) (progn (backward-word arg) (point))))

(define-key global-map (kbd "C-h") 'delete-backward-char)
(define-key global-map (kbd "M-C-h") 'backward-kill-word)
(define-key global-map (kbd "C-_") 'undo)
(define-key global-map (kbd "M-_") 'redo)

(define-key global-map (kbd "&amp;lt;M-backspace&amp;gt;") 'delete-word)
(define-key global-map (kbd "C-M-h") 'delete-word)


(define-key global-map (kbd "&amp;lt;f2&amp;gt;") 'compile)
(define-key global-map (kbd "&amp;lt;f1&amp;gt;") 'next-error)
(define-key global-map [C-tab] 'indent-region)
(define-key global-map (kbd "M-^") 'mc/mark-next-like-this)
(define-key global-map (kbd "C-^") 'mc/mark-previous-like-this)

(global-unset-key (kbd "C-t"))

(ido-mode 1)

(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)

(setq inhibit-startup-message t)

(global-linum-mode 0)
(display-time-mode 1)
(global-font-lock-mode -1)
(gpm-mouse-mode -1)
(setq backward-delete-char-untabify nil)

(display-battery-mode 1)
(setq make-backup-files nil)
(setq auto-save-deault nil)

(show-paren-mode 1)
(setq show-paren-delay 0.0)
(setq show-paren-style 'parenthesis)
(transient-mark-mode t)
(fset 'yes-or-no-p 'y-or-n-p)

(defun custom-go-mode-hook ()
  (setq gofmt-command "goimports")
  (add-hook 'before-save-hook 'gofmt-before-save)
  (if (not (string-match "go" compile-command))
      (set (make-local-variable 'compile-command)
           "go generate &amp;amp;&amp;amp; go build -v &amp;amp;&amp;amp; go test -v &amp;amp;&amp;amp; go vet &amp;amp;&amp;amp;  golangci-lint run"))
  (if (not (string-match "go" compile-command))
      (set (make-local-variable 'compile-command)
           "go build -v &amp;amp;&amp;amp; go test -v &amp;amp;&amp;amp; go vet"))
  (local-set-key (kbd "M-.") 'godef-jump)
  (local-set-key (kbd "M-,") 'pop-tag-mark)
)

(add-hook 'go-mode-hook 'custom-go-mode-hook)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.bashrc:

export VISUAL='emacsclient -ct'
export EDITOR='emacsclient -ct'
alias e='emacsclient -ct'
alias emacs=e
alias vi=e
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;also start emacs daemon:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~/.config/systemd/user/emacs.service

[Unit]
Description=Emacs text editor
Documentation=info:emacs man:emacs(1) https://gnu.org/software/emacs/

[Service]
Type=forking
ExecStart=/usr/bin/emacs --daemon
ExecStop=/usr/bin/emacsclient --eval "(kill-emacs)"
Environment=SSH_AUTH_SOCK=%t/keyring/ssh
Restart=on-failure


[Install]
WantedBy=default.target
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;fzf&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;setup zsh with shared history and fzf&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;lock&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;vlock -all on pm suspend&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;email (personal)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I use &lt;code&gt;forgotten&lt;/code&gt; (github.com/jackdoe/forgotten) to manage encrypted list of passwords, so just use it with mutt:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.muttrc

source "/usr/bin/forgotten -key gmail -mutt |"
set from = "xyz@example.com"
set realname = "aa bb"
set use_from = yes
set envelope_from = yes
set smtp_url = "smtp://xyz@example.com@smtp.gmail.com:587"
set smtp_pass =$my_pass
set imap_user = "xyz@example.com"
set imap_pass =$my_pass
set folder = "imaps://imap.gmail.com:993"
set spoolfile = "+INBOX"
set ssl_force_tls = yes
bind index G imap-fetch-mail
set editor = "emacsclient -ct"
set charset = "utf-8"
set record = ''
set header_cache = "~/.mutt/cache/headers"
set message_cachedir = "~/.mutt/cache/bodies"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#day-1"&gt;
  &lt;/a&gt;
  Day 1:
&lt;/h1&gt;

&lt;p&gt;After installing and doing the basic setup it was pretty late, so I didnt do much more.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;links2 works nice, but too graphical, its ok to see images though&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;non ips display is total shit for console; bought new one from amazon, we will see this saturday&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;replace gpm with consolation&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#day-2"&gt;
  &lt;/a&gt;
  Day 2
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;patched consolation to support right touchpad click because myh middle button is not very good&lt;/li&gt;
&lt;li&gt;fixed the ips display; it is a total gamechanger. the black is so much more black than before; amazing for tty&lt;/li&gt;
&lt;li&gt;fix alsa default card
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat &amp;gt; /etc/asound.conf &amp;lt;&amp;lt;EOF
defaults.pcm.card 1
defaults.ctl.card 1
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;download some royalty free music and played it with mplayer&lt;/li&gt;
&lt;li&gt;battery lasts quite a lot&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I wish eww worked better, I hate going out of emacs&lt;br&gt;
I am so happy with the new display.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;setup tlp; cap max freq at 1000mhz, I should've gotten i5 instead of i7, this i7 is just hot for no reason. Will disable hyper threading, maybe it will feel better. Or maybe I should open the laptop and clean it. Even with 1 core and no hyperthreading and cap on 1ghz it still gets hot, I guess its cleaning time; will actually check on amazon for i5, shouldnt be very expensive. Though despite the temperature, battery lasts for 6 hours (possibly more)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;went back to gpm; having mouse in links2 -g seems better&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#day-3"&gt;
  &lt;/a&gt;
  Day 3
&lt;/h1&gt;

&lt;p&gt;The new screen arrived, took exactly 5 minutes to replace, I love working on machines that are easy to repair.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;wow that is a good screen haha, I forgot how much nicer it is&lt;/li&gt;
&lt;li&gt;i5 cpus are super expensive; no way I am buying one&lt;/li&gt;
&lt;li&gt;removed thermald and started using thinkfan with lower threshold (had to add options thinkpad_acpi experimental=1 fan_control=1 in modprobe.d/thinkfan.conf), so using fan level 1 at 40C is much better because when it gets to 50C it is just hot on my palm&lt;/li&gt;
&lt;li&gt;still thinking of what to write&lt;/li&gt;
&lt;li&gt;it is incredibly calming having no windows&lt;/li&gt;
&lt;li&gt;I did open and clean up the turbine a bit, but wasnt much to clean it is however really nice to have a laptop that is meant to be open&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#day-4"&gt;
  &lt;/a&gt;
  Day 4
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;made copy paste http service on top of unix socket, so I can copy between emacs and zsh without using ansi-term (&lt;a href="https://github.com/jackdoe/pasta"&gt;https://github.com/jackdoe/pasta&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There is no way to programatically get the current selection from the linux kernel, so I made a patch to add new ioctl to be able to get the selection, so i can use it with M-w and C-y.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# build custom kernel on debian:

cd /usr/src &amp;amp;&amp;amp; \
git clone --depth=1 \
git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git

# change what you want, and then
# copy your config from linux-config-5.xx into the trunk and then:

make -j8 bindep-pkg LOCALVERSION=-xyz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;working without X for the whole day, was pretty fun.&lt;/p&gt;

&lt;p&gt;This is the getsel ioctl patch&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;commit 5cf882d8b74747bbc08463d83cf80509c920edca
Author: borislav nikolov &amp;lt;jack@sofialondonmoskva.com&amp;gt;
Date:   Sat Mar 21 23:42:22 2020 +0100

    patch for GETSEL
    add copy_selection_to_user

diff --git a/drivers/tty/vt/selection.c b/drivers/tty/vt/selection.c
index d54a549c5892..9b26dec762dd 100644
--- a/drivers/tty/vt/selection.c
+++ b/drivers/tty/vt/selection.c
@@ -6,6 +6,7 @@
  *                struct tty_struct *)'
  *     'int set_selection_kernel(struct tiocl_selection *, struct tty_struct *)'
  *     'void clear_selection(void)'
+ *     'int copy_selection_to_user(char __user *)'
  *     'int paste_selection(struct tty_struct *)'
  *     'int sel_loadlut(char __user *)'
  *
@@ -71,6 +72,45 @@ sel_pos(int n, bool unicode)
    return inverse_translate(vc_sel.cons, screen_glyph(vc_sel.cons, n), 0);
 }

+/**
+ * copy_selection_to_user      -   get current selection
+ *
+ * Get a copy of current selection, console lock does not have to
+ * be held
+ */
+int copy_selection_to_user(char __user *arg)
+{
+   int get_sel_user_size;
+   int ret;
+
+   if (copy_from_user(&amp;amp;get_sel_user_size,
+              arg,
+              sizeof(vc_sel.buf_len)))
+       return -EFAULT;
+
+   mutex_lock(&amp;amp;vc_sel.lock);
+
+   if (get_sel_user_size &amp;lt; vc_sel.buf_len) {
+
+       mutex_unlock(&amp;amp;vc_sel.lock);
+
+       return -EFAULT;
+   }
+
+   ret = copy_to_user(arg,
+              &amp;amp;vc_sel.buf_len,
+              sizeof(vc_sel.buf_len));
+   if (ret == 0)
+       ret = copy_to_user(arg+sizeof(vc_sel.buf_len),
+                  vc_sel.buffer,
+                  vc_sel.buf_len);
+
+   mutex_unlock(&amp;amp;vc_sel.lock);
+
+   return ret;
+}
+EXPORT_SYMBOL_GPL(copy_selection_to_user);
+
 /**
  * clear_selection     -   remove current selection
  *
diff --git a/drivers/tty/vt/vt.c b/drivers/tty/vt/vt.c
index 309a39197be0..2b7eb55aafa3 100644
--- a/drivers/tty/vt/vt.c
+++ b/drivers/tty/vt/vt.c
@@ -3061,6 +3061,9 @@ int tioclinux(struct tty_struct *tty, unsigned long arg)
        case TIOCL_PASTESEL:
            ret = paste_selection(tty);
            break;
+       case TIOCL_GETSEL:
+           ret = copy_selection_to_user(p+1);
+           break;
        case TIOCL_UNBLANKSCREEN:
            console_lock();
            unblank_screen();
diff --git a/include/linux/selection.h b/include/linux/selection.h
index 5b890ef5b59f..7cb971795013 100644
-------- a/include/linux/selection.h
+++ b/include/linux/selection.h
@@ -15,6 +15,7 @@ struct tty_struct;
 struct vc_data;

 extern void clear_selection(void);
+extern int copy_selection_to_user(char __user *arg);
 extern int set_selection_user(const struct tiocl_selection __user *sel,
                  struct tty_struct *tty);
 extern int set_selection_kernel(struct tiocl_selection *v,
diff --git a/include/uapi/linux/tiocl.h b/include/uapi/linux/tiocl.h
index b32acc229024..055ebda041d4 100644
-------- a/include/uapi/linux/tiocl.h
+++ b/include/uapi/linux/tiocl.h
@@ -20,6 +20,7 @@ struct tiocl_selection {
 };

 #define TIOCL_PASTESEL 3   /* paste previous selection */
+#define TIOCL_GETSEL   18  /* get current selection */
 #define TIOCL_UNBLANKSCREEN    4   /* unblank screen */

 #define TIOCL_SELLOADLUT   5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;to use the patch you need something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;sys/ioctl.h&amp;gt;
#include &amp;lt;linux/tiocl.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
#include &amp;lt;sys/stat.h&amp;gt;
#include &amp;lt;fcntl.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;strings.h&amp;gt;


struct getsel {
  char code;
  int size;
  char data[0];
} __attribute((__packed__));

struct getsel * get_selection(int size) {
  struct getsel *d = (struct getsel *) malloc(size + sizeof(struct getsel));
  if (d == NULL) {
    perror("malloc");
    exit(1);
  }

  bzero(d, size + sizeof(struct getsel));

  d-&amp;gt;code = 18; // TIOCL_GETSEL
  d-&amp;gt;size = size;

  int fd = open("/dev/tty",O_RDWR);
  if (ioctl(fd, TIOCLINUX, d) &amp;lt; 0) {
    perror("paste: TIOCLINUX");
    exit(1);
  }
  close(fd);
  return d;
}

int main(void) {
  int size = 200;
  struct getsel *d = get_selection(size);

  printf("size: %d\n",d-&amp;gt;size);
  for (int i = 0; i &amp;lt; size; i++) {
    if (d-&amp;gt;data[i]) {
      printf("data[%d] = %d\n",i, d-&amp;gt;data[i]);
    }
  }
  d-&amp;gt;data[d-&amp;gt;size-1] = '\0';
  printf("string: %s\n", d-&amp;gt;data);
  free(d);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;anyway, there are still issues to be solved, for example when I press ctrl+y while &lt;code&gt;cat&lt;/code&gt; is open I cant past inside, because cat hoards the input.. I should patch the usb driver to take it before cat..&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;moved man to be within emacs
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;in .zshrc:
man() {
  emacsclient -ct -e '(man "'$1'")'
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;still need to get man9&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#day-5"&gt;
  &lt;/a&gt;
  Day 5
&lt;/h1&gt;

&lt;p&gt;fucking cursor blinking is annoying the hell out of me&lt;br&gt;
I tried all kinds of tricks to disable it from tty and emacs&lt;br&gt;
it is always fucking blinking.&lt;/p&gt;

&lt;p&gt;so&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(setq visible-cursor nil)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and patch it in the kernel!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;commit afda0f8175fe560d86e1f2ec0b33a9f25b3bf13f
Author: borislav nikolov &amp;lt;jack@sofialondonmoskva.com&amp;gt;
Date:   Wed Apr 1 09:13:55 2020 +0200

    fuck blinking underline

diff --git a/drivers/tty/vt/vt.c b/drivers/tty/vt/vt.c
index 2b7eb55aafa3..b8a7478c9f98 100644
-------- a/drivers/tty/vt/vt.c
+++ b/drivers/tty/vt/vt.c
@@ -2306,13 +2306,6 @@ static void do_con_trol(struct tty_struct *tty, struct vc_data *vc, int c)
                set_mode(vc, 0);
            return;
        case 'c':
-           if (vc-&amp;gt;vc_priv == EPdec) {
-               if (vc-&amp;gt;vc_par[0])
-                   vc-&amp;gt;vc_cursor_type = vc-&amp;gt;vc_par[0] | (vc-&amp;gt;vc_par[1] &amp;lt;&amp;lt; 8) | (vc-&amp;gt;vc_par[2] &amp;lt;&amp;lt; 16);
-               else
-                   vc-&amp;gt;vc_cursor_type = cur_default;
-               return;
-           }
            break;
        case 'm':
            if (vc-&amp;gt;vc_priv == EPdec) {
diff --git a/drivers/video/fbdev/core/fbcon.c b/drivers/video/fbdev/core/fbcon.c
index bb6ae995c2e5..721f326b01e6 100644
-------- a/drivers/video/fbdev/core/fbcon.c
+++ b/drivers/video/fbdev/core/fbcon.c
@@ -173,7 +173,7 @@ static const struct consw fb_con;

 static int fbcon_set_origin(struct vc_data *);

-static int fbcon_cursor_noblink;
+static int fbcon_cursor_noblink = 1;

 #define divides(a, b)  ((!(a) || (b)%(a)) ? 0 : 1)

@@ -3527,13 +3527,8 @@ static ssize_t store_cursor_blink(struct device *device,

    blink = simple_strtoul(buf, last, 0);

-   if (blink) {
-       fbcon_cursor_noblink = 0;
-       fbcon_add_cursor_timer(info);
-   } else {
-       fbcon_cursor_noblink = 1;
-       fbcon_del_cursor_timer(info);
-   }
+   fbcon_cursor_noblink = 1;
+   fbcon_del_cursor_timer(info);

 err:
    console_unlock();
diff --git a/include/linux/console_struct.h b/include/linux/console_struct.h
index 24d4c16e3ae0..b21061f8aad7 100644
-------- a/include/linux/console_struct.h
+++ b/include/linux/console_struct.h
@@ -166,7 +166,7 @@ extern void vc_SAK(struct work_struct *work);
 #define CUR_HWMASK 0x0f
 #define CUR_SWMASK 0xfff0

-#define CUR_DEFAULT CUR_UNDERLINE
+#define CUR_DEFAULT CUR_BLOCK

 bool con_is_visible(const struct vc_data *vc);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;applying it..&lt;/p&gt;

&lt;p&gt;Whoaaa, this is so beautiful.. just a block ‚ñà, absolutely amazing.&lt;/p&gt;

&lt;p&gt;I did not expect the blinking to put so much mental pressure, having ‚ñà just sitting not doing anything, just telling you where you are, its like meditation for the eyes.&lt;/p&gt;

&lt;p&gt;Conclusion:&lt;/p&gt;

&lt;p&gt;I have to seriously re-think the way I spend time on my other&lt;br&gt;
computer. Working only on a tty is completely calming experience, there are no ads, no pressure, only code and text.&lt;/p&gt;

&lt;p&gt;I will keep working on it to improve the tty experience, and I will actively work on reducing my dependency on the modern web, e.g. use &lt;code&gt;go doc&lt;/code&gt; more than google, build local search indexes etc. I hope to will some of it to my daily work life.&lt;/p&gt;

&lt;p&gt;PS:&lt;/p&gt;

&lt;p&gt;Those kernel patches are just for fun, don't take them seriously.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>burnout</category>
    </item>
    <item>
      <title>Are you on TikTok?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 12 Aug 2021 21:20:12 +0000</pubDate>
      <link>https://dev.to/devteam/are-you-on-tiktok-546h</link>
      <guid>https://dev.to/devteam/are-you-on-tiktok-546h</guid>
      <description>&lt;p&gt;I don't know about you, but I frequently find myself &lt;em&gt;lost&lt;/em&gt; in TikTok's #techtok content. There are so many brilliant content creators and software developers there sharing clips of their skills, inner monologues, humor, and beyond. Who knew that so much could be communicated and captured in just a few seconds? ü§Ø &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#if-youre-a-software-developer-whos-also-on-tiktok-share-your-profile-in-the-comments-below-so-we-can-all-follow-you"&gt;
  &lt;/a&gt;
  If you're a software developer who's also on TikTok, share your profile in the comments below so we can all follow you!
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I also wanted to let you know that, whether you're on TikTok or not, there's an awesome opportunity to be featured on the &lt;a href="https://codelandconf.com"&gt;CodeLand 2021&lt;/a&gt; program using your skills and personality as a developer...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CodeLand Recess&lt;/strong&gt; is a community-sourced track of short TikTok-&lt;em&gt;style&lt;/em&gt; videos that will lend some fun, humor, and developer-realness to the day's events. We'd love to see a video submission from you! &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;All CodeLand Recess video submissions are due by August 20th by 11:59 PM PT (6 AM UTC the following day).&lt;/strong&gt; Get yours in soon! Instructions and examples &lt;a href="https://community.codenewbie.org/codenewbie/reminder-submit-a-short-video-for-codeland-recess-by-august-20th-4623"&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#share-your-tiktok-profile-in-the-comments-below-and-consider-submitting-a-video-to-codeland-recess"&gt;
  &lt;/a&gt;
  Share your TikTok profile in the comments below ‚Äî and consider submitting a video to &lt;a href="https://community.codenewbie.org/codenewbie/reminder-submit-a-short-video-for-codeland-recess-by-august-20th-4623"&gt;CodeLand Recess&lt;/a&gt;!
&lt;/h2&gt;

</description>
      <category>discuss</category>
      <category>codenewbie</category>
      <category>codeland</category>
    </item>
    <item>
      <title>Developing secure systems (Part 1): Why it matters</title>
      <author>Jan Dalheimer</author>
      <pubDate>Thu, 12 Aug 2021 21:15:20 +0000</pubDate>
      <link>https://dev.to/02jandal/developing-secure-systems-part-1-why-it-matters-327j</link>
      <guid>https://dev.to/02jandal/developing-secure-systems-part-1-why-it-matters-327j</guid>
      <description>&lt;p&gt;Security breaches, leaks, and other attacks feature in the news almost weekly, often as the result of insecure systems. While it will always be an arms race between attackers and ‚Äúdefenders‚Äù, there is actually a lot that can be done by any developer to significantly decrease the risk of being the next successful target.&lt;/p&gt;

&lt;p&gt;A couple of weeks ago Coop, one of Sweden‚Äôs largest grocery store chains, along with many other retailers in both Sweden and other countries, was hit by a large &lt;a href="https://www.bbc.com/news/technology-57707530"&gt;ransomware attack&lt;/a&gt; that effectively shut down entire stores for several days. Currently in the news is the &lt;a href="https://www.theguardian.com/world/2021/jul/18/revealed-leak-uncovers-global-abuse-of-cyber-surveillance-weapon-nso-group-pegasus"&gt;Pegasus Project&lt;/a&gt;, which has uncovered espionage against presidents, journalists, human rights activists, and others using vulnerabilities in iMessage.&lt;/p&gt;

&lt;p&gt;But not only people and organizations with large targets on their backs are affected. This is the first post on my blog, and during the first few days while setting the blog up I already had hundreds of attempts to brute force the administrator password. In short, no one can assume that they are ‚Äúsafe‚Äù.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this series of posts, I will present reasons for why (this post) security matters, and how to approach it from a developer perspective during the entire life cycle of a software project (the rest of the posts). I aim to have posts that are understandable to beginner and intermediate programmers (who want to strengthen their knowledge) but also contain something new to learn for experts. The focus will mostly be on networked systems; basically, any software that has and/or uses network access, which is‚Ä¶ almost all software.&lt;/p&gt;

&lt;p&gt;Note that you won‚Äôt become a security expert just by reading these (or probably any) blog posts. Depending on the risks involved in your particular project you should also engage a security expert and possibly other roles like pen-tester and security auditors etc.&lt;/p&gt;

&lt;p&gt;This first post will focus mostly on the ‚Äúhuman‚Äù side of software security and how to approach it. The next posts will be of a more technical nature.&lt;/p&gt;

&lt;p&gt;More posts in this series:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Developing secure systems (Part 1): Why it matters&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jansorganicsoftware.farm/2021/08/developing-secure-systems-part-2-protecting-data/"&gt;Developing secure systems (Part 2): Protecting data &amp;amp; passwords&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-happens-if-security-is-neglected"&gt;
  &lt;/a&gt;
  What happens if security is neglected
&lt;/h2&gt;

&lt;p&gt;The examples in the introduction of this post gave a glimpse of what can happen upon a successful attack. But there are actually quite a few things that can happen:&lt;/p&gt;

&lt;p&gt;The most obvious is &lt;strong&gt;loss of revenue&lt;/strong&gt;. If your system is successfully attacked (for example through a ransomware attack as in the example with Coop) there will be a period of time where the system will not be used as intended, and therefore not be able to generate any revenue.&lt;/p&gt;

&lt;p&gt;Then there are of course &lt;strong&gt;fines&lt;/strong&gt;. Either fines as defined by law (for example in GDPR in case of a data breach) or through contractual obligations. In the case of contracts you‚Äôll often find two reasons for fines; data breaches and SLAs. In short, SLAs define how much downtime your system may have, and obviously, if your system goes down due to a security breach you may violate the SLA.&lt;/p&gt;

&lt;p&gt;A bit more indirect, but possibly even more expensive than loss of revenue and fines, is the &lt;strong&gt;bad PR&lt;/strong&gt; or &lt;strong&gt;loss of trust&lt;/strong&gt; that a security breach might bring with it. While good PR (usually involving timely announcements and owning up to the breach) may soften the blow, the effects can still be devastating.&lt;/p&gt;

&lt;p&gt;And final, worst of all, there might even be &lt;strong&gt;death&lt;/strong&gt; or &lt;strong&gt;injury&lt;/strong&gt; involved. Only a few sectors (like medical, military, and aviation) risk this as a direct result of a security breach, but a breach in pretty much any system has the potential to indirectly lead to death or injury (as has been shown just recently by the Pegasus Project).&lt;/p&gt;

&lt;p&gt;In short; you really don‚Äôt want to be the next target of a successful attack.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-responsibilities-as-a-developer"&gt;
  &lt;/a&gt;
  Your responsibilities as a developer
&lt;/h2&gt;

&lt;p&gt;When working as a system developer, software engineer, programmer, or whatever you call yourself, it is way too easy to get ‚Äúlost in the code‚Äù. One just takes the next task, the next challenge, and begins working. We‚Äôre problem solvers after all, and solving problems is what we like to do! But it is important to remember to raise your own sight and try to see the bigger picture. Sure, there are usually project managers, product owners, and other technical leaders, but face it; they rarely are experts on all topics.&lt;/p&gt;

&lt;p&gt;You should make sure not just that your code does what it should, but also that it and the rest of the system is secure. Sadly, security is far from always found that the top of a project manager‚Äôs priorities. This is often a deeper issue; a project manager will priorities things that bring in money, which will depend on what the customer has requested. Knowing about the dangers of insecure software and prioritizing security therefore must happen at all levels, from customers to the entire project team.&lt;/p&gt;

&lt;p&gt;This means that if no one else has considered security aspects it falls to you as the developer to enlighten your peers and hopefully get security prioritized.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-prioritise-security"&gt;
  &lt;/a&gt;
  How to prioritise security
&lt;/h2&gt;

&lt;p&gt;I‚Äôve talked quite a bit about priorities, but how should one actually prioritize security in any software project? I‚Äôd say:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;li&gt;Fullfils it‚Äôs use case(s)&lt;/li&gt;
&lt;li&gt;Bug free, sustainable, scalable, etc. (no particular order for the sake of this post)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This means that if you cannot securely implement something, it should not be implemented at all. Though you should also consider what is ‚Äúgood enough‚Äù, not every project will have the same risks, though there is a sort of baseline security that every project should have (most of which will be covered in future posts in this series). If you are unsure of the risks involved you should talk to your project manager about a risk analysis, it might already exist or it might be about time to do one.&lt;/p&gt;

&lt;p&gt;Another aspect here is money. When creating a budget for a new system there needs to be enough money allocated for security. Not only during design and development though, but there also needs to be money in the operational budget to keep on top of updates and new vulnerabilities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#assessing-security-risks"&gt;
  &lt;/a&gt;
  Assessing security risks
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cKSOnK8c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jansorganicsoftware.farm/wp-content/uploads/2021/07/735px-FAA_8040.4B_Risk_matrix.svg_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cKSOnK8c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jansorganicsoftware.farm/wp-content/uploads/2021/07/735px-FAA_8040.4B_Risk_matrix.svg_.png" alt="A risk matrix"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;A risk matrix (image source: FAA via &lt;a href="https://commons.wikimedia.org/wiki/File:FAA_8040.4B_Risk_matrix.svg"&gt;Wikimedia&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Most risk assessments will use a ‚Äúrisk matrix‚Äù with the axes severity/impact and likelihood. The idea is that risks that are improbable or have a minimal impact are fine, while common and/or large impacts need to be handled (by either reducing the likelihood or the impact).&lt;/p&gt;

&lt;p&gt;When estimating the likelihood of a software security risk you may need to take into account how likely an active attack is. Your personal portfolio website is less likely to become a target than the internal systems of a large organization. Try to imagine what someone would gain by attacking your system, for example; what data do you store that could be leaked? You can decrease the estimated likelihood by actions like hardening your systems, keeping dependencies up-to-date, commissioning pen-tests and audits, etc.&lt;/p&gt;

&lt;p&gt;For estimating &lt;strong&gt;impact&lt;/strong&gt; you should estimate what you, your organization, and ultimately your customers have to lose. How much money, goodwill, and maybe even lives would you lose if a risk materializes?&lt;/p&gt;

&lt;p&gt;A security risk assessment such as this is a good tool to identify any actions you might want to perform, but it can also help give a better understanding of the bigger picture. Are we developing something highly likely to be targeted by attackers? Are we dealing with high values?&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h4&gt;

&lt;p&gt;Let‚Äôs imagine that we are to develop a new &lt;a href="https://todomvc.com/"&gt;TODO application&lt;/a&gt;. An initial risk assessment might result in the following matrix (only 3√ó3 for this example):&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Minor&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Major&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Catastrophic&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Common&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Remote&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Data of single account accessed through malware on a users device&lt;/td&gt;
&lt;td&gt;Single account accessed by an unauthorized user&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Improbable&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Irrecoverable ransomware&lt;br&gt;Customer data leaked&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;We can‚Äôt really do anything about malware running on the device of a user, and most users understand this, so even though the impact to the user might be larger the impact to us is only minor.&lt;/p&gt;

&lt;p&gt;Once you have established this kind of matrix you can try to extract actions that can move risks to lower likelihood or impact. As an example, by auditing and pen-testing we could reduce the likelihood of bugs in our authorization routines that allow an unauthorized user to access another user‚Äôs account.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#security-throughout-the-development-process"&gt;
  &lt;/a&gt;
  Security throughout the development process
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H2J8kG53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jansorganicsoftware.farm/wp-content/uploads/2021/07/process-overview-1024x244.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H2J8kG53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jansorganicsoftware.farm/wp-content/uploads/2021/07/process-overview-1024x244.png" alt="An overview of the software development process with focus on developing a secure system, with focus on developing a secure system"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Keeping security in mind is important throughout the entire development process, though exactly which things you should be mindful of varies. The same applies to pretty much development methodologies though, even if the steps might be slightly differently arranged.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#project-inception"&gt;
  &lt;/a&gt;
  Project inception
&lt;/h3&gt;

&lt;p&gt;You can‚Äôt really start thinking about security early on enough. It is especially important to establish if the proposed system can be implemented in a secure way (and if not, reconsider if the project should be started at all).&lt;/p&gt;

&lt;p&gt;It might also be wise to do an initial risk assessment early on; though it may need to be expanded later.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#planning-amp-architecture"&gt;
  &lt;/a&gt;
  Planning &amp;amp; Architecture
&lt;/h3&gt;

&lt;p&gt;Of course, it‚Äôs important to have sound foundations to build upon. And while designing a system to be secure is not something you‚Äôll do during dinner, there actually exist a handful of principles that can allow even a novice to get quite far. Having a secure design can significantly decrease the risk of vulnerabilities, but it does not prevent vulnerabilities introduced during development:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#development"&gt;
  &lt;/a&gt;
  Development
&lt;/h3&gt;

&lt;p&gt;It‚Äôs during actual development that a lot of the ‚Äúclassical‚Äù system security comes into play. Preventing SQL-injections, authentication, choosing dependencies, etc. While a good design is important even the best design cannot prevent a wrongly implemented system from being vulnerable.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KTzRlAhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jansorganicsoftware.farm/wp-content/uploads/2021/07/Harden_III.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KTzRlAhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jansorganicsoftware.farm/wp-content/uploads/2021/07/Harden_III.png" alt='A screenshot from a Pokemon game, showing the move "Harden"'&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Most of the security aspects of deploying software are about ‚Äúhardening‚Äù the system (image source: &lt;a href="https://bulbapedia.bulbagarden.net/wiki/Harden_(move)"&gt;Bulbapedia&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once you have a system that‚Äôs ready to get deployed, a new set of considerations come into play. You need to be aware of the best configuration of the platform (operating system, networking, runtimes, etc.) you‚Äôre running on and know how to apply it. This is often called ‚Äúhardening‚Äù. Of course, you also need to make sure that you are deploying what you think you are deploying (no amount of system hardening can help you if you are deploying malware).&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#maintenance"&gt;
  &lt;/a&gt;
  Maintenance
&lt;/h3&gt;

&lt;p&gt;Now your system is running and doing well, so now you can take a vacation, right? Sadly, it is not that simple. You need to be aware of new security bugs and other vulnerabilities, both in your own system and in the dependencies you use. Security-wise it‚Äôs often a good investment to preemptively keep dependencies up-to-date, both to reduce the risk of old vulnerabilities being exploited and because it simplifies updating if a new vulnerability is identified.&lt;/p&gt;

&lt;p&gt;This stage also has a lot of overlap with the Development and Deployment stages.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#social-engineering"&gt;
  &lt;/a&gt;
  Social engineering
&lt;/h2&gt;

&lt;p&gt;Because it is less technical in nature I‚Äôm also going to bring up social engineering in this first post. Though many variants of social engineering exist, they all exploit some human weaknesses like curiosity, social pressure, benevolence, etc. to gain access to some system. Common examples include phishing, leaving infected USB-drives where your target will find them and hopefully plug into their computer out of curiosity, and in dedicated cases even blackmail.&lt;/p&gt;

&lt;p&gt;Social engineering is quite different from the others listed in that it‚Äôs not actually a technical but rather a human fault, consequently, it‚Äôs also quite hard to prevent through technical means. If an attacker has in some way convinced someone with proper authorization to hand it over then you have likely lost. There exist a few solutions though; proper 2FA prevents many phishing attempts, and in high-risk scenarios, you could require the authorization of multiple people. Logging all access and actions can help to identify who was socially engineered, but by the time you inspect these logs, it might already be too late.&lt;/p&gt;

&lt;p&gt;By far the best solution though is educating people, both inside and outside your organization, about the dangers of social engineering and how to withstand it.&lt;/p&gt;

&lt;p&gt;I highly recommend watching this great video by Tom Scott which gives a nightmare scenario of what could happen if a single person (in this case by own accord so not really social engineering, but it‚Äôs similar enough) misuses their authorizations:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/y4GB_NDU43Q"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;These days software security is more important than ever, and every developer should know at least the basics of developing a secure system. Often this might go further than purely technical know-how, as one might also need to be able to convince other stakeholders of the importance of security.&lt;/p&gt;

</description>
      <category>security</category>
      <category>systems</category>
      <category>cybersecurity</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Pure CSS Flex Box Responsive Design - No Media Queries</title>
      <author>TechSnack - Technology Tutorials</author>
      <pubDate>Thu, 12 Aug 2021 20:57:01 +0000</pubDate>
      <link>https://dev.to/techsnack/pure-css-flex-box-responsive-design-no-media-queries-p7o</link>
      <guid>https://dev.to/techsnack/pure-css-flex-box-responsive-design-no-media-queries-p7o</guid>
      <description>&lt;h2&gt;
  &lt;a href="#responsive-design-doesnt-have-to-be-hard"&gt;
  &lt;/a&gt;
  Responsive Design Doesn't Have To Be Hard
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/romesbergjames/embed/mdmaxGv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#with-flex-box-we-can-easily-make-our-webpage-act-as-a-responsive-container-without-media-queries"&gt;
  &lt;/a&gt;
  With Flex Box we can easily make our webpage act as a responsive container without media queries!
&lt;/h3&gt;

&lt;p&gt;To start with we are going to quickly create a file with the following HTML inside of it&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="viewport flex-parent flex-col"&amp;gt;
    &amp;lt;div class="nav flex-parent space-around"&amp;gt;
        &amp;lt;div class="box-1"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="box-2"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="box-3"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="content flex-parent"&amp;gt;
        &amp;lt;div class="sidebar-left"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="main-area"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="sidebar-right"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="footer flex-parent space-evenly"&amp;gt;
        &amp;lt;div class="box-4"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="box-5"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="box-6"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;...and this is it for the HTML. That's our entire page!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-the-css"&gt;
  &lt;/a&gt;
  Now the CSS
&lt;/h2&gt;

&lt;p&gt;At this point the page is blank. We will fix that by styling it right now. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-endraw-css-reset"&gt;
  &lt;/a&gt;
  &lt;code&gt;*&lt;/code&gt; CSS RESET
&lt;/h3&gt;

&lt;p&gt;The first thing we will do is a basic reset to all of the elements in the document. This will set everything to border-box sizing and remove all margins and padding.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;*{
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#-raw-viewport-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;.viewport&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;We can now create the &lt;code&gt;viewport&lt;/code&gt; class. We want this element to take up all available space within the device's screen.&lt;br&gt;
Just to emphasize where the viewport is we will also give it a large black border (this is not necessary when you have inner content or other elements to display)&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.viewport{
    min-height: 100vh;
    min-width: 100%;
    border: 5px solid black;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Next we can make our &lt;code&gt;viewport&lt;/code&gt; class responsive with the following class. &lt;code&gt;.viewport&lt;/code&gt; is now a Flex Box container!&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.flex-parent{
    display: flex;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;By default Flex Box containers display vertically but we would like our &lt;code&gt;viewport flex-parent&lt;/code&gt; element to display horizontally. We can achieve this with the following flex property.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.flex-col{
    flex-direction: column;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#thats-it-for-the-flex-box-container"&gt;
  &lt;/a&gt;
  That's it for the flex box container.
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#now-we-can-begin-creating-the-flex-children"&gt;
  &lt;/a&gt;
  Now we can begin creating the flex children.
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#-raw-nav-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;.nav&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The first child element will be &lt;code&gt;.nav&lt;/code&gt; This is our general header area. Let's make the width &lt;code&gt;100%&lt;/code&gt; of the container's width and the height &lt;code&gt;20vh&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.nav{
    min-width: 100%;
    min-height: 20vh;
    border: 5px dashed blue;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Since we want to place elements inside of &lt;code&gt;.nav&lt;/code&gt; we will give it the class &lt;code&gt;.flex-parent&lt;/code&gt; and we will also demonstrate a key aspect of Flex Box here.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-justifycontent-endraw-flex-property"&gt;
  &lt;/a&gt;
  The &lt;code&gt;justify-content&lt;/code&gt; flex property
&lt;/h3&gt;

&lt;p&gt;Empty space is crucial. If you have ever attempted to position something with pure CSS without the use of Flex Box or CSS Grids then you know how difficult this is to get right. Luckily, Flex Box has a property called &lt;code&gt;justify-content&lt;/code&gt; that can do this for us in various ways.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-spacearound-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;.space-around&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;We are going use the following code to place the white space around each element.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.space-around{
    justify-content: space-around;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#-raw-spaceevenly-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;.space-evenly&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;and while we are here we will make another class for later except using &lt;code&gt;space-evenly&lt;/code&gt; which works similarly to &lt;code&gt;space-around&lt;/code&gt; with one major difference. With &lt;code&gt;space-evenly&lt;/code&gt; the white on the left of the furthest and the right of the furthest right elements will also be part of the spacing distribution!&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.space-evenly{
    justify-content: space-evenly;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;justify-content&lt;/code&gt; property deals with our &lt;code&gt;main axis&lt;/code&gt;. Which in this case is the &lt;code&gt;x axis&lt;/code&gt; or &lt;code&gt;horizontal axis&lt;/code&gt;. this would act differently if this had a class of &lt;code&gt;.flex-col&lt;/code&gt;. Go ahead and try it out!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-nav-endraw-inner-elements"&gt;
  &lt;/a&gt;
  &lt;code&gt;.nav&lt;/code&gt; inner elements
&lt;/h2&gt;

&lt;p&gt;Now we can go worry about the elements within &lt;code&gt;.nav&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I want to be able to easily change the value of one element without affecting another. For this we will create a different class for each element. This is not entirely necessary but will save stress down the road.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.box-1{
    min-width: 20vw;
    background-color: yellow;
}

.box-2{
    min-width: 20vw;
    background-color: purple;
}

.box-3{
    min-width: 20vw;
    background-color: red;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Take a look! The content does not overflow from the page and everything inside of &lt;code&gt;.nav&lt;/code&gt; scales with the screen size!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#we-can-now-style-the-rest-of-our-elements"&gt;
  &lt;/a&gt;
  We can now style the rest of our elements!
&lt;/h2&gt;

&lt;p&gt;First we will place &lt;code&gt;.content&lt;/code&gt; and &lt;code&gt;.footer&lt;/code&gt; onto the page&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-content-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;.content&lt;/code&gt;
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.content{&lt;br&gt;
    min-width: 100%;&lt;br&gt;
    min-height: 80vh;&lt;br&gt;
    border: 5px dashed orange;&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;br&gt;
  &lt;a href="#-raw-footer-endraw-"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;code&gt;.footer&lt;/code&gt;&lt;br&gt;
&lt;/h3&gt;
&lt;br&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.footer{&lt;br&gt;
    min-width: 100%;&lt;br&gt;
    min-height: 20vh;&lt;br&gt;
    border: 5px solid cyan;&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#-raw-content-endraw-inner-elements"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;code&gt;.content&lt;/code&gt; inner elements&lt;br&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#-raw-sidebarleft-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;.sidebar-left&lt;/code&gt;
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.sidebar-left{&lt;br&gt;
    min-width: 20%;&lt;br&gt;
    background: teal;&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;br&gt;
  &lt;a href="#-raw-mainarea-endraw-"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;code&gt;.main-area&lt;/code&gt;&lt;br&gt;
&lt;/h3&gt;
&lt;br&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.main-area{&lt;br&gt;
    min-width: 60%;&lt;br&gt;
    background: green;&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;br&gt;
  &lt;a href="#-raw-sidebarright-endraw-"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;code&gt;.sidebar-right&lt;/code&gt;&lt;br&gt;
&lt;/h3&gt;
&lt;br&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.sidebar-right{&lt;br&gt;
    min-width: 20%;&lt;br&gt;
    background: blue;&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#-raw-footer-endraw-inner-elements"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;code&gt;.footer&lt;/code&gt; inner elements&lt;br&gt;
&lt;/h2&gt;
&lt;br&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.box-4{&lt;br&gt;
    min-width: 15%;&lt;br&gt;
    background: pink;&lt;br&gt;
}

&lt;p&gt;.box-5{&lt;br&gt;
    min-width: 30%;&lt;br&gt;
    background: maroon;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.box-6{&lt;br&gt;
    min-width: 20%;&lt;br&gt;
    background: black;&lt;br&gt;
}&lt;br&gt;
&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#the-results"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  The Results&lt;br&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#desktop"&gt;
  &lt;/a&gt;
  Desktop
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qkt8t_E5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xo15ap1e3d43gua9eox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qkt8t_E5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xo15ap1e3d43gua9eox.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h-e_yCKa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dylthwd7f1y8lc63f9b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h-e_yCKa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dylthwd7f1y8lc63f9b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tablet"&gt;
  &lt;/a&gt;
  Tablet
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OFbNDFI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qa9f670j1079j0q9mq4w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OFbNDFI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qa9f670j1079j0q9mq4w.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LhIthfJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zs14hyp07hg2h5orpi2a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LhIthfJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zs14hyp07hg2h5orpi2a.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mobile"&gt;
  &lt;/a&gt;
  Mobile
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lB_YdkR_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5e9gxcvb60klvy1bbkb8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lB_YdkR_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5e9gxcvb60klvy1bbkb8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--35U-mHMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrhvzjjiox7wu1em7310.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--35U-mHMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrhvzjjiox7wu1em7310.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;If you made it this far thank you! I hope you have a better understanding of what Flex Box is and how it can better help us make responsive designs easily without stressing too much.&lt;/p&gt;

&lt;p&gt;This was a bonus article today. Stay tuned for an Intro to Version Control later!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>MasquerBot: A Telegram Bot for true paranoids</title>
      <author>Parth Agarwal</author>
      <pubDate>Thu, 12 Aug 2021 20:33:18 +0000</pubDate>
      <link>https://dev.to/ra101/a-telegrambot-for-true-paranoids-16po</link>
      <guid>https://dev.to/ra101/a-telegrambot-for-true-paranoids-16po</guid>
      <description>&lt;center&gt;
&lt;h3&gt;
  &lt;a href="#httpstmemasquerbot"&gt;
  &lt;/a&gt;
  &lt;a href="https://t.me/MasquerBot"&gt;https://t.me/MasquerBot&lt;/a&gt;
&lt;/h3&gt;




&lt;/center&gt;
&lt;br&gt;&lt;br&gt;
I watched Snowden in 2016. It was the year, I became paranoid. üëª

&lt;p&gt;Introducing ùó†ùóÆùòÄùóæùòÇùó≤ùóøùóïùóºùòÅ! It is a telegram bot that can hide any given text message inside any given image, by manipulating the very pixels of that image (steganography)&lt;/p&gt;

&lt;p&gt;‚Ä¢ URL changes every 6 hrs, with 130 char long, therefore making it impossible to trace by anyone other than Telegram.&lt;/p&gt;

&lt;p&gt;ùòçùò¢ùò≥ ùò£ùò¶ùòµùòµùò¶ùò≥ ùò•ùò∞ùò§ùò∂ùòÆùò¶ùòØùòµùò¢ùòµùò™ùò∞ùòØ ùò™ùò¥ ùò∞ùòØ ùò®ùò™ùòµùò©ùò∂ùò£, ùò≠ùò™ùòØùò¨ùò¥ ùò¢ùòµ ùòµùò©ùò¶ ùò¶ùòØùò•.&lt;/p&gt;

&lt;p&gt;üìà ùó™ùóºùóøùó∏ùó≥ùóπùóºùòÑ:&lt;/p&gt;

&lt;p&gt;‚Ä¢ It works by creating an ECDSA encryption üîëüóùkey pair, returns you the üîëpublic key, to distribute.&lt;/p&gt;

&lt;p&gt;‚Ä¢ To encrypt, one will have to send your üîëkey along with ‚úâtext and üñºimage.&lt;/p&gt;

&lt;p&gt;‚Ä¢ The bot will encrypt the text and hide it then it will return the üñº encode-image.&lt;/p&gt;

&lt;p&gt;‚Ä¢ You as a recipient will send the encoded-image to the bot. and it will take your üóùprivate key from the üìídatabase and will send you the hidden ‚úâtext.&lt;/p&gt;

&lt;p&gt;PS: Icon is not just eye-candy for otakus. try "/icon" command, within the bot. I bet you will love it. üòâ&lt;/p&gt;

&lt;p&gt;‚ö°ùóüùó∂ùóªùó∏ùòÄ:&lt;br&gt;
Github: &lt;a href="https://github.com/ra101/MasquerBot"&gt;https://github.com/ra101/MasquerBot&lt;/a&gt;&lt;br&gt;
LBRY: &lt;a href="https://lbry.tv/@ra101/MasquerBot"&gt;https://lbry.tv/@ra101/MasquerBot&lt;/a&gt;&lt;/p&gt;

</description>
      <category>telegram</category>
      <category>python</category>
      <category>heroku</category>
      <category>cryptography</category>
    </item>
    <item>
      <title>Supercharge Your Coding in Visual Studio</title>
      <author>Scott Hintze</author>
      <pubDate>Thu, 12 Aug 2021 20:04:36 +0000</pubDate>
      <link>https://dev.to/dealeron/supercharge-your-coding-in-visual-studio-159h</link>
      <guid>https://dev.to/dealeron/supercharge-your-coding-in-visual-studio-159h</guid>
      <description>&lt;h1&gt;
  &lt;a href="#keyboard-shortcuts"&gt;
  &lt;/a&gt;
  Keyboard Shortcuts
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#hold-down-alt-when-selecting-text"&gt;
  &lt;/a&gt;
  Hold Down Alt when Selecting Text
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs say you have a list of variables and you decide to change the scope from public to protected. You could use find and replace on the selected text, or you could just copy/paste over each modifier. Another option is block selecting. Holding down the Alt key while selecting allows you to include multiple lines to the position of the cursor rather than the entire line. The result is that when you type, cut or paste, it applies to every line selected. You could select all the public modifiers and simply type or paste protected to edit them all at once.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CgsCPSu0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gvmwbttnay9944knol3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CgsCPSu0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gvmwbttnay9944knol3.png" alt="alt text" title="Block Selection Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ctrl-x-and-ctrl-v-with-nothing-selected"&gt;
  &lt;/a&gt;
  Ctrl + X and Ctrl + V with nothing selected
&lt;/h2&gt;

&lt;p&gt;Cut and paste? What is so special about these? In Visual Studio. If you have nothing selected, the cut command will cut the entire line and paste will insert the entire line above the cursor. When moving lines around, this method is very fast.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ctrl-k-c-comment-and-ctrl-k-u-uncomment-with-nothing-selected"&gt;
  &lt;/a&gt;
  Ctrl + K + C (comment) and Ctrl + K + U (uncomment) with nothing selected
&lt;/h2&gt;

&lt;p&gt;These commands will comment and uncomment the entire line when no text is selected. When text is selected, they will comment and uncomment the selection. The uncomment shortcut will uncomment even if no text is selected as long as the cursor is within commented code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#better-commenting"&gt;
  &lt;/a&gt;
  Better Commenting
&lt;/h3&gt;

&lt;p&gt;As nice as the default comment shortcuts are, you still have to use both hands. That can get tedious if you are doing a lot. Here is an easier combo to make it even faster.&lt;br&gt;
Go to Tools&amp;gt;Options, then find the Environment&amp;gt;Keyboard node.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TNyIaEZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9tsnv9rz77spucehgzo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TNyIaEZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9tsnv9rz77spucehgzo.png" alt="alt text" title="Better comments step 1 image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the ‚ÄúShow commands containing box‚Äù enter ‚Äúcomment‚Äù (no quotes).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6QBaL2ru--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tbc4fg5rkglhx92pfkk8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6QBaL2ru--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tbc4fg5rkglhx92pfkk8.png" alt="alt text" title="Better comments step 2 image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select the Edit.ToggleLineComment shortcut and click in the ‚ÄúPress shortcut key‚Äù input field. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---HOy_Po---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8gnpg7it2wxj46yhfia.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---HOy_Po---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8gnpg7it2wxj46yhfia.png" alt="alt text" title="Better comments step 3 image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Press Left Ctrl + Left Windows, then click ‚ÄúAssign‚Äù&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2uEA8OpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wm5cmcsus7af2p8vzc1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2uEA8OpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wm5cmcsus7af2p8vzc1.png" alt="alt text" title="Better comments step 4 image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Repeat the process for Edit.UncommentSelection using Left Alt + Left Windows&lt;/p&gt;

&lt;p&gt;Setting these shortcuts allows you to keep one hand on the mouse or arrow keys to navigate the code and the other to comment and uncomment quickly.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#visual-studio-has-a-back-button"&gt;
  &lt;/a&gt;
  Visual Studio has a Back Button?!
&lt;/h1&gt;

&lt;p&gt;Ever feel you are a bit like Alice and falling down the rabbit hole when navigating code? Visual Studio has a back button that tracks a history of where your cursor has been. Just click to go back through and retrace your steps. You can also click the down arrow to see the history list.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aeoippa4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nb8iib5uiqx87s9w7euq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aeoippa4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nb8iib5uiqx87s9w7euq.png" alt="alt text" title="Visual Studio back button image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tedious-code"&gt;
  &lt;/a&gt;
  Tedious Code
&lt;/h1&gt;

&lt;p&gt;Repetitive code, such as mapping database tables to object models, can be a real downer to a good programming groove. Here‚Äôs how to use simple Excel formulas to write hundreds of lines of code in seconds.&lt;br&gt;
Get a list of the variable names or database fields without any extra punctuation. Then, paste the list into column A of your blank Excel sheet.&lt;br&gt;
Excel string formulas are fairly straightforward. The basic syntax is =‚Äùstring literal‚Äù &amp;amp; A1 &amp;amp; ‚Äústring literal‚Äù. The quotes indicate literal text. Use ‚Äù‚Äù to escape a double quote in the string. Let‚Äôs say your variable name is Id and is located in the A1 cell of your sheet and you want to create a public string accessor property for it. The formula would be &lt;code&gt;=‚Äùpublic string ‚Äù &amp;amp; TRIM(A1)  &amp;amp; ‚Äú{ get; set; }‚Äù&lt;/code&gt; Now, you just use the Excel fill handle and pull it down your list to "write" that line of code for each variable.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UKZEWCkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxb2w98pzt0fabiit1p2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UKZEWCkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxb2w98pzt0fabiit1p2.png" alt="alt text" title="Excel coding step 1 image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vqomac-0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owjuvdjvogfoug4gkuoi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vqomac-0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owjuvdjvogfoug4gkuoi.png" alt="alt text" title="Excel coding step 2 image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>csharp</category>
    </item>
    <item>
      <title>Trabalhe para fora em¬†2021</title>
      <author>Programador Sincero</author>
      <pubDate>Thu, 12 Aug 2021 20:00:47 +0000</pubDate>
      <link>https://dev.to/devsincero/trabalhe-para-fora-em-2021-16fd</link>
      <guid>https://dev.to/devsincero/trabalhe-para-fora-em-2021-16fd</guid>
      <description>&lt;p&gt;Quem j√° tem uma boa experi√™ncia na √°rea de programa√ß√£o, em 2021, tem chances muito maiores de conseguir um bom emprego, ganhando em moeda estrangeira e com atividades que exijam menor responsabilidade e tempo di√°rio.¬†&lt;/p&gt;

&lt;p&gt;Um programador de alta qualidade t√©cnica, se estiver ainda na √°rea t√©cnica, estar√° vivenciando os cen√°rios abaixo, que s√£o bem ruins e praticamente eram o destino no nosso mercado antes da pandemia. Eu levantei alguns pontos interessantes abaixo. Segue o fio:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Seu perfil no LinkedIn, quando bem preenchido e cheio de boas experi√™ncias, atrai in√∫meras consultorias do Brasil. Se o seu perfil est√° preenchido em Ingl√™s, melhor ainda‚Ää-‚Ääo mercado internacional de software est√° de bra√ßos abertos para voc√™. Espera-se que voc√™ esteja recebendo muitos convites di√°rios para processos seletivos.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Se voc√™ n√£o est√° trazendo pelo menos 20 mil L√çQUIDOS mensalmente, voc√™ est√° fazendo algo errado. Reveja sua estrat√©gia. Eu pessoalmente trago muito mais que isso.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Essa √© uma das primeiras √©pocas onde √© poss√≠vel ganhar um bom dinheiro sem ter responsabilidade proporcional, mantendo-se estritamente t√©cnico. Por√©m, ser um t√©cnico altamente remunerado tem um custo: quanto mais foda e quanto maior √© o sal√°rio, maior n√≠vel t√©cnico √© esperado. Ent√£o, √© preciso estar antenado com tudo: como fazer DevOps, como trabalhar com a nuvem, como estruturar o melhor o front-end, como deixar as coisas menos s√≠ncronas usando filas e outras merdas da vida, isso sem falar nas in√∫meras formas de salvar dados e acessar dados de forma simples e barata.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Em geral, se voc√™ for o mais pica da sua empresa, ter√° o privil√©gio de ser o √∫nico filho da puta a dirigir o caminh√£o de am√¥nia em chamas. Ningu√©m vai te chamar para fazer uma deliciosa tela em React ou Nextjs a partir de um belo design feito em Figma. Esse tipo de trampo √© uma commodity. √â trampo de juninho. Um dev foda vai ter que resolver problemas bem mais complexos. Por exemplo, ter√° que ajudar a decidir como migrar a app para nuvem, ter√° que pensar em como a app ser√° distribu√≠da geograficamente, ter√° que pensar em observabilidade mais profundamente, ter√° que pensar em GDPR, ter√° que ajudar os arquitetos em PoCs complexas (ex: como lidar com certificados no kubernetes, como lidar com mensagens perdidas / √≥rf√£s no Kafka, etc.). Isso sem falar em jobs insuportavelmente chatos como interop e p/invoke, multi-threading com Futures, async e o caralho, comunica√ß√£o com dispositivos restritos, merdas dif√≠ceis e nativas no celular‚Ä¶ N√£o √© uma vida exatamente f√°cil. Ah, e tudo tem prazo mais ou menos igual, embora l√° fora eles assumam que certas funcionalidades podem demandar um tempo espec√≠fico de pesquisa.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Um cara s√™nior de verdade viu muitos quil√¥metros de logs. Voc√™s que est√£o chegando dever√£o se acostumar a criar sistemas que gerem bons logs/telemetria e observabilidade dever√° ser parte cont√≠nua do trabalho de voc√™s, j√° que daqui pra frente tudo na na merda da nuvem. Observabilidade e performance n√£o s√£o opcionais. Grepar logs, usar regex pra processar e extrair logs, ser r√°pido pra encontrar causa raiz, entender dump de mem√≥ria‚Ää-‚Äätudo isso pode ser necess√°rio de vez em quando. Portanto, conhecimento em suporte tamb√©m te faz ser muito foda na √°rea e te torna uma pe√ßa chave para dirigir caminh√µes em chama com g√°s fenol.&lt;br&gt;
Como voc√™s podem imaginar, ser um consultor caro e foda exige tamb√©m participa√ß√£o em discuss√µes t√©cnicas avan√ßadas e potencialmente, experi√™ncia com arquitetura de software e de sistemas. Estudem essas merdas.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Muitas vezes, voc√™ estar√° em um time sem arquiteto espec√≠fico, e voc√™ ser√° o acting-architect. Foda. Eventualmente maior responsa por um tempo. Eventualmente, maior responsa forever and ever. Ter√° que apresentar coisas t√©cnicas em eventos da empresa, ter√° que participar de hackatons, ter√° que criar uma PoC que sustente alguma coisa nova que voc√™ precise que o time use e principalmente, ser√° a refer√™ncia profissional de muita gente boa e nova que est√° chegando. Infelizmente √© inevit√°vel liderar pelo bom exemplo. E claro, ao tutorar o time em discuss√µes internas, voc√™ acabar√° passando muito de suas experi√™ncias de vida, de campo e de outras batalhas. E isso √© o que h√° de mais valioso para o crescimento do time e dos seus liderados/pares.&lt;br&gt;
Voc√™ ter√° que apresentar o design de suas solu√ß√µes para que outros times entendam e apliquem. E ter√£o que justificar o motivo de tal coisa t√©cnica n√£o ter sido usada/implementada quando algo der errado em produ√ß√£o. Pode ser necess√°rio lidar com back-fire corporativo de chefes filhos da puta, isso sem falar em pares/subordinados que na hora H sempre dizem coisas como "n√≥s avisamos que isso ia acontecer e nada foi feito". Mas esse filho da puta nunca avisa da forma correta. Nunca se empenha em tentar realmente evitar alguma cagada de antem√£o. √Äs vezes parece que certos caras querem te ver errar o p√™nalti de prop√≥sito para depois falar "√©, do jeito que ele correu, ele cantou a bola pro goleiro mesmo. Tava na cara". Foda. Saber ouvir, saber se defender e saber ter base para as decis√µes √© t√£o importante quanto decidir corretamente a tempo.¬†&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pode ser que seja for√ßado a escolher entre times e projetos mais pr√≥speros, que possam a vir a dar resultados e lucros maiores. Embora n√£o seja legal, muitas vezes para ganhar mais import√¢ncia e visibilidade na empresa √© necess√°rio estrat√©gia e vis√£o. Entender o que os times fazem √© bem importante e faz parte de um cara ser bom‚Ää-‚Ääum cara de alto n√≠vel sempre tenta atuar onde seu impacto √© mais global. Foda-se aquele componente de relat√≥rio‚Ää-‚Ääo que importa √© estar no c√≥digo que processa milhares ou milh√µes de mensagens por dia. O dinheiro, b√¥nus, PLR, import√¢ncia e visibilidade est√° geralmente onde a empresa gera faturamento, onde entrega e onde evita problemas. Coisas invis√≠veis ou dif√≠ceis de explicar para n√£o t√©cnicos em geral n√£o s√£o lucrativas. Ningu√©m liga para a engenharia tapete do ch√£o do avi√£o. Mas todo mundo liga para o motor, para os diversos sistemas de controle.¬†&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ao entrar profundamente no desenvolvimento de funcionalidades, voc√™ notar√° desde o come√ßo da carreira que muitas vezes o que est√° desenhado √© uma merda pro cliente. Uma completa bosta. Um designer provavelmente n√£o ter√° conhecimento das regras de neg√≥cio. Em geral, os Product Owners s√£o uns fracassados de merda com p√≥s gradua√ß√£o e altos sal√°rios e os Scrum Masters (ex-devs/testers fracassados e in√∫teis) n√£o servem pra nada que n√£o seja controlar o ritmo das entregas e levar pol√≠ticas de escrit√≥rio para a gest√£o superior. Sim! Muito SM presta mais como informante do que como scrum master. Na hora em que realmente √© preciso pensar no produto, criar, melhorar, evoluir, esses filhos da puta de merda n√£o servem pra nada. No m√°ximo, influenciam o backlog de acordo com o que o arrombado de um cliente analfabeto pede. Entretanto, o cliente, PO e SM n√£o sabem realmente o que √© necess√°rio. Com diversos projetos na carreira, experi√™ncias e coisas rodando no ar, n√≥s sim sabemos e podemos SIM opinar e influenciar diretamente na implementa√ß√£o de funcionalidades que s√£o tocadas pelo usu√°rio final. Portanto, um cara pica tamb√©m tem essa incumb√™ncia: n√£o deixar a empresa fazer merda com o dinheiro e tempo e tentar consertar o rumo do backlog quando aplic√°vel e poss√≠vel. E como podem adivinhar, nunca √© poss√≠vel!¬†:)¬†;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Indo nesse sentido, times de profissionais bons geralmente t√™m √† disposi√ß√£o uma boa forma de gera√ß√£o de dados de usabilidade. Se tiverem um ambiente saud√°vel e prop√≠cio para experimenta√ß√£o, tentem criar experimentos. Criem testes A/B. Levantem dados. Saiam da frente do computador. Tentem ver quais s√£o os sentimentos dos usu√°rios finais ao tocarem o seu software. Isso era mais forte antes da pandemia. Mas pensem em outras formas de validarem isso. N√£o se restrinjam ao opinionismo sem dados de falsos POs. T√° cheio de PO que ou n√£o sabe nada e pergunta tudo pra todo mundo ou ent√£o, fdp que se acha o novo steve jobs e manda fazer merdas aleat√≥rias no software, claro, √†s custas do nosso esfor√ßo, tempo, horas-extra gratuitas;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entendam. Atuar, como um especialista ou s√™nior foda, √© bem chato na maior parte dos casos. Nas empresas grandes, pegam esse tipo especial de sujeito-de-sorte para no fim, dar trampo de corno / atividades est√∫pidas e bem abaixo da capacidade t√©cnica do dev. √â bem comum ouvir de v√°rios trouxas que trabalharam no google, microsoft, facebook e tal que as atividades eram bem merdas e que o ambiente interno n√£o era dos melhores, mas os sal√°rios e benef√≠cios at√© que eram bons. Entretanto, quando se chega numa fase da vida, o chato mesmo √© ficar sem ter como dar escola boa de verdade pros filhos, andar em carro com banco duro e com embreagem barulhenta, morar em casa com vizinho que ouve funk e sertanejo alto at√© 2:00 da manh√£ do seu sagrado domingo de descanso ou ent√£o, ir no supermercado sozinho para evitar o pede-pede dos filhos. Outra coisa chata √© aguentar a esposa pedindo pra sair e gastar dinheiro nos passeios com a fam√≠lia e voc√™ entrar no cheque especial pra n√£o ter que admitir que √© um trouxa sem grana, um merda-fracassado-na-casa dos 40 esperando a promo√ß√£o pra tech lead sair e ent√£o ganhar mais b√¥nus. √â o passa-cart√£o, √© o paga-ped√°gio, √© o pede-comida, √© o pode-incluir-os-10% que v√£o te fodendo e te afundando em tristeza. Sem grana, sem planos, esperando, esperando, esperando. E a conta banc√°ria? Sempre na mesma. E parece que voc√™ t√° fazendo tudo certo! Certifica√ß√µes, eventualmente uma p√≥s-gradua√ß√£o in√∫til, alguns cursos‚Ä¶ investe a sua grana e √© trouxa pra cair no discurso do super CDB de 100% do CDI, espera, espera e os cabelos come√ßam a cair. Um verdadeiro trouxa, esperando para correr a tr√°s da pr√≥xima cenoura: &lt;a href="https://www.youtube.com/watch?v=ucbISPe5Meg"&gt;https://www.youtube.com/watch?v=ucbISPe5Meg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E nunca nada acontece nas empresas do Brasil. Sempre tem um filho da putinha mais jovem e motivando querendo liderar e voc√™, um cara velho e muito experiente tecnicamente, nunca chega l√°. Nunca √© reconhecido. Ou melhor, √© sempre reconhecido como aquele cara que dirige os caminh√µes em chama, mas nunca √© visto como um cara que pode gerenciar uma equipe de motoristas de caminh√µes em chama! E o que resta √© ver o tempo passar, ver cada vez mais reuni√µes in√∫teis, op√ß√µes para mudar de emprego mais uma vez e sempre o mais do mesmo. Trampos dif√≠ceis, chatos e que s√≥ caras pica podem fazer. Um saco. E na hora do review para a promo√ß√£o a Spec II ou Spec III? Hummm‚Ä¶ ainda voc√™ n√£o t√° pronto. Voc√™ entregou tudo, participou bem de todos os projetos, fez o que tinha que fazer‚Ä¶. mas ainda faltam muitas cenouras aqui. S√£o v√°rios "precisa de", "tem que", "mudar isso". A√≠ te jogam pra outro mentor arrombado, e l√° se vai mais um ano. A grana entra, b√¥nus entra e voc√™ continua ainda morando naquela merda de casa de rua onde invariavelmente passa bus√£o 5 da manh√£. E a pergunta a cada dia fica mais latente antes de dormir: ser√° que eu serei Spec II ou Staff Engineer algum dia? O que tem de errado comigo? Sobreviverei ao pr√≥ximo corte? Ser√° que devo focar em carreira gerencial mesmo? Talvez nada disso d√™ certo e descubram que eu realmente sou bosta mesmo, um impostor. Foda. (na verdade n√£o √© n√£o‚Ää-‚Äävc √© tratado como trouxa de prop√≥sito s√≥ pra vc ficar de boa no seu lugar‚Ää-‚Ään√£o aceite este lugar que te deram).&lt;/p&gt;

&lt;p&gt;H√° uma √©poca da vida √© em que √© preciso tomar decis√µes focadas unicamente na grana. As aventuras e o prazer de se trabalhar no que gosta acabam tendo que ficar em segundo plano. Se voc√™ est√° no ramo h√° mais de 10 anos, agora √© o momento mais f√°cil para lucrar com trabalho na √°rea de desenvolvimento. Com tantas op√ß√µes pagando em USD ou EURO, n√£o h√° porque se submeter aos empregos de merda do Brasil, que em geral pagam pouco e exploram muito. Se √© pra pra ser uma putinha de empresa, que seja pra ganhar uma boa grana. N√£o caiam nesse discurso de LinkedIn sobre como ser um bom l√≠der, sobre como ser um bom chefe e toda essa caga√ß√£o de regra de gente triste e ressentida que te for√ßa a ter vontade de ser um bom chefe um dia. Sim, voc√™ pode sim aprender e ser um bom l√≠der, mas o que mais interessa √© o DINHEIRO HOJE e n√£o FUN√á√ïES/CARGOS AMANH√É. Se for o caso, deixe de ser coordenador de onde est√°, deixe de ser gerente e se poss√≠vel, volte para a √°rea t√©cnica. √â poss√≠vel ser um simples programador de qualidade e ganhar uma grana muito alta, sem precisar esperar promo√ß√£o, sem precisar esperar por reconhecimento e por nada‚Ää-‚Ääs√≥ passar nas entrevistas e mandar ver. Voc√™ pode at√© querer mudar o mundo, se esfor√ßar pra caralho, ser um √≥timo tech lead e eventualmente um grande engineering manager. Tomara, at√© tor√ßo por voc√™! Eu mesmo quero ser um algum dia! Quero que todo mundo v√° no meu enterro! Mas coloque um prazo. Uma meta. Algo como "quero estar ganhando 25k em Dezembro de 2022, n√£o importa como". E siga s√≥ essa meta. A grana importa bem mais que cargo nesse momento pr√©-riqueza, pr√©-independ√™ncia financeira.&lt;/p&gt;

&lt;p&gt;Sugiro que voc√™ mande √† merda as super vagas fant√°sticas de empresas brasileiras. Salvo rar√≠ssimas exce√ß√µes, a grande parte das empresas daqui s√£o feitas por caras exploradores que n√£o se importam com o bem-estar dos funcion√°rios e buscam apenas aumentar os lucros e rendimentos. E isso passa necessariamente por economizar com o seu sal√°rio e seus benef√≠cios. Al√©m disso, o mundo corporativo est√° cheio de psicopatas, sociopatas e narcisistas, e voc√™, com todo o seu trabalho, pode estar sendo apenas uma pe√ßa no joguinho de poder de gente grande. Pode ser que voc√™ seja s√≥ visto como um carro bom no estacionamento. Pode ser que voc√™ seja s√≥ visto como um bispo no tabuleiro de xadrez. Talvez voc√™ nunca seja al√ßado a posi√ß√µes de lideran√ßa e altos sal√°rios. Ou talvez at√© aconte√ßa, mas voc√™ pode falhar nos jogos de poder nesse n√≠vel ao perceber boicotes sutis como falta de colabora√ß√£o para suas iniciativas e falta de engajamento que possa ajudar no seu report anual. Ao ser gerente/l√≠der, voc√™ ter√° que lidar com uma coisa legal, que √© exercer lideran√ßa e conseguir tempo de pessoas que n√£o s√£o subordinadas diretas. Pode ser necess√°rio implorar por agenda, por reuni√µes e isso ser visto como algo que n√£o √© lucrativo para quem voc√™ pede. Por exemplo, voc√™ como tech lead pode precisar guerrear para rever a estrat√©gia de multi-tenancy do produto, o que claramente √© um atraso de backlog e n√£o √© do interesse de ningu√©m exceto do produto/cliente final/sobreviv√™ncia da empresa a longo prazo. Pode ser que voc√™ tenha que escalar nessa guerra corporativa e pode ser que voc√™ tenha que comprar briga com muita gente para fazer o correto, inclusive, com seus gerentes diretos! Eu particularmente j√° me vi no meio dessa encrenca, onde eu precisava consertar a linha de produ√ß√£o e tinha que entregar o dobro da produ√ß√£o no mesmo m√™s. Eu tinha 2 chefes pedindo coisas urgentes o tempo todo e claro, coisas com interesses divergentes. E eu tinha que agir como firewall do time. Uma verdadeira situa√ß√£o coc√¥. N√£o digo que o mundo l√° fora seja melhor ou pior, mas por enquanto, √© poss√≠vel ganhar bem mais do que aqui para se foder da mesma forma, como dev e como lead.&lt;/p&gt;

&lt;p&gt;Socialmente falando, gostaria de colocar tamb√©m alguns pontos que me fazem ficar bem ressabiado ao trabalhar para o sustento de elites nocivas ao Brasil, pa√≠s que tanto amo. Eu pude validar de perto como √© triste para uma pessoa fora da √°rea de TI procurar emprego. As empresas brasileiras s√£o t√≥xicas neste aspecto: quando as vagas s√£o de TI, h√° um tratamento muito melhor e em geral, h√° respeito do RH; quando as vagas s√£o operacionais, os turnos em geral s√£o absurdamente longos, os sal√°rios s√£o rid√≠culos e as condi√ß√µes em geral s√£o insalubres. E claro, com um desemprego t√£o alto, os caras do topo da pir√¢mide deitam e rolam com os funcion√°rios menos qualificados. E os poucos que est√£o trabalhando se submetem aos desmandos dos empres√°rios, porque afinal, precisam agradecer por terem um emprego ainda.¬†&lt;/p&gt;

&lt;p&gt;Desde o Golpe de 2016, nunca foi objetivo de governo diminuir o desemprego e dar condi√ß√µes sociais melhores para a maior parte poss√≠vel da popula√ß√£o. Eu e v√°rios conhecidos ouviram coisas como: " Imagina s√≥! Filho da puta da classe C escolhendo emprego e consumindo o mesmo lugar que nossos filhos? Favelado pegando avi√£o e comendo com a boca aberta do meu lado? Minha filha estudando com filho de porteiro? Minha filha dando pra filho de pedreiro! Isso tem que parar!" E assim foi feito. A elite tirou o PT justamente por que isso estava acontecendo, usando como pano de fundo a quest√£o da lei e ordem, dos bons costumes e do fim da corrup√ß√£o estatal (ningu√©m se importa com a corrup√ß√£o privada, com sonegar impostos usando CNAE errado no Simples e etc.). Anteriormente, nos governos do PT, gente que se submetia a trabalhos nojentos acabou tendo novas chances, incomodando brutalmente as elites. Eu pessoalmente vi tamb√©m o outro lado da moeda‚Ää-‚Äämina da classe C dizendo que n√£o iria estudar pra ganhar 2000 de sal√°rio. Enfim, de toda maneira, todo o trabalho ent√£o foi feito para voltar as coisas √† "normalidade" e claro, a pandemia ajudou nesse aspecto. Quem estava com alguma condi√ß√£o boa antes da crise voltou √† estaca zero, entregando comida de moto humildemente, sendo uber ou mesmo, empregada dom√©stica a limpar novamente, banheiros de filhos da puta in√∫teis. Ou ent√£o, voltou a trabalhar de p√© no shopping, tendo que sorrir at√© 22h enquanto troca a merda da pel√≠cula do celular ou dobra a merda de roupa que foi experimentada de novo e n√£o serviu (roupa G da china √© P no BR). E se for ver com os olhos sem lentes da verdade, nunca foi de interesse real a redu√ß√£o do desemprego a melhora geral da qualidade de vida da popula√ß√£o. Vejam mais detalhes neste excelente texto: &lt;a href="https://outraspalavras.net/trabalhoeprecariado/mp-1045-a-nova-e-sorrateira-reforma-trabalhista/"&gt;https://outraspalavras.net/trabalhoeprecariado/mp-1045-a-nova-e-sorrateira-reforma-trabalhista/&lt;/a&gt;. No texto, podemos ver que as reformas recentes na verdade foram formas de baratear os custos trabalhistas, n√£o necessariamente, gerando novos empregos. E ainda h√° muitos trouxas que apoiam esse tipo de coisa. Inclusive, o texto sustenta que a manuten√ß√£o de altas taxas de desemprego ajuda na press√£o salarial.&lt;/p&gt;

&lt;p&gt;O que quero dizer com tudo isso? Quero dizer que n√≥s, programadores, somos pedra fundamental para que novos projetos possam acontecer no Brasil e somos agentes econ√¥micos fundamentais em um mundo onde quase todas as empresas precisam de uma √°rea de TI forte para existir e sobreviver. Entretanto, ao dar nossa for√ßa de trabalho para empresas brasileiras que exploram pessoas descaradamente, na minha humilde, revoltosa e enviesada opini√£o, estamos trabalhando para o continu√≠smo do que h√° de pior, que √© a explora√ß√£o do trabalho em prol de agentes que buscam o lucro sem qualquer tipo de retribui√ß√£o para a sociedade. Eu pessoalmente me incomodo muito ao ver que o RH se joga aos p√©s de gente de IT e trata pessoas normais como lixo, fazendo-as passar por intermin√°veis processos seletivos, humilhando-as at√© n√£o poder mais. Tamb√©m me incomodo muito com essa rela√ß√£o de comando e controle colonialista que existe por aqui. Trabalhar para esse tipo de gente √© meio foda, ainda mais quando estamos em necessidade financeira.&lt;/p&gt;

&lt;p&gt;Todo mundo sabe que o trabalho remoto na pandemia deu super certo, embora isso tenha gerado uma onde de choque na percep√ß√£o de qualidade de vida dos funcion√°rios e um medo muito grande na gest√£o, que n√£o p√¥de mais controlar direito o tempo dos funcion√°rios ou observar cuidadosamente as redes internas de conversas e fofocas. Funcion√°rios felizes, trabalhando e entregando sem comando e controle abalou toda a l√≥gica sobre a real necessidade de gerentes. Para segurar os empregos, os gestores est√£o buscando novos motivos para trazer as pessoas de volta aos escrit√≥rios. Um motivo bem comum na √°rea de TI √© a aus√™ncia de inova√ß√£o e dissemina√ß√£o de cultura. Embora eu concorde com os motivos, n√£o vejo isso como justificativa clara para fazer eu trabalhar todos os dias presencialmente, pegando tr√¢nsito arrombado e tendo que sair correndo pra levar e trazer filhos da escola e academia, cursos e tal. Por √∫ltimo, claro, ainda temos sociopatas corporativos famintos para voltarem a fazer seus jogos de cena. Onde v√£o expor as roupas novas? Seus carros? Seu charme? Suas apresenta√ß√µes fant√°sticas nas reuni√µes? Como v√£o fazer todo o teatro? Como que v√£o conseguir convencer a todos sobre sua suposta utilidade para a empresa? A volta do trabalho presencial √© essencialmente um volta √† estrutura de comando-e-controle tradicional e trata-se de um grande retrocesso para as mentes que simplesmente querem trabalhar com qualidade por um sal√°rio de qualidade e com uma vida de qualidade. Trabalhar no Brasil significa uma grande chance de voltar ao presencial em 2022. N√£o sejam tolos. Ningu√©m vai ficar remoto pra sempre aqui. S√≥ o far√£o se for muito necess√°rio e se ningu√©m mais se curvar a isso. Mas nunca √© o caso. Repito: n√£o caiam nessa de trabalho presencial sem que isso seja da sua plena vontade e seja altamente opcional. Voc√™ que pode escolher, deve considerar morar em qualquer lugar decente, pac√≠fico e barato do Brasil.&lt;/p&gt;

&lt;p&gt;Se nada mudar nesse p√≥s-pandemia, vamos continuar na mesma: caras de TI se virando bem, gente sem aptid√£o vendo na TI como uma fonte de ouro, gente sendo humilhada por ser do administrativo (e ganhando R$ 2000 por 44 horas semanais no extremo melhor dos casos!), e vai continuar tudo como est√°. E mesmo n√≥s de TI continuaremos a ser currados todos os dias por fdps que fazem p√≥s-gradua√ß√£o chique, mas nunca entregaram uma linha de c√≥digo em produ√ß√£o. Isso tem que mudar. L√° fora a qualifica√ß√£o da lideran√ßa em geral √© muito melhor, assim como n√≠vel t√©cnico, j√° que pa√≠ses com moedas mais fortes conseguem escolher as melhores pessoas e conseguem atrair grandes mentes qualificadas e incrivelmente, muito mais pessoas do bem do que vemos comumente no Brasil! Ao experimentar atuar remoto para fora ou mesmo, se mudar para outro pa√≠s, h√° muitas chances de uma melhora exponencial de qualidade de vida sem precisar dar muito mais em troca em termos horas e esfor√ßo di√°rio. Isso n√£o tem pre√ßo. Pensem nisso e me falem o que acham¬†:)&lt;/p&gt;

&lt;p&gt;Portanto, para fechar, seja foda e tenha um plano:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Escolha o que voc√™ realmente quer de bens materiais e objetivos pessoais. Escreva em v√°rios post-its. Coloque eles seu quarto e no seu banheiro. Veja e reveja seus objetivos todos os dias. Coloque uma meta clara de quanto dinheiro mensal voc√™ quer por m√™s e coloque um prazo. Uma ideia de meta voc√™ considere ganhar seu sal√°rio atual em 6 a 8 meses no ano que vem. Coloque essa meta clara no post-it onde voc√™ dorme e onde vc caga. Voc√™ tem que escovar os dentes todos os dias vendo a sua meta. Uma meta simples. Clara. Objetiva. Ating√≠vel. Mensur√°vel.&lt;/li&gt;
&lt;li&gt;Trace um plano de estudos t√©cnicos com datas e prazos. Invista em materiais que precisar investir, em livros, cursos e mesmo, avalie oportunidades de cursos presenciais sim.&lt;/li&gt;
&lt;li&gt;Invista fortemente em ingl√™s. Fortemente √© agir com seriedade. Comprometimento. N√£o falte nas aulas. Fa√ßa os exerc√≠cios com alto rigor. Treine sua mem√≥ria decorando e recitando textos em ingl√™s. Esta t√©cnica √© fortemente recomendada para quem precisa aprender logo a falar.¬†&lt;/li&gt;
&lt;li&gt;Estude em sites como pluralsight e udemy com material EM INGL√äS. Estude com a legenda em ingl√™s. Em pouco tempo voc√™ notar√° que consegue absorver em 1.25x e depois, em 1.75x/2.0x.
Ao negociar, n√£o seja ot√°rio. Muitos fdps estrangeiros j√° descobriram a mina de ouro de programadores brasileiros bons e baratos e est√£o tentando contratar caras bons por 4k ou 5k USD mensais. Provavelmente voc√™s conseguir√£o bem mais, mas pode ser que inicialmente come√ßar com essa grana ajude na autoestima e na pr√°tica do ingl√™s‚Ää-‚Äänem sempre nosso sal√°rio √© pago em dinheiro. Pode ser que tenhamos v√°rios outros ganhos como ter um hist√≥rico de projeto internacional, boas entregas, bons reviews no nosso perfil e muito mais. Tudo conta. A regra do sucesso √©: "pague o pre√ßo antes de colher os lucros".&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Infelizmente algumas empresa usam um processo chato de entrevistas com testes. E de certa forma, estes testes s√£o bem bons para ajudar voc√™ a evoluir como programador, ainda mais se voc√™ √© mais um arrombado na nossa √°rea que n√£o teve a dec√™ncia de fazer um curso superior. Para melhorar, invista tempo no leetcode, hackerrank e outros do tipo. Tem uma boa trilha, Project Euler, que ajuda a evoluir bem. Mas tem tamb√©m v√°rios desafios legais em outras trilhas. Na verdade, n√£o s√£o legais, mas s√£o bem importantes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Compre o livro Cracking the Code Interview. Meu amigo comprou e passou nas provas e processos seletivos todos. Hoje ele manja de complexidade de tempo e espa√ßo, de algoritmos at√© pra arrumar mulher e tudo mais. Eu comprei o livro mas ainda n√£o o abri, porque eu acabei tendo sorte de fazer entrevistas mais te√≥ricas (e acho que at√© bem complexas ao meu ver).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Existe uma t√©cnica secreta que √© anotar em um di√°rio um caderno afirma√ß√µes como "hoje eu estou cada vez mais pr√≥ximo do objetivo xpto", "eu me vejo trabalhando em um projeto X nas condi√ß√µes A, B e C"e por a√≠ vai. O poder de coisas escritas acabam impressionando nosso c√©rebro e acabam nos empurrando para fazer as coisas. Algumas pessoas tamb√©m colocam o que querem que aconte√ßa em suas vidas pessoais. Para mim funcionou essa t√©cnica e meus resultados melhoram sensivelmente nos √∫ltimos 24 meses.¬†&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Evite contar publicamente sobre seus planos e ideias. Se voc√™ fizer isso antes, vai dar tudo errado. N√£o sei exatamente o motivo, mas √© o que tem acontecido com muita gente que conhe√ßo. Isso √© especialmente importante ao usar redes sociais.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Al√©m dos passos acima, pense nas seguintes coisas aleat√≥rias que consegui lembrar pra ajudar voc√™, tiradas diretamente da minha experi√™ncia pessoal:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tudo tem seu tempo e tudo vai acontecer na hora certa. N√£o se condene por demorar a ter seus resultados planejados. Eu demorei uns bons anos at√© conseguir a minha primeira proposta formal de emprego na Europa‚Ää-‚Ääem 2016 eu consegui chegar at√© o fim do meu primeiro processo seletivo internacional. Depois disso, at√© hoje, eu participei de v√°rios processos seletivos no Brasil e no exterior e fui aprovado e reprovado em in√∫meros. As reprova√ß√µes doeram muito. Mas com o tempo, eu me acostumei a falar melhor, a aceitar melhor as falhas, a entender meus pontos fracos e segui a vida. Se demorar para encontrar, n√£o importa. O que importa mesmo √© voc√™ estar vivo, com sa√∫de e com comida na mesa. E claro, continua sendo um absurdo privil√©gio ter um banheiro limpo para voc√™ cagar, tomar aquele banh√£o quente gostoso e ter aquela cama macia para voc√™ dormir¬†:)&lt;/li&gt;
&lt;li&gt;Cuide bem da sua sa√∫de mental. Os fdps v√£o pressionar por features mais r√°pidas, por metodologias que nos fazem trabalhar o tempo todo e tudo mais. Foda-se se voc√™ n√£o entregar, foda-se se der erro em produ√ß√£o e foda-se o cliente sofrendo. O que importa √© voc√™ estar vivo, com sa√∫de e com comida na mesa. Na situa√ß√£o atual, quase ningu√©m tem culh√£o pra mandar embora por baixo n√∫mero de itens entregues. Pode acontecer de n√£o chegar a promo√ß√£o ou aumento, mas foda-se.¬†&lt;/li&gt;
&lt;li&gt;Responsabilidade √© uma coisa s√©ria e que precisa ser absurdamente remunerada. Se voc√™ tem um time e precisa garantir a entrega dessas pessoas, assegure que o tempo e energia que voc√™ gasta com estas atividades s√£o de fato justas financeiramente. Eu acho mancada dar um cargo de coordena√ß√£o sem estarmos falando de um Total Comp de uns R$ 250.000 a R$ 300.000 anuais. Por isso que acho que trabalhar como um simples dev pra fora, sem grandes responsabilidades e sem vender muitas horas-extra na faixa √© interessante financeiramente. No Brasil, para ganhar essa grana, √© preciso trabalhar umas 12 horas di√°rias ou mais. Nunca ouvi falar de algu√©m que ganha isso por "apenas" 8 horas di√°rias. Inclusive, a gest√£o arrombada adora dizer que quem faz 8 horas √© pe√£o. Pois bem, prefiro ser pe√£o e fazer 7 horas di√°rias por dia por esse dinheiro.&lt;/li&gt;
&lt;li&gt;Divirta-se o m√°ximo que puder. Transe gostoso. N√£o deixe de fazer um sexo oral e n√£o deixe de beijar na boca. O tempo passa e √†s vezes isso acaba ficando de lado por causa das in√∫meras obriga√ß√µes di√°rias e do cansa√ßo extremo. Beba. Saia de casa. Sei que nessa pandemia ainda √© complicado, mas mesmo assim, fa√ßa o que der com responsabilidade. Se tiver rede de apoio, use ao m√°ximo. Use a rede de apoio tamb√©m para ter horas de estudo.&lt;/li&gt;
&lt;li&gt;N√£o exija demais de voc√™ mesmo. Mesmo que voc√™ tenha uma fam√≠lia pra sustentar ou contas demais pra pagar. Se voc√™ morrer ou ficar inv√°lido, vai foder do mesmo jeito. Pega leve nesse trampo caralho! O seu chefe est√° comendo o melhor churrasco, t√° dando aquele rol√™ gostoso na praia e voc√™ t√° a√≠, dando tempo excessivo da sua vida para sobreviver a amea√ßas de demiss√£o, de ser um impostor, de ser incompetente e de ser um cara que n√£o entrega "o que se espera de um s√™nior". Foda-se.&lt;/li&gt;
&lt;li&gt;Cuide da sa√∫de, dos dentes e pense sempre em deixar bons seguros de vida para os seus. Dependendo de onde morar, fa√ßa seguro da casa tamb√©m. Se pegar o carro para trabalhar muito longe, se pegar estrada, se pegar fretado‚Ä¶ j√° sabe.¬†
Seja absolutamente discreto ao decidir trabalhar para fora ou mesmo, mudar para um emprego melhor aqui mesmo. Ali√°s, seja sempre discreto com tudo na sua vida. N√ÉO FALE NADA SOBRE TEUS PLANOS NA SUA EMPRESA. √Äs vezes, conv√©m manter os planos em sigilo at√© mesmo de sua fam√≠lia. Por exemplo, se voc√™ tem um plano de ter uma segunda fonte de renda e comenta isso no trabalho, claramente v√£o associar uma eventual queda de produtividade com este seu suposto segundo trabalho. E voc√™ ser√° sempre julgado e colocado de lado sem ao menos saber o que est√° acontecendo. Evite isso. Cala a merda da sua boca! Isso vale muito para mim tamb√©m.&lt;/li&gt;
&lt;li&gt;Mantenha seus documentos em dia. Isso significa ter passaportes em dia. Isso significa, possivelmente, ter visto de visitante para os EUA em dia. Se estiver apenas morando junto com a esposa, considere o casamento formal‚Ää-‚Ääalguns vistos demandam tempo de casamento formal para que o c√¥njuge tamb√©m seja inclu√≠do no visto. Considere tamb√©m deixar os passaportes dos seus filhos absolutamente prontos. Pode acontecer muitas greves ou mesmo, falta de dinheiro para este tipo de servi√ßo, como j√° aconteceu recentemente.&lt;/li&gt;
&lt;li&gt;Sempre guarde pelo menos 10% do sal√°rio bruto, antes dos impostos. E esse dinheiro em geral precisa ser utiliz√°vel em no m√°ximo 1 dia √∫til. E claro, nesse aspecto, seja honesto e tenha as finan√ßas da casa organizadas. Voc√™ e seu c√¥njuge precisam saber para onde v√£o todos os centavos que entram. Sem segredinhos. Sem grana escondida para comer porcaria, usar drogas ou gastar com prostitui√ß√£o. E n√£o se esque√ßa: separe o sagrado or√ßamento do lazer individual e coletivo!&lt;/li&gt;
&lt;li&gt;N√£o interessa mais o carro que voc√™ tem. O trabalho remoto ajuda muito nesse aspecto, porque afinal, voc√™ n√£o precisa mais comprar um carro bom para demonstrar sucesso no estacionamento do trabalho. N√£o se afunde em d√≠vidas altas por causa de um carro, que hoje em dia, tem um custo alt√≠ssimo. Mas como sempre refor√ßo, a compra do primeiro carro √© obrigat√≥ria e em algum momento da vida √© necess√°rio tanto comprar um carro como tamb√©m, fazer um upgrade. S√≥ tome cuidado para que as contas mensais estejam equilibradas.&lt;/li&gt;
&lt;li&gt;Junte dinheiro para eventuais viagens a trabalho. Pense em um caixa com pelo menos 1000 euros para voc√™ gastar em eventual passeio pela Europa ap√≥s suas entrevistas ou mesmo, reuni√µes de trabalho p√≥s-contrata√ß√£o!¬†:)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sa√∫de e sucesso para todos!&lt;/p&gt;

</description>
      <category>carreira</category>
      <category>trabalho</category>
      <category>remoto</category>
    </item>
  </channel>
</rss>
