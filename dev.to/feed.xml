<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Holy S**T, I love BlitzJS</title>
      <author>Jonathan Higger</author>
      <pubDate>Mon, 08 Nov 2021 04:13:36 +0000</pubDate>
      <link>https://dev.to/jjhiggz/holy-st-i-love-blitzjs-5h3p</link>
      <guid>https://dev.to/jjhiggz/holy-st-i-love-blitzjs-5h3p</guid>
      <description>&lt;p&gt;So I've been tinkering with BlitzJS for the past couple of weeks and I have to say, it's now my favorite way of making websites HANDS DOWN.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-blitz"&gt;
  &lt;/a&gt;
  What is Blitz?
&lt;/h2&gt;

&lt;p&gt;Blitz is a framework that attempts to be a React on Rails (Ruby on Rails but with React) sort of thing, and it feels friggin amazing to program in. We'll get back to the deetz on this in a bit. But first lets give a quick history of what things were like before blitz.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-little-history-on-rails"&gt;
  &lt;/a&gt;
  A Little History on Rails
&lt;/h2&gt;

&lt;p&gt;If you don't know, Ruby on Rails' claim to fame is basically that you can churn out a full-stack website super fast. Here's how they achieve that.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Really Great CLI Tooling&lt;/li&gt;
&lt;li&gt;Amazing ORM (Active Record)&lt;/li&gt;
&lt;li&gt;MVC Architecture allows you to create your frontend without explicit fetch calls&lt;/li&gt;
&lt;li&gt;built in seeds / migration for database&lt;/li&gt;
&lt;li&gt;built in integration / unit/ and e2e tests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of this means you can start doing full stack development the second you run &lt;code&gt;rails g new project-name&lt;/code&gt;, and you can have a full stack website built literally within a minute. You can even get relational data working from your CLI. The way they accomplish this is largely defined by their motto "Convention over Configuration", meaning that they've made a lot of the tough tech choices for you, and in doing so preconfigured all of them to work with each other. It's also probably worth noting here that Rails is like THE ruby stack that everybody chooses. It's Ruby's killer tech, and without the Rails framework, it's likely that Ruby would not be a popular language at all. &lt;/p&gt;

&lt;p&gt;Unfortunately here's some things that kind of suck about rails.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It uses Ruby instead of JS / TS&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This isn't a problem per se, but the thing is that IMO Ruby as a language suffers in a few areas. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Async Programming doesn't feel as good as it does with JavaScript. &lt;/li&gt;
&lt;li&gt;Ruby is designed to be terse, sometimes unnecessarily so, and this can make complex code really hard to trace sometimes. &lt;/li&gt;
&lt;li&gt;It's difficult to trace where things come from in Ruby, making it often VERY difficult to figure out how to do something that isn't well documented&lt;/li&gt;
&lt;li&gt;It's weakly typed, and there's no well-working typescript kind of thing for ruby.&lt;/li&gt;
&lt;li&gt;Everybody knows Javascript, not everybody knows Ruby&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You're views are locked into being pretty static, pessimistically rendered. sure you can feed them with data, but most of the good stuff happens AFTER you refresh a page (Although there is new ways that Ruby is trying to Tackle this [ripping off Pheonix liveview]). If you are a beginner this basically means that the backend will primarily be driving any UI changes on the front. This simplifies logic, but can also be limiting in the types of things you can create.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It doesn't have the massive Javascript Community&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Many tools won't work with ruby very well, ie: firebase, styling libraries, UI testing libraries, etc...&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Sure Convention over configuration is great, but what if like I really really need to use some special package. Welp, it might be easy, or it might be really hard and difficult to debug. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Quick summary of pros and cons&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pros&lt;/th&gt;
&lt;th&gt;Cons&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Fast to make Full Stack Website&lt;/td&gt;
&lt;td&gt;Difficult to deviate from the norm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Best practice on DB, Testing from the jump&lt;/td&gt;
&lt;td&gt;Ruby &amp;lt; Javascript / Typescript IMO&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Amazing Codegen tools&lt;/td&gt;
&lt;td&gt;Scalability&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#on-the-other-hand-javascript"&gt;
  &lt;/a&gt;
  On The Other Hand (Javascript)
&lt;/h2&gt;

&lt;p&gt;Javascript, has felt like the opposite of rails. It's power came from it's flexibility. There are so many people with so many libraries constantly coming out that it's difficult to pick and choose which ones actually fit your needs. Furthermore, when you do pick them, now you have to make them play well with each other. &lt;/p&gt;

&lt;p&gt;To give you an example, when I was learning to code, people called node-express a backend framework. Which is INSANE. All of express's functionality is a small subset of what rails can do. When you want to set up a full stack website with node you'll need a stack similar to the following&lt;/p&gt;

&lt;p&gt;On the backend&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Express (handles controllers and routes)&lt;/li&gt;
&lt;li&gt;Passport (helps you with protecting routes)&lt;/li&gt;
&lt;li&gt;Some Database Client (helps you connect to a database)&lt;/li&gt;
&lt;li&gt;Some ORM(prisma), SQL Query Writer, or similar thing (allows you to query your database)&lt;/li&gt;
&lt;li&gt;Some Validations Library&lt;/li&gt;
&lt;li&gt;Need to go way out of your way to set up migrations / seeds for good database practice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On the frontend&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Choose your favorite: React, Vue, NextJS, Ember, JQuery, VanillaJS etc...&lt;/li&gt;
&lt;li&gt;Maybe: form libraries, validation libraries, typescript configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On both frontend and backend (this takes me for flarking ever personally 10+ hours to start and ever changing after I get the initial setup)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;typescript configuration&lt;/li&gt;
&lt;li&gt;prettier configuration&lt;/li&gt;
&lt;li&gt;eslint configuration&lt;/li&gt;
&lt;li&gt;testing configuration&lt;/li&gt;
&lt;li&gt;pipeline configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So yeah, it's super nice because you can swap out libraries and know what the heck is going on BUT it's A LOT of work and as they say "time is $$$$$$".&lt;/p&gt;

&lt;p&gt;In summary on what programming in Javascript has been like &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pros&lt;/th&gt;
&lt;th&gt;Cons&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Very Scalabile&lt;/td&gt;
&lt;td&gt;Since nobody makes a choice for you,  you will likely make some bad ones before you make good ones&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ton's of libraries&lt;/td&gt;
&lt;td&gt;Configuration can take a very long time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Very Flexible, and transparent configuration&lt;/td&gt;
&lt;td&gt;Slower to develop&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#alright-so-how-does-blitz-solve-these-problems"&gt;
  &lt;/a&gt;
  Alright so How does blitz solve these problems
&lt;/h2&gt;

&lt;p&gt;First let's just look at blitz's core values&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Fullstack &amp;amp; Monolithic&lt;/li&gt;
&lt;li&gt;API Not Required&lt;/li&gt;
&lt;li&gt;Convention over Configuration&lt;/li&gt;
&lt;li&gt;Loose Opinions&lt;/li&gt;
&lt;li&gt;Easy to Start, Easy to Scale&lt;/li&gt;
&lt;li&gt;Stability&lt;/li&gt;
&lt;li&gt;Community over Code&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'm not going to get too into it, but lets break apart their mission a bit. The majority of these are fully inline with rails( Fullstack, api not required, convention over configuration, easy to start[although rails is harder to scale from what I understand]). One of the key divergences here is that "Loose Opinions", it basically means that the blitz team cares about you being able to switch alot of the technology. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-on-loose-opinions"&gt;
  &lt;/a&gt;
  More on loose opinions
&lt;/h2&gt;

&lt;p&gt;Here is where you are locked in on Blitz. You have to use NextJS, React and.... thats about it. From there you can kind of do whatever you want, although you will have an easier time if you choose to use Prisma, and blitz's queries etc..&lt;/p&gt;

&lt;p&gt;In other words, with Blitz they give you a happy path at default but straying from the happy path isn't like trying scale everest, it's just maybe going to be uphill and a little bumpy. In fact Blitz even has tools like "recipes" (which come from gatsby), that allow you to adopt new technologies not core to blitz, that maybe someone else has configured before.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazing-albeit-somewhat-unfinished-cli-tools"&gt;
  &lt;/a&gt;
  Amazing ( albeit somewhat unfinished )CLI Tools
&lt;/h2&gt;

&lt;p&gt;A little while back, I did an &lt;a href="https://dev.to/jjhiggz/nestjs-could-be-amazing-someday-3in7"&gt;article about nestJS&lt;/a&gt; where I talked about their CLI. I really liked the idea of it, and it did save a little bit of time, but it's not nearly as good as Blitz's. The blitz CLI tools gives you some pretty amazing out of the box features, some of which wrap prisma commands. Here are some examples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz g resource modelname attr1:datatype1 belongsTo:otherModel
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;modifies your schema to generate a new model, in this case your model will have attr1 set to datatype 1, and belong to another model.  a real example of this might be &lt;code&gt;blitz g resource dog name:string belongsTo:user&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz g resource modelname attr1:datatype1 belongsTo:otherModel
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;does everything that generating the resource does, but also adds an index, show, edit, new page for that model. For example now out of the box you can go to /dogs/new and create a new dog which is pretty insane.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz console
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;allows you to explore your database with a CLI tool. This can be a bit buggy but is still super useful
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz prisma migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;wraps prisma to migrate your schema
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz seed
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;runs your seeds.ts file
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz install ___recipe_name___
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this will install based off of a recipe. For example you could run &lt;code&gt;blitz install tailwind&lt;/code&gt; and BAM you've installed tailwind. &lt;/p&gt;

&lt;p&gt;It's some pretty amazing codegen tools that blitz has set up for you, and that's only one of the features that makes blitz feel amazing. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automatic-codegen"&gt;
  &lt;/a&gt;
  Automatic Codegen
&lt;/h2&gt;

&lt;p&gt;So I don't fully understand the magic here, but prisma utilizes something they call the zero-api layer to generate types from your schema. Which is also pretty F**king insane. &lt;/p&gt;

&lt;p&gt;In my backend I have a properties table, which in the schema looks like this. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ee_KPX3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbzl8mshrxnpz6lbopt4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ee_KPX3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbzl8mshrxnpz6lbopt4.png" alt="Image description" width="880" height="487"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now once I migrate that file, I get types not only on my backend, but also on my frontend. At the top of my file I type `import {Property} from "db", and now I have the shape of my data on the frontend, I didn't have to make an interface anywhere. There's a single source of truth on that, which feels amazing. Now if I go to mess with a property on the front I know exactly what's there as soon as I make a change to my database. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RLRpjyip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mau9p71okd2f1jwvk4vc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RLRpjyip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mau9p71okd2f1jwvk4vc.jpg" alt="Image description" width="880" height="1173"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This also means that if I make a breaking change to a type on the database, that breaking change breaks the backend and the frontend as well. Which just means you catch stupid type errors instantly which I love.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h2&gt;

&lt;p&gt;The routing comes basically straight out of NextJS but with a twist. I'm not super familiar with next, but from what I understand in nextJS, you couldn't structure your routes by folder, but in blitz you can. So for example if you have the following&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;`&lt;br&gt;
src&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pages

&lt;ul&gt;
&lt;li&gt;properties

&lt;ul&gt;
&lt;li&gt;[propertyId]

&lt;ul&gt;
&lt;li&gt;edit.tsx&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;[propertyId].tsx&lt;/li&gt;
&lt;li&gt;new.tsx&lt;/li&gt;
&lt;li&gt;index.tsx
`&lt;code&gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You get the following routes automatically. &lt;br&gt;
&lt;code&gt;/properties/:id&lt;/code&gt; is your show page&lt;br&gt;
&lt;code&gt;/properties/:id/edit&lt;/code&gt; is your edit property page&lt;code&gt;&lt;br&gt;
&lt;/code&gt;/properties/new&lt;code&gt; is your create property page&lt;br&gt;
&lt;/code&gt;/properties/` is your properties index page &lt;/p&gt;

&lt;p&gt;This just makes your life easier with routing&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outro"&gt;
  &lt;/a&gt;
  Outro
&lt;/h2&gt;

&lt;p&gt;I'm not going to go full on over all of blitz here, because the &lt;a href="https://blitzjs.com/"&gt;blitzJS Documentation&lt;/a&gt; is already amazing. But here's some features that I never mentioned you get access to.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free Authentication, User, Password, Email OUT OF THE BOX&lt;/li&gt;
&lt;li&gt;React suspense library integration&lt;/li&gt;
&lt;li&gt;everything you already like about NextJS&lt;/li&gt;
&lt;li&gt;API routes and middleware&lt;/li&gt;
&lt;li&gt;Date Serialization&lt;/li&gt;
&lt;li&gt;Recipes, and ability to create your own custom recipes&lt;/li&gt;
&lt;li&gt;Jest out of the box&lt;/li&gt;
&lt;li&gt;A Cypress Recipe if you want e2e tests&lt;/li&gt;
&lt;li&gt;The team is trying to make this React Native Friendly (which would be a dream come true)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Long story short, BlitzJS feels amazing. I think it's just one of the best developer experiences that I've ever had and I highly suggest you try it out too. &lt;/p&gt;

</description>
      <category>react</category>
      <category>nextjs</category>
      <category>saas</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Basic Azure DevOps Build Pipeline</title>
      <author>Kristen Kinnear-Ohlmann</author>
      <pubDate>Mon, 08 Nov 2021 04:05:06 +0000</pubDate>
      <link>https://dev.to/kristenkinnearohlmann/basic-azure-devops-build-pipeline-4agb</link>
      <guid>https://dev.to/kristenkinnearohlmann/basic-azure-devops-build-pipeline-4agb</guid>
      <description>&lt;p&gt;I had the opportunity recently to work on an existing project that had an Azure DevOps build pipeline. &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/?view=azure-devops"&gt;Azure DevOps pipelines&lt;/a&gt; have a lot of options and configurations and can be involved to dive into. &lt;/p&gt;

&lt;p&gt;I had some existing work I could use as a guideline but I knew I needed to try to figure out a basic build pipeline before I could proceed. I have a personal Azure DevOps account so I was able to model out the work I needed to do. To sign up for an account, a person needs to have an email account that is not associated to Google or other personal type accounts; I created a Zoho mail account to use for Azure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuration-for-sample-nodejs-application"&gt;
  &lt;/a&gt;
  Configuration for sample Node.js application
&lt;/h2&gt;

&lt;p&gt;I started with a basic Node.js app, &lt;a href="https://github.com/kristenkinnearohlmann/simple-node-azure-pipeline"&gt;Simple Node Azure Pipeline&lt;/a&gt;. I installed &lt;code&gt;dotenv&lt;/code&gt; so I could work with variables in my sample script and prepare for using them in the Azure build pipeline.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// .env&lt;/span&gt;
&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;Kristen&lt;/span&gt;
&lt;span class="nx"&gt;favColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;orange&lt;/span&gt;
&lt;span class="nx"&gt;favFood&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;chocolate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/app.js&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world, this is a simple Node app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Your name is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. Your favorite color is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;favColor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. Your favorite food is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;favFood&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I created a script in &lt;code&gt;package.json&lt;/code&gt; to run locally and confirm that my &lt;code&gt;src/index.js&lt;/code&gt; script worked as expected. I invoked &lt;code&gt;dotenv&lt;/code&gt; from this script so that I wouldn't need to require it in &lt;code&gt;src/index.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;simple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node -r dotenv/config src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm run simple
&lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; simple-node-azure-pipeline@1.0.0 simple
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; node &lt;span class="nt"&gt;-r&lt;/span&gt; dotenv/config src/index.js
&lt;span class="nb"&gt;.&lt;/span&gt;
Hello world, this is a simple Node app
Your name is Kristen. Your favorite color is orange. Your favorite food is chocolate.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I created a version of the &lt;code&gt;simple&lt;/code&gt; script called &lt;code&gt;simple:ci&lt;/code&gt;. The second version calls only &lt;code&gt;src/index.js&lt;/code&gt; since variables will be handled by Azure. Our organization uses the &lt;code&gt;ci&lt;/code&gt; tag to identify scripts run as a part of &lt;a href="https://www.redhat.com/en/topics/devops/what-is-ci-cd"&gt;CI/CD pipelines&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;simple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node -r dotenv/config src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;simple:ci&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This final version was pushed to a remote repo in Azure DevOps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configure-azure-devops-variable-group"&gt;
  &lt;/a&gt;
  Configure Azure DevOps Variable Group
&lt;/h2&gt;

&lt;p&gt;The first action I took was configuring a &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups?view=azure-devops&amp;amp;tabs=yaml"&gt;variable group&lt;/a&gt;. These variables will be used later within the build pipeline.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigate to &lt;strong&gt;Pipelines &amp;gt; Library&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qtHWs71U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/439bf60507b2a0e0bd78b4b79d0403d5/accec/azure-01-library.jpg" alt="Azure pipelines library" width="363" height="507"&gt;
&lt;/li&gt;
&lt;li&gt;Add a &lt;strong&gt;Variable Group&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MTBvAdu8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/0d5fa03751d6efd3cdc03fb7400acbd7/78ff8/azure-02-add-var-group.jpg" alt="Azure pipelines add variable group" width="493" height="141"&gt;
&lt;/li&gt;
&lt;li&gt;Name the variable group and create entries for each variable, together with the value you want to use in the build pipeline
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LIt1q6ZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/7d0ea0f43f1b8e0e0b24865ed99b72f6/88632/azure-03-complete-var-group.jpg" alt="Azure pipelines variable group entries" width="778" height="785"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#configure-azure-devops-build-pipeline"&gt;
  &lt;/a&gt;
  Configure Azure DevOps Build Pipeline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Navigate to &lt;strong&gt;Pipelines &amp;gt; Pipelines&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_MB_cZSP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/dfffd8a46586176ca0a820f92f4ad9cd/158ba/azure-04-pipelines-pipelines.jpg" alt="Azure pipelines initial" width="360" height="398"&gt;
&lt;/li&gt;
&lt;li&gt;Choose to &lt;strong&gt;Create pipeline&lt;/strong&gt; (if there are no existing pipelines) or &lt;strong&gt;New pipeline&lt;/strong&gt; (if other pipelines exist)
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s1cJlBCF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/eee960a5b2459a30fbe776274d4724ba/9bc89/azure-05-pipelines-create.jpg" alt="Azure pipelines create" width="755" height="417"&gt;
&lt;/li&gt;
&lt;li&gt;In the &lt;strong&gt;Connect&lt;/strong&gt; step, choose &lt;strong&gt;Azure Repos Git&lt;/strong&gt; since the repo was pushed to the remote project
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZGMNhoQi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/d8a4b2e080736c508dca3a14ccd75d7e/c80f2/azure-06-pipelines-repo.jpg" alt="Azure pipelines connect" width="796" height="257"&gt;
&lt;/li&gt;
&lt;li&gt;Choose the repo to work with
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1N_-SpSp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/4e44d44cfbd98ca653720dec569e729c/b4708/azure-07-pipelines-repo-select.jpg" alt="Azure pipelines repo choice" width="862" height="280"&gt;
&lt;/li&gt;
&lt;li&gt;Choose the project type; the repo contains a Node.js app
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qMuEzT3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/a619517132a42cb9684b10deb1236a8e/dfe3c/azure-08-pipelines-type.jpg" alt="Azure pipelines repo type" width="625" height="211"&gt;
&lt;/li&gt;
&lt;li&gt;A basic YAML file will be created.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PShVDzw3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/c97f4090b66758fabb9635311bcc6e90/88304/azure-09-pipelines-basic-yaml.jpg" alt="Azure pipelines basic YAML" width="863" height="751"&gt;
&lt;/li&gt;
&lt;li&gt;From the &lt;strong&gt;Save and run&lt;/strong&gt; dropdown, choose &lt;strong&gt;Save&lt;/strong&gt; to work further with the file. &lt;strong&gt;Note&lt;/strong&gt;: For future development, perform a pull locally before additional work to retrieve the YAML file.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Dduk0PK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/4d0cce3d60de4b1a3bf01638f40d8073/f89ba/azure-10-pipelines-save.jpg" alt="Azure pipelines YAML save" width="587" height="557"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#adjust-yaml-file-for-variable-use"&gt;
  &lt;/a&gt;
  Adjust YAML file for variable use
&lt;/h2&gt;

&lt;p&gt;The basic YAML file needs to be updated to reference the variable group and its variables.&lt;/p&gt;

&lt;p&gt;Additions to note in the image below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lines 12 - 13: Add a reference to the variable group&lt;/li&gt;
&lt;li&gt;Line 21: Update the reference to the &lt;code&gt;simple:ci&lt;/code&gt; script&lt;/li&gt;
&lt;li&gt;Lines 23 - 26: Add an &lt;code&gt;env&lt;/code&gt; group and list the variable name and its correlated entry in the variable group enclosed in &lt;code&gt;$()&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LJBfI_wJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/cf9fec0a55c4a86bd85b99560476cc5b/8bac5/azure-11-pipeline-yaml-update.jpg" alt="Azure pipelines YAML update" width="673" height="547"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#grant-pipeline-permission-to-variable-group"&gt;
  &lt;/a&gt;
  Grant pipeline permission to variable group
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Return to &lt;strong&gt;Pipelines &amp;gt; Library&lt;/strong&gt; and select the variable group to update&lt;/li&gt;
&lt;li&gt;Choose &lt;strong&gt;Pipeline permissions&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y6-GpIEt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/609cf1216479c72a857ff1a9e494928c/1f1b4/azure-12-pipelines-library-perms.jpg" alt="Azure variable group permissions" width="776" height="123"&gt;
&lt;/li&gt;
&lt;li&gt;Click the &lt;code&gt;+&lt;/code&gt; to add the pipeline configured above to the permission group
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jv76J96B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/e65a2bddaeb572864ca27101b21beb03/d412e/azure-13-pipelines-library-perms-add.jpg" alt="Azure variable group permissions add" width="880" height="396"&gt;
&lt;/li&gt;
&lt;li&gt;The permissions are automatically saved&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#run-the-build-pipeline"&gt;
  &lt;/a&gt;
  Run the build pipeline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Return to &lt;strong&gt;Pipelines &amp;gt; Pipelines&lt;/strong&gt; and select the pipeline configure above. Choose &lt;strong&gt;Run pipeline&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S-3ym9yg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/fa78501df9521f320101d852a6b9365b/4e3e1/azure-14-pipelines-run.jpg" alt="Azure pipelines run" width="857" height="160"&gt;
&lt;/li&gt;
&lt;li&gt;Click the &lt;strong&gt;Job&lt;/strong&gt; entry to monitor the run
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G2uoIdmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/34b76c4eabfe393500f4bbe0437fa6ca/35372/azure-15-pipelines-monitor-run.jpg" alt="Azure pipelines run monitor" width="867" height="752"&gt;
&lt;/li&gt;
&lt;li&gt;The job will run through all of the configured steps, some of which have been set up by Azure
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UY1a8fUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/1037b017bc87b7c5a430640f42c72dd6/572c8/azure-16-pipelines-run-job-output.jpg" alt="Azure pipelines run steps" width="880" height="468"&gt;
&lt;/li&gt;
&lt;li&gt;Click on the &lt;code&gt;npm run and build&lt;/code&gt; step that invoked the script; the output reflects the variables set in the variable group not the local set of variables
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YkjB5goF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/47faad5277e523cecc88b7a9ac90046a/01a1d/azure-17-pipelines-run-job-output-build.jpg" alt="Azure pipelines review script execution" width="880" height="447"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;This basic Azure DevOps build pipeline configuration provides an example of how to set up the pipeline and use variables from a variable group.&lt;/p&gt;

&lt;p&gt;Once the configuration is established in the YAML, it can be further enhanced to perform other actions and tasks.&lt;/p&gt;

</description>
      <category>azure</category>
      <category>devops</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Start your programming journey: Coding bootcamps vs. Self-learning</title>
      <author>Christine Shu</author>
      <pubDate>Mon, 08 Nov 2021 03:16:53 +0000</pubDate>
      <link>https://dev.to/christineshu/start-your-programming-journey-coding-bootcamps-vs-self-learning-7ae</link>
      <guid>https://dev.to/christineshu/start-your-programming-journey-coding-bootcamps-vs-self-learning-7ae</guid>
      <description>&lt;p&gt;If you’re considering switching careers to become a developer, you’ve probably spent hours researching bootcamps and other learning options, such as online courses and various self-learning methods. At the core, what you may actually be asking is: are coding bootcamps worth it or is self-learning more suitable?&lt;/p&gt;

&lt;p&gt;In this article we’ll help you figure out if full-time onsite coding bootcamps or self-learning fit your learning needs better by comparing these five factors: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Structure and industry relevance&lt;/li&gt;
&lt;li&gt;Motivation&lt;/li&gt;
&lt;li&gt;Cost&lt;/li&gt;
&lt;li&gt;Flexibility&lt;/li&gt;
&lt;li&gt;Possibility of landing a job&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ll take a closer look at some of the pros and cons under each category. Hopefully we will get you one step closer to taking that first step in your programming journey! &lt;/p&gt;

&lt;p&gt;Short on time? 👉 &lt;a href="https://ucarecdn.com/051f2576-2add-4050-abd4-0f5436975d9c/"&gt;Jump to the summary table&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#structure-amp-industry-relevance"&gt;
  &lt;/a&gt;
  Structure &amp;amp; Industry Relevance
&lt;/h2&gt;

&lt;p&gt;Full-time onsite bootcamps are a more organized style of learning whereas self-learning allows you freedom in building your own curriculum. In this section, we will compare the structured vs. unstructured aspect, and how easy it is to stay updated with the latest programming knowledge. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootcamps"&gt;
  &lt;/a&gt;
  Bootcamps
&lt;/h3&gt;

&lt;p&gt;Onsite coding bootcamps are structured classes with a set curriculum taught by a dedicated teacher and a few teaching assistants. Most coding bootcamps focus on web development holistically. This means you’ll learn a variety of technologies, including the latest industry knowledge. &lt;/p&gt;

&lt;p&gt;In the bootcamp, you likely have a daily planned module and weekly goals. Classes can range from learning the foundations to building your own web applications. It’s common to learn basic programming languages such as JavaScript, SQL, Python, and some common industry practices, such as unit testing and the agile methodology.&lt;/p&gt;

&lt;p&gt;Bootcamps are specifically designed to help you get a developer job after graduation. This means that the material will be tailored to the knowledge and skills that a software developer will need in the real world.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selflearning"&gt;
  &lt;/a&gt;
  Self-learning
&lt;/h3&gt;

&lt;p&gt;With self-learning, the structure is up to you. You can choose to set a strict schedule or give yourself more flexibility. You can also plan when, where, and how you want to acquire new programming knowledge. &lt;/p&gt;

&lt;p&gt;For example, if you are learning Javascript from scratch, this might be what your curriculum looks like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Take the &lt;a href="https://www.codecademy.com/learn/introduction-to-javascript"&gt;Javascript course on Codecademy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Practice with &lt;a href="https://www.w3schools.com/js/default.asp"&gt;tutorials and practices on W3schools&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Find free videos on Youtube to dive deeper into specific concepts &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you already know the basics and want someone more experienced to look through your projects or answer your questions, you can use platforms like &lt;a href="https://www.codementor.io/search/mentors"&gt;Codementor&lt;/a&gt; (hey, that’s us! 😉) &lt;br&gt;
to find mentors specialized in Javascript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codementor.io/blog/how-to-use-codementor-cu74d4twet"&gt;&lt;em&gt;9 Ways A Mentor Can Advance Your Programming Journey&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-verdict-a-tie"&gt;
  &lt;/a&gt;
  The verdict 📣 : A tie
&lt;/h3&gt;

&lt;p&gt;As long as you understand your goals, your availability, and your learning style, structured and unstructured learning can be equally powerful. While structured bootcamps may save you time and energy by providing you with a set curriculum and industry knowledge, there is less freedom in deciding what and how you want to learn. On the other hand, self-learning would give you more flexibility, but could lack the structure and boundaries that might be helpful.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j6rDNX6g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/7e8d9aad-4ec8-4d8b-ae0c-f9774a16bce9/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j6rDNX6g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/7e8d9aad-4ec8-4d8b-ae0c-f9774a16bce9/" alt="Coding Bootcamps or Self-learning? Structure and Relevance comparison.png" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;Learning to code can be overwhelming. How you keep up the momentum, stay curious and motivated, and continue to advance your knowledge is a skill in itself. As shown in the graph below, you are likely to build up a sense of confidence during the honeymoon phase, and just when you think you’ve gotten through the learning curve, you enter this cliff of confusion and go downhill from there. This is where many people give up, but once you push through, it’s uphill from there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--23wqKKOo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/4cc14df8-89dc-4ebe-9fbf-5fe519d53150/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--23wqKKOo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/4cc14df8-89dc-4ebe-9fbf-5fe519d53150/" alt="codingconfidence.png" width="880" height="540"&gt;&lt;/a&gt;&lt;em&gt;Image from &lt;a href="https://www.thinkful.com/blog/why-learning-to-code-is-so-damn-hard/"&gt;&lt;em&gt;Why learning to code is so damn hard&lt;/em&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this section, we will take a closer look at the motivation factor. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootcamps"&gt;
  &lt;/a&gt;
  Bootcamps
&lt;/h3&gt;

&lt;p&gt;With a set curriculum, full-time onsite coding bootcamps create a learning environment where everyone learns the same information and works on projects at the same time. You feel a strong sense of belonging to this community of peers as everyone works toward the same goal: to become a software developer.&lt;/p&gt;

&lt;p&gt;While your cohort and classroom can keep you accountable and motivated, it could also do the opposite. You could be distracted by the social environment, discouraged by others who seem to be ahead of you, or overwhelmed and drained by the heavy workload. While there are structures to help you stay motivated in bootcamps, it is not always a given.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selflearning"&gt;
  &lt;/a&gt;
  Self-learning
&lt;/h3&gt;

&lt;p&gt;For some, it is much easier to learn independently because you can set your own pace and not be bound by a structured curriculum and strict deadlines. &lt;/p&gt;

&lt;p&gt;However, the down side of teaching yourself is that you might lose motivation, feel isolated, or feel lost without a clear roadmap. One way around this is to find an accountability partner,  mentor, or peer to work with to stay motivated. As accountability is not inherently built into self-learning, staying motivated may be extra challenging. The journey for you to become a developer could take longer, and you may experience several dips throughout your learning journey.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-verdict-coding-bootcamps"&gt;
  &lt;/a&gt;
  The verdict 📣 : Coding bootcamps
&lt;/h3&gt;

&lt;p&gt;Social interactions and the right amount of competition and mutual encouragement will help you thrive. Joining a cohort of students can keep you motivated and give you the push you need when you feel like giving up.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9bvxMD_z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/b3c50aea-9ec1-4a3a-b45f-d1ef0a62b4f5/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9bvxMD_z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/b3c50aea-9ec1-4a3a-b45f-d1ef0a62b4f5/" alt="Coding Bootcamps or Self-learning? Motivation comparison.png" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codementor.io/blog/improve-programming-skills-d2ymtec4cl"&gt;&lt;em&gt;How To Improve Your Programming Skills As Developers and Non-Developers&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flexibility"&gt;
  &lt;/a&gt;
  Flexibility
&lt;/h2&gt;

&lt;p&gt;Who doesn’t love a flexible schedule? We all want to be able to work, rest, eat, and set our own schedule. If you attend an in person bootcamp, your schedule is set for you, whereas you can maintain a high level of freedom and flexibility with self-learning.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootcamps"&gt;
  &lt;/a&gt;
  Bootcamps
&lt;/h3&gt;

&lt;p&gt;With full-time onsite bootcamps, you set aside everything in your life and focus on the course for roughly 3.5 months. You have a fixed start and end date, and a set schedule for each day. You dedicate most of your time to the course and sacrifice flexibility. The guarantee is, at the end of the course, you should have the skills and a solid portfolio to prepare you for your first developer job.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selflearning"&gt;
  &lt;/a&gt;
  Self-learning
&lt;/h3&gt;

&lt;p&gt;Self-learning is considerably more flexible as you get to set your own schedule.  You aren’t bound by potential commute, class-attending, and group project time. You can set a learning schedule around your work hours. You are the main decision maker, and can decide on the topics you want to learn, how deep you want to go, the projects you want to work on, and adjust them at any time. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-verdict-selflearning"&gt;
  &lt;/a&gt;
  The verdict 📣 : Self-learning
&lt;/h3&gt;

&lt;p&gt;Self-learning is the best learning option for you if you value and prioritize flexibility. Other than a flexible schedule, you also have the maximum flexibility to choose the material and people you want to learn from. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gPfnYjm---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/c41a3b89-1d9a-412d-9973-6c233bbb310b/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gPfnYjm---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/c41a3b89-1d9a-412d-9973-6c233bbb310b/" alt="Coding Bootcamps or Self-learning?Flexibility comparison table.png" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cost"&gt;
  &lt;/a&gt;
  Cost
&lt;/h2&gt;

&lt;p&gt;In 2021, the &lt;a href="https://www.ziprecruiter.com/Salaries/Software-Developer-Salary"&gt;average annual salary&lt;/a&gt; of a software developer in the United States is $86,523, with the &lt;a href="https://www.payscale.com/research/US/Job=Software_Engineer/Salary"&gt;top 75th percentile&lt;/a&gt; making around $100k a year. How much are you willing to spend to have a career in software development?&lt;/p&gt;

&lt;p&gt;In this section, we’ll look at the cost of joining a bootcamp and self-directed learning. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootcamps"&gt;
  &lt;/a&gt;
  Bootcamps
&lt;/h3&gt;

&lt;p&gt;To join a full-time onsite coding bootcamp, you’re looking at around $13,500 (&lt;a href="https://www.bestcolleges.com/bootcamps/payment/bootcamp-cost/"&gt;median bootcamp tuition in 2020&lt;/a&gt;) for a roughly 14-week period. While it is more affordable than getting a 4-year or 2-year computer science degree, for some, this is a considerable sum of money and time invested into a career they’re not sure will work out for them. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selflearning"&gt;
  &lt;/a&gt;
  Self-learning
&lt;/h3&gt;

&lt;p&gt;With all the free resources online, such as courses, books, tutorials, or even talks, it’s possible to learn programming completely free of charge. You can also pay a few hundred dollars for an online course from platforms like &lt;a href="https://www.udemy.com/"&gt;Udemy&lt;/a&gt;, and &lt;a href="https://www.educative.io/"&gt;Educative&lt;/a&gt;, or for subscription-based learning options, such as &lt;a href="https://frontendmasters.com/"&gt;Frontend Masters&lt;/a&gt; and &lt;a href="https://teamtreehouse.com/"&gt;Treehouse&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-verdict-selflearning"&gt;
  &lt;/a&gt;
  The verdict 📣 : Self-learning
&lt;/h3&gt;

&lt;p&gt;From fully free resources, to investing hundreds of dollars into resources of your choosing, self-learning is much more affordable. You can continue to learn at your own pace and pick up new skills according to your own financial ability. With coding bootcamps, you have to decide whether it is cost effective for you for the fixed price and timeframe. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tcKaO565--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/6d1cf759-6c29-470b-885b-55d805d55fb0/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tcKaO565--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/6d1cf759-6c29-470b-885b-55d805d55fb0/" alt="Coding Bootcamps or Self-learning? Cost comparison table.png" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#landing-a-job"&gt;
  &lt;/a&gt;
  Landing a job
&lt;/h2&gt;

&lt;p&gt;If you’re learning programming to switch careers, you should consider how likely and how quickly you can find a developer job with bootcamps and self-learning.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootcamps"&gt;
  &lt;/a&gt;
  Bootcamps
&lt;/h3&gt;

&lt;p&gt;The goal of a coding bootcamp is to help you land a software developer job. Bootcamps will  require you to complete a resume and portfolio by the end of the program. They will also provide career-focused resources, such as career counselors. Some even have “hiring days” or similar events where students can present their portfolio and attend interviews with the bootcamp industry partners. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selflearning"&gt;
  &lt;/a&gt;
  Self-learning
&lt;/h3&gt;

&lt;p&gt;As career resources are not provided to self taught developers, you’d have to take on the sole responsibility of preparing for and finding your first developer job. There are plenty of resources online dedicated to helping people find their first developer job. For more personalized help, you can consult developers in the industry for tips on landing your first job.You can also connect with mentors or senior developers for portfolio feedback and mock interviews.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-verdict-bootcamp"&gt;
  &lt;/a&gt;
  The verdict 📣: Bootcamp
&lt;/h3&gt;

&lt;p&gt;A coding bootcamp is familiar with what the industry is looking for and has experience helping students switch careers. Naturally, they have a better idea of what portfolios would work, what your resume should include, and other career resources you might need to kickstart your developer career. The added guidance is especially helpful when you’re switching careers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E_SsSJRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/f2b64b7c-be8c-4b66-9fd0-d8c11815fd15/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E_SsSJRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/f2b64b7c-be8c-4b66-9fd0-d8c11815fd15/" alt="Coding Bootcamps or Self-learning? Possibility of landing a job.png" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Hopefully we’ve given you a bit more insights on two of the methods you could choose from. There are many many different ways to learn programming, what’s most important is understanding your own needs and goals and choosing a learning style that suits you best. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GsdJo3TI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/051f2576-2add-4050-abd4-0f5436975d9c/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GsdJo3TI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/051f2576-2add-4050-abd4-0f5436975d9c/" alt="Coding Bootcamps or Self-learning? A Summary table.png" width="880" height="806"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Regardless of which route you choose, you can always find an accountability partner or a &lt;a href="https://www.codementor.io/search/mentors"&gt;&lt;strong&gt;coding mentor&lt;/strong&gt;&lt;/a&gt; to support you through your journey. Not to mention, programming is a lifelong journey for all developers. A coding mentor can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Continue to encourage you even after you graduate from a coding bootcamp. &lt;/li&gt;
&lt;li&gt;Provide you technical and career advice.&lt;/li&gt;
&lt;li&gt;Share their experience and the latest trends in the tech industry. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Join discussion with other mentors and users on 👉 &lt;a href="https://github.com/CodementorIO/event-topics/discussions/4"&gt;Getting into tech without a Computer Science degree&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have you gone through a coding bootcamp or are you a self-taught developer? We’d love to hear what worked for you and what didn’t. Comment below to let us know!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>How to get an A+ Security Grade For Your Website on Mozilla Observatory (Part 2 - Nginx)</title>
      <author>Jeremy</author>
      <pubDate>Mon, 08 Nov 2021 02:24:00 +0000</pubDate>
      <link>https://dev.to/jeremyling/how-to-get-an-a-security-grade-on-mozilla-observatory-part-2-nginx-47fg</link>
      <guid>https://dev.to/jeremyling/how-to-get-an-a-security-grade-on-mozilla-observatory-part-2-nginx-47fg</guid>
      <description>&lt;p&gt;After rewriting the FormBlob website with Hugo, I wanted to ensure that the website adhered to security best practices and was not vulnerable to any known issues. I began looking for a measure for website security and found Mozilla Observatory. On my very first scan, I received a C grade. While not particularly bad, I wanted to rectify any flaws found to achieve the best score I could. It was also an opportunity to learn a little more about website security.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-what-is-mozilla-observatory"&gt;
  &lt;/a&gt;
  So what is Mozilla Observatory?
&lt;/h3&gt;

&lt;p&gt;The following quote is taken directly from the FAQ at &lt;a href="https://observatory.mozilla.org/faq" rel="noopener"&gt;&lt;/a&gt;&lt;a href="https://observatory.mozilla.org/faq"&gt;https://observatory.mozilla.org/faq&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Observatory tests for preventative measure against cross-site scripting attacks, man-in-the-middle attacks, cross-domain information leakage, cookie compromise, content delivery network compromise, and improperly issued certificates.&lt;/p&gt;

&lt;p&gt;However, it does not test for outdated software versions, SQL injection vulnerabilities, vulnerable content management system plugins, improper password creation policies or storage procedures, and more. These are just as important as what the Observatory tests for, and site operators should not be neglectful of them simply because they score well on the Observatory.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While it may sound like a mouthful, these tests largely measure how vulnerable your website is to some of the most common malicious attacks that prey on a website developer's negligence in setting up secure networking configurations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#formblob-setup"&gt;
  &lt;/a&gt;
  FormBlob Setup
&lt;/h3&gt;

&lt;p&gt;I will split the discussion in this article into two parts - one for &lt;a href="https://formblob.com"&gt;https://formblob.com&lt;/a&gt; and another for &lt;a href="https://build.formblob.com"&gt;https://build.formblob.com&lt;/a&gt;. This is because the main site is a static site built using Hugo and deployed on Netlify, while the form builder site is a React app deployed on AWS ECS behind an elastic load balancer (ELB).&lt;/p&gt;

&lt;p&gt;This is part two of the article discussing how you would set up Nginx to achieve an A+ grade. For part one discussing how to set up Netlify, &lt;a href="https://formblob.com/resources/how-i-got-an-a-security-grade-on-mozilla-observatory-netlify"&gt;click here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h3&gt;

&lt;p&gt;In order to improve your grade for Mozilla Observatory scans, you'll need to add HTTP response headers. To add HTTP response headers to Nginx, you will need to edit the server context in the &lt;code&gt;nginx.conf&lt;/code&gt; file. Here, I assume that you are familiar enough with Nginx to set up the config file. I list the full list of headers and config added to achieve an A+ grade below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
  listen 80&lt;span class="p"&gt;;&lt;/span&gt;
  ...

  &lt;span class="k"&gt;return &lt;/span&gt;301 https://&lt;span class="nv"&gt;$host$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

server &lt;span class="o"&gt;{&lt;/span&gt;
  listen 443:
  ...

  &lt;span class="c"&gt;# Only connect to this site and subdomains via HTTPS for the next two years&lt;/span&gt;
  add_header Strict-Transport-Security &lt;span class="s2"&gt;"max-age=63072000; includeSubDomains; preload"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Only allow my site to frame itself&lt;/span&gt;
  add_header X-Frame-Options &lt;span class="s2"&gt;"SAMEORIGIN"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Prevent browsers from incorrectly detecting non-scripts as scripts&lt;/span&gt;
  add_header X-Content-Type-Options &lt;span class="s2"&gt;"nosniff"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Block pages from loading when they detect reflected XSS attacks&lt;/span&gt;
  add_header X-Xss-Protection &lt;span class="s2"&gt;"1; mode=block"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Only send the shortened referrer to a foreign origin, full referrer to a local host&lt;/span&gt;
  add_header Referrer-Policy &lt;span class="s2"&gt;"strict-origin-when-cross-origin"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Configue CSP&lt;/span&gt;
  add_header Content-Security-Policy &lt;span class="s2"&gt;"default-src 'self' formblob.com *.formblob.com fblob.me *.fblob.me; connect-src 'self' formblob.com *.formblob.com wss://*.formblob.com fblob.me *.fblob.me https://sockjs-mt1.pusher.com firebase.googleapis.com firebaseinstallations.googleapis.com https://www.googleapis.com/webfonts/ www.google-analytics.com; font-src 'self' https://fonts.gstatic.com; img-src https: data: blob: www.googletagmanager.com https://ssl.gstatic.com https://www.gstatic.com; media-src https: data: blob:; script-src 'self' 'unsafe-eval' js.stripe.com https://www.googletagmanager.com https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/ 'sha256-TQ+edvHvrQ4+h8G+tZQdFsQSrUAeSfwE/D8KjAzDnT0='; style-src 'self' 'unsafe-inline' fonts.googleapis.com; frame-src 'self' formblob.com *.formblob.com fblob.me *.fblob.me js.stripe.com https://www.google.com/recaptcha/ https://recaptcha.google.com/recaptcha/; frame-ancestors 'self' formblob.com *.formblob.com fblob.me *.fblob.me;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  ...
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#test-scores"&gt;
  &lt;/a&gt;
  Test Scores
&lt;/h3&gt;

&lt;p&gt;Mozilla Observatory scores your website on a predefined set of tests. Let's go through each of the tests individually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1cqyVGma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i21r8559mhinokxtllss.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1cqyVGma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i21r8559mhinokxtllss.png" alt="Test Scores" width="880" height="591"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#content-security-policy"&gt;
  &lt;/a&gt;
  Content Security Policy
&lt;/h4&gt;

&lt;p&gt;Content Security Policy (CSP) gives you fine-grained control over which resources can be loaded on your website and from where such resources are allowed. It aims to protect your website from cross-site scripting (XSS) vulnerabilities. XSS vulnerabilities stem from unsafe inline Javascript and disabling this effectively eliminates most XSS attacks. However, disabling unsafe inline also means that &lt;em&gt;all&lt;/em&gt; Javascript must be loaded from &lt;code&gt;&amp;lt;script src=""&amp;gt;&lt;/code&gt; tags. Javascript inside &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags but not loaded via &lt;code&gt;src&lt;/code&gt; will fail to execute.&lt;/p&gt;

&lt;p&gt;Configuring CSP is a tedious process that requires you to evaluate the sources of all the scripts and styles loaded on your website. Before we dive into each policy, here's a look at the complete CSP I deployed on FormBlob. Note that I split each directive onto a separate line here for readability. When deploying, the entire CSP must be in a single line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;/&lt;span class="k"&gt;*&lt;/span&gt;
  &lt;span class="c"&gt;# Configure CSP&lt;/span&gt;
  add_header Content-Security-Policy &lt;span class="s2"&gt;"
    default-src 'self' formblob.com *.formblob.com fblob.me *.fblob.me;
    connect-src 'self' formblob.com *.formblob.com wss://*.formblob.com fblob.me *.fblob.me https://sockjs-mt1.pusher.com firebase.googleapis.com firebaseinstallations.googleapis.com https://www.googleapis.com/webfonts/ www.google-analytics.com;
    font-src 'self' https://fonts.gstatic.com;
    img-src https: data: blob: www.googletagmanager.com https://ssl.gstatic.com https://www.gstatic.com;
    media-src https: data: blob:;
    script-src 'self' 'unsafe-eval' js.stripe.com https://www.googletagmanager.com https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/ 'sha256-TQ+edvHvrQ4+h8G+tZQdFsQSrUAeSfwE/D8KjAzDnT0=';
    style-src 'self' 'unsafe-inline' fonts.googleapis.com;
    frame-src 'self' formblob.com *.formblob.com fblob.me *.fblob.me js.stripe.com https://www.google.com/recaptcha/ https://recaptcha.google.com/recaptcha/;
    frame-ancestors 'self' formblob.com *.formblob.com fblob.me *.fblob.me;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I used a subset of the full list of directives that are relevant to FormBlob. I will limit my discussion here to only these directives and a few others that are common. You can read more about the &lt;a href="https://developers.google.com/web/fundamentals/security/csp"&gt;full list of directives here&lt;/a&gt;. Also, as a start, I recommend using the header &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; instead of &lt;code&gt;Content-Security-Policy&lt;/code&gt; to get a report of all the violations without breaking your website.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/default-src"&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; is a fallback directive for the other fetch directives. Directives that are specified have no inheritance, while directives that are not specified will fall back to the value of &lt;code&gt;default-src&lt;/code&gt;. Here, you want to include 'self' (the origin site with the same scheme and port) and other trusted domains. The recommended setting for this is &lt;code&gt;none&lt;/code&gt;, which will require you to set almost every other directive.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/connect-src"&gt;&lt;code&gt;connect-src&lt;/code&gt;&lt;/a&gt; provides control over fetch requests, XHR, eventsource, beacon and websockets connections. This defines any resources that you need to connect to. For websocket connections, you will have to set the relevant scheme. For example, wss://*.formblob.com.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/font-src"&gt;&lt;code&gt;font-src&lt;/code&gt;&lt;/a&gt; specifies which URLs to load fonts from. If you are using Google Fonts, this directive should include &lt;code&gt;https://fonts.gstatic.com data:&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/img-src"&gt;&lt;code&gt;img-src&lt;/code&gt;&lt;/a&gt; specifies the URLs that images can be loaded from. If you use Google Tag Manager, this directive should include &lt;code&gt;www.googletagmanager.com https://ssl.gstatic.com https://www.gstatic.com&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/media-src"&gt;&lt;code&gt;media-src&lt;/code&gt;&lt;/a&gt; specifies the URLs from which video, audio and text track resources can be loaded from.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/manifest-src"&gt;&lt;code&gt;manifest-src&lt;/code&gt;&lt;/a&gt; specifies the URLs that application manifests may be loaded from.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src"&gt;&lt;code&gt;script-src&lt;/code&gt;&lt;/a&gt; specifies the locations from which a script can be executed from. If you use Google Tag Manager, the recommended approach is to use the &lt;a href="https://developers.google.com/tag-manager/web/csp"&gt;nonce method&lt;/a&gt; for GTM scripts. I include the &lt;code&gt;'unsafe-eval'&lt;/code&gt; keyword here because FormBlob uses a heavily sanitized &lt;code&gt;Function()&lt;/code&gt; method to evaluate previously set fields to personalise the experience for users completing forms. This is a quintessential feature across all form builders.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In this directive, I also include a hash keyword &lt;code&gt;'sha256-TQ+edvHvrQ4+h8G+tZQdFsQSrUAeSfwE/D8KjAzDnT0='&lt;/code&gt;. You may use the hashed script as a keyword to allow any script to be loaded. This hash is automatically generated in the report in the console for any script that violates the directive. You can copy the hash together with the single quotes directly into the directive to allow the script.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src"&gt;&lt;code&gt;style-src&lt;/code&gt;&lt;/a&gt; controls from where styles get applied to a document. This includes &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; elements, &lt;code&gt;@import&lt;/code&gt; rules, and requests originating from a &lt;code&gt;Link&lt;/code&gt; HTTP response header field. You may notice that I include the &lt;code&gt;'unsafe-inline'&lt;/code&gt; keyword. This is because I directly alter inline styles using Material UI. Again, this is a potential vulnerability that you should avoid if you can. If using Google Fonts and/or Google Tag Manager, you should include these &lt;code&gt;fonts.googleapis.com &lt;a href="https://tagmanager.google.com"&gt;https://tagmanager.google.com&lt;/a&gt;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-src"&gt;&lt;code&gt;frame-src&lt;/code&gt;&lt;/a&gt; restricts the URLs that can be embedded on the site.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/form-action"&gt;&lt;code&gt;form-action&lt;/code&gt;&lt;/a&gt; restricts the URLs which the forms can submit to.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors"&gt;&lt;code&gt;frame-ancestors&lt;/code&gt;&lt;/a&gt; restricts the URLs that can embed the requested resource inside of &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt; elements. This directive does not fallback to default-src directive. If this is set, X-Frame-Options is ignored by user agents.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/upgrade-insecure-requests"&gt;&lt;code&gt;upgrade-insecure-requests&lt;/code&gt;&lt;/a&gt; instructs user agents to rewrite URL schemes, changing HTTP to HTTPS. This directive is for websites with large numbers of old URL's that need to be rewritten.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cookies"&gt;
  &lt;/a&gt;
  Cookies
&lt;/h4&gt;

&lt;p&gt;For FormBlob all cookies used are created on the API server for the purpose of session tracking, and I do not set any cookies on the frontend server hosting the website. However, if you do need to set cookies using Nginx, ensure that your cookies use the &lt;code&gt;Secure&lt;/code&gt; flag and set the appropriate &lt;code&gt;SameSite&lt;/code&gt; attribute. Session cookies should also have the &lt;code&gt;HttpOnly&lt;/code&gt; flag. Cookies should also have an expiration as soon as is necessary.&lt;/p&gt;

&lt;p&gt;For the &lt;code&gt;SameSite&lt;/code&gt; attribute, this is a direct quote from &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Strict means that the browser sends the cookie only for same-site requests, that is, requests originating from the same site that set the cookie. If a request originates from a URL different from the current one, no cookies with the SameSite=Strict attribute are sent.&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;br&gt;
Lax means that the cookie is not sent on cross-site requests, such as on requests to load images or frames, but is sent when a user is navigating to the origin site from an external site (for example, when following a link). This is the default behavior if the SameSite attribute is not specified.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Add a cookie with [name] and [value] that expires in 1 day (86400 seconds)&lt;/span&gt;
&lt;span class="c"&gt;# and restricted to formblob.com and its subdomains&lt;/span&gt;
add_header Set-Cookie &lt;span class="s2"&gt;"[name]=[value]; Max-Age=86400; Path=/; Domain=formblob.com HttpOnly; Secure"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#crossorigin-resource-sharing"&gt;
  &lt;/a&gt;
  Cross-origin Resource Sharing
&lt;/h4&gt;

&lt;p&gt;Cross-origin Resource Sharing (CORS) is not needed for most websites and FormBlob is no exception. This should not be set unless specifically needed.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#http-public-key-pinning"&gt;
  &lt;/a&gt;
  HTTP Public Key Pinning
&lt;/h4&gt;

&lt;p&gt;HTTP Public Key Pinning is only required for maximum risk sites. It is not recommended for most sites and you would probably not need it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#http-strict-transport-security"&gt;
  &lt;/a&gt;
  HTTP Strict Transport Security
&lt;/h4&gt;

&lt;p&gt;HTTP Strict Transport Security (HSTS) notifies user agents to only connect to a given site over HTTPS, even if the scheme chosen was HTTP. It works in tandem with HTTP to HTTPS redirects and should be set on response headers from the HTTPS request. The recommended setting is &lt;code&gt;Strict-Transport-Security: max-age=63072000; includeSubdomains&lt;/code&gt;. If the &lt;code&gt;includeSubdomains&lt;/code&gt; flag is present, all requests to subdomains will also be upgraded to HTTPS. Ensure that all subdomains can handle HTTPS traffic before including this flag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Only connect to this site and subdomains via HTTPS for the next two years&lt;/span&gt;
add_header Strict-Transport-Security &lt;span class="s2"&gt;"max-age=63072000; includeSubDomains; preload"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#https-redirection"&gt;
  &lt;/a&gt;
  HTTPS Redirection
&lt;/h4&gt;

&lt;p&gt;Sites that listen on port 80 should redirect to the same resource on HTTPS. Once the redirection has occurred, HSTS ensures that all future HTTP requests are instead sent directly to the secure site. The setting below redirects all HTTP traffic to the exact same resource on HTTPS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
  listen 80&lt;span class="p"&gt;;&lt;/span&gt;
  ...

  &lt;span class="k"&gt;return &lt;/span&gt;301 https://&lt;span class="nv"&gt;$host$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#referrer-policy"&gt;
  &lt;/a&gt;
  Referrer Policy
&lt;/h4&gt;

&lt;p&gt;There are four options for this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;no-referrer&lt;/code&gt;: never send the Referer header&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;same-origin&lt;/code&gt;: send referrer, but only on requests to the same origin&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;strict-origin&lt;/code&gt;: send referrer to all origins, but only the URL sans path (e.g. &lt;a href="https://example.com/"&gt;https://example.com/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;strict-origin-when-cross-origin&lt;/code&gt;: send full referrer on same origin, URL sans path on foreign origin&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By default, you would want to use &lt;code&gt;strict-origin-when-cross-origin&lt;/code&gt;. This protects user privacy on cross-origin requests but allows you to track users using analytics within your own site.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Only send the shortened referrer to a foreign origin, full referrer to a local host&lt;/span&gt;
add_header Referrer-Policy &lt;span class="s2"&gt;"strict-origin-when-cross-origin"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#subresource-integrity"&gt;
  &lt;/a&gt;
  Subresource Integrity
&lt;/h4&gt;

&lt;p&gt;Subresource integrity (SRI) protects against attackers modifying the contents of Javascript libraries hosted on content delivery networks (CDNs) in order to create vulnerabilities in websites that make use of that hosted library. SRI uses a hash of the library's content to verify that a library has not been changed. If it has, the website will refuse to load the library. &lt;a href="https://www.srihash.org/"&gt;Here's a good resource to generate SRI hashes&lt;/a&gt;. Below is an example of an embedded form from FormBlob using SRI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script
  &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/@jeremyling/form-renderer@0.4.16/dist/web.min.js"&lt;/span&gt;
  &lt;span class="na"&gt;integrity=&lt;/span&gt;&lt;span class="s"&gt;"sha512-27spyugyD2KOU0tPev6hnJ2bCeKPh5WpMzEWna4uXXCSlSQcFRDxAKZDfBhJ21lF0hyBbTD1KoOXmXJwKU5NHQ=="&lt;/span&gt;
  &lt;span class="na"&gt;crossorigin=&lt;/span&gt;&lt;span class="s"&gt;"anonymous"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#xcontenttypeoptions"&gt;
  &lt;/a&gt;
  X-Content-Type-Options
&lt;/h4&gt;

&lt;p&gt;X-Content-Type-Options is a header supported by Internet Explorer, Chrome and Firefox 50+ that tells user agents not to load scripts and stylesheets unless the server indicates the correct MIME type. Without this header, these browsers can incorrectly detect files as scripts and stylesheets, leading to XSS attacks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Prevent browsers from incorrectly detecting non-scripts as scripts&lt;/span&gt;
add_header X-Content-Type-Options &lt;span class="s2"&gt;"nosniff"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#xframeoptions"&gt;
  &lt;/a&gt;
  X-Frame-Options
&lt;/h4&gt;

&lt;p&gt;X-Frame-Options controls where your site may be framed within an iframe. This helps to prevent clickjacking, in which an attacker frames your site within a malicious platform that tricks users into clicking on links which the attacker has control over.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Only allow my site to frame itself&lt;/span&gt;
add_header X-Frame-Options &lt;span class="s2"&gt;"SAMEORIGIN"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#xxssprotection"&gt;
  &lt;/a&gt;
  X-XSS-Protection
&lt;/h4&gt;

&lt;p&gt;X-XSS-Protection is a feature of Internet Explorer and Chrome that stops pages from loading when they detect reflected XSS attacks. While a strong CSP may make this header redundant, it protects users on older browsers that do not support CSP.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Block pages from loading when they detect reflected XSS attacks&lt;/span&gt;
add_header X-Xss-Protection &lt;span class="s2"&gt;"1; mode=block"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#complete-nginxconf-configuration"&gt;
  &lt;/a&gt;
  Complete nginx.conf Configuration
&lt;/h3&gt;

&lt;p&gt;We have successfully gone through each of the tests and set up configurations to help us pass them. If you have followed along, you should receive at least an A grade with this setup. Here's a recap of the full configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
  listen 80&lt;span class="p"&gt;;&lt;/span&gt;
  ...

  &lt;span class="k"&gt;return &lt;/span&gt;301 https://&lt;span class="nv"&gt;$host$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

server &lt;span class="o"&gt;{&lt;/span&gt;
  listen 443:
  ...

  &lt;span class="c"&gt;# Only connect to this site and subdomains via HTTPS for the next two years&lt;/span&gt;
  add_header Strict-Transport-Security &lt;span class="s2"&gt;"max-age=63072000; includeSubDomains; preload"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Only allow my site to frame itself&lt;/span&gt;
  add_header X-Frame-Options &lt;span class="s2"&gt;"SAMEORIGIN"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Prevent browsers from incorrectly detecting non-scripts as scripts&lt;/span&gt;
  add_header X-Content-Type-Options &lt;span class="s2"&gt;"nosniff"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Block pages from loading when they detect reflected XSS attacks&lt;/span&gt;
  add_header X-Xss-Protection &lt;span class="s2"&gt;"1; mode=block"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Only send the shortened referrer to a foreign origin, full referrer to a local host&lt;/span&gt;
  add_header Referrer-Policy &lt;span class="s2"&gt;"strict-origin-when-cross-origin"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Configue CSP&lt;/span&gt;
  add_header Content-Security-Policy &lt;span class="s2"&gt;"default-src 'self' formblob.com *.formblob.com fblob.me *.fblob.me; connect-src 'self' formblob.com *.formblob.com wss://*.formblob.com fblob.me *.fblob.me https://sockjs-mt1.pusher.com firebase.googleapis.com firebaseinstallations.googleapis.com https://www.googleapis.com/webfonts/ www.google-analytics.com; font-src 'self' https://fonts.gstatic.com; img-src https: data: blob: www.googletagmanager.com https://ssl.gstatic.com https://www.gstatic.com; media-src https: data: blob:; script-src 'self' 'unsafe-eval' js.stripe.com https://www.googletagmanager.com https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/ 'sha256-TQ+edvHvrQ4+h8G+tZQdFsQSrUAeSfwE/D8KjAzDnT0='; style-src 'self' 'unsafe-inline' fonts.googleapis.com; frame-src 'self' formblob.com *.formblob.com fblob.me *.fblob.me js.stripe.com https://www.google.com/recaptcha/ https://recaptcha.google.com/recaptcha/; frame-ancestors 'self' formblob.com *.formblob.com fblob.me *.fblob.me;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  ...
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#concluding-remarks"&gt;
  &lt;/a&gt;
  Concluding Remarks
&lt;/h3&gt;

&lt;p&gt;With an A+ security grade, &lt;a href="https://formblob.com"&gt;FormBlob&lt;/a&gt; ranks as the most secure form building platform in the market. FormBlob respects data privacy and aims to ensure all data is secure from malicious attacks. We make an effort to meet and exceed all established security requirements. While not officially HIPAA or NIST certified due to how new we currently are, our infrastructure and security setup meet these requirements and we are confident of getting certified in the long run. Here are the Mozilla Observatory results of other popular form builders that we benchmark against.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X5fxWBJj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ugmruztm4tgf5x78a7kl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X5fxWBJj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ugmruztm4tgf5x78a7kl.jpg" alt="Benchmarks" width="880" height="571"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>security</category>
      <category>tutorial</category>
      <category>nginx</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Virtual interview tips to win any job</title>
      <author>Ryo Naruse</author>
      <pubDate>Mon, 08 Nov 2021 01:40:23 +0000</pubDate>
      <link>https://dev.to/ryy/virtual-interview-tips-to-win-any-job-2a3f</link>
      <guid>https://dev.to/ryy/virtual-interview-tips-to-win-any-job-2a3f</guid>
      <description>&lt;p&gt;You came to know your interview date. You are excited but are you not nervous? “What will ask, what will happen if I can’t answer, how to prepare myself” -- hundreds of such questions are swirling in your mind. &lt;/p&gt;

&lt;p&gt;Hmm, I understand. I can feel that. I used to feel the same way before the interview. But now I know the solution. &lt;/p&gt;

&lt;p&gt;No worries, my dear. Great virtual interview tips are waiting for you that you have never thought of before in this way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#virtual-interview-tips"&gt;
  &lt;/a&gt;
  Virtual interview tips:
&lt;/h2&gt;

&lt;p&gt;Copy my &lt;strong&gt;virtual interview&lt;/strong&gt; tips, and you will see the unbelievable result.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-are-you-focusing"&gt;
  &lt;/a&gt;
  Where are you focusing:
&lt;/h3&gt;

&lt;p&gt;Are you focusing on yourself? Do you want your interviewer to like you? Are you placing your attention on what you want to get from the position? If your answer is yes, -- you’ll feel worried, nervous, and a lot of fear. &lt;/p&gt;

&lt;p&gt;So, how to lessen your fear? Just pay attention to the interviewer’s needs and the organization’s goal. &lt;/p&gt;

&lt;p&gt;This simple technique can lessen your interview fear. Do you know why it is possible?&lt;/p&gt;

&lt;p&gt;Just because you have moved your attention to another external thing, it is essential to place your attention. It will determine how much fear you have. &lt;/p&gt;

&lt;p&gt;It would be best to focus on the hiring manager and organization’s needs when interviewing (before and during). Try to show your experiences that match those needs.&lt;/p&gt;

&lt;p&gt;Do not try to show your hiring manager that you are intelligent, great etc. All you need to do is focus on the company needs. &lt;/p&gt;

&lt;p&gt;This way, you can avoid fear from an interview.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#embrace-rejection"&gt;
  &lt;/a&gt;
  Embrace rejection:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Embrace rejection!&lt;/strong&gt; Why? You may think, what type of &lt;strong&gt;virtual interview tips&lt;/strong&gt; is this? &lt;/p&gt;

&lt;p&gt;The truth is rejection is part of success. Successful people know rejection is unavoidable. Think of it this way: you may be the sweetest man in this world, but some people do not like sweet.&lt;/p&gt;

&lt;p&gt;Yes, I know rejection can hurt you. The truth is it can be a possible outcome. &lt;br&gt;
If you have a solid mindset to embrace interview rejection, you will not be worried about the interview rejection (before and during). Cheers! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dress-is-important"&gt;
  &lt;/a&gt;
  Dress is important:
&lt;/h2&gt;

&lt;p&gt;Imagine, today, you have to face an in-person interview. What kind of clothes would you wear then? Formal dress. &lt;/p&gt;

&lt;p&gt;In the same way, you have to think in the case of a video interview. You have to get dressed as you would be for an in-person interview. &lt;/p&gt;

&lt;p&gt;If you don’t, your hiring manager may get the wrong message about your interest in the role.&lt;/p&gt;

&lt;p&gt;One more thing, please make sure your outfit looks good on camera. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recheck-your-tech"&gt;
  &lt;/a&gt;
  Recheck your tech:
&lt;/h2&gt;

&lt;p&gt;Dear reader,I have already given you three important &lt;strong&gt;virtual interview tips.&lt;/strong&gt;  I think you have found them essential.&lt;/p&gt;

&lt;p&gt;Want to read more? Are these tips beneficial? Okay then, please keep reading. &lt;/p&gt;

&lt;p&gt;Think, your video interview has been started. The hiring manager has asked you a question. You are going to answer. When you are answering, you see that your microphone is not working. &lt;/p&gt;

&lt;p&gt;Think about the situation. &lt;/p&gt;

&lt;p&gt;So, it is crucial to test your tech before any virtual interview. Make sure you can hear and be heard and see and be seen. &lt;/p&gt;

&lt;p&gt;So, recheck your setup before any interview. You can talk with your friend using the same platform (for example, zoom) that the organization will use for rechecking your tech set up ahead of your interview. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#set-up-your-frame"&gt;
  &lt;/a&gt;
  Set up your frame:
&lt;/h2&gt;

&lt;p&gt;Your background frame should be a room without a lot of distracting clutter. A blank wall can be an excellent decision for a background. &lt;/p&gt;

&lt;p&gt;----- Choose a calm area for your interview.&lt;/p&gt;

&lt;p&gt;----- Consider the natural light if possible. If not, then you can invest in ring light and place it behind the camera.&lt;/p&gt;

&lt;p&gt;Remember, a decent setup helps to grow a positive impression in the interviewer’s mind.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sitting-distance"&gt;
  &lt;/a&gt;
  Sitting distance:
&lt;/h2&gt;

&lt;p&gt;Maintain a standard distance from your computer to your sitting chair. You may ask me how you will understand the standard distance.&lt;/p&gt;

&lt;p&gt;Hmm, it’s a good question. But the answer is straightforward.&lt;/p&gt;

&lt;p&gt;Set your chair at such a distance from your computer that you are not looking too huge or too tiny on your screen. &lt;/p&gt;

&lt;p&gt;Please check that your shoulders and upper chest are visible and keep a bit of space on your computer screen above your head. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#eye-contact"&gt;
  &lt;/a&gt;
  Eye contact:
&lt;/h2&gt;

&lt;p&gt;Let’s imagine a scene. You are talking with a friend about an important matter. After a couple of minutes, you notice your friend is looking at your shoulders or somewhere else when talking with him.&lt;/p&gt;

&lt;p&gt;How do you feel if it happens? You will assume he is not listening to you or not paying attention to the matters. A negative impression will grow. &lt;/p&gt;

&lt;p&gt;The same will happen if you do so as a candidate during the interview. So, eye contact is a crucial part of the interview. The hiring manager will feel you are paying attention to him.&lt;/p&gt;

&lt;p&gt;Yes, actual eye contact is not possible in the case of a video interview. I agree with that, but you can look at your interviewer’s face. This is enough to feel them you are listening or engaged with what they are saying. &lt;/p&gt;

&lt;p&gt;Look at your camera in such a way during an interview that you do at the time of natural conversation. This is enough to show your seriousness to your employer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#practice-before-a-video-interview"&gt;
  &lt;/a&gt;
  Practice before a video interview:
&lt;/h2&gt;

&lt;p&gt;One point I forgot to write in this article (virtual interview tips to win any job”). Guess what it can be? That is nothing but a rehearsal. &lt;/p&gt;

&lt;p&gt;You may ask me, “Hey writer, is it a drama? Why do I need rehearsal before any interview?”&lt;/p&gt;

&lt;p&gt;Not a wrong question, but yes, it’s a drama. An interviewer not only judge your knowledge related to the post but also your behavior, your conversation style, your posture and gesture and more.&lt;/p&gt;

&lt;p&gt;How can your rehearsal be?&lt;/p&gt;

&lt;p&gt;Your career coach or an expert can take your interview as like an actual interview. Record this practice and find out the problems (if any) when you will watch that record. &lt;/p&gt;

&lt;p&gt;If you find, you look away from the camera often then solve it. If you find your posture is wrong, then make adjustments accordingly. &lt;/p&gt;

&lt;p&gt;That’s how you can prepare yourself before the actual interview. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#digital-handshake"&gt;
  &lt;/a&gt;
  Digital handshake:
&lt;/h2&gt;

&lt;p&gt;You may be not familiar with the word “digital handshake.” Before explaining, I need to say something. &lt;/p&gt;

&lt;p&gt;In the in-person interview, it’s possible to meet with the interviewer physically and shake hands. You can make small talk.&lt;/p&gt;

&lt;p&gt;But in the case of a video interview, this is not possible. So, try a digital handshake!  I mean, say “hello” and add a smile. This small step helps a lot to make a connection and translates warmth and openness. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-you-sound-is-vital"&gt;
  &lt;/a&gt;
  How you sound is vital:
&lt;/h2&gt;

&lt;p&gt;You may be surprised after reading this point. Is it one of the virtual interview tips? Yes, my dear. &lt;/p&gt;

&lt;p&gt;Maximum candidates are too much concerned with how they look in a video interview. &lt;/p&gt;

&lt;p&gt;Yes, looking formal is essential, but they forget about how they sound. How fast you speak, pause, and voice tone—all these things need to be practiced. Always try to speak clearly, but keep it natural. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#join-a-couple-of-minutes-early"&gt;
  &lt;/a&gt;
  Join a couple of minutes early:
&lt;/h2&gt;

&lt;p&gt;You know where your video interview will take place. Open that platform (Zoom, Google Meet etc.) 5 minutes beforehand. &lt;/p&gt;

&lt;p&gt;There are hundreds of interview software to check your shot. Use any of those before you fully enter the meeting for an interview. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;Dear reader, follow these virtual interview tips properly, and you will be far ahead of other candidates. Pay attention to your hiring manager’s needs, and grow a mentality to accept rejection. These two will help you to lessen your interview fear. Practice before the interview and record that practising video. If you need to improve anywhere, like posture, gesture etc., adjust accordingly. Recheck your hardware, such as microphone, camera, etc., and select a calm and quiet place for video interviews to avoid distraction.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#related-article"&gt;
  &lt;/a&gt;
  Related Article
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://remoteful.dev/blog/remote-work-mean-tips"&gt;What Does Remote Work Mean | 10 Tips for remote work for YOU&lt;/a&gt;&lt;/p&gt;

</description>
      <category>remote</category>
      <category>remotejobs</category>
      <category>jobs</category>
      <category>remotework</category>
    </item>
    <item>
      <title>my lua experience</title>
      <author>scoopydevy</author>
      <pubDate>Mon, 08 Nov 2021 01:39:46 +0000</pubDate>
      <link>https://dev.to/scoopydevy/my-lua-experience-5gm9</link>
      <guid>https://dev.to/scoopydevy/my-lua-experience-5gm9</guid>
      <description>&lt;p&gt;got to try the lua programming language and the love2d game framework for the first time... here are my thoughts...&lt;/p&gt;

&lt;p&gt;lua -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;its a cool lang&lt;/li&gt;
&lt;li&gt;the syntax is weird&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;love2d -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;its ez to implement things&lt;/li&gt;
&lt;li&gt;alot of open source stuff&lt;/li&gt;
&lt;li&gt;overall its a great game framework for beginners&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;my overall review is 8/10&lt;/p&gt;

&lt;p&gt;heres what i made: &lt;a href="https://github.com/scoopydevy/zelda-lua"&gt;https://github.com/scoopydevy/zelda-lua&lt;/a&gt;&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>gamedev</category>
      <category>github</category>
      <category>lua</category>
    </item>
    <item>
      <title>Bash script to make ECS Exec (aws ecs execute-command) useful</title>
      <author>yuki777</author>
      <pubDate>Mon, 08 Nov 2021 01:22:03 +0000</pubDate>
      <link>https://dev.to/yuki777/bash-script-to-make-ecs-exec-aws-ecs-execute-command-useful-1lba</link>
      <guid>https://dev.to/yuki777/bash-script-to-make-ecs-exec-aws-ecs-execute-command-useful-1lba</guid>
      <description>&lt;p&gt;Translated from &lt;a href="https://qiita.com/yuki777/items/e7bcb80e32eca355ddac"&gt;qiita.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#source"&gt;
  &lt;/a&gt;
  Source
&lt;/h2&gt;

&lt;p&gt;Bash script(&lt;a href="https://gist.github.com/yuki777/640cba3e0a68587c36165b8a87d25390"&gt;gist&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c"&gt;# Bash script to run ecs-exec on Amazon ECS Fargate containers.&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Usage: See --help.&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Installation: Download the script and `chmod u+x the script`.&lt;/span&gt;
&lt;span class="c"&gt;#  curl https://gist.githubusercontent.com/yuki777/640cba3e0a68587c36165b8a87d25390/raw/5bfa8242ba00ed336da76711d602e6df4f76a452/sssh -o sssh &amp;amp;&amp;amp; chmod u+x sssh&lt;/span&gt;
&lt;span class="c"&gt;#  ./sssh&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Prerequisites (validated)&lt;/span&gt;
&lt;span class="c"&gt;# - aws cli&lt;/span&gt;
&lt;span class="c"&gt;# - session-manager-plugin&lt;/span&gt;
&lt;span class="c"&gt;# - jq&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Special thanks to contributor&lt;/span&gt;
&lt;span class="c"&gt;# - leewc&lt;/span&gt;

&lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nt"&gt;-eu&lt;/span&gt;

selectProfile&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="c"&gt;# profile parameter not supplied.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nt"&gt;-z&lt;/span&gt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;+x&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="c"&gt;# only works with AWS CLIv2.&lt;/span&gt;
        &lt;span class="k"&gt;select &lt;/span&gt;selected &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;aws configure list-profiles&lt;span class="sb"&gt;`&lt;/span&gt;
        &lt;span class="k"&gt;do
            &lt;/span&gt;&lt;span class="nb"&gt;break
        &lt;/span&gt;&lt;span class="k"&gt;done
        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$selected&lt;/span&gt;
    &lt;span class="k"&gt;else
        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$profile&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

params&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;profileParam&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;regionParam&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

profileParam&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$profile&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &amp;amp;&amp;gt;/dev/null &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"--profile &lt;/span&gt;&lt;span class="nv"&gt;$profile&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

regionParam&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$region&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &amp;amp;&amp;gt;/dev/null &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"--region &lt;/span&gt;&lt;span class="nv"&gt;$region&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

selectCluster&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;select &lt;/span&gt;selected &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;aws ecs list-clusters &lt;span class="si"&gt;$(&lt;/span&gt;params&lt;span class="si"&gt;)&lt;/span&gt;|jq &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="s2"&gt;".clusterArns[]"&lt;/span&gt;|sort|cut &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s2"&gt;"/"&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; 2&lt;span class="si"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;do
        &lt;/span&gt;&lt;span class="nb"&gt;break
    &lt;/span&gt;&lt;span class="k"&gt;done
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$selected&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

selectService&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;select &lt;/span&gt;selected &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;aws ecs list-services &lt;span class="si"&gt;$(&lt;/span&gt;params&lt;span class="si"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;--cluster&lt;/span&gt; &lt;span class="nv"&gt;$cluster&lt;/span&gt;|jq &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="s2"&gt;".serviceArns[]"&lt;/span&gt;|sort&lt;span class="si"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;do
        &lt;/span&gt;&lt;span class="nb"&gt;break
    &lt;/span&gt;&lt;span class="k"&gt;done
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$selected&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

selectTask&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;select &lt;/span&gt;selected &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;aws ecs list-tasks &lt;span class="si"&gt;$(&lt;/span&gt;params&lt;span class="si"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;--cluster&lt;/span&gt; &lt;span class="nv"&gt;$cluster&lt;/span&gt; &lt;span class="nt"&gt;--service-name&lt;/span&gt; &lt;span class="nv"&gt;$service&lt;/span&gt; &lt;span class="nt"&gt;--desired-status&lt;/span&gt; RUNNING |jq &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="s1"&gt;'.taskArns[]'&lt;/span&gt;|sort&lt;span class="si"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;do
        &lt;/span&gt;&lt;span class="nb"&gt;break
    &lt;/span&gt;&lt;span class="k"&gt;done
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$selected&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

selectContainer&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;select &lt;/span&gt;selected &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;aws ecs describe-tasks &lt;span class="si"&gt;$(&lt;/span&gt;params&lt;span class="si"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;--cluster&lt;/span&gt; &lt;span class="nv"&gt;$cluster&lt;/span&gt; &lt;span class="nt"&gt;--tasks&lt;/span&gt; &lt;span class="nv"&gt;$task&lt;/span&gt; | jq &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="s2"&gt;".tasks[].containers[].name"&lt;/span&gt;|sort&lt;span class="si"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;do
        &lt;/span&gt;&lt;span class="nb"&gt;break
    &lt;/span&gt;&lt;span class="k"&gt;done
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$selected&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

colorEcho&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="nv"&gt;red&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'\033[0;31m'&lt;/span&gt;
    &lt;span class="nv"&gt;green&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'\033[0;32m'&lt;/span&gt;
    &lt;span class="nv"&gt;yellow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'\033[0;33m'&lt;/span&gt;
    &lt;span class="nv"&gt;reset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'\033[0m'&lt;/span&gt;

    &lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt; | egrep &lt;span class="nt"&gt;-q&lt;/span&gt; &lt;span class="s2"&gt;"prd|prod|production"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
        &lt;/span&gt;&lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$red&lt;/span&gt;
    &lt;span class="k"&gt;elif &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt; | egrep &lt;span class="nt"&gt;-q&lt;/span&gt; &lt;span class="s2"&gt;"stg|stage|staging|beta|devo"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
        &lt;/span&gt;&lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$yellow&lt;/span&gt;
    &lt;span class="k"&gt;else
        &lt;/span&gt;&lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$green&lt;/span&gt;
    &lt;span class="k"&gt;fi

    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;reset&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

echo_stderr&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
&lt;span class="o"&gt;}&lt;/span&gt;

die&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    echo_stderr &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="o"&gt;}&lt;/span&gt;

validatePrereq&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;command&lt;/span&gt; &lt;span class="nt"&gt;-v&lt;/span&gt; jq  &amp;amp;&amp;gt;/dev/null &lt;span class="o"&gt;||&lt;/span&gt; die &lt;span class="s2"&gt;"jq not installed on host. Please install jq. See https://stedolan.github.io/jq/download/"&lt;/span&gt;
    &lt;span class="nb"&gt;command&lt;/span&gt; &lt;span class="nt"&gt;-v&lt;/span&gt; session-manager-plugin &amp;amp;&amp;gt;/dev/null &lt;span class="o"&gt;||&lt;/span&gt; die &lt;span class="s2"&gt;"session-manager-plugin not installed. See https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html"&lt;/span&gt;
    &lt;span class="nb"&gt;command&lt;/span&gt; &lt;span class="nt"&gt;-v&lt;/span&gt; aws &amp;amp;&amp;gt;/dev/null &lt;span class="o"&gt;||&lt;/span&gt; die &lt;span class="s2"&gt;"AWS CLI not found, AWS CLI version 1.16.12 or later must be installed. See https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html"&lt;/span&gt;
    &lt;span class="c"&gt;# Checks if AWS CLI is outdated or not., v1 of AWS CLI pipes to std error, redirect&lt;/span&gt;
    &lt;span class="nv"&gt;AWS_CLI_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;aws &lt;span class="nt"&gt;--version&lt;/span&gt; 2&amp;gt;&amp;amp;1 | &lt;span class="nb"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;'{ print $1 }'&lt;/span&gt; | &lt;span class="nb"&gt;cut&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt;/ &lt;span class="nt"&gt;-f2&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;
    echo_stderr &lt;span class="s2"&gt;"You have AWS CLI v&lt;/span&gt;&lt;span class="nv"&gt;$AWS_CLI_VERSION&lt;/span&gt;&lt;span class="s2"&gt; installed."&lt;/span&gt;
    &lt;span class="c"&gt;# Do a best effort check for v1 (so that it's at least 1.10 and up.&lt;/span&gt;
    &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$AWS_CLI_VERSION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ ^1.1[0-9] &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$AWS_CLI_VERSION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ ^2 &lt;span class="o"&gt;]]&lt;/span&gt; &amp;amp;&amp;gt;/dev/null &lt;span class="o"&gt;||&lt;/span&gt; die &lt;span class="s2"&gt;"AWS CLI version 1.16.12 or later must be installed to support ecs-exec, Run 'aws --version' to see what you have. See https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function &lt;/span&gt;print_help&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;amp;2 &lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span class="no"&gt;END&lt;/span&gt;&lt;span class="sh"&gt;

This script simplifies the process of getting the required information to drop into an
interactive shell script on your container hosted on Fargate/ECS.

Example:

./sssh --region us-west-2
./sssh --profile default

Supported input parameters:
 -r | --region  : AWS Region to fetch the cluster, service, task
 -p | --profile : AWS Profile for credentials and region.
 -c | --command : Command to execute, defaults to '/bin/sh'/

The default command executed on the selected container is '/bin/sh'.
If a region is not provided, the script will attempt to use your region set in the profile.
If you want to execute a different command or shell, you can pass it in like so:

./sssh --command '/bin/bash'

You need active (unexpired) AWS credentials, otherwise, the script will crash.

Updates on https://gist.githubusercontent.com/leewc/e4c3a16551b06c2b0b4640fa5a3d9c00
&lt;/span&gt;&lt;span class="no"&gt;
END
&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;

main&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'/bin/sh'&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;"$#"&lt;/span&gt; &lt;span class="nt"&gt;-gt&lt;/span&gt; 0 &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do
        case&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
            &lt;span class="nt"&gt;-h&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;--help&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                print_help
                &lt;span class="nb"&gt;exit&lt;/span&gt;
                &lt;span class="p"&gt;;;&lt;/span&gt;
            &lt;span class="nt"&gt;-r&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;--region&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nb"&gt;shift
                &lt;/span&gt;&lt;span class="nv"&gt;region&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;:?Region&lt;span class="p"&gt; must be specified in --region&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
                &lt;span class="nb"&gt;shift&lt;/span&gt;
                &lt;span class="p"&gt;;;&lt;/span&gt;
            &lt;span class="nt"&gt;-p&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;--profile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nb"&gt;shift
                &lt;/span&gt;&lt;span class="nv"&gt;profile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;:?Profile&lt;span class="p"&gt; must be specified in --profile&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
                &lt;span class="nb"&gt;shift&lt;/span&gt;
                &lt;span class="p"&gt;;;&lt;/span&gt;
            &lt;span class="nt"&gt;-c&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;--command&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nb"&gt;shift
                command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;:?Command&lt;span class="p"&gt; must be specified in --command&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
                &lt;span class="nb"&gt;shift&lt;/span&gt;
                &lt;span class="p"&gt;;;&lt;/span&gt;
            &lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                die &lt;span class="s2"&gt;"Unknown param &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
                &lt;span class="p"&gt;;;&lt;/span&gt;
        &lt;span class="k"&gt;esac&lt;/span&gt;
    &lt;span class="k"&gt;done

    &lt;/span&gt;echo_stderr &lt;span class="s2"&gt;"Validating pre-requisites...."&lt;/span&gt;
    validatePrereq

    &lt;span class="c"&gt;# spaces matter :)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$AWS_CLI_VERSION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ ^2 &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
        &lt;/span&gt;echo_stderr &lt;span class="s2"&gt;"Select AWS Profile."&lt;/span&gt;
        &lt;span class="nv"&gt;profile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;selectProfile&lt;span class="sb"&gt;`&lt;/span&gt;
        colorEcho profile: &lt;span class="nv"&gt;$profile&lt;/span&gt;
    &lt;span class="k"&gt;else &lt;/span&gt;echo_stderr &lt;span class="s2"&gt;"[INFO] AWS CLI is not v2, unable to select profile. --region or --profile must be set."&lt;/span&gt;
    &lt;span class="k"&gt;fi
    &lt;/span&gt;echo_stderr

    echo_stderr &lt;span class="s2"&gt;"Select cluster."&lt;/span&gt;
    &lt;span class="nv"&gt;cluster&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;selectCluster&lt;span class="sb"&gt;`&lt;/span&gt;
    colorEcho cluster: &lt;span class="nv"&gt;$cluster&lt;/span&gt;
    echo_stderr

    echo_stderr &lt;span class="s2"&gt;"Select service."&lt;/span&gt;
    &lt;span class="nv"&gt;service&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;selectService&lt;span class="sb"&gt;`&lt;/span&gt;
    colorEcho service: &lt;span class="nv"&gt;$service&lt;/span&gt;
    echo_stderr

    echo_stderr &lt;span class="s2"&gt;"Select task."&lt;/span&gt;
    &lt;span class="nv"&gt;task&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;selectTask&lt;span class="sb"&gt;`&lt;/span&gt;
    colorEcho task: &lt;span class="nv"&gt;$task&lt;/span&gt;
    echo_stderr

    echo_stderr &lt;span class="s2"&gt;"Select container."&lt;/span&gt;
    &lt;span class="nv"&gt;container&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;selectContainer&lt;span class="sb"&gt;`&lt;/span&gt;
    colorEcho container: &lt;span class="nv"&gt;$container&lt;/span&gt;
    echo_stderr

    echo_stderr &lt;span class="s2"&gt;"Executing command (you might have to upgrade your AWS CLI if this fails)"&lt;/span&gt;
    &lt;span class="nv"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"aws ecs execute-command &lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;params&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; --cluster &lt;/span&gt;&lt;span class="nv"&gt;$cluster&lt;/span&gt;&lt;span class="s2"&gt; --container &lt;/span&gt;&lt;span class="nv"&gt;$container&lt;/span&gt;&lt;span class="s2"&gt; --task &lt;/span&gt;&lt;span class="nv"&gt;$task&lt;/span&gt;&lt;span class="s2"&gt; --interactive --command '&lt;/span&gt;&lt;span class="nv"&gt;$command&lt;/span&gt;&lt;span class="s2"&gt;'"&lt;/span&gt;
    colorEcho &lt;span class="nv"&gt;$cmd&lt;/span&gt;

    &lt;span class="nv"&gt;$cmd&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Execute main function and pass all params over&lt;/span&gt;
main &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Download it, save it any name you like, `chmod` it.&lt;/span&gt;
curl https://gist.githubusercontent.com/yuki777/640cba3e0a68587c36165b8a87d25390/raw/5bfa8242ba00ed336da76711d602e6df4f76a452/sssh &lt;span class="nt"&gt;-o&lt;/span&gt; sssh
&lt;span class="nb"&gt;chmod &lt;/span&gt;744 sssh
./sssh

&lt;span class="c"&gt;# Select aws profile from `aws configure list-profiles`&lt;/span&gt;
Select aws profile.
1&lt;span class="o"&gt;)&lt;/span&gt; default
2&lt;span class="o"&gt;)&lt;/span&gt; foo-bar
&lt;span class="c"&gt;#? 2&lt;/span&gt;
profile: foo-bar

&lt;span class="c"&gt;# Select cluster from `aws ecs list-clusters`&lt;/span&gt;
Select cluster.
1&lt;span class="o"&gt;)&lt;/span&gt; dev-foo-bar-cluster          9&lt;span class="o"&gt;)&lt;/span&gt; prod-foo-app-cluster
2&lt;span class="o"&gt;)&lt;/span&gt; prd-foo-hoge-ad-cluster      10&lt;span class="o"&gt;)&lt;/span&gt; stg-foo-app-cluster
3&lt;span class="o"&gt;)&lt;/span&gt; prd-foo-hoge-cluster         11&lt;span class="o"&gt;)&lt;/span&gt; stg-foo-hoge-cluster
4&lt;span class="o"&gt;)&lt;/span&gt; prd-foo-piyo2021-ad-cluster  12&lt;span class="o"&gt;)&lt;/span&gt; stg-foo-piyo2021-cluster
5&lt;span class="o"&gt;)&lt;/span&gt; prd-foo-piyo2021-cluster     13&lt;span class="o"&gt;)&lt;/span&gt; stg-foo-bar-cluster
6&lt;span class="o"&gt;)&lt;/span&gt; prd-foo-bar-ad-cluster       14&lt;span class="o"&gt;)&lt;/span&gt; stg-foo-tags-cluster
7&lt;span class="o"&gt;)&lt;/span&gt; prd-foo-bar-cluster          15&lt;span class="o"&gt;)&lt;/span&gt; hoge-foo-bar-cluster
8&lt;span class="o"&gt;)&lt;/span&gt; prd-foo-tags-cluster
&lt;span class="c"&gt;#? 1&lt;/span&gt;
cluster: dev-foo-bar-cluster

&lt;span class="c"&gt;# Select service from `aws ecs list-services`&lt;/span&gt;
 1&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1125-service
 2&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1206-service
 3&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1249-service
 4&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1275-service
 5&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1323-service
 6&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1348-service
 7&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1349-service
 8&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1384-service
 9&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1386-service
10&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1391-service
11&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1397-service
12&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1399-service
13&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1412-service
14&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1413-service
15&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1419-service
16&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-qa-1420-service
17&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-service
&lt;span class="c"&gt;#? 16&lt;/span&gt;
service: arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:service/dev-foo-bar-cluster/dev-foo-bar-qa-1420-service

&lt;span class="c"&gt;# Select task from `aws ecs list-tasks`&lt;/span&gt;
1&lt;span class="o"&gt;)&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:task/dev-foo-bar-cluster/&lt;span class="k"&gt;********************************&lt;/span&gt;
&lt;span class="c"&gt;#? 1&lt;/span&gt;
task: arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:task/dev-foo-bar-cluster/&lt;span class="k"&gt;********************************&lt;/span&gt;

&lt;span class="c"&gt;# Select container from `aws ecs describe-tasks`&lt;/span&gt;
1&lt;span class="o"&gt;)&lt;/span&gt; container-foo
2&lt;span class="o"&gt;)&lt;/span&gt; container-bar
3&lt;span class="o"&gt;)&lt;/span&gt; container-hoge
4&lt;span class="o"&gt;)&lt;/span&gt; container-piyo
&lt;span class="c"&gt;#? 1&lt;/span&gt;
container: container-foo

&lt;span class="c"&gt;# Show command&lt;/span&gt;
aws ecs execute-command &lt;span class="nt"&gt;--profile&lt;/span&gt; foo-bar &lt;span class="nt"&gt;--cluster&lt;/span&gt; dev-foo-bar-cluster &lt;span class="nt"&gt;--container&lt;/span&gt; container-foo &lt;span class="nt"&gt;--task&lt;/span&gt; arn:aws:ecs:ap-northeast-1:&lt;span class="k"&gt;************&lt;/span&gt;:task/dev-foo-bar-cluster/&lt;span class="k"&gt;********************************&lt;/span&gt; &lt;span class="nt"&gt;--interactive&lt;/span&gt; &lt;span class="nt"&gt;--command&lt;/span&gt; &lt;span class="s1"&gt;'/bin/sh'&lt;/span&gt;

The Session Manager plugin was installed successfully. Use the AWS CLI to start a session.

&lt;span class="c"&gt;# Start your session and run command from `aws ecs execute-command`&lt;/span&gt;
Starting session with SessionId: ecs-execute-command-&lt;span class="k"&gt;*****************&lt;/span&gt;
/path/to/home &lt;span class="c"&gt;# :)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>What were your favourite GitHub Universe moments? Here's mine</title>
      <author>Michelle Mannering</author>
      <pubDate>Mon, 08 Nov 2021 01:19:09 +0000</pubDate>
      <link>https://dev.to/github/what-were-your-favourite-github-universe-moments-heres-mine-25fi</link>
      <guid>https://dev.to/github/what-were-your-favourite-github-universe-moments-heres-mine-25fi</guid>
      <description>&lt;p&gt;GitHub Universe is now finished. What were your favourite moments? If you missed our post on all things Universe, check it out.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/github" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pM6fmKzZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7fGFlBNG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2575/3da37f64-b46e-4fa5-bf86-01b63ba5f57b.png" alt="GitHub" width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Rph_F4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ak56TdXS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/397557/4eb4ece3-2832-407c-b933-f1b4b58829e6.jpg" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/github/what-you-missed-at-github-universe-the-latest-feature-announcements-190l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What you missed at GitHub Universe, the latest feature announcements&lt;/h2&gt;
      &lt;h3&gt;Michelle Mannering for GitHub ・ Oct 29 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#product&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;If you haven't already, read all the cool announcements we made, and let us know your favourites. We had our &lt;a href="https://www.twitch.tv/videos/1189130769"&gt;APAC Watch parties&lt;/a&gt; and we loved all the things we saw.&lt;/p&gt;

&lt;p&gt;Here's my top announcements, as well as a few other awesome moments from GitHub Universe.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#codespaces"&gt;
  &lt;/a&gt;
  Codespaces
&lt;/h2&gt;

&lt;p&gt;I love the fact anyone can open Codespaces on their computer, laptop, iPad, phone, even a Tesla, and deploy fixes. I can do this anytime, anywhere in the world (as long as I have an internet connection). All my dependencies are added, and I can still use my VS Code settings. This has been a game changer for our team who works all over the world.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sX1KpLZM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FDILcrGX0AcnAqc.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8p_8E6Z1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1410632439370641409/Pt-7RucE_normal.jpg" alt="Visual Studio Code profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Visual Studio Code
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @code
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Check out what's new with Codespaces and how to more easily set it up for you and your team in this video from @GitHub Universe–with @2percentsilk and &lt;a href="https://twitter.com/notbaileybrooks"&gt;@notbaileybrooks&lt;/a&gt;&lt;br&gt;Watch now 👉 &lt;a href="https://t.co/c4DbxQ4S3P"&gt;youtube.com/watch?v=X9Z-rU…&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:20 PM - 01 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1455238220237754374" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1455238220237754374" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1455238220237754374" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#copilot"&gt;
  &lt;/a&gt;
  Copilot
&lt;/h2&gt;

&lt;p&gt;GitHub Copilot has been an incredible asset in my coding journey. Copilot makes suggestions to my code on what I should include next, and even helps me write whole functions. It's super useful when starting out, or, if you're like me, and still learning along the way.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8JjVNFc2kK4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-github-issues"&gt;
  &lt;/a&gt;
  New GitHub Issues
&lt;/h2&gt;

&lt;p&gt;We've been using the new GitHub Issues for a while and they have been amazing. It's been great using the new project boards and tables, and being able to convert tasks to Issues. We've been tracking project ideas and building lists of things we might like to do in future. Once we're ready to put a list item into action, we convert it into an Issue and we're off planning.&lt;/p&gt;

&lt;p&gt;It's definitely a game changer for project planning!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ha1KHcPMAEk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-discussions"&gt;
  &lt;/a&gt;
  GitHub Discussions
&lt;/h2&gt;

&lt;p&gt;Discussions are a loved feature among the community. Maintainers use them to connect to their contributors, and many others use Discussions to collect ideas. The new features added to Discussions such as labels and announcements is something we've been using on a number of our repos. I can't wait until polls are implemented! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#papercuts"&gt;
  &lt;/a&gt;
  Papercuts
&lt;/h2&gt;

&lt;p&gt;There's never a GitHub Universe without announcing several changes to help make all our lives easier. The new table of contents to help navigate markdown files makes my life a whole lot better. I'm always looking at READMEs, and being able to navigate them easily is so useful.&lt;/p&gt;

&lt;p&gt;Being able to copy large pieces of code is perfect when looking through tutorials. And navigating the GitHub web got a whole lot easier with the Command Palette. I'll be pressing CTRL+K (yes I use Windows) all the time now!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-goodies-from-universe"&gt;
  &lt;/a&gt;
  Other Goodies from Universe
&lt;/h2&gt;

&lt;p&gt;It wouldn't be a GitHub Universe without a few other goodies. Whilst these aren't major feature announcements, these are all amazing things happening in the developer community and relevant to developers. Here's my favourites.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devops"&gt;
  &lt;/a&gt;
  DevOps
&lt;/h3&gt;

&lt;p&gt;This &lt;em&gt;What is DevOps&lt;/em&gt; video by &lt;a href="https://twitter.com/editingemily"&gt;Emily Freeman&lt;/a&gt; is epic! There's a lot of Easter eggs in this one, plus quirky analogies. This video (shown on Day 2 of Universe) certainly gave us a lot of laughs.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/kBV8gPVZNEE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-depends"&gt;
  &lt;/a&gt;
  It Depends
&lt;/h3&gt;

&lt;p&gt;One of our GitHub Stars, &lt;a href="https://twitter.com/cassidoo"&gt;Cassidy Williams&lt;/a&gt;, did an awesome video for Universe. She went back in time and spoke to her younger self. The catch, "it depends". Sadly (or luckily), most things in life 'depend' on something else. This funny and loveable interaction had us all laughing, and resonating!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aMWh2uLO9OM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Fun fact, this one was filmed in one of the meeting rooms at GitHub. Yes, this is an actual room which exists... for meetings!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#djs-and-coding"&gt;
  &lt;/a&gt;
  DJs and coding
&lt;/h3&gt;

&lt;p&gt;At our last two Universe events, we've been lucky enough to have live performances from some DJ-coding extraordinaires. This year was no different. We had some amazing music produced for all our entertainment. Check out one of these awesome sets by DJ Dave.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/JDxhkdm_t1U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-universe"&gt;
  &lt;/a&gt;
  GitHub Universe
&lt;/h2&gt;

&lt;p&gt;You'll find plenty more videos, cuts, and the full Universe live streams on our &lt;a href="https://www.youtube.com/channel/UC7c3Kb6jYCRj4JOHHZTxKsQ"&gt;GitHub YouTube channel&lt;/a&gt;. There are more being added, so make sure you like and subscribe so you don't miss out.&lt;/p&gt;

&lt;p&gt;What was your favourite Universe moment or feature announcement?&lt;/p&gt;

</description>
      <category>event</category>
      <category>github</category>
      <category>devops</category>
    </item>
    <item>
      <title>Contemplating Life</title>
      <author>Kern Designs</author>
      <pubDate>Mon, 08 Nov 2021 01:18:30 +0000</pubDate>
      <link>https://dev.to/kerndesigns/contemplating-life-3k28</link>
      <guid>https://dev.to/kerndesigns/contemplating-life-3k28</guid>
      <description>&lt;p&gt;At some point you have to stop what you're doing and think about your life. This is something I like to do daily. What is my future? What do I want to do? Who do I want to work for? Do I want to work for anyone? The answer to these questions is that I don't have an answer, but that's okay. My future could be a lot of things.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#development"&gt;
  &lt;/a&gt;
  Development
&lt;/h1&gt;

&lt;p&gt;One of my current front runners is working as a front end developer. My goal is to find a job where I can change lives through building a useful website. What does that mean? I would like to build usable websites. I want to improve lives. I envision my life working on an app or website to make the world a better place. And yes I recognize how cheesy that sounds.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-the-app"&gt;
  &lt;/a&gt;
  What is the App
&lt;/h1&gt;

&lt;p&gt;Most industry jobs may pay well, but will they really help the world? What kind of website does this and how do I find it? I would love to help people by teaching them things that they cannot learn easily for free. Khan Academy started with a guy tutoring his niece on YouTube. Personally I have really enjoyed the tutorial videos I have made. If money were not a problem that seems like a great way to make an impact on people. &lt;/p&gt;

&lt;p&gt;By making tutorial videos I can share my skills. I can explain technology to people who want to learn. This can manifest itself through a YouTube channel, a website, or even an app. &lt;/p&gt;

&lt;p&gt;Overall I have no idea what I want to do, but that's the beauty of life. I have years to make decisions and change them and do it all over again. Nobody gets it right the first time around.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Top 10 Smart Contract &amp; Solidity Developer Learning Resources </title>
      <author>Patrick Collins</author>
      <pubDate>Mon, 08 Nov 2021 01:04:39 +0000</pubDate>
      <link>https://dev.to/patrickalphac/top-10-smart-contract-solidity-developer-learning-resources-46db</link>
      <guid>https://dev.to/patrickalphac/top-10-smart-contract-solidity-developer-learning-resources-46db</guid>
      <description>&lt;p&gt;Learning to &lt;a href="https://betterprogramming.pub/how-to-become-a-blockchain-engineer-fa4386a0504f"&gt;become a Smart Contract and Blockchain Developer&lt;/a&gt; can seem like a daunting task, but it doesn't have to be!&lt;/p&gt;

&lt;p&gt;Just set aside some time each week, and get cracking on any of the tutorials and pieces of content below. Don't be afraid to ask a ton of questions, and don't feel imposter syndrome! Just by reading this article, you are already a welcomed member of the blockchain community. &lt;/p&gt;

&lt;p&gt;If anytime you get stuck, feel free to refer to &lt;a href="https://docs.chain.link/docs/getting-help/"&gt;this document&lt;/a&gt; on how to get unstuck in the blockchain space. It applies to everything in open source!&lt;/p&gt;

&lt;p&gt;In any case, let's go ahead and get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-solidity-blockchain-and-smart-contract-course-beginner-to-expert-python-tutorial"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://www.youtube.com/watch?v=M576WGiDBdQ"&gt;Solidity, Blockchain, and Smart Contract Course – Beginner to Expert Python Tutorial&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/M576WGiDBdQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Now I'm a bit biased here, since I made this course! But I must say, it has everything you need. It goes through all the basics at the start, and then gets deeper and deeper into more and more advanced concepts like upgradeability, efficient testing, full stack development, and more. It's a project based learning resource, so at the end of each "lesson", you'll have a full project you can show off on your GitHub!&lt;/p&gt;

&lt;p&gt;Ideally it's for engineers who have a little bit of python in their back pocket, but &lt;a href="https://www.youtube.com/watch?v=rfscVS0vtbw"&gt;freecodecamp has a remedy for that&lt;/a&gt; as well! &lt;/p&gt;

&lt;p&gt;A lot of information is packed into this course, so don't do it all in one go! Remember to take breaks, and jump into the &lt;a href="https://github.com/smartcontractkit/full-blockchain-solidity-course-py"&gt;GitHub discussions&lt;/a&gt; and ask questions, or on Stack Overflow! This is easily one of, if not the most dense blockchain tutorial on the planet. &lt;/p&gt;

&lt;p&gt;Oh, and I have a javascript version on the distant horizon. Be sure to follow me on &lt;a href="https://twitter.com/PatrickAlphaC"&gt;Twitter&lt;/a&gt; and &lt;a href="https://medium.com/@patrick.collins_58673"&gt;Medium&lt;/a&gt; for updates!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-cryptozombies"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://cryptozombies.io/"&gt;Cryptozombies&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cryptozombies.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bxFmQJfS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yntxcg2yqgskf21bh10p.png" alt="Cryptozombies" width="880" height="567"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the longest time, Cryptozombies has been one of the go-to courses for learning blockchain &amp;amp; solidity. This gamified platform brings you step by step through solidity programming as you build your zombie army!&lt;/p&gt;

&lt;p&gt;This course has a wonderful user interface that's fun for people of any age, and is one of the most approachable content on this list. The Cryptozombies team does a tremendous job showing NFTs, inheritance, and everything you'd need in basic solidity. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-dapp-university"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.youtube.com/watch?v=XLahq4qyors"&gt;Dapp University&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/XLahq4qyors"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;YouTube university strikes again! Gregory has been making top quality content in the blockchain space for years now, and continues to do so. With a focus on both solidity / smart contracts and full stack development, taking his videos and his more hands-on bootcamp will for sure turn you into a "blockchain master". &lt;/p&gt;

&lt;p&gt;He has tons of videos on his youtube that can help you learn just about anything in this space, as well as a paid for bootcamp with him and his team. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-chainshot"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://www.chainshot.com/courses"&gt;Chainshot&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.chainshot.com/courses"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yRwsD_Po--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ndmnx3w8xgm8b7ja8pvl.png" alt="Chainshot Website Homepage" width="880" height="585"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chainshot has everything you need, javascript tutorials, solidity tutorials, DeFi tutorials with &lt;a href="https://aave.com/"&gt;Aave&lt;/a&gt; and one of the best bootcamps this space has ever seen. &lt;/p&gt;

&lt;p&gt;Not only does Chainshot have self-paced courses, but they also have an on-hands bootcamp. Bootcamps are important for people who want to have that hands-on guided learning, and can be the difference in having "it all make sense". I highly recommend checking out their bootcamps if you want to take it another step. This team is incredibly knowledgeable about this space, and are an incredibly talented team at teaching people how to get their careers going in the blockchain world. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-consensys-bootcamp"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://consensys.net/academy/bootcamp/"&gt;Consensys Bootcamp&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://consensys.net/academy/bootcamp/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jrVfT1EU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9q46322og0w2kcug6k67.png" alt="Consensys Bootcamp Webpage" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is another bootcamp that just always knocks it out of the park. &lt;/p&gt;

&lt;p&gt;The Consensys team is one of the teams that has been around from basically the start of this whole thing. They consistently deliver on bringing in some of the best in the space to give guest lectures to the students, have top quality content, and are another bootcamp that I highly recommend to anyone looking to get into this space with a hands-on learning approach, and a team to guide them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-ivan-on-tech-moralis"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://www.youtube.com/channel/UCgWS9Q3P5AxCWyQLT2kQhBw"&gt;Ivan On Tech / Moralis&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/txHnWDRB728"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCrYmtJBtLdtm2ov84ulV-yg"&gt;Ivan on Tech&lt;/a&gt; and his team at &lt;a href="https://moralis.io/"&gt;Moralis&lt;/a&gt; have just about everything.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://academy.moralis.io/"&gt;Moralis Academy&lt;/a&gt; | Blockchain courses&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://moralis.io/"&gt;Moralis&lt;/a&gt; | A tool designed for end-to-end Dapp building&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCgWS9Q3P5AxCWyQLT2kQhBw"&gt;YouTube Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Moralis team helps engineers do and learn everything under the sun when it comes to full stack development in blockchain. The focus a little less on the solidity and smart contract implementations, but they focus a lot on user experience so once you build your smart contracts, others can interact with them. Moralis is a must know tool for people looking to do anything in the blockchain space for full stack.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-ethernaut"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://ethernaut.openzeppelin.com/"&gt;Ethernaut&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ethernaut.openzeppelin.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1VGian2J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9g2jscu08ooydg5f1or.png" alt="Ethernaut Home Page" width="880" height="566"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the harder pieces in this space is Ethernaut. You need a little bit of a javascript background, but trudging your way through this course will teach you a lot of the ins and outs and "gotchas" of solidity, and is one of the quickest ways to become "advanced" in the ways of solidity. &lt;/p&gt;

&lt;p&gt;This was created by the &lt;a href="https://openzeppelin.com/"&gt;Openzeppelin&lt;/a&gt; team, who are top auditors and security researchers in the blockchain space, and they make contracts for people to fork into their own projects. Anyone in the blockchain space worth their "salt" knows who Openzeppelin is and how to work with their tools!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-the-ethereum-org-list"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://ethereum.org/en/developers/learning-tools/"&gt;The Ethereum Org List&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ethereum.org/en/developers/learning-tools/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Et_CK5j3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pandr9ci7fz3kkwdtmzq.png" alt="Ethereum Org Site" width="880" height="943"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What better way to learn about web3 and Ethereum than from the community itself! &lt;/p&gt;

&lt;p&gt;The Ethereum org website is JAM packed with content, tutorials, and submissions from around the globe, in exactly the manner you'd expect. You can find just about anything here to &lt;a href="https://ethereum.org/en/developers/tutorials/"&gt;learn and grow&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-useweb3"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://www.useweb3.xyz/"&gt;useWeb3&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.useweb3.xyz/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E1am5msz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqsioftnx9v1pt4ej77f.png" alt="useWeb3 Homepage" width="880" height="577"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;useWeb3, like the Ethereum org website, is dedicated to being a living document of updated courses and content to teach people how to build in the blockchain space. &lt;/p&gt;

&lt;p&gt;This open sourced project is constantly updated, and really any of the projects listed on their site is worthwhile for you to check and and put to the test!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-there-are-so-many"&gt;
  &lt;/a&gt;
  10. There are so many!!
&lt;/h2&gt;

&lt;p&gt;Ok, so I fibbed, this article has way more than just 10!!! Here is a list of tons of different places you can get started learning solidity, smart contracts, and blockchain. It doesn't matter where you go, just pick one, and go!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://eattheblocks.com/"&gt;EatTheBlocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chain.link/bootcamp"&gt;Chainlink Bootcamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/channel/UCn-3f8tw_E1jZvhuHatROwA"&gt;Patrick Collins&lt;/a&gt; (That's me!)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/austingriffith"&gt;Austin Griffith&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/boyindasouth"&gt;Nader Dabit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://buildspace.so/"&gt;Buildspace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learnxinyminutes.com/docs/solidity/"&gt;Learn X in Y Minutes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://remix.ethereum.org/"&gt;Remix with Learn ETH Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And so much more.&lt;/p&gt;

&lt;p&gt;Well, as always, be sure to follow me on &lt;a href="https://twitter.com/PatrickAlphaC"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UCn-3f8tw_E1jZvhuHatROwA"&gt;YouTube&lt;/a&gt;, &lt;a href="https://medium.com/@patrick.collins_58673"&gt;Medium&lt;/a&gt;, and &lt;a href="https://github.com/PatrickAlphaC"&gt;GitHub&lt;/a&gt;, and I hope to see you in the community!&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>programming</category>
      <category>solidity</category>
      <category>beginners</category>
    </item>
    <item>
      <title>100 días de código: 4 y 5, a veces los días son mas ocupados de lo que crees.</title>
      <author>Daro</author>
      <pubDate>Mon, 08 Nov 2021 00:49:39 +0000</pubDate>
      <link>https://dev.to/darito/100-dias-de-codigo-4-y-5-a-veces-los-dias-son-mas-ocupados-de-lo-que-crees-4go3</link>
      <guid>https://dev.to/darito/100-dias-de-codigo-4-y-5-a-veces-los-dias-son-mas-ocupados-de-lo-que-crees-4go3</guid>
      <description>&lt;p&gt;¡Hey hey hey!&lt;/p&gt;

&lt;p&gt;Bienvenidos a este nuevo blog despues de haberme saltado un día, he descubierto que a veces tengo el día demasiado ocupado. Apenas me pude permitir 4 horas de mi tiempo para codificar en estos dos días!!!! y eso para mi es una tragedia ya que es mi actividad favorita. &lt;/p&gt;

&lt;p&gt;Ahora volvamos al pasado para contarles el día de ayer...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XkUj2mWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pg630sftmqoxayma6ylt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XkUj2mWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pg630sftmqoxayma6ylt.jpg" alt="delorean" width="640" height="640"&gt;&lt;/a&gt;&lt;br&gt;
Photo by &lt;a href="https://unsplash.com/@deloreanrental?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Delorean Rental&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/back-to-the-future?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ayer"&gt;
  &lt;/a&gt;
  Ayer:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Diseñe algunos componentes de la interfaz móvil de mi portfolio.&lt;/li&gt;
&lt;li&gt;Aprendí que en diseño normalmente se crean paletas de color y de esas paletas se obtienen distintos tintes y sombras de cada color de la paleta. &lt;/li&gt;
&lt;li&gt;Aprendí las leyes de Gestalt las cuales son: Ley de figura y fondo, de semejanza, de proximidad, de la continuidad, de simetría o dirección común, de la simplicidad y ley de la continuidad.&lt;/li&gt;
&lt;li&gt;Aprendí a crear un servidor y a ejecutarlo en desarrollo.&lt;/li&gt;
&lt;li&gt;Aprendí las peticiones &lt;code&gt;http&lt;/code&gt; como son &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt; y &lt;code&gt;delete&lt;/code&gt; con express en un servidor de nodejs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#hoy"&gt;
  &lt;/a&gt;
  Hoy:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Aprendí los códigos de estado de respuesta se agrupan por números de los cuales 

&lt;ul&gt;
&lt;li&gt;Las respuestas informativas van del código 100 al 199.&lt;/li&gt;
&lt;li&gt;Las respuestas satisfactorias van del 200 al 299.&lt;/li&gt;
&lt;li&gt;Las respuestas de redirección van 300 al 399.&lt;/li&gt;
&lt;li&gt;Las respuestas de error del cliente van del 400 al 499.&lt;/li&gt;
&lt;li&gt;Las respuestas de error de servidor van del 500 al 599.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Comencé a realizar pruebas de funciones asíncronas en una api backend.&lt;/li&gt;
&lt;li&gt;Obtener los parámetros de ruta personalizados y aprender el uso de los middlewares en el backend con nodejs y express.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ahora si regresemos al día de hoy...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xmcVJHK1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ckmc1gu0uli0mhny7yq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xmcVJHK1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ckmc1gu0uli0mhny7yq.jpg" alt="meme back to the future" width="880" height="549"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No mencionare lo de ayer porque directamente esta en la parte de arriba 👆 pero si lo que realice...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hoy"&gt;
  &lt;/a&gt;
  Hoy:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Termine el diseño de mi pagina web en móvil y en Tablet.&lt;/li&gt;
&lt;li&gt;Aumente mi puntuación en &lt;em&gt;Problem solving&lt;/em&gt; en HackerRank.&lt;/li&gt;
&lt;li&gt;Comencé a ver algunos frameworks de Css tailwind, SASS, Foundation, Bulma y SemanticUI.&lt;/li&gt;
&lt;li&gt;Aprendí que Tailwind Css solo se puede instalar en &lt;code&gt;Nextjs&lt;/code&gt;, &lt;code&gt;Vuejs&lt;/code&gt;, &lt;code&gt;Laravel&lt;/code&gt;, &lt;code&gt;Nuxtjs&lt;/code&gt; &lt;code&gt;React&lt;/code&gt; y &lt;code&gt;Gatsby&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;También comprendí despues de estos días que hay que establecer una serie de metas en el desarrollo semanales o mensuales para realizar un seguimiento del uso del tiempo asi que mañana comenzare con una planeación para la semana. &lt;/p&gt;

&lt;p&gt;¡Que tengan un gran día o noche y mucho éxito con sus proyectos!&lt;br&gt;
No olviden sonreír y es todo, hasta mañana.&lt;/p&gt;

</description>
      <category>spanish</category>
      <category>webdev</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>How I Manipulate Files on the Command line</title>
      <author>Dolamu Asipa</author>
      <pubDate>Mon, 08 Nov 2021 00:22:41 +0000</pubDate>
      <link>https://dev.to/dolamu/7-easy-tips-to-manipulate-files-on-the-linux-command-line-2glf</link>
      <guid>https://dev.to/dolamu/7-easy-tips-to-manipulate-files-on-the-linux-command-line-2glf</guid>
      <description>&lt;p&gt;I found the linux command line quite intimidating when I first started learning to code. It seemed to require extensive and comprehensive knowledge and understanding of commands and keyboard shortcuts. However, as I read more about it and practiced what I learned, I realized that it isn't as scary as it seemed; that It only requires a lot of constant practice. I also discovered that others &lt;a href="https://hackernoon.com/linux-survival-guide-for-beginners-c18bfd982036"&gt;feel the same way&lt;/a&gt;, which made me realise that I wasn't alone.&lt;/p&gt;

&lt;p&gt;The other thing I discovered during this period is that we are all beginners and sharing is helpful, since no one is an island. So I decided to &lt;a href="https://dev.to/dolamu/10-linux-commands-every-newbie-should-know-hpj"&gt;share my experience&lt;/a&gt; with others starting out as well. As we all know, learning is never-ending. There will always be new tools and new commands to learn, especially when you're a beginner. The following tips will help you navigate through files and directories on the command line. 👇&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#manipulating-files-and-directories"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Manipulating Files and Directories&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;to print a string of characters to your screen, use the &lt;code&gt;echo&lt;/code&gt; command by typing 👉 &lt;code&gt;echo &amp;lt;string&amp;gt;&lt;/code&gt; e.g. &lt;code&gt;echo Hello world&lt;/code&gt;. To print without a newline being inserted, use the &lt;code&gt;-n&lt;/code&gt; option as follows; type 👉 &lt;code&gt;echo -n &amp;lt;string&amp;gt;&lt;/code&gt;. To print a string of characters to a file without using a text editor, use the &lt;em&gt;redirect operator&lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; by typing 👉 &lt;code&gt;echo "string" &amp;gt; filename&lt;/code&gt; e.g. &lt;code&gt;echo "this prints to file" &amp;gt; index.html&lt;/code&gt;. To add a new string of characters to the next line of same file, use the &lt;em&gt;append operator&lt;/em&gt; &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; and type 👉 &lt;code&gt;echo "string" &amp;gt;&amp;gt; filename&lt;/code&gt;.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to dump the contents of a file to your screen, use the &lt;code&gt;cat&lt;/code&gt; command and type 👉 &lt;code&gt;cat &amp;lt;filename&amp;gt;&lt;/code&gt; e.g &lt;code&gt;cat book.txt&lt;/code&gt;. To facilitate the comparison of files that are similar but not identical, use the &lt;code&gt;diff&lt;/code&gt; command, type 👉 &lt;code&gt;diff &amp;lt;filename1&amp;gt; &amp;lt;filename2&amp;gt;&lt;/code&gt;. Note that when there is no difference between two files, &lt;code&gt;diff&lt;/code&gt; simply outputs nothing. To dump the contents of a file (or to combine the contents of multiple files) into a separate one, direct the output of the &lt;code&gt;cat&lt;/code&gt; command to the new file using the redirect &lt;code&gt;&amp;gt;&lt;/code&gt; operator, type 👉 &lt;code&gt;cat filename(s) &amp;gt; newfile&lt;/code&gt;.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to abort the current task and regain user-control of the terminal, press 👉 &lt;code&gt;Ctrl-C&lt;/code&gt;. If this command fails, hit the &lt;code&gt;Esc&lt;/code&gt; key. To be able to move quickly within the command line, press 👉 &lt;code&gt;Ctrl-A&lt;/code&gt; to get to the beginning of the line; &lt;code&gt;Ctrl-E&lt;/code&gt; to get to the end of the line and; &lt;code&gt;Ctrl-U&lt;/code&gt; to clear the entire line and start over.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to learn more details about a command, type 👉 &lt;code&gt;man &amp;lt;command name&amp;gt;&lt;/code&gt;  e.g &lt;code&gt;man cat&lt;/code&gt;. Note that &lt;code&gt;man&lt;/code&gt; pages use the same interface as the &lt;code&gt;less&lt;/code&gt; command so you can navigate through both using the same key shortcuts. To open a new terminal tab (or window), press 👉 &lt;code&gt;Ctrl+Shift+T&lt;/code&gt; and &lt;code&gt;Ctrl+Shift+N&lt;/code&gt; respectively. To clear your screen, type 👉 &lt;code&gt;clear&lt;/code&gt; or press 👉 &lt;code&gt;Ctrl-L&lt;/code&gt;. To exit a terminal window (or tab), press 👉 &lt;code&gt;Ctrl-D&lt;/code&gt; or &lt;code&gt;Ctrl+Shift+W&lt;/code&gt; or type 👉 &lt;code&gt;exit&lt;/code&gt;.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to run the previous command exactly as written, use the exclamation point &lt;code&gt;!&lt;/code&gt; (pronounced bang) and type &lt;code&gt;!!&lt;/code&gt;. Another way to repeat previous commands is by typing &lt;code&gt;!&lt;/code&gt; followed by a character (or number of characters), which runs the last command that started with those characters. For example, to run the last &lt;code&gt;ls&lt;/code&gt; command issued, type 👉 &lt;code&gt;! l&lt;/code&gt;. Another powerful technique is to press 👉 &lt;code&gt;Ctrl+R&lt;/code&gt;. This allows you to search interactively through your previous commands, and then optionally edit the result before executing.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to create a hard link to a file; use the &lt;code&gt;ln&lt;/code&gt; command by first typing the name of the file you want to link to (i.e the source file), followed by the name of the linked file you want to create (i.e the target) for example 👉 &lt;code&gt;ln letter.doc book.doc&lt;/code&gt;. To force a link &lt;em&gt;(say, to an existing file)&lt;/em&gt; (or to execute a command without having to confirm it) use the &lt;code&gt;-f&lt;/code&gt; flag e.g &lt;code&gt;ln -f letter.doc index.html&lt;/code&gt;. &lt;br&gt;&lt;br&gt;&lt;br&gt;
The default type of link that gets created when using the &lt;code&gt;ln&lt;/code&gt; command is the hard link. Hard links create an identical copy of the linked file on disk, that gets updated automatically as the source file is updated. However, this type of link does not work for directories.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to create a link to a directory, use the &lt;code&gt;-s&lt;/code&gt; flag to create a symbolic link. This flag can also be used for linking to files as well, not just directories for example, &lt;code&gt;ln -s letter.doc index.html&lt;/code&gt;. Symbolic links can also link to files or directories on other file systems. &lt;em&gt;File systems refer to directories and files&lt;/em&gt;.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#inspecting-files"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Inspecting Files&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;to open a file or a directory or access a URL, type 👉 &lt;code&gt;xdg-open &amp;lt;filename&amp;gt;/&amp;lt;directory&amp;gt;/&amp;lt;URL&amp;gt;&lt;/code&gt;. To download a file from the internet, use the &lt;code&gt;curl&lt;/code&gt; utility which allows you to interact with URLs at the command line; type 👉 &lt;code&gt;curl -OL &amp;lt;URL&amp;gt;&lt;/code&gt;. To fetch the HTTP header of a site, type 👉 &lt;code&gt;curl -I &amp;lt;URL&amp;gt;&lt;/code&gt;.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to view the beginning and end of a file, use the &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt; commands by typing 👉 &lt;code&gt;head &amp;lt;filename&amp;gt;&lt;/code&gt; and &lt;code&gt;tail &amp;lt;filename&amp;gt;&lt;/code&gt; respectively. They show the first and last 10 lines of the file, as aplicable. To print the first &lt;em&gt;n&lt;/em&gt; lines of a file (instead of the first 10), type 👉 &lt;code&gt;head -n &amp;lt;number&amp;gt; &amp;lt;filename&amp;gt;&lt;/code&gt;.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to count the number of lines in a file, type 👉 &lt;code&gt;wc &amp;lt;filename&amp;gt;&lt;/code&gt;. The output shows three separate figures, indicating the number of lines, words, and bytes in the file. To view a file that is actively changing, type 👉 &lt;code&gt;tail -f &amp;lt;filename&amp;gt;&lt;/code&gt;. This command is mostly executed when monitoring files used to log the activity of web servers for instance, in  a practice known as 'tailing the log file'.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to easily navigate through the contents of a large file, use 👉 the &lt;code&gt;less&lt;/code&gt; command for example type 👉 &lt;code&gt;less &amp;lt;filename&amp;gt;&lt;/code&gt;. While in &lt;code&gt;less&lt;/code&gt; mode; press the &lt;code&gt;spacebar&lt;/code&gt; or &lt;code&gt;Ctrl+F&lt;/code&gt; to move forward a page; the &lt;code&gt;arrow keys&lt;/code&gt; to move one line up or down; &lt;code&gt;Ctrl+B&lt;/code&gt; to move a page up; press 👉 &lt;code&gt;1G&lt;/code&gt; and &lt;code&gt;G&lt;/code&gt; to move to the beginning and end of the file respectively (to go directly to a specific line, type 👉 &lt;code&gt;&amp;lt;linenumber&amp;gt;G&lt;/code&gt;); to search through the file for a string/word, use the forward slash key &lt;code&gt;/&lt;/code&gt;, e.g. type 👉 &lt;code&gt;/&amp;lt;word&amp;gt;&lt;/code&gt;; press 👉 &lt;code&gt;n&lt;/code&gt; to move to the next search result and &lt;code&gt;N&lt;/code&gt; to the previous search result and to quit the &lt;code&gt;less&lt;/code&gt; command, press 👉 &lt;code&gt;q&lt;/code&gt;.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to search directly for a word/string in a file, use the &lt;code&gt;grep&lt;/code&gt; command, type 👉 &lt;code&gt;grep &amp;lt;word&amp;gt; &amp;lt;filename&amp;gt;&lt;/code&gt;. To search for a word/string in a file when you aren't sure where the file is, use the &lt;code&gt;-r&lt;/code&gt; flag and type 👉 &lt;code&gt;grep -r &amp;lt;word&amp;gt;&lt;/code&gt;.To perform case-insensitive search using &lt;code&gt;grep&lt;/code&gt; use the &lt;code&gt;-i&lt;/code&gt; flag by typing 👉 &lt;code&gt;grep -i &amp;lt;word&amp;gt; &amp;lt;filename&amp;gt;&lt;/code&gt;. To exclude a word/string from a search term when using &lt;code&gt;grep&lt;/code&gt;, use the &lt;code&gt;-v&lt;/code&gt; option as follows 👉  &lt;code&gt;grep &amp;lt;search term&amp;gt; &amp;lt;filename&amp;gt; | grep -v &amp;lt;word&amp;gt;&lt;/code&gt;.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to find the line number(s) in a file where a word appears, type 👉 &lt;code&gt;grep -n &amp;lt;word&amp;gt; &amp;lt;filename&amp;gt;&lt;/code&gt;. To print the first 'n' lines of a search result, pipe to the &lt;code&gt;head&lt;/code&gt; command as follows 👉 &lt;code&gt;grep -i &amp;lt;word&amp;gt; &amp;lt;filename&amp;gt; | head &amp;lt;-n&amp;gt;&lt;/code&gt;.  To count the number of lines containing references to a search term/string, use the pipe &lt;code&gt;|&lt;/code&gt; and word count&lt;code&gt;wc&lt;/code&gt; commands as follows 👉 &lt;code&gt;grep &amp;lt;word&amp;gt; &amp;lt;filename&amp;gt; | wc&lt;/code&gt;.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to print the history of commands you have previously executed in your terminal shell, use the &lt;code&gt;history&lt;/code&gt; command and pipe &lt;code&gt;|&lt;/code&gt; it to &lt;code&gt;less&lt;/code&gt; as follows 👉 &lt;code&gt;history | less&lt;/code&gt;. To execute a specific command in your command history, type 👉 &lt;code&gt;!n&lt;/code&gt; where &lt;em&gt;n&lt;/em&gt; represents the command number e.g. the 43rd command in your history. &lt;br&gt;&lt;br&gt;&lt;br&gt;
Lastly, to modify system files or directories and execute tasks as &lt;em&gt;root&lt;/em&gt;, use the &lt;code&gt;sudo&lt;/code&gt; command.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;As always, thanks for reading!&lt;/em&gt;  👋 👋&lt;/p&gt;

</description>
      <category>linux</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
