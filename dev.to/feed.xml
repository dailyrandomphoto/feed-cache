<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to visualize data categories in python with pandas</title>
      <author>Code_Jedi</author>
      <pubDate>Sat, 04 Sep 2021 12:49:20 +0000</pubDate>
      <link>https://dev.to/code_jedi/how-to-visualize-data-categories-in-python-with-pandas-2pgn</link>
      <guid>https://dev.to/code_jedi/how-to-visualize-data-categories-in-python-with-pandas-2pgn</guid>
      <description>&lt;p&gt;&lt;strong&gt;If you have a dataset which is divided into categories of data like: kickstarter projects, flower species or most popular car brands, then it's a good idea to visualize those data categories to see the amount of values within each category.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here's a dataset of over 300,000 kickstarter projects as well as their categories, goal, No. of backers and much more: &lt;a href="https://www.kaggle.com/kemical/kickstarter-projects"&gt;https://www.kaggle.com/kemical/kickstarter-projects&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When looking at the dataset, you would notice that every one of those 300,000+ projects are put into different categories such as: Games, Music, Art and Technology.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;To make a python script that will display each category as a fraction of a donut plot based on the number of projects belonging to it, first add the necessary libraries and load in the dataset:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pandas as pd 
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv('ks-projects.csv')

df = pd.DataFrame(data)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, to get the number of projects within each category, add this line of code to your script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;category_values = df.pivot_table(columns=['main_category'], aggfunc='size')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to display "category_values" in a doughnut graph, add this to the end of your script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;plt.pie(category_values)
my_circle=plt.Circle( (0,0), 0.7, color='white')
p=plt.gcf()
p.gca().add_artist(my_circle)

plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you run your script, your doughnut plot should look something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sEBf8Das--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khj02w0p1fyje0e0gtqy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sEBf8Das--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khj02w0p1fyje0e0gtqy.png" alt="Donut!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, it displays the amount of projects within each category as a fraction of the doughnut plot, but it doesn't label the categories.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;To label the categories, add these lines of code before your doughnut plot:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;category_names = data['main_category']
categories = category_names.unique()
categories.sort()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will count the number of unique category names within the dataset and sort them in alphabetical order.&lt;/p&gt;

&lt;p&gt;The reason for sorting them in alphabetical order is because the category values we defined earlier are ordered alphabetically( first value is Art: 28153 and last value is Theater: 10913).&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Now to display the doughnut plot with its corresponding labels, replace&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;plt.pie(category_values)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;plt.pie(category_values, labels=categories)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Full code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pandas as pd 
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv('ks-projects.csv')

df = pd.DataFrame(data)
category_values = df.pivot_table(columns=['main_category'], aggfunc='size')

category_names = data['main_category']
categories = category_names.unique()
categories.sort()
plt.pie(category_values, labels=categories)

my_circle=plt.Circle( (0,0), 0.7, color='white')
p=plt.gcf()
p.gca().add_artist(my_circle)
plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#now-if-your-run-your-script-you-should-see-a-doughnut-plot-that-displays-the-fraction-of-projects-each-category-contains-as-well-as-the-categories-labels"&gt;
  &lt;/a&gt;
  Now if your run your script, you should see a doughnut plot that displays the fraction of projects each category contains, as well as the categories' labels:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ML-BlL5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3294ypluwvi6y3b3vsjp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ML-BlL5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3294ypluwvi6y3b3vsjp.png" alt="Donut with labels"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>datascience</category>
      <category>machinelearning</category>
      <category>programming</category>
    </item>
    <item>
      <title>‚ö° Must read Tech news/tools of the day - Digest #3</title>
      <author>Hackertab üñ•Ô∏è</author>
      <pubDate>Sat, 04 Sep 2021 12:00:04 +0000</pubDate>
      <link>https://dev.to/hackertab/must-read-tech-news-tools-of-the-day-digest-3-23e0</link>
      <guid>https://dev.to/hackertab/must-read-tech-news-tools-of-the-day-digest-3-23e0</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DJyfm8Xt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kVzXltq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJyfm8Xt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kVzXltq.png" alt="articleImg"&gt;&lt;/a&gt;&lt;br&gt;
Each day we handpick the best web content across different websites eg: Hackernews, Github, Reddit... to help you stay updated with the hottest trends!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#level-up-your-skills-with-these-github-repositories"&gt;
  &lt;/a&gt;
  Level up your üöÄ skills with these Github repositories:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bHVT2yX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://www.prodapt.com/wp-content/uploads/github.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bHVT2yX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://www.prodapt.com/wp-content/uploads/github.png" alt="Github"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cplusplus"&gt;
  &lt;/a&gt;
  üìô &lt;a href="https://github.com/TheAlgorithms/C-Plus-Plus"&gt;C-Plus-Plus&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üë§ TheAlgorithms | ‚≠ê +14,772 stars&lt;br&gt;
Collection of various algorithms in mathematics, machine learning, computer science and physics implemented in C++ for educational purposes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#awscdk"&gt;
  &lt;/a&gt;
  üìô &lt;a href="https://github.com/aws/aws-cdk"&gt;aws-cdk&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üë§ aws | ‚≠ê +7,341 stars&lt;br&gt;
The AWS Cloud Development Kit is a framework for defining cloud infrastructure in code&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pytorchimagemodels"&gt;
  &lt;/a&gt;
  üìô &lt;a href="https://github.com/rwightman/pytorch-image-models"&gt;pytorch-image-models&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üë§ rwightman | ‚≠ê +12,692 stars&lt;br&gt;
PyTorch image models, scripts, pretrained weights -- ResNet, ResNeXT, EfficientNet, EfficientNetV2, NFNet, Vision Transformer, MixNet, MobileNet-V3/V2, RegNet, DPN, CSPNet, and more&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#hottest-devto-posts-"&gt;
  &lt;/a&gt;
  üéâ üî• Hottest Devto posts :
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#top-5-datadog-alternatives-in-2021-including-a-full-stack-opensource-apm-tool"&gt;
  &lt;/a&gt;
  üìù &lt;a href="https://dev.to/signoz/top-5-datadog-alternatives-in-2021-including-a-full-stack-open-source-apm-tool-7c0"&gt;Top 5 DataDog alternatives in 2021 including a full stack open-source APM tool  üòâ ü§ì&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üë§ Ankit Anand ‚ú® | üëç +22 reactions&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gWy59xmB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--X7Abtwno--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1z845u497phadl281gz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gWy59xmB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--X7Abtwno--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1z845u497phadl281gz.png" alt=""&gt;&lt;/a&gt;Are you looking for a DataDog alternative? Then you have come to the right place. In this article, we...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#developing-for-the-web-with-flask-creating-a-web-application"&gt;
  &lt;/a&gt;
  üìù &lt;a href="https://dev.to/billyndirangu/developing-for-the-web-with-flask-creating-a-web-application-2257"&gt;Developing for the web with Flask; creating a web application.&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üë§ Billy | üëç +32 reactions&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L2NbkKjQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--SfUc0lJ7--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/940ubm1dsnwtksqgywfy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L2NbkKjQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--SfUc0lJ7--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/940ubm1dsnwtksqgywfy.jpg" alt=""&gt;&lt;/a&gt;Hey there, In this tutorial i will be showing you how to develop your first fullstack web-app project...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%EF%B8%8F-30-day-vanilla-js-%EF%B8%8F"&gt;
  &lt;/a&gt;
  üìù &lt;a href="https://dev.to/fentybit/30-day-vanilla-js-1nmp"&gt;‚ö°Ô∏è 30 Day Vanilla JS ‚ö°Ô∏è&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üë§ fentybit | üëç +30 reactions&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2IVuOt8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hP6aLHdB--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yemjvggfbfn7vsguc26s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2IVuOt8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hP6aLHdB--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yemjvggfbfn7vsguc26s.png" alt=""&gt;&lt;/a&gt;I have been meaning to take on Wes Bos' JavaScript30 challenge, but had no time to spare during my...&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#keep-an-eye-on-these-cool-products-too"&gt;
  &lt;/a&gt;
  üëÄ Keep an eye on these cool products too:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#taxarly"&gt;
  &lt;/a&gt;
  üîß &lt;a href="https://www.producthunt.com/posts/taxarly?utm_campaign=producthunt-api&amp;amp;utm_medium=api-v2&amp;amp;utm_source=Application%3A+Hackertab+%28ID%3A+42881%29"&gt;Taxarly&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üî∫ +87 | üí¨ +67 &lt;br&gt;
Never miss a due date again&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tSyqqvU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/208c8b0a-b15a-478e-a30f-7e92aa3db45e.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tSyqqvU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/208c8b0a-b15a-478e-a30f-7e92aa3db45e.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" alt="Taxarly"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sort-eat-out"&gt;
  &lt;/a&gt;
  üîß &lt;a href="https://www.producthunt.com/posts/sort-eat-out?utm_campaign=producthunt-api&amp;amp;utm_medium=api-v2&amp;amp;utm_source=Application%3A+Hackertab+%28ID%3A+42881%29"&gt;Sort Eat Out&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üî∫ +40 | üí¨ +6 &lt;br&gt;
Highlights vegan and vegetarian items on UberEats menus&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Xmcg7nl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/a4636e3f-eb25-4eac-bd0b-a8a85dadc0f1.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Xmcg7nl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/a4636e3f-eb25-4eac-bd0b-a8a85dadc0f1.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" alt="Sort Eat Out"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#speechtextai-for-chrome"&gt;
  &lt;/a&gt;
  üîß &lt;a href="https://www.producthunt.com/posts/speechtext-ai-for-chrome?utm_campaign=producthunt-api&amp;amp;utm_medium=api-v2&amp;amp;utm_source=Application%3A+Hackertab+%28ID%3A+42881%29"&gt;SpeechText.AI for Chrome&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üî∫ +20 | üí¨ +1 &lt;br&gt;
Record, capture and transcribe audio &amp;amp; video in minutes&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1o0XffCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/19bbfda9-2872-411b-818d-0edbb8850606.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1o0XffCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/19bbfda9-2872-411b-818d-0edbb8850606.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" alt="SpeechText.AI for Chrome"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;üôå Wrap Up!&lt;br&gt;
That was all for this day.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-hackertab-on-twitter-for-more-tips-hackertabdev"&gt;
  &lt;/a&gt;
  Follow Hackertab on Twitter for more tips: &lt;a href="https://twitter.com/hackertabdev"&gt;@hackertabdev&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L6HrjVwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sYGs3ep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L6HrjVwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sYGs3ep.png" alt="Hackertab"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://hackertab.dev"&gt;Hackertab&lt;/a&gt; turns your New Tab page into a geeky one that keeps you as a developer updated with the best tools, news, jobs and events.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>hackertab</category>
    </item>
    <item>
      <title>Html to render function</title>
      <author>Shaked</author>
      <pubDate>Sat, 04 Sep 2021 11:49:18 +0000</pubDate>
      <link>https://dev.to/shaked46763744/html-to-render-function-59d2</link>
      <guid>https://dev.to/shaked46763744/html-to-render-function-59d2</guid>
      <description>&lt;p&gt;Hey, my name is Shaked, and I want to tell you how to convert boring HTML to Vue/react render function. &lt;br&gt;
There is often this issue with legacy content or content you want to load in general, which has an HTML format, and as we all know, neither Vue nor Rack likes to load HTML directly. Both frameworks can do it; for instance, Vue/Nuxt has v-html, which can let you place html inside, but the issue with that is security and bad practice. Also, you are kind of out of luck if you want to modify HTML on the fly; for example, you want to change all A tags to be a nuxt-link tag or change the links that have Twitter inside in the href of the tag to be twitter-component to load your custom component. &lt;br&gt;
So I built a solution; &lt;a href="https://github.com/1shaked/render-function-from-html"&gt;here is the git repo&lt;/a&gt;&lt;br&gt;
This repository has a couple of files. The first is a python docker container which will help you convert the content. &lt;em&gt;This container is a flask server that runs a miniature python version&lt;/em&gt;.&lt;br&gt;
This server/container will start from the app.py file.&lt;br&gt;
There is an HTML example and JSON file to show the result. Also, a Vue file to show you an example of how to use it. Please note that in the Vue example, I am using Vuex to get the content, but you can pass it anyway to like props, etc. &lt;br&gt;
So let's see the code here&lt;br&gt;
app.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'POST'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;cross_origin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="c1"&gt;# html_content is a string 
&lt;/span&gt;    &lt;span class="n"&gt;html_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'html'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HtmlConverter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initWithHtml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Successfully got render func."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;soupToJson&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"can not convert this to render func"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So very simple flask server getting the post html parameter and convert it using my custom HtmlConverter object. to more info about this object go to &lt;a href="https://github.com/1shaked/render-function-from-html/blob/main/convertor.py"&gt;https://github.com/1shaked/render-function-from-html/blob/main/convertor.py&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vue example with render function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imgComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;videoComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Video&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;audioComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Audio&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;youtubeComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Youtube&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;twitterComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Twitter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;facebookComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Facebook&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;taboolaComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;~/components/taboola&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;imgComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;video-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;videoComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;audio-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;audioComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;youtube-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;youtubeComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;twitter-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;twitterComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;facebook-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;facebookComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;taboola-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;taboolaComponent&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;mapState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;articles&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;handleContent&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// console.log('%c currentElement: ' + el.tag + ' attrs: ' + el.attrs + ' content: ' + el.content, 'color: green; font-weight: bold')&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;attrs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attrs&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* style: { order: '1' } */&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleContent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iframe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
            &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;www.facebook.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;facebook-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;click&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// add custom event&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;span&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// create copy to avoid error in reactive node&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleContent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>vue</category>
      <category>react</category>
      <category>html</category>
      <category>python</category>
    </item>
    <item>
      <title>Sync fork with the original repository using git</title>
      <author>Isabel Costa</author>
      <pubDate>Sat, 04 Sep 2021 11:38:58 +0000</pubDate>
      <link>https://dev.to/isabelcmdcosta/sync-fork-with-original-repository-using-git-21ap</link>
      <guid>https://dev.to/isabelcmdcosta/sync-fork-with-original-repository-using-git-21ap</guid>
      <description>&lt;p&gt;When you want to contribute to an open source repository, you usually &lt;a href="https://docs.github.com/en/get-started/quickstart/fork-a-repo"&gt;fork a repository&lt;/a&gt; so you can do your changes and later submit them via a pull request. After forking the repository on GitHub, and cloning it into your local environment - &lt;code&gt;git clone &amp;lt;forked repository url&amp;gt;&lt;/code&gt; - the repository will have a remote URL setup, usually named &lt;code&gt;origin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can also do this using GitHub web user interface. Check &lt;a href="https://docs.github.com/en/github/collaborating-with-pull-requests/working-with-forks/syncing-a-fork"&gt;out the docs&lt;/a&gt;! I already mostly use this option, but it‚Äôs always useful to know the basics of doing this with git.&lt;/p&gt;

&lt;p&gt;To use as an example, I forked &lt;a href="https://github.com/anitab-org/documentation"&gt;anitab-org/documentation&lt;/a&gt; repository into my GitHub account &lt;a href="https://github.com/isabelcosta/documentation"&gt;isabelcosta/documentation&lt;/a&gt;. When &lt;strong&gt;cloning the repository I &lt;a href="https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#about-remote-repositories"&gt;used the SSH URL&lt;/a&gt; of my forked repository.&lt;/strong&gt; The commands I‚Äôll mention will be running against the repository‚Äôs default &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;First, &lt;strong&gt;check what remote URLs your project has set up&lt;/strong&gt; with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote -v
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the &lt;code&gt;origin&lt;/code&gt; configuration will have the URL where your forked project is on GitHub (notice that my &lt;code&gt;isabelcosta&lt;/code&gt; account username is there). I am also inside the root directory of the local clone of my forked repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~/dev/documentation &amp;gt; git remote -v
origin  git@github.com:isabelcosta/documentation.git (fetch)
origin  git@github.com:isabelcosta/documentation.git (push)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can &lt;strong&gt;add the new remote repository link to your remotes&lt;/strong&gt;. The &lt;code&gt;upstream&lt;/code&gt; keyword is an alias for the original repository remote URL (replace &lt;code&gt;&amp;lt;url of original repository&amp;gt;&lt;/code&gt; with this URL). You can pick another alias if you prefer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote add upstream &amp;lt;url of original repository&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that in this case, the link is pointing to &lt;code&gt;anitab-org&lt;/code&gt; account - where the repository was originally forked from):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~/dev/documentation &amp;gt; git remote add upstream git@github.com:anitab-org/documentation.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To &lt;strong&gt;confirm the remote repositories you have set up&lt;/strong&gt;, the new &lt;code&gt;upstream&lt;/code&gt; repository configuration should be there.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~/dev/documentation &amp;gt; git remote -v
origin  git@github.com:isabelcosta/documentation.git (fetch)
origin  git@github.com:isabelcosta/documentation.git (push)
upstream    git@github.com:anitab-org/documentation.git (fetch)
upstream    git@github.com:anitab-org/documentation.git (push)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this setup, you can now &lt;strong&gt;sync your repository locally&lt;/strong&gt; using pull/fetch code from the original repository. Here‚Äôs an example where I am pulling code from the original repository into my fork‚Äôs &lt;code&gt;master&lt;/code&gt; branch:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~/dev/documentation &amp;gt; git pull upstream master
From github.com:anitab-org/documentation
 * branch            master     -&amp;gt; FETCH_HEAD
   85f3fdc..5854a22  master     -&amp;gt; upstream/master
Already up to date.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After updating my local branch, I usually also &lt;strong&gt;update the fork on GitHub.&lt;/strong&gt; I push the new commits pulled from &lt;code&gt;upstream&lt;/code&gt; to my &lt;code&gt;origin&lt;/code&gt; forked repository (using the same &lt;code&gt;master&lt;/code&gt; branch):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~/dev/documentation &amp;gt; git push origin master
Everything up-to-date
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#commands-summary"&gt;
  &lt;/a&gt;
  Commands summary
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Check remotes: &lt;code&gt;git remote -v&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Add a new remote: &lt;code&gt;git remote add upstream &amp;lt;original repository url&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Sync local repository: &lt;code&gt;git pull upstream &amp;lt;branch&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Update remote forked repo: &lt;code&gt;git push origin &amp;lt;branch&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The CSS position property</title>
      <author>Ravi kumar</author>
      <pubDate>Sat, 04 Sep 2021 11:33:37 +0000</pubDate>
      <link>https://dev.to/ravikumar1002/the-css-position-property-495c</link>
      <guid>https://dev.to/ravikumar1002/the-css-position-property-495c</guid>
      <description>&lt;p&gt;The position property specifies the type of positioning method used for an element and by position property we can manipulate the location of an element.&lt;br&gt;
These are type of position value :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;static&lt;/li&gt;
&lt;li&gt;relative&lt;/li&gt;
&lt;li&gt;absolute&lt;/li&gt;
&lt;li&gt;fixed&lt;/li&gt;
&lt;li&gt;sticky&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And also global values like &lt;code&gt;inherit&lt;/code&gt; , &lt;code&gt;initial&lt;/code&gt;, &lt;code&gt;revert&lt;/code&gt;, &lt;code&gt;unset&lt;/code&gt;  can also be applied to position property&lt;/p&gt;

&lt;p&gt;Let's talk about each position values one by one :)&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#-raw-static-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;static&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;position: static;&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;static&lt;/code&gt; in the default position and it's position according to the normal flow of the page. In static  &lt;code&gt;top&lt;/code&gt;/&lt;code&gt;bottom&lt;/code&gt;/&lt;code&gt;left&lt;/code&gt;/&lt;code&gt;right&lt;/code&gt;/&lt;code&gt;z-index&lt;/code&gt; property has no effect.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ravikumar1002/embed/dyRXORg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-relative-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;relative&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;position : relative;&lt;/code&gt;&lt;br&gt;
  It behaves like a static but when we apply on of these property  &lt;code&gt;top&lt;/code&gt;/&lt;code&gt;bottom&lt;/code&gt;/&lt;code&gt;left&lt;/code&gt;/&lt;code&gt;right&lt;/code&gt;/&lt;code&gt;z-index&lt;/code&gt; then element will flow according to these CSS properties.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ravikumar1002/embed/VwWjpWz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-absolute-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;absolute&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;position : absolute;&lt;/code&gt; &lt;br&gt;
The element is removed from the normal document flow and is relatively positioned to its first non-static ancestor. Its final position is confirm by the values of &lt;code&gt;top&lt;/code&gt;/&lt;code&gt;bottom&lt;/code&gt;/&lt;code&gt;left&lt;/code&gt;/&lt;code&gt;right&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ravikumar1002/embed/abwZJMW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-fixed-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;fixed&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;position : fixed;&lt;/code&gt; &lt;br&gt;
The element is removed from the normal document flow like absolutely positioned elements. In fact they behave almost the same, only fixed positioned elements are always relative to the document, not any particular parent, and are unaffected by scrolling.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ravikumar1002/embed/jOwrBZj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-sticky-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;sticky&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;position : sticky;&lt;/code&gt; &lt;br&gt;
The element is positioned based on the user's scroll position. A &lt;code&gt;sticky&lt;/code&gt; element toggles between &lt;code&gt;relative&lt;/code&gt; and &lt;code&gt;fixed&lt;/code&gt;, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it "sticks" in place (like position:fixed).&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ravikumar1002/embed/XWgKRWM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>css</category>
      <category>position</category>
      <category>design</category>
    </item>
    <item>
      <title>Management of emotional intelligence in times of Coronavirus</title>
      <author>Jacqueline R. Swearingen</author>
      <pubDate>Sat, 04 Sep 2021 11:19:00 +0000</pubDate>
      <link>https://dev.to/real-iq-test/management-of-emotional-intelligence-in-times-of-coronavirus-3l7h</link>
      <guid>https://dev.to/real-iq-test/management-of-emotional-intelligence-in-times-of-coronavirus-3l7h</guid>
      <description>&lt;p&gt;Tony Schwartz &lt;a href="https://en.wikipedia.org/wiki/Tony_Schwartz_(author)"&gt;1&lt;/a&gt; and Emily Pines &lt;a href="https://judges.newyorklawjournal.com/profile/Emily_Pines/Emily_Pines-869.xml"&gt;2&lt;/a&gt; are the owner and CEO of ‚ÄúThe Energy Project‚Äù respectively. This is an international consulting firm dedicated to business development through the proper management of human talent and skills. And both maintain that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Negative attitudes such as tiredness, fear, and stress that are transferred to the environment are as or more contagious than COVID-19. (Tony Schwartz and Emily Pines)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In addition, they ensure that human beings have 2 ways of facing the situations that arise: the infantile and the adult.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our childish side is associated with vulnerability and fear; while on the other hand,&lt;/li&gt;
&lt;li&gt;the adult implies serenity and reasoning, to keep our childish side under control.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this sense, what our adult profile uses to control our child side is emotional intelligence.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#survival-in-times-of-quarantine"&gt;
  &lt;/a&gt;
  Survival in times of quarantine
&lt;/h2&gt;

&lt;p&gt;We are living in a very unusual and somewhat chaotic situation, due to the new Coronavirus. For these times of social isolation, it is important to have the ability to cope with the uncertainty of tomorrow. The news, and in general, the vast majority of the media, share information that generates fear and stress in the population. The worst thing is that in many cases it is fake or sensational news.&lt;/p&gt;

&lt;p&gt;We must be able to not lose control and properly manage our emotions. This environment of negativity affects us all to a greater or lesser extent. So we talk about living a time of survival. For the most part, human beings tend to act reactively, living day by day, without carrying out an analysis of pros and cons when making decisions. Adequate survival in these times involves taking time for reflection and developing an optimistic point of view in each situation. Hoping for a better situation for our future is what is known as hope, and it is what a human being should never lose.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-alternatives-do-we-have"&gt;
  &lt;/a&gt;
  What alternatives do we have?
&lt;/h2&gt;

&lt;p&gt;An important first step to take into account on this survival path is: recognize our emotions. We must be able to name them and be aware of them.&lt;br&gt;
Since keeping them hidden and unrecognizable can lead us to act negatively and in the worst case have a nervous breakdown. In short, we must allow our adult side to take control, and not fall into irrationalities.&lt;br&gt;
In addition, we must focus on what we can manage. For example:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Avoid falling into compulsive purchases due to panic. On the contrary: stock up in a measured way.&lt;/li&gt;
&lt;li&gt;Focusing on things we can do at home is the key.&lt;/li&gt;
&lt;li&gt;Take breaks and avoid watching TV and social networks at all times (they usually show us negative news repeatedly).&lt;/li&gt;
&lt;li&gt;Hearing daily and repeatedly talking about Coronaviruses and hospital collapses is undeniably detrimental to our mental health.&lt;/li&gt;
&lt;li&gt;Try to carry out those activities that you left pending; like reading a book, learning a new language, starting to blog about positive stories and anecdotes.&lt;/li&gt;
&lt;li&gt;Organize your ideas, set goals, schedule times, get organized.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Nowadays it is easy to find guides on the internet about all kinds of activities.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Look for the bright side of this situation.&lt;/li&gt;
&lt;li&gt;Connect with yourself and your family.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#do-you-want-to-support-those-who-matter-to-you"&gt;
  &lt;/a&gt;
  Do you want to support those who matter to you?
&lt;/h2&gt;

&lt;p&gt;Take an interest in the mood of your family, your loved ones, even your team. We can join that great group of people who fight day by day to get ahead, and without leaving home.&lt;/p&gt;

&lt;p&gt;Spend some time before each meeting, lunch or dinner to ask how everyone feels, about what is happening. What do you have in mind, what challenges or goals have you set?&lt;/p&gt;

&lt;p&gt;Try to recognize their fears and feelings. The moments of crisis are a great opportunity to create bonds of trust.&lt;/p&gt;

&lt;p&gt;Although we find ourselves in a difficult situation and uncertainty, let us remain correct and bear in mind that:&lt;/p&gt;

&lt;p&gt;Throughout its history, the world has gone through many equal or worse situations. And all of them have left us lessons.&lt;/p&gt;

&lt;p&gt;This will not be the exception. Unexpected situations, which no expert has been able to predict, are opportunities to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Demonstrate our ingenuity,&lt;/li&gt;
&lt;li&gt;Learn from them as much as we can, and&lt;/li&gt;
&lt;li&gt;Be part of the positive change.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Remember that according to many experts: intelligence is the ability to adapt over time and survive. This implies anticipating crises, otherwise learning from them.&lt;/p&gt;

&lt;p&gt;Immanuel Kant said well:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The intelligence of an individual is measured by the amount of uncertainties that he is able to bear.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So: Given the international situation, and the great changes in the economy, in addition to the new types of work that are emerging, we live in a time of great uncertainty.&lt;/p&gt;

&lt;p&gt;The future is uncertain and unpredictable. But if we can‚Äôt be very objective, isn‚Äôt it better to keep our minds positive?&lt;br&gt;
We can affirm that today new levels of uncertainty are being reached worldwide.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What are we doing accordingly? Are we humans smart enough?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Assess your IQ in no time ‚Üí Take &lt;a href="https://iqcertificate.org/real-iq-test"&gt;Real IQ Test!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>discuss</category>
      <category>intelligence</category>
      <category>coronavirus</category>
    </item>
    <item>
      <title>Databases: Important Theoretical Concepts</title>
      <author>Fahid Latheef A</author>
      <pubDate>Sat, 04 Sep 2021 11:13:25 +0000</pubDate>
      <link>https://dev.to/fahidlatheef/databases-important-theoretical-concepts-4nll</link>
      <guid>https://dev.to/fahidlatheef/databases-important-theoretical-concepts-4nll</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In the previous &lt;a href="https://dev.to/fahidlatheef/basic-sql-concepts-pn8"&gt;episode&lt;/a&gt;, I discussed the important SQL Statements/Keywords that are useful for day-to-day SQL use. In today's episode, I will try to explain few important Database Concepts that will boost our understanding even further.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#transactions"&gt;
  &lt;/a&gt;
  Transactions
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Transaction&lt;/code&gt; is a fundamental concept of all database systems. It bundles multiple steps into a single, all-or-nothing operation. The intermediate states between the steps are not visible to other concurrent transactions, and if some failure occurs that prevents the transaction from completing, then none of the steps affects the database at all.&lt;/p&gt;

&lt;p&gt;Transactions can be further tuned by BEGIN, COMMIT and ROLLBACK operations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#begin"&gt;
  &lt;/a&gt;
  BEGIN
&lt;/h3&gt;

&lt;p&gt;Each transaction is explicitly initiated using &lt;code&gt;BEGIN TRAN&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#commit"&gt;
  &lt;/a&gt;
  COMMIT
&lt;/h3&gt;

&lt;p&gt;By using &lt;code&gt;COMMIT TRAN&lt;/code&gt;, a transaction is closed explicitly and modifications performed by the transaction are made permanent.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rollback"&gt;
  &lt;/a&gt;
  ROLLBACK
&lt;/h3&gt;

&lt;p&gt;By using &lt;code&gt;ROLLBACK TRAN&lt;/code&gt;, a transaction is explicitly closed and any modifications made by the transaction is discarded.&lt;/p&gt;

&lt;p&gt;Each Transaction should follow &lt;code&gt;ACID&lt;/code&gt; rules.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#acid"&gt;
  &lt;/a&gt;
  ACID
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ACID&lt;/strong&gt; stands for &lt;strong&gt;Atomicity, Consistency, Isolation and Durability&lt;/strong&gt;. This describes a set of properties that apply to data transactions. For a reliable database, all these four attributes should be achieved.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#atomicity"&gt;
  &lt;/a&gt;
  Atomicity
&lt;/h3&gt;

&lt;p&gt;Atomicity is also known as the "All or nothing rule". It means that either the entire transaction takes place at once or doesn‚Äôt happen at all. There aren't any partial transactions. Hence it is known as the "All or nothing rule".&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#consistency"&gt;
  &lt;/a&gt;
  Consistency
&lt;/h3&gt;

&lt;p&gt;It says that the database should be consistent before and after the transaction (Data types, triggers, constraints, etc). It refers to the correctness of a database. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#isolation"&gt;
  &lt;/a&gt;
  Isolation
&lt;/h3&gt;

&lt;p&gt;This property says that the transactions occur independently without interference. This property ensures that the execution of transactions concurrently will result in a state that is equivalent to a state achieved these were executed serially in some order.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#durability"&gt;
  &lt;/a&gt;
  Durability
&lt;/h3&gt;

&lt;p&gt;It says that once the transaction is saved or committed, it can‚Äôt be ‚Äúlost‚Äù. Data won‚Äôt go missing after a power outage or system crash.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#locking-mechanism"&gt;
  &lt;/a&gt;
  LOCKING MECHANISM
&lt;/h2&gt;

&lt;p&gt;Locking is designed to allow SQL Server to work seamlessly in a multi-user environment. Locking is the way that SQL Server manages transaction concurrency.&lt;/p&gt;

&lt;p&gt;While objects are locked, SQL Server will prevent other transactions from making any change of data stored in objects affected by the imposed lock. Once the lock is released by committing the changes or by rolling back changes to the initial state, other transactions will be allowed to make required data changes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cap-theorem"&gt;
  &lt;/a&gt;
  CAP THEOREM
&lt;/h2&gt;

&lt;p&gt;CAP Theorem (aka Eric Brewer Theorem) states that we cannot build a general data store that is continually available, sequentially consistent and tolerant to any partition failures. We can only achieve 2 features out of these 3.‚Äã A combination of 2 must be chosen and this is usually the deciding factor in what technology is used.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Consistency&lt;/strong&gt; - All the servers in the system will have the same data so users will get the same copy regardless of which server answers their request.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Availability&lt;/strong&gt; - The system will always respond to a request (even if it's not the latest data or consistent across the system or just a message saying the system isn't working).&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Partition Tolerance&lt;/strong&gt; - The system continues to operate as a whole even if individual servers fail or can't be reached.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fhDc1xmx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://shishirkumarblog.files.wordpress.com/2019/05/cap-theorem.png" alt="enter image description here"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#triggers"&gt;
  &lt;/a&gt;
  TRIGGERS
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Trigger:&lt;/strong&gt; A trigger is a stored procedure in a database that automatically invokes whenever a special event in the database occurs. For example, a trigger can be invoked when a row is inserted into a specified table or when certain table columns are being updated.&lt;/p&gt;

&lt;p&gt;Triggers can be run BEFORE or AFTER the triggering statement.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sql-normalization"&gt;
  &lt;/a&gt;
  SQL NORMALIZATION
&lt;/h2&gt;

&lt;p&gt;It is the process of structuring a database, following a series of &lt;code&gt;Normal Forms&lt;/code&gt; to reduce data redundancy and improve data integrity.&lt;/p&gt;

&lt;p&gt;Without Normalization in SQL, we may face many issues such as&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;Insertion anomaly&lt;/strong&gt;: It occurs when we cannot insert data to the table without the presence of another attribute&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Update anomaly&lt;/strong&gt;: It is a data inconsistency that results from data redundancy and a partial update of data.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Deletion Anomaly&lt;/strong&gt;: It occurs when certain attributes are lost because of the deletion of other attributes.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some &lt;a href="https://www.edureka.co/blog/normalization-in-sql/"&gt;examples&lt;/a&gt; of Normal Forms are 1NF, 2NF, 3NF, BCNF, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#database-isolation-levels"&gt;
  &lt;/a&gt;
  DATABASE ISOLATION LEVELS
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Database Isolation levels&lt;/strong&gt; control the degree of locking that occurs when selecting data.  This is to prevent reads and writes of temporary, aborted, or otherwise incorrect data written by concurrent transactions. For many database applications, the majority of database transactions can be constructed using isolation level priority rules, reducing the locking overhead for the system.&lt;/p&gt;

&lt;p&gt;These are the &lt;a href="https://en.wikipedia.org/wiki/Isolation_(database_systems)#Isolation_levels"&gt;priority rules&lt;/a&gt; for isolation levels.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Serializable&lt;/li&gt;
&lt;li&gt;Repeatable reads&lt;/li&gt;
&lt;li&gt;Read committed&lt;/li&gt;
&lt;li&gt;Read uncommitted&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.postgresql.org/docs/8.3/tutorial-transactions.html"&gt;Transactions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.essentialsql.com/sql-acid-database-properties-explained/"&gt;ACID: Resource 1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/acid-properties-in-dbms/"&gt;ACID: Resource 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.sqlshack.com/locking-sql-server/"&gt;Locking Mechanism&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://shishirkumarblog.wordpress.com/technical/sql-vs-nosql-the-cap-theorem/"&gt;CAP Theorem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.edureka.co/blog/normalization-in-sql/"&gt;Normalization&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Isolation_(database_systems)#Isolation_levels"&gt;Database Isolation Levels&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/sql-trigger-student-database/"&gt;Triggers&lt;/a&gt;&lt;/p&gt;

</description>
      <category>sql</category>
      <category>postgres</category>
      <category>database</category>
    </item>
    <item>
      <title>5 Best Creativity tools for Developers and Bloggers</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Sat, 04 Sep 2021 11:12:47 +0000</pubDate>
      <link>https://dev.to/rainboestrykr/5-best-creativity-tools-for-developers-and-bloggers-3dei</link>
      <guid>https://dev.to/rainboestrykr/5-best-creativity-tools-for-developers-and-bloggers-3dei</guid>
      <description>&lt;p&gt;Whether it be testing out markdown, creating your next viral blog cover, or making cool and minimal slides, we come across many creative tasks in our day to day life&lt;/p&gt;

&lt;p&gt;Thankfully, our solutions usually lie in the hands of the Internet.&lt;/p&gt;

&lt;p&gt;Today I present before you 5 of the best creative tools for developers and tech bloggers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PS: This list is just based on my opinions. Feel free to drop in your suggestions down in the comments. Also, most of these apps are open source.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-markdown-editor"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://markdownapp.vercel.app/"&gt;Markdown Editor&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Now we all need markdown, be it testing ideas for your next blog or writing a README for your next project and so this web app, is the perfect choice because of its wide range of features and you can also use it to download your files. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H3TAf_Du--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2p2wym7z3yqan1m6bpq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H3TAf_Du--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2p2wym7z3yqan1m6bpq.png" alt="s1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-blog-cover"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://blogcover.vercel.app/"&gt;Blog Cover&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Believe it or not, images always add spice to blogs, and we all try to get the best cover image and its sizes. So this app has built-in presets and sizes for Hashnode, Dev.to, and Medium cover images.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp0cD6ZP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wu3xy2q1e6q2bqo3hmcg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp0cD6ZP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wu3xy2q1e6q2bqo3hmcg.png" alt="s2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-mdslide"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://mdslide.vercel.app/"&gt;MDSlide&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Presentations or slides have become a part of our lives and to be honest, we all are bored with using the same old Microsoft Powerpoint. It's time to switch and MDSlide is the best option for developers. It uses the Markdown format for text to create sweet and minimal slides.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jRCK6UWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pycv5u2rv96kjuu2dks9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jRCK6UWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pycv5u2rv96kjuu2dks9.png" alt="s3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-codescreenshot"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://codekeep.io/screenshot"&gt;CodeScreenshot&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Are you looking to take a clean screenshot of your code along with your editor? But not getting the desired results? Well, ScreenshotStudio by Codekeep is here to help. This app helps you to copy and paste your code and it will generate clean screenshots for all of them with syntax highlighting and image effects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_i_HPdIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ts98l3k0zjyp52syt0h1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_i_HPdIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ts98l3k0zjyp52syt0h1.png" alt="s4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-404-illustrations"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://error404.fun/"&gt;404 Illustrations&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Are you almost finished with creating and designing your best website ever? &lt;br&gt;
Well, you almost forgot to create a beautiful and unique 404 page. A custom 404 page takes away the confusion of not landing on the page they had intended to land on. It lets your user know that there is an error with their request. Perhaps they mistyped the URL, the page is temporarily unavailable, or the page no longer exists. This app allows you to download awesome hand-drawn illustrations for your 404 pages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZxeEtR6a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldzi1d5pycxgv62uh1cn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZxeEtR6a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldzi1d5pycxgv62uh1cn.png" alt="s5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-time"&gt;
  &lt;/a&gt;
  Bonus time
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#notule"&gt;
  &lt;/a&gt;
  &lt;a href="http://hellohellohello.world"&gt;Notule&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This awesome app is a note-taking web app that syncs with your Google account. It supports markdown and has an awesome UI. Worth a try!&lt;/p&gt;

&lt;p&gt;Well, that's all from me for today. Hope this list helps you. &lt;/p&gt;

&lt;p&gt;And btw&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Q82KL1p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/brightestyoungthings.com/wp-content/uploads/2014/09/sadie-youre-welcome-gif.gif%3Ffit%3D500%252C227%26quality%3D100%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Q82KL1p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/brightestyoungthings.com/wp-content/uploads/2014/09/sadie-youre-welcome-gif.gif%3Ffit%3D500%252C227%26quality%3D100%26ssl%3D1" alt="welcome"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title> CSS Box-Model</title>
      <author>Ravi kumar</author>
      <pubDate>Sat, 04 Sep 2021 10:58:31 +0000</pubDate>
      <link>https://dev.to/ravikumar1002/css-box-model-1c29</link>
      <guid>https://dev.to/ravikumar1002/css-box-model-1c29</guid>
      <description>&lt;p&gt;CSS box model is a container which contains multiple properties including borders, margin, padding and the content itself. The web browser renders every element as a rectangular box according to the CSS box model.&lt;/p&gt;

&lt;p&gt;Box-Model has multiple properties in CSS. Some of them are given below: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;content&lt;/li&gt;
&lt;li&gt;padding&lt;/li&gt;
&lt;li&gt;border&lt;/li&gt;
&lt;li&gt;margin&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#content-area"&gt;
  &lt;/a&gt;
  Content area
&lt;/h2&gt;

&lt;p&gt;The innermost rectangle, known as the content area, may contain text or other visual elements. It is bounded by the content edge and its dimensions are given by content box width and height. If the element is a block element, then the content edge can also be set with the &lt;code&gt;min-width&lt;/code&gt;, &lt;code&gt;max-width&lt;/code&gt;, &lt;code&gt;min-height&lt;/code&gt;, &lt;code&gt;max-height&lt;/code&gt; properties.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V9SC3pZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctrzdvb2r0s9e78wujm3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V9SC3pZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctrzdvb2r0s9e78wujm3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If the &lt;code&gt;box-sizing&lt;/code&gt; property is set to &lt;code&gt;content-box&lt;/code&gt;, the content area's size can be explicitly defined with the  &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;min-width&lt;/code&gt;, &lt;code&gt;max-width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;min-height&lt;/code&gt;, and &lt;code&gt;max-height&lt;/code&gt; properties&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#padding-area"&gt;
  &lt;/a&gt;
  Padding area
&lt;/h2&gt;

&lt;p&gt;Padding is the space between the border and content of an element. Padding is an important element in web design because it helps make content more visible and readable. &lt;/p&gt;

&lt;p&gt;There are four padding properties,&lt;br&gt;
 &lt;code&gt;padding-top&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;padding-right&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;padding-bottom&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;padding-left&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gmsNR_b9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6un39opfk2w90izewdt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gmsNR_b9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6un39opfk2w90izewdt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All the padding properties can be changed independently or a short hand &lt;code&gt;padding&lt;/code&gt; property can be used to change all the values at once.&lt;br&gt;
Short hand properties syntax:&lt;br&gt;
&lt;code&gt;padding&lt;/code&gt;: &lt;code&gt;padding-top&lt;/code&gt;  &lt;code&gt;padding-right&lt;/code&gt;  &lt;code&gt;padding-bottom&lt;/code&gt; &lt;code&gt;padding-left&lt;/code&gt;;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#border-area"&gt;
  &lt;/a&gt;
  Border area
&lt;/h2&gt;

&lt;p&gt;It is the area between the box‚Äôs &lt;code&gt;padding&lt;/code&gt; and &lt;code&gt;margin&lt;/code&gt;. Its dimensions are given by the width and height of border.&lt;br&gt;
The borders are calculated by the &lt;code&gt;border-width&lt;/code&gt; and shorthand border properties. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uUP_t6yv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cgrak2den44mpsiula9c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uUP_t6yv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cgrak2den44mpsiula9c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Short hand &lt;code&gt;border&lt;/code&gt; properties syntax :&lt;br&gt;
  &lt;code&gt;border&lt;/code&gt;: &lt;code&gt;border-width&lt;/code&gt; &lt;code&gt;border-style&lt;/code&gt; &lt;code&gt;border-color&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;If the &lt;code&gt;box-sizing&lt;/code&gt; property is set to &lt;code&gt;border-box&lt;/code&gt;, the border area's size can be explicitly defined with the  &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;min-width&lt;/code&gt;, &lt;code&gt;max-width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;min-height&lt;/code&gt;, and &lt;code&gt;max-height&lt;/code&gt; properties&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#margin-area"&gt;
  &lt;/a&gt;
  Margin area
&lt;/h2&gt;

&lt;p&gt;The space around the elements can be set using the CSS &lt;code&gt;margin&lt;/code&gt; properties.&lt;/p&gt;

&lt;p&gt;There are four margin properties,&lt;br&gt;
 &lt;code&gt;margin-top&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;margin-bottom&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;margin-left&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;margin-right&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HcWTFjhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4nfq342jkkl9p270j834.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HcWTFjhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4nfq342jkkl9p270j834.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
In addition to the above four properties, we also have a short hand property called &lt;code&gt;margin&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;margin&lt;/code&gt; : &lt;code&gt;margin-top&lt;/code&gt; &lt;code&gt;margin-right&lt;/code&gt; &lt;code&gt;margin-bottom&lt;/code&gt; &lt;code&gt;margin-left&lt;/code&gt;;&lt;/p&gt;

&lt;p&gt;Margin clears the area around an element the difference is that it takes care of the area outside the border.The margins are transparent and cannot have any background colors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#calculating-overall-dimensions"&gt;
  &lt;/a&gt;
  Calculating Overall dimensions
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#how-to-calculate-the-total-width-of-the-box"&gt;
  &lt;/a&gt;
  How to calculate the total width of the box,
&lt;/h4&gt;

&lt;p&gt;The total width of the element would follow the following formula,&lt;br&gt;
    Total element &lt;code&gt;width&lt;/code&gt; = &lt;code&gt;width&lt;/code&gt; + &lt;code&gt;padding-left&lt;/code&gt; + &lt;code&gt;padding-right&lt;/code&gt; +  &lt;code&gt;border-left&lt;/code&gt; + &lt;code&gt;border-right&lt;/code&gt;  + &lt;code&gt;margin-left&lt;/code&gt; + &lt;code&gt;margin-right&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zIxqvbhJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmv5qtzpvof5glwbsqa9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zIxqvbhJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmv5qtzpvof5glwbsqa9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-calculate-the-total-height-of-the-box"&gt;
  &lt;/a&gt;
  How to calculate the total height of the box,
&lt;/h4&gt;

&lt;p&gt;The total height of the element would follow the following formula&lt;br&gt;
    Total element &lt;code&gt;height&lt;/code&gt; = &lt;code&gt;height&lt;/code&gt; + &lt;code&gt;padding-top&lt;/code&gt; + &lt;code&gt;padding-bottom&lt;/code&gt; + &lt;code&gt;border-top&lt;/code&gt; + &lt;code&gt;border-bottom&lt;/code&gt; + &lt;code&gt;margin-top&lt;/code&gt; + &lt;code&gt;margin-bottom&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NpGgHYyt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2dino0qn5t35o3gvgge.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NpGgHYyt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2dino0qn5t35o3gvgge.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After spending some time and getting familiar with the basics of the CSS Box Model, it can be helpful in designing the layouts efficiently.&lt;/p&gt;

</description>
      <category>boxmodel</category>
      <category>css</category>
      <category>design</category>
    </item>
    <item>
      <title>Notification API: Show notifications from your web app üîî</title>
      <author>Mohd Shahid</author>
      <pubDate>Sat, 04 Sep 2021 10:49:40 +0000</pubDate>
      <link>https://dev.to/sidmirza4/notification-api-show-notifications-from-your-web-app-3hkf</link>
      <guid>https://dev.to/sidmirza4/notification-api-show-notifications-from-your-web-app-3hkf</guid>
      <description>&lt;p&gt;Hey guys.&lt;br&gt;&lt;br&gt;
Notifications are vital if you want to drive traffic to your web applications.&lt;br&gt;&lt;br&gt;
Notifications can be shown even if the user is not active on your website/webapp.&lt;br&gt;&lt;br&gt;
Whether you are building an e-commerce website and want to show offers to your user or you are building a chatting application and want to show the notification about new messages.&lt;br&gt;&lt;br&gt;
Many top web applications like Slack, Facebook, WhatsApp and a lot more are using the same technology to show notifications.&lt;br&gt;&lt;br&gt;
Using Notifications API is lot more simpler than you might think.  &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction.
&lt;/h2&gt;

&lt;p&gt;The Notifications API allow developers to show notifications from their website or web application.&lt;br&gt;&lt;br&gt;
Notifications API is compatible with existing notifications system in your OS (Windows, Mac or Linux).  &lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#how-to-use-notifications-api"&gt;
  &lt;/a&gt;
  How to use Notifications API üí≠
&lt;/h2&gt;

&lt;p&gt;Notifications can be initialised using the class &lt;code&gt;Notification&lt;/code&gt; which is available globally.  &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#asking-for-permission"&gt;
  &lt;/a&gt;
  Asking for permission ‚¨áÔ∏è
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// asking user to grant the permission on page load&lt;/span&gt;
&lt;span class="c1"&gt;// to show notifications&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;load&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestPermission&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// permission cannot be asked again if the user chose&lt;/span&gt;
&lt;span class="c1"&gt;// to grant or deny the permission.&lt;/span&gt;
&lt;span class="c1"&gt;// once granted or denied, then user have to change the&lt;/span&gt;
&lt;span class="c1"&gt;// permission manually.&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h3&gt;
  &lt;a href="#checking-if-the-user-has-granted-the-permission"&gt;
  &lt;/a&gt;
  Checking if the user has granted the permission ‚¨áÔ∏è
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Result of the above console can be:&lt;br&gt;&lt;br&gt;
&lt;code&gt;default&lt;/code&gt;: Permission is not asked yet, notifications will not be shown.&lt;br&gt;&lt;br&gt;
&lt;code&gt;granted&lt;/code&gt;: User has granted the permission to show notifications.&lt;br&gt;&lt;br&gt;
&lt;code&gt;denied&lt;/code&gt;: User has declined the permission.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Alternatively, you can also use Permission API to check for the permission. More about it &lt;a href="https://dev.to/sidmirza4/permissions-api-why-should-you-start-using-it-2k4d"&gt;here&lt;/a&gt;.  &lt;/p&gt;
&lt;/blockquote&gt;



&lt;h3&gt;
  &lt;a href="#showing-notifications"&gt;
  &lt;/a&gt;
  Showing notifications üîî
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newMsgNotification&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;A new message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You have got a new message, check it out!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://images.unsplash.com/photo-1611605698335-8b1569810432?ixid=MnwxMjA3fDB8MHxzZWFyY2h8N3x8aWNvbnN8ZW58MHx8MHx8&amp;amp;ixlib=rb-1.2.1&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=500&amp;amp;q=60&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Above code shows the notification in my ubuntu something like this üëá&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F7Oq_ZCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c43ejapbxebnmwrp5pyf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F7Oq_ZCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c43ejapbxebnmwrp5pyf.png" alt="notif_example"&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;And that is it, this is as much that you need to know to get started, continue to know more.&lt;/em&gt;  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the above example you see &lt;code&gt;Notification&lt;/code&gt; class accepts 2 &lt;code&gt;arguments&lt;/code&gt;.  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;Title&lt;/code&gt; of the notification.
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Options&lt;/code&gt; object in which you can set settings for notifications.
&lt;/li&gt;
&lt;/ol&gt;



&lt;h3&gt;
  &lt;a href="#interacting-with-the-notifications"&gt;
  &lt;/a&gt;
  Interacting with the notifications:
&lt;/h3&gt;

&lt;p&gt;Users can also interact with the notification (like &lt;code&gt;click&lt;/code&gt; on the notification).&lt;br&gt;&lt;br&gt;
&lt;code&gt;EventListener&lt;/code&gt; can be added to notification instance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// navigate the user to you website when&lt;/span&gt;
&lt;span class="c1"&gt;// user click on a notification&lt;/span&gt;
&lt;span class="nx"&gt;newMsgNotification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://yourwebappurl.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;_blank&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In addition to &lt;code&gt;click&lt;/code&gt; listener, notification can listen to 3 more events:&lt;br&gt;&lt;br&gt;
&lt;code&gt;close&lt;/code&gt;: Fired when the notification is closed.&lt;br&gt;&lt;br&gt;
&lt;code&gt;error&lt;/code&gt;: Fired when the notification could not be shown for some reason.&lt;br&gt;&lt;br&gt;
&lt;code&gt;show&lt;/code&gt;: Fired when the notification in displayed.  &lt;/p&gt;




&lt;p&gt;That is it for this article guys, I hope you found it useful.&lt;br&gt;&lt;br&gt;
If you did please leave a like and share the article.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This is the basics of the Notification API, I wanted this post to be short and simple.&lt;br&gt;&lt;br&gt;
If you want to know more about it, please leave a comment below.&lt;/em&gt;  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thank you for giving it a read. ‚ù§Ô∏è&lt;br&gt;
Follow me on &lt;a href="https://twitter.com/sidmirza4"&gt;twitter&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>12 Ways To Reduce Carbon Footprints as a Full Stack Developer</title>
      <author>Ricardo Dantas</author>
      <pubDate>Sat, 04 Sep 2021 10:37:53 +0000</pubDate>
      <link>https://dev.to/ricardodantas/12-ways-to-reduce-carbon-footprints-as-a-full-stack-developer-imh</link>
      <guid>https://dev.to/ricardodantas/12-ways-to-reduce-carbon-footprints-as-a-full-stack-developer-imh</guid>
      <description>&lt;p&gt;Minimize CO2 emissions&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pqyp1Hp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/6000/0%2AEsNtJNcgTorVxyzy" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pqyp1Hp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/6000/0%2AEsNtJNcgTorVxyzy" alt="Photo by [Noah Buscher](https://cdn.hashnode.com/res/hashnode/image/upload/v1630750454649/DRixoSz2v.html) on [Unsplash](https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral)"&gt;&lt;/a&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@noahbuscher?utm_source=medium&amp;amp;utm_medium=referral"&gt;Noah Buscher&lt;/a&gt; on &lt;a href="https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We had an interesting presentation about Digital Sustainability at &lt;a href="https://dyna.mo/?utm_source=blog_ricardo_dantas&amp;amp;utm_campaign=sustainability&amp;amp;utm_medium=social&amp;amp;utm_term=sustainability&amp;amp;utm_content=sustainability"&gt;Dynamo&lt;/a&gt; recently that made me think about what I could do to reduce my ecological footprint in my day-to-day job as a full stack developer. That inspired me to write this post.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The simplest way to define ecological footprint would be to call it the impact of human activities measured in terms of the area of biologically productive land and water required to produce the goods consumed and to assimilate the wastes generated. More simply, it is the amount of the environment necessary to produce the goods and services necessary to support a particular lifestyle.&lt;/em&gt;&lt;br&gt;
‚Äî &lt;a href="https://wwf.panda.org/discover/knowledge_hub/teacher_resources/webfieldtrips/ecological_balance/eco_footprint/"&gt;WWF&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Did you know that the IT industry‚Äôs greenhouse gas emissions are &lt;a href="https://www.bbc.com/future/article/20200305-why-your-internet-habits-are-not-as-clean-as-you-think"&gt;predicted to reach 14%&lt;/a&gt; of global emissions by 2040? And that if the internet was a country, &lt;a href="https://www.sustainablewebmanifesto.com/#citation"&gt;it would be the 7th largest polluter&lt;/a&gt;? It‚Äôs impressive, isn‚Äôt it?&lt;/p&gt;

&lt;p&gt;Thinking about all the approaches I have used during my career to optimize web apps, e-commerce, and portals projects, I have concluded that the lighter and faster the application loads to the user, the more efficient energy consumption the application will have. So here are some tips you could use on your next project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#measure"&gt;
  &lt;/a&gt;
  Measure
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d09oToJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630750456218/ezk1MJK5G.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d09oToJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630750456218/ezk1MJK5G.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use tools like &lt;a href="https://www.websitecarbon.com/"&gt;WebsiteCarbon.com&lt;/a&gt; to measure how eco-friendly your website is. In addition, you can use &lt;a href="https://webkit.org/blog/8970/how-web-content-can-affect-power-usage/"&gt;Safari's Lighthouse on DevTools&lt;/a&gt; to measure its energy impact. Then, use the following tips to form an attack plan to solve the possible issues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#choose-renewable-energy-host-providers"&gt;
  &lt;/a&gt;
  Choose Renewable Energy Host Providers
&lt;/h2&gt;

&lt;p&gt;Host providers and data centers may not look like they use a lot of power, but they have thousands of computers to process data and the room gets very warm. They need to keep the air cool, so air conditioning systems are a must for this industry and those systems consume a lot of energy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.thegreenwebfoundation.org/"&gt;The Green Web Foundation&lt;/a&gt; is doing a fantastic job by &lt;a href="https://www.thegreenwebfoundation.org/directory/"&gt;providing a list&lt;/a&gt; of the most eco-friendly host providers in the world. Consider picking one of them for your next project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stop-daemons-and-servers-when-youre-not-using-them"&gt;
  &lt;/a&gt;
  Stop daemons and Servers When You‚Äôre Not Using Them
&lt;/h2&gt;

&lt;p&gt;When developers are coding apps they usually need several processes running on their local machines, in order to test and avoid crashing the live version of the app. However, eventually they will switch projects and forget to stop some of those background processes. As a result, they keep running forever or until someone notices a high consumption of memory or processing.&lt;/p&gt;

&lt;p&gt;By stopping unused servers and background processes you can drastically (depending on the type of process) reduce your memory, processing, and power consumption.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-dark-mode"&gt;
  &lt;/a&gt;
  Use Dark Mode
&lt;/h2&gt;

&lt;p&gt;If you‚Äôre using an OS that supports Dark Mode, or if you have apps that allow you to switch their theme to use darker colors, consider using it. Darker colors are &lt;a href="https://www.wired.com/story/give-yourself-to-dark-mode-side/"&gt;better for the eyes &lt;/a&gt;and can save battery and energy on both smartphones and laptops.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#turn-your-camera-off"&gt;
  &lt;/a&gt;
  Turn Your Camera Off
&lt;/h2&gt;

&lt;p&gt;In these difficult times, everyone is using tools like Google Meets, MS Teams, and Zoom for online meetings. This behavior has become part of our day-to-day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.sciencedaily.com/releases/2021/01/210114134033.htm"&gt;Research&lt;/a&gt; has revealed that one hour of video calling or Netflix streaming emits 150 to 1,000 grams of carbon dioxide. By turning your camera off during video calls, you can reduce your carbon footprint by 96%.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#optimize-fonts"&gt;
  &lt;/a&gt;
  Optimize Fonts
&lt;/h2&gt;

&lt;p&gt;By optimizing your font files you can reduce file sizes by up to 97%.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use modern web font formats such as WOFF and WOFF2. These formats use higher compression methods compared to TTF, OFT, and SVG file formats.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Give the browser the best chance at getting fonts right by preloading required fonts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Subset your fonts to include only the characters that are required.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#use-cdn-and-server-that-are-near-to-your-users"&gt;
  &lt;/a&gt;
  Use CDN and Server That Are Near to Your Users
&lt;/h2&gt;

&lt;p&gt;Using CDNs and servers that are nearer to your users will reduce traffic on telecom networks, which will considerably reduce the energy consumption used by their infra-structure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-amp-accelerated-mobile-pages"&gt;
  &lt;/a&gt;
  Use AMP (Accelerated Mobile Pages)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://amp.dev/"&gt;AMP&lt;/a&gt; makes content load faster on mobile devices by removing unnecessary code and file weight, rendering a minimalist version of the original web page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-static-web-pages"&gt;
  &lt;/a&gt;
  Use Static Web Pages
&lt;/h2&gt;

&lt;p&gt;Using server-side rendering solutions like WordPress will process the information to send back to the user each time someone tries to load a page. That causes the server to use more energy. You can use &lt;a href="https://jamstack.org/generators/"&gt;static generator tools&lt;/a&gt; to help you to distribute content that does not need to be fetched from databases every single pageview. You can also make it even better by using caching on the client side.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#do-not-use-gifs"&gt;
  &lt;/a&gt;
  Do Not Use GIFs
&lt;/h2&gt;

&lt;p&gt;GIF animations are fun but they create significantly larger file sizes, consuming a lot of traffic and energy. The good news is, you can replace them with the &lt;code&gt;&amp;amp;lt;video&amp;amp;gt;&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;video&lt;/span&gt; &lt;span class="na"&gt;autoplay&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt; &lt;span class="na"&gt;muted&lt;/span&gt; &lt;span class="na"&gt;playsinline&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/saving-energy.webm"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"video/webm"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/saving-energy.mp4"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"video/mp4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Note: The order of the &lt;code&gt;&amp;amp;lt;source&amp;amp;gt;&lt;/code&gt; tag matters! Specify the WebM &lt;code&gt;&amp;amp;lt;source&amp;amp;gt;&lt;/code&gt; first otherwise the browser will skip it and will play the mp4 version.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Use the Lighthouse tab, available in the DevTools to check your website for GIFs that can be converted to videos. If you have any GIFs that can be converted, you should see a suggestion to ‚ÄúUse video formats for animated content‚Äù in the report.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IRgO6HoO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630750458091/k7-meaCJu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IRgO6HoO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630750458091/k7-meaCJu.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#optimize-images"&gt;
  &lt;/a&gt;
  Optimize Images
&lt;/h2&gt;

&lt;p&gt;Images are the biggest contributors to page weight. The larger the image files you use, the more data needs to be transferred and the more energy is used. You can use some techniques and tools to solve this problem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-the-webp-format"&gt;
  &lt;/a&gt;
  Use the WebP format
&lt;/h3&gt;

&lt;p&gt;WebP images are smaller than JPEG and PNG, usually, it reaches a 25‚Äì35% reduction in file size. This decreases page sizes and improves performance. Using the approach below you make sure the browser will render the right image, even if it does not support WebP.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- 
The browser uses the first listed source that's in 
a format it supports. If the browser does not support 
any of the formats listed in the &amp;lt;source&amp;gt; tags, it 
falls back to loading the image specified by the &amp;lt;img&amp;gt; tag.
--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"green-environment.webp"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/jpeg"&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"green-environment.jpg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"green-environment.jpg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#lazy-load-images"&gt;
  &lt;/a&gt;
  Lazy load images
&lt;/h3&gt;

&lt;p&gt;You can do it natively! The most popular Chromium-powered browsers (Chrome, Edge, Opera) and Firefox support the &lt;code&gt;loading&lt;/code&gt;attribute on the image element. The implementation for Safari &lt;a href="https://bugs.webkit.org/show_bug.cgi?id=200764"&gt;is in progress&lt;/a&gt;. You also can check the availability of this feature on &lt;a href="https://caniuse.com/#feat=loading-lazy-attr"&gt;caniuse.com&lt;/a&gt;. Browsers that do not support the &lt;code&gt;loading&lt;/code&gt; attribute simply ignore it without side-effects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"image.png"&lt;/span&gt; &lt;span class="na"&gt;loading=&lt;/span&gt;&lt;span class="s"&gt;"lazy"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"‚Ä¶"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"200"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"200"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check more details about the lazy loading attributes on the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading"&gt;MDN documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#image-optimization-tools"&gt;
  &lt;/a&gt;
  Image optimization tools
&lt;/h3&gt;

&lt;p&gt;You can use tools like &lt;a href="https://tinypng.com/"&gt;TinyPNG&lt;/a&gt;, &lt;a href="https://tinyjpg.com/"&gt;TinyJPG&lt;/a&gt;, &lt;a href="https://svghero.app/?utm_source=blog_ricardo_dantas&amp;amp;utm_campaign=sustainability&amp;amp;utm_medium=social&amp;amp;utm_term=sustainability&amp;amp;utm_content=sustainability"&gt;SvgHero&lt;/a&gt;, and &lt;a href="https://shortpixel.com/"&gt;ShortPixel&lt;/a&gt;. You can also use packages like &lt;a href="https://github.com/tcoopman/image-webpack-loader"&gt;image-webpack-loader&lt;/a&gt; , &lt;a href="https://github.com/sindresorhus/gulp-imagemin"&gt;gulp-imagemin&lt;/a&gt; or &lt;a href="https://github.com/gruntjs/grunt-contrib-imagemin"&gt;grunt-contrib-imagemin&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stop-using-google-search"&gt;
  &lt;/a&gt;
  Stop Using Google Search
&lt;/h2&gt;

&lt;p&gt;The artist &lt;a href="http://www.janavirgin.com/CO2/"&gt;&lt;strong&gt;Joana Moll **created&lt;/strong&gt; &lt;strong&gt;a&lt;/strong&gt; **project&lt;/a&gt; in which users can know how many kilograms of CO2 are emitted by Google search since you access the website.&lt;/p&gt;

&lt;p&gt;There is a nice alternative to Google: &lt;a href="https://www.ecosia.org/"&gt;Ecosia&lt;/a&gt; search engine! Ecosia is not only &lt;a href="https://blog.ecosia.org/why-carbon-neutral-is-not-enough-ecosia-has-built-its-own-solar-plants/"&gt;an eco-friendly search engine&lt;/a&gt; but also &lt;a href="https://info.ecosia.org/privacy"&gt;privacy-friendly&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Reducing the footprint of tech is not only all about reducing energy consumption, it‚Äôs a win-win game!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The companies get to optimize their resources consumption and their costs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The user has a better experience with faster and lighter apps&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The environment will have a significant reduction of pollution.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Do you know some more tips to make it even more eco-friendly?&lt;/strong&gt; Feel free to share in the comments area!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-engaged"&gt;
  &lt;/a&gt;
  Get Engaged
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://climateaction.tech"&gt;ClimateAction.Tech&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.sustainablewebmanifesto.com"&gt;Sustainable Web Manifesto&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://opensustain.tech/"&gt;Open Sustainable Technology&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://webkit.org/blog/8970/how-web-content-can-affect-power-usage/"&gt;How Web Content Can Affect Power Usage&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.wholegraindigital.com/blog/website-energy-efficiency/"&gt;17 ways to make your website more energy efficient&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ecoping.earth/indexes/world/gatsby/"&gt;Ecoping.earth&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ecograder.com"&gt;Ecograder&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://web.dev/"&gt;web.dev&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>javascript</category>
      <category>sustainability</category>
    </item>
    <item>
      <title>Working With Regex Expressions In Python</title>
      <author>Dennis O'Keeffe</author>
      <pubDate>Sat, 04 Sep 2021 10:15:12 +0000</pubDate>
      <link>https://dev.to/okeeffed/working-with-regex-expressions-in-python-48m0</link>
      <guid>https://dev.to/okeeffed/working-with-regex-expressions-in-python-48m0</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;I write content for AWS, Kubernetes, Python, JavaScript and more. To view all the latest content, be sure to &lt;a href="https://blog.dennisokeeffe.com"&gt;visit my blog&lt;/a&gt; and subscribe to my newsletter. &lt;a href="https://twitter.com/dennisokeeffe92"&gt;Follow me on Twitter&lt;/a&gt;.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is Day 14 of the #100DaysOfPython challenge&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This post will use the &lt;a href="https://docs.python.org/3/library/re.html"&gt;regular expressions module&lt;/a&gt; from the standard library to ... .&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Familiarity with &lt;a href="https://pipenv.pypa.io/en/latest/"&gt;Pipenv&lt;/a&gt;. See &lt;a href="https://blog.dennisokeeffe.com/blog/2020-07-04-abcs-of-pipenv"&gt;here&lt;/a&gt; for my post on Pipenv.&lt;/li&gt;
&lt;li&gt;Familiarity with &lt;a href="https://jupyterlab.readthedocs.io/en/stable/gettingstarted/install.html"&gt;JupyterLab&lt;/a&gt;. See &lt;a href="https://blog.dennisokeeffe.com/blog/2021-07-19-hello-jupyter-notebook"&gt;here&lt;/a&gt; for my post on JupyterLab.&lt;/li&gt;
&lt;li&gt;Familiarity with &lt;a href="https://www.regular-expressions.info/"&gt;Regular Expressions&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;p&gt;Let's create the &lt;code&gt;hello-python-regex&lt;/code&gt; directory and install Pillow.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight r"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Make the `hello-python-regex` directory&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;regex&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;regex&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c1"&gt;# Create a folder to place your icons&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;icons&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c1"&gt;# Init the virtual environment&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pipenv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;three&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pipenv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;jupyterlab&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this stage, we can start up the notebook server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight r"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Startup the notebook server&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pipenv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;jupyter&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lab&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c1"&gt;# ... Server is now running on http://localhost:8888/lab&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The server will now be up and running.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-notebook"&gt;
  &lt;/a&gt;
  Creating the notebook
&lt;/h2&gt;

&lt;p&gt;Once on &lt;a href="http://localhost:8888/lab"&gt;http://localhost:8888/lab&lt;/a&gt;, select to create a new Python 3 notebook from the launcher.&lt;/p&gt;

&lt;p&gt;Ensure that this notebook is saved in &lt;code&gt;hello-python-regex/docs/regex.ipynb&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We will explore the following in each cell of the notebook:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Importing the Regex module.&lt;/li&gt;
&lt;li&gt;A basic usage of the Regex module.&lt;/li&gt;
&lt;li&gt;String replacement with the Regex module.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#importing-the-module"&gt;
  &lt;/a&gt;
  Importing the module
&lt;/h2&gt;

&lt;p&gt;This imports the &lt;a href="https://docs.python.org/3/library/re.html"&gt;regex module&lt;/a&gt; from the standard library.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, (.+)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Hello, world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# 'world!'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#basic-usage-of-the-module"&gt;
  &lt;/a&gt;
  Basic usage of the module
&lt;/h2&gt;

&lt;p&gt;There are a number of useful module methods that we can use that we will demonstrate:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Searching strings.&lt;/li&gt;
&lt;li&gt;Matching strings.&lt;/li&gt;
&lt;li&gt;Usage without compile.&lt;/li&gt;
&lt;li&gt;Splitting a string into a list.&lt;/li&gt;
&lt;li&gt;Replacing matches.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#searching-strings"&gt;
  &lt;/a&gt;
  Searching strings
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Scan through string looking for the first location where this regular expression produces a match, and return a corresponding match object. Return None if no position in the string matches the pattern; note that this is different from finding a zero-length match at some point in the string.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ello, (.+)"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;re.Match object; span=(0, 13), match='Hello, world!'&amp;gt;
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# world!
&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, world!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;re.Match object; span=(0, 13), match='Hello, world!'&amp;gt;
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# world!
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#matching-strings"&gt;
  &lt;/a&gt;
  Matching strings
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;If zero or more characters at the beginning of string match this regular expression, return a corresponding match object. Return None if the string does not match the pattern; note that this is different from a zero-length match.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ello, (.+)"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# No match as "e" is the 2nd character the "Hello, world!".
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# None
&lt;/span&gt;
&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, (.+)"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Does match
&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;re.Match object; span=(0, 13), match='Hello, world!'&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#usage-without-compile"&gt;
  &lt;/a&gt;
  Usage without compile
&lt;/h2&gt;

&lt;p&gt;When you use &lt;code&gt;re.match&lt;/code&gt; and &lt;code&gt;re.search&lt;/code&gt; as a static method, you can pass the Regex as the first argument:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, (.+)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Hello, world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;re.Match object; span=(0, 13), match='Hello, world!'&amp;gt;
&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, (.+)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Hello, world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;re.Match object; span=(0, 13), match='Hello, world!'&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#splitting-a-string-into-a-list"&gt;
  &lt;/a&gt;
  Splitting a string into a list
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;","&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Hello, world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# ['Hello', ' world!']
&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Hello beautiful world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# ['Hello', 'beautiful', 'world!']
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#replacing-matches"&gt;
  &lt;/a&gt;
  Replacing matches
&lt;/h2&gt;

&lt;p&gt;We can make use of the &lt;code&gt;search&lt;/code&gt; and &lt;code&gt;sub&lt;/code&gt; methods to replace matches.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Simple example
&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Photo credit by [@thomas](https://site.com/@thomas)"&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;"Photo credit by \[@(.+)\]\(https://site.com/@(.+)\)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"dennis"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Photo credit by [@dennis](https://site.com/@dennis)
&lt;/span&gt;
&lt;span class="c1"&gt;# By iterating for multiple matches
&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Photo credit by [@thomas](https://site.com/@user)"&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;"Photo credit by \[@(.+)\]\(https://site.com/@(.+)\)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt;
        &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"dennis"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Photo credit by [@dennis](https://site.com/@dennis)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For a more specific replacement (particularly in a large set of text), we can be more explicit with the string to replace:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"""
Other words thomas and user we don't want to replace.
Photo credit by [@thomas](https://site.com/@user)
"""&lt;/span&gt;
&lt;span class="n"&gt;new_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"dennis"&lt;/span&gt;

&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;"Photo credit by \[@(.+)\]\(https://site.com/@(.+)\)"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Photo credit by [@&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;new_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;](https://site.com/@&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;new_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Other words thomas and user we don't want to replace.
# Photo credit by [@dennis](https://site.com/@dennis)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Today's post demonstrated how to use the &lt;code&gt;re&lt;/code&gt; module from the standard library to search, match, split and replace text in Python strings.&lt;/p&gt;

&lt;p&gt;This can be unbelievably useful when working with text files.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources-and-further-reading"&gt;
  &lt;/a&gt;
  Resources and further reading
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://blog.dennisokeeffe.com/blog/2020-07-04-abcs-of-pipenv"&gt;The ABCs of Pipenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.dennisokeeffe.com/blog/2021-07-19-hello-jupyter-notebook"&gt;Hello, JupyterLab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pipenv.pypa.io/en/latest/"&gt;Pipenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/re.html"&gt;Regular Expressions in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.regular-expressions.info/"&gt;Info on Regular Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://regex101.com/"&gt;Regex 101 - website for testing Regex expressions&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Photo credit: &lt;a href="https://unsplash.com/@pawel_czerwinski"&gt;&lt;code&gt;pawel_czerwinski&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally posted on my &lt;a href="https://blog.dennisokeeffe.com/blog/2021-08-02-working-with-regex-expressions-in-python"&gt;blog&lt;/a&gt;. To see new posts without delay, read the posts there and subscribe to my newsletter.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>python</category>
      <category>100daysofpython</category>
    </item>
  </channel>
</rss>
