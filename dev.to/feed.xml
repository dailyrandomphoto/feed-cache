<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Install ReactJS on MacOS?</title>
      <author>Code_Jedi</author>
      <pubDate>Wed, 27 Oct 2021 17:29:54 +0000</pubDate>
      <link>https://dev.to/code_jedi/how-to-install-reactjs-on-macos-4hio</link>
      <guid>https://dev.to/code_jedi/how-to-install-reactjs-on-macos-4hio</guid>
      <description>&lt;p&gt;&lt;a href="https://reactjs.org/"&gt;ReactJS&lt;/a&gt; is a free and open-source front-end JavaScript library created by Facebook in 2013. ReactJS is a User Interface (UI) library, and it is used for building and manipulating UI components.&lt;br&gt;
In this article, I will be walking you through the full ReactJS installation process on MacOS in detail. I will be covering:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;NodeJS and NPM installation.&lt;/li&gt;
&lt;li&gt;ReactJS library installation.&lt;/li&gt;
&lt;li&gt;Creating a ReactJS project.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#nodejs-and-npm"&gt;
  &lt;/a&gt;
  NodeJS and NPM:
&lt;/h2&gt;

&lt;p&gt;In order to install ReactJS on MacOS, you must first have NodeJS and NPM installed. NodeJS is a JavaScript runtime which makes it possible to run JavaScript outside of the browser. NPM(node package manager) is used to install libraries such as ReactJS on the command line.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#installing-nodejs-amp-npm"&gt;
  &lt;/a&gt;
  Installing Nodejs &amp;amp; NPM:
&lt;/h3&gt;

&lt;p&gt;The only way you can install NodeJS is through their &lt;a href="https://nodejs.org/"&gt;official website&lt;/a&gt;. Installing NodeJS will also automatically download NPM on your machine. You can find their NodeJS downloads section &lt;a href="https://nodejs.org/download/"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nxzaYTyk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5c5310ya9zbtin2yul6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nxzaYTyk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5c5310ya9zbtin2yul6.png" alt="Download for MacOS" width="880" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you've downloaded NodeJS through their website, you should find the downloaded ".pkg" file inside of your downloads folder. Simply open this ".pkg" file by double-clicking on it and you will be prompted with a pop-up containing info about the NodeJS and NPM installation process.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QaTxP6YW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5pe5px8e72fud55os0z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QaTxP6YW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5pe5px8e72fud55os0z.png" alt="Pop-up" width="880" height="637"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simply go through the next sections in this pop-up, and you will be prompted with this message once you get to the "Installation Type" section:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M3xc4SP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e98jk4auauhgsp88il9w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M3xc4SP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e98jk4auauhgsp88il9w.png" alt="Install confirmation" width="880" height="638"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on "Install", or if you want to change the install location, click on "Change Install Location". This will start the NodeJS and NPM installation process. Once finished, you will be prompted with a final message displaying the location where NodeJS and NPM are installed. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--he0GkQHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fqfvtevfzx2wlf8who9i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--he0GkQHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fqfvtevfzx2wlf8who9i.png" alt="Node.js location" width="880" height="626"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As stated in the pop-up, to have access to NodeJS and NPM from your project's directory, make sure that "/usr/local/bin" is in your project's "$PATH". To add "/usr/local/bin" to your "$PATH" on MacOS, run the following command in your project's terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export PATH=/usr/local/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can then click "Close" to close the pop-up.&lt;/p&gt;

&lt;p&gt;To check if both NodeJS and NPM were installed successfully, in your project's terminal, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will return your NodeJS and NPM versions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-reactjs-on-macos"&gt;
  &lt;/a&gt;
  Installing ReactJS on MacOS:
&lt;/h2&gt;

&lt;p&gt;Now that you have NodeJS and NPM installed, You should now be able to install ReactJS in your project's directory by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save react react-dom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-a-reactjs-project"&gt;
  &lt;/a&gt;
  Creating a ReactJS project:
&lt;/h2&gt;

&lt;p&gt;Now that you have ReactJS installed, you can create a new react project directory by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app my-react-project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a new project directory named "my-react-project" that will look something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4_oA9Epv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pr4nsimtaijme0vpqbsg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4_oA9Epv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pr4nsimtaijme0vpqbsg.png" alt="A react project structure" width="381" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can then open a terminal window inside of this react project by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd my-react-project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you're inside a terminal window inside of this react project, you can finally run the following command to start a development server on "localhost:3000":&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xqE8Nftl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jy0xskm83arzmje8pe5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xqE8Nftl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jy0xskm83arzmje8pe5x.png" alt="Local react development server" width="880" height="514"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>10 Sourcegraph Search Tricks for Open Source Contributors and Maintainers</title>
      <author>Erika Heidi</author>
      <pubDate>Wed, 27 Oct 2021 17:07:16 +0000</pubDate>
      <link>https://dev.to/sourcegraph/10-sourcegraph-search-tricks-for-open-source-contributors-and-maintainers-44n9</link>
      <guid>https://dev.to/sourcegraph/10-sourcegraph-search-tricks-for-open-source-contributors-and-maintainers-44n9</guid>
      <description>&lt;p&gt;October is nearly finished, which means &lt;a href="https://hacktoberfest.com"&gt;Hacktoberfest&lt;/a&gt; is on the hearts and minds of developers around the world, with many last-minute participants. And although the idea of contributing to open source and getting some cool swag is very inviting for most devs (including myself), I know that finding the right project as well as the right issue where you can be helpful can become a challenging task for contributors.&lt;/p&gt;

&lt;p&gt;One of the biggest challenges of open source project maintainers, especially during Hacktoberfest, is to scope issues to all different skill levels of potential contributors. "Good first issues" are easier to spot, but intermediate to advanced issues are often full of unknowns and require a deeper dive into the codebase.&lt;/p&gt;

&lt;p&gt;Apart from enabling contributors to efficiently navigate codebases of all sizes, a comprehensive code search tool like &lt;a href="https://sourcegraph.com"&gt;Sourcegraph&lt;/a&gt; can be helpful to find more specific issues in open source projects that may have not (yet) been flagged by maintainers. Such problems can range from outdated dependencies to the use of functionality that is about to be deprecated in future releases.&lt;/p&gt;

&lt;p&gt;In this post, you'll learn 10 Sourcegraph search tricks to help identify projects and issues where your contribution can really make a difference. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-find-projects-that-welcome-contributions"&gt;
  &lt;/a&gt;
  1. Find projects that welcome contributions
&lt;/h2&gt;

&lt;p&gt;Repositories that have documentation around how to contribute are usually very friendly towards contributions, with tagged issues and contribution guidelines that will make it easier for your pull request to be considered valid and accepted into the project. To be sure you're looking for documentation, include the &lt;code&gt;lang:Markdown&lt;/code&gt; filter.&lt;/p&gt;

&lt;p&gt;The following query will run a global search on open source repositories for the string &lt;code&gt;contributing&lt;/code&gt; in markdown files:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;contributing lang:Markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+contributing+lang:Markdown+&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+contributing+lang:Markdown+&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To search repositories with documentation specific to Hacktoberfest, you can use the following search:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hacktoberfest lang:Markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+hacktoberfest+lang:Markdown+&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+hacktoberfest+lang:Markdown+&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkGjJM_i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34kytfm4t4znysgo9gm2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkGjJM_i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34kytfm4t4znysgo9gm2.png" alt="Sourcegraph search: finding repositories that welcome contributions" width="880" height="602"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-find-hacktoberfestfriendly-projects-using-a-certain-language-or-framework"&gt;
  &lt;/a&gt;
  2. Find Hacktoberfest-friendly projects using a certain language or framework
&lt;/h2&gt;

&lt;p&gt;While looking for your next project to contribute to, you can include a filter to only select repositories which contain a certain file. This allows you to search for projects that have a known structure or a file that is very specific. For instance, if I were to search for PHP projects that are hacktoberfest-friendly, I could include a filter to only return repositories that contain a &lt;code&gt;composer.json&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hacktoberfest lang:Markdown repohasfile:"^composer.json$" patterntype:regexp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+hacktoberfest+lang:Markdown+repohasfile:%22%5Ecomposer.json%24%22&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+hacktoberfest+lang:Markdown+repohasfile:%22%5Ecomposer.json%24%22&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This query  uses the &lt;code&gt;regexp&lt;/code&gt; pattern type to search for a file with the exact name of &lt;code&gt;composer.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Similarly, you could look for a hacktoberfest-friendly Laravel project by using &lt;code&gt;artisan&lt;/code&gt; as a filter in your search:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hacktoberfest lang:Markdown repohasfile:"^artisan$" patterntype:regexp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+hacktoberfest+lang:Markdown+repohasfile:%22artisan%22&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+hacktoberfest+lang:Markdown+repohasfile:%22artisan%22&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pKVkE6su--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqprnipyiugkzmwbbd2c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pKVkE6su--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqprnipyiugkzmwbbd2c.png" alt="Sourcegraph search: hacktoberfest friendly repositories that contain a specific file" width="880" height="602"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-find-projects-that-rely-on-specific-dependencies"&gt;
  &lt;/a&gt;
  3. Find projects that rely on specific dependencies
&lt;/h2&gt;

&lt;p&gt;If you are a maintainer, looking for all repositories that depend on your library can be a fun experiment, and you can also use this trick to find projects using libraries you are very familiar with. This way, you might be able to provide meaningful help in issues that are aligned with your background and expertise.&lt;/p&gt;

&lt;p&gt;For example, the following query will look for projects that reference &lt;a href="https://tailwindcss.com"&gt;TailwindCSS&lt;/a&gt; as a dependency within their &lt;code&gt;package.json&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search String:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;tailwindcss file:package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+file:package.json+tailwindcss&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+file:package.json+tailwindcss&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fWWN1FDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjt5s2fh7ldlmyf5cwvj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fWWN1FDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjt5s2fh7ldlmyf5cwvj.png" alt="Sourcegraph search: projects that have a specific dependency" width="880" height="602"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You could combine this search with the &lt;code&gt;repohasfile&lt;/code&gt; filter to filter the results down to a specific language or framework. For example, the following query limits results from the previous query to repositories containing a &lt;code&gt;composer.json&lt;/code&gt; file (for PHP):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;file:package.json tailwindcss repohasfile:"composer.json" patterntype:regexp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+file:package.json+tailwindcss+repohasfile:%22composer.json%22&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+file:package.json+tailwindcss+repohasfile:%22composer.json%22&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-find-how-an-object-is-used-across-multiple-repositories"&gt;
  &lt;/a&gt;
  4. Find how an object is used across multiple repositories
&lt;/h2&gt;

&lt;p&gt;Developers of all levels and backgrounds often find themselves in a situation where documentation is not available for a method, and just looking at the method signature isn't enough to understand where the parameters come from. You need a real example to see the connections between different components of the application. &lt;/p&gt;

&lt;p&gt;The following search query will look into all repositories inside the &lt;a href="https://github.com/minicli"&gt;minicli&lt;/a&gt; organization on GitHub, and return all occurrences for when a new object of type &lt;code&gt;TableHelper&lt;/code&gt; was created:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repo:^github\.com/minicli/.* new TableHelper lang:PHP
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/minicli/.*+new+TableHelper+lang:PHP&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/minicli/.*+new+TableHelper+lang:PHP&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C4phzDKc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2oivbbyxbdlmfprkteya.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C4phzDKc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2oivbbyxbdlmfprkteya.png" alt="Sourcegraph search: how an object is used across repositories in an organization" width="880" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The search results give you context around the fact that the &lt;code&gt;TableHelper&lt;/code&gt; class can be instantiated with an optional argument. To see the full code, you can click on the code snippet, and that will bring you to the full contents of that file. &lt;/p&gt;

&lt;p&gt;Now let's say you have a method call that can accept an optional second parameter, and you want to only look for cases where the second parameter is provided. For that you can use &lt;a href="https://docs.sourcegraph.com/code_search/reference/structural"&gt;structural search&lt;/a&gt;, which will give you the ability to search for code patterns.&lt;/p&gt;

&lt;p&gt;For example, the method &lt;code&gt;getPrinter()-&amp;gt;out()&lt;/code&gt; is used in Minicli to output messages in the command line, and accepts a mandatory first parameter (text to be printed) and an optional second parameter that specifies the color style. The following query will search for instances where the custom style was applied, within the repositories of the Minicli organization on GitHub:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search String:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repo:^github\.com/minicli/.* getPrinter()-&amp;gt;out(...,...) patterntype:structural
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/minicli/.*+getPrinter%28%29-%3Eout%28...%2C...%29&amp;amp;patternType=structural"&gt;https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/minicli/.*+getPrinter%28%29-%3Eout%28...%2C...%29&amp;amp;patternType=structural&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yd-J_XNx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/364b7b16wudkygxtnfjw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yd-J_XNx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/364b7b16wudkygxtnfjw.png" alt="Sourcegraph search: using structural search for specific method call" width="880" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-find-keys-and-secrets-that-should-not-have-been-committed-to-the-codebase"&gt;
  &lt;/a&gt;
  5. Find keys and secrets that should not have been committed to the codebase
&lt;/h2&gt;

&lt;p&gt;It is not uncommon that a key or secret is committed to a code versioning system by mistake. This can happen to anyone, especially in new projects.&lt;/p&gt;

&lt;p&gt;The following query will use the &lt;code&gt;regexp&lt;/code&gt; pattern type to search for files with content that looks like an API key token or secret. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search String:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repo:^github\.com/sourcegraph/.* (key|secret|token)-[\w+]{32,} patterntype:regexp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/sourcegraph/.*+%28key%7Csecret%7Ctoken%29-%5B%5Cw%2B%5D%7B32%2C%7D&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/sourcegraph/.*+%28key%7Csecret%7Ctoken%29-%5B%5Cw%2B%5D%7B32%2C%7D&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-find-usage-of-compromised-dependencies"&gt;
  &lt;/a&gt;
  6. Find usage of compromised dependencies
&lt;/h2&gt;

&lt;p&gt;Every now and then we hear about libraries being compromised with malware and other suspicious code. A new technique called "package typosquatting"() exploits the popularity of framework libraries to share malicious code as packages with a similar name, which can go unnoticed for a while under a big dependency tree. That's what &lt;a href="https://www.kernelmode.blog/typosquatting-malware-found-in-composer-repository/"&gt;happened recently&lt;/a&gt; in PHP land with the &lt;code&gt;symfont/process&lt;/code&gt; package, a malware disguised as Symfony package that would open up a web shell for attackers to exploit the server.&lt;/p&gt;

&lt;p&gt;A global search for the &lt;code&gt;symfont/process&lt;/code&gt; package in JSON files indicates that most PHP projects have already removed this dependency from their &lt;code&gt;composer.json&lt;/code&gt; files, while some cached lock files still contain a reference to the library:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;symfont/process lang:JSON
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+symfont/process+lang:JSON+&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+symfont/process+lang:JSON+&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xIqLNBR---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91p6t43106klsjxbrl1a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xIqLNBR---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91p6t43106klsjxbrl1a.png" alt="Sourcegraph search: find usage of compromised libraries" width="880" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You could use a similar search to look for compromised NPM packages, since they are also defined in a JSON file. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-audit-an-organization-for-outdated-or-vulnerable-dependencies-across-repositories"&gt;
  &lt;/a&gt;
  7. Audit an organization for outdated or vulnerable dependencies across repositories
&lt;/h2&gt;

&lt;p&gt;Outdated dependencies can become an issue for maintainers, especially when they represent a security vulnerability. For instance, the &lt;a href="https://snyk.io/vuln/npm:lodash"&gt;lodash&lt;/a&gt; NPM package has a history of known CVEs. The latest critical issue was reported on &lt;a href="https://snyk.io/test/npm/lodash/4.17.19"&gt;version &lt;code&gt;4.17.19&lt;/code&gt; &lt;/a&gt;. The following query will search for this specific &lt;code&gt;lodash&lt;/code&gt; version globally, using &lt;code&gt;regexp&lt;/code&gt; as search pattern type:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;file:package.json lodash 4.17.19 patterntype:regexp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+file:package.json+lodash+4.17.19&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+file:package.json+lodash+4.17.19&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-find-code-that-is-not-up-to-language-standards-across-multiple-repositories"&gt;
  &lt;/a&gt;
  8. Find code that is not up to language standards across multiple repositories
&lt;/h2&gt;

&lt;p&gt;Most programming languages have a superset of rules that are adopted by the community as standards, even though they are not syntactically enforced. With a single search, you can identify code that does not follow certain coding standards, which can be helpful for both maintainers and contributors working across multiple repositories.&lt;br&gt;
For instance, the following query will search globally for code that doesn't adhere to the &lt;a href="https://www.php-fig.org/psr/psr-12/"&gt;PSR-12&lt;/a&gt; PHP coding standards, which advises you to use one blank space character between the &lt;code&gt;if&lt;/code&gt; keyword and the opening parenthesis of the evaluation expression:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search String:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;lang:PHP ^if([(...)]) patterntype:regexp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+lang:PHP+%5Eif%28%5B%28...%29%5D%29&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+lang:PHP+%5Eif%28%5B%28...%29%5D%29&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cJ6D6yAX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oh9msmwspjlqdtnkbsnr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cJ6D6yAX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oh9msmwspjlqdtnkbsnr.png" alt="Sourcegraph Search: find code that doesn't adhere to language standards" width="880" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-search-for-recent-changes-in-large-or-multiple-projects"&gt;
  &lt;/a&gt;
  9. Search for recent changes in large or multiple projects
&lt;/h2&gt;

&lt;p&gt;If you are a regular user of larger projects such as frameworks or CMSs, you may want to be watching for any recent changes to be on top of new features. This also might be useful if you update to a newer version and start facing issues that are difficult to debug, or if your website is down after a code update and you are not sure what may have caused the issue.&lt;/p&gt;

&lt;p&gt;The following search query will look for recent commits on the Laravel framework and list all changes merged in the past week:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/laravel/laravel%24+type:commit+after:lastweek"&gt;https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/laravel/laravel%24+type:commit+after:lastweek&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search String&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repo:^github\.com/laravel/laravel$ type:commit after:lastweek
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more context, you can change the search &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;diff&lt;/code&gt;, and this will give you the information about the commit &lt;em&gt;diff&lt;/em&gt;, or in other words what changed after the commit was merged. The following query will search for recent changes in all Laravel repositories, showing the corresponding diff for each change:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search String&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repo:^github\.com/laravel/.*  type:diff after:lastweek
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/laravel/.*++type:diff+after:lastweek&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/laravel/.*++type:diff+after:lastweek&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ngh-Fk5Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6kzi5vk6v5q5nbi3juam.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ngh-Fk5Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6kzi5vk6v5q5nbi3juam.png" alt="Sourcegraph search: finding the recent changes in a project" width="880" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This provides a quick way to look for recent changes. To nail it down and reduce the number of results, you may want to specify the type of file you want to see in the results with &lt;code&gt;lang:PHP&lt;/code&gt; for instance to show only &lt;code&gt;.php&lt;/code&gt; files in the result.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-find-deprecated-function-calls-among-oss-projects-in-your-language-of-choice"&gt;
  &lt;/a&gt;
  10. Find deprecated function calls among OSS projects in your language of choice
&lt;/h2&gt;

&lt;p&gt;When working with languages and frameworks that evolve rapidly, it might be useful to be on the lookout for deprecated function calls, and usage of methods that are about to be deprecated in future releases.&lt;/p&gt;

&lt;p&gt;As an example, the new PHP 8.1 release will remove several methods that have been marked as deprecated, which will cause backwards compatibility issues for projects using those methods. The &lt;code&gt;mhash()&lt;/code&gt; method is part of the list of methods to be deprecated.&lt;/p&gt;

&lt;p&gt;The following query will use &lt;a href="https://docs.sourcegraph.com/code_search/reference/structural"&gt;structural search&lt;/a&gt; to look for &lt;code&gt;mhash&lt;/code&gt; method calls on all open source projects currently indexed:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search Query:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mhash(...) lang:PHP select:content patterntype:structural
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+mhash%28...%29+lang:PHP+select:content&amp;amp;patternType=structural"&gt;https://sourcegraph.com/search?q=context:global+mhash%28...%29+lang:PHP+select:content&amp;amp;patternType=structural&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DauaJC6y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czink9hvhq5e1qawhq8g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DauaJC6y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czink9hvhq5e1qawhq8g.png" alt="Sourcegraph search: find deprecated method calls across repositories" width="880" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The structural search can be extremely helpful for refactoring code in situations like this, for projects in any language. Just replace the &lt;code&gt;lang&lt;/code&gt; with your preferred language and the search string with the method you want to search for.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Advanced code search can give you the insights you miss from only looking at the surface of things. That can be extremely useful when working with open source software, since contributors hardly have the time for long deep dives into the code and need a quick onboarding to the project. Maintainers can also benefit from advanced code search in order to keep their projects up to date and welcoming to new contributors. For more information on Sourcegraph's search query syntax, please refer to the &lt;a href="https://docs.sourcegraph.com/code_search/reference/queries"&gt;official documentation&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Have suggestions or questions? Leave a comment, or join our &lt;a href="https://about.sourcegraph.com/community/?utm_medium=social&amp;amp;utm_source=devto&amp;amp;utm_campaign=slacklaunch"&gt;Community Slack Space&lt;/a&gt; where our team will be happy to answer any questions you may have about Sourcegraph.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>hacktoberfest</category>
      <category>beginners</category>
      <category>cheatsheet</category>
    </item>
    <item>
      <title>Let’s Talk About Executing and Caching Queries with React Apollo</title>
      <author>Danko Šimunović</author>
      <pubDate>Wed, 27 Oct 2021 16:45:31 +0000</pubDate>
      <link>https://dev.to/infobipdev/lets-talk-about-executing-and-caching-queries-with-react-apollo-15f1</link>
      <guid>https://dev.to/infobipdev/lets-talk-about-executing-and-caching-queries-with-react-apollo-15f1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HpTjgPLb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13ynlmycoph96dp9tem4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HpTjgPLb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13ynlmycoph96dp9tem4.jpg" alt="Cover photo" width="880" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yep, you’ve guessed it. We’re going to talk about queries. &lt;/p&gt;

&lt;p&gt;Let’s start with basics. The &lt;code&gt;useQuery&lt;/code&gt; React hook is the primary API for executing queries when using Apollo Client in React. To run a query within a React component, we call the &lt;code&gt;useQuery&lt;/code&gt;  and pass it a GraphQL query string. When the component renders, &lt;code&gt;useQuery&lt;/code&gt;  returns an object from Apollo Client that contains &lt;code&gt;loading&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, and &lt;code&gt;data&lt;/code&gt; properties. &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Apollo Query component is a deprecated way of executing queries. It’s a part of &lt;code&gt;@apollo/react-components&lt;/code&gt; package and it is implementing Render props pattern. Render props are used for sharing code between React components using a prop whose value is a function. A component with a render prop takes a function that returns a React element. The component then calls this function instead of implementing its own render logic. In the case of Query component, we are using the &lt;strong&gt;children&lt;/strong&gt; prop as a render prop. But because the children prop doesn’t need to be named in the list of “attributes”,  you can put it directly inside the element. In the following example, we are passing a query prop, which is required. &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Internally, Query component actually uses the &lt;code&gt;useQuery&lt;/code&gt; hook and then calls the render props function with results returned from the hook. This means that we’re using the same options and are getting the same result object as when using the &lt;code&gt;useQuery&lt;/code&gt; hook. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cachefirst-ask-questions-later"&gt;
  &lt;/a&gt;
  Cache-first, Ask Questions Later
&lt;/h3&gt;

&lt;p&gt;Apollo is locally caching results for the queries by default. This makes subsequent executions of the same query extremely fast. This is called &lt;strong&gt;cache-first&lt;/strong&gt; policy. We can define fetch policy on query level.  &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;These are 6 supported fetch policies: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cache-first&lt;/strong&gt;: This is the default fetch policy. If data is present in the cache, that data is returned. Otherwise, a query is executed against the GraphQL server and the data is returned after it is cached. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cache-only&lt;/strong&gt;: Query is only executed against the cache. GraphQL server is never called. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cache-and-network&lt;/strong&gt;: If data is present in the cache, that data is returned. But even then, a query is executed against the GraphQL server. If the response differs from what is stored in the cache, it will update the cache. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;network-only&lt;/strong&gt;:  Query is executed against the GraphQL server, without first checking the cache. The query's result is stored in the cache in case the same query with a different fetch policy is being made elsewhere in the application. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;no-cache&lt;/strong&gt;: Behaves like network-only, except the query's result is not stored in the cache. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;standby&lt;/strong&gt;: Behaves like cache-first, except this query does not automatically update when underlying field values change. You have to update it manually. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is also a possibility to define &lt;strong&gt;nextFetchPolicy&lt;/strong&gt; option. This way, you can define fetch policy for the first query execution using &lt;strong&gt;fetchPolicy&lt;/strong&gt; and then you can define fetch policy for the subsequent executions with &lt;strong&gt;nextFetchPolicy&lt;/strong&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#apollo-client-behind-the-scenes"&gt;
  &lt;/a&gt;
  Apollo Client Behind the Scenes
&lt;/h3&gt;

&lt;p&gt;Apollo Client acts as a facade to the underlying cached data. Behind the scenes, Apollo normalizes the data by splitting the results into individual objects and assigns a unique identifier to each object. These objects are stored in a flattened structure. Apollo then exposes an API to interact with the cached data. By minimizing direct access to the actual data using the facade/API, Apollo can normalize data under the hood. &lt;/p&gt;

&lt;p&gt;Apollo can &lt;strong&gt;automatically update cache&lt;/strong&gt; for: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Queries &lt;/li&gt;
&lt;li&gt;Mutations that update a single existing entity &lt;/li&gt;
&lt;li&gt;Bulk update mutations that return the entire set of changed items &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, there are use cases in which we have to &lt;strong&gt;manually update the cache&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application-specific side-effects (something that happens after the mutation, but does not use data returned from the mutation) &lt;/li&gt;
&lt;li&gt;Update operations that add, remove, or reorder items in a cached collection &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#manually-updating-cached-data"&gt;
  &lt;/a&gt;
  Manually Updating Cached Data
&lt;/h3&gt;

&lt;p&gt;Apollo supports multiple ways of reading and writing cached data:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;readQuery / writeQuery&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readFragment / writeFragment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cache.modify&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With &lt;code&gt;readQuery&lt;/code&gt; method, it is possible to run GraphQL queries directly on the local cache. If the cache contains all of the data necessary to execute a specified query, &lt;code&gt;readQuery&lt;/code&gt; returns a data object in the shape of the query, just like a GraphQL server does.  If some fields are missing from the cache, &lt;code&gt;null&lt;/code&gt; is returned. Using &lt;code&gt;writeQuery&lt;/code&gt; we can write arbitrary data to the cache for the specific query. It looks similar to &lt;code&gt;readQuery&lt;/code&gt;, but it accepts &lt;code&gt;data&lt;/code&gt; option. &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Using fragments it is possible to read or update only parts of the cached data, unlike &lt;code&gt;readQuery / writeQuery&lt;/code&gt; methods, which require a complete query. When using fragments to interact with cache, we can use &lt;code&gt;readFragment / writeFragment&lt;/code&gt; methods. They require &lt;code&gt;id&lt;/code&gt; option, which represents the unique identifier that was assigned to the object in the cache.  By default, this identifier has the format &lt;code&gt;&amp;lt;_typename&amp;gt;:&amp;lt;id&amp;gt;&lt;/code&gt;, but this can be customized. If there is no object with the specified ID, &lt;code&gt;readFragment&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.  &lt;code&gt;writeFramgent&lt;/code&gt; accepts &lt;code&gt;data&lt;/code&gt; option, which represents data that will be written for the specified object and that conforms to the specified fragment. &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;With &lt;code&gt;cache.modify&lt;/code&gt; it is possible to directly modify cached fields. This method requires the ID of the cached object to modify and a modifier function for each field to modify. &lt;/p&gt;

&lt;p&gt;It is important to emphasize that any changes made with these methods are not pushed to the GraphQL server. If the current page is refreshed, these changes will disappear. Also, all methods trigger a refresh of all active queries that depend on modified fields. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#two-strategies-for-updating-the-cached-results"&gt;
  &lt;/a&gt;
  Two Strategies for Updating the Cached Results
&lt;/h3&gt;

&lt;p&gt;Besides manually rewriting cached data, there are two strategies for updating the cached results: &lt;strong&gt;polling&lt;/strong&gt; and &lt;strong&gt;refetching&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;With polling, we execute the query periodically at a specified interval. &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Refetching is done by using &lt;code&gt;refetch&lt;/code&gt; function that enables us to re-execute the query.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#apollo-client-is-a-powerful-caching-machine"&gt;
  &lt;/a&gt;
  Apollo Client is a Powerful Caching Machine
&lt;/h3&gt;

&lt;p&gt;In conclusion, one would have to agree that Apollo Client is a mighty caching machine. It’s equipped with a powerful caching mechanism that makes it  easy to execute data queries quickly and efficiently. However, to make better use of its caching possibilities, one should get familiar with various methods of interacting with cache, cache setup and configuration. &lt;/p&gt;

</description>
      <category>graphql</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Install VirtualBox Guest Additions for openEuler 20.03 SP1 </title>
      <author>Hollow Man</author>
      <pubDate>Wed, 27 Oct 2021 16:31:33 +0000</pubDate>
      <link>https://dev.to/hollowman6/install-virtualbox-guest-additions-for-openeuler-2003-sp1-3abg</link>
      <guid>https://dev.to/hollowman6/install-virtualbox-guest-additions-for-openeuler-2003-sp1-3abg</guid>
      <description>&lt;p&gt;This article mainly discusses encountered issues and solutions when I installed VirtualBox Guest Additions for OpenEuler 20.03 SP1.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;After installing openEuler 20.03 SP1, log in to openEuler (I login as root here, if you are a regular user, you may need to use &lt;code&gt;sudo&lt;/code&gt; when executing commands below), and then click &lt;code&gt;Device&lt;/code&gt; -&amp;gt; &lt;code&gt;Insert Guest Additions CD image...&lt;/code&gt; to load the latest version of the Guest Additions CD into the system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mount the CD:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; /run/media/openeuler/VBoxAdditions
mount /dev/sr0 /run/media/openeuler/VBoxAdditions
&lt;span class="nb"&gt;cd&lt;/span&gt; /run/media/openeuler/VBoxAdditions
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zE74W06j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714095112172.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zE74W06j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714095112172.png" alt="" width="759" height="183"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If you choose to install directly as usual, it may prompt an error for extraction because the system lacks the &lt;code&gt;tar&lt;/code&gt; extraction program in the case of minimal installation. So install it:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dnf update
dnf &lt;span class="nb"&gt;install tar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rBB1xGsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714100053588.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rBB1xGsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714100053588.png" alt="" width="607" height="63"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run the installation:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./VBoxLinuxAdditions.run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZICbxCQg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714100606358.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZICbxCQg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714100606358.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" alt="" width="800" height="416"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see there exists an error. Let's take a look at the details of the error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cat&lt;/span&gt; /var/log/vboxadd-setup.log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SD9KBJdD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714100827446.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SD9KBJdD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714100827446.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" alt="" width="796" height="575"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It can be seen that it is a compilation error. According to Linux kernel documentation, the &lt;code&gt;access_ok&lt;/code&gt; function has been changed from passing three parameters to passing two parameters after the Linux kernel version 5. VBoxAdditions judges whether to use three or two parameters by the Linux version number. However, the kernel version number used by openEuler 20.03 SP1 is 4, but the patches later than the Linux kernel version 5 for this have been applied. As a result, the &lt;code&gt;access_ok&lt;/code&gt; function only needs two parameters in this case, so we only need to change the VBoxAdditions source code to let it call &lt;code&gt;access_ok&lt;/code&gt; with two parameters.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Modify the source code of VBoxAdditions (note that the corresponding path is changed according to the version number of VBoxAdditions):
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /opt/VBoxGuestAdditions-6.1.22/src/vboxguest-6.1.22/vboxguest/r0drv/linux
vi memuserkernel-r0drv-linux.c
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use i to edit, and change the following two places &lt;code&gt;RTLNX_VER_MIN(5,0,0)&lt;/code&gt; to &lt;code&gt;RTLNX_VER_MIN(4,0,0)&lt;/code&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nG4zn3Pb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/2021071410233935.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nG4zn3Pb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/2021071410233935.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" alt="" width="478" height="229"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AJaq54pn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714102414400.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AJaq54pn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714102414400.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" alt="" width="520" height="329"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then press the &lt;code&gt;ESC&lt;/code&gt; key, &lt;code&gt;:wq&lt;/code&gt; save and exit.&lt;/p&gt;

&lt;p&gt;There is also a same issue in another file, so continue to execute the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ../../../vboxsf
vi regops.c
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PYtHNg0R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714103207764.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PYtHNg0R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714103207764.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" alt="" width="782" height="542"&gt;&lt;/a&gt;&lt;br&gt;
Then press the &lt;code&gt;ESC&lt;/code&gt; key, &lt;code&gt;:wq&lt;/code&gt; save and exit.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Finally continue the installation:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;/sbin/rcvboxadd setup
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wdeI-XT0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/2021071410354843.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wdeI-XT0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/2021071410354843.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" alt="" width="649" height="234"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Installation is complete!&lt;/p&gt;

&lt;p&gt;Finally, the VirtualBox Guest Addition can be used after restarting the system! &lt;/p&gt;

</description>
      <category>linux</category>
      <category>virtualbox</category>
      <category>openeuler</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The Talk That Made Me Finally Understand How the Event Loop Works</title>
      <author>Maxim Orlov</author>
      <pubDate>Wed, 27 Oct 2021 16:12:54 +0000</pubDate>
      <link>https://dev.to/maximization/the-talk-that-made-me-finally-understand-how-the-event-loop-works-4bo5</link>
      <guid>https://dev.to/maximization/the-talk-that-made-me-finally-understand-how-the-event-loop-works-4bo5</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published at &lt;a href="https://maximorlov.com/javascript-event-loop-talk/"&gt;https://maximorlov.com/javascript-event-loop-talk/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When I first heard about the event loop, the concept &lt;em&gt;kind of&lt;/em&gt; made sense.&lt;/p&gt;

&lt;p&gt;I knew that Node.js is single-threaded but also very fast at the same time. It's using the event loop to handle thousands of concurrent requests. How &lt;em&gt;exactly&lt;/em&gt; it accomplished that though, was a mystery to me.&lt;/p&gt;

&lt;p&gt;I also knew &lt;em&gt;not&lt;/em&gt; to block the event loop in Node.js otherwise server performance would suffer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Everyone warned against blocking the event loop!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I was able to write asynchronous code that worked. I could also modify async code written by others without introducing new bugs (most of the time). But honestly, there were many moments where I had no idea why my code worked. 🤷🏼‍♂️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i915RF4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4m5zduivg8vmmdlq2mn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i915RF4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4m5zduivg8vmmdlq2mn.png" alt="Dog in lab meme with the text: Writing async code in Node.js, I have no idea what I'm doing" width="700" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-the-event-loop"&gt;
  &lt;/a&gt;
  Understanding the event loop
&lt;/h2&gt;

&lt;p&gt;The event loop was an abstract concept and I did not know what was happening behind the scenes. That is until I watched Philip's talk at JSConf EU. This fantastic talk finally made the concept click in my head.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I'm a visual learner and Philip's animated explanation of how the event loop works helped me truly understand what was happening behind the scenes.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All the dots started to connect. This talk was the final piece of the puzzle and truly understand asynchronous code in JavaScript.&lt;/p&gt;

&lt;p&gt;From that point on, I never looked at async code the same way again. It was a stepping stone to writing more complex asynchronous code patterns. I could confidently &lt;a href="https://maximorlov.com/visual-guide-refactoring-callback-functions/"&gt;refactor callbacks to promises and async/await&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The number of times I reached out to Google for help reduced significantly. I didn't need Stack Overflow to hold my hand anymore and I could fix bugs all by myself.&lt;/p&gt;

&lt;p&gt;This talk is 7 years old but is as relevant today, as it was back then. In web development, technologies are changing rapidly but the fundamentals remain largely the same. This is all the more reason to learn fundamental concepts like the JavaScript event loop.&lt;/p&gt;

&lt;p&gt;Keep reading for my takeaways of Philip's talk, or skip to the end if you want to watch it right away.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-javascript-runtime-event-loop-and-callback-queue"&gt;
  &lt;/a&gt;
  The JavaScript runtime, event loop and callback queue
&lt;/h2&gt;

&lt;p&gt;Philip starts by explaining that asynchronous functions such as setTimeout and XMLHttpRequest are not part of the JavaScript V8 runtime. These functions are part of the WebAPI provided by the browser, which also provides the event loop and the callback queue. In Node.js this is largely the same except WebAPIs are replaced by core modules (e.g: crypto, http, fs, etc.) which run in separate threads in C++ land.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The event loop is not part of the JavaScript runtime language.&lt;/strong&gt; Instead, the event loop is provided by the environment executing your code — in the client, it's the browser and in the backend it's Node.js.&lt;/p&gt;

&lt;p&gt;Philip then proceeds with an animated explanation of how the call stack works and what happens when we introduce blocking code in our programs. This wasn't something I hadn't known before, but it's an important refresher because next, we'll get to see how the event loop comes into play.&lt;/p&gt;

&lt;p&gt;When you call an asynchronous function, the function runs in a separate thread until it completes. After completion, the callback function is pushed onto the callback queue. It's then the job of the event loop to grab the callback from the callback queue and push it to the stack when it's empty — which effectively runs the callback.&lt;/p&gt;

&lt;p&gt;One thing to keep in mind is that &lt;strong&gt;the JavaScript runtime is &lt;em&gt;single-threaded&lt;/em&gt; and can only do &lt;em&gt;one&lt;/em&gt; thing at a time&lt;/strong&gt;. The reason we can do things in &lt;em&gt;parallel&lt;/em&gt; is that browsers and Node.js are more than just the JavaScript runtime — they come with the event loop and callback queue.&lt;/p&gt;

&lt;p&gt;When most people talk about blocking the event loop, what they mean is having code that runs for a relatively long time and therefore occupying the call stack. When the call stack is busy, the event loop doesn't get the chance to clear the callback queue.&lt;/p&gt;

&lt;p&gt;Philip went as far as to even build &lt;a href="http://latentflip.com/loupe"&gt;a tool that visualises the JavaScript event loop&lt;/a&gt;. It's fascinating to see it in action and I encourage you to play around with it after watching the talk.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-the-heck-is-the-event-loop-anyway-by-philip-roberts"&gt;
  &lt;/a&gt;
  "What the heck is the event loop anyway?" by Philip Roberts
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8aGhZQkoFbQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#master-asynchronous-nodejs"&gt;
  &lt;/a&gt;
  Master Asynchronous Node.js 🚀
&lt;/h2&gt;

&lt;p&gt;Write clean and easy to read asynchronous code in Node.js with this &lt;strong&gt;FREE 5-day email course&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EW5SxxJi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ic1d6os14bjflg46fuyw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EW5SxxJi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ic1d6os14bjflg46fuyw.png" alt="Refactoring Callbacks, a FREE 5-day email course. 30+ real-world exercises, a visual guide and 5 days, 5 lessons." width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://maximorlov.com/refactoring-callbacks-course/"&gt;&lt;strong&gt;Get Lesson 1 now&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>node</category>
      <category>programming</category>
    </item>
    <item>
      <title>The Most Innovative Companies Prioritize Developers &amp; Empower Their Success</title>
      <author>Conor Bronsdon</author>
      <pubDate>Wed, 27 Oct 2021 16:06:00 +0000</pubDate>
      <link>https://dev.to/linearb/the-most-innovative-companies-prioritize-developers-empower-their-success-3ipo</link>
      <guid>https://dev.to/linearb/the-most-innovative-companies-prioritize-developers-empower-their-success-3ipo</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was written exclusively for devinterrupted.com by Henrik Gütle&lt;/em&gt;&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
If you’re a developer, or a developer team lead, this article offers you actionable insights from a research study conducted by McKinsey &amp;amp; Microsoft that delves into the relationship between Developer Velocity and fundamental business outcomes, such as revenue growth, operating margins, and how quickly a business can innovate.&lt;/p&gt;

&lt;p&gt;Microsoft worked with McKinsey on this study to further our understanding of the critical role that developers play in the success of organizations around the world. As a company that deeply understands the impact of developers, we’re excited to share these results, and hope the findings will grab the attention of senior business leaders. Our message for them is simple: orienting your organization to prioritize and empower the success of developers is a decisive competitive advantage.&lt;/p&gt;

&lt;p&gt;Before we dive into the results, let’s take a moment to define Developer Velocity. This terminology refers to the pace at which a team of developers can deliver innovative software that is loved by end users. Developer Velocity goes well beyond the simple pace of delivery though. It’s about helping business leaders understand the value of providing world-class developer tools, structuring working groups to promote autonomous productivity through Agile and DevOps practices, and incentivizing innovation through a culture that fosters psychological safety.&lt;/p&gt;

&lt;p&gt;The Developer Velocity Index (DVI) was created for this study as a quantitative measure to enable a comparison of Developer Velocity at 400+ global companies. The next step was evaluating the impact of Developer Velocity on business outcomes that matter to every senior business leader. In short, the research study demonstrates that companies scoring in the top 25% of the Developer Velocity Index experience 4-5x faster revenue growth, 20% higher operating margins, and 55% higher levels of innovation.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/0JU3SKIjGvr9IoWDICGQ8c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-5-drivers-of-developer-velocity"&gt;
  &lt;/a&gt;
  Top 5 Drivers of Developer Velocity
&lt;/h2&gt;

&lt;p&gt;While the results of the full research study are intriguing, for the sake of brevity, let’s focus here on the top 5 drivers of Developer Velocity. And if you’re interested, you can find all the details of this research through the “Learn More” links provided at the bottom of the article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-developer-tools"&gt;
  &lt;/a&gt;
  #1 Developer Tools
&lt;/h3&gt;

&lt;p&gt;Organizations in the top quartile of Developer Velocity invest in developers by providing access to world-class developer tools. Specifically, these companies provide developers with a flexible choice of integrated developer environments (IDEs), collaboration software, and continuous integration and delivery (CI/CD) tools that support each stage of the software life cycle. Another common tendency among top companies is enabling non-developer employees to create applications through low-code and no-code platforms, thereby protecting the time of their software engineers to focus on more challenging tasks. The rewards of these investments become obvious when you consider that these top 25% of companies achieve developer satisfaction and retention rates that are 45% higher than the bottom 75% of companies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-organizational-culture"&gt;
  &lt;/a&gt;
  #2 Organizational Culture
&lt;/h3&gt;

&lt;p&gt;The most critical cultural attribute shared by the top 25% of companies is creating an environment of psychological safety. This means establishing a shared belief that incentivizes risk-taking through experimentation and embraces failure through learning and knowledge sharing. This approach fosters innovation and continuous improvement, which becomes particularly effective when paired with a customer-centric philosophy. These top companies also frequently recognize the efforts of their developers, taking the time to publicly acknowledge and reward individual and team achievements.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-product-management"&gt;
  &lt;/a&gt;
  #3 Product Management
&lt;/h3&gt;

&lt;p&gt;Highly effective product management is a differentiator that’s increasingly valuable for the top 25% of companies. Along with managing budgets and project timelines, the role of a product manager focuses on delivering a compelling experience for end users. This job function requires a unique blend of business acumen, technical understanding, customer experience, and interpersonal skills that are necessary to deftly influence others towards desired outcomes. Hiring, training, and retaining skilled Product Managers should be treated with the same strategic significance as finding the right developers for your team. The most successful teams of developers also embrace a mindset wherein they take turns stepping into the shoes of the Product Manager to better understand the problems facing their end users and the solutions they can develop to address those challenges.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-developer-experience"&gt;
  &lt;/a&gt;
  #4 Developer Experience
&lt;/h3&gt;

&lt;p&gt;Best-in-class organizations do the best job of hiring, incentivizing, educating, and retaining talented people by deeply considering their internal developer experience. It begins by recruiting top developers with a compelling value proposition to join the team and continues by building programs that support continuous learning and set clearly defined career paths. Another critical step is structuring the organization around smaller developer teams to prioritize autonomy, loosely coupled architecture, and the implementation of Agile and DevOps best practices. Finally, introducing formal processes that encourage transparent dialogue and measure team health through regular surveys create an important feedback loop for the organization to listen to their developers and understand how to improve their experience.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-opensource-software"&gt;
  &lt;/a&gt;
  #5 Open-Source Software
&lt;/h3&gt;

&lt;p&gt;Companies in the top 25% of DVI that adopt open-source software and encourage their developers to contribute to open-source observe three times the impact on innovation compared to the organizations in the bottom 75%. Here we learn that embracing an open-source mentality has a significant multiplying effect on innovation for companies that are already leaders in Developer Velocity. And it should be reinforced that embracing open-source means adopting open-source software, motivating employees to contribute to open-source communities and projects, and adopting a similar internal sharing philosophy that is commonly referred to as InnerSourcing.&lt;/p&gt;

&lt;p&gt;I hope this article has inspired ideas that you can bring back to your role as a developer, or developer team leader. Below are links to the full research study by McKinsey, along with a short-form (5 Questions) and long-form (10-15 Minutes) assessment tool with results from each that provide actionable guidance to help you accelerate the Developer Velocity of your organization.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn More:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/en-us/overview/developer-velocity/"&gt;Full Research Study: McKinsey &amp;amp; Company - How software excellence fuels business performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://azure.microsoft.com/en-us/overview/developer-velocity/#quick-check"&gt;Short-Form Assessment Tool for Developer Velocity&lt;/a&gt; (5 Questions)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developervelocityassessment.com/"&gt;Long-Form Assessment Tool for Developer Velocity&lt;/a&gt; (10-15 Minutes)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/cYuGPmgaIgU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;If you haven’t already joined the best developer discord out there, WYD?&lt;/strong&gt;&lt;br&gt;
Look, I know we talk about it a lot but we love our developer discord community. With over 1900 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No salespeople allowed. &lt;a href="http://discord.gg/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wWW_EMoz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzhfbxxznqj5ockjmh5t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wWW_EMoz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzhfbxxznqj5ockjmh5t.png" alt="http://discord.gg/devinterrupted"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://devinterrupted.com/the-most-innovative-companies-prioritize-developers-and-empower-their-success/"&gt;https://devinterrupted.com&lt;/a&gt; on October 21, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>opensource</category>
      <category>management</category>
      <category>operations</category>
    </item>
    <item>
      <title>Basics of Cloud Computing for a TechNewbie</title>
      <author>Dolamu Asipa</author>
      <pubDate>Wed, 27 Oct 2021 15:42:45 +0000</pubDate>
      <link>https://dev.to/dolamu/basics-of-cloud-computing-for-a-technewbie-3nf2</link>
      <guid>https://dev.to/dolamu/basics-of-cloud-computing-for-a-technewbie-3nf2</guid>
      <description>&lt;h4&gt;
  &lt;a href="#background-and-definition"&gt;
  &lt;/a&gt;
  &lt;em&gt;Background and Definition&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;Cloud computing is one of the hottest buzzwords in the IT world today. It has revolutionized our internet experience as users and the way organizations conduct their businesses. Cloud-based technologies are used for services such as email (e.g. Gmail), &lt;a href="https://en.wikipedia.org/wiki/Social_networking_service"&gt;social networking&lt;/a&gt;, file storage (e.g. Dropbox), &lt;a href="https://en.wikipedia.org/wiki/Big_data"&gt;big data&lt;/a&gt; analytics, software testing and development, &lt;a href="https://en.wikipedia.org/wiki/Customer_relationship_management"&gt;CRM&lt;/a&gt; (e.g. Salesforce), etc. Regardless of your tech background (whether you're an IT professional or a financial analyst), having a basic understanding of cloud computing is an invaluable skill.&lt;/p&gt;

&lt;p&gt;The term &lt;code&gt;cloud computing&lt;/code&gt; simply refers to the provision of computer system resources  (like storage, software, servers or databases) over the internet (i.e. &lt;strong&gt;the cloud&lt;/strong&gt;), without the need for internal infrastructure or direct active management by the user. It is often represented as a fluffy blue (or white) cloud graphic ☁☁️. Benefits of cloud computing include: It offers the best in terms of scalability, flexibility, reliability, geographical independence and cost effectiveness. Furthermore, it enables users to access the latest technologies and guarantees data protection.&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#forms-of-cloud-services"&gt;
  &lt;/a&gt;
  Forms of Cloud Services
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Infrastructure as a Service (IaaS)&lt;/strong&gt;: This form of cloud computing offers the delivery of virtual infrastructure that replaces physical hardware to businesses seeking cost-effective IT solution. This form of cloud services delivers the necessary resources that enable high-performance computing and it also facilitate data storage, backup, and recovery services to users. Infrastructure as a service provides the following resources: compute (i.e, resources like virtual servers which are provided on-demand); block storage (like data storage drives which is used for providing blocks for storing information); and networks which are all the resources required for providing users with networking capabilities.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Platform as a Service (PaaS)&lt;/strong&gt;: In addition to the provision of fundamental infrastructure of virtual servers, data storage drives and network, this type of cloud services adds operating systems and software to the range of services delivered to users. It also provides run-time environment which provide all the functionality necessary for an application or program to run. PaaS allows developers to focus on their apps and avoid tasks like acquisition and resource planning.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Software as a Service (SaaS)&lt;/strong&gt;: This is the largest (and most popular) of the three forms of cloud computing as it involves the deployment of software or apps over the internet. It operates a subscription model (either yearly or monthly) that requires an internet connection for users to access its services. Examples of areas covered by software as a service include: application monitoring, content, finance, communication tools/apps, collaboration technology and services.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cloud-deployment-models"&gt;
  &lt;/a&gt;
  Cloud Deployment Models
&lt;/h2&gt;

&lt;p&gt;There are several types of cloud deployment models, depending on where the infrastructure resides and who has control over it. Below are four main models associated with cloud computing:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Cloud_computing#Public_cloud"&gt;&lt;strong&gt;Public clouds&lt;/strong&gt;&lt;/a&gt;: are the most common cloud deployment model, they are operated by third-party companies which are also known as cloud providers (such as &lt;a href="https://aws.amazon.com/"&gt;Amazon Web Services&lt;/a&gt; (AWS), &lt;a href="https://azure.microsoft.com/"&gt;Microsoft Azure&lt;/a&gt;, and &lt;a href="https://cloud.google.com/"&gt;Google Cloud&lt;/a&gt;) and made available to the general public or a large industry group on a pay-as-you-use basis. With public clouds, users can access computing resources [like hardware (operating system, storage) or software (application server, database)] at a relatively low cost as there are no capital expenditures required. Typical uses of public clouds are for: application development and testing, file sharing and storage, and email service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Cloud_computing#Private_cloud"&gt;&lt;strong&gt;Private cloud&lt;/strong&gt;&lt;/a&gt;: is a cloud environment in which all computing resources are controlled and managed exclusively for a single organization either by the organization itself or a third party service provider. Private clouds are often hosted within a company's own data center, although they can also be built on the infrastructure of an independent cloud provider or on rented infrastructure in an offsite data center. They are usually more costly than public clouds due to the huge capital investments involved in their maintenance, installation and acquisition. However, private clouds offer businesses increased security and privacy as well as the added benefits of scalability, flexibility, and full control over software and hardware choices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Cloud_computing#Hybrid_cloud"&gt;&lt;strong&gt;Hybrid clouds&lt;/strong&gt;&lt;/a&gt;: integrate the best features of public and private clouds. Both types of cloud infrastructure are combined into a single one; organisations can choose to store sensitive information privately on their on-premises infrastructure while using their public cloud data center for any additional platform, storage, or computing resources they may require. This model is typically used when companies need to scale up their IT infrastructure very quickly as it gives a business greater flexibility and more application deployment options. &lt;br&gt;&lt;br&gt;
Note that hybrid clouds are not to be confused with the &lt;a href="https://en.wikipedia.org/wiki/Multicloud"&gt;multi-cloud&lt;/a&gt; infrastructure, which is a cloud service environment consisting of more than one public clouds and private clouds. Multi-cloud, which aims to eliminate reliance on any single cloud provider, differs from hybrid cloud in that it refers to &lt;em&gt;multiple cloud services&lt;/em&gt; rather than &lt;em&gt;multiple deployment models&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Community_cloud"&gt;&lt;strong&gt;Community cloud&lt;/strong&gt;&lt;/a&gt;: is especially useful for organizations that have similar goals and interests, such as schools and companies merging. It is a deployment model in which cloud infrastructure, whether managed internally or by a third party and hosted internally or externally, is shared between several organizations from a specific community with common concerns. Community cloud is a centralized cloud infrastructure that alllows companies to collaborate on applications and projects belonging to the community. Benefits offered by this deployment model include: security and sharing infrastructure, cost effectiveness, flexibility and scalability, etc.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#characteristics-of-cloud-computing"&gt;
  &lt;/a&gt;
  Characteristics of Cloud Computing
&lt;/h2&gt;

&lt;p&gt;a. &lt;strong&gt;Resource Pooling&lt;/strong&gt;: means that the cloud services provider's computing infrastructure is pooled together to serve several businesses. In cloud computing, resource usage can grow or shrink as the client's needs changes therefore, providers serve customers with scalable and provisional services to suit their needs.&lt;/p&gt;

&lt;p&gt;b. &lt;strong&gt;Scalability and Rapid Elasticity&lt;/strong&gt;: scalability is the ability to contract or expand computing infrastructure as a response to clients' changing requests while rapid elasticity refers to the fast allocation of resources to meet the needs of consumers. It is essential that cloud providers can efficiently allocate resources and be able to do it quickly as their resources are seen as one large pool that can be divided up among clients as needed.&lt;/p&gt;

&lt;p&gt;c. &lt;strong&gt;On-demand Self-Service&lt;/strong&gt;: means that customers can automate their requests based on their computing needs, without having to contact their cloud providers. This characteristic of cloud computing allows clients to access additional resources at anytime without enquiring with the service provider. &lt;/p&gt;

&lt;p&gt;d. &lt;strong&gt;Broad Network Access&lt;/strong&gt;: this means that computing resources can be easily accessible from any location (such as the office or home) and with various operating systems (like Windows, mobile, or Lotus). Broad network access is one of fundamental hallmarks of cloud computing.&lt;br&gt;&lt;br&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Now that we have covered the most basic concepts of cloud computing, we will be delving into cloud networking and storage in another article. To know more on cloud computing, consider checking out the following resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;What is Cloud Computing? - &lt;a href="https://aws.amazon.com/what-is-cloud-computing/"&gt;Amazon AWS&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microsoft &lt;a href="https://azure.microsoft.com/en-us/overview/what-is-cloud-computing/"&gt;Azure&lt;/a&gt; - A Beginner's Guide&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IBM | &lt;a href="https://www.ibm.com/cloud/learn/cloud-computing"&gt;Cloud Computing Fundamentals&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lastly, this 👉 &lt;a href="https://www.forbes.com/sites/bernardmarr/2021/10/25/the-5-biggest-cloud-computing-trends-in-2022/?sh=34d0c3492267"&gt;Forbes article&lt;/a&gt; explore the five biggest cloud computing trends in 2022&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Hey, thanks for reading!&lt;/em&gt; 👋 👋&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How To Enable Real-Time Merge Conflict Detection In Android Studio</title>
      <author>Sunny</author>
      <pubDate>Wed, 27 Oct 2021 15:38:56 +0000</pubDate>
      <link>https://dev.to/gitlive/how-to-enable-real-time-merge-conflict-detection-in-android-studio-ojb</link>
      <guid>https://dev.to/gitlive/how-to-enable-real-time-merge-conflict-detection-in-android-studio-ojb</guid>
      <description>&lt;p&gt;Ah, the dreaded resolve conflicts popup. You've finished crafting the perfect code, just a quick merge in of master (ahem, main) before you submit your PR, and then... 💥&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9VhR3rS9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629385750547/721xAlFE_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9VhR3rS9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629385750547/721xAlFE_.png" alt="img-1-full.png" width="880" height="363"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If only there was an early warning system for merge conflicts so you could be better prepared or even avoid the conflicts in the first place I hear you say? Well if you are an Android Studio user today is your lucky day!&lt;/p&gt;

&lt;p&gt;Firstly, you'll need to install and set up GitLive (the latest version requires the Bumblebee Beta version of Android Studio). Then if you right click the gutter on Android Studio, you will see the option to “Show Other's Changes".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--79VJTZ-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629381420172/JVuFzhdCH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--79VJTZ-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629381420172/JVuFzhdCH.png" alt="img-2-full.png" width="880" height="503"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will be disabled if the file open in the editor is not from git or there are no other changes to it from contributors working on other branches (aka you are safe from conflicts). If it's enabled there will be one or more change indicators in the gutter of the editor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7eNlp6rU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629386027868/TLFjoPsMb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7eNlp6rU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629386027868/TLFjoPsMb.png" alt="img-3-full-2.png" width="880" height="487"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These will show you where your teammates have made changes compared to your version of the file and even update in real-time as you and your teammates are editing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p2QqYfSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629718675385/q7tgwkk83.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p2QqYfSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629718675385/q7tgwkk83.png" alt="key indicators-dark.png" width="880" height="388"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you've made a conflicting change you will see the bright red conflict indicator. These conflicts can be uncommitted local changes you have not pushed yet or existing changes on your branch that conflict with your teammates’ changes.&lt;/p&gt;

&lt;p&gt;Click your teammate’s icon in the gutter to see the diff between your version and theirs, the branch the offending changes are from, and the issue connected to that branch if there is one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PWgnz_V0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629386020142/OYnNBrg8F.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PWgnz_V0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629386020142/OYnNBrg8F.png" alt="img-5-full-3.png" width="880" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From this popup you can also cherry-pick your teammate’s change directly from their local version of the file. For simple conflicts this can be a quick way to resolve them as identical changes on different branches will merge cleanly.&lt;/p&gt;

&lt;p&gt;Unfortunately, it's not always possible to resolve a conflict straight away but with the early warning, you'll be better prepared, avoiding any nasty surprises at merge time! &lt;/p&gt;

&lt;p&gt;Check out &lt;a href="https://blog.git.live/gitlive-11.0-Real-time-merge-conflict-detection"&gt;this blog post&lt;/a&gt; or the &lt;a href="https://docs.git.live/docs/mergeconflicts/"&gt;GitLive docs&lt;/a&gt; if you want to learn more.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>git</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Call center automation: how I created a conversational AI app version of my own Apple customer support call in just 2 hours.</title>
      <author>Dasha</author>
      <pubDate>Wed, 27 Oct 2021 15:25:28 +0000</pubDate>
      <link>https://dev.to/dashaai/call-center-automation-how-i-created-a-conversational-ai-app-version-of-my-own-apple-customer-support-call-in-just-2-hours-3a4h</link>
      <guid>https://dev.to/dashaai/call-center-automation-how-i-created-a-conversational-ai-app-version-of-my-own-apple-customer-support-call-in-just-2-hours-3a4h</guid>
      <description>&lt;p&gt;This post is a bit different from what I’ve created before. This time, I’ve recreated an Apple Support operator-to-customer phone call in a form of an automated conversational AI app. &lt;/p&gt;

&lt;p&gt;Let me give you the reason why I’ve decided to create this Apple customer support conversational AI app. My conversational with the human operator took about 7 minutes in total. That’s 7 minutes of someone’s time to answer 2 questions and 7 minutes of my time to ask them. I believe that artificial intelligence can be used to automate this type of customer support conversation, therefore saving operators time to focus on the most complex issues that require human creativity.&lt;/p&gt;

&lt;p&gt;Take a look at the demo call to have a quick look at how the app works:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/5S9OMcbSSuo"&gt;https://youtu.be/5S9OMcbSSuo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This app can serve you as a base to create your own customer support conversational AI apps and use it for call center automation.&lt;/p&gt;

&lt;p&gt;Here are the steps we will take to create this app: &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-dasha-conversational-ai"&gt;
  &lt;/a&gt;
  Getting started with Dasha conversational AI
&lt;/h2&gt;

&lt;p&gt;If you have never used Dasha before, you need to activate your API key. The API key lets you load your conversational application to the Dasha Cloud Platform, where it is executed. If you have your Dasha API key, ignore this part.  &lt;/p&gt;

&lt;p&gt;Download the latest versions of Microsoft VSCode, Node.js and NPM installed. Dasha Studio is implemented as an extension to VSCode for your convenience. Open Visual Studio Code and install the &lt;a href="https://marketplace.visualstudio.com/items?itemName=dasha-ai.dashastudio"&gt;Dasha Studio extension&lt;/a&gt; and Dasha Command Line Interface.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;code &lt;span class="nt"&gt;--install-extension&lt;/span&gt; dasha-ai.dashastudio &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; &lt;span class="s2"&gt;"@dasha.ai/cli@latest"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, run a command to register your Dasha API key. A browser window will pop up and you will need to sign up for an account.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dasha account login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Afterwards, run to check your API key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dasha account info
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let’s get to know the files you’ll be using to create your conversational AI app. We recommend downloading &lt;a href="https://github.com/dasha-samples/blank-slate-app"&gt;Dasha Blank Slate app&lt;/a&gt; source code and use it as a base to write your code. &lt;/p&gt;

&lt;p&gt;For that, you’ll have to open &lt;strong&gt;main.dsl&lt;/strong&gt; and &lt;strong&gt;data.json&lt;/strong&gt; files and delete everything you see there. This way, you’ll be able to start writing your code from scratch while having all the other essential files (for instance, the &lt;code&gt;commonReactions&lt;/code&gt; library that has pre-programmed replies so you don’t have to worry about coding those).&lt;/p&gt;

&lt;p&gt;You can also download the source code of this conversational AI app &lt;a href="https://github.com/dasha-samples/apple-customer-support-app"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You’ll mainly be using 2 files to create your conversational AI app:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;main.dsl -- this is where you’ll write your DashaScript Language code to create the workflow of your conversational AI app. With Dasha Studio extension on and with the directions in this post, it’ll be an easy job for you. You can read more about it in our &lt;a href="http://docs.dasha.AI"&gt;documentation&lt;/a&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;data.json -- is the data set you provide to train the Dasha Cloud neural networks to recognize user &lt;a href="https://dasha.ai/en-us/blog/intent-classification"&gt;intents&lt;/a&gt; and identify &lt;a href="https://dasha.ai/en-us/blog/named-entity-recognition"&gt;named entities&lt;/a&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additionally, you will want to use the index.js file to write out external functions. External functions are needed to process data with the SDK. For example, you may need to process data, get access to databases or APIs or use it for any other purposes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;index.js --  is the server-side JavaScript file to which the Dasha SDK is imported and which launches the contents of the &lt;strong&gt;/app&lt;/strong&gt; folder to the Dasha Cloud to be executed.  Here you’ll be adding any external functions you deem necessary once adapting the code to your company’s needs. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Familiarizing yourself with the files is important, but now let’s get to the fun part - programming the recreated Apple customer support conversational AI app!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#purpose-of-the-conversation"&gt;
  &lt;/a&gt;
  Purpose of the conversation
&lt;/h2&gt;

&lt;p&gt;The conversation I had with the call center representative was quite short, though informative. My purpose was to ask 2 main questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;What can I do to get my mom’s iPhone broken screen fixed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How can I trade in my own phone and get a discount for a newer model.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Throughout the code you’ll see what kind of questions I asked and the way they were answered. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#start-with-the-basics"&gt;
  &lt;/a&gt;
  Start with the basics
&lt;/h2&gt;

&lt;p&gt;First of all, download the &lt;a href="https://github.com/dasha-samples/apple-customer-support-app"&gt;source code of this conversational AI app&lt;/a&gt; to be a form of a guide to you.&lt;/p&gt;

&lt;p&gt;Now, the basics here are 2 things: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;importing common library
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "commonReactions/all.dsl";```



* writing our the context for the app



```dsl
context 
{
    // declare input variables phone and name  - these variables are passed at the outset of the conversation. In this case, the phone number and customer’s name 
    input phone: string;

    // declare storage variables 
    output first_name: string = "";
    output last_name: string = "";
    output phone_model: string = "";
    output owner_phone_model: string = "";

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is writing your first node called root. Take a look at how it’s written out:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;start node root 
{
    do 
    {
        #connectSafe($phone);
        #waitForSpeech(1000);
        #sayText("Hi, thanks for calling Apple Support. My name is Dasha. Can I get your name, please?");
        wait *;
    }   
    transitions 
    {

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We’re achieving multiple things here. In the &lt;code&gt;do&lt;/code&gt; section we establish a connection to the user’s phone, wait for 1 second to speak (or give the user 1 second to say something), and then say our welcome message. &lt;/p&gt;

&lt;p&gt;Since we need to know the user’s name, we should write where the conversation should go after we get that information in the &lt;code&gt;transitions&lt;/code&gt; section. We make a transition to the node that follows once a particular intent gets triggered (&lt;code&gt;#messageHasData("first_name");&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Let’s take a dive into the data.json file and take a look at how entities work there:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;"entities"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"first_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; 
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"open_set"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"values"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; 
      &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"John"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Bridgette"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"James"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Sarah"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Jermaine"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Roseanne"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Ahmed"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Tony"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Jon"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"includes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; 
      &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"(Oscar)[first_name]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"(Danielle)[first_name]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"My name is (Sophie)[first_name]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"My name is (Sarah)[first_name]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"My name is (Cameron)[first_name]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"My name is (Steven)[first_name]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"My name is (Jessica)[first_name]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"My name is (Jon)[first_name]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"My name is (Ahmed)[first_name]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"My first name is (Lisa)[first_name]"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;includes&lt;/code&gt; section is very helpful. It provides you with an opportunity to have your model trained better as you feed it more examples. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Onexit&lt;/code&gt;section lets the conversational AI app store, remember, and later use the variables we feed it. In this case, we assume the user might say their last name, first name, or both. And we got to store that information for later use. Note that this information will be used in the node you specify right after &lt;code&gt;onexit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Moving on to the next nodes. &lt;/p&gt;

&lt;p&gt;In the following digression, our purpose is to program the conversational AI app to ask the user about their concern or problem and then transition to the corresponding nodes (or digressions).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;digression how_may_i_help
{
    conditions {on #messageHasData("first_name");} 
    do 
    {
        set $first_name =  #messageGetData("first_name")[0]?.value??"";
        set $last_name =  #messageGetData("last_name")[0]?.value??"";
        #sayText("Hi," + $first_name + " how may I help you out today?");
        wait *;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that in the &lt;code&gt;onexit&lt;/code&gt; section, what comes after &lt;code&gt;set&lt;/code&gt; goes to our context up above. &lt;/p&gt;

&lt;p&gt;On the phone call, I mentioned my problem: a broken phone screen. But I haven’t mentioned the model of my iPhone. Naturally, the operator asked me that question and our app shall do the same:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node what_phone_model
{
    do
    {
        #sayText("Could you tell me the model of the phone, please?");
        wait *;
    }   
    transitions
    {

        broken_phone_screen: goto broken_phone_screen on #messageHasData("phone_model");
    }
    onexit
    {
        broken_phone_screen : do {
        set $phone_model =  #messageGetData("phone_model")[0]?.value??"";}
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we need to ask qualifying questions to make the final answer to the first question as accurate as possible.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node broken_phone_screen
{
    do 
    {     
        #sayText("Gotcha, we're more than happy to help you with getting the phone screen fixed. I'm gonna need one moment."); 
        // a pause in between sentenses for more human-like interaction
        #waitForSpeech(1000);
        #sayText("Okay," + $phone_model + " , let me see. Alright. Do you know if you've got Apple Care coverage on you?");
        wait*;
    }
    transitions
    {
        no_apple_care_explain: goto no_apple_care_explain on #messageHasIntent("no") or #messageHasIntent("no_apple_care") or #messageHasIntent("how_much_for_repair_with_no_apple_care");
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here (in the &lt;code&gt;transitions&lt;/code&gt; section and following nodes) I didn’t program the app to have an answer to a “yes, I do have Apple Care coverage” as I wanted to stick to the original conversation as closely as possible for it to be more realistic.&lt;/p&gt;

&lt;p&gt;We got information that the user has no Care coverage. I’m glad I wasn’t asked to buy Apple Care on the spot.&lt;/p&gt;

&lt;p&gt;Pro note: upselling is nice, but always remember that the rule of the thumb and the main purpose of a conversational AI app is to solve the user’s problem as fast and as efficiently as possible.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node no_apple_care_explain
{
    do 
    {
        #sayText("Alright. So, when it comes to getting Apple Care, it can actually only be purchased within 60 days of originally purchasing the device... Other than that once there's actual damage to the phone, you're actually not allowed to purchase Apple care.");
        wait *;
    }   
    transitions 
    {
        confirm_phone_model: goto confirm_phone_model on #messageHasIntent("broken_phone_screen_replace_cost") or #messageHasIntent("how_much_for_repair_with_no_apple_care");
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;do&lt;/code&gt; section we don’t pose any questions. This means the conversation doesn’t have to necessarily go the direction we program it to go in the &lt;code&gt;transitions&lt;/code&gt; section. It can go to one of the digressions instead, depending on what the user is thinking. &lt;/p&gt;

&lt;p&gt;In my case, I asked the call center operator how much I’d have to pay to repair the phone screen without having Apple Care on me. And that’s what I wrote in the &lt;code&gt;intents&lt;/code&gt; section in the data.json file for that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"v2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"intents"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; 
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"how_much_for_repair_with_no_apple_care"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"includes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"how much does it cost to repair without apple care"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"how much will it cost to repair without apple care"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"how much would it cost to repair without apple care"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"Without apple care how much does it cost "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"what's the price to repair the phone with no apple care"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"what's the price for reparing phone without apple care"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"cost without apple care"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"if I don't have apple care, how much would it cost me to repare"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"without having apple care how much the repair"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"no apple care, how much would it cost to repair the screen"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"reparing the screen without apple care"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"broken_phone_screen_repair_cost"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"includes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"how much does it cost to repair a broken screen"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"how much does it cost to repair a cracked screen"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"how much would it cost to repair a cracked phone screen?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"what's the price to repair a cracked screen"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"what's the price to repair the broken screen"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"how much does it cost to fix a broken phone screen"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"cost of broken phone screen"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"price to fix a cracked screen on the phone"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Under &lt;code&gt;includes&lt;/code&gt; you write words or phrases that you know your user would say in a particular instant. There can be as many variations as you like.&lt;/p&gt;

&lt;p&gt;Next node is all about confirming the phone model the user has already mentioned before. It’s only natural for a human to ask such a confirmation question and by the same token makes the conversational AI sound more natural. And that’s besides providing feedback to the user that we got all the information right.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node confirm_phone_model
{
    do 
    {     
        #sayText("Yes, I'm pulling that up now..."); 
        #waitForSpeech(1000);
        #sayText(" " + $phone_model + " Is it Pro or Pro Max, you said?");
        wait*;
    }
    transitions
    {
        screen_repair_price: goto screen_repair_price on #messageHasIntent("no") or #messageHasData("phone_model") or #messageHasIntent("not_pro_pro_max") or #messageHasIntent("phone_just_as_i_said");
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next up I have 2 identical phrases mapped in 2 different ways: digression and node.&lt;/p&gt;

&lt;p&gt;Nodes are stable. They let the conversation move from one point to another in a linear way. Digressions, on the other hand, are like conversational zigzags, the conversation could jump from one digression to another and then back (if needed).&lt;/p&gt;

&lt;p&gt;In this particular case, I wrote both because I used the following node in my previous node’s transitions section.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node screen_repair_price
{
    do 
    {     
        #sayText("Okay gotcha, so that pricing is showing one ninety-nine and that of course plus tax most likely."); 
        wait*;
    }
    transitions
    {

    }
}

digression screen_repair_price
{
    conditions {on #messageHasIntent("pnot_pro_pro_max") or #messageHasIntent("phone_just_as_i_said") and #messageHasData("phone_model");} 
    do 
    {     
        #sayText("Okay gotcha, so that pricing is showing one ninety-nine and that of course plus tax most likely."); 
        wait*;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;transitions&lt;/code&gt; here are empty. That means the conversation can go to one of the digressions based on the intents triggered.&lt;/p&gt;

&lt;p&gt;Here’s a very simple digression that a customer support representative provides the user with the information on the timing of the repair.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;digression time_no_parts_available
{
    conditions {on #messageHasIntent("time_no_parts_available");} 
    do 
    {     
        #sayText("It depends, but the average time is about three to five business days. And that's for mailing in the phone instead of going to the store. That being said, I've never heard of the screen repair taking longer than this time frame."); 
        wait*;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And yet another simple digression that will get triggered shall a user ask what the mailing/shipping options are.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;digression mailing_option_pricing
{
    conditions {on #messageHasIntent("mailing_option") or #messageHasIntent("mailing_option_pricing");} 
    do 
    {     
        #sayText("Alright, so with shipping, we only ship with UPS or FedEx. That typically costs about 5 to 6 dollars. Could be a bit more expensive, though."); 
        wait*;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In my real-life conversation with the Apple support representative, I got all the information I required. So it was time for me to move on to my next question about trading in my phone to get a newer version. &lt;/p&gt;

&lt;p&gt;Note that it’s a digression since the question I asked popped out of the blue.&lt;/p&gt;

&lt;p&gt;This digression structure follows the same logic as the digressions above, so should be easy breezy for you.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;digression trade_in_update
{
    conditions {on #messageHasIntent("upgrade_phone") or #messageHasIntent("trade_in_phone");} 
    do
    {
        #sayText("Could you tell me the model of the phone, please?");
        wait *;
    }   
    transitions
    {
        trade_in_cost: goto trade_in_cost on #messageHasData("phone_model");
    }
    onexit
    {
        trade_in_cost : do {
        set $owner_phone_model =  #messageGetData("phone_model")[0]?.value??"";}
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next up is a very simple node that we program to let the user know how much money that would have as a trade-in credit for the purchase of the new iPhone:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node trade_in_cost
{
    do 
    {   
        #sayText("So with the " + $owner_phone_model + " in prestine condition you can get up to 500 dollars in trade-in credit. That's for the next generation phone."); 
        wait*;
    }
    transitions
    {

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similarly, here we let the user know how much the final cost of the phone be after the credits are applied:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;digression new_phone_price_after_discound
{
    conditions {on #messageHasIntent("new_phone_price_after_discount");} 
    do 
    {     
        #sayText("The best thing to do is to go to apple dot com because there are different variations to the phone. But the bottom level model with no Apple Care is showing to be 599 dollars after trade it for 128 gigabyte phone. This is a subtotal without tax."); 
        wait*;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point I got both of my questions answered and my conversation with the Apple Support operator ended.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;digression thats_it_bye
{
    conditions {on #messageHasIntent("thank_you") or #messageHasIntent("that_would_be_it");} 
    do 
    {     
        #sayText("No problem, happy to help. I hope you have a great rest of your day. Bye!"); 
        #disconnect();
        exit;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that’s it. End of the conversation with all issues tackled the easiest way possible.&lt;/p&gt;

&lt;p&gt;Despite this being my whole conversation, I’ve written out more digressions that solve some of the most common user’s problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Frozen screen&lt;/li&gt;
&lt;li&gt;Phone doesn’t get charged&lt;/li&gt;
&lt;li&gt;Accidental purchase on Apple Store, iTunes, etc&lt;/li&gt;
&lt;li&gt;User forgot their iPhone password&lt;/li&gt;
&lt;li&gt;iPhone got water damage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On the Apple website, all the abovementioned solutions don’t provide an immediate answer. Instead, the users are prompted to contact chat- or voice-based support. These use cases and so many more can be automated by creating one simple conversational AI app that will tackle all the FAQs in the operator’s stead, saving the company money and time of the operators.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-note"&gt;
  &lt;/a&gt;
  Final note
&lt;/h2&gt;

&lt;p&gt;Naturally, this is just a demo and is a mirror-like reflection of my own conversation with the Apple Support operator. However, the good news is that this could serve as a solid base for your own customer support conversational AI apps. Or for automating your call center, for example. &lt;/p&gt;

&lt;p&gt;The best thing to do now (and a great opportunity to learn by practicing) is opening the &lt;a href="https://github.com/dasha-samples/apple-customer-support-app"&gt;source code&lt;/a&gt; and adjusting it to make it fit your criteria. &lt;/p&gt;

&lt;p&gt;And the number one best thing to do is to join &lt;a href="https://community.dasha.ai"&gt;Dasha Developer Community&lt;/a&gt; where you’ll meet welcoming like-minded developers who share ideas, questions, and get all the help they need (for free, of course). &lt;/p&gt;

&lt;p&gt;I’m looking forward to seeing your success story in Dasha Developer Community! :) See you there soon! &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>vscode</category>
      <category>programming</category>
    </item>
    <item>
      <title>A solution to rEFInd unable to load using shim when Secure Boot is enabled</title>
      <author>Hollow Man</author>
      <pubDate>Wed, 27 Oct 2021 15:19:13 +0000</pubDate>
      <link>https://dev.to/hollowman6/a-solution-to-refind-unable-to-load-using-shim-when-secure-boot-is-enabled-1e8l</link>
      <guid>https://dev.to/hollowman6/a-solution-to-refind-unable-to-load-using-shim-when-secure-boot-is-enabled-1e8l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;Ubuntu 21.10 can load on my computer through secure boot, and the shim version is 15.4. Then refer to the official &lt;a href="https://www.rodsbooks.com/refind/secureboot.html#shim"&gt;tutorial&lt;/a&gt;, I installed rEFInd v0.13.2 (the latest version when I posted this blog) via PPA in Ubuntu 21.10. However, when I restart the system and load rEFInd, it always fails with the message &lt;code&gt;Verification failed:(0x1A)Security Violation&lt;/code&gt;. I'm sure that both &lt;code&gt;refind_local.cer&lt;/code&gt; and &lt;code&gt;refind.cer&lt;/code&gt; under the &lt;code&gt;EFI/refind/keys/&lt;/code&gt; have been enrolled through &lt;code&gt;MokManager&lt;/code&gt; (Although only &lt;code&gt;refind_local.cer&lt;/code&gt; is needed through PPA installation).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cause"&gt;
  &lt;/a&gt;
  Cause
&lt;/h2&gt;

&lt;p&gt;From &lt;a href="https://sourceforge.net/p/refind/discussion/general/thread/c54261c145/"&gt;this post&lt;/a&gt;, I got that rEFInd currently (v0.13.2) lacks the &lt;code&gt;.sbat&lt;/code&gt; section. For shim 15.3 and later versions, &lt;a href="https://github.com/rhboot/shim/blob/main/SBAT.md"&gt;SBAT&lt;/a&gt; is mandatory, resulting in failure to start rEFInd.&lt;/p&gt;

&lt;p&gt;The post also indicates that the author of rEFInd is currently studying how to solve the related problems. I hope the later versions can fix this issue.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;p&gt;To conclude, you need to use shim 15 to solve this problem. For this purpose, you can perform the following steps (applicable to amd64. Steps are also similar if you are on other architectures):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Obtain MokManager and the shim efi file signed by Microsoft from &lt;a href="https://launchpad.net/ubuntu"&gt;Ubuntu launchpad&lt;/a&gt;. To achieve this, download &lt;a href="http://launchpadlibrarian.net/469850621/shim_15+1552672080.a4a1fbe-0ubuntu2_amd64.deb"&gt;shim_15+1552672080.a4a1fbe-0ubuntu2_amd64.deb&lt;/a&gt; and &lt;a href="http://launchpadlibrarian.net/502909051/shim-signed_1.45+15+1552672080.a4a1fbe-0ubuntu2_amd64.deb"&gt;shim-signed_1.45+15+1552672080-064ubuntub_bed64.deb&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Unpack the downloaded &lt;a href="http://launchpadlibrarian.net/469850621/shim_15+1552672080.a4a1fbe-0ubuntu2_amd64.deb"&gt;shim_15+1552672080.a4a1fbe-0ubuntu2_amd64.deb&lt;/a&gt; and take out the &lt;code&gt;mmx64.efi&lt;/code&gt; file. (&lt;code&gt;data.tar.xz&lt;/code&gt;-&amp;gt; &lt;code&gt;.&lt;/code&gt; -&amp;gt; &lt;code&gt;usr/lib/shim/mmx64.efi&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Unpack the download &lt;a href="http://launchpadlibrarian.net/502909051/shim-signed_1.45+15+1552672080.a4a1fbe-0ubuntu2_amd64.deb"&gt;shim-signed_1.45+15+1552672080.a4a1fbe-0ubuntu2_amd64.deb&lt;/a&gt;, take out the &lt;code&gt;shimx64.efi.dualsigned&lt;/code&gt; file. (&lt;code&gt;data.tar.xz&lt;/code&gt;-&amp;gt; &lt;code&gt;.&lt;/code&gt; -&amp;gt; &lt;code&gt;usr/lib/shim/shimx64.efi.dualsigned&lt;/code&gt;) Rename it to &lt;code&gt;shimx64.efi&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Go to download &lt;a href="https://sourceforge.net/projects/refind/files/0.13.2/refind-bin-0.13.2.zip/download"&gt;refind-bin-0.13.2.zip&lt;/a&gt;.  Then create a new folder, and put the two files taken out together with the downloaded zip file into the new folder. &lt;/li&gt;
&lt;li&gt;Open terminal in the fore-mentioned folder, then execute the following commands:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;unzip refind-bin-0.13.2.zip
&lt;span class="nb"&gt;cd &lt;/span&gt;refind-bin-0.13.2
&lt;span class="nb"&gt;sudo&lt;/span&gt; ./refind-install &lt;span class="nt"&gt;--shim&lt;/span&gt; ../shimx64.efi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you encounter any confirmation during the installation process, just enter &lt;code&gt;y&lt;/code&gt; to confirm.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;After restarting, if it prompts &lt;code&gt;Verification failed&lt;/code&gt;, refer to step 9 of the official &lt;a href="https://www.rodsbooks.com/refind/secureboot.html#shim"&gt;tutorial&lt;/a&gt;. Select  &lt;code&gt;Enroll key from disk&lt;/code&gt;, and then select the ESP disk where you installed rEFInd. Finally, choose the file of path &lt;code&gt;EFI/refind/keys/refind.cer&lt;/code&gt; to import.&lt;/li&gt;
&lt;li&gt;If you use a non-Ubuntu Linux system on your computer, you can continue to import the cer files corresponding to your distributions in &lt;code&gt;EFI/refind/keys&lt;/code&gt; as above. Failure to do so may cause your Linux distribution to be unable to boot via rEFInd. &lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>linux</category>
      <category>refind</category>
      <category>security</category>
      <category>shim</category>
    </item>
    <item>
      <title>Keras Model Errors on Loading using TF2.3 - IndexError: list index out of range</title>
      <author>Hollow Man</author>
      <pubDate>Wed, 27 Oct 2021 15:17:23 +0000</pubDate>
      <link>https://dev.to/hollowman6/keras-model-errors-on-loading-using-tf23-indexerror-list-index-out-of-range-255</link>
      <guid>https://dev.to/hollowman6/keras-model-errors-on-loading-using-tf23-indexerror-list-index-out-of-range-255</guid>
      <description>&lt;h3&gt;
  &lt;a href="#here-is-an-example-to-solve-similar-questions-from-the-issue-43561"&gt;
  &lt;/a&gt;
  Here is an example to solve similar questions from the &lt;a href="https://github.com/tensorflow/tensorflow/issues/43561"&gt;issue #43561&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;When I was trying to load the sequential model &lt;a href="https://github.com/vogon101/skincancer/blob/master/models/model_6_combined_2_DA.h5"&gt;here&lt;/a&gt; using &lt;code&gt;tf.keras.models.load_model&lt;/code&gt; in &lt;strong&gt;TF 2.3.1&lt;/strong&gt;, an error is thrown at the following location:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~/.local/lib/python3.7/site-packages/tensorflow/python/keras/engine/functional.py &lt;span class="k"&gt;in &lt;/span&gt;_should_skip_first_node&lt;span class="o"&gt;(&lt;/span&gt;layer&lt;span class="o"&gt;)&lt;/span&gt;
   1031   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;isinstance&lt;span class="o"&gt;(&lt;/span&gt;layer, Functional&lt;span class="o"&gt;)&lt;/span&gt; and
   1032           &lt;span class="c"&gt;# Filter out Sequential models without an input shape.&lt;/span&gt;
-&amp;gt; 1033           isinstance&lt;span class="o"&gt;(&lt;/span&gt;layer._layers[0], input_layer_module.InputLayer&lt;span class="o"&gt;))&lt;/span&gt;
   1034 
   1035 
IndexError: list index out of range
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The model is believed to be trained using keras and under TF1.9, and the model definition can be found &lt;a href="https://github.com/vogon101/skincancer/blob/master/src/sandbox/ml_lib/combined_model_v2.py"&gt;here&lt;/a&gt;, and here's &lt;a href="https://github.com/vogon101/skincancer/blob/master/src/sandbox/v6_combined_model_v2.py"&gt;the code for training&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then I downgraded to TF 2.2 and 2.1 with the same code above, it threw the error just as &lt;a href="https://github.com/tensorflow/tensorflow/issues/35934"&gt;#35934&lt;/a&gt; Keras Model Errors on Loading - 'list' object has no attribute 'items'&lt;/p&gt;

&lt;p&gt;Then I downgraded to TF 2.0, the code was executing indefinitely. Finally I had to manually stop it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;/opt/conda/lib/python3.6/site-packages/tensorflow_core/python/pywrap_tensorflow_internal.py &lt;span class="k"&gt;in &lt;/span&gt;IsMapping&lt;span class="o"&gt;(&lt;/span&gt;o&lt;span class="o"&gt;)&lt;/span&gt;
   2569 
   2570     &lt;span class="s2"&gt;"""
-&amp;gt; 2571     return _pywrap_tensorflow_internal.IsMapping(o)
   2572 
   2573 def IsMappingView(o):
KeyboardInterrupt: 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then I have tried to use &lt;code&gt;keras&lt;/code&gt; instead of &lt;code&gt;tf.keras&lt;/code&gt; with TF 2.3.1 and Keras 2.3.1, first I encountered an error that can be solved in this way: &lt;a href="https://github.com/tensorflow/tensorflow/issues/38589#issuecomment-665930503"&gt;https://github.com/tensorflow/tensorflow/issues/38589#issuecomment-665930503&lt;/a&gt; . Then another error occurs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~/.local/lib/python3.7/site-packages/tensorflow/python/keras/backend.py &lt;span class="k"&gt;in function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;inputs, outputs, updates, name, &lt;span class="k"&gt;**&lt;/span&gt;kwargs&lt;span class="o"&gt;)&lt;/span&gt;
   3931     &lt;span class="k"&gt;if &lt;/span&gt;updates:
   3932       raise ValueError&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'`updates` argument is not supported during '&lt;/span&gt;
-&amp;gt; 3933                        &lt;span class="s1"&gt;'eager execution. You passed: %s'&lt;/span&gt; % &lt;span class="o"&gt;(&lt;/span&gt;updates,&lt;span class="o"&gt;))&lt;/span&gt;
   3934     from tensorflow.python.keras import models  &lt;span class="c"&gt;# pylint: disable=g-import-not-at-top&lt;/span&gt;
   3935     from tensorflow.python.keras.utils import tf_utils  &lt;span class="c"&gt;# pylint: disable=g-import-not-at-top&lt;/span&gt;

ValueError: &lt;span class="sb"&gt;`&lt;/span&gt;updates&lt;span class="sb"&gt;`&lt;/span&gt; argument is not supported during eager execution. You passed: &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;tf.Variable &lt;span class="s1"&gt;'UnreadVariable'&lt;/span&gt; &lt;span class="nv"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=()&lt;/span&gt; &lt;span class="nv"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;int64, &lt;span class="nv"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0&amp;gt;, &amp;lt;tf.Variable &lt;span class="s1"&gt;'UnreadVariable'&lt;/span&gt; &lt;span class="nv"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;3, 3, 3, 32&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;float32, &lt;span class="nv"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
array&lt;span class="o"&gt;([[[[&lt;/span&gt;0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
          0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
          0., 0.],
......
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So this way fails.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solutions"&gt;
  &lt;/a&gt;
  Solutions
&lt;/h2&gt;

&lt;p&gt;One way is to use TF 1.15.4 and Keras 2.3.1, and finally it worked out fine, inputs, outputs, summary etc. are all parsed correctly, as well as being able to run data through the model.&lt;/p&gt;

&lt;p&gt;Another is to modify the TF 2.3.1 source code so that the model can be used in latest version using tensorflow keras. You have to redefining &lt;code&gt;_should_skip_first_node&lt;/code&gt; in file &lt;code&gt;tensorflow/python/keras/engine/functional.py&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def _should_skip_first_node(layer):
  """Returns True if the first layer node should not be saved or loaded."""
  # Networks that are constructed with an Input layer/shape start with a
  # pre-existing node linking their input to output. This node is excluded from
  # the network config.
  if layer._layers:
    return (isinstance(layer, Functional) and
          # Filter out Sequential models without an input shape.
          isinstance(layer._layers[0], input_layer_module.InputLayer))
  else:
    return isinstance(layer, Functional)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#afterwards"&gt;
  &lt;/a&gt;
  Afterwards
&lt;/h2&gt;

&lt;p&gt;I have submitted a &lt;a href="https://github.com/tensorflow/tensorflow/pull/43570"&gt;PR #43570&lt;/a&gt; to tensorflow, and it get fixed in Tensorflow 2.5.0.&lt;/p&gt;

</description>
      <category>ai</category>
      <category>tensorflow</category>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>19 tips to Google like a pro</title>
      <author>Ramesh chandra pola</author>
      <pubDate>Wed, 27 Oct 2021 15:07:00 +0000</pubDate>
      <link>https://dev.to/byteslash/19-tips-to-google-like-a-pro-2hm8</link>
      <guid>https://dev.to/byteslash/19-tips-to-google-like-a-pro-2hm8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello everyone! 🧡
&lt;/h2&gt;

&lt;p&gt;Before we start Let’s connect on &lt;a href="https://twitter.com/POLARAMESHCHAN2"&gt;Twitter&lt;/a&gt; and also follow me here for more useful blogs.&lt;br&gt;
In this article, we will learn how to search on &lt;strong&gt;Google like a pro&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let’s get started🤩
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LBdHsyFN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://64.media.tumblr.com/tumblr_ljkn5yjPkO1qixleeo1_400.gifv" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LBdHsyFN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://64.media.tumblr.com/tumblr_ljkn5yjPkO1qixleeo1_400.gifv" alt="waiting_gif" width="372" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Googling is one of the most important skills for every developer.  It helps you to search effectively for a solution to a problem or an error by saving 1000s of important hours and getting your desired result quickly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Don’t worry, I  am here to save your time. For that, I just need your feedback and support 🙌🧡.&lt;/p&gt;

&lt;p&gt;Here are tips on how to master the art of googling as a developer.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-if-you-are-looking-for-a-file-for-any-topic-on-google-then-filetype-will-help-you"&gt;
  &lt;/a&gt;
  1. If you are looking for a file for any topic on Google, then  filetype: will help you:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: filetype:pdf how to learn react
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G6N7N_se--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339564050/qc96_odak.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G6N7N_se--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339564050/qc96_odak.jpeg" alt="WhatsApp Image 2021-10-27 at 01.28.23.jpeg" width="880" height="284"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-asterisk-can-be-used-as-placeholders-which-will-be-replaced-by-any-word-or-phrase"&gt;
  &lt;/a&gt;
  2. Asterisk (*) can be used as placeholders, which will be replaced by any word or phrase.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: how to learn * in 1 month
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JHxgVl-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339502476/vTGgV7UhJ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JHxgVl-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339502476/vTGgV7UhJ.jpeg" alt="WhatsApp Image 2021-10-27 at 01.16.55.jpeg" width="880" height="292"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-using-site-will-search-within-a-specific-website"&gt;
  &lt;/a&gt;
  3. Using site: will search within a specific website.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example:  site:twitter.com polarameshchan2.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;⭐*&lt;em&gt;Do follow me on &lt;a href="https://twitter.com/POLARAMESHCHAN2"&gt;Twitter&lt;/a&gt; . *&lt;/em&gt;😁&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KbDZvrzK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339541541/S_TAsQth9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KbDZvrzK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339541541/S_TAsQth9.jpeg" alt="WhatsApp Image 2021-10-27 at 09.23.03.jpeg" width="880" height="286"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-use-quotes-to-search-for-an-exactmatch-search"&gt;
  &lt;/a&gt;
  4. Use quotes to search for an exact-match search:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: “What is Web3.0”
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ycf09h2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635338329882/05IXOLOkV.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ycf09h2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635338329882/05IXOLOkV.jpeg" alt="WhatsApp Image 2021-10-27 at 00.20.21.jpeg" width="880" height="402"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-using-search-within-a-range-of-numbers-like-years"&gt;
  &lt;/a&gt;
  5. Using .. Search within a range of numbers like years
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example:  money heist 2017..2021
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X9TBgeRy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339573807/7qGjqWEyz.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X9TBgeRy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339573807/7qGjqWEyz.jpeg" alt="WhatsApp Image 2021-10-27 at 08.25.56.jpeg" width="880" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-you-can-use-and-operator-to-get-the-results-only-related-to-both-terms"&gt;
  &lt;/a&gt;
  6. You can use AND Operator to get the results only related to both terms:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: frontend AND backend
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EhbB3tc8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635338491846/HyGC7t-rC.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EhbB3tc8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635338491846/HyGC7t-rC.jpeg" alt="WhatsApp Image 2021-10-27 at 00.35.20.jpeg" width="880" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#7-using-or-operator-will-return-results-only-related-to-either-of-two-keywords"&gt;
  &lt;/a&gt;
  7. Using OR operator will return results only related to either of two keywords:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: Java OR C++
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GgvUF_dN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635338586175/K1lh2IYpe.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GgvUF_dN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635338586175/K1lh2IYpe.jpeg" alt="WhatsApp Image 2021-10-27 at 00.41.57.jpeg" width="880" height="554"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#8-if-you-want-to-eliminate-a-website-from-your-search-results-then-site-will-help-you"&gt;
  &lt;/a&gt;
  8. If you want to eliminate a website from your search results, then -site: will help you
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: -site:youtube.com javascript

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--80HPe1MG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339680556/J-E7gsiLw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--80HPe1MG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339680556/J-E7gsiLw.jpeg" alt="WhatsApp Image 2021-10-27 at 12.52.13.jpeg" width="880" height="307"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#9-whenever-you-want-to-compare-two-things-then-use-vs-with-quotes-on-the-terms"&gt;
  &lt;/a&gt;
  9. Whenever you want to compare two things, then use vs with quotes on the terms.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: "javascript" vs "typescript"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jGJxQGpv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339965280/9SGsyS9dy.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jGJxQGpv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339965280/9SGsyS9dy.jpeg" alt="WhatsApp Image 2021-10-27 at 18.35.51.jpeg" width="880" height="296"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#10-using-location-you-can-find-news-related-to-a-particular-location"&gt;
  &lt;/a&gt;
  10. Using Location: you can find news related to a particular location.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; Example: Location:india web developers.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CGWjpaBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339711146/Or0cEz7bo.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CGWjpaBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339711146/Or0cEz7bo.jpeg" alt="WhatsApp Image 2021-10-27 at 13.02.55.jpeg" width="880" height="615"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#11-define-helps-you-to-find-the-definition-of-a-word-or-terminology-in-a-simple-and-easy-way"&gt;
  &lt;/a&gt;
  11. Define: helps you to find the definition of a word or terminology in a simple and easy way.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: define: Web3.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7n22UOpa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339696873/e34uVBopbT.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7n22UOpa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339696873/e34uVBopbT.jpeg" alt="WhatsApp Image 2021-10-27 at 12.59.55.jpeg" width="880" height="354"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#12-if-you-came-across-a-new-website-then-the-question-arises-what-is-this-website-about-so-info-will-help-you-to-know-about-that-website"&gt;
  &lt;/a&gt;
  12. If you came across a new website, then the question arises, what is this website about? so info: will help you to know about that website.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: info:freecodecamp.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x7I4K9DV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339688277/RxC74bgyU.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x7I4K9DV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339688277/RxC74bgyU.jpeg" alt="WhatsApp Image 2021-10-27 at 12.56.02.jpeg" width="880" height="181"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#13-inurl-helps-you-to-search-for-information-originating-in-a-particular-year"&gt;
  &lt;/a&gt;
  13. inurl: helps you to search for  information originating in a particular year
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: inurl:2020 React
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UKOeCYOY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339668898/llUqo24vb.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UKOeCYOY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339668898/llUqo24vb.jpeg" alt="WhatsApp Image 2021-10-27 at 12.49.10.jpeg" width="880" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#14-if-you-want-to-find-time-of-different-countries-this-trick-will-help-you"&gt;
  &lt;/a&gt;
  14. If you want to find time of different countries, this trick will help you
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: time "new york"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QMB6HLG8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339655094/VbedbNOHX.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QMB6HLG8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339655094/VbedbNOHX.jpeg" alt="WhatsApp Image 2021-10-27 at 10.24.48.jpeg" width="880" height="305"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#15-using-related-to-get-sites-that-are-similar-to-other-sites"&gt;
  &lt;/a&gt;
  15. Using related: to get sites that are similar to other sites
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: related:youtube.com

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r4PipRWz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339644175/-GlJHFGAl.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r4PipRWz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339644175/-GlJHFGAl.jpeg" alt="WhatsApp Image 2021-10-27 at 10.13.14.jpeg" width="880" height="181"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#16-using-the-before-operator-will-return-only-results-before-a-given-date-you-must-provide-only-a-year-or-daymonthyear-dates"&gt;
  &lt;/a&gt;
  16. Using the before: operator will return only results before a given date. You must provide only a year or Day/month/year dates.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: Python before:2020

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2wZ8TMx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339585735/g7SQFEW2w.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2wZ8TMx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339585735/g7SQFEW2w.jpeg" alt="WhatsApp Image 2021-10-27 at 08.33.23.jpeg" width="880" height="309"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#17-in-the-same-way-as-before-after-operator-will-return-only-results-after-a-given-date-you-must-provide-only-a-year-or-daymonthyear-dates"&gt;
  &lt;/a&gt;
  17. In the same way as before: after: operator will return only results after a given date. You must provide only a year or Day-month-year dates.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: Python after:2020

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HBvXX8wQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339622613/_X5D53mJM.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HBvXX8wQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339622613/_X5D53mJM.jpeg" alt="WhatsApp Image 2021-10-27 at 08.58.10.jpeg" width="880" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#18-operator-will-help-you-to-exclude-a-term-from-the-search-results"&gt;
  &lt;/a&gt;
  18. - operator will help you to exclude a term from the search results.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example: Javascript -CSS
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JGpDX91H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339472774/S8_lFeJQR.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JGpDX91H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635339472774/S8_lFeJQR.jpeg" alt="WhatsApp Image 2021-10-27 at 01.14.01.jpeg" width="880" height="296"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#19-last-but-not-least-advanced-search-is-a-builtin-feature-of-google-that-allows-a-user-to-specify-additional-requirements-for-a-search"&gt;
  &lt;/a&gt;
  19. Last but not least, Advanced search is a built-in feature of Google that allows a user to specify additional requirements for a search.
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.google.com/advanced_search"&gt;Advanced Search&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9kWHHLjc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635342757405/lQq3-kQp2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9kWHHLjc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635342757405/lQq3-kQp2.jpeg" alt="WhatsApp Image 2021-10-27 at 19.21.33.jpeg" width="880" height="505"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all for today! 😁 You have reached the end of the article 😍&lt;/p&gt;

&lt;p&gt;If you found this article helpful, please like and share it 🧡. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RvvGHuWq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635343809376/ASFrwukN0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RvvGHuWq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635343809376/ASFrwukN0.gif" alt="wonderful.gif" width="480" height="480"&gt;&lt;/a&gt;&lt;br&gt;
Don’t forget to share this article with your friends or colleagues. I'm Ramesh Chandra Pola who loves to build projects and share valuable tips in my Blogs. Feel free to connect with me on &lt;a href="https://twitter.com/POLARAMESHCHAN2"&gt;Twitter&lt;/a&gt;.  &lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
