<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Basico do Basico de HTML5!</title>
      <author>Bieldeid</author>
      <pubDate>Thu, 24 Jun 2021 03:13:37 +0000</pubDate>
      <link>https://dev.to/deid/basico-do-basico-de-html5-4491</link>
      <guid>https://dev.to/deid/basico-do-basico-de-html5-4491</guid>
      <description>

&lt;p&gt;Notas do editor:&lt;br&gt;
"A principio gostaria de dizer que ainda sou um mero estudante e continuarei sendo nessa vida que escolhi ter, pois nunca paramos de aprender nessa área.&lt;br&gt;
Sendo assim, se tiver alguma sugestão, algo a complementar ou corrigir algo em meus resumos, fique a vontade.&lt;br&gt;
Estou fazendo isso para melhorar meu aprendizado e passar o conhecimento que adquiri! Sendo assim, tenha um belo dia! &amp;lt;3"&lt;/p&gt;



&lt;p&gt;Bom, você ai que quer entrar no ramo da programação mas não sabe por onde começar ou quer ter a primeira experiência, aqui vai uma dica que eu dou, e que provavelmente nem irá precisar instalar uma IDE para tal. (Caso não saiba o que é uma IDE ou o básico das outras coisas e quer saber mais, da uma olhada no perfil do &lt;a href="https://dev.to/darrow"&gt;https://dev.to/darrow&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;A principio vamos saber o que significa HTML5:&lt;br&gt;
HTML (Hyper Text Markup Language) é nada mais nada menos do que:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Um arquivo que contem marcadores (tag).&lt;/li&gt;
&lt;li&gt;Essas tags indicam para o navegador (browser) como a página deve ser apresentada.&lt;/li&gt;
&lt;li&gt;Marcadores usualmente vem em pares

&lt;code&gt;&amp;lt;tag&amp;gt;...&amp;lt;/tag&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
&lt;li&gt;Também podem aparecer de forma abreviada como:

&lt;code&gt;&amp;lt;tag atributo="valor".../&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Agora, vamos compreender um pouco das tags que utilizamos no html5, lembrando, apenas o básico!&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;html&amp;gt; - Define um documento HTML, tudo que estiver nele será apresentado no navegador.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;head&amp;gt; - Define e configura o topo do seu site/código, como o título e outros&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;title&amp;gt; - Define o título do seu site, que fica nas abas do navegador&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;body&amp;gt; - Define o corpo do HTML, tudo que estiver nele será visível no site.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;h1&amp;gt; até a &amp;lt;h6&amp;gt; - Define cabeçalhos de 1 a 6&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;p&amp;gt; - Define um parágrafo.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;br&amp;gt; - Define uma quebra de linha.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;




&lt;p&gt;Sendo assim, vamos fazer o seu primeiro site?&lt;/p&gt;

&lt;p&gt;Abra seu bloco de notas e escreva isso aqui:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--57YfAe-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2nehnym4lhrser0vre9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--57YfAe-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2nehnym4lhrser0vre9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Após finalizar, salve-o como "index.html" e execute-o, se você fez tudo certinho, o site irá aparecer dessa forma:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0U6z752c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kttyc8eunuczexeiy04i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0U6z752c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kttyc8eunuczexeiy04i.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Espero que você tenha consigo realizar o seu possível primeiro site de muitos outros.&lt;br&gt;
Não se esqueça de fuçar nesse código e entender mais um pouco sobre o que cada tag faz e etc.&lt;br&gt;
Agradeço se leu até aqui, um abraço e até a próxima!&lt;/p&gt;

</description>
      <category>html</category>
      <category>brasil</category>
    </item>
    <item>
      <title>The NEW GitHub Issues and Boards are HERE and they are COOL!</title>
      <author>Davide 'CoderDave' Benvegnù</author>
      <pubDate>Thu, 24 Jun 2021 02:57:51 +0000</pubDate>
      <link>https://dev.to/github/the-new-github-issues-and-boards-are-here-and-they-are-cool-31je</link>
      <guid>https://dev.to/github/the-new-github-issues-and-boards-are-here-and-they-are-cool-31je</guid>
      <description>&lt;p&gt;The new GitHub Issues and Project Boards are here, and they are &lt;strong&gt;pretty cool&lt;/strong&gt;! Today we are gonna see all the &lt;strong&gt;new and updated features&lt;/strong&gt;, and what we can do with them.&lt;/p&gt;

&lt;p&gt;Let's get into it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-has-been-announced-and-availability"&gt;
  &lt;/a&gt;
  What Has Been Announced and Availability
&lt;/h3&gt;

&lt;p&gt;There are 3 main new features as part of this release: &lt;strong&gt;Issue Forms&lt;/strong&gt;, &lt;strong&gt;Task Lists&lt;/strong&gt;, and &lt;strong&gt;Table View + Boards&lt;/strong&gt; in the Projects.&lt;/p&gt;

&lt;p&gt;Let's start with availability:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UmZu4X9y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41i0ahrk3lkqazp0ovg1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UmZu4X9y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41i0ahrk3lkqazp0ovg1.png" alt="Availability"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently they are all released in &lt;strong&gt;beta&lt;/strong&gt;, with some differences.&lt;/p&gt;

&lt;p&gt;Both Issue Forms and Task list are in &lt;strong&gt;public beta&lt;/strong&gt;, available to everyone on every plan. Issue forms, however, are currently available only &lt;strong&gt;Public Repositories&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The new Table view and Boards, on the other hand, are in &lt;strong&gt;Limited Beta&lt;/strong&gt;. To get access to it you need to request it at the link &lt;a href="https://github.com/features/issues"&gt;https://github.com/features/issues&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-new"&gt;
  &lt;/a&gt;
  What Is New?
&lt;/h3&gt;

&lt;p&gt;With that out of the way, what is new? Well... a lot!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X4LuILSc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bysxan0n4toy466qe1ke.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X4LuILSc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bysxan0n4toy466qe1ke.png" alt="Table view"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The new capabilities of Projects include things like issue hierarchy, &lt;strong&gt;custom fields&lt;/strong&gt;, a spreadsheet-like table, and saved views - &lt;strong&gt;all built into GitHub&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;And for the Issue Forms, they provide &lt;strong&gt;improved issue template&lt;/strong&gt; with a form layout that can use optional and validated fields and values. This allows to better manage the influx of bugs, features, and general requests by making each of them more actionable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h3&gt;

&lt;p&gt;Alright, enough talking. Let's see this in action. We'll take a look first at the issue forms and task lists, and then we will move to the new boards.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MvyGcLg6AvI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/MvyGcLg6AvI?t=116"&gt;Link to the video (demo starts at minute 1:56 ): https://youtu.be/MvyGcLg6AvI?t=116&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h3&gt;

&lt;p&gt;I can think of a thousand scenarios in which all of this could be beneficial, but I'd love to know how you would use this. Let me know in the comments below.&lt;/p&gt;

&lt;p&gt;All those new features are pretty cool. I mean, obviously they can't replace tools like Azure Boards or Jira for complex projects &lt;strong&gt;just yet&lt;/strong&gt;, but I believe &lt;strong&gt;GitHub is on the right track&lt;/strong&gt; with this.&lt;/p&gt;

&lt;p&gt;The new Project Boards and Tables connect your planning directly to the work your teams are doing, and flexibly adapt to whatever your team needs at any point. And now with custom fields, you can use to track a sprint, plan a feature, or manage a large-scale release.&lt;/p&gt;

&lt;p&gt;I'm pretty excited to see what this will evolve to be, and I think having everything we need directly in GitHub is a big plus.&lt;/p&gt;

&lt;p&gt;But I'd like to know what you think about this, so let me know in the comment section below ok?&lt;/p&gt;

&lt;p&gt;You may also want to watch &lt;a href="https://youtu.be/h6fOErvWIGI"&gt;this video here&lt;/a&gt;, in which I show how to use upload and use videos in GitHub Issues and Pull Requests.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 🚀 for more content:&lt;/p&gt;

&lt;p&gt;📽 &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
☕ &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
💖 &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
🌐 &lt;a href="https://coderdave.io"&gt;CoderDave.io Website&lt;/a&gt;&lt;br&gt;
👕 &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
👦🏻 &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
🐱‍💻 &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
👲🏻 &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
👴🏻 &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
🔉 &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CoderDave"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MvyGcLg6AvI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>github</category>
      <category>devops</category>
      <category>news</category>
    </item>
    <item>
      <title>What was your first code editor?</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Thu, 24 Jun 2021 02:29:10 +0000</pubDate>
      <link>https://dev.to/basecampxd/what-was-your-first-code-editor-3fe3</link>
      <guid>https://dev.to/basecampxd/what-was-your-first-code-editor-3fe3</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Today, we have known many code editors that offer more than a just code editor. They have many features and support for extensions to increase their features. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/QHE5gWI0QjqF2/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/QHE5gWI0QjqF2/giphy.gif" alt="Coding"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Back to when we code the first time, we were having less idea about code and code editor. So we used whatever was best or recommended.&lt;/p&gt;

&lt;p&gt;So today, let's share about our first code and code editor.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-experience"&gt;
  &lt;/a&gt;
  My Experience
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dev.to/surajondev/what-is-the-first-programming-language-that-you-learned-1enc"&gt;Batch Scripting Language&lt;/a&gt; was my first programming language. I used it to code my first program that was &lt;strong&gt;Hello World!&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;The Code Editor that I used was &lt;strong&gt;Notepad&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;No feature of a modern code editor, it was only me and notepad&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#discuss"&gt;
  &lt;/a&gt;
  Discuss
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;What was your first experience with code and code editor?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  🔗 Connect with me:
&lt;/h2&gt;

&lt;p&gt;Currently, on Twitter, I am posting about "How to write and grow blog?". If you want to write a more effective blog with tips, consider the follow button on Twitter.&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;With this completing 500 tweets🥳.&lt;br&gt;&lt;br&gt;Thank you to everyone🤩.&lt;br&gt;&lt;br&gt;As helping more people, I am going to tweet about writing and growing blog especially technical, in the coming days🔥.&lt;br&gt;&lt;br&gt;So if you haven't followed me, please consider🤗.&lt;/p&gt;— Suraj Vishwakarma &lt;a href="https://twitter.com/surajondev"&gt;@surajondev&lt;/a&gt; &lt;a href="https://twitter.com/surajondev/status/1394212368675000321?ref_src=twsrc%5Etfw"&gt;May 17, 2021&lt;/a&gt;
&lt;/blockquote&gt; 

&lt;p&gt;&lt;a href="https://twitter.com/surajondev"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#last-note"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h2&gt;

&lt;p&gt;I am excited to read your experience. &lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Javascript Questions</title>
      <author>Esraa</author>
      <pubDate>Wed, 23 Jun 2021 23:43:36 +0000</pubDate>
      <link>https://dev.to/esraarefaat/javascript-questions-2k3k</link>
      <guid>https://dev.to/esraarefaat/javascript-questions-2k3k</guid>
      <description>&lt;p&gt;let a = 3;&lt;br&gt;
let b = new Number(3);&lt;br&gt;
let c = 3;&lt;/p&gt;

&lt;p&gt;console.log(a == b);&lt;br&gt;
console.log(a === b);&lt;br&gt;
console.log(b === c);&lt;/p&gt;

&lt;p&gt;A: true false true&lt;br&gt;
B: false false true&lt;br&gt;
C: true false false&lt;br&gt;
D: false true true&lt;/p&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;p&gt;new Number() is a built-in function constructor. Although it looks like a number, it's not really a number: it has a bunch of extra features and is an object.&lt;/p&gt;

&lt;p&gt;When we use the == operator, it only checks whether it has the same value. They both have the value of 3, so it returns true.&lt;/p&gt;

&lt;p&gt;However, when we use the === operator, both value and type should be the same. It's not: new Number() is not a number, it's an object. Both return false.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>interview</category>
      <category>intermediate</category>
    </item>
    <item>
      <title>Explain a "memory leak" like I'm five</title>
      <author>Peter Kim Frank</author>
      <pubDate>Wed, 23 Jun 2021 23:19:35 +0000</pubDate>
      <link>https://dev.to/peter/explain-a-memory-leak-like-i-m-five-2664</link>
      <guid>https://dev.to/peter/explain-a-memory-leak-like-i-m-five-2664</guid>
      <description>&lt;p&gt;&lt;a href="https://unsplash.com/photos/JrJ0png-mL8"&gt;Cover Photo via Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>explainlikeimfive</category>
    </item>
    <item>
      <title>Tools for designing a web project</title>
      <author>Michael</author>
      <pubDate>Wed, 23 Jun 2021 22:16:34 +0000</pubDate>
      <link>https://dev.to/michaelcurrin/tools-for-designing-a-web-project-4b1c</link>
      <guid>https://dev.to/michaelcurrin/tools-for-designing-a-web-project-4b1c</guid>
      <description>&lt;p&gt;I have a bunch of projects I am working on for fun, mostly around web apps. Some of them are just concepts and some exist but need a revamp for a professional design.&lt;/p&gt;

&lt;p&gt;So I want to share some of the tools I am using in my process. From designing the layout of the page to choosing color schemes and images. So when I start coding, I have the design and artistic decisions mostly figured out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whimsical"&gt;
  &lt;/a&gt;
  Whimsical
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://whimsical.com/"&gt;https://whimsical.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A free, intuitive wireframing tool.&lt;/p&gt;

&lt;p&gt;Design your app for mobile or desktop. Create some webpage wireframes where you can see your whole website laid out on one giant page, with arrows and lines connecting them.&lt;/p&gt;

&lt;p&gt;The ability to add styling is limited, but this is fine as it keeps the emphasis on laying out pages and components on pages, rather than colors or fonts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wix"&gt;
  &lt;/a&gt;
  Wix
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wix.com"&gt;https://wix.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've used Wix before to prototype designs for a site, even though I end up coding the site myself after for more control. &lt;/p&gt;

&lt;p&gt;Being able to move around elements and add a gallery in a few clicks is amazing. Then code it yourself when you are ready.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#webflow"&gt;
  &lt;/a&gt;
  Webflow
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://webflow.com/"&gt;https://webflow.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://webflow.com/blog/best-webflow-templates"&gt;10 best templates of 2021&lt;/a&gt; on their blog.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a web design and hosting tool like Wix, but with finer control over styling like adding classes to elements. Wix is ideal for non-developers while Webflow is intended for developers.&lt;/p&gt;

&lt;p&gt;You can also add a CMS layer and ecommerce aspect to your site.&lt;/p&gt;

&lt;p&gt;I want to use this to prototype my designs.&lt;/p&gt;

&lt;p&gt;You need premium for Wix and Webflow if you want to remove ads and use a custom domain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coolors"&gt;
  &lt;/a&gt;
  Coolors
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://coolors.co/image-picker"&gt;https://coolors.co/image-picker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I need to choose a color palette that is harmonious.&lt;/p&gt;

&lt;p&gt;On Coolors, I can find existing palettes by other users or make one myself.&lt;/p&gt;

&lt;p&gt;There are probably many similar sites.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unsplash"&gt;
  &lt;/a&gt;
  Unsplash
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unsplash.com"&gt;https://unsplash.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a great stock images site. Search for high quality high resolution stock photos. Link to the image on their CDN at the appropriate resolution from your site, or download them and add them to your site.&lt;/p&gt;

&lt;p&gt;They are all free. You are encouraged to use a credit to the author but this is not required.&lt;/p&gt;

&lt;p&gt;You'll find dev.to and other blogs tend to have cover images found on Unsplash (which some images of laptops and code on screens being used annoyingly often but such is life).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-svg"&gt;
  &lt;/a&gt;
  Free SVG
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://freesvg.org/"&gt;https://freesvg.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Similar to Unsplash for searching for SVG files. An SVG can be scaled to any time and is typically small in file size, so it great for small icons to a large logo on your site.&lt;/p&gt;

&lt;p&gt;Images are under the creative commons license.&lt;/p&gt;

&lt;p&gt;I used this tool to find a dragon image which I added to my one project.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MichaelCurrin/search-dragon"&gt;https://github.com/MichaelCurrin/search-dragon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;p&gt;I hope you learned about some new tools and feel inspired to go and design something. Let me know of other similar tools to recommend.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>design</category>
      <category>wireframing</category>
    </item>
    <item>
      <title>How coming off maternity leave has given me a “newborn” appreciation for pairing</title>
      <author>Austyn</author>
      <pubDate>Wed, 23 Jun 2021 22:06:49 +0000</pubDate>
      <link>https://dev.to/focusedlabs/how-coming-off-maternity-leave-has-given-me-a-newborn-appreciation-for-pairing-4k55</link>
      <guid>https://dev.to/focusedlabs/how-coming-off-maternity-leave-has-given-me-a-newborn-appreciation-for-pairing-4k55</guid>
      <description>&lt;p&gt;Late-night feedings and diaper changes, the 3-4 month sleep regression, teething, and a growth spurt all mean I'm getting less sleep than I'm used to and I am already back to work. Despite being away for 12 weeks on maternity leave, I still find it unbelievable to be back to work before we truly have things figured out, but that's a whole different article. I'm also incredibly privileged... I had 12 weeks paid time off, as did my husband, and we have full-time childcare. I fully recognize that I’m luckier than most - I wish 12 weeks of parental leave was the standard.&lt;/p&gt;

&lt;p&gt;Returning to work was a new experience. With Focused Labs doubling in size in the weeks I was on leave, I was returning to not only a new project but also to new Zoom boxes (thank you, pandemic life). However, instead of having to come back and be dropped straight into a 40 hour work week, Focused Labs has a “graceful return to work” policy. I was able to return to half days my first week and then reduced hours the rest of the month. Having been allowed to gracefully return to work, I now can’t imagine what starting back at 40 hours right away would feel like. That first week was jarring enough. I’m so thankful this option was available to me, and I was able to provide feedback to benefit my coworkers in the future.&lt;/p&gt;

&lt;p&gt;Pairing with someone on code, and knowing my pair is available as a second set of eyes, ensures continuity, and makes my day much better. When I left for maternity leave, the team didn’t miss a beat since I didn’t have “ownership” of the code.  Upon my return, being able to pair helped me get back up to speed quickly and provided that extra focus that can be lacking when you're sleep deprived. Talking through issues and interacting with another person regularly means a lot. This has especially been the case during a pandemic when you've been home with a baby, aren't going places, and “mommy and me” playdates hold their own new risks. At the same time, working from home is wonderful, especially when I am able to step away and see why Wes is crying, or feed him so I can skip a pump session.&lt;/p&gt;

&lt;p&gt;Shortly after my return, our founder asked me if sleep deprivation was affecting me mentally. My instant reaction was “no, I think I'm used to it.” But am I? Is it similar to thinking you’re not "that drunk"? Is that my instant response to not show weakness? The "I can keep up with the boys" mentality? Later I thought more about his question. Would I know if I'm not working up to my normal abilities? Being able to work with a pair gives me some of that feedback. Do I have to be 100% back to normal already? Is there anything I can really do about it? Not right now, but I think knowing my own limitations and that it's temporary helps.&lt;/p&gt;

&lt;p&gt;I have a 6 month old, adorable, little boy. My life is different. I'm different. How I work is different. And that's awesome. Pairing has helped me immensely and there are no words to describe how much that means to me to have one less thing to worry about.&lt;/p&gt;

</description>
      <category>career</category>
      <category>parenting</category>
      <category>womenintech</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>HTTP headers HTTP Request and Response</title>
      <author>Sanawar78</author>
      <pubDate>Wed, 23 Jun 2021 22:03:39 +0000</pubDate>
      <link>https://dev.to/sanawar78/http-headers-http-request-and-response-3cf8</link>
      <guid>https://dev.to/sanawar78/http-headers-http-request-and-response-3cf8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#http-protocol"&gt;
  &lt;/a&gt;
  HTTP PROTOCOL
&lt;/h1&gt;

&lt;p&gt;HTTP stands for Hyper text transfer protocol.The Hypertext Transfer Protocol is an application protocol for distributed, collaborative, hypermedia information systems that allows users to communicate data on the World Wide Web.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTTP HEADERS&lt;/strong&gt;&lt;br&gt;
The HTTP headers are used to pass additional information between the clients and the server through the request and response header. All the headers are case-insensitive, headers fields are separated by colon, key-value pairs in clear-text string format. The end of the header section denoted by an empty field header. There are a few header fields that can contain the comments. And a few headers can contain quality(q) key-value pairs that separated by an equal sign. There are four kinds of headers context-wise: &lt;br&gt;
&lt;strong&gt;General Header:&lt;/strong&gt; &lt;br&gt;
         This type of headers applied on Request and Response headers both but with out affecting the database body.&lt;br&gt;
&lt;strong&gt;Request Header:&lt;/strong&gt; &lt;br&gt;
        This type of headers contains information about the fetched request by the client.&lt;br&gt;
&lt;strong&gt;Response Header:&lt;/strong&gt; &lt;br&gt;
        This type of headers contains the location of the source that has been requested by the client.&lt;br&gt;
&lt;strong&gt;Entity Header:&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
      This type of headers contains the information about the body of the resources like MIME type, Content-length.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#request-headers"&gt;
  &lt;/a&gt;
  REQUEST HEADERS
&lt;/h1&gt;

&lt;p&gt;Some common HTTP Request headers are discuss; &lt;br&gt;
&lt;strong&gt;Host Header&lt;/strong&gt;:&lt;br&gt;
           The host header specifies which website or web application should process an incoming HTTP request. The web server uses the value of this header to dispatch the request to the specified website or web application. Each web application hosted on the same IP address is commonly referred to as a virtual host.&lt;br&gt;
&lt;strong&gt;User Agent&lt;/strong&gt;:&lt;br&gt;
        The User Agent string contains information about your web browser name, operating system, device type and lots of other useful bits of information.&lt;br&gt;
     &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6V83vQti--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njc8pbul0uuer7cqj4cl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6V83vQti--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njc8pbul0uuer7cqj4cl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Authentication Headers&lt;/strong&gt;:&lt;br&gt;
               HTTP authentication is a simple challenge and response mechanism with which a server can request authentication information (a user ID and password) from a client. The client passes the authentication information to the server in an Authorization header.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Cookie&lt;/strong&gt;:&lt;br&gt;
     It is a request type header. A cookie used in the requests sent by the user to the server.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yqf-b2ED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mupb8gcclrnbhhohn8ns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yqf-b2ED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mupb8gcclrnbhhohn8ns.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#response-headers"&gt;
  &lt;/a&gt;
  RESPONSE HEADERS
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Status code&lt;/strong&gt;&lt;br&gt;
            This is a list of Hypertext Transfer Protocol (HTTP) response status codes. Status codes are issued by a server in response to a client's request made to the server.&lt;/p&gt;

&lt;p&gt;All HTTP response status codes are separated into five classes or categories. The first digit of the status code defines the class of response, while the last two digits do not have any classifying or categorization role. There are five classes defined by the standard:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1xx &lt;code&gt;informational&lt;/code&gt; response – the request was received, continuing process&lt;/li&gt;
&lt;li&gt;2xx &lt;code&gt;successful&lt;/code&gt; – the request was successfully received, understood, and accepted&lt;/li&gt;
&lt;li&gt;3xx &lt;code&gt;redirection&lt;/code&gt; – further action needs to be taken in order to complete the request&lt;/li&gt;
&lt;li&gt;4xx &lt;code&gt;client error&lt;/code&gt; – the request contains bad syntax or cannot be fulfilled&lt;/li&gt;
&lt;li&gt;5xx &lt;code&gt;server error&lt;/code&gt; – the server failed to fulfil an apparently valid request,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0UFMFDLm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lzav2k187islwy8vxfg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0UFMFDLm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lzav2k187islwy8vxfg.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.Content-Type:&lt;/strong&gt;&lt;br&gt;
             In responses, a Content-Type header tells the client what the content type of the returned content actually is form.&lt;br&gt;
&lt;strong&gt;2.Set-cookies:&lt;/strong&gt;&lt;br&gt;
             The HTTP header Set-Cookie is a response header and used to send cookies from the server to the user agent. So the user agent can send them back to the server later so the server can detect the user.&lt;br&gt;
&lt;strong&gt;3. Content-Length&lt;/strong&gt;:&lt;br&gt;
          HTTP Content-Length entity-header is used to indicate the size of entity-body in decimal no of octets i.e. bytes and sent it to the recipient. It is a forbidden header name. Basically it is the number of bytes of data in the body of the request or response.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0Spr4vW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alq4gt3scwexbre4srfc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0Spr4vW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alq4gt3scwexbre4srfc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9VRvH4sE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpjvsm59fsziw1ymiqof.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9VRvH4sE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpjvsm59fsziw1ymiqof.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Merge sort algorithm</title>
      <author>Aya Bouchiha</author>
      <pubDate>Wed, 23 Jun 2021 21:38:31 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/merge-sort-algorithm-1l55</link>
      <guid>https://dev.to/ayabouchiha/merge-sort-algorithm-1l55</guid>
      <description>&lt;h2&gt;
  &lt;a href="#definition-of-the-merge-sort-algorithm"&gt;
  &lt;/a&gt;
  Definition of the merge sort algorithm
&lt;/h2&gt;

&lt;p&gt;merge sort is an efficient algorithm, and one of Divide and Conquer algorithms that splits the giving array into two halves, and then merge them in a sorted manner.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time-complexity-of-merge-sort"&gt;
  &lt;/a&gt;
  Time complexity of merge sort
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;best-case&lt;/th&gt;
&lt;th&gt;average case&lt;/th&gt;
&lt;th&gt;worst-case&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;O(n log n)&lt;/td&gt;
&lt;td&gt;O(n log n)&lt;/td&gt;
&lt;td&gt;O(n log n)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#space-complexity"&gt;
  &lt;/a&gt;
  Space complexity
&lt;/h2&gt;

&lt;p&gt;The space complexity of merge sort is &lt;strong&gt;O(n)&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-using-merge-sort-algorithm"&gt;
  &lt;/a&gt;
  Advantages of using merge sort algorithm
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Fast for large arrays unlike selection, insertion, and bubble sort it doesn't go through the whole array many times.
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-using-merge-sort-algorithm"&gt;
  &lt;/a&gt;
  Disadvantages of using merge sort algorithm
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;extra space to store subarrays&lt;/li&gt;
&lt;li&gt;slow for small arrays&lt;/li&gt;
&lt;li&gt;the algorithm does the whole process even the array is already sorted&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#implementation-of-merge-sort-using-python"&gt;
  &lt;/a&gt;
  Implementation of merge sort using python
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;MergeSortAlgorithm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;"""
        [ name ] =&amp;gt; merge sort
        [ type ] =&amp;gt; sorting algorithms
        [ time complexity ] =&amp;gt; O(n log n)
        [ space complexity ] =&amp;gt; O(n)
        [ params ] =&amp;gt; ( 
            arr {list} list to sort
        )
    """&lt;/span&gt;
    &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;#getting the middle of the giving array 
&lt;/span&gt;        &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="c1"&gt;# left half 
&lt;/span&gt;        &lt;span class="n"&gt;leftHalf&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="c1"&gt;# right half
&lt;/span&gt;        &lt;span class="n"&gt;rightHalf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="c1"&gt;# sort left half
&lt;/span&gt;        &lt;span class="n"&gt;MergeSortAlgorithm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;leftHalf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# sort right half
&lt;/span&gt;        &lt;span class="n"&gt;MergeSortAlgorithm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rightHalf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;leftHalf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rightHalf&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;leftHalf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;rightHalf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rightHalf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;leftHalf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="c1"&gt;# inserting to the sortedArray the rest of the leftHalf
&lt;/span&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;leftHalf&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;leftHalf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="c1"&gt;# inserting to the sortedArray the rest of the rightHalf
&lt;/span&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rightHalf&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rightHalf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#references-and-useful-resources"&gt;
  &lt;/a&gt;
  References and useful resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://getrevising.co.uk/grids/merge-sort-advantages-and-disadvantages"&gt;https://getrevising.co.uk/grids/merge-sort-advantages-and-disadvantages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/data_structures_algorithms/merge_sort_algorithm.htm"&gt;https://www.tutorialspoint.com/data_structures_algorithms/merge_sort_algorithm.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/merge-sort/"&gt;https://www.geeksforgeeks.org/merge-sort/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.interviewbit.com/tutorial/merge-sort-algorithm/#:~:text=Merge%20sort%20is%20one%20of,results%20into%20a%20sorted%20list."&gt;https://www.interviewbit.com/tutorial/merge-sort-algorithm/#:~:text=Merge%20sort%20is%20one%20of,results%20into%20a%20sorted%20list.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you so much for your time! :)&lt;br&gt;
#day_11&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>beginners</category>
      <category>computerscience</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How to integrate i18next Internationalization with your React project?</title>
      <author>Brayan Arrieta</author>
      <pubDate>Wed, 23 Jun 2021 21:31:36 +0000</pubDate>
      <link>https://dev.to/brayanarrieta/how-to-integrate-i18next-internationalization-with-your-react-project-2368</link>
      <guid>https://dev.to/brayanarrieta/how-to-integrate-i18next-internationalization-with-your-react-project-2368</guid>
      <description>&lt;p&gt;When are working on several projects and countries the language is one of the most important facts that we need to keep in mind, especially if our application was developed with the goal of having an international market. &lt;/p&gt;

&lt;p&gt;In some cases handle the internationalization in the projects is difficult and complicated, there are different tools that can be used with different approaches. For that reason with the post, I will explain to you about the &lt;strong&gt;react-i18next&lt;/strong&gt; framework is a useful tool that can help us to integrate internationalization to our &lt;strong&gt;React&lt;/strong&gt; project in a quick and awesome way.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#i18next"&gt;
  &lt;/a&gt;
  i18next
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I18next is an internationalization framework written in and for JavaScript. But it's much more than that. I18next goes beyond just providing the standard i18n features such as (plurals, context, interpolation, format). It provides you with a complete solution to localize your product from web to mobile and desktop.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you can see i18next is a framework that will help us to apply internationalization features to our Javascript projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reacti18next"&gt;
  &lt;/a&gt;
  react-i18next
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;react-i18next is a powerful internationalization framework for React / React Native which is based on i18next. The module provides multiple components eg. to assert that needed translations get loaded or that your content gets rendered when the language changes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;react-i18next is the best option when you want to add internationalization to your React project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-do-it"&gt;
  &lt;/a&gt;
  Let's do it
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#create-react-project"&gt;
  &lt;/a&gt;
  Create React project
&lt;/h3&gt;

&lt;p&gt;First of all, we need to create a React project with the next command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app react-i18next-example
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  Install dependencies
&lt;/h3&gt;

&lt;p&gt;After that, we need to install the project dependencies&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install react-i18next i18next --save
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see we have installed also &lt;strong&gt;i18next&lt;/strong&gt; when we will use &lt;strong&gt;react-i18next&lt;/strong&gt; the reason is that &lt;strong&gt;i18next&lt;/strong&gt; is the core that provides all translation functionality while &lt;strong&gt;react-i18next&lt;/strong&gt; gives some extra power for proper use in React&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure"&gt;
  &lt;/a&gt;
  Configure
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#i18njs"&gt;
  &lt;/a&gt;
  i18n.js
&lt;/h4&gt;

&lt;p&gt;We need to create a new file &lt;strong&gt;i18n.js&lt;/strong&gt; beside our index.js containing the following content&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;i18next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;initReactI18next&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-i18next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resources&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;en&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;translation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome to React&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome to React and react-i18next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;translation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome to React&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bienvenue à React et react-i18next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;i18n&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initReactI18next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="na"&gt;interpolation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;escapeValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The interesting part here is by &lt;code&gt;i18n.use(initReactI18next)&lt;/code&gt; we pass the i18n instance to &lt;strong&gt;react-i18next&lt;/strong&gt; which will make it available for all the components via the context API.&lt;/p&gt;

&lt;p&gt;After that, we need to import the &lt;strong&gt;i18n.js&lt;/strong&gt; file into our index.js file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we that done the previous steps we can start to use &lt;strong&gt;react-i18next&lt;/strong&gt;, for example, we can use the useTranslation hook.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#appjs"&gt;
  &lt;/a&gt;
  App.js
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./styles.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useTranslation&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-i18next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useTranslation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome to React&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, you will the next page based on the location language English or French&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#translate-your-content-with-different-options"&gt;
  &lt;/a&gt;
  Translate your content with different options
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;react-i18next&lt;/strong&gt; offers some different options when we need to use internationalization in our project, some of them are&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-usetranslation-hook"&gt;
  &lt;/a&gt;
  Using useTranslation hook
&lt;/h3&gt;

&lt;p&gt;Using the hook in functional components is one of the options you got. The &lt;strong&gt;t&lt;/strong&gt; function is the main function in &lt;strong&gt;i18next&lt;/strong&gt; to translate content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useTranslation&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-i18next&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useTranslation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Welcome to React&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Learn more about the hook &lt;a href="https://react.i18next.com/latest/usetranslation-hook"&gt;useTranslation&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-withtranslation-hoc"&gt;
  &lt;/a&gt;
  Using withTranslation HOC
&lt;/h3&gt;

&lt;p&gt;Using higher order components is one of the most used methods to extend existing components by passing additional props to them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;withTranslation&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-i18next&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Welcome to React&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withTranslation&lt;/span&gt;&lt;span class="p"&gt;()(&lt;/span&gt;&lt;span class="nx"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Learn more about the higher order component &lt;a href="https://react.i18next.com/latest/withtranslation-hoc"&gt;withTranslation&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-the-render-prop"&gt;
  &lt;/a&gt;
  Using the render prop
&lt;/h3&gt;

&lt;p&gt;The render prop enables you to use the t function inside your component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Translation&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-i18next&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Translation&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Welcome to React&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Translation&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Learn more about the render prop &lt;a href="https://react.i18next.com/latest/translation-render-prop"&gt;Translation&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-the-trans-component"&gt;
  &lt;/a&gt;
  Using the Trans component
&lt;/h3&gt;

&lt;p&gt;The Trans component is the best way to translate a JSX tree into one translation. This enables you to eg. easily translate text containing a link component or formatting like &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Trans&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-i18next&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Trans&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;H1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Welcome&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/H1&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;Trans&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note
&lt;/h4&gt;

&lt;p&gt;The translation key and content, in this case, should be declared with the tags as the next example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"&amp;lt;0&amp;gt;Welcome to React&amp;lt;/0&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;0&amp;gt;Welcome to React and react-i18next&amp;lt;/0&amp;gt;"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#interpolation"&gt;
  &lt;/a&gt;
  Interpolation
&lt;/h2&gt;

&lt;p&gt;Interpolation is one of the most used functionalities in I18N. It allows the integration of dynamic values into your translations. Per default, interpolation values get escaped to mitigate XSS attacks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;With &lt;strong&gt;i18next&lt;/strong&gt; we can pass params to our translations that will be integrated with the final translation render to do that we need to add the keys are strings surrounded by curly brackets:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{{what}} is {{how}}"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So when we call that translation we can pass the params to the &lt;strong&gt;t&lt;/strong&gt; function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "./styles.css";
import { useTranslation } from "react-i18next";

export default function App() {
  const { t } = useTranslation();
  return (
    &amp;lt;div className="App"&amp;gt;
      &amp;lt;h1&amp;gt;{t("key", { what: "interpolation", how: "great" })}&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see the example more detailed here&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codesandbox.io/s/react-i18next-example-interpolation-jee12?autoresize=1&amp;amp;fontsize=14&amp;amp;hidenavigation=1&amp;amp;moduleview=1&amp;amp;theme=dark"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pzpI10jk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codesandbox.io/static/img/play-codesandbox.svg" alt="Edit react-i18next-example-interpolation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#working-with-data-models"&gt;
  &lt;/a&gt;
  Working with data models
&lt;/h2&gt;

&lt;p&gt;Another awesome thing that can be used with interpolation is pass data models, we need to declare the translation key in a next way&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"I am {{author.name}}"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the case of the React Component you just need to pass the &lt;code&gt;author&lt;/code&gt; data to the interpolation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./styles.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useTranslation&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-i18next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useTranslation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Brayan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;github&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Arrieta&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;key&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;author&lt;/span&gt; &lt;span class="p"&gt;})}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As you see &lt;strong&gt;react-i18next&lt;/strong&gt; and &lt;strong&gt;i18next&lt;/strong&gt; provides some awesome features that can be used in our projects in the case that our application wants to have an international market.&lt;/p&gt;

&lt;p&gt;I hope you find this article really helpful to use internationalization in your &lt;strong&gt;React&lt;/strong&gt; projects. I will be updating this post based on your comments and recommendations so let me know in any case. Thanks! 👍&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/brayanarrieta"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bs6qmXj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520coffee%26emoji%3D%26slug%3Dbrayanarrieta%26button_colour%3D5F7FFF%26font_colour%3Dffffff%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://react.i18next.com"&gt;react-i18next&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.i18next.com/"&gt;i18next&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to change the git commit author?</title>
      <author>Brayan Arrieta</author>
      <pubDate>Wed, 23 Jun 2021 21:24:58 +0000</pubDate>
      <link>https://dev.to/brayanarrieta/how-to-change-the-git-commit-author-56mg</link>
      <guid>https://dev.to/brayanarrieta/how-to-change-the-git-commit-author-56mg</guid>
      <description>&lt;p&gt;Becoming a &lt;strong&gt;Git&lt;/strong&gt; master could be complicated, due that there are several options that &lt;strong&gt;Git&lt;/strong&gt; provides us and some of them need to be used based on the rules that the team defines around the process of the project that we are working on right now.&lt;/p&gt;

&lt;p&gt;Everyone at some moment has needed help with &lt;strong&gt;Git&lt;/strong&gt;, so the main idea is to try to recompile that tips or common problems that you can have with Git.&lt;/p&gt;

&lt;p&gt;In this post, we will see what you can do in the case that an error committed with a wrong git user, email, or something like that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#change-last-commit-author"&gt;
  &lt;/a&gt;
  Change last commit author
&lt;/h2&gt;

&lt;p&gt;This is the easiest scenery that you can a front, basically, we just need to run the next command in the terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit --amend --author="&amp;lt;name&amp;gt; &amp;lt;email&amp;gt;" --no-edit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-commit-was-pushed-remotely"&gt;
  &lt;/a&gt;
  The commit was pushed remotely?
&lt;/h3&gt;

&lt;p&gt;In the case that the commit was pushed remotely we need to run an extra commit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push -f origin &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, you can do just a &lt;code&gt;git log&lt;/code&gt; command and check in the history that the change was applied.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#change-more-than-a-commit"&gt;
  &lt;/a&gt;
  Change more than a commit
&lt;/h2&gt;

&lt;p&gt;For these cases, the best option could be to apply a rebase of the branch that you are working on right now. First of all please make sure that you are in the branch that you want to change.&lt;/p&gt;

&lt;p&gt;For example, we have a branch called &lt;strong&gt;feature/test&lt;/strong&gt; and the last two commits were pushed with the wrong email. So we need to change the author information for the commits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;2c6eececec35ece0dc52c683de2dbc34553b283b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;1c6eececec35ece0dc52c683de2dbc34553b283b&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;commit 2c6eececec35ece0dc52c683de2dbc34553b283b &lt;span class="o"&gt;(&lt;/span&gt;HEAD -&amp;gt; feature/test, origin/feature/test&lt;span class="o"&gt;)&lt;/span&gt;
Author: Brayan Arrieta &amp;lt;wrong-email&amp;gt;
Date:   Tue Jun 22 16:06:10 2021 &lt;span class="nt"&gt;-0600&lt;/span&gt;

    Feat: change some stuff

commit 1c6eececec35ece0dc52c683de2dbc34553b283b &lt;span class="o"&gt;(&lt;/span&gt;HEAD -&amp;gt; feature/test, origin/feature/test&lt;span class="o"&gt;)&lt;/span&gt;
Author: Brayan Arrieta &amp;lt;wrong-email&amp;gt;
Date:   Tue Jun 22 16:04:10 2021 &lt;span class="nt"&gt;-0600&lt;/span&gt;

    Feat: change server

commit 4d133f673250ed628e58371a8b246d68171fbbf9 &lt;span class="o"&gt;(&lt;/span&gt;origin/master, origin/HEAD, master&lt;span class="o"&gt;)&lt;/span&gt;
Merge: 144c453125 cb1ac7e774
Author: Other User &amp;lt;otheruser@email.com&amp;gt;
Date:   Tue Jun 22 13:40:43 2021 &lt;span class="nt"&gt;-0500&lt;/span&gt;

    Merge branch &lt;span class="s1"&gt;'feature/test2'&lt;/span&gt; into &lt;span class="s1"&gt;'master'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To fix that first of all we need to do the &lt;strong&gt;rebase&lt;/strong&gt; of the branch with the next command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git rebase -i -p &amp;lt;previous-commit-id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the param &lt;strong&gt;previous-commit-id&lt;/strong&gt; we need to pass the previous commit id before the commits that we want to fix, for example in this case the command will be &lt;code&gt;git rebase -i -p 4d133f673250ed628e58371a8b246d68171fbbf9&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After that will see something similar to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pick 2c6eece Feat: change some stuff
pick 1c6eece Feat: change server

# Rebase 4d133f6..2c6eece onto 4d133f6 (4 commands)
#
# Commands:
# p, pick &amp;lt;commit&amp;gt; = use commit
# r, reword &amp;lt;commit&amp;gt; = use commit, but edit the commit message
# e, edit &amp;lt;commit&amp;gt; = use commit, but stop for amending
# s, squash &amp;lt;commit&amp;gt; = use commit, but meld into previous commit
# f, fixup &amp;lt;commit&amp;gt; = like "squash", but discard this commit's log message
# x, exec &amp;lt;commit&amp;gt; = run command (the rest of the line) using shell
# d, drop &amp;lt;commit&amp;gt; = remove commit
# l, label &amp;lt;label&amp;gt; = label current HEAD with a name
# t, reset &amp;lt;label&amp;gt; = reset HEAD to a label
# m, merge [-C &amp;lt;commit&amp;gt; | -c &amp;lt;commit&amp;gt;] &amp;lt;label&amp;gt; [# &amp;lt;oneline&amp;gt;]
# .       create a merge commit using the original merge commit's
# .       message (or the oneline, if no original merge commit was
# .       specified). Use -c &amp;lt;commit&amp;gt; to reword the commit message.
#
# These lines can be re-ordered; they are executed from top to bottom.
#
".git/rebase-merge/git-rebase-todo" 28L, 1267C
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that just make sure that all the commit that has the wrong author have the &lt;strong&gt;p&lt;/strong&gt; or &lt;strong&gt;pick&lt;/strong&gt; in the commit list. In the case that needs to change something just type with your keyboard &lt;strong&gt;i&lt;/strong&gt; to enter in insert mode, apply the change, and &lt;strong&gt;ESC&lt;/strong&gt;. After that, we just need to type &lt;strong&gt;:wq&lt;/strong&gt; on our keyboard to save that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Commands&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;i&lt;/strong&gt;: Enter to insert mode&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ESC&lt;/strong&gt;: Exit of the insert mode&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;:wq&lt;/strong&gt;: Write and quit&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;:q&lt;/strong&gt;: Quit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After that &lt;strong&gt;Git&lt;/strong&gt; will be processing the rebase and in the commit that you put the &lt;strong&gt;pick&lt;/strong&gt; will be displayed a message something like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Stopped at 1c6eece... Feat: change server
You can amend the commit now, with

    git commit --amend

Once you are satisfied with your changes, run

    git rebase --continue
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When that appears that message mention we have some options to change the author or just continue with the command &lt;code&gt;git rebase --continue&lt;/code&gt;. In the case that we want to change the author need to execute the next commit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit --amend --author="Brayan Arrieta &amp;lt;correct-email&amp;gt;" --no-edit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that just continue to the next commit with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git rebase --continue
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Something important to mention is that the previous steps mentioned need to be applied to every commit with the pick option. At you will see a message something like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Successfully rebased and updated refs/heads/feature/test.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that just need to execute a push command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push origin &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-commits-were-pushed-remotely"&gt;
  &lt;/a&gt;
  The commits were pushed remotely?
&lt;/h3&gt;

&lt;p&gt;In the case that the commits were pushed remotely we need to run instead of the &lt;code&gt;git push origin &amp;lt;branch-name&amp;gt;&lt;/code&gt; command the next command, which will change the Git history of our branch with the fix.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push -f origin &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As you see we can change the commit author with some simple commands so go ahead in the case that afront that issue. I hope you find this article really helpful. I will be updating this post based on your comments and recommendations so let me know in any case. Thanks! 👍&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/brayanarrieta"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bs6qmXj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520coffee%26emoji%3D%26slug%3Dbrayanarrieta%26button_colour%3D5F7FFF%26font_colour%3Dffffff%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>PNG files can be animated via network latency</title>
      <author>Ben Halpern</author>
      <pubDate>Wed, 23 Jun 2021 21:07:01 +0000</pubDate>
      <link>https://dev.to/ben/png-files-can-be-animated-via-network-latency-2oeh</link>
      <guid>https://dev.to/ben/png-files-can-be-animated-via-network-latency-2oeh</guid>
      <description>&lt;p&gt;I saw this online and thought it was pretty neat. Check out this image:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.da.vidbuchanan.co.uk/adamation/image.png"&gt;https://www.da.vidbuchanan.co.uk/adamation/image.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's not overly useful, but you might learn something. &lt;a href="https://pyokagan.name/blog/2019-10-14-png/"&gt;Here is an interesting post&lt;/a&gt; related to the subject.&lt;/p&gt;

&lt;p&gt;Happy coding. ❤️&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>png</category>
    </item>
  </channel>
</rss>
