<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Basic data preparation for Machine Learning</title>
      <author>AiFlow</author>
      <pubDate>Wed, 19 Jan 2022 16:37:29 +0000</pubDate>
      <link>https://dev.to/aiflowltd/basic-data-preparation-for-machine-learning-1f7c</link>
      <guid>https://dev.to/aiflowltd/basic-data-preparation-for-machine-learning-1f7c</guid>
      <description>&lt;p&gt;The very core of every learning algorithm is data. The more, the better. Experiments show that for a learning algorithm to reach its full potential, the data that we feed to it must be as qualitative as it is quantitative. To achieve state of the art results in data science projects, the main material, namely data, has to be ready to be shaped and moulded as our particular situation demands. Algorithms that accept data as raw and unprocessed as it is are scarce and often fail to leverage the full potential of machine learning and of the dataset itself.&lt;/p&gt;

&lt;p&gt;The road between raw data and the actual training of one model is far from straight and often requires various techniques of data processing to reveal insights and to emphasize certain distributions of the features.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9rS-XEJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ajht5lt6qd58uei6bzhh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9rS-XEJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ajht5lt6qd58uei6bzhh.png" alt="Demo dataset" width="880" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Take for example this dataset from the real estate business. It is by far an easy job to be able to accurately predict the final acquisition price of a house considering only the raw data. There is no way a generic algorithm could make a difference between ‘1Story’ and ‘2Story’ from the HouseStyle column or differentiate between two different value scales, like the year in the YearBuilt column and the mark in the OverallQual column.&lt;/p&gt;

&lt;p&gt;Data preparation has the duty of building an adequate value distribution for each column so that a generic algorithm could learn features from it.&lt;br&gt;
Some examples are rescaling the values, turning text information into categorical or extracting tokens from continuous string values, like product descriptions. This post will give some insights into how to transform raw data into formats that make the most out of it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#handling-missing-data"&gt;
  &lt;/a&gt;
  Handling missing data
&lt;/h3&gt;

&lt;p&gt;As the data producing sources are rarely perfect, raw datasets have missing values. Since generic algorithms cannot handle such cases and replacing them with a random value opens the possibility of obtaining any random output, methods have been implemented to replace them while keeping the data distribution in place, unmodified.&lt;/p&gt;

&lt;p&gt;The basic solution is dropping the rows or columns that contain an excessive amount of missing fields, since replacing all the empty fields with the same default value might bias the model rather than create valuable insights. You might imagine that this approach is not optimal, since we don’t want to delete data that might prove itself valuable. Instead, setting missing values to the median of the column has, experimentally, provided good results, since it keeps a similar data distribution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#handling-outliers"&gt;
  &lt;/a&gt;
  Handling outliers
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QUqC65XX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o43h6zqo6hpmr5s2di98.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QUqC65XX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o43h6zqo6hpmr5s2di98.png" alt="Outliers" width="641" height="405"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Outliers are data points that lie far away from the majority of data samples in the geometrical space of the distribution. Since these observations are far from the mean, they can influence the learning algorithm in an unwanted way, biasing it towards the tails of the distribution. A common way to handle outliers is Outlier Capping, which limits the range, casting a value X in the range [ m - std * delta , m + std * delta ], where m is the median value of the distribution, std the standard deviation and delta an arbitrarily chosen scale factor. This is how we would write this more formally: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--spv9P-Dg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wxq096ujr7hdar1p03y0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--spv9P-Dg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wxq096ujr7hdar1p03y0.png" alt="Outliers math equation" width="535" height="86"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-polynomial-features"&gt;
  &lt;/a&gt;
  Creating polynomial features
&lt;/h3&gt;

&lt;p&gt;There is often the case in machine learning when a feature is not linearly separable. Although more complex algorithms cope with the problem of non linearly separable search spaces, they might sacrifice accuracy over covering all the nonlinearities. Thus, creating polynomial features can help learning algorithms separate the search space with more ease, yielding better results in the end.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QZ3IW24l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uvyn3mjlz13qdkckcd5b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QZ3IW24l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uvyn3mjlz13qdkckcd5b.png" alt="Polynomial features" width="880" height="265"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Generating the second degree polynomial of feature 1 and adding it to the dataset yields a better representation of the geometrical data space, thus making it easier to be split. Although this is a shallow example, it clearly illustrates the importance of polynomial features in machine learning. On a large scale, polynomials of multi-feature combinations are taken into consideration for generating even more insights from the data.&lt;/p&gt;




&lt;p&gt;Those were just a few data processing steps to consider. At &lt;a href="https://www.aiflow.ltd/"&gt;aiflow.ltd&lt;/a&gt;, we automatically process the data with many more steps, to make sure the prediction quality of our automated algorithms is the best we can achieve. If you’re curios to find out more, subscribe to our newsletter on &lt;a href="https://www.aiflow.ltd/"&gt;aiflow.ltd&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>ai</category>
      <category>cloud</category>
      <category>machinelearning</category>
      <category>startup</category>
    </item>
    <item>
      <title>The breakpoints we tested in 2021, and the ones to test in 2022</title>
      <author>Kilian Valkhof</author>
      <pubDate>Wed, 19 Jan 2022 16:23:26 +0000</pubDate>
      <link>https://dev.to/polypane/the-breakpoints-we-tested-in-2021-and-the-ones-to-test-in-2022-2mll</link>
      <guid>https://dev.to/polypane/the-breakpoints-we-tested-in-2021-and-the-ones-to-test-in-2022-2mll</guid>
      <description>&lt;p&gt;Which screen sizes to design, build and test on is a perennial topic in web development. While well-built responsive websites will work at any size, during development it's easier to use a small number of sizes to check with (even in Polypane!)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But what sizes to use?&lt;/strong&gt; There's a number of different approaches we'll go over in this article, all updated to be relevant in 2022.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Base it off device groups: mobile, tablet, laptop and desktop.&lt;/li&gt;
&lt;li&gt;Use the breakpoints from &lt;a href="https://polypane.app/blog/css-breakpoints-used-by-popular-css-frameworks/"&gt;popular CSS frameworks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Using &lt;a href="https://polypane.app/create-workspace/"&gt;the dimensions your visitors use&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Using the most used breakpoints of 2021.&lt;/li&gt;
&lt;/ol&gt;




&lt;h3&gt;
  &lt;a href="#based-on-device-sizes"&gt;
  &lt;/a&gt;
  Based on device sizes
&lt;/h3&gt;

&lt;p&gt;There's mobile phones, tablets, laptops and desktops, so if you use size for each of that category, you cover them:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Width&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Mobile&lt;/td&gt;
&lt;td&gt;375px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tablet&lt;/td&gt;
&lt;td&gt;768px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Laptop&lt;/td&gt;
&lt;td&gt;1280px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Desktop&lt;/td&gt;
&lt;td&gt;1920px&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This gives a good overview, but you run the risk of &lt;a href="https://polypane.app/blog/overlooked-breakpoints-in-responsive-design/"&gt;missing the in-between sizes&lt;/a&gt;, smaller than 375px and between 900 and 1000px wide.&lt;/p&gt;

&lt;p&gt;Both of those are often forgotten, but still see quite a bit of real-life usage. The first one in older mobile phones, and the second one on tablets, laptops and desktops in unmaximized browser windows.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#based-on-popular-css-frameworks"&gt;
  &lt;/a&gt;
  Based on popular CSS frameworks
&lt;/h3&gt;

&lt;p&gt;We've written about &lt;a href="https://polypane.app/blog/css-breakpoints-used-by-popular-css-frameworks/"&gt;the breakpoints that popular CSS frameworks use&lt;/a&gt; before. These are excellent when you're also using the rest of the framework, or as a starting-off point. For example, here's the breakpoints in Tailwind CSS 3.0:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Width&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sm&lt;/td&gt;
&lt;td&gt;640px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;md&lt;/td&gt;
&lt;td&gt;768px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lg&lt;/td&gt;
&lt;td&gt;1024px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xl&lt;/td&gt;
&lt;td&gt;1280px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2xl&lt;/td&gt;
&lt;td&gt;1536px&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This gives a nice spread, though with a relatively high starting point you run the risk of having to do extra work after implementing the design to make sure everything fit on mobile devices.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#based-on-your-visitor-data"&gt;
  &lt;/a&gt;
  Based on your visitor data
&lt;/h3&gt;

&lt;p&gt;If you use Google Analytics, your visitors browser dimensions are stored as well. This means you can retrieve them from the Google Analytics dashboard and use those to test on.&lt;/p&gt;

&lt;p&gt;For example, here's the 5 most used dimension on this site:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Width&lt;/th&gt;
&lt;th&gt;Height&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;4.55%&lt;/td&gt;
&lt;td&gt;1900px&lt;/td&gt;
&lt;td&gt;940px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.13%&lt;/td&gt;
&lt;td&gt;1900px&lt;/td&gt;
&lt;td&gt;970px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.02%&lt;/td&gt;
&lt;td&gt;1520px&lt;/td&gt;
&lt;td&gt;750px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.99%&lt;/td&gt;
&lt;td&gt;1350px&lt;/td&gt;
&lt;td&gt;660px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.95%&lt;/td&gt;
&lt;td&gt;1350px&lt;/td&gt;
&lt;td&gt;630px&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;While you can use the above it's important to realize that &lt;strong&gt;our&lt;/strong&gt; audience probably isn't &lt;strong&gt;your&lt;/strong&gt; audience. Polypane is a tool for web developers, so the vast majority of our visitors are viewing our site on a desktop device, and fairly large ones at that.&lt;/p&gt;

&lt;p&gt;Notice too that none of the most popular sizes here map to the traditional device widths mentioned above. Every audience is different, and it's best to cater to yours.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#create-a-polypane-workspace-based-on-google-analytics"&gt;
  &lt;/a&gt;
  Create a Polypane workspace based on Google Analytics
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;You can also use &lt;a href="https://polypane.app/create-workspace/"&gt;our GA workspace creator&lt;/a&gt; to automate the process, select how many panes you want and how to sort them, and then opening them in Polypane with a single click.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#the-breakpoints-we-tested-in-2021"&gt;
  &lt;/a&gt;
  The breakpoints we tested in 2021
&lt;/h3&gt;

&lt;p&gt;That leaves us with the last method: using the breakpoints that have been used the most in 2021. For that we can use two sources: the Web Almanac and Polypane.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#from-the-web-almanac"&gt;
  &lt;/a&gt;
  From the Web Almanac
&lt;/h4&gt;

&lt;p&gt;The &lt;a href="https://almanac.httparchive.org/en/2021/"&gt;Web Almanac&lt;/a&gt; analysed 8.2 million websites, old and new, to make an overview of the most used web features, including breakpoints. That also includes all the sites in the web almanacs testing data that existed (well) before this year.&lt;/p&gt;

&lt;p&gt;It has &lt;a href="https://almanac.httparchive.org/en/2021/css"&gt;a chapter on CSS&lt;/a&gt; that includes a list of &lt;a href="https://almanac.httparchive.org/en/2021/css#common-breakpoints"&gt;common breakpoints&lt;/a&gt;. It's worth reading the analysis: they make a split between &lt;code&gt;min-width&lt;/code&gt; and &lt;code&gt;max-width&lt;/code&gt; media queries because you can see a clear difference in sizes used (&lt;code&gt;min-width&lt;/code&gt; is more often used for &lt;code&gt;767px&lt;/code&gt; while &lt;code&gt;max-width&lt;/code&gt; for &lt;code&gt;768px&lt;/code&gt;, for example). We're splitting those out in the overview below as well, as they give a nice contrast.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#minwidth"&gt;
  &lt;/a&gt;
  Min-width
&lt;/h4&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Width&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;57%&lt;/td&gt;
&lt;td&gt;768px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;44%&lt;/td&gt;
&lt;td&gt;1200px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40%&lt;/td&gt;
&lt;td&gt;992px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;31%&lt;/td&gt;
&lt;td&gt;600px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25%&lt;/td&gt;
&lt;td&gt;782px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24%&lt;/td&gt;
&lt;td&gt;480px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16%&lt;/td&gt;
&lt;td&gt;1024px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9%&lt;/td&gt;
&lt;td&gt;767px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8%&lt;/td&gt;
&lt;td&gt;800px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3%&lt;/td&gt;
&lt;td&gt;991px&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#maxwidth"&gt;
  &lt;/a&gt;
  Max-width
&lt;/h4&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Width&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;52%&lt;/td&gt;
&lt;td&gt;767px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;38%&lt;/td&gt;
&lt;td&gt;600px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;38%&lt;/td&gt;
&lt;td&gt;768px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;36%&lt;/td&gt;
&lt;td&gt;480px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30%&lt;/td&gt;
&lt;td&gt;991px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27%&lt;/td&gt;
&lt;td&gt;1024px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26%&lt;/td&gt;
&lt;td&gt;800px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18%&lt;/td&gt;
&lt;td&gt;1200px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13%&lt;/td&gt;
&lt;td&gt;992px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10%&lt;/td&gt;
&lt;td&gt;782px&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;When it comes to the difference between &lt;code&gt;min-width&lt;/code&gt; and &lt;code&gt;max-width&lt;/code&gt;, apart from the 1px differences here and there, is&lt;br&gt;
that the spread for &lt;code&gt;max-width&lt;/code&gt; is much more diverse. For &lt;code&gt;min-width&lt;/code&gt;, the top 10 goes from 57% usage to 3%, while max-width starts lower, at 52%, and ends higher, at 10%.&lt;/p&gt;

&lt;p&gt;Min-widths means &lt;a href="https://polypane.app/blog/responsive-design-ground-rules/#rule-2-mobile-first"&gt;you're &lt;em&gt;adding&lt;/em&gt; styling as you get wider&lt;/a&gt;, while max-widths usually disable styling as they get smaller. Because of this, you frequently need less min-widths, and your styling works for a longer time before you need a new breakpoint.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#the-mostused-breakpoints-in-polypane-in-2021"&gt;
  &lt;/a&gt;
  The most-used breakpoints in Polypane in 2021
&lt;/h4&gt;

&lt;p&gt;We can also look at the most used pane sizes in Polypane in 2021. The sizes that &lt;strong&gt;real developers have used the most in the past year&lt;/strong&gt; to develop websites with.&lt;/p&gt;

&lt;p&gt;This gives the most accurate look at what sizes modern sites are optimized for. Here is the top 10 for 2021:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Width&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;5.48%&lt;/td&gt;
&lt;td&gt;320px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.49%&lt;/td&gt;
&lt;td&gt;1280px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.41%&lt;/td&gt;
&lt;td&gt;768px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.41%&lt;/td&gt;
&lt;td&gt;1920px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.19%&lt;/td&gt;
&lt;td&gt;500px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.89%&lt;/td&gt;
&lt;td&gt;568px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.86%&lt;/td&gt;
&lt;td&gt;800px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.81%&lt;/td&gt;
&lt;td&gt;375px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.69%&lt;/td&gt;
&lt;td&gt;1024px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.25%&lt;/td&gt;
&lt;td&gt;1440px&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;If we look at these sizes we see a nice spread between device sizes, breakpoints from CSS Frameworks and the many &lt;a href="https://polypane.app/docs/workspace-management/"&gt;presets&lt;/a&gt; that Polypane ships with.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#the-breakpoints-to-develop-on-in-2022"&gt;
  &lt;/a&gt;
  The breakpoints to develop on in 2022
&lt;/h3&gt;

&lt;p&gt;As you can see from the relatively low percentages, there are thousands of other sizes being used in Polypane. There is no single right set of dimensions.&lt;/p&gt;

&lt;p&gt;So the best answer? Pick a set you like and adapt it. Any of the ones on this page are a good choice.&lt;/p&gt;

&lt;p&gt;If you notice you often make errors at a size you're not currently developing for, make sure to add it. And if you find yourself fixing the same issue at multiple sizes, maybe you can hide one of them during development.&lt;/p&gt;

&lt;p&gt;Regardless of which default sizes you choose to develop on, &lt;strong&gt;it's best to see all of them in one overview.&lt;/strong&gt; That's what Polypane lets you do. All the other parts of your browser are synced as well: your interactions happen in all panes, our elements panel lets you edit and inspect elements in all&lt;br&gt;
panes at the same time, and our console intelligently combines messages from each pane.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://polypane.app"&gt;Polypane has a free 14 trial available&lt;/a&gt;. Check it out!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>ux</category>
      <category>beginners</category>
    </item>
    <item>
      <title>320+ free resources for learning fullstack, frontend and backend</title>
      <author>Dev Write Ups</author>
      <pubDate>Wed, 19 Jan 2022 16:20:37 +0000</pubDate>
      <link>https://dev.to/devwriteups/320-free-resources-for-learning-fullstack-frontend-and-backend-50cd</link>
      <guid>https://dev.to/devwriteups/320-free-resources-for-learning-fullstack-frontend-and-backend-50cd</guid>
      <description>&lt;p&gt;You only need this post to become a Developer because this post has nearly unlimited amount of every type of resources covering everything you will need. &lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#blog-your-journey"&gt;
  &lt;/a&gt;
  Blog your Journey
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://hashnode.com/@RAHULISM/joinme"&gt;Hashnode&lt;/a&gt;  - Hashnode is the easiest way to start a developer blog on your personal domain 🌏 for free and connect with the readers through our global dev community! 👩‍💻👨‍💻&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/"&gt; Dev.to&lt;/a&gt; - DEV is a community of software developers getting together to help one another out. &lt;/li&gt;
&lt;li&gt; &lt;a href="https://hackernoon.com/"&gt;Hackernoon &lt;/a&gt; - An Independent Tech Media Site&lt;/li&gt;
&lt;/ul&gt;



&lt;h1&gt;
  &lt;a href="#must-have-chrome-extensions"&gt;
  &lt;/a&gt;
  Must have Chrome extensions
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://api.daily.dev/get?r=rahxul"&gt;DailyDev&lt;/a&gt; - Get the latest new about the Dev community in your chrome default tab.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm"&gt;WhatFont&lt;/a&gt; - Get to know which font is the website using. &lt;/li&gt;
&lt;li&gt; &lt;a href="https://chrome.google.com/webstore/detail/colorpick-eyedropper/ohcpnigalekghcmgcdcenkpelffpdolg"&gt;ColorPick Eyedropper&lt;/a&gt;  - Get to know which color is the website using by just dropping the pen.
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg"&gt;Wappalyzer &lt;/a&gt; - Get to know the tech stack of any website&lt;/li&gt;
&lt;li&gt; &lt;a href="https://chrome.google.com/webstore/detail/web-developer/bfbameneiokkgbdmiekhjnmfkcnldhhm"&gt;Web Developer&lt;/a&gt;  -  Amazing amount of tools this extensions has. &lt;/li&gt;
&lt;li&gt; &lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en"&gt;React developer tools&lt;/a&gt;  - React Developer Tools is a Chrome DevTools extension for the open-source React JavaScript library. It allows you to inspect the React component hierarchies in the Chrome Developer Tools.&lt;/li&gt;
&lt;/ul&gt;



&lt;h1&gt;
  &lt;a href="#vs-code-must-have-extensions"&gt;
  &lt;/a&gt;
  VS Code Must have extensions
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=eg2.vscode-npm-script"&gt;NPM &lt;/a&gt; -  This extension helps you to manage your Package.json and will provide warnings if dependencies are not installed also will help with the version control.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;Prettier &lt;/a&gt; - Prettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=2gua.rainbow-brackets"&gt;Rainbow Brackets&lt;/a&gt;  - Find that missing tag with ease by color-coding every bracket set in your environment.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=emmanuelbeziat.vscode-great-icons"&gt;VS Code Great Icons&lt;/a&gt;  - Organize your environment by applying an appropriate icon set to visually identify files by type.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=JakeWilson.vscode-placeholder-images"&gt;Placeholder Images&lt;/a&gt;  - Services like unsplash.it and placehold.it are extremely useful. Now you can save time by adding placeholder images right from within VS Code&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=octref.vetur"&gt;Vetur&lt;/a&gt; - The official VueJS extension&lt;/li&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;ESLint&lt;/a&gt; - The extension uses the ESLint library installed in the opened workspace folder.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"&gt;Live Server&lt;/a&gt; - Launch a development local Server with live reload feature for static &amp;amp; dynamic pages. &lt;/li&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.vscodeintellicode"&gt;Visual Studio IntelliCode&lt;/a&gt; - This extension will move the most relevant completion suggestions to the top. &lt;/li&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome"&gt;Debugger For Chrome&lt;/a&gt; - This extension allows you to debug your JavaScript code running in the Chrome browser, from inside of VS Code.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-edge"&gt;Debugger for Microsoft Edge&lt;/a&gt;  - Debug your JavaScript code in the Microsoft Edge browser&lt;/li&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=firefox-devtools.vscode-firefox-debug"&gt;Debugger for Firefox&lt;/a&gt;  - Debug your web application or browser extension in Firefox&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2"&gt; Bracket Pair Colorizer 2&lt;/a&gt;  - A customizable extension for colorizing matching brackets&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#vs-code-themes"&gt;
  &lt;/a&gt;
  VS Code themes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme"&gt;One Dark Pro&lt;/a&gt; - Atom's iconic One Dark theme for Visual Studio Code&lt;/li&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme"&gt;Material Theme&lt;/a&gt; - The most epic theme now for Visual Studio Code&lt;/li&gt;
&lt;li&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=jolaleye.horizon-theme-vscode"&gt;Horizon Theme&lt;/a&gt; - A beautifully warm dual theme for Visual Studio Code&lt;/li&gt;
&lt;/ul&gt;



&lt;h1&gt;
  &lt;a href="#general-resources"&gt;
  &lt;/a&gt;
  General Resources
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First of all you will need a check list for marking what all you have learned. You can see the below image for how the checklist will look like.  &lt;br&gt;&lt;br&gt;
Link -&amp;gt;  &lt;a href="https://frontendchecklist.io/"&gt;The Front-End Checklist&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lsUMEkIy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608173033183/RTWMoCY5a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lsUMEkIy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608173033183/RTWMoCY5a.png" alt="image.png" width="880" height="1977"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://roadmap.sh/frontend"&gt;Frontend Development Roadmap&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K2R8KNqW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608173416316/Z0Jacl94l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K2R8KNqW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608173416316/Z0Jacl94l.png" alt="image.png" width="880" height="492"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-resources"&gt;
  &lt;/a&gt;
  Learning Resources 📘
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#docs-and-cheat-sheets"&gt;
  &lt;/a&gt;
  DOCS and Cheat sheets 😁
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://developer.mozilla.org/en-US/"&gt;MDN Web Docs&lt;/a&gt;  - The MDN Web Docs site provides information about Open Web technologies including HTML, CSS, and APIs for both Web sites and progressive web apps.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://devdocs.io/"&gt;DevDocs&lt;/a&gt;  - Fast, offline, and free documentation browser for developers. Search 100+ docs in one web app.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://devhints.io/"&gt;DEVHINTS&lt;/a&gt;  - A modest collection of cheatsheets.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://flexbox.malven.co/"&gt;FLEX - Malven&lt;/a&gt;  - A visual cheatsheet for CSS flex layout.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://grid.malven.co/"&gt;GRID - Malven&lt;/a&gt;  - A visual cheatsheet for CSS grid layout.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-does-it-works"&gt;
  &lt;/a&gt;
  🌐 HOW DOES IT WORKS?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=x3c1ih2NJEg"&gt;How the Internet Works Video&lt;/a&gt; - How does the Internet Works?&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/playlist?list=PLzdnOPI1iJNfMRZm5DDxco3UdsFegvuB7"&gt;How the Internet Works Brief Videos&lt;/a&gt; - A brief explanations on, how does the Internet works?&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://howdns.works"&gt;DNS&lt;/a&gt; - How DNS works?&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://howhttps.works"&gt;HTTPS&lt;/a&gt; - How HTTPS works?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#for-html-and-css"&gt;
  &lt;/a&gt;
  For HTML and CSS
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://www.freecodecamp.org/learn"&gt;freeCodeCamp&lt;/a&gt;  - Free course to learn Web Development.&lt;/li&gt;
&lt;li&gt;Flexbox Froggy - A game that helps you to learn CSS Flex.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/"&gt;CSS TRICKS - Flexbox&lt;/a&gt;  - A Complete Guide to Flexbox.&lt;/li&gt;
&lt;li&gt;Grid Garden - A game for learning CSS Grid.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://css-tricks.com/snippets/css/complete-guide-grid/"&gt;CSS TRICKS - A Complete Guide to Grid&lt;/a&gt;  - A comprehensive guide to CSS grid, focusing on all the settings both for the grid parent container and the grid child elements.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://learncssgrid.com/"&gt;Learn CSS Grid&lt;/a&gt;  - A comprehensive guide to help you understand and learn CSS Grid Layout, by Jonathan Suh.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://caniuse.com/"&gt;Can I Use&lt;/a&gt;  - Up-to-date browser support tables for support of front-end web technologies on desktop and mobile web browsers.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://htmldog.com/"&gt;HTML Dog &lt;/a&gt; - Simple and to the point explanations. &lt;/li&gt;
&lt;li&gt; &lt;a href="https://marksheet.io/"&gt;Marksheet&lt;/a&gt;  - Unlimited amount of tutorials&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.theodinproject.com/"&gt;The ODIN Project &lt;/a&gt; - Amazing way of learning.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://emilkowalski.github.io/css-effects-snippets/"&gt;CSS Effects&lt;/a&gt;  - CSS Animations.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://keyframes.app/"&gt;Keyframes&lt;/a&gt;  - Create basic or complex CSS &lt;a class="mentioned-user" href="https://dev.to/keyframe"&gt;@keyframe&lt;/a&gt; animations with a visual timeline editor.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://animista.net/"&gt;Animista &lt;/a&gt; - Play with a collection of ready to use CSS animations.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.internetingishard.com/"&gt;Interneting Is Hard&lt;/a&gt;  - Friendly web development tutorials for complete beginners.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://9elements.com/bem-cheat-sheet/"&gt;BEM&lt;/a&gt;  - BEM naming cheat sheet.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://autoprefixer.github.io/"&gt;Autoprefixer&lt;/a&gt;  - Autoprefixer is a PostCSS plugin which parses your CSS and adds vendor prefixes.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.cleancss.com/css-beautify/"&gt;CSS Formatter &lt;/a&gt; - Online CSS Formatter, CSS Beautifier.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://placeholder.com/"&gt; Placeholder&lt;/a&gt;  - How To Use Our Placeholders. Just specify the image size after our URL and you'll get a placeholder image.&lt;/li&gt;
&lt;/ul&gt;



&lt;h1&gt;
  &lt;a href="#online-ide-editor"&gt;
  &lt;/a&gt;
  📝 ONLINE IDE, EDITOR
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://ide.goorm.io/"&gt;goormIDE&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://codesandbox.io/"&gt;CodeSandbox&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://codepen.io/"&gt;CodePen&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://repl.it/"&gt; Repl.it &lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://jsfiddle.net/"&gt;JSFiddle&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#image-resources"&gt;
  &lt;/a&gt;
  📷 IMAGE RESOURCES
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.slazzer.com/"&gt;Slazzer&lt;/a&gt; - Image  &lt;a href="https://www.slazzer.com/"&gt;Background Remover&lt;/a&gt; 
Automatically and Free&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt;  - Free images and photos.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.pexels.com/"&gt;Pexels&lt;/a&gt;  - Free stock photos.&lt;/li&gt;
&lt;li&gt;Remove Photo Data - Remove personal data from photos before sharing them on the internet.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://lottiefiles.com/"&gt;LottieFiles&lt;/a&gt;  - LottieFiles is a collection of animations designed for - Lottie - gone are the days of bugging your developer.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://pixabay.com/"&gt;Pixabay&lt;/a&gt;  - Free image or video.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#accessibility"&gt;
  &lt;/a&gt;
  👓 ACCESSIBILITY
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://uxdesign.cc/designing-for-accessibility-is-not-that-hard-c04cc4779d94"&gt;Accessibility Blog - Medium&lt;/a&gt;  - Seven easy-to-implement - guidelines to design a more accessible web.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://moritzgiessmann.de/accessibility-cheatsheet/"&gt;Accessibility Cheatsheet &lt;/a&gt; - Practical approaches to Universal Design for making your website/webapp accessible to everyone.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#terminals-for-windows"&gt;
  &lt;/a&gt;
  📄 TERMINALS FOR WINDOWS
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701?activetab=pivot:overviewtab"&gt;Windows Terminal&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://github.com/felixse/FluentTerminal"&gt;FluentTerminal&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://hyper.is/"&gt;Hyper&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#youtube-channels"&gt;
  &lt;/a&gt;
  📺 YOUTUBE CHANNELS
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/TechGuyWeb"&gt;Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ"&gt;freeCodeCamp.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC80PWRj_ZU8Zu0HSMNVwKWw"&gt;Codevolution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCsBjURrPoezykLs9EqgamOA"&gt;Fireship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg"&gt;The Net Ninja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCoebwHSTvwalADTJhps0emA"&gt;Wes Bos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#%F0%9F%96%8B-fonts-and-typography"&gt;
  &lt;/a&gt;
  🖋 FONTS AND TYPOGRAPHY
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://fonts.google.com"&gt;Google Fonts&lt;/a&gt; - The #1 resource for free and easy-to-use webfonts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://fontpair.co"&gt;FontPair&lt;/a&gt; - Font Pair helps designers pair Google Fonts together. Beautiful Google Font combinations and pairs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://fontjoy.com"&gt;Fontjoy&lt;/a&gt; - Fontjoy helps designers choose the best font combinations. Mix and match different fonts for the perfect pairing.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://fontsarena.com"&gt;Fonts Arena&lt;/a&gt; - Free fonts, free alternatives to premium fonts, done-for-you-research articles.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#illustrations"&gt;
  &lt;/a&gt;
  🎨 ILLUSTRATIONS
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://undraw.co/illustrations"&gt;unDraw&lt;/a&gt; - Browse to find the illustrations that fit your needs and click to download.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freepik.com"&gt;freepik&lt;/a&gt; - Free graphic resources.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.drawkit.io"&gt;DrawKit&lt;/a&gt; - Hand-drawn vector illustration and icon resources, perfect for your next project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#icons"&gt;
  &lt;/a&gt;
  💧 ICONS
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://fontawesome.com"&gt;Font Awesome&lt;/a&gt; - Vector icons and social logos.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ionicons.com"&gt;Ionicons&lt;/a&gt; - Open-Sourced and MIT licensed icon pack.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://icons8.com/icons"&gt;icons8&lt;/a&gt; - Download free icons in PNG and SVG.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.flaticon.com"&gt;flaticon&lt;/a&gt; - Free vector icons in SVG, PSD, PNG, EPS format or as ICON FONT.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://simpleicons.org"&gt;Simple Icons&lt;/a&gt; - 1463 Free SVG icons for popular brands.&lt;/li&gt;
&lt;/ul&gt;



&lt;h1&gt;
  &lt;a href="#frontend-framework-learning-resources"&gt;
  &lt;/a&gt;
  Front-end Framework Learning Resources
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  ⚡ JAVASCRIPT
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/learn"&gt;freeCodeCamp&lt;/a&gt; - Best free resource to learn JavaScript interactively.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://javascript.info"&gt;JavaScript.info&lt;/a&gt; - Modern JavaScript Tutorial.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://addyosmani.com/resources/essentialjsdesignpatterns/book/"&gt;JavaScript Design Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference"&gt;JavaScript Reference By MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://eloquentjavascript.net"&gt;Eloquent JavaScript&lt;/a&gt; - This is a book about JavaScript, programming, and the wonders of the digital. You can read it online here.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://javascript30.com"&gt;JavaScript30&lt;/a&gt; - 30 days vanilla JS coding challenge. Build 30 things in 30 days with 30 tutorials.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://youmightnotneedjquery.com"&gt;DOM Manipulation Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5"&gt;How JavaScript works&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Events"&gt;JavaScript Event Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mostly-adequate.gitbooks.io/mostly-adequate-guide/"&gt;Mostly Adequate Guide to Functional Programming&lt;/a&gt; - Excellent primer to functional programming using JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/getify/Functional-Light-JS"&gt;Functional-Light JavaScript&lt;/a&gt; - This book explores the core principles of functional programming (FP) as they are applied to JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.codeschool.com/learn/javascript"&gt;Code School&lt;/a&gt; - From Basics to Best Practices. Different courses related to JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://reactivex.io/learnrx/"&gt;Functional programming&lt;/a&gt; - Learn basic principles of functional programming in an interactive way by using map, filter, concatAll, reduce and zip.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://learnjavascript.online"&gt;Learn JavaScript Online&lt;/a&gt; - Interactive JavaScript course with spaced repetiton flashcards app.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://exercism.io/tracks/javascript"&gt;Exercism JavaScript Track&lt;/a&gt; - Exercism provides individual practice and mentor-based learning for free.&lt;/li&gt;
&lt;/ul&gt;



&lt;h1&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  ⚡ REACT
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#why-react"&gt;
  &lt;/a&gt;
  Why React?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GW0rj4sNH2w"&gt;JS Apps at Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=x7cQ3mrcKaY"&gt;React: Rethinking best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://facebook.github.io/react/"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://facebook.github.io/react/docs/installation.html"&gt;React Docs - Quick Start section&lt;/a&gt; &lt;code&gt;basic&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://leanpub.com/the-road-to-learn-react"&gt;The Road to learn React&lt;/a&gt; &lt;code&gt;basic&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#es2015"&gt;
  &lt;/a&gt;
  ES2015+
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://egghead.io/courses/learn-es6-ecmascript-2015"&gt;Learn ES6 (ECMAScript 2015)&lt;/a&gt; &lt;code&gt;basic&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://exploringjs.com/es6/"&gt;Exploring ES6&lt;/a&gt; &lt;code&gt;advanced&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://leanpub.com/exploring-es2016-es2017/read"&gt;Exploring ES2016 and ES2017&lt;/a&gt; &lt;code&gt;advanced&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://react-router.now.sh/"&gt;React Router Docs&lt;/a&gt; &lt;code&gt;basic&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#state-management"&gt;
  &lt;/a&gt;
  State Management
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#redux"&gt;
  &lt;/a&gt;
  &lt;a href="http://redux.js.org/"&gt;Redux&lt;/a&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://egghead.io/courses/getting-started-with-redux"&gt;Getting Started with Redux&lt;/a&gt; &lt;code&gt;basic&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://egghead.io/courses/building-react-applications-with-idiomatic-redux"&gt;Building React Applications with Idiomatic Redux&lt;/a&gt; &lt;code&gt;advanced&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#bundlers"&gt;
  &lt;/a&gt;
  Bundlers
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#webpack"&gt;
  &lt;/a&gt;
  &lt;a href="https://webpack.js.org/"&gt;Webpack&lt;/a&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://webpack.js.org/get-started/"&gt;Get Started with Webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#build-stuff"&gt;
  &lt;/a&gt;
  Build Stuff
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://react.rocks/"&gt;Several project ideas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://todomvc.com/examples/react/#/"&gt;React - TodoMVC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://auth0.com/blog/bootstrapping-a-react-project/"&gt;Bootstrapping a React project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://academy.plot.ly/react/1-introduction/"&gt;Build a Weather app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.robinwieruch.de/the-soundcloud-client-in-react-redux/"&gt;The SoundCloud Client in React + Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A Primer on the React Ecosystem: &lt;a href="http://patternhatch.com/2016/07/06/a-primer-on-the-react-ecosystem-part-1-of-3/"&gt;1&lt;/a&gt;, &lt;a href="http://patternhatch.com/2016/08/02/a-primer-on-the-react-ecosystem-part-2-of-3/"&gt;2&lt;/a&gt; and 3.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.slatepeak.com/build-a-react-redux-app-with-json-web-token-jwt-authentication/"&gt;Building a React/Redux App with JSON Web Token (JWT) Authentication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Want to goo deep in React? Visit  &lt;a href="https://github.com/ericdouglas/react-learning"&gt;React-Learning&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#apis"&gt;
  &lt;/a&gt;
  🎮 APIs
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://quotes.rest"&gt;Quotes REST API&lt;/a&gt; - They Said So has more than 1 million+ quotes in the database, the largest such database in the world. And Quotes API gives easy way to access the data.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://openweathermap.org/guide"&gt;OpenWeather&lt;/a&gt; - Simple and fast and free weather API from OpenWeatherMap you have access to current weather data, hourly, 5- and 16-day forecasts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://public-apis.io"&gt;Public APIs&lt;/a&gt; - A collective list of more than 1000 Free Public and Open REST APIs for developers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://swapi.dev"&gt;SWAPI&lt;/a&gt; - The Star Wars API.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://jsonplaceholder.typicode.com"&gt;JSONPlaceholder&lt;/a&gt; - Free to use fake Online REST API for testing and prototyping.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#nodejs"&gt;
  &lt;/a&gt;
  ⚡ NODEJS
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9jsz4LDYc6kv3ymONOKxwBU"&gt;Node.js Tutorial&lt;/a&gt; - Node.js Crash Course Tutorial by Net Ninja.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/azat-co/you-dont-know-node"&gt;You Don't Know Node.js&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/maxogden/art-of-node#readme"&gt;The Art of Node&lt;/a&gt; - Introductory tutorial covering the basics. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://nodeschool.io"&gt;NodeSchool&lt;/a&gt; - Interactive self guided workshops you can also do on your own.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://nodepatternsbooks.com"&gt;Node Patterns&lt;/a&gt; - Short books about code and networking patterns related to Node.js.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://learnnode.com"&gt;Learn Node&lt;/a&gt; - A premium training course to learn to build apps with Node.js, Express, MongoDB.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://thenodeway.io"&gt;The Node Way&lt;/a&gt; - An entire philosophy of Node.js best practices and guiding principles exists for writing maintainable modules, scalable applications, and code that is actually pleasant to read.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news/express-js-security-tips/"&gt;Express.js Security Tips&lt;/a&gt; - How You Can Save and Secure Your App.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/sindresorhus/awesome-nodejs"&gt;Awesome Nodejs&lt;/a&gt; - Delightful Node.js packages and resources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/goldbergyoni/nodebestpractices"&gt;nodebestpractices&lt;/a&gt; - Huge list of best practices for building node apps. Important for big projects.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#learn-git"&gt;
  &lt;/a&gt;
  😐 Learn GIT
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://guides.github.com/introduction/git-handbook/"&gt; Git Handbook&lt;/a&gt; 
Git, GitHub, DVCS, oh my! Learn all the lingo and the basics of Git.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://training.github.com/"&gt;Cheat Sheets&lt;/a&gt; &lt;br&gt;
Keep these handy! Reference sheets covering Git commands, features, SVN migrations, and bash. Available in a multiple languages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://learngitbranching.js.org/"&gt;Learn Git branching&lt;/a&gt; &lt;br&gt;
Try Git commands right from your web browser. Featuring some of your soon-to-be favorites: branch, add, commit, merge, revert, cherry-pick, rebase!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://git-school.github.io/visualizing-git/"&gt;Visualizing Git&lt;/a&gt; &lt;br&gt;
Look under the hood! Explore how Git commands affect the structure of a repository within your web browser with a free explore mode, and some constructed scenarios.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/jlord/git-it-electron#what-to-install"&gt;Git-It&lt;/a&gt; &lt;br&gt;
You’ve downloaded Git, now what? Download Git-It to your machine and you’ll get a hands-on tutorial that teaches you to use Git right from your local environment, using commands on real repositories.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;h1&gt;
  &lt;a href="#prepare-for-interview-questions"&gt;
  &lt;/a&gt;
  Prepare for Interview (Questions)
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://h5bp.org/Front-end-Developer-Interview-Questions/"&gt;Front-end Developer Interview Questions&lt;/a&gt;  - A list of helpful front-end related questions you can use to interview potential candidates, test yourself or completely ignore.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://yangshun.github.io/front-end-interview-handbook/en/html-questions/"&gt;Front End Interview Handbook&lt;/a&gt; - Go from zero to front end interview hero with this handbook. No prior interview experience needed.&lt;/li&gt;
&lt;li&gt; &lt;a href="http://flowerszhong.github.io/"&gt;Front-end Developer Interview Questions&lt;/a&gt; - A list of helpful front-end related questions you can use to interview potential candidates, test yourself or completely ignore. &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I have gathered all the resources that you will require to become a MERN or MEAN stack developer. All these resources will include Articles, Videos, Course, Websites, Tutorials, Books etc. And everything is FREE&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MERN - MongoDB, Express, React, NodeJS&lt;/li&gt;
&lt;li&gt;MEAN - MongoDB, Express, Angular, NodeJS&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;☢ You should know the basics of HTML, CSS AND JS&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#learn-mongodb"&gt;
  &lt;/a&gt;
  Learn MongoDB
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#courses"&gt;
  &lt;/a&gt;
  Courses
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://university.mongodb.com/courses/catalog"&gt;MongoDB University&lt;/a&gt; -&amp;gt; This website has many course for free that will definitely take you from Zero to Hero&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/mongodb-essentials/"&gt;Understanding the basics of MongoDB&lt;/a&gt; -&amp;gt; Udemy free course for learning the basics
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.coursera.org/learn/server-side-nodejs"&gt;Server-side Development with NodeJS express and MongoDB&lt;/a&gt; - Coursera course starting from 7th Feb😉&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#blogs-tutorials-docs-ebooks"&gt;
  &lt;/a&gt;
  Blogs  /  Tutorials /  Docs /  eBooks
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;🥃 &lt;a href="https://www.guru99.com/mongodb-tutorials.html"&gt;Guru99 MongoDB in 7 days Tutorial&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📚 &lt;a href="https://docs.mongodb.com/manual/"&gt;MongoDB Docs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📖 &lt;a href="https://www.openmymind.net/2011/3/28/The-Little-MongoDB-Book/"&gt;The little MongoDB book&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;⏲ &lt;a href="https://www.koderhq.com/tutorial/mongodb/"&gt;Intro to MongoDB&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#videos"&gt;
  &lt;/a&gt;
  Videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=t4wPUQ5RElY"&gt;MongoDB tutorial Intellipat  2Hrs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/playlist?list=PLLAZ4kZ9dFpOFJ9JcVW9u4PlSWO-VFoao"&gt;MongoDB - noSql database&lt;/a&gt; [Playlist]&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=-56x56UppqQ"&gt;MongoDB Crash Course&lt;/a&gt; by Traversy Media [40mins Apprx]&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/playlist?list=PLS1QulWo1RIZtR6bncmSaH8fB81oRl6MP"&gt;MongoDB Tutorial for beginners&lt;/a&gt; Playlist. Contains small videos and informative&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9jpvoYriLI0bY8DOgWZfi6u"&gt;MongoDB Tutorial for beginners&lt;/a&gt; Playlist. &lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#learn-express"&gt;
  &lt;/a&gt;
  Learn Express
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#%E2%96%B6-videos"&gt;
  &lt;/a&gt;
  ▶ Videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=L72fhGm1tfE"&gt;ExpressJS Crash Course by Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lab.github.com/everydeveloper/introduction-to-node-with-express"&gt;Introduction to Node with Express&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tutorials-ebooks-blogs"&gt;
  &lt;/a&gt;
  Tutorials / eBooks / Blogs
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;🦿&lt;a href="https://www.tutorialspoint.com/expressjs/index.htm"&gt;Tutorials Point - ExpressJS tutorials&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📚&lt;a href="https://www.pdfdrive.com/expressjs-guide-leanpub-e5912929.html"&gt;MongoDB Guide eBook&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📖&lt;a href="https://www.hacksparrow.com/webdev/express"&gt;Hacksparrow Blog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📖&lt;a href="https://www.rosehosting.com/blog/tag/express/"&gt;RoseHosting&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📖&lt;a href="https://codewithhugo.com/tags/express/"&gt;Code with Hugo - Express&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📚&lt;a href="https://flaviocopes.com/page/express-handbook"&gt;Express Handbook by Flavio&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#learn-react"&gt;
  &lt;/a&gt;
  Learn React
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#blogs-ebooks-tutorials-docs"&gt;
  &lt;/a&gt;
  Blogs / eBooks / Tutorials / Docs
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hashnode.com/series/what-the-react-ckj29pch203pw25s1hkr8as0w"&gt;What the React - Blog Series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/hello-world.html"&gt;React DOCS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/jsx-in-depth.html"&gt;JSX in Depts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactpatterns.com/"&gt;React Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/leonardomso/33-js-concepts"&gt;33 JavaScript Concepts Every DEV Should know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/higher-order-components.html"&gt;High Order Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/refs-and-the-dom.html"&gt;Refs and DOM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://egghead.io/courses/getting-started-with-redux"&gt;EggheadIO Redux Course by Dan Abarmov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flaviocopes.com/react-composition/"&gt;React Compositon - Flavio Copes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flaviocopes.com/page/react-handbook/"&gt;React Handbook by Flavio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#course"&gt;
  &lt;/a&gt;
  Course
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://egghead.io/lessons/react-introduction-to-the-beginner-s-guide-to-reactjs"&gt;EggheadIO React for Beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ui.dev/free-react-bootcamp/"&gt;Free React Bootcamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrimba.com/learn/learnreact"&gt;Learn React for free - Scrima&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/course/react-basic-in-just-1-hour/?LSNPUBID=JVFxdTr9V80&amp;amp;ranEAID=JVFxdTr9V80&amp;amp;ranMID=39197&amp;amp;ranSiteID=JVFxdTr9V80-p4Roao8.OesVvhckLdQGBA&amp;amp;utm_medium=udemyads&amp;amp;utm_source=aff-campaign"&gt;React basics in 1 hr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/course/react-tutorial/?ranMID=39197&amp;amp;ranEAID=JVFxdTr9V80&amp;amp;ranSiteID=JVFxdTr9V80-IC2uTX64TKt5E9lwqC47fg&amp;amp;LSNPUBID=JVFxdTr9V80&amp;amp;utm_source=aff-campaign&amp;amp;utm_medium=udemyads"&gt; React JS Frontend Web Development for Beginners &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/course/learning-react-and-redux-decoupling-with-stateless-components/?ranMID=39197&amp;amp;ranEAID=JVFxdTr9V80&amp;amp;ranSiteID=JVFxdTr9V80-FG1Z7z7TrlLvROsK9JIUJw&amp;amp;LSNPUBID=JVFxdTr9V80&amp;amp;utm_source=aff-campaign&amp;amp;utm_medium=udemyads"&gt;React and Redux MASTERCLASS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-libraries/react/"&gt;FreeCodeCamp React Course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#react-cheatsheets"&gt;
  &lt;/a&gt;
  React cheatsheets
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devhints.io/react"&gt;Ultimate React cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#react-interview-questions"&gt;
  &lt;/a&gt;
  React Interview Questions
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.toptal.com/react/interview-questions"&gt;13 Essential React Interview Questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sudheerj/reactjs-interview-questions"&gt;List of React interview Questions and Answers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#react-styling"&gt;
  &lt;/a&gt;
  React Styling
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/styled-components/styled-components"&gt;styled-components&lt;/a&gt; - Visual primitives for the component age&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/emotion-js/emotion"&gt;emotion&lt;/a&gt; - Library designed for writing CSS styles with JavaScript&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/FormidableLabs/radium"&gt;radium&lt;/a&gt; - Tool for React component styling&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#react-and-typescript"&gt;
  &lt;/a&gt;
  React and TypeScript
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/react-&amp;amp;-webpack.html"&gt;TypeScript, React and Webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/jsx.html"&gt;JSX in TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typescript-cheatsheets/react-typescript-cheatsheet"&gt;Cheatsheets for experienced React developers getting started with TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactbyexample.github.io/"&gt;React by Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#learn-angular"&gt;
  &lt;/a&gt;
  Learn Angular
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#course-videos"&gt;
  &lt;/a&gt;
  Course / Videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/course/angular-for-beginners-course/?ranMID=39197&amp;amp;ranEAID=JVFxdTr9V80&amp;amp;ranSiteID=JVFxdTr9V80-agWnLiSdmEvistlFmFWgmA&amp;amp;LSNPUBID=JVFxdTr9V80&amp;amp;utm_source=aff-campaign&amp;amp;utm_medium=udemyads"&gt;Angular for beginners Course + Free eBook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=i9MHigUZKEM"&gt;AngularJS fundamentals in 60mins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Fdf5aTYRW0E"&gt;Anngular crash course by Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/want-to-learn-angular-heres-our-free-33-part-course-by-dan-wahlin-fc2ff27ab451/"&gt;33-part course Angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/angularjs"&gt;AngularJS on YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tutorials-docs-blogs-ebooks"&gt;
  &lt;/a&gt;
  Tutorials / Docs / Blogs / eBooks
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/angular/"&gt;W3Schools Angular Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thinkster.io/a-better-way-to-learn-angularjs"&gt;A better way to learn AngularJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.mgechev.com/"&gt;Minko Gechev Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;📚&lt;a href="https://www.syncfusion.com/ebooks/angular-succinctly/introduction"&gt;Angular Succinctly&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codecraft.tv/courses/"&gt;Angular from theory to courses&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cheatsheets"&gt;
  &lt;/a&gt;
  Cheatsheets
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://angular.io/guide/cheatsheet"&gt;Angular CheatSheets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#learn-nodejs"&gt;
  &lt;/a&gt;
  Learn NODEJS
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://webapplog.com/node-js-fundamentals-a-concise-overview-of-the-main-concepts"&gt;Node.js FUNdamentals: A Concise Overview of The Main Concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Why Node.js&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.toptal.com/nodejs/why-the-hell-would-i-use-node-js"&gt;Why The Hell Would I Use Node.js? A Case-by-Case Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pettergraff.blogspot.com/2013/01/why-node.html"&gt;Why I use Node.js?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://webapplog.com/php-vs-node-js/"&gt;PHP vs. Node.js&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://engineering.groupon.com/2013/misc/i-tier-dismantling-the-monoliths/"&gt;Dismantling the Monoliths&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.paypal-engineering.com/2013/11/22/node-js-at-paypal/"&gt;Node.js at PayPal&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://nodejs.org/api/"&gt;Official Documentation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://nodejs.org/api/modules.html"&gt;Node.js Modules Official Documentation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://howtonode.org/managing-module-dependencies"&gt;Managing module dependencies&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://code.tutsplus.com/tutorials/using-nodes-event-module--net-35941"&gt;Using Node's Event Module&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://openmymind.net/2012/2/3/Node-Require-and-Exports/"&gt;Understanding exports vs. module.exports&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9jsz4LDYc6kv3ymONOKxwBU"&gt;Node.js Tutorial&lt;/a&gt; - Node.js Crash Course Tutorial by Net Ninja.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/azat-co/you-dont-know-node"&gt;You Don't Know Node.js&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/maxogden/art-of-node#readme"&gt;The Art of Node&lt;/a&gt; - Introductory tutorial covering the basics. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://nodeschool.io"&gt;NodeSchool&lt;/a&gt; - Interactive self guided workshops you can also do on your own.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://nodepatternsbooks.com"&gt;Node Patterns&lt;/a&gt; - Short books about code and networking patterns related to Node.js.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://learnnode.com"&gt;Learn Node&lt;/a&gt; - A premium training course to learn to build apps with Node.js, Express, MongoDB.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://thenodeway.io"&gt;The Node Way&lt;/a&gt; - An entire philosophy of Node.js best practices and guiding principles exists for writing maintainable modules, scalable applications, and code that is actually pleasant to read.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news/express-js-security-tips/"&gt;Express.js Security Tips&lt;/a&gt; - How You Can Save and Secure Your App.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/sindresorhus/awesome-nodejs"&gt;Awesome Nodejs&lt;/a&gt; - Delightful Node.js packages and resources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/goldbergyoni/nodebestpractices"&gt;nodebestpractices&lt;/a&gt; - Huge list of best practices for building node apps. Important for big projects.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#misc-resources"&gt;
  &lt;/a&gt;
  📖MISC RESOURCES😉
&lt;/h2&gt;

&lt;p&gt;(THIS HAS ALL THE RESOURCES OTHER THEN THE ABOVE ONES, Some fundamentals and important)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-a-bit-advanced"&gt;
  &lt;/a&gt;
  JavaScript (A bit advanced)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://javascript30.com/"&gt;30 Days VanillaJS project challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rithmschool.com/courses/advanced-javascript"&gt;Advanced JavaScript Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=4mf_yNLlgic"&gt;Become a JavaScript Console Power-User&lt;/a&gt; - Introduction to the browsers JavaScript console.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=HF1luRD4Qmk"&gt;Debugging The Web&lt;/a&gt; - Learn state of the art in debugging using Chrome dev tools.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udacity.com/course/javascript-basics--ud804"&gt;Udacity JavaScript Basics&lt;/a&gt; - They also offer more advanced courses.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.codeschool.com/learn/javascript"&gt;Code School&lt;/a&gt; - From Basics to Best Practices. Different courses related to JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://reactivex.io/learnrx/"&gt;Functional programming&lt;/a&gt; - Learn basic principles of functional programming in an interactive way by using map, filter, concatAll, reduce and zip.&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#monetize-your-work"&gt;
  &lt;/a&gt;
  Monetize Your Work
&lt;/h1&gt;

&lt;p&gt;You can join the amazing website Buy Me A Coffee and get support and also start a membership if you're a content writer.&lt;/p&gt;

&lt;p&gt;Link -&amp;gt; &lt;a href="https://buymeacoff.ee/?via=rahxuls"&gt;BUYMEACOFFEE&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Thanks For Seeing this post. &lt;br&gt;&lt;br&gt;
If you didn't liked this post let me know in the comments&lt;br&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Building a GIF search Engine in just 10 mins </title>
      <author>Kumar Kalyan </author>
      <pubDate>Wed, 19 Jan 2022 16:10:15 +0000</pubDate>
      <link>https://dev.to/kumarkalyan/building-a-gif-search-engine-in-just-10-mins-lbd</link>
      <guid>https://dev.to/kumarkalyan/building-a-gif-search-engine-in-just-10-mins-lbd</guid>
      <description>&lt;p&gt;Hi everyone in this article I will explain about how you can build your own gif search engine using Html, CSS and JavaScript in just 10 mins and don't worry this is a beginner friendly tutorial. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;HTML, CSS3, JavaScript &lt;/li&gt;
&lt;li&gt;GIF API key &lt;/li&gt;
&lt;li&gt;little knowledge of html events and Ajax will be preferred &lt;/li&gt;
&lt;li&gt;Your time and patience ((The most important)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-html"&gt;
  &lt;/a&gt;
  The Html
&lt;/h2&gt;

&lt;p&gt;Html or &lt;code&gt;Hyper Text Markup Language&lt;/code&gt; which defines the structure of webpage, like headings, paragraphs, line breaks, etc. just like a skeleton in Human body. So, in our gif search engine we also need a structure like a placeholder which will let us know about which type of GIF's user wants to see and a button for submitting the input.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First, we need to create a file named &lt;code&gt;index.html&lt;/code&gt; (let me tell you that we will be using internal CSS and JavaScript, i.e. we will have our CSS and JavaScript code within our index.html file using &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;script&amp;gt;&amp;lt;/script &amp;gt;&lt;/code&gt; tags)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now let's add the boiler plate&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8" /&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge" /&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&amp;gt;
    &amp;lt;title&amp;gt;GIF Search Engine&amp;lt;/title&amp;gt;
    &amp;lt;style&amp;gt;
      /*this will contain our styles */
    &amp;lt;/style&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;script&amp;gt;
      /*this will contain our JavaScript code */
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;here we have&lt;code&gt;&amp;lt;style &amp;gt;&lt;/code&gt; &amp;amp; &lt;code&gt;&amp;lt;script &amp;gt;&lt;/code&gt; where we will define CSS and JavaScript &lt;/p&gt;

&lt;p&gt;Now let's add some HTML tags to structure our web page&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;div class="container"&amp;gt;
      &amp;lt;h1&amp;gt;GIF Search engine&amp;lt;/h1&amp;gt;
      &amp;lt;div class="inputfiled"&amp;gt;
        &amp;lt;input
          type="text"
          class="input userinput"
          placeholder="enter something"
        /&amp;gt;
        &amp;lt;button class="go"&amp;gt;GO !&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;

      &amp;lt;div class="output"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;add these in the body tag &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KxZ92xKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reaj1c9g74iwtqiq1tqs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KxZ92xKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reaj1c9g74iwtqiq1tqs.png" alt="html" width="880" height="466"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see that our structure is ready now let's add some styles to it &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-css"&gt;
  &lt;/a&gt;
  the CSS
&lt;/h2&gt;

&lt;p&gt;CSS will bring styles to our webpage, just like adding taste to food&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; .container {
        text-align: center;
        font-family: sans-serif;
      }
      .input {
        width: 50%;
        padding: 15px;
        margin: 2px;
        font-size: 16px;
        color: blueviolet;
        font-weight: 300;
        border: 2px solid rgb(233, 173, 173);
      }
      button {
        width: 10%;
        padding: 15px;
        margin: 2px;
        color: white;
        background-color: purple;
        border: 2px solid purple;
        cursor: pointer;
      }
      img {
        margin: 3px;
      }
      .inputfiled {
        padding: 20px;
      }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;add these within the &lt;code&gt;style&lt;/code&gt; tag &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DIz-Tceu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xv75m0w7ww1ps3v95ko9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DIz-Tceu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xv75m0w7ww1ps3v95ko9.png" alt="added styles" width="880" height="412"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-javascript"&gt;
  &lt;/a&gt;
  the JavaScript
&lt;/h2&gt;

&lt;p&gt;JavaScript brings dynamicity to a web page, like you may set some instructions on clicking a button or every time when the user requests for a new category of GIF we need to return a new output or as we are using the GIF API JavaScript will help us to get data form the GIF server.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#todos"&gt;
  &lt;/a&gt;
  todos
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Grab the input form the user &lt;/li&gt;
&lt;li&gt;Get data using the GIF API &lt;/li&gt;
&lt;li&gt;Display the data to the user &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;now let's add JavaScript&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; /*this will contain our JavaScript code */
      /*Grab the input from teh user */
      var input = document.querySelector("input");
      document.querySelector("input").addEventListener("keyup", (e) =&amp;gt; {
        /*only works when Enter key is clicked */
        clearOutput();
        if (e.which === 13) {
          getData(input.value);
        }
      });
      document.querySelector("button").addEventListener("click", (e) =&amp;gt; {
        clearOutput();
        getData(input.value);
      });
      /*Get data from the API*/
      function getData(input) {
        var API_KEY = "Your api key ";
        var url =
          "https://api.giphy.com/v1/gifs/search?api_key=" +
          API_KEY +
          "&amp;amp;q=" +
          input +
          "&amp;amp;limit=25&amp;amp;offset=0&amp;amp;rating=g&amp;amp;lang=en"; /*this will only return maximum  25 gifs at a time*/
        fetch(url)
          .then((response) =&amp;gt; response.json())
          .then((data) =&amp;gt; showData(data.data))
          .catch((e) =&amp;gt; {
            console.log(e);
          });
      }
      /*Display the output*/
      function showData(data) {
        data.forEach((element) =&amp;gt; {
          var src = element.images.fixed_height.url;
          var output = document.querySelector(".output");
          output.innerHTML += "&amp;lt;img src=" + src + " &amp;gt;";
        });
      }
      /*clearing the ouptut*/
      function clearOutput() {
        var output = document.querySelector(".output");
        output.innerHTML = "";
      }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you can see that I have added two event listeners to grab the input form the user and then I am passing the input to the &lt;code&gt;getData()&lt;/code&gt;so that using the input we can fetch or bring required data from the GIF server &lt;code&gt;the fetch() APIO returns a promise and we are resolving  it via then() and catch ()&lt;/code&gt; Now as we got the data form the API now I am passing it to &lt;code&gt;showData()&lt;/code&gt; where I am looping through an array named data and then extracting the &lt;code&gt;image url&lt;/code&gt; from an element and storing it to an variable named &lt;code&gt;src&lt;/code&gt;and at the end we are just dynamically adding an image tag to the output  &lt;code&gt;div&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Now you must be thinking about the &lt;code&gt;clearOutput()&lt;/code&gt;. let me tell you if  you enter "dog" in the input then you will get maximum 25 dog GIF images so basically we are adding &lt;code&gt;img&lt;/code&gt; tags , now when you again enter another input like "cat " we need to clear everything from our output div or else the &lt;code&gt;"cat"&lt;/code&gt; GIF's will be concatenated with the &lt;code&gt;dog&lt;/code&gt; GIF's &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---1RCdHdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bexv73lc7hixk56e6p6w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---1RCdHdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bexv73lc7hixk56e6p6w.png" alt="gif serarch engine " width="880" height="466"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#put-it-together"&gt;
  &lt;/a&gt;
  put it together
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8" /&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge" /&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&amp;gt;
    &amp;lt;title&amp;gt;GIF Search Engine&amp;lt;/title&amp;gt;
    &amp;lt;style&amp;gt;
      /*this will contain our styles */
      .container {
        text-align: center;
        font-family: sans-serif;
      }
      .input {
        width: 50%;
        padding: 15px;
        margin: 2px;
        font-size: 16px;
        color: blueviolet;
        font-weight: 300;
        border: 2px solid rgb(233, 173, 173);
      }
      button {
        width: 10%;
        padding: 15px;
        margin: 2px;
        color: white;
        background-color: purple;
        border: 2px solid purple;
        cursor: pointer;
      }
      img {
        margin: 3px;
      }
      .inputfiled {
        padding: 20px;
      }
    &amp;lt;/style&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;div class="container"&amp;gt;
      &amp;lt;h1&amp;gt;GIF Search engine&amp;lt;/h1&amp;gt;
      &amp;lt;div class="inputfiled"&amp;gt;
        &amp;lt;input
          type="text"
          class="input userinput"
          placeholder="enter something"
        /&amp;gt;
        &amp;lt;button class="go"&amp;gt;GO !&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;

      &amp;lt;div class="output"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;script&amp;gt;
      /*this will contain our JavaScript code */
      /*Grab the input from teh user */
      var input = document.querySelector("input");
      document.querySelector("input").addEventListener("keyup", (e) =&amp;gt; {
        /*only works when Enter key is clicked */
        clearOutput();
        if (e.which === 13) {
          getData(input.value);
        }
      });
      document.querySelector("button").addEventListener("click", (e) =&amp;gt; {
        clearOutput();
        getData(input.value);
      });
      /*Get data from the API*/
      function getData(input) {
        var API_KEY = "your API key";
        var url =
          "https://api.giphy.com/v1/gifs/search?api_key=" +
          API_KEY +
          "&amp;amp;q=" +
          input +
          "&amp;amp;limit=25&amp;amp;offset=0&amp;amp;rating=g&amp;amp;lang=en"; /*this will only return maximum  25 gifs at a time*/
        fetch(url)
          .then((response) =&amp;gt; response.json())
          .then((data) =&amp;gt; showData(data.data))
          .catch((e) =&amp;gt; {
            console.log(e);
          });
      }
      /*Display the output*/
      function showData(data) {
        data.forEach((element) =&amp;gt; {
          let src = element.images.fixed_height.url;
          var output = document.querySelector(".output");
          output.innerHTML += "&amp;lt;img src=" + src + " &amp;gt;";
        });
      }
      /*clearing the ouptut*/
      function clearOutput() {
        var output = document.querySelector(".output");
        output.innerHTML = "";
      }
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  conclusion
&lt;/h2&gt;

&lt;p&gt;Congrads yo just learned to create a GIF search engine. Feel free to ask me if you have any queries .. Stay happy Stay safe &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect"&gt;
  &lt;/a&gt;
  Connect
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/kumarkalyan_"&gt;&lt;br&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wgrai2sU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.jsdelivr.net/npm/simple-icons%40v3/icons/twitter.svg" width="24" height="24"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>My github readme page</title>
      <author>nermineslimane</author>
      <pubDate>Wed, 19 Jan 2022 16:04:17 +0000</pubDate>
      <link>https://dev.to/nermineslimane/my-github-readme-page-3amd</link>
      <guid>https://dev.to/nermineslimane/my-github-readme-page-3amd</guid>
      <description>&lt;p&gt;Hi there i just finished writing my github readme page &lt;br&gt;
&lt;a href="https://github.com/nermineslimane"&gt;Readme.md&lt;/a&gt;&lt;br&gt;
Here's a sneak peek &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aCWtB-kf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kp37cbmo7w52hcjcxec5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aCWtB-kf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kp37cbmo7w52hcjcxec5.png" alt="Image description" width="880" height="593"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Take a look and give me back your feedback and I can share how I managed to makke it that way feel free to get inspired and make your github better !&lt;/p&gt;

</description>
      <category>github</category>
      <category>tutorial</category>
      <category>career</category>
    </item>
    <item>
      <title>Javascript OOP-1 (Classes and Objects) - </title>
      <author>Mysterio</author>
      <pubDate>Wed, 19 Jan 2022 15:32:45 +0000</pubDate>
      <link>https://dev.to/shubhamtiwari909/javascript-oop-1-classes-and-objects--54p4</link>
      <guid>https://dev.to/shubhamtiwari909/javascript-oop-1-classes-and-objects--54p4</guid>
      <description>&lt;p&gt;Hello Guys today i am going to discuss OOP(Object Oriented Programming) in javascript.It is one of the Important concept in any programming langauge and makes your code cleaner  , reusable and safer.&lt;/p&gt;

&lt;p&gt;Lets get started...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#classes-"&gt;
  &lt;/a&gt;
  Classes -
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In JavaScript, classes are the special type of functions. We can define the class just like function declarations and function expressions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The JavaScript class contains various class members within a body including methods or constructor.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A class can be defined by using a class declaration. A class keyword is used to declare a class with any particular name. According to JavaScript naming conventions, the name of the class always starts with an uppercase letter.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#example-"&gt;
  &lt;/a&gt;
  Example -
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;orderNo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;orderName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Burger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Order no. - &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;orderNo&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Order Name - &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
     &lt;span class="nx"&gt;orderName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;object1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output-"&gt;
  &lt;/a&gt;
  Output -
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Order no. - 1 Order Name - Burger
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#explaination-"&gt;
  &lt;/a&gt;
  Explaination -
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Here we have declared a class called "Order" and inside it we have created a method called "display()".&lt;/li&gt;
&lt;li&gt;Then inside display we have created two variables called orderNo with value 1 and orderName with value "Burger" and return their value using return statment.&lt;/li&gt;
&lt;li&gt;Then we created the object of Order class (we will discuss Objects after this topic) and then called the display() method using the object we have created using "." dot operator.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#objects-"&gt;
  &lt;/a&gt;
  Objects -
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A javaScript object is an entity having state and behavior (properties and method).&lt;/li&gt;
&lt;li&gt;JavaScript is an object-based language. Everything is an object in JavaScript.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JavaScript is template based not class based. Here, we don't create class to get the object. But, we direct create objects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There are 3 ways to create objects-&lt;br&gt;
1 Object Literal  -&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;orderNo&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;orderName&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Burger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output-"&gt;
  &lt;/a&gt;
  Output -
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1 Burger
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2 By using new keyword -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;order&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;orderNo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;order&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;orderName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Burger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output-"&gt;
  &lt;/a&gt;
  Output -
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1 Burger
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3 By using an Object constructor - &lt;br&gt;
Here, you need to create function with arguments. Each argument value can be assigned in the current object by using "this" keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;order&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;orderNo&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;orderName&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;orderNo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;orderNo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;orderName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;orderName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;newOrder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;order&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Pizza&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output-
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1 Pizza
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#object-with-class-"&gt;
  &lt;/a&gt;
  Object with Class -
&lt;/h3&gt;

&lt;p&gt;We can create objects of classes as objects are the instance of class and class is the blueprint of objects. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-"&gt;
  &lt;/a&gt;
  Example -
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Superhero&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;powers&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;heroName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Superman&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;superPower&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Super strength , Flying and Heat Vision&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hero Name - &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;heroName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; Super Powers - &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;superPower&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;Character&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Superhero&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Character&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;powers&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output-
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Hero Name - Superman 
Super Powers - Super strength , Flying and Heat Vision
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;As you can see we have created a class named "Superhero" and then created its object using new keyword and stored it in a variable called "Character".&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-this-post-and-if-you-find-any-mistake-or-wants-to-give-any-suggestion-please-mention-it-in-the-comment-section"&gt;
  &lt;/a&gt;
  THANK YOU FOR READING THIS POST AND IF YOU FIND ANY MISTAKE OR WANTS TO GIVE ANY SUGGESTION , PLEASE MENTION IT IN THE COMMENT SECTION.
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#you-can-help-me-by-some-donation-at-the-link-below-thank-you-"&gt;
  &lt;/a&gt;
  ^^You can help me by some donation at the link below Thank you👇👇 ^^
&lt;/h2&gt;

&lt;p&gt;☕ --&amp;gt; &lt;a href="https://www.buymeacoffee.com/waaduheck"&gt;https://www.buymeacoffee.com/waaduheck&lt;/a&gt; &amp;lt;--&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#also-check-these-posts-as-well"&gt;
  &lt;/a&gt;
  Also check these posts as well
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/animation-with-react-spring-3k22"&gt;https://dev.to/shubhamtiwari909/animation-with-react-spring-3k22&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/text-to-speech-in-reactjs-52ml"&gt;https://dev.to/shubhamtiwari909/text-to-speech-in-reactjs-52ml&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/best-vs-code-extensions-for-web-development-2lk3"&gt;https://dev.to/shubhamtiwari909/best-vs-code-extensions-for-web-development-2lk3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/introduction-to-tailwind-best-css-framework-1gdj"&gt;https://dev.to/shubhamtiwari909/introduction-to-tailwind-best-css-framework-1gdj&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>productivity</category>
      <category>oop</category>
    </item>
    <item>
      <title>The Developer's Guide to Budgeting Your Money (What To Do With Your Pay Check)</title>
      <author>Michael Mangialardi</author>
      <pubDate>Wed, 19 Jan 2022 15:21:31 +0000</pubDate>
      <link>https://dev.to/michaelmangial1/the-developers-guide-to-budgeting-your-money-what-to-do-with-your-pay-check-6jp</link>
      <guid>https://dev.to/michaelmangial1/the-developers-guide-to-budgeting-your-money-what-to-do-with-your-pay-check-6jp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Budgeting is hard, and yet, it is dead simple.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Like todo lists, there are no shortage of apps and systems for creating and managing a budget. However, the concept is dead simple.&lt;/p&gt;

&lt;p&gt;It's sort of like the JavaScript ecosystem (as an example). On one hand, the vast amount of bundlers, compilers, lint tools, etc. can seem intimidating and overwhelming at first.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FSRqbxRh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lctp625vd4rtqz69tnms.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FSRqbxRh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lctp625vd4rtqz69tnms.png" alt="The Developer's Guide to Budgeting Your Money" width="640" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The way to move forward in learning is to demystify the apparent vastness of the tools and explain the simplicity of the general concept.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Likewise, a budget can be overwhelming due to the vastness of the tools and systems as well as the responsibilities stewarding our money well.&lt;/p&gt;

&lt;p&gt;However, the general concept. In this post, we'll demystify budgeting and provide some practical and technical pointers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-budget"&gt;
  &lt;/a&gt;
  What is a budget?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--REV4R9EU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3z6wdx7rkzpc2wadp6lv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--REV4R9EU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3z6wdx7rkzpc2wadp6lv.png" alt="The Developer's Guide to Budgeting Your Money" width="800" height="533"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;A budget is a log of your cash (money) flow.&lt;/p&gt;

&lt;p&gt;Your cash can flow in two direction: in and out.&lt;/p&gt;

&lt;p&gt;Cash comes in as a reward for your work, and cash comes out as your cover expenses.&lt;/p&gt;

&lt;p&gt;To put it another way, a budget is logging your income and organizing/controlling how you use it.&lt;/p&gt;

&lt;p&gt;To use software development terms, a budget is like a function. It receives arguments, and there is logic to do something with those arguments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-do-i-need-to-do-to-create-a-budget"&gt;
  &lt;/a&gt;
  So, what do I need to do to create a budget?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k5tkqd7d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9d0t4tvm4pbgqjrm7wqg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k5tkqd7d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9d0t4tvm4pbgqjrm7wqg.png" alt="The Developer's Guide to Budgeting Your Money" width="800" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first place where you mind may go in response to this question is to ask: "What app should I use?"&lt;/p&gt;

&lt;p&gt;Before we go there, let's begin with the basics.&lt;/p&gt;

&lt;p&gt;To create a budget, you need to know your income and predicted expenses.&lt;/p&gt;

&lt;p&gt;Then, you need to represent your income and predicted expenses in a month-to-month format.&lt;/p&gt;

&lt;p&gt;Next, you "assign" a part of your income to each predicated expense, keeping track of the remaining income after each subtraction.&lt;/p&gt;

&lt;p&gt;The aim is to assign all of your income to a predicted expense (or to a goal/task like "short-term savings") and to not spend more money than you have.&lt;/p&gt;

&lt;p&gt;Finally, you need to log the real-time expenses (transactions) that occur and categorize them to the matching predicted expense.&lt;/p&gt;

&lt;p&gt;Like with analytics for an application, as time goes on, you'll be able to gauge your (spending) habits and adapt accordingly to ensure your reaching the main goal. &lt;/p&gt;

&lt;p&gt;It doesn't matter if it's with pen and paper, a custom web application, a CLI tool, Mint, YNAB, a &lt;a href="https://www.producthunt.com/search?q=budget"&gt;Product Hunt find&lt;/a&gt;, or whatever.&lt;/p&gt;

&lt;p&gt;Again, all that matters is that you log your income and control how you use it.&lt;/p&gt;

&lt;p&gt;For a fun visualization, however, I'll represent the budget process using JavaScript code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PAYCHECK&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PAYMENTS_PER_MONTH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MONTHLY_INCOME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;PAYCHECK&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;PAYMENTS_PER_MONTH&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;leftToBudget&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;MONTHLY_INCOME&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;predictedExpenses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;rent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;groceries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;internet&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;subscriptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;spotify&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;netflix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;// ...etc,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;// ...etc,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;actualExpenses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;predictedExpenses&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;assignIncome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;predictedCost&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;predictedExpenses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;predictedCost&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Assigned &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;predictedCost&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; to &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;leftToBudget&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; left to budget.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;trackExpense&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;actualCost&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;previousRemaining&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;actualExpenses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="nx"&gt;actualExpenses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;actualCost&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;remaining&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;previousRemaining&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;actualExpenses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Spent &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;actualCost&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; on &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;remaining&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; left to spend on &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#quick-tips"&gt;
  &lt;/a&gt;
  Quick Tips
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-make-sure-to-capture-your-seasonal-expenses"&gt;
  &lt;/a&gt;
  1. Make sure to capture your seasonal expenses.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dLMQ0Fnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udhk14r0c44k0vs3lggm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dLMQ0Fnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udhk14r0c44k0vs3lggm.png" alt="The Developer's Guide to Budgeting Your Money" width="800" height="534"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;I find that budgeting is the easiest to work with when you're tracking everything month-to-month.&lt;/p&gt;

&lt;p&gt;For a lot of budget items, this is intuitive. Rent/mortgage, groceries, SAAS subscriptions, etc. all fit nicely in a month-to-month model.&lt;/p&gt;

&lt;p&gt;But, what about things that aren't month to month? Vacations, Christmas gifts, birthday gifts, seasonal donations, house projects, car repairs, etc. don't fit nicely into a month-to-month model.&lt;/p&gt;

&lt;p&gt;The trick is to take the yearly average of these expenses, divide them by 12, and include them in your month-to-month budgets.&lt;/p&gt;

&lt;p&gt;Even if you don't have any actual expenses for those items in the month, this will prevent your from using money that you technically don't have for other predicted expenses.&lt;/p&gt;

&lt;p&gt;For example, you don't want to include the average of $200/month for house projects into your groceries budget.&lt;/p&gt;

&lt;p&gt;By doing this, when seasonal expenses come, you'll have the money already saved up and no surprises when you check your statements.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-include-spontaneous-sources-of-income"&gt;
  &lt;/a&gt;
  2. Include spontaneous sources of income.
&lt;/h3&gt;

&lt;p&gt;Whenever you get a spontaneous source of income (i.e. a sold my coach on Facebook marketplace), you should include that in the month's income and assign/track that income accordingly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-consider-the-tradeoffs-of-automated-vs-manual"&gt;
  &lt;/a&gt;
  3. Consider the trade-offs of automated vs. manual.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Kw-3MWA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sb3pj4nmrq9v7v1rq9y5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Kw-3MWA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sb3pj4nmrq9v7v1rq9y5.png" alt="The Developer's Guide to Budgeting Your Money" width="880" height="564"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;As I've mentioned, there are a lot of tools out there for budgeting, but you have to find what works best for you.&lt;/p&gt;

&lt;p&gt;The concept is simple and whatever tool you use is purely for optimization purposes.&lt;/p&gt;

&lt;p&gt;I won't get into comparing all the tools that are out there, but I will give a guiding principle for considering an automated vs. manual approach.&lt;/p&gt;

&lt;p&gt;With an automated approach, you can sync a credit card and/or bank account to an app. The app will detect all transactions.&lt;/p&gt;

&lt;p&gt;That way, you can log into an app, see your transactions, and categorize them without having to track those expenses in real-time (i.e. track an expense immediately after a trip to the grocery store).&lt;/p&gt;

&lt;p&gt;In theory, this can save time, provide flexibility, and lower the risk of missing transactions.&lt;/p&gt;

&lt;p&gt;This is the strength of the automated approach.&lt;/p&gt;

&lt;p&gt;However, depending on how you're wired, this strength may be a weakness.&lt;/p&gt;

&lt;p&gt;For some, the inflexibility of the manual/immediate approach to tracking expenses keeps them accountable to actually go into an app and track the expense.&lt;/p&gt;

&lt;p&gt;With an automated approach, you may be tempted to wait too long before categorizing expenses given the flexibility.&lt;/p&gt;

&lt;p&gt;If you wait too long, you may forget the category of an expense even though it has been synced, get confused by the AI that tries to predict the category, or give up altogether.&lt;/p&gt;

&lt;p&gt;Whether it's through a manual or automated approach, it is better to track expenses sooner rather than later.&lt;/p&gt;

&lt;p&gt;Everyone ticks differently, so you'll have to find what works best for you. Just remember, that as developers the temptation to over-engineer may be a stumbling block. Not always, but maybe.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-consider-doing-a-side-project-to-make-your-own-budgeting-tools"&gt;
  &lt;/a&gt;
  4. Consider doing a side project to make your own budgeting tools.
&lt;/h3&gt;

&lt;p&gt;It is highly satisfying to work on side projects that sharpen your technical skills while also intersecting with the practical needs of life.&lt;/p&gt;

&lt;p&gt;Maybe you can find a fun side project.&lt;/p&gt;

&lt;p&gt;For example, you can create an &lt;a href="https://airtable.com/invite/r/cYBrPwqy"&gt;Airtable&lt;/a&gt; sheet to track your monthly expenses, learn &lt;a href="https://airbnb.io/visx/gallery"&gt;Visx&lt;/a&gt; to visualize the analytics, and build the UI with &lt;a href="https://remix.run/"&gt;Remix&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-get-professional-advice"&gt;
  &lt;/a&gt;
  5. Get professional advice.
&lt;/h3&gt;

&lt;p&gt;Here comes my disclaimer: "I am not a financial advisor."&lt;/p&gt;

&lt;p&gt;With that in mind, I do not want to dive into the complexity of how to use your income. Rather, I have focused on the general principle/approach of budgeting to demystify the intensity of it all.&lt;/p&gt;

&lt;p&gt;That being said, I would recommend saving some money to have a professional review your budget, assess your life goals, and come up with a financial strategy.&lt;/p&gt;

&lt;p&gt;This doesn't have to be a lifetime partnership, it can be a session or two (ok, maybe three) to get your bearings, and then handle things on your own.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--smjM5bHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6uzfama9q5rl7p6exva.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--smjM5bHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6uzfama9q5rl7p6exva.png" alt="The Developer's Guide to Budgeting Your Money" width="800" height="533"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;That's it! Hopefully, you have a better idea of how to go about budgeting, and the whole thing will feel less intimidating.&lt;/p&gt;

&lt;p&gt;What is your approach for budgeting? What tools have you made (or want to make)? Drop a comment below.&lt;/p&gt;

&lt;p&gt;As always, don't forget to like and share. Thanks.&lt;/p&gt;

</description>
      <category>career</category>
      <category>productivity</category>
      <category>motivation</category>
    </item>
    <item>
      <title>How to use a different email address in Git in sub directories</title>
      <author>Clarice Bouwer</author>
      <pubDate>Wed, 19 Jan 2022 15:18:41 +0000</pubDate>
      <link>https://dev.to/cbillowes/how-to-use-a-different-email-address-in-git-in-sub-directories-jp9</link>
      <guid>https://dev.to/cbillowes/how-to-use-a-different-email-address-in-git-in-sub-directories-jp9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;I want to override my personal email address I use for Git with my work email address in my work directory without manually changing it each time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-config-file-in-the-work-directory"&gt;
  &lt;/a&gt;
  Create a config file in the work directory
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch ~/path/to/work/directory/.gitconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# any customization/overrides can be added here
[user]
        name = Clarice Bouwer
        email = clarice@example.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#update-gitconfig"&gt;
  &lt;/a&gt;
  Update ~/.gitconfig
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[includeIf "gitdir:~/path/to/work/directory/"]
    path = ~/path/to/work/directory/.gitconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#verify"&gt;
  &lt;/a&gt;
  Verify
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/
git config user.email &lt;span class="c"&gt;# should be your default config email&lt;/span&gt;

&lt;span class="nb"&gt;cd&lt;/span&gt; ~/path/to/work/directory
git config user.email &lt;span class="c"&gt;# should be your override email&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Based on &lt;a href="https://stackoverflow.com/questions/21307793/set-git-config-values-for-all-child-folders"&gt;Stack Overflow&lt;/a&gt;: Set Git config values for all child folders and &lt;a href="https://alvinalexander.com/git/git-show-change-username-email-address/"&gt;Alvin Alexander&lt;/a&gt;: Git show change username and email address.&lt;/p&gt;

</description>
      <category>git</category>
    </item>
    <item>
      <title>Intro to AWS Websockets</title>
      <author>Allen Helton</author>
      <pubDate>Wed, 19 Jan 2022 15:15:57 +0000</pubDate>
      <link>https://dev.to/aws-builders/intro-to-aws-websockets-306p</link>
      <guid>https://dev.to/aws-builders/intro-to-aws-websockets-306p</guid>
      <description>&lt;p&gt;You know that feeling when you go to a social media site, you publish something exciting, and sit there waiting for notifications to roll in as people like and comment on your post?&lt;/p&gt;

&lt;p&gt;It's the best. &lt;/p&gt;

&lt;p&gt;It gives you immediate satisfaction over and over again. It sends little shots of dopamine through your system. It's literally addicting.&lt;/p&gt;

&lt;p&gt;And it's all possible because of &lt;em&gt;WebSockets&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-websocket"&gt;
  &lt;/a&gt;
  What is a WebSocket?
&lt;/h3&gt;

&lt;p&gt;At its simplest, a WebSocket is a direct line of communication between a client and server. Let's use Twitter as our social media use case. A WebSocket connection is a two-way communication between the mobile app (or website) and the Twitter servers. &lt;/p&gt;

&lt;p&gt;When somebody likes your post or retweets you, you want to be informed right then and there. So the servers use the direct line it has with you to push a notification to your phone. You get to know what happened as soon as it is happening.&lt;/p&gt;

&lt;p&gt;Are they necessary? Technically no. But do they enhance the user experience and bring delight to your consumers? Absolutely.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#starting-with-aws-websockets"&gt;
  &lt;/a&gt;
  Starting With AWS WebSockets
&lt;/h3&gt;

&lt;p&gt;In AWS, a WebSocket is an &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html"&gt;API Gateway v2 resource&lt;/a&gt;. It supports the two-way communication between the client and server and allows you to setup custom routes.&lt;/p&gt;

&lt;p&gt;Today we're going to go through an &lt;a href="https://github.com/allenheltondev/serverless-websockets"&gt;example of a WebSocket&lt;/a&gt; written in a SAM template. I chose a &lt;a href="https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification.html"&gt;SAM template&lt;/a&gt; because of how easy it is to deploy a serverless application directly into AWS without the need for 3rd party services.&lt;/p&gt;

&lt;p&gt;To get started, navigate to the &lt;a href="https://github.com/allenheltondev/serverless-websockets"&gt;example repo&lt;/a&gt; and follow the deployment commands. If you have the AWS CLI and SAM CLI already installed on your machine, you should be up and running in less than 5 minutes!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#websocket-routes"&gt;
  &lt;/a&gt;
  WebSocket Routes
&lt;/h3&gt;

&lt;p&gt;Like any API, a WebSocket has routes that trigger functionality. At a minimum, a WebSocket API must have two routes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;$connect&lt;/em&gt; - What happens when a new direct line/connection is made from the client to the server&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;$disconnect&lt;/em&gt; - What happens when a direct line/connection is removed between the client and the server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In our example, we have lambda functions that are executed at each one of these endpoints. We persist important connection information like the &lt;code&gt;connectionId&lt;/code&gt;, &lt;code&gt;ipAddress&lt;/code&gt;, and &lt;code&gt;connectedAt&lt;/code&gt; time to have a little bit of metadata around who is establishing connections. This follows the basic &lt;a href="https://serverlessland.com/patterns/apigw-lambda-dynamodb"&gt;Api Gateway -&amp;gt; Lambda -&amp;gt; DynamoDb&lt;/a&gt; pattern, which is a foundational building block in all of serverless development.&lt;/p&gt;

&lt;p&gt;There are two additional routes in the example WebSocket API we just deployed. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;subscribe&lt;/em&gt; - Subscribes to receive push notifications when a particular entity is updated&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;unsubscribe&lt;/em&gt; - Unsubscribes from push notifications for a particular entity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most WebSocket examples found readily available on the internet are for &lt;a href="https://www.freecodecamp.org/news/real-time-applications-using-websockets-with-aws-api-gateway-and-lambda-a5bb493e9452/"&gt;&lt;em&gt;broadcast&lt;/em&gt; notifications&lt;/a&gt;. These send notifications to every current connection. In a more real-world use case, a user would want to get updates when their user or an entity they are working on has been modified.&lt;/p&gt;

&lt;p&gt;So our example provides a way to slim down WebSocket push notifications to specific entities on a connection by connection basis. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-the-connection"&gt;
  &lt;/a&gt;
  Testing the Connection
&lt;/h3&gt;

&lt;p&gt;In order to test your WebSocket, you can grab the &lt;code&gt;WebsocketUri&lt;/code&gt; output from your SAM deployment and connect to it in &lt;a href="https://www.postman.com"&gt;Postman&lt;/a&gt;. Postman is an application designed for everything around APIs, including connecting to WebSockets. &lt;/p&gt;

&lt;p&gt;If you do &lt;a href="https://www.readysetcloud.io/blog/allen.helton/decoding-the-aws-serverless-design-principles"&gt;serverless development&lt;/a&gt; and are not actively using a tool like Postman, I highly recommend it. I have written &lt;a href="https://www.readysetcloud.io/tags/postman"&gt;several blog posts&lt;/a&gt; about how it can improve developer experience and &lt;a href="https://www.readysetcloud.io/blog/allen.helton/dynamic-test-generation-with-oas"&gt;strengthen your deployment pipelines&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To connect to your new WebSocket in Postman, perform the following steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open the &lt;a href="https://www.postman.com/downloads/"&gt;desktop app&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Select New -&amp;gt; WebSocket Request&lt;/li&gt;
&lt;li&gt;Enter the route from the output of your SAM deployment in the address field&lt;/li&gt;
&lt;li&gt;Click the &lt;code&gt;Headers&lt;/code&gt; tab and add the &lt;code&gt;Sec-WebSocket-Protocol&lt;/code&gt; header with the value &lt;code&gt;websocket&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Hit &lt;strong&gt;Connect&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NQ2R2AbG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://readysetcloud.s3.amazonaws.com/websocket_intro_1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NQ2R2AbG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://readysetcloud.s3.amazonaws.com/websocket_intro_1.png" alt="Connected to our WebSocket in Postman" width="880" height="485"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Connected to our WebSocket in Postman&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When we want to subscribe or unsubscribe to updates, we must add a payload describing which route to take. With the API we built, the &lt;code&gt;action&lt;/code&gt; property describes the route to take. To add a subscription, send a message in this format:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"subscribe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"entityId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"myTestEntityId"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, the &lt;code&gt;action&lt;/code&gt; property is telling the API which route to take, and the &lt;code&gt;entityId&lt;/code&gt; property is a parameter we're passing into the &lt;em&gt;subscribe&lt;/em&gt; lambda function deployed in the example project.&lt;/p&gt;

&lt;p&gt;Now that we're connected to the WebSocket, add this message to Postman and hit the &lt;em&gt;Send&lt;/em&gt; button. It will hit the endpoint and save the subscription.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jUtVAOSv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://readysetcloud.s3.amazonaws.com/websocket_intro_2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jUtVAOSv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://readysetcloud.s3.amazonaws.com/websocket_intro_2.png" alt="Adding a subscription for entity updates" width="880" height="432"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Adding a subscription for entity updates&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With the connection and subscription, we're ready to test our push notification!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sending-push-notifications"&gt;
  &lt;/a&gt;
  Sending Push Notifications
&lt;/h3&gt;

&lt;p&gt;The first thing we want to do is take a look at &lt;a href="https://aws.amazon.com/dynamodb"&gt;DynamoDB&lt;/a&gt; and verify our connection and subscription were saved. If you navigate to the &lt;a href="https://console.aws.amazon.com/dynamodbv2/home#item-explorer?initialTagKey=&amp;amp;table=websocket"&gt;websocket table in the DynamoDB console&lt;/a&gt; you will see there are two entries present: a &lt;em&gt;connection&lt;/em&gt; entry and a &lt;em&gt;subscription&lt;/em&gt; entry.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eY8yc08q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://readysetcloud.s3.amazonaws.com/websocket_intro_3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eY8yc08q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://readysetcloud.s3.amazonaws.com/websocket_intro_3.png" alt="WebSocket connection and subscription in DynamoDB" width="880" height="272"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;WebSocket connection and subscription in DynamoDB&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now that we've confirmed our connection and subscription, we can hop over to the &lt;a href="https://console.aws.amazon.com/events/home?#/eventbuses"&gt;EventBridge console&lt;/a&gt; to manually add a message.&lt;/p&gt;

&lt;p&gt;In the example project we pushed into AWS, push notifications are triggered by an EventBridge event. The event is added to an SQS queue, which is popped by a lambda. The lambda function looks for all subscriptions for the &lt;code&gt;entityId&lt;/code&gt; provided in the event and sends a push notification to all subscribers.&lt;/p&gt;

&lt;p&gt;To manually send the event, click the &lt;em&gt;Send Events&lt;/em&gt; button in the EventBridge console and add the following details as described in this screenshot&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b7JIEbbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://readysetcloud.s3.amazonaws.com/websocket_intro_4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b7JIEbbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://readysetcloud.s3.amazonaws.com/websocket_intro_4.png" alt="EventBridge event details" width="810" height="1028"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;EventBridge event details&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once you hit the &lt;em&gt;Send&lt;/em&gt; button, the notification process will trigger and a push will be sent to your connection in Postman.&lt;/p&gt;

&lt;p&gt;If we flip back to Postman, we can see our &lt;em&gt;Hello world&lt;/em&gt; message was received!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CT_LlFjP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://readysetcloud.s3.amazonaws.com/websocket_intro_5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CT_LlFjP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://readysetcloud.s3.amazonaws.com/websocket_intro_5.png" alt="The push notification worked!" width="880" height="439"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;The push notification worked!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In a real world scenario, all subscribers of entity &lt;code&gt;myTestEntityId&lt;/code&gt; would have received the same message we did. Super cool!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h3&gt;

&lt;p&gt;In today's walkthrough, we learned about the pieces that make up a WebSocket and got access to a quick start with subscriptions and notifications. &lt;/p&gt;

&lt;p&gt;Over the coming weeks, I will be creating posts in a WebSocket series describing ways to add authentication, custom domains, and defining events through an &lt;a href="https://www.asyncapi.com/"&gt;Async API spec&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to use this code however you like. It's not quite production ready, it needs error handling states and retry mechanisms, but it's almost there. It was intended to illustrate all the moving parts that come with an AWS WebSocket API. &lt;/p&gt;

&lt;p&gt;There are many things to explore with WebSockets, and I will be here to walk you through it as I continue my adventure down an &lt;a href="https://www.readysetcloud.io/blog/allen.helton/the-2022-word-of-the-year-is"&gt;async 2022&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>api</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Installing Tailwind CSS in your Laravel Project</title>
      <author>Mostafa Said</author>
      <pubDate>Wed, 19 Jan 2022 15:15:00 +0000</pubDate>
      <link>https://dev.to/moose_said/installing-tailwind-css-in-your-laravel-project-16f3</link>
      <guid>https://dev.to/moose_said/installing-tailwind-css-in-your-laravel-project-16f3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello everyone 👋
&lt;/h2&gt;

&lt;p&gt;In this article, I'm going to install tailwind CSS in Laravel project. This is really useful when you're taking your Laravel project to the next level (Production).&lt;/p&gt;

&lt;p&gt;I will share each step in action so that you can follow along if you hate reading the DOCs. &lt;/p&gt;

&lt;p&gt;In my opinion Laravel works better with tailwind. Almost everything in Laravel is styled with tailwind by default. So this will help you customize it smoothly.&lt;/p&gt;

&lt;p&gt;Will share few tricks also after we finish that will help you hide the classes from view, and because Laravel is so awesome, we can hide classes from the view and make our code look clean and sexy 🌶️&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-install-nodejs-and-npm"&gt;
  &lt;/a&gt;
  1- Install Nodejs and npm:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;First thing you need to make sure that you have Node and npm installed on your machine.&lt;/li&gt;
&lt;li&gt;You can check that by opening up the terminal and type those two commands: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;npm -v&lt;br&gt;
node -v&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you need to install them 🔗 &lt;a href="https://docs.npmjs.com/downloading-and-installing-node-js-and-npm"&gt;DOCs for downloading Node and npm&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;If you got that converged, move on 👇&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XR2a2ZSu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642525051696/mzBBI-k4u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XR2a2ZSu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642525051696/mzBBI-k4u.png" alt="2 - npm and node install.png" width="868" height="542"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-start-your-laravel-project"&gt;
  &lt;/a&gt;
  2- Start your Laravel Project:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I will use composer to create Laravel project.&lt;/li&gt;
&lt;li&gt;You can download composer from here: &lt;a href="https://getcomposer.org/"&gt;https://getcomposer.org/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Open up your terminal and create your Laravel project in the desired directory.&lt;/li&gt;
&lt;li&gt;In my case, I'm just used to create my projects in htdocs folder 🤷‍♂️&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ha1SxnoG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642526946431/QWtFoip7E.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ha1SxnoG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642526946431/QWtFoip7E.png" alt="3 - terminal install laravel.png" width="880" height="264"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-install-tailwindcss"&gt;
  &lt;/a&gt;
  3- Install TailwindCSS:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;within the project directory. Install Tailwind CSS and its peer dependencies via npm, and create your tailwind.config.js file.&lt;/li&gt;
&lt;li&gt;We're just going to write these two commands in the terminal which will install Tailwind along with creating a config file for your project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---0EUtkwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642526971157/o4_THblPm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---0EUtkwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642526971157/o4_THblPm.png" alt="4 - Tailwind Install.png" width="880" height="287"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-webpackmixjs-file-edit"&gt;
  &lt;/a&gt;
  4- Webpack.mix.js File edit:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Now open you project through VScode or any preferred code editor then open 'webpack.mix.js' file, you will find it in the main directory.&lt;/li&gt;
&lt;li&gt;You will need to add just one line of code between the brackets [] :
require("tailwindcss")&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ywcBSFTh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642527005412/u3Kb82Nhm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ywcBSFTh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642527005412/u3Kb82Nhm.png" alt="5 - Laravel mix js.png" width="880" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-tailwindconfigjs-file-edit"&gt;
  &lt;/a&gt;
  5- tailwind.config.js File edit:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Head to the config file (tailwind.config.js) and open it. &lt;/li&gt;
&lt;li&gt;Here add the paths to all of your template files. I included only 4 paths in my case:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    './storage/framework/views/*.php',
    './resources/**/*.blade.php',
    './resources/**/*.js',
    './resources/**/*.vue',
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PYf6hlcr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642527386747/EUcIgYQEz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PYf6hlcr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642527386747/EUcIgYQEz.png" alt="6 - config file.png" width="880" height="733"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-tailwind-directives"&gt;
  &lt;/a&gt;
  6- Tailwind Directives:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Next, add the &lt;a class="mentioned-user" href="https://dev.to/tailwind"&gt;@tailwind&lt;/a&gt; directives for each of Tailwind’s layers to your ./resources/css/app.css file:&lt;br&gt;
&lt;a class="mentioned-user" href="https://dev.to/tailwind"&gt;@tailwind&lt;/a&gt; base;&lt;br&gt;
&lt;a class="mentioned-user" href="https://dev.to/tailwind"&gt;@tailwind&lt;/a&gt; components;&lt;br&gt;
&lt;a class="mentioned-user" href="https://dev.to/tailwind"&gt;@tailwind&lt;/a&gt; utilities;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remember, I'm not mentioning tailwind 👆😅 That's exactly how you need to write down in the file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AShyiNS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642527697507/Vw8rhULVm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AShyiNS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642527697507/Vw8rhULVm.png" alt="7 - Tailwind Directives.png" width="662" height="542"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-npm-run-dev"&gt;
  &lt;/a&gt;
  7- NPM Run Dev:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Now, lets run a command in the terminal called (npm run dev) which combines all JavaScript files into a browser-friendly combined file. &lt;/li&gt;
&lt;li&gt;It may take few minutes, depends on your machine's speed to process the action but you need to leave it till it finishes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#8-tailwindcss-asset"&gt;
  &lt;/a&gt;
  8-  TailwindCSS asset:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Open blade welcome file in -&amp;gt; ./resources/views/welcome.blade.css&lt;/li&gt;
&lt;li&gt;Delete the entire content and generate html boilerplate by typing '!' and press tap.&lt;/li&gt;
&lt;li&gt;Include the compiled CSS in the head section as showing in the picture.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1q0msDSa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642532759480/DGA9QyZIt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1q0msDSa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642532759480/DGA9QyZIt.png" alt="8 - Adding the asset to head.png" width="880" height="657"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#finally-were-done"&gt;
  &lt;/a&gt;
  FINALLY we're done 🥳🥳
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If you go to the terminal and in your directory run (php artisan serve) command, you will see that tailwind classes are taking effect perfectly in browser.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course you can find most of classes here in the official docs: &lt;a href="https://tailwindcss.com/docs"&gt;https://tailwindcss.com/docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2P_aFppo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642534160540/pPKhXy08n.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2P_aFppo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642534160540/pPKhXy08n.gif" alt="Testing classes in broswer.gif" width="880" height="264"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can hide all those classes away from the blade view so that you won't have to deal with classes from your main html file.&lt;/p&gt;

&lt;p&gt;Lets say you want a component dedicated for the header and this will be h1 element wrapped with anchor tag &lt;a&gt; with classes.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WWIR89YH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642588953029/y4Pc5xyW6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WWIR89YH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642588953029/y4Pc5xyW6.png" alt="9 - Header element.png" width="880" height="410"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I'm going to do it manually by creating a directory in ./resources/views and name it components.&lt;/li&gt;
&lt;li&gt;Create inside it a blade file and name it header.blade.php&lt;/li&gt;
&lt;li&gt;Copy the desired component inside it and replace it in the main blade file with &lt;/li&gt;
&lt;li&gt;Then merge attributes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/667828181" width="710" height="399"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Now we installed Tailwind in our Laravel project, created a component and merged the attributes to hide tailwind classes from the main view.&lt;/p&gt;

&lt;p&gt;Thank you all for reading this article.&lt;br&gt;
If you like this article please let me know :)&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>tailwindcss</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Student Developer Pack</title>
      <author>Ganesh Patil</author>
      <pubDate>Wed, 19 Jan 2022 14:58:34 +0000</pubDate>
      <link>https://dev.to/ganeshpatil386386/student-developer-pack-1b7k</link>
      <guid>https://dev.to/ganeshpatil386386/student-developer-pack-1b7k</guid>
      <description>&lt;p&gt;Hey folks we all already know what is &lt;a href="https://github.com/"&gt;GitHub &lt;/a&gt; if you are not aware about GitHub go and check with above link associated with GitHub word.&lt;br&gt;
I recently aware about the program for student which provide by GitHub for school students known as GitHub Student Developer pack. Which includes various courses with subscription and its absolute free for students who current enrolled in campus or colleges and how you get this student pack follow the steps given below :-&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-the-steps"&gt;
  &lt;/a&gt;
  Follow the Steps
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Go to official website of GitHub Student Developer pack
&lt;a href="https://education.github.com/pack"&gt;GitHub Education&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Sign Up for student Developer pack&lt;/li&gt;
&lt;li&gt;You redirect to the page where you have to filed your college ID and college name.&lt;/li&gt;
&lt;li&gt;Then continue with process and another steps you have add your college proof 
ex: College ID or proof of your college enrollment with details.&lt;/li&gt;
&lt;li&gt;Submit your application and it will be review from GitHub with in 2 weeks and you also get verify mail when your application approved from GitHub.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--89JplqP6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ogojauryqy8hu8wc20a.png" alt="Image description" width="880" height="660"&gt;
The interface looks like above image for step 1 and then follow the steps one by one.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You will get unlimited benefits from this student developer pack which capable to make you developer. and also check the another program on GitHub platform for students and its also provide teacher developer pack also if you are then also get benefit from it.&lt;/p&gt;

&lt;p&gt;Connect with me on [Twitter (&lt;a href="https://twitter.com/PatilGanesh1010"&gt;https://twitter.com/PatilGanesh1010&lt;/a&gt;) if you are web developer I am sharing lot of content on twitter like this and tools which save your precious time...!!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>react</category>
    </item>
    <item>
      <title>How to build a Masonry photo gallery using Unsplash API</title>
      <author>Anjan Shomooder</author>
      <pubDate>Wed, 19 Jan 2022 14:50:26 +0000</pubDate>
      <link>https://dev.to/thatanjan/build-a-beautiful-photo-gallery-in-masonry-layout-using-unsplash-api-3ef7</link>
      <guid>https://dev.to/thatanjan/build-a-beautiful-photo-gallery-in-masonry-layout-using-unsplash-api-3ef7</guid>
      <description>&lt;p&gt;In this blog, you will learn how to build a gallery app with a Masonry layout using Unsplash API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video tutorial:
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/dnUwi8ZTaow"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you like this video, please like share, and Subscribe to my channel.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source Code
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/thatanjan/hulu-landing-page-clone-yt"&gt;https://github.com/thatanjan/hulu-landing-page-clone-yt&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#knowledge-requirementsbasic"&gt;
  &lt;/a&gt;
  Knowledge Requirements(Basic):
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Html&lt;/li&gt;
&lt;li&gt;  CSS&lt;/li&gt;
&lt;li&gt;  JavaScript&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#libraries-we-will-use"&gt;
  &lt;/a&gt;
  Libraries we will use
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/bigbite/macy.js"&gt;Macy.js&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/axios/axios"&gt;Axios&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#html-and-css"&gt;
  &lt;/a&gt;
  Html and css
&lt;/h2&gt;

&lt;p&gt;Let's add the html and css.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Cules Gallery&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"searc"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"grid"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script
    &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/axios/0.24.0/axios.min.js"&lt;/span&gt;
    &lt;span class="na"&gt;integrity=&lt;/span&gt;&lt;span class="s"&gt;"sha512-u9akINsQsAkG9xjc1cnGF4zw5TFDwkxuc9vUp5dltDWYCSmyd0meygbvgXrlc/z7/o4a19Fb5V0OUE58J7dcyw=="&lt;/span&gt;
    &lt;span class="na"&gt;crossorigin=&lt;/span&gt;&lt;span class="s"&gt;"anonymous"&lt;/span&gt;
    &lt;span class="na"&gt;referrerpolicy=&lt;/span&gt;&lt;span class="s"&gt;"no-referrer"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/macy@2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css2?family=Lato:wght@700&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Lato'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.parent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;justify-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.8rem&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#submit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ff6100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.8rem&lt;/span&gt; &lt;span class="m"&gt;2.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;transform&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TDwLRcin--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gg98ohd5g7j21olerejk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TDwLRcin--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gg98ohd5g7j21olerejk.png" alt="Gallery without image" width="880" height="438"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Explanation:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We have added the CDN of the libraries. And Some basic styles for images and other elements.&lt;/li&gt;
&lt;li&gt;The grid element is empty. We will add images through javascript later.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#lets-add-javascript"&gt;
  &lt;/a&gt;
  Let's add javascript
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.grid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;submitBtn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;macyInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Macy&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;breakAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="mi"&gt;1600&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;900&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;P6o0OPr-hYId5YKHQ9VU7VkkeKJH3idPYwGsBsTksC8&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;API_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.unsplash.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fixStartUpBug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;macyInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;runOnImageLoad&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;macyInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;recalculate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;evt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;UIEvents&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;evt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initUIEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resize&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatchEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Explanation:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We selected some elements from html.&lt;/li&gt;
&lt;li&gt;We created a macyInstance and passed our grid element as the container. BreakAt property will make the layout responsive.&lt;/li&gt;
&lt;li&gt;Macy Library has a bug. To fix that bug we need to call &lt;code&gt;fixStartUpBug&lt;/code&gt; function every time we add images to the DOM.&lt;/li&gt;
&lt;li&gt;Get the secret key from Unsplash website. Make sure it stays hidden.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addImagesInDom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;
        &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Explanation:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;This will add images into the grid container. The structure will be like this:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"grid"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#add-images-on-webpage-load"&gt;
  &lt;/a&gt;
  Add images on webpage load
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;onst&lt;/span&gt; &lt;span class="nx"&gt;intializeImages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;images&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;API_URL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/photos/?client_id=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;per_page=50`&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;regular&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;addImagesInDom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;fixStartUpBug&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;intializeImages&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Explanation: This will fetch some images from unsplash when we will visit the page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-the-search-functionality"&gt;
  &lt;/a&gt;
  Add the search functionality
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;searchImages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;results&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;images&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;API_URL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/search/photos/?client_id=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;query=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;per_page=50`&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;regular&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;images&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;removeAllChild&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstChild&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstChild&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;searchImages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;removeAllChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;addImagesInDom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;fixStartUpBug&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;submitBtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Explanation:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;searchImages&lt;/code&gt; function will search images on unsplash using the query text.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;removeAllChild&lt;/code&gt; function will remove all children from the grid container before we add new images.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;handleSubmit&lt;/code&gt; function will run every time we submit something.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Restlt:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#on-first-load"&gt;
  &lt;/a&gt;
  on first load
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QInF1ojk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2h7h2dsrjqr3b30z6fz4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QInF1ojk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2h7h2dsrjqr3b30z6fz4.png" alt="Image description" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#with-search"&gt;
  &lt;/a&gt;
  With search
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TiinJQlB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gy67k4ddxlwofrtfjjpq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TiinJQlB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gy67k4ddxlwofrtfjjpq.png" alt="Image description" width="880" height="439"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shameless-plug"&gt;
  &lt;/a&gt;
  Shameless Plug
&lt;/h2&gt;

&lt;p&gt;I have made some landing page clone videos with vanilla HTML, CSS, and JavaScript.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  SpaceX&lt;/li&gt;
&lt;li&gt;  Tesla&lt;/li&gt;
&lt;li&gt;  HULU&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jwwbR_3p-pM"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HkOcmKGm0zU"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/DwvJnDQgIIU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You will learn about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Javascript intersection observer to add cool effects&lt;/li&gt;
&lt;li&gt;  DOM manipulation&lt;/li&gt;
&lt;li&gt;  Aligning elements with CSS positions.&lt;/li&gt;
&lt;li&gt;  How to make responsive websites.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These will be great projects to brush up on your front end skills.&lt;/p&gt;

&lt;p&gt;If you are interested you can check the videos.&lt;/p&gt;

&lt;p&gt;You can also demo the application form&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://thatanjan.github.io/spaceX-landing-page-clone-yt/"&gt;SpaceX&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://thatanjan.github.io/tesla-clone-yt/"&gt;Tesla&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please like and subscribe to &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt;. It motivates me to create more content like this.&lt;/p&gt;

&lt;p&gt;That's it for this blog. I have tried to explain things simply. If you get stuck, you can ask me questions.&lt;/p&gt;

&lt;p&gt;By the way, I am looking for a new opportunity in a company where I can provide great value with my skills. If you are a recruiter, looking for someone skilled in full stack web development and passionate about revolutionizing the world, feel free to contact me. Also, I am open to talking about any freelance project.&lt;/p&gt;

&lt;p&gt;See my work from &lt;a href="https://www.thatanjan.me/projects"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contacts"&gt;
  &lt;/a&gt;
  Contacts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Email: &lt;a href="mailto:thatanjan@gmail.com"&gt;thatanjan@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  linkedin: &lt;a href="https://linkedin.com/in/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  portfolio: &lt;a href="https://thatanjan.me/"&gt;anjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  Github: &lt;a href="https://github.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  Instagram (personal): &lt;a href="https://instagram.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  Instagram (youtube channel): &lt;a href="https://instagram.com/cules_coding/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  twitter: &lt;a href="https://twitter.com/thatAnjan"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Videos might you might want to watch:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/s6J2Q2vOhf0"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/rSa8sUC8m_4"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0an2g0lq7LU"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T-n0mrssDiw"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/kVjOEYKUXxE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Blogs you might want to read:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.culescoding.space/blog/setup-eslint-prettier-with-typescript-and-react"&gt;Eslint, prettier setup with TypeScript and react &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.culescoding.space/blog/what-is-client-side-rendering"&gt;What is Client-Side Rendering?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.culescoding.space/blog/what-is-server-side-rendering"&gt;What is Server Side Rendering?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.culescoding.space/blog/everything-you-need-to-know-about-tree-data-structure"&gt;Everything you need to know about tree data structure&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.culescoding.space/blog/13-reasons-why-you-should-use-Nextjs"&gt;13 reasons why you should use Nextjs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.culescoding.space/blog/beginners-guide-to-quantum-computers"&gt;Beginners guide to quantum computers&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
      <category>nextjs</category>
    </item>
  </channel>
</rss>
