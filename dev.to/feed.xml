<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Simple typing test project using Javascript, HTML,CSS</title>
      <author>Lucifer25x</author>
      <pubDate>Wed, 10 Nov 2021 18:23:02 +0000</pubDate>
      <link>https://dev.to/lucifer25x/simple-typing-test-project-using-javascript-htmlcss-3006</link>
      <guid>https://dev.to/lucifer25x/simple-typing-test-project-using-javascript-htmlcss-3006</guid>
      <description>&lt;p&gt;(Project created for beginners)&lt;/p&gt;

&lt;p&gt;Github Source: &lt;a href="https://github.com/Lucifer25x/typing-test"&gt;https://github.com/Lucifer25x/typing-test&lt;/a&gt;&lt;br&gt;
For try: &lt;a href="https://lucifer25x.github.io/typing-test/"&gt;https://lucifer25x.github.io/typing-test/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>github</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Python : OS Module </title>
      <author>Anjali Kumawat</author>
      <pubDate>Wed, 10 Nov 2021 18:07:33 +0000</pubDate>
      <link>https://dev.to/anjalikumawat2002/python-os-module-ccb</link>
      <guid>https://dev.to/anjalikumawat2002/python-os-module-ccb</guid>
      <description>&lt;p&gt;The os module is a part of the standard library, or stdlib, within Python 3.&lt;/p&gt;

&lt;p&gt;Python &lt;strong&gt;os&lt;/strong&gt; module provides methods that help us to perform file processing operations. Let‚Äôs explore these basic functions one by one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-os"&gt;
  &lt;/a&gt;
  Using os
&lt;/h2&gt;

&lt;p&gt;Before you use the os module, you first need to bring it up by means of the Python import command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you try to run os without importing it, you will see an error message:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NameError: name 'os' is not defined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get a list of functions supported by os module, run the below command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(dir(os))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#files"&gt;
  &lt;/a&gt;
  Files
&lt;/h2&gt;

&lt;p&gt;Some of the methoods of the &lt;strong&gt;os&lt;/strong&gt; module to work with files.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rename-method-"&gt;
  &lt;/a&gt;
  rename() method :
&lt;/h3&gt;

&lt;p&gt;It is used to rename a file or directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.rename(old_filename,new_filename)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.rename(‚Äúfile.txt‚Äù, ‚Äúuser.txt‚Äù)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remove-method-"&gt;
  &lt;/a&gt;
  remove() method :
&lt;/h3&gt;

&lt;p&gt;It is used to delete the file.&lt;br&gt;
&lt;strong&gt;Path&lt;/strong&gt; : This is a path-like object which represents a file system path. This path-like object is either a string or bytes object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.remove(path_of_file)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.remove(‚Äúd1/user.txt‚Äù)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#directories"&gt;
  &lt;/a&gt;
  Directories
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#cwd-"&gt;
  &lt;/a&gt;
  CWD :
&lt;/h3&gt;

&lt;p&gt;CWD == "Current working directory"&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getcwd-method-"&gt;
  &lt;/a&gt;
  getcwd() method :
&lt;/h3&gt;

&lt;p&gt;returns current directory.&lt;br&gt;
or &lt;br&gt;
To check the path of the current working directory, we will use the getcwd method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(os.getcwd())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;  The folder where the Python script is running is known as the Current Directory. This is not the path where the Python script is located.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mkdir-method-"&gt;
  &lt;/a&gt;
  mkdir() method :
&lt;/h3&gt;

&lt;p&gt;It is used to create a directory in current directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.mkdir("d1")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This method raises FileExistsError if the directory to be created already exists.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chdir-method-"&gt;
  &lt;/a&gt;
  chdir() method :
&lt;/h3&gt;

&lt;p&gt;Suppose, we have a folder, for example, info, inside our current directory, we can switch to the info folder, using the chdir function. or It is used to change the current directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.chdir("info")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#rmdir-method-"&gt;
  &lt;/a&gt;
  rmdir() method :
&lt;/h3&gt;

&lt;p&gt;It is used to delete a directory. The directory must be empty before it is deleted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.rmdir("dirname")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#listdir-method-"&gt;
  &lt;/a&gt;
  listdir() method :
&lt;/h3&gt;

&lt;p&gt;Returns a list containing names of files and subdirectories in the specified directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(os.listdir())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Keep Learning!!&lt;br&gt;
Keep Coding....‚ù§Ô∏èüë©‚Äçüíª&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>python</category>
    </item>
    <item>
      <title>Achieving Great Work-Life Balance</title>
      <author>Geoff Stevens</author>
      <pubDate>Wed, 10 Nov 2021 17:53:14 +0000</pubDate>
      <link>https://dev.to/softwaredotcom/achieving-great-work-life-balance-3k3o</link>
      <guid>https://dev.to/softwaredotcom/achieving-great-work-life-balance-3k3o</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-worklife-balance"&gt;
  &lt;/a&gt;
  What is work-life balance? 
&lt;/h2&gt;

&lt;p&gt;Work-life balance means finding a healthy balance between your working and personal life. It means creating clear boundaries between work hours and non-work hours that allow you to achieve both your professional and personal goals.&lt;/p&gt;

&lt;p&gt;Many companies abide by the traditional 9am to 5pm work hours as a way to uphold work-life balance for their employees. With the shift to &lt;a href="https://www.software.com/1000x-system/remote-vs-office"&gt;remote work&lt;/a&gt;, freelancing, and the gig economy, teams are increasingly responsible for ensuring they maintain a healthy work-life balance in less traditional workplaces.&lt;/p&gt;

&lt;p&gt;The stakes are high. Improving work-life balance can boost happiness and productivity, while preventing &lt;a href="https://www.software.com/1000x-system/developer-burnout"&gt;burnout&lt;/a&gt;. Ignoring work-life balance can create &lt;em&gt;innovation zombies&lt;/em&gt;‚Äîcompanies that overwork their employees to increase output, but ultimately sabotage their organization's ability to compete in the marketplace.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-consequences-of-poor-worklife-balance"&gt;
  &lt;/a&gt;
  What are the consequences of poor work-life balance? 
&lt;/h2&gt;

&lt;p&gt;Consequences of poor work-life balance manifest at both the individual and team levels.&lt;/p&gt;

&lt;p&gt;Individuals can experience decreased productivity, lower satisfaction at work, and growing frustration with their current role and responsibilities. Without sufficient time outside of work to explore their own interests, individuals are also more vulnerable to negative changes to their self-image when it is tied too closely to their performance at work.&lt;/p&gt;

&lt;p&gt;Over the long-term, poor work-life balance can lead to &lt;a href="https://www.software.com/1000x-system/developer-burnout"&gt;burnout&lt;/a&gt; and chronic stress.&lt;/p&gt;

&lt;p&gt;Burnout is a severe form of mental and physical exhaustion. One common cause of burnout is overworking for extended periods of time without opportunities to rest, recharge, or pursue interests outside of work. Symptoms of burnout can be mental‚Äînegativism, cynicism, and detachment‚Äîas well as physical‚Äîheadaches, fatigue, and sleeplessness.&lt;/p&gt;

&lt;p&gt;Left unchecked, burnout can negatively impact a team's ability to achieve their goals. Teams can experience drops in long-term productivity, growing dissatisfaction, and, ultimately, higher turnover. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-you-use-data-sources-and-metrics-to-measure-worklife-balance"&gt;
  &lt;/a&gt;
  Can you use data sources and metrics to measure work-life balance?
&lt;/h2&gt;

&lt;p&gt;Engineers can measure time spent working during and outside their working hours. They can also measure code day length---essentially the time between their first and last line of code each day. Together, code time and code day length can provide insight into how long you are 'online' and at what hours you are connected to work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--04NJge-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stmfp7pgu7qhu4n78buo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--04NJge-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stmfp7pgu7qhu4n78buo.png" alt="Work-life balance" width="880" height="435"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's important to remember that different people work according to different schedules based on personal preferences. Unusual coding hours, such as night coding, may not necessarily indicate a poor work-life balance, especially now that more people are working remotely.&lt;/p&gt;

&lt;p&gt;For engineers with flexible schedules, they should be watching for aberrations from their long-term trends. Spikes in weekend coding or code day length can indicate changes to your work schedule that may be unsustainable. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-promote-a-good-worklife-balance-for-development-teams"&gt;
  &lt;/a&gt;
  How to promote a good work-life balance for development teams
&lt;/h2&gt;

&lt;p&gt;Promoting a good work-life balance requires a strong culture of planning, resilience, and development flow.&lt;/p&gt;

&lt;p&gt;First, teams should work to avoid &lt;em&gt;crunch time&lt;/em&gt;‚Äîcramming changes and fixes at the last minute to meet deadlines. Crunch time leads to poor work-life balance by requiring developers to work long, arduous hours in a high-stress environment. Reducing crunch time with more consistent and predictable development cycles can greatly reduce big fluctuations in work hours.&lt;/p&gt;

&lt;p&gt;Predictable development cycles require accurate estimations of the time and effort needed to complete sprints and projects. Most importantly, they require the intentional carving out of time for testing, refactoring, and paying down technical debt.&lt;/p&gt;

&lt;p&gt;Second, teams should invest resources into creating self-healing systems and processes. Organizational resilience stems from regularly improving your team's ability to respond to and resolve production failures. Teams can also reduce the chance or severity of failures by adding guardrails, such as shift-left testing, automated CI/CD pipelines, and feature flags. Over the long-term, greater resiliency means less time spent in firefighting mode with fewer emergency calls made to teams to restore service outside work hours.&lt;/p&gt;

&lt;p&gt;Netflix infamously built and deployed &lt;a href="https://github.com/Netflix/chaosmonkey"&gt;Chaos Monkey&lt;/a&gt;, a tool that randomly terminates virtual machine instances in production. By exposing engineers to such random failures, Netflix created a culture of resilience that helped them avoid production downtime and team burnout.&lt;/p&gt;

&lt;p&gt;Third, teams should enable the fast flow of work and fearlessly cut bureaucracy. The goal is to improve daily work so development teams are able to complete their tasks without needing to take time away from their personal lives.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Identify issues by making work visible. Understand bottlenecks in your organization's flow of work to see where to invest in DevOps and better tooling.&lt;/li&gt;
&lt;li&gt;  Provide developers with time to focus during work and complete tasks during work hours. Reaching flow state and staying in flow is key to getting work done. Try to eliminate unnecessary meetings and disruptions.&lt;/li&gt;
&lt;li&gt;  Decrease time spent waiting by removing or shrinking change approval boards and investing in self-service tooling, like automated environments and test data. Wait time works against team velocity and delays productive work, leaving developers feeling they need to "catch up" outside work hours. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#top-tips-for-striking-a-worklife-balance-as-a-software-engineer"&gt;
  &lt;/a&gt;
  Top tips for striking a work-life balance as a software engineer
&lt;/h2&gt;

&lt;p&gt;Software engineers can improve work-life balance by setting aside time for personal interests and disconnecting completely when stepping away from work.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Schedule time for hobbies and activities outside of work. It's easier to step away from work when you have planned events that are just as visible as meetings on your calendar. &lt;/li&gt;
&lt;li&gt;  Plan vacations, both long and short. You need both long weekends &lt;em&gt;and&lt;/em&gt; week-long getaways to fully recharge. &lt;/li&gt;
&lt;li&gt;  When offline, stay offline. Although it's tempting to check emails and notifications while taking time off, staying offline helps create clearer boundaries between life and work. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-finding-a-worklife-balance-could-make-you-a-better-developer"&gt;
  &lt;/a&gt;
  Why finding a work-life balance could make you a better developer
&lt;/h2&gt;

&lt;p&gt;By prioritizing work-life balance, engineering teams benefit from happier and more productive team members. They are more likely to report being satisfied with their role and less likely to leave their organization.&lt;/p&gt;

&lt;p&gt;Strong work-life balance also enables teams to be more agile and responsive to changes in workload. In exceptional situations and for brief periods of time, agile teams are able to temporarily ramp up their team's effort to meet deadlines, without burning out their team in the long-run. Emergencies happen, and teams with poor work-life balance won't have the resources or bandwidth to respond effectively.&lt;/p&gt;

&lt;p&gt;At the individual level, a strong work-life balance boosts energy, productivity, and creativity. By maintaining a strong work-life balance, developers can avoid one of the main risk factors for burnout. They are able to optimize for their long-term goals‚Äîcareer and personal development‚Äîrather than sprinting to achieve immediate, but potentially draining, short-term goals.&lt;/p&gt;

&lt;p&gt;Developers can also build valuable personal skills outside of work, which often translate into well-rounded employees who bring fresh ideas and new perspectives into the organization. A richer and more meaningful life outside of work creates a more diverse and engaging workplace for everyone.&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>Listen to the Season 7 Premiere of DevDiscuss: "Deeply Human Stories in Software with The Changelog"</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 10 Nov 2021 17:52:18 +0000</pubDate>
      <link>https://dev.to/devteam/listen-to-the-season-7-premiere-of-devdiscuss-deeply-human-stories-in-software-with-the-changelog-ip1</link>
      <guid>https://dev.to/devteam/listen-to-the-season-7-premiere-of-devdiscuss-deeply-human-stories-in-software-with-the-changelog-ip1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#were-super-excited-to-share-that-season-7-of-the-devdiscuss-podcast-is-finally-here-and-you-can-listen-right-here-on-dev"&gt;
  &lt;/a&gt;
  We're super excited to share that season 7 of the DevDiscuss podcast is finally here ‚Äî and you can listen right here on DEV!
&lt;/h2&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devdiscuss/s7-e1-deeply-human-stories-in-software-with-the-changelog"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S7:E1 - Deeply Human Stories in Software with The Changelog&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devdiscuss"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevDiscuss
      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s7-e1-deeply-human-stories-in-software-with-the-changelog" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s7-e1-deeply-human-stories-in-software-with-the-changelog" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s7-e1-deeply-human-stories-in-software-with-the-changelog" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s7-e1-deeply-human-stories-in-software-with-the-changelog" alt="DevDiscuss" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtvK04RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j-SdIkjZ--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s7-e1-deeply-human-stories-in-software-with-the-changelog"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devdiscuss/s7-e1-deeply-human-stories-in-software-with-the-changelog"&gt;
      &lt;img id="episode-profile-image" alt="S7:E1 - Deeply Human Stories in Software with The Changelog" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--zTELFWpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--otY2jCJh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;√ó&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Quick refresher since it's been a minute ‚Äî DevDiscuss is the first original podcast from DEV all about the burning topics that impact all our lives as developers.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Episode Info&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;In the season premiere, we‚Äôre talking about deeply human stories in software ‚Äî with some pretty fantastic guests from &lt;a href="https://changelog.com/"&gt;The Changelog&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hosts"&gt;
  &lt;/a&gt;
  Hosts:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/ben"&gt;@ben&lt;/a&gt;
 ‚Äî Creator of DEV &amp;amp; Co-Founder of Forem&lt;/li&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/coffeecraftcode"&gt;@coffeecraftcode&lt;/a&gt;
 ‚Äî Developer Advocate at Forem&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#guests"&gt;
  &lt;/a&gt;
  Guests:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/adamstac"&gt;Adam Stacoviak&lt;/a&gt;, Founder and Editor-in-Chief of Changelog Media.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/jerodsanto"&gt;Jerod Santo&lt;/a&gt;, Managing Editor of Changelog Media&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us know your thoughts on this show in the comments below ‚Äî or on Twitter (&lt;a href="https://twitter.com/thepracticaldev"&gt;@thepracticaldev&lt;/a&gt; ).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0zcTd9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/qZelsWAXfWpAA/giphy.gif%3Fcid%3Decf05e47ddu6jql6tkj8kvdmj4z5ofal65l38f235ruuinlo%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0zcTd9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/qZelsWAXfWpAA/giphy.gif%3Fcid%3Decf05e47ddu6jql6tkj8kvdmj4z5ofal65l38f235ruuinlo%26rid%3Dgiphy.gif%26ct%3Dg" alt="Speakers" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devdiscuss"&gt;follow DevDiscuss&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; ‚Äî or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  Quick Listening Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s7-e1-deeply-human-stories-in-software-with-the-changelog/id1513053883?i=1000541361862"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/show/4Jae2mPUqx0XnGychucsE4"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5kZXZwb2RzLmRldi9kZXZkaXNjdXNzX3BvZGNhc3QueG1s/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZkaXNjdXNzLzUw?sa=X&amp;amp;ved=0CAQQkfYCahcKEwjQzIevrY70AhUAAAAAHQAAAAAQCg"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devdiscuss/s7e1-deeply-human-stories-in-zND98OeCPQg/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevDiscuss-p1324596/?topicId=167643015"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://devpods.herokuapp.com/podcasts/devdiscuss/episodes/228"&gt;DEV Pods Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Our season seven sponsors: &lt;a href="https://www.microsoft.com/en-us/dev-community/Event/Register?eventId=DevDiscussPodcast_o7nllI4cp4Vg&amp;amp;ocid=aid3038582"&gt;Microsoft&lt;/a&gt;, &lt;a href="https://developer.newrelic.com/"&gt;New Relic&lt;/a&gt;, &amp;amp; &lt;a href="https://dev.toource=devdiscuss&amp;amp;utm_medium=syndication&amp;amp;utm_campaign=october21"&gt;Vultr&lt;/a&gt;!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>discuss</category>
      <category>podcast</category>
    </item>
    <item>
      <title>6 Repos github you should marked as web developper!</title>
      <author>CodeOz</author>
      <pubDate>Wed, 10 Nov 2021 17:47:49 +0000</pubDate>
      <link>https://dev.to/codeoz/6-repos-github-you-should-marked-as-web-developper-36eo</link>
      <guid>https://dev.to/codeoz/6-repos-github-you-should-marked-as-web-developper-36eo</guid>
      <description>&lt;p&gt;Today I will share with you some repository Github that will help you to be more efficient for every developper!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  üé® CSS
&lt;/h2&gt;

&lt;p&gt;A collection of tips to help take your CSS skills pro.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AllThingsSmitty/css-protips"&gt;https://github.com/AllThingsSmitty/css-protips&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cheatlists"&gt;
  &lt;/a&gt;
  üìö Cheatlists
&lt;/h2&gt;

&lt;p&gt;Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/LeCoupa/awesome-cheatsheets"&gt;https://github.com/LeCoupa/awesome-cheatsheets&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There is a website that gather all sheets if you prefer: &lt;em&gt;&lt;a href="https://lecoupa.github.io/awesome-cheatsheets/"&gt;https://lecoupa.github.io/awesome-cheatsheets/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#algo"&gt;
  &lt;/a&gt;
  üë®‚Äçüî¨ Algo
&lt;/h2&gt;

&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;https://github.com/trekhleb/javascript-algorithms&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clean-code"&gt;
  &lt;/a&gt;
  üßπ Clean code
&lt;/h2&gt;

&lt;p&gt;Clean code for javascript&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;https://github.com/ryanmcdermott/clean-code-javascript&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-web-works"&gt;
  &lt;/a&gt;
  üåé How web works
&lt;/h2&gt;

&lt;p&gt;What happens behind the scenes when we type google.com in a browser?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/vasanthk/how-web-works"&gt;https://github.com/vasanthk/how-web-works&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-programming-books"&gt;
  &lt;/a&gt;
  üìñ Free programming books
&lt;/h2&gt;

&lt;p&gt;Get free programming ebooks.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;https://github.com/EbookFoundation/free-programming-books&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;I hope you like this reading!&lt;/p&gt;

&lt;p&gt;üéÅ You can get my new book &lt;code&gt;Underrated skills in javascript, make the difference&lt;/code&gt; for FREE if you follow me on &lt;a href="https://twitter.com/code__oz"&gt;Twitter&lt;/a&gt; and MP me üòÅ&lt;/p&gt;

&lt;p&gt;Or get it &lt;a href="https://codeoz.gumroad.com/l/RXLYp"&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üá´üá∑ü•ñ For french developper you can check my &lt;a href="https://www.youtube.com/channel/UCC675U1ZUPFASsK9-FjawtA"&gt;YoutubeChannel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üéÅ &lt;a href="https://www.getrevue.co/profile/code__oz"&gt;MY NEWSLETTER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚òïÔ∏è You can &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;SUPPORT MY WORKS&lt;/a&gt; üôè&lt;/p&gt;

&lt;p&gt;üèÉ‚Äç‚ôÇÔ∏è You can follow me on üëá&lt;/p&gt;

&lt;p&gt;üïä Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üë®‚Äçüíª Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can mark üîñ this article!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Optimizing fonts for the web</title>
      <author>Cheemz</author>
      <pubDate>Wed, 10 Nov 2021 17:33:43 +0000</pubDate>
      <link>https://dev.to/cheemzkun/optimizing-fonts-for-the-web-2ja5</link>
      <guid>https://dev.to/cheemzkun/optimizing-fonts-for-the-web-2ja5</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This post was originally published on my blog page at &lt;a href="https://try.catch.wtf/blog/optimizing-fonts-for-the-web"&gt;try.catch.wtf&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Adding fonts to your site can make it look better. And they come with some side effects leading to degraded performance. In this post, I will share how to use fonts without taking away a huge bite of your lighthouse scores üò§.&lt;/p&gt;

&lt;p&gt;But before we jump into it, let's analyze some of these side effects.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Delayed text rendering&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If a web font has not yet loaded, it can delay text rendering. Resulting in delayed First Contentful Paint (FCP) or even delayed Largest Contentful Paint (LCP) in some cases.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Layout shifts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When fonts are loaded and swapped, they can cause layout shifts. These layout shifts occur when a web font and its fallback font take up different amounts of space on the page.&lt;/p&gt;

&lt;p&gt;What can we do to fix these issues ü§î?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-the-font-ready-to-serve"&gt;
  &lt;/a&gt;
  Getting the font ready to serve
&lt;/h2&gt;

&lt;p&gt;Before we go ahead with anything, let's see how we can optimally serve our font files as fast as possible. If you are using a 3rd party font provider (like Google Fonts), you cannot do much in this case. However, if you are serving the fonts yourself, make sure to serve them (or any static assets) over a CDN and HTTP/2.&lt;/p&gt;

&lt;p&gt;A small font file will always be early to the party ü•≥. Downloading multiple font styles (eg. weight, slant) will also hinder the UX. Wouldn't it be great if we could get away without downloading these other styles of the font and use only 1 font to rule them all üò¨?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#synthetic-weights"&gt;
  &lt;/a&gt;
  Synthetic weights
&lt;/h3&gt;

&lt;p&gt;SHH ü§´! Designers hate this simple trick ü§¨.&lt;/p&gt;

&lt;p&gt;Instead of downloading multiple weights of the same font, we can load a regular variant (400 weight) and rely on the browser to synthetically create other weights. If the browser can create synthetic variants, then why do designers hate this trick? It seems to be working perfectly fine, right?&lt;/p&gt;

&lt;p&gt;In the image below, the red text is the bold variant (500 weight) of &lt;a href="https://indestructibletype.com/Jost.html"&gt;Jost*&lt;/a&gt; font, and the blue text is created synthetically from the regular variant (400 weight). The difference might look subtle, but they can impair the UI and UX.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qOnnDWdP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pug9jmgwwps62vvizo2l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qOnnDWdP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pug9jmgwwps62vvizo2l.png" alt="Jost font synthetic 700 weight vs actual 700 weight" width="548" height="237"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If this doesn't bother you (or your designers), you can go ahead and use synthetic styles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#variable-fonts"&gt;
  &lt;/a&gt;
  Variable fonts
&lt;/h3&gt;

&lt;p&gt;A variable font has multiple styles like weight, width, slant, optical size, and italics (called axis) of the fonts. The font creator can create several axes, reducing the number of styles you need to download. For this case, we will use the weight axis. If you want to learn more about the other axes or variable fonts, &lt;a href="https://web.dev/variable-fonts/"&gt;web.dev&lt;/a&gt; has a great article on it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9YxmrgnC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nn5a8a9rvodbife2yhgv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9YxmrgnC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nn5a8a9rvodbife2yhgv.png" alt="Jost variable font 700 weight vs actual 700 weight" width="548" height="237"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can use &lt;a href="https://v-fonts.com/"&gt;Variable Fonts&lt;/a&gt; for finding and trying variable fonts&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#font-subsetting"&gt;
  &lt;/a&gt;
  Font subsetting
&lt;/h3&gt;

&lt;p&gt;Font subsetting is the process of taking a font file and reducing the number of characters (or character sets). For example, let's say you have a font with Japanese characters like &lt;code&gt;Êúà&lt;/code&gt;. You are serving a page that is in English. It is unlikely that you will render Japanese characters. So we can remove them from our font and make a profit!&lt;/p&gt;

&lt;p&gt;Let's subset &lt;code&gt;Jost-400-Book.ttf&lt;/code&gt; (&lt;code&gt;88.7 kb&lt;/code&gt;) from &lt;a href="https://indestructibletype.com/Jost.html"&gt;Jost *&lt;/a&gt; using &lt;a href="https://github.com/zachleat/glyphhanger"&gt;glyphhanger&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# install glyphhanger&lt;/span&gt;
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; glyphhanger

&lt;span class="c"&gt;# install fonttools&lt;/span&gt;
pip &lt;span class="nb"&gt;install &lt;/span&gt;fonttools

&lt;span class="c"&gt;# subsetting Jost-400-Book.ttf font to Latin charset&lt;/span&gt;
glyphhanger &lt;span class="nt"&gt;--LATIN&lt;/span&gt; &lt;span class="nt"&gt;--subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Jost-400-Book.ttf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above script results in a &lt;code&gt;Jost-400-Book-subset.ttf&lt;/code&gt; (&lt;code&gt;40.5 kb&lt;/code&gt;) file. Already a reduction of 54% üò±!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are online tools like &lt;a href="https://www.alphabet-type.com/tools/charset-checker"&gt;Charset checker&lt;/a&gt; to check the charset of fonts. You can use this to verify if the subsetted font matches your required charset or not.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#woff2-compression"&gt;
  &lt;/a&gt;
  WOFF2 compression
&lt;/h3&gt;

&lt;p&gt;WOFF2 is a compressed font format that can compress a TTF font.&lt;/p&gt;

&lt;p&gt;Let's use our subset font &lt;code&gt;Jost-400-Book-subset.ttf&lt;/code&gt; (&lt;code&gt;40.5 kb&lt;/code&gt;) file and compress it to woff2.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# clone woff2&lt;/span&gt;
git clone &lt;span class="nt"&gt;--recursive&lt;/span&gt; https://github.com/google/woff2.git

&lt;span class="c"&gt;# enter into the cloned repo&lt;/span&gt;
&lt;span class="nb"&gt;cd &lt;/span&gt;woff2

&lt;span class="c"&gt;# build&lt;/span&gt;
make clean all

&lt;span class="c"&gt;# convert the font&lt;/span&gt;
./woff2_compress ~/Jost-400-Book-subset.ttf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This results in a &lt;code&gt;Jost-400-Book-subset.woff2&lt;/code&gt; (&lt;code&gt;15.3 kb&lt;/code&gt;) file. A whopping decrease of 62% compared to the subset font (&lt;code&gt;Jost-400-Book-subset.ttf&lt;/code&gt;) and an 82% decrease compared to the original font (&lt;code&gt;Jost-400-Book.ttf&lt;/code&gt;) üò±!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are using &lt;code&gt;glyphhanger&lt;/code&gt; for font subsetting, you can also compress to woff2 directly in a single command!&lt;/p&gt;

&lt;p&gt;&lt;code&gt;glyphhanger --LATIN --subset=Jost-400-Book.ttf --formats=woff2&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#loading-the-fonts"&gt;
  &lt;/a&gt;
  Loading the fonts
&lt;/h2&gt;

&lt;p&gt;Now that we have reduced the font file size, let's see how we can load the font.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@font-face&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jost&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;font-display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("/fonts/Jost/Jost-400.woff2")&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"woff2"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.custom-font&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jost&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This specifies that a font located at &lt;code&gt;/fonts/Jost/Jost-400.woff2&lt;/code&gt;, of &lt;code&gt;woff2&lt;/code&gt; type, with &lt;code&gt;400&lt;/code&gt; weight, and &lt;code&gt;normal&lt;/code&gt; style is referenced as &lt;code&gt;Jost&lt;/code&gt;. Now we can use our font anywhere by setting &lt;code&gt;font-family: Jost;&lt;/code&gt;. Browsers download fonts only if a styling on the page references them. In this case, the browser will only download the Jost font if the page has an element with class &lt;code&gt;.custom-font&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;@font-face&lt;/code&gt; rule changes a bit when loading variable fonts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@font-face&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jost&lt;/span&gt; &lt;span class="n"&gt;VF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300&lt;/span&gt; &lt;span class="m"&gt;800&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* specify weight range of the font */&lt;/span&gt;
  &lt;span class="py"&gt;font-display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("/fonts/Jost/Jost-VF.woff2")&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"woff2 supports variations"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="sx"&gt;url("/fonts/Jost/Jost-VF.woff2")&lt;/span&gt;
      &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"woff2-variations"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.custom-font&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jost&lt;/span&gt; &lt;span class="n"&gt;VF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;font-display&lt;/code&gt; property tells the browser when to render the font once it is loaded. It accepts the following values:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-auto-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;auto&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This is browser default.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-swap-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;swap&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The fallback font will be used immediately. Once the custom font downloads, it swaps the font. It can cause 'Flash of Unstyled Text' or &lt;a href="https://css-tricks.com/fout-foit-foft/"&gt;FOUT&lt;/a&gt;. Use &lt;code&gt;swap&lt;/code&gt; only when the font is absolutely necessary. Make sure to deliver the font early enough to prevent layout shifts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zk0EUPM2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1blqs0bq6mabpobsaxb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zk0EUPM2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1blqs0bq6mabpobsaxb.png" alt="Timeline" width="880" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-block-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;block&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Displays invisible text for a. Once the custom font downloads, it swaps the font. It can cause 'Flash of Invisible Text' or &lt;a href="https://css-tricks.com/fout-foit-foft/"&gt;FOIT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XMWmOEPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zyvz79nb6e2zj1nldr7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XMWmOEPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zyvz79nb6e2zj1nldr7.png" alt="Success timeline 1" width="880" height="359"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MHZ6y6Lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ht2ib9b2fgrrx26etah8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MHZ6y6Lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ht2ib9b2fgrrx26etah8.png" alt="Success timeline 2" width="880" height="264"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-fallback-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;fallback&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Blocks rendering for a short time (100ms). If the font is still not downloaded, use the fallback font. Gives a swap period of about 3 seconds for the custom font to load. If it doesn't load within the swap period, it will not be used.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1N9BMiex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7pnhddudggjqt4g0rpz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1N9BMiex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7pnhddudggjqt4g0rpz.png" alt="Success timeline 1" width="880" height="359"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HDuLsYU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wh4t7ilkthtpx6n6s5kk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HDuLsYU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wh4t7ilkthtpx6n6s5kk.png" alt="Success timeline 2" width="880" height="264"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZIZ6RIQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyqg67n8x05qr7mrot60.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZIZ6RIQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyqg67n8x05qr7mrot60.png" alt="Failure timeline" width="880" height="383"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-optional-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;optional&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Like &lt;code&gt;fallback&lt;/code&gt;, it blocks for a while and displays the fallback if the custom font is not yet downloaded. But, the browser decides whether to swap the downloaded custom font depending on the connection speed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preloading"&gt;
  &lt;/a&gt;
  Preloading?
&lt;/h2&gt;

&lt;p&gt;Sometimes, the absence of fonts can make your page unusable. It might be a no-brainer to load them asap because you know you WILL use them. We can &lt;code&gt;preload&lt;/code&gt; fonts by adding a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; with &lt;code&gt;preload&lt;/code&gt; hint. This way, instead of the font to be discovered via stylesheet and downloaded, the browser will download the font at the earliest.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Preloaded resources are cached on the browsers for future requests.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;
    &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"preload"&lt;/span&gt;
    &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/fonts/Jost/Jost-400.woff2"&lt;/span&gt;
    &lt;span class="na"&gt;as=&lt;/span&gt;&lt;span class="s"&gt;"font"&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"font/woff2"&lt;/span&gt;
    &lt;span class="na"&gt;crossorigin&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But this comes at a cost üòî. &lt;code&gt;preload&lt;/code&gt;ing resources might obstruct other critical resources for the page. If at all you end up &lt;code&gt;preload&lt;/code&gt;ing fonts, make sure your longest critical chain is short.&lt;/p&gt;

&lt;p&gt;When loading fonts from a 3rd party origin, you can &lt;code&gt;preconnect&lt;/code&gt; to establish an early connection. Below is an example with Google Fonts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- preconnect origin serving stylesheets --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"preconnect"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="c"&gt;&amp;lt;!-- preconnect origin serving fonts --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"preconnect"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.gstatic.com"&lt;/span&gt; &lt;span class="na"&gt;crossorigin&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="c"&gt;&amp;lt;!-- loading stylesheets --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;
    &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=Jost&amp;amp;display=swap"&lt;/span&gt;
    &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that links with &lt;code&gt;prefetch&lt;/code&gt; and &lt;code&gt;preconnect&lt;/code&gt; hints are executed as the browser sees fit. Whereas &lt;code&gt;preload&lt;/code&gt; is mandatory. Modern web browsers already have good prioritization and do not need &lt;code&gt;preload&lt;/code&gt;s. But if you want some critical resource to be downloaded at the earliest, you can use it sparingly.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;preconnect&lt;/code&gt; for fonts needs a &lt;code&gt;crossorigin&lt;/code&gt; attribute because, unlike stylesheets, font files are served over &lt;a href="https://www.w3.org/TR/css-fonts-3/#font-fetching-requirements"&gt;CORS connection&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;How does all this fix the 2 issues we discussed in the beginning?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Faster text rendering&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A font will render faster if it is downloaded faster. Use variable fonts when needing multiple font styles. Subset and convert fonts to woff2 for the smallest font file size. Serve them over a CDN and HTTP/2 protocol for the fastest and most reliable speeds. &lt;code&gt;preload&lt;/code&gt; fonts when serving them or &lt;code&gt;preconnect&lt;/code&gt; fonts/stylesheets when using 3rd party services. When preloading, make sure your longest critical chain is the smallest possible&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Layout shifts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the custom font is not a top priority, use &lt;code&gt;font-display: optional&lt;/code&gt;. This guarantees no layout shifts. But if the custom font is a top priority, use &lt;code&gt;font-display: swap&lt;/code&gt; with the above optimizations for the font delivery.&lt;/p&gt;

&lt;p&gt;Hope you find this post helpful! SA-YO-NA-RA! üëãüòΩ&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>frontend</category>
      <category>performance</category>
    </item>
    <item>
      <title>Using GitHub Actions to answer questions about Pull Requests</title>
      <author>Banjo Obayomi</author>
      <pubDate>Wed, 10 Nov 2021 17:27:34 +0000</pubDate>
      <link>https://dev.to/banjtheman/using-github-actions-to-answer-questions-about-pull-requests-e64</link>
      <guid>https://dev.to/banjtheman/using-github-actions-to-answer-questions-about-pull-requests-e64</guid>
      <description>&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/banjtheman/prfaq_action/pull/34#issuecomment-964757256"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Comment for
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#34&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/apps/github-actions"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ND2Q_hEY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/in/15368%3Fv%3D4" alt="github-actions[bot] avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/apps/github-actions"&gt;github-actions[bot]&lt;/a&gt;
        &lt;/strong&gt; commented on &lt;a href="https://github.com/banjtheman/prfaq_action/pull/34#issuecomment-964757256"&gt;&lt;time&gt;Nov 10, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;h2&gt;
&lt;a id="user-content-pr-faq" class="anchor" href="#pr-faq"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;PR FAQ&lt;/h2&gt;
&lt;h3&gt;
&lt;a id="user-content-how-long-was-pr-open" class="anchor" href="#how-long-was-pr-open"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;How long was PR open?&lt;/h3&gt;
&lt;p&gt;The PR was open for 0 days, 0 hours, 0 minutes, 4 seconds&lt;/p&gt;
&lt;h3&gt;
&lt;a id="user-content-who-contributed-to-the-pr" class="anchor" href="#who-contributed-to-the-pr"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Who contributed to the PR?&lt;/h3&gt;
&lt;p&gt;The following users contributed to the PR&lt;br&gt;
banjtheman&lt;/p&gt;
&lt;h3&gt;
&lt;a id="user-content-what-files-changed-in-the-pr" class="anchor" href="#what-files-changed-in-the-pr"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What files changed in the PR?&lt;/h3&gt;
&lt;p&gt;The following files changed in the PR&lt;br&gt;
templates/prfaq-template.md&lt;/p&gt;
&lt;h3&gt;
&lt;a id="user-content-how-many-lines-of-code-changed-in-the-pr" class="anchor" href="#how-many-lines-of-code-changed-in-the-pr"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;How many lines of code changed in the PR?&lt;/h3&gt;
&lt;p&gt;+5 -5 lines of code changed&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/banjtheman/prfaq_action/pull/34#issuecomment-964757256"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;The Pull Request FAQs (PRFAQs) is a mechanism to automatically capture relevant data points on a finished Pull Request. The PRFAQs currently answers the following questions.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;How long was PR open?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Who contributed to the PR?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What files changed in the PR?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How many lines of code changed in the PR? &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By leveraging existing GitHub Actions I was able to build a workflow to answer the questions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;The following highlights how this workflow works.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When a pull request is closed, the workflow is started.&lt;/li&gt;
&lt;li&gt;The workflow downloads the repo using the GitHub Action &lt;a href="https://github.com/actions/checkout"&gt;actions/checkout@v2&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The workflow uses the GitHub GraphQL API using the template query to get data on the pull request using the GitHub Action &lt;a href="https://github.com/helaili/github-graphql-action"&gt;helaili/github-graphql-action@2.0.1&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The workflow saves the output as a JSON file&lt;/li&gt;
&lt;li&gt;The workflow uses the &lt;a href="https://github.com/jannekem/run-python-script-action"&gt;jannekem/run-python-script-action@v1&lt;/a&gt; to parse the JSON file to set answers to the questions as environment variables&lt;/li&gt;
&lt;li&gt;The workflow uses the &lt;a href="https://github.com/chuhlomin/render-template"&gt;chuhlomin/render-template@v1.2&lt;/a&gt; to set the answers into the PRFAQs template &lt;/li&gt;
&lt;li&gt;The workflow uses the &lt;a href="https://github.com/peter-evans/create-or-update-comment"&gt;peter-evans/create-or-update-comment@v1&lt;/a&gt; to post the answers as a comment on the Pull Request &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#submission-category-maintainer-musthaves"&gt;
  &lt;/a&gt;
  Submission Category: Maintainer Must-Haves
&lt;/h3&gt;

&lt;p&gt;While Maintainers can find this information by scrolling through each Pull Request the PRFAQ workflow consolidates the effort into a single comment and provides vital information not found directly such as &lt;a href="https://stackoverflow.com/questions/55861526/how-can-i-track-how-long-pull-requests-have-been-open-on-github"&gt;how long the PR was open for&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yaml-file-and-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File and Link to Code
&lt;/h3&gt;

&lt;p&gt;Here is the GitHub Repo&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/banjtheman"&gt;
        banjtheman
      &lt;/a&gt; / &lt;a href="https://github.com/banjtheman/prfaq_action"&gt;
        prfaq_action
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Create a PRFAQ for merged pull requests
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Here is the Workflow Yaml&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;PRFAQ&lt;/span&gt;

&lt;span class="c1"&gt;# only trigger on pull request closed events&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;types&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;closed&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;PR_NUMBER&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.event.pull_request.number }}&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;get_pr_stats&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout repository&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;GitHub GraphQL Action&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;helaili/github-graphql-action@2.0.1&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;queries/pr_stats.yaml&lt;/span&gt;
          &lt;span class="na"&gt;logLevel&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;debug&lt;/span&gt;
          &lt;span class="na"&gt;outputFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pr_stats.json&lt;/span&gt;
          &lt;span class="na"&gt;pr_num&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ env.PR_NUMBER }}&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Set env variables&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;jannekem/run-python-script-action@v1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;import json&lt;/span&gt;
            &lt;span class="s"&gt;import datetime&lt;/span&gt;

            &lt;span class="s"&gt;with open("pr_stats.json", "r") as pr_file:&lt;/span&gt;
                &lt;span class="s"&gt;pr_stats = json.load(pr_file)&lt;/span&gt;

                &lt;span class="s"&gt;# Get Time Open&lt;/span&gt;
                &lt;span class="s"&gt;created_at = pr_stats["data"]["repository"]["pullRequest"]["createdAt"]&lt;/span&gt;
                &lt;span class="s"&gt;merged_at = pr_stats["data"]["repository"]["pullRequest"]["closedAt"]&lt;/span&gt;

                &lt;span class="s"&gt;created_at_timesamp = datetime.datetime.strptime(created_at, "%Y-%m-%dT%H:%M:%SZ")&lt;/span&gt;
                &lt;span class="s"&gt;merged_at_timestamp = datetime.datetime.strptime(merged_at, "%Y-%m-%dT%H:%M:%SZ")&lt;/span&gt;
                &lt;span class="s"&gt;timestamp_diff = merged_at_timestamp - created_at_timesamp&lt;/span&gt;

                &lt;span class="s"&gt;days, seconds = timestamp_diff.days, timestamp_diff.seconds&lt;/span&gt;
                &lt;span class="s"&gt;hours = days * 24 + seconds // 3600&lt;/span&gt;
                &lt;span class="s"&gt;minutes = (seconds % 3600) // 60&lt;/span&gt;
                &lt;span class="s"&gt;seconds = seconds % 60&lt;/span&gt;

                &lt;span class="s"&gt;timestamp_open = f" {days} days, {hours} hours, {minutes} minutes, {seconds} seconds"&lt;/span&gt;
                &lt;span class="s"&gt;print(timestamp_open)&lt;/span&gt;
                &lt;span class="s"&gt;set_env("PR_OPEN", timestamp_open)&lt;/span&gt;

                &lt;span class="s"&gt;# Get participants&lt;/span&gt;
                &lt;span class="s"&gt;participants = pr_stats["data"]["repository"]["pullRequest"]["participants"][&lt;/span&gt;
                    &lt;span class="s"&gt;"edges"&lt;/span&gt;
                &lt;span class="s"&gt;]&lt;/span&gt;
                &lt;span class="s"&gt;participants_string = ""&lt;/span&gt;
                &lt;span class="s"&gt;for participant in participants:&lt;/span&gt;
                    &lt;span class="s"&gt;participants_string += participant["node"]["login"] + "  "&lt;/span&gt;

                &lt;span class="s"&gt;print(participants_string)&lt;/span&gt;
                &lt;span class="s"&gt;set_env("PR_USERS", participants_string)&lt;/span&gt;

                &lt;span class="s"&gt;# Lines of code changed&lt;/span&gt;
                &lt;span class="s"&gt;additions = pr_stats["data"]["repository"]["pullRequest"]["additions"]&lt;/span&gt;
                &lt;span class="s"&gt;deletions = pr_stats["data"]["repository"]["pullRequest"]["deletions"]&lt;/span&gt;
                &lt;span class="s"&gt;content_changed = f"+{additions} -{deletions} lines of code"&lt;/span&gt;
                &lt;span class="s"&gt;print(content_changed)&lt;/span&gt;
                &lt;span class="s"&gt;set_env("PR_LOC", content_changed)&lt;/span&gt;

                &lt;span class="s"&gt;# Files that changed&lt;/span&gt;
                &lt;span class="s"&gt;files = pr_stats["data"]["repository"]["pullRequest"]["files"]["edges"]&lt;/span&gt;
                &lt;span class="s"&gt;files_string = ""&lt;/span&gt;
                &lt;span class="s"&gt;for file_path in files:&lt;/span&gt;
                    &lt;span class="s"&gt;files_string += file_path["node"]["path"] + "  "&lt;/span&gt;
                &lt;span class="s"&gt;print(files_string)&lt;/span&gt;
                &lt;span class="s"&gt;set_env("PR_FILES", files_string)&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Render template&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;template&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;chuhlomin/render-template@v1.2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;templates/prfaq-template.md&lt;/span&gt;
          &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;pr_open: ${{ env.PR_OPEN }}&lt;/span&gt;
            &lt;span class="s"&gt;pr_users: ${{ env.PR_USERS }}&lt;/span&gt;
            &lt;span class="s"&gt;pr_loc: ${{ env.PR_LOC }}&lt;/span&gt;
            &lt;span class="s"&gt;pr_files: ${{ env.PR_FILES }}&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Create comment&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;peter-evans/create-or-update-comment@v1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;issue-number&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ env.PR_NUMBER }}&lt;/span&gt;
          &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ steps.template.outputs.result }}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;These are all the Actions I used to build the workflow&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/actions/checkout"&gt;actions/checkout@v2&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/helaili/github-graphql-action"&gt;helaili/github-graphql-action@2.0.1&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jannekem/run-python-script-action"&gt;jannekem/run-python-script-action@v1&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/chuhlomin/render-template"&gt;chuhlomin/render-template@v1.2&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peter-evans/create-or-update-comment"&gt;peter-evans/create-or-update-comment@v1&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What other questions should this workflow answer? Leave your suggestions in the comments below.&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>github</category>
      <category>opensource</category>
    </item>
    <item>
      <title>1 line of code: How to get every even item of an Array</title>
      <author>martin krause</author>
      <pubDate>Wed, 10 Nov 2021 17:17:29 +0000</pubDate>
      <link>https://dev.to/martinkr/1-line-of-code-how-to-get-every-even-item-of-an-array-3pl3</link>
      <guid>https://dev.to/martinkr/1-line-of-code-how-to-get-every-even-item-of-an-array-3pl3</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;evenItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Returns an array which contains every even item of the original array.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-repository-amp-npm-package"&gt;
  &lt;/a&gt;
  The repository &amp;amp; npm package
&lt;/h2&gt;

&lt;p&gt;You can find the all the utility functions from this series at &lt;a href="https://github.com/martinkr/onelinecode"&gt;github.com/martinkr/onelinecode&lt;/a&gt;&lt;br&gt;
The library is also published to &lt;a href="https://www.npmjs.com/package/@onelinecode/onelinecode"&gt;npm as @onelinecode&lt;/a&gt; for your convenience.&lt;/p&gt;

&lt;p&gt;The code and the npm package will be updated every time I publish a new article.&lt;/p&gt;




&lt;p&gt;Happy coding and consider to &lt;a href="https://www.buymeacoffee.com/martinkr"&gt;buy me a coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@zoo_monkey"&gt;zoo_monkey&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/fuji"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>performance</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Structure Testing for Docker Containers</title>
      <author>Tomas Fernandez</author>
      <pubDate>Wed, 10 Nov 2021 17:13:42 +0000</pubDate>
      <link>https://dev.to/semaphore/structure-testing-for-docker-containers-2fdl</link>
      <guid>https://dev.to/semaphore/structure-testing-for-docker-containers-2fdl</guid>
      <description>&lt;p&gt;So you‚Äôve set up &lt;a href="https://semaphoreci.com/continuous-integration"&gt;continuous integration&lt;/a&gt; for your project. Everything looks good and now all you need is a container. Just build and run it, right? Not so fast!&lt;/p&gt;

&lt;p&gt;Whether using containers to support development or for packaging an application, it‚Äôs easy to take them for granted. But many things can go wrong with them: moved files, incorrect permissions, a user is missing, the Dockerfile is incomplete, the list goes on‚Ä¶&lt;/p&gt;

&lt;p&gt;Containers are as crucial as the code they support. In this tutorial, we‚Äôll introduce a different way of testing them before deployment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#one-of-the-many-ways-google-tests-containers"&gt;
  &lt;/a&gt;
  One of the many ways Google tests containers
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/GoogleContainerTools/container-structure-test"&gt;Container Structure Tests&lt;/a&gt; (CST) is a container-testing tool developed by Google and open-sourced with the Apache 2.0 license. CST comes with a predefined set of tests for looking at what‚Äôs actually inside a container image.&lt;/p&gt;

&lt;p&gt;For instance, CST can check if a file exists, run a command and validate its output, or check if the container exposes the correct ports. Almost every declarative keyword in the Dockerfile has a corresponding test.&lt;/p&gt;

&lt;p&gt;One important note is that the project is not officially supported by Google, so it doesn‚Äôt show a lot of activity. But it‚Äôs popular enough to keep it active and it‚Äôs still accepting contributions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-tests-less-uncertainty"&gt;
  &lt;/a&gt;
  More tests, less uncertainty
&lt;/h2&gt;

&lt;p&gt;Any old container should do in order to try out CST. Though it will be easier if we build one from a known Dockerfile. So, if you want to follow along with me as I explore this tool, fork and clone our Ruby Kubernetes demo project:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/semaphoreci-demos"&gt;
        semaphoreci-demos
      &lt;/a&gt; / &lt;a href="https://github.com/semaphoreci-demos/semaphore-demo-ruby-kubernetes"&gt;
        semaphore-demo-ruby-kubernetes
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A Semaphore demo CI/CD pipeline for Kubernetes.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Semaphore CI/CD demo for Kubernetes&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://semaphore-demos.semaphoreci.com/projects/semaphore-demo-ruby-kubernetes-eins" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/68ab284da4be139354f327a59d64581dbcb0dfa96839d3ee69b3104930140c26/68747470733a2f2f73656d6170686f72652d64656d6f732e73656d6170686f726563692e636f6d2f6261646765732f73656d6170686f72652d64656d6f2d727562792d6b756265726e657465732d65696e732f6272616e636865732f6d61737465722e737667" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an example application and CI/CD pipeline showing how to build, test and
deploy a microservice to Kubernetes using Semaphore 2.0.&lt;/p&gt;
&lt;p&gt;Ingredients:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ruby Sinatra as web framework&lt;/li&gt;
&lt;li&gt;RSpec for tests&lt;/li&gt;
&lt;li&gt;Packaged in a Docker container&lt;/li&gt;
&lt;li&gt;Container pushed to Docker Hub registry&lt;/li&gt;
&lt;li&gt;Deployed to Kubernetes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
CI/CD on Semaphore&lt;/h2&gt;
&lt;p&gt;If you're new to Semaphore, feel free to fork this repository and use it to
&lt;a href="https://docs.semaphoreci.com/article/63-your-first-project" rel="nofollow"&gt;create a project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The CI/CD pipeline is defined in &lt;code&gt;.semaphore&lt;/code&gt; directory and looks like this:&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/semaphoreci-demos/semaphore-demo-ruby-kubernetespipeline.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--epjFevWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/semaphoreci-demos/semaphore-demo-ruby-kubernetespipeline.png" alt="CI/CD pipeline on Semaphore"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Local application setup&lt;/h2&gt;
&lt;p&gt;To run the microservice:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;bundle install --path vendor/bundle
bundle exec rackup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run tests:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;bundle exec rspec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build and run Docker container:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;docker build -t semaphore-demo-ruby-kubernetes
docker run -p 80:4567 semaphore-demo-ruby-kubernetes
curl localhost
&amp;gt; hello world :))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Additional documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://semaphoreci.com/blog/cicd-microservices-digitalocean-kubernetes" rel="nofollow"&gt;CI/CD for Microservices on DigitalOcean Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.semaphoreci.com/examples/ci-cd-for-microservices-on-kubernetes" rel="nofollow"&gt;CI/CD for Microservices on Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;Copyright (c) 2019 Rendered Text&lt;/p&gt;
&lt;p&gt;Distributed under the MIT License‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/semaphoreci-demos/semaphore-demo-ruby-kubernetes"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;It‚Äôs a ‚ÄúHello, World‚Äù application written on Ruby. It comes with a Dockerfile and a &lt;a href="https://semaphoreci.com/blog/cicd-pipeline"&gt;complete CI/CD pipeline&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mrykXUUy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jt5uy1uudvz3nmg4kl5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mrykXUUy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jt5uy1uudvz3nmg4kl5.png" alt="Image description" width="880" height="289"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You‚Äôll also need a:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  A Docker installation.&lt;/li&gt;
&lt;li&gt;  A CST config file.&lt;/li&gt;
&lt;li&gt;  The CST executable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you‚Äôve cloned the demo, build the container image with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; test-image &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install the CST tool using the &lt;a href="https://github.com/GoogleContainerTools/container-structure-test#installation"&gt;installation instructions&lt;/a&gt;. For instance, on Linux:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl &lt;span class="nt"&gt;-LO&lt;/span&gt; https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;chmod&lt;/span&gt; +x container-structure-test-linux-amd64 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;sudo mv &lt;/span&gt;container-structure-test-linux-amd64 /usr/local/bin/container-structure-test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you‚Äôre running on a non-Intel architecture, you can build the project by yourself or try the &lt;a href="https://gcr.io/gcp-runtimes/container-structure-test"&gt;CST image&lt;/a&gt; instead.&lt;/p&gt;

&lt;p&gt;The command to run the test follows works like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;container-structure-test &lt;span class="nb"&gt;test&lt;/span&gt; ‚Äìconfig config-cst.yaml ‚Äìimage test-image:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But of course, that won‚Äôt work until we configure the tests. We‚Äôll do that next.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-cst-tests"&gt;
  &lt;/a&gt;
  Setting up CST tests
&lt;/h2&gt;

&lt;p&gt;CST supports three categories of tests:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Commands&lt;/strong&gt;: starts the container, runs the command, and validates its result.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Filesystem&lt;/strong&gt;: checks for file existence, owner, permissions, and contents.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Metadata&lt;/strong&gt;: this category contains things such as environment variables, exposed ports, labels, among other image metadata.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create a new file called &lt;code&gt;config-cst.yaml&lt;/code&gt; (JSON also works) and add the following mandatory line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;schemaVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;2.0.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We‚Äôll start with the command tests.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#command-tests"&gt;
  &lt;/a&gt;
  Command tests
&lt;/h3&gt;

&lt;p&gt;Let‚Äôs try some command tests. We can use something like this to check that Ruby is installed. Of course, I cheated and looked where it‚Äôs actually located before trying.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;commandTests&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Ruby&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;installed"&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;which"&lt;/span&gt;
    &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;ruby"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;expectedOutput&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/usr/local/bin/ruby"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we‚Äôll check that &lt;code&gt;ruby --version&lt;/code&gt; outputs the correct number:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Ruby&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;version&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;correct"&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/usr/local/bin/ruby"&lt;/span&gt;
    &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;--version"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;expectedOutput&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;ruby&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;2.7.*"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Should we be in a really security-conscious mindset, we can checksum the Ruby binary for extra safety. We can run preparation commands before the test with &lt;code&gt;setup&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Ruby&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;binary&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;checksum"&lt;/span&gt;
    &lt;span class="na"&gt;setup&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;apt-get"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;update"&lt;/span&gt;&lt;span class="pi"&gt;],&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;apt-get"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;install"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;-y"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;shatag"&lt;/span&gt;&lt;span class="pi"&gt;]]&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;sha512sum"&lt;/span&gt;
    &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/usr/local/bin/ruby"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;expectedOutput&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;df2fb393261ab88e5f991b96d958363f5e5185b51f1af319375be0d8b9ed6c27097ac8bfab399798497909c3e9e2bcc6d715a1e514f13fe5b7365344af555c7e&lt;/span&gt;&lt;span class="nv"&gt;  &lt;/span&gt;&lt;span class="s"&gt;/usr/local/bin/rub"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have some initial tests, we can actually run the tool for the first time:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;container-structure-test &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nt"&gt;--config&lt;/span&gt; config.yaml &lt;span class="nt"&gt;--image&lt;/span&gt; test-image:latest

&lt;span class="o"&gt;===&lt;/span&gt; RUN: Command Test: Ruby is installed
&lt;span class="nt"&gt;---&lt;/span&gt; PASS
duration: 391.76725ms
stdout: /usr/local/bin/ruby

&lt;span class="o"&gt;===&lt;/span&gt; RUN: Command Test: Ruby version is correct
&lt;span class="nt"&gt;---&lt;/span&gt; PASS
duration: 319.6335ms
stdout: ruby 2.7.4p191 &lt;span class="o"&gt;(&lt;/span&gt;2021-07-07 revision a21a3b7d23&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;aarch64-linux]

&lt;span class="o"&gt;===&lt;/span&gt; RUN: Command Test: Ruby binary checksum
&lt;span class="nt"&gt;--------&lt;/span&gt; PASS
duration: 302.199834ms
stdout: df2fb393261ab88e5f991b96d958363f5e5185b51f1af319375be0d8b9ed6c27097ac8bfab399798497909c3e9e2bcc6d715a1e514f13fe5b7365344af555c7e  /usr/local/bin/ruby


&lt;span class="o"&gt;===============================&lt;/span&gt;
&lt;span class="o"&gt;===========&lt;/span&gt; RESULTS &lt;span class="o"&gt;===========&lt;/span&gt;
&lt;span class="o"&gt;===============================&lt;/span&gt;
Passes:      3
Failures:    0
Duration:    1.013600584s
Total tests: 3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All command tests require a working Docker installation, as the tool must start a temporary container to run them. However, filesystem and metadata tests can be run without Docker appending the &lt;code&gt;--driver tar&lt;/code&gt; option.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#filesystem-tests"&gt;
  &lt;/a&gt;
  Filesystem tests
&lt;/h3&gt;

&lt;p&gt;Filesystem tests inspect the contents of the image; they check if files exist, their permissions, their contents, owner, and group.&lt;/p&gt;

&lt;p&gt;Here‚Äôs how we can test that the code was correctly copied in the image. If we look at our Dockerfile, it should live in the &lt;code&gt;/app/&lt;/code&gt; folder. So, we define a &lt;code&gt;fileExistenceTests&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;fileExistenceTests&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;app.rb&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;exists&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;and&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;has&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;correct&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;permissions'&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/app/app.rb'&lt;/span&gt;
    &lt;span class="na"&gt;shouldExist&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;permissions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;-rw-rw-r--'&lt;/span&gt;
    &lt;span class="na"&gt;uid&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="na"&gt;gid&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also check the reverse: that a file is &lt;em&gt;not&lt;/em&gt; present in the image. Setting &lt;code&gt;shouldExist&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; is a great way to avoid shipping sensitive files by mistake. For example, we don‚Äôt need the unit tests contained in &lt;code&gt;spec&lt;/code&gt; for the final build.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;spec/&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;directory&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;should&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;not&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;exist'&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/app/spec'&lt;/span&gt;
    &lt;span class="na"&gt;shouldExist&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This time, CST should fail because the Docker image &lt;em&gt;has&lt;/em&gt; the &lt;code&gt;spec&lt;/code&gt; folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;container-structure-test &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nt"&gt;--config&lt;/span&gt; config.yaml &lt;span class="nt"&gt;--image&lt;/span&gt; test-image:latest

&lt;span class="o"&gt;===&lt;/span&gt; RUN: Command Test: Ruby is installed
&lt;span class="nt"&gt;--------&lt;/span&gt; PASS
duration: 308.371875ms
stdout: /usr/local/bin/ruby

&lt;span class="o"&gt;===&lt;/span&gt; RUN: Command Test: Ruby version is correct
&lt;span class="nt"&gt;--------&lt;/span&gt; PASS
duration: 312.744792ms
stdout: ruby 2.7.4p191 &lt;span class="o"&gt;(&lt;/span&gt;2021-07-07 revision a21a3b7d23&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;aarch64-linux]

&lt;span class="o"&gt;===&lt;/span&gt; RUN: Command Test: Ruby binary checksum
&lt;span class="nt"&gt;--------&lt;/span&gt; PASS
duration: 286.408167ms
stdout: df2fb393261ab88e5f991b96d958363f5e5185b51f1af319375be0d8b9ed6c27097ac8bfab399798497909c3e9e2bcc6d715a1e514f13fe5b7365344af555c7e  /usr/local/bin/ruby

&lt;span class="o"&gt;===&lt;/span&gt; RUN: File Existence Test: app.rb exists and has correct permissions
&lt;span class="nt"&gt;--------&lt;/span&gt; PASS
duration: 0s
&lt;span class="o"&gt;===&lt;/span&gt; RUN: File Existence Test: spec/ directory should not exist
&lt;span class="nt"&gt;--------&lt;/span&gt; FAIL
duration: 0s
Error: File /app/spec should not exist but does

&lt;span class="o"&gt;===============================&lt;/span&gt;
&lt;span class="o"&gt;===========&lt;/span&gt; RESULTS &lt;span class="o"&gt;===========&lt;/span&gt;
&lt;span class="o"&gt;===============================&lt;/span&gt;
Passes:      4
Failures:    1
Duration:    907.524834ms
Total tests: 5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can fix the &lt;code&gt;spec&lt;/code&gt; failure by adding the following line into the &lt;code&gt;.dockerignore&lt;/code&gt; (you may also experience a permission error in &lt;code&gt;/app/app.rb&lt;/code&gt;, which can be quickly fixed with &lt;code&gt;chmod&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;spec/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After rebuilding the image, the test should pass.&lt;/p&gt;

&lt;p&gt;We have tested that a file exists. But, what about its contents? For that, we should use &lt;code&gt;fileContentTests&lt;/code&gt;. The following example shows how to test if the Ruby Gems have been installed from a safe repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;fileContentTests&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Gemfile&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;remote&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;rubygems.org'&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/app/Gemfile.lock'&lt;/span&gt;
    &lt;span class="na"&gt;expectedContents&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;remote:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;https://rubygems.org/'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Both types of tests support regular expressions in the &lt;code&gt;expected*&lt;/code&gt; fields for more flexibility.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#metadata-tests"&gt;
  &lt;/a&gt;
  Metadata tests
&lt;/h3&gt;

&lt;p&gt;Unlike the others, you can only have one metadata test. But it may check several things simultaneously, as metadata tests include a whole range of standard Docker variables.&lt;/p&gt;

&lt;p&gt;Let‚Äôs say we want to test environment variables. In that case, we use &lt;code&gt;env&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;metadataTest&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;APP_HOME&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/app&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;RUBY_VERSION&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;2.7.4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also check Docker declarations like &lt;code&gt;WORKDIR&lt;/code&gt;, &lt;code&gt;EXPOSE&lt;/code&gt;, &lt;code&gt;VOLUME&lt;/code&gt;, or &lt;code&gt;USER&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;  &lt;span class="na"&gt;exposedPorts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;4567"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;workdir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/app"&lt;/span&gt;
  &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the always important &lt;code&gt;CMD&lt;/code&gt; and &lt;code&gt;ENTRYPOINT&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;  &lt;span class="na"&gt;cmd&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;bundle"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;exec"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;rackup"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;--host"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;0.0.0.0"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;-p"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;4567"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;entrypoint&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once satisfied with the tests, commit the config file into the repository. This is the final version I got after experimenting with some extra tests follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;schemaVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;2.0.0&lt;/span&gt;
&lt;span class="na"&gt;commandTests&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Ruby&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;installed"&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;which"&lt;/span&gt;
    &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;ruby"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;expectedOutput&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/usr/local/bin/ruby"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Ruby&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;version&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;correct"&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/usr/local/bin/ruby"&lt;/span&gt;
    &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;--version"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;expectedOutput&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;ruby&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;2.7.*"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Ruby&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;binary&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;checksum"&lt;/span&gt;
    &lt;span class="na"&gt;setup&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;apt-get"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;update"&lt;/span&gt;&lt;span class="pi"&gt;],&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;apt-get"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;install"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;-y"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;shatag"&lt;/span&gt;&lt;span class="pi"&gt;]]&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;sha512sum"&lt;/span&gt;
    &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/usr/local/bin/ruby"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;expectedOutput&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;df2fb393261ab88e5f991b96d958363f5e5185b51f1af319375be0d8b9ed6c27097ac8bfab399798497909c3e9e2bcc6d715a1e514f13fe5b7365344af555c7e&lt;/span&gt;&lt;span class="nv"&gt;  &lt;/span&gt;&lt;span class="s"&gt;/usr/local/bin/rub"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Bundle&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;installed"&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;which"&lt;/span&gt;
    &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;bundle"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;expectedOutput&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/usr/local/bin/bundle"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Bundler&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;version&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;correct"&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/usr/local/bin/bundle"&lt;/span&gt;
    &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;--version"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;expectedOutput&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Bundler&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;version&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;2.1.*"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;fileExistenceTests&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;app.rb&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;exists&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;and&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;has&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;correct&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;permissions'&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/app/app.rb'&lt;/span&gt;
    &lt;span class="na"&gt;shouldExist&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;permissions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;-rw-rw-r--'&lt;/span&gt;
    &lt;span class="na"&gt;uid&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="na"&gt;gid&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;spec/&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;directory&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;should&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;not&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;exist'&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/app/spec'&lt;/span&gt;
    &lt;span class="na"&gt;shouldExist&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
&lt;span class="na"&gt;fileContentTests&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Gemfile&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;remote&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;rubygems.org'&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/app/Gemfile.lock'&lt;/span&gt;
    &lt;span class="na"&gt;expectedContents&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;remote:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;https://rubygems.org/'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;metadataTest&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;APP_HOME&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/app&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;RUBY_VERSION&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;2.7.4&lt;/span&gt;
  &lt;span class="na"&gt;exposedPorts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;4567"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;cmd&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;bundle"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;exec"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;rackup"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;--host"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;0.0.0.0"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;-p"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;4567"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;workdir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/app"&lt;/span&gt;
  &lt;span class="na"&gt;entrypoint&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[]&lt;/span&gt;
  &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#testing-container-structure-in-cicd"&gt;
  &lt;/a&gt;
  Testing container structure in CI/CD
&lt;/h2&gt;

&lt;p&gt;Of course, CST wouldn‚Äôt be a lot of help to us unless it‚Äôs part of a CI/CD pipeline. The logical place for structure tests is between container build and deployment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iuJD7XH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuxwxdi07nito31w5ek7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iuJD7XH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuxwxdi07nito31w5ek7.png" alt="Image description" width="880" height="289"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adding CST in your CI/CD pipeline is straightforward. To keep things simple, we‚Äôll extend the one already included in the demo, but the steps should work with any pipeline.&lt;/p&gt;

&lt;p&gt;First, ensure Semaphore has access to your repository. Follow the &lt;a href="https://docs.semaphoreci.com/guided-tour/getting-started/"&gt;getting started guide&lt;/a&gt; to learn how to do this.&lt;/p&gt;

&lt;p&gt;The demo pipeline builds and tests the Ruby app, then &lt;a href="https://semaphoreci.com/blog/guide-continuous-deployment-kubernetes"&gt;dockerizes it&lt;/a&gt; and finally deploys it to Kubernetes. We‚Äôll add a structure test right between Docker build and Kubernetes deploy.&lt;/p&gt;

&lt;p&gt;First, ensure you have stored your Docker Hub credentials as a Semaphore &lt;a href="https://docs.semaphoreci.com/essentials/environment-variables/"&gt;secret&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b4ZJaVlG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/raj50ieyvd0axzsjzjlu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b4ZJaVlG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/raj50ieyvd0axzsjzjlu.png" alt="Image description" width="680" height="596"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, open the workflow editor using the &lt;strong&gt;Edit Workflow&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v4faTQ6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwup7j2las8xqkv567jl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v4faTQ6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwup7j2las8xqkv567jl.png" alt="Image description" width="880" height="324"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Expand the &lt;a href="https://semaphoreci.com/cicd"&gt;continuous delivery&lt;/a&gt; pipeline and add a block immediately after the Docker build step.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--78zi8H2a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tuluc84v4tj1c4706sg5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--78zi8H2a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tuluc84v4tj1c4706sg5.png" alt="Image description" width="880" height="217"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The CST block will have one job with five commands:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Sign in with Docker Hub, where the container image is stored.&lt;/li&gt;
&lt;li&gt; Pull the image into the CI environment.&lt;/li&gt;
&lt;li&gt; Install the CST Linux binary.&lt;/li&gt;
&lt;li&gt; Clone the repository so we can access the CST config file.&lt;/li&gt;
&lt;li&gt; Run the tests. If the test fails, the process stops with an error.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The complete command sequence is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin&lt;/span&gt;
&lt;span class="s"&gt;docker pull "${DOCKER_USERNAME}"/semaphore-demo-ruby-kubernetes:$SEMAPHORE_WORKFLOW_ID&lt;/span&gt;
&lt;span class="s"&gt;curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 &amp;amp;&amp;amp; chmod +x container-structure-test-linux-amd64 &amp;amp;&amp;amp; sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test&lt;/span&gt;
&lt;span class="s"&gt;checkout&lt;/span&gt;
&lt;span class="s"&gt;container-structure-test test --config config-cst.yaml --image "${DOCKER_USERNAME}"/semaphore-demo-ruby-kubernetes:$SEMAPHORE_WORKFLOW_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fdd2HDtQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjz5ou5ueilqibkpgswx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fdd2HDtQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjz5ou5ueilqibkpgswx.png" alt="Image description" width="880" height="353"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To finalize, enable the &lt;code&gt;dockerhub&lt;/code&gt; secret on the block and give it a try by clicking on &lt;strong&gt;Run the workflow&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SyZQg59c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fbajnskwydluv51i8hj3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SyZQg59c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fbajnskwydluv51i8hj3.png" alt="Image description" width="880" height="597"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the CI pipeline is complete, an &lt;a href="https://docs.semaphoreci.com/essentials/deploying-with-promotions/"&gt;auto-promotion&lt;/a&gt; should kick off the continuous delivery pipeline.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NLQTPbLe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fyzz7llhhxw6mrv2bamv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NLQTPbLe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fyzz7llhhxw6mrv2bamv.png" alt="Image description" width="880" height="217"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The image is ready and tested for the next stage. Now you can deliver containers with more confidence.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KrR--i30--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfouj4lyeebbu1ltno0r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KrR--i30--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfouj4lyeebbu1ltno0r.png" alt="Image description" width="880" height="211"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The more you know about your container, the less surprises you‚Äôll get. Container Structure Test may not be the most flexible tool, but it certainly is a quick and easy way of adding some confidence to the release process. So, it should be on the radar of anyone using containers for serious work.&lt;/p&gt;

&lt;p&gt;Read next:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://semaphoreci.com/blog/kubernetes-vs-docker"&gt;Kubernetes vs Docker: Understanding Containers in 2021&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://semaphoreci.com/blog/beyond-docker-with-earthly"&gt;Beyond Docker with Earthly&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://semaphoreci.com/blog/2018/03/14/docker-image-size.html"&gt;Docker Image Size ‚Äì Does It Matter?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>docker</category>
      <category>security</category>
      <category>cicd</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Review: Eddie Jaoude Course - How to customize your GitHub Profile</title>
      <author>Michael J. Larocca</author>
      <pubDate>Wed, 10 Nov 2021 17:07:37 +0000</pubDate>
      <link>https://dev.to/michaellarocca/review-eddie-jaoude-course-how-to-customize-your-github-profile-35cl</link>
      <guid>https://dev.to/michaellarocca/review-eddie-jaoude-course-how-to-customize-your-github-profile-35cl</guid>
      <description>&lt;h3&gt;
  &lt;a href="#we-spent-a-lot-of-time-on-github-participating-in-hacktoberfest-2021-but-did-you-know-you-can-customize-your-github-profile-in-this-article-eddie-jaoude-shows-us-how-to-make-our-profiles-stand-out"&gt;
  &lt;/a&gt;
  We spent a lot of time on GitHub participating in Hacktoberfest 2021. But did you know you can customize your GitHub profile? In this article, Eddie Jaoude shows us how to make our profiles stand out!
&lt;/h3&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B5KN89ll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/7791abdde88d00fbc0411645ff9b82cb/1cfc2/Thumbnail-GitHubProfieCourse-02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B5KN89ll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/7791abdde88d00fbc0411645ff9b82cb/1cfc2/Thumbnail-GitHubProfieCourse-02.png" alt="GitHub Profile Course" width="880" height="422"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#about-eddie-jaoude"&gt;
  &lt;/a&gt;
  About Eddie Jaoude
&lt;/h3&gt;

&lt;p&gt;Eddie Jaoude is a full-stack developer and an advocate for open-source.&lt;br&gt;
He is also the founder of the &lt;a href="https://github.com/EddieHubCommunity"&gt;Eddie Hub Community&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Recognizing his contributions and influence in the open-source community, Eddie was nominated as a &lt;a href="https://stars.github.com/profiles/eddiejaoude/"&gt;GitHub Star&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.blog/2020-09-03-introducing-the-github-stars-program/"&gt;Introducing the GitHub Stars Program ‚≠êÔ∏è&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LfpHtGfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/8ce943d14c53d6c1948d832a3ae829a4/6c115/Hubber-new.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LfpHtGfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/8ce943d14c53d6c1948d832a3ae829a4/6c115/Hubber-new.png" alt="Hubber" width="353" height="200"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#meet-hubber-eddiehubs-mascot"&gt;
  &lt;/a&gt;
  &lt;em&gt;Meet Hubber! EddieHub's Mascot! ü§ù&lt;/em&gt;
&lt;/h4&gt;


&lt;h3&gt;
  &lt;a href="#why-you-should-customize-your-github-profile"&gt;
  &lt;/a&gt;
  Why you should customize your GitHub Profile
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Eddie tells us, GitHub has turned into a social platform. With over 55 million users, it is in our best interest to customize our profiles to help us stand out from the crowd.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Not only does our GitHub profile showcase our portfolio, skills, and contributions, our portfolio can also present our other content, such as Youtube videos, blog posts, and more!&lt;/p&gt;

&lt;p&gt;To give us examples of what a customized GitHub profile can look like, Eddie provides us with a link to &lt;a href="https://github.com/EddieHubCommunity/awesome-github-profiles"&gt;Awesome GitHub profiles&lt;/a&gt;, which is part of his &lt;a href="https://github.com/EddieHubCommunity"&gt;EddieHubCommunity&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Eddie Tips: Create a GitHub username as close as you can to your actual name. Doing so will make it easier for others to discover you from other platforms.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#here-is-my-current-github-profile-before-any-changes"&gt;
  &lt;/a&gt;
  Here is my current GitHub profile before any changes
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rg37xjCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/de7c7d4c41f48d11186eb1a7731fd687/1cfc2/GitHub-Profile-Before.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rg37xjCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/de7c7d4c41f48d11186eb1a7731fd687/1cfc2/GitHub-Profile-Before.png" alt="GitHub Profile Before" width="880" height="434"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#to-customize-your-github-profile"&gt;
  &lt;/a&gt;
  To customize your GitHub Profile
&lt;/h3&gt;

&lt;p&gt;Eddie's course provides instructions on creating a GitHub account if you have not already set one up. As I already have a GitHub account, I will skip to first step of creating it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To customize your GitHub Profile, you first need to create a new repository. The newly created repository needs to be the same name as your GitHub username.&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;&lt;em&gt;Eddie provided step-by-step instructions that I will follow now.&lt;/em&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#create-a-new-repository"&gt;
  &lt;/a&gt;
  Create a new repository
&lt;/h3&gt;

&lt;p&gt;The first step is to create a new repository in our GitHub account by clicking the plus symbol, located at the top right, and then click New Repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pqMQPi8N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/4ba562816b6ec437a36ca0b6adb23972/5fce1/New-Repo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pqMQPi8N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/4ba562816b6ec437a36ca0b6adb23972/5fce1/New-Repo.png" alt="New Repo" width="271" height="227"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#the-next-step-is-to-name-the-repository"&gt;
  &lt;/a&gt;
  The next step is to name the repository
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; You need to use your GitHub user name as the name for this repository. ( &lt;strong&gt;Owner&lt;/strong&gt; must match &lt;strong&gt;Repository Name&lt;/strong&gt; )&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;You will know you did it correctly when a special message appears! Make sure to follow the instructions in the special message next.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wx84OTgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/2da0fa83532e3d046ced530bfc5bcc63/c67d4/Name-New-Repo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wx84OTgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/2da0fa83532e3d046ced530bfc5bcc63/c67d4/Name-New-Repo.png" alt="Name New Repo" width="723" height="855"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Special message instructions&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make sure Public is selected&lt;/li&gt;
&lt;li&gt;Click the Add a README file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After naming the repository and following the special message instructions, click "&lt;strong&gt;Create repository&lt;/strong&gt;."&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#your-new-repository"&gt;
  &lt;/a&gt;
  Your New Repository
&lt;/h3&gt;

&lt;p&gt;You will be taken to your new repository after clicking "&lt;strong&gt;Create repository&lt;/strong&gt;."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6cnVHz-h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/9e2f0cce97df9211f41b880c87cacacd/1cfc2/Your-New-Repo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6cnVHz-h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/9e2f0cce97df9211f41b880c87cacacd/1cfc2/Your-New-Repo.png" alt="Your New Repo" width="880" height="323"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your new repository is a special Markdown file that will appear on your profile page on GitHub.&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;To edit this special Markdown file, click on the edit button that resembles a pencil.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qdW1jYUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/885b1324ba0359169f8143cd222fd12d/1cfc2/Your-New-Repo-MD-file.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qdW1jYUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/885b1324ba0359169f8143cd222fd12d/1cfc2/Your-New-Repo-MD-file.png" alt="Your New Repo Markdown file" width="880" height="337"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to make changes to the file by following the suggested ideas to get you started.&lt;/p&gt;

&lt;p&gt;Click on the &lt;strong&gt;Preview&lt;/strong&gt; tab to see the results of your changes, and then click the &lt;strong&gt;Commit changes&lt;/strong&gt; button when you are satisfied.&lt;/p&gt;



&lt;p&gt;&lt;em&gt;Here are the changes I made:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="gu"&gt;### üëã Hello, I'm Michael, a self-taught web developer &amp;amp; blogger.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; In order to commit your changes, you will need to make changes to the special Markdown. The &lt;strong&gt;Commit changes&lt;/strong&gt; button is inactive until changes are made to the file.&lt;/p&gt;




&lt;p&gt;Eddie's course also teaches you how to write in the &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; language, which is needed to customize your GitHub profile.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;em&gt;To learn more about writing Markdown files, you can read my article: &lt;a href="https://dev.to/michaellarocca/learn-markdown-with-scrimba-dylan-israel-24ng"&gt;Learn Markdown, With Scrimba &amp;amp; Dylan Israel!&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#your-profile-page"&gt;
  &lt;/a&gt;
  Your Profile Page
&lt;/h3&gt;

&lt;p&gt;You will now see your new special Markdown file/repository displayed at the top of your profile page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NJ4Oea0S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/a1aac1ccce45a8cfd86d8e27071daefa/1cfc2/Profile-After.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NJ4Oea0S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/a1aac1ccce45a8cfd86d8e27071daefa/1cfc2/Profile-After.png" alt="Profile After" width="880" height="388"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#eddies-invitation"&gt;
  &lt;/a&gt;
  Eddie's invitation
&lt;/h3&gt;

&lt;p&gt;At this point in Eddie's free "&lt;strong&gt;&lt;a href="https://www.eddiejaoude.io/portal"&gt;How to customize your GitHub Profile&lt;/a&gt;&lt;/strong&gt;" course, he invites us to take a screenshot of our new profile so far and share it on social media. He instructs us to list two tips we learned and tag him ( &lt;strong&gt;&lt;a class="mentioned-user" href="https://dev.to/eddiejaoude"&gt;@eddiejaoude&lt;/a&gt;
&lt;/strong&gt; ) so that he can re-share them on his network!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write about yourself&lt;/li&gt;
&lt;li&gt;Add images/photos&lt;/li&gt;
&lt;li&gt;Share on your social media&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ylmnIW71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/c474fff8719ce83a30f54b24077f860b/1cfc2/My-profile-so-far.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ylmnIW71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/c474fff8719ce83a30f54b24077f860b/1cfc2/My-profile-so-far.png" alt="Profile so far" width="880" height="390"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;em&gt;Eddie did share my tweet. I received positive feedback from the community and gained a few new Twitter followers along the way!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#widgets"&gt;
  &lt;/a&gt;
  Widgets
&lt;/h3&gt;

&lt;p&gt;Your special GitHub Markdown file that is used to create your custom profile supports Widgets.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A Widget is a reusable component that allows you to perform a function and access a service.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eddie's course provides us with a Widget that you can easily implement with one line of the following HTML code.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;( Just replace my GitHub username with your GitHub username ) Replace "michaellarocca" with your username.&lt;/em&gt;&lt;/p&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://github-readme-stats.vercel.app/api?username=michaellarocca&amp;amp;show_icons=true&amp;amp;theme=tokyonight"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;This Widget, created by &lt;a href="https://github.com/anuraghazra"&gt;Anurag Hazara&lt;/a&gt;, is used to display your current GitHub stats.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is the README file for the Widget: &lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;https://github.com/anuraghazra/github-readme-stats&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cC53r5IC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/4f29332a5ec2a37d0bbbec0faac5a52f/2d7ab/Widget-GitHub-Stats.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cC53r5IC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/4f29332a5ec2a37d0bbbec0faac5a52f/2d7ab/Widget-GitHub-Stats.png" alt="Widget GitHub Stats" width="526" height="216"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#github-actions"&gt;
  &lt;/a&gt;
  GitHub Actions
&lt;/h3&gt;

&lt;p&gt;Similar to Widgets, you can also use GitHub Actions to customize your profile.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub describes,&lt;/strong&gt; &lt;em&gt;"GitHub Actions makes it easy to automate all your software workflows, now with world-class CI/CD. Build, test, and deploy your code right from GitHub. Make code reviews, branch management, and issue triaging work the way you want."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is a link to the GitHub Actions Marketplace&lt;/strong&gt; &lt;a href="https://github.com/marketplace?category=&amp;amp;query=&amp;amp;type=actions&amp;amp;verification="&gt;https://github.com/features/actions&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;I found a GitHub Action I'm particularly interested in; it creates a list of your latest Hashnode articles!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/hashnode-blog"&gt;Hashnode Blogs - Github Action&lt;/a&gt;, created by: &lt;a href="https://github.com/varunsridharan"&gt;Varun Sridharan&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Eddie mentions during his course that some of the GitHub profile customizations are beyond the scope of the course. I now understand why.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To implement the "&lt;strong&gt;Hashnode Blogs - Github Action&lt;/strong&gt;," you need to learn how to create Github Action's and work with YAML files ( which I have not learned yet ). Now is a good time for me to learn, as I want to display my latest Hashnode blogs on my GitHub profile.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Eddie encourages us to make small adjustments to our GitHub profiles. Even a few small adjustments will help our profiles to stand out. As we continue to learn, we can continue to make more changes to our GitHub profiles later.&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#my-new-github-profile"&gt;
  &lt;/a&gt;
  My new GitHub profile
&lt;/h3&gt;

&lt;p&gt;Here is my finished GitHub profile!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m4hxBIhn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/91b1fcb435677a643f3c5fa64b298a89/1cfc2/GitHub-Profile-Finished.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m4hxBIhn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/91b1fcb435677a643f3c5fa64b298a89/1cfc2/GitHub-Profile-Finished.png" alt="GitHub Profile Finished" width="880" height="435"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;With a few simple adjustments, my GitHub profile will now stand out from the crowd!&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#txg-review-results"&gt;
  &lt;/a&gt;
  TXG Review Results:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;5 out of 5 Stars!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;"‚≠ê ‚≠ê ‚≠ê ‚≠ê ‚≠ê"&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#eddie-jaoudes-how-to-customize-your-github-profile-is-a-must-take-free-course"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;"Eddie Jaoude's 'How to customize your GitHub Profile' is a MUST TAKE free course!"&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;-Michael Jude Larocca&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#eddies-links"&gt;
  &lt;/a&gt;
  Eddie's links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;üîó&lt;a href="https://www.eddiejaoude.io/"&gt;Website: eddiejaoude&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üîó&lt;a href="https://github.com/eddiejaoude"&gt;GitHub: eddiejaoude&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üîó&lt;a href="https://github.com/EddieHubCommunity"&gt;EddieHubCommunity&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üîó&lt;a href="https://www.youtube.com/c/eddiejaoude"&gt;YouTube: eddiejaoude&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üîó&lt;a href="https://twitter.com/eddiejaoude"&gt;Twitter: eddiejaoude&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;With over 55 million users, not only is GitHub a provider of internet hosting for software development and version control, it has turned into a social platform, and it is in our best interest to customize our profiles to help us stand out from the crowd.&lt;/p&gt;

&lt;p&gt;Eddie's FREE "How to customize your GitHub Profile" course is so well put together that a complete beginner will be able to customize their profile, helping them to stand out from the crowd before they even learn version control! &lt;/p&gt;

&lt;p&gt;Eddie also teaches Markdown language in his course, which is required to customize a GitHub Profile. Furthermore, Markdown language is also an essential skill for developers to learn for other means, such as writing blog articles like the one you are reading!&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#are-you-now-interested-in-customizing-your-github-profile-have-you-already-customized-your-github-profile-with-widgets-and-github-actions-please-share-the-article-and-comment"&gt;
  &lt;/a&gt;
  Are you now interested in customizing your GitHub profile? Have you already customized your GitHub profile with widgets and GitHub Actions? Please share the article and comment!
&lt;/h6&gt;




</description>
      <category>opensource</category>
      <category>tutorial</category>
      <category>github</category>
      <category>markdown</category>
    </item>
    <item>
      <title>How To Display Low Stock Warning In WooCommerce</title>
      <author>CodeWatchers</author>
      <pubDate>Wed, 10 Nov 2021 17:01:42 +0000</pubDate>
      <link>https://dev.to/codewatchers_en/how-to-display-low-stock-warning-in-woocommerce-4i47</link>
      <guid>https://dev.to/codewatchers_en/how-to-display-low-stock-warning-in-woocommerce-4i47</guid>
      <description>&lt;p&gt;Showing a low stock alert on your online store creates urgency and demand for your product. The consumer feels as if the product is amazing and has been sold enough times that it is now about to end.&lt;/p&gt;

&lt;p&gt;It is a proven way of boosting your sales and that is why almost every other online store uses this technique to push their consumers further into buying their product.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will help you understand the benefits of &lt;strong&gt;Low Stock Warning&lt;/strong&gt; and the way of enabling it on your WooCommerce store.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-should-you-display-low-stock-warnings" class="anchor"&gt;
  &lt;/a&gt;
  Why Should You Display Low Stock Warnings
&lt;/h2&gt;

&lt;p&gt;Online stores have been using this technique for a while now to increase their conversions. Even the biggest of online stores such as &lt;strong&gt;Amazon&lt;/strong&gt;, use this technique to increase their sales.&lt;/p&gt;

&lt;p&gt;These low stock alerts appear as a popup on your website alerting the users that the product is about to end and they should buy it as soon as possible.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uYdcwpdh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Amazon-Low-Stock-Alerrt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uYdcwpdh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Amazon-Low-Stock-Alerrt.jpg" alt="" width="484" height="123"&gt;&lt;/a&gt;It is proven that Low Stock Warnings can boost your sales up to 15% and that is exactly why you should start using them now.&lt;/p&gt;

&lt;p&gt;These type of popups trigger human behaviour by displaying scarcity and creating urgency, both of which demand the consumer to act.&lt;/p&gt;

&lt;p&gt;By creating &lt;strong&gt;urgency&lt;/strong&gt;, you demand your consumer to speed up their decision making. You make them feel that the product they want to buy is not going to be there for long and they need to be quick and decisive in hitting the &lt;strong&gt;Buy Now&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;Simultaneously, &lt;strong&gt;scarcity&lt;/strong&gt; implements that the product they want to buy is short in supply and if they don't buy it now, they might not be able to buy it afterwards.&lt;/p&gt;

&lt;p&gt;Both of these scenarios blend in to urge the consumer in taking a positive decision and hence, help you increase your sales.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-display-low-stock-warnings-in-woocommerce" class="anchor"&gt;
  &lt;/a&gt;
  How To Display Low Stock Warnings In WooCommerce
&lt;/h2&gt;

&lt;p&gt;Now that you know why is it important to display Low Stock Warnings on your Online store. Let us help you in the process of enabling it.&lt;/p&gt;

&lt;p&gt;We will be using the &lt;strong&gt;&lt;a href="https://trustpulse.com/"&gt;Trust Pulse&lt;/a&gt;&lt;/strong&gt; plugin to display Low Stock alerts.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#trust-pulse" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://trustpulse.com/"&gt;Trust Pulse&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZVZ9jeE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Trust-Pulse.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZVZ9jeE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Trust-Pulse.jpg" alt="" width="880" height="332"&gt;&lt;/a&gt;&lt;a href="https://trustpulse.com/"&gt;Trust Pulse&lt;/a&gt; is a very popular tool to help you build Low Stock alerts for your website. It is very simple to use and you don't have to worry about your coding skills.&lt;/p&gt;

&lt;p&gt;With &lt;strong&gt;Trust Pulse,&lt;/strong&gt; you can create Low Stock warnings with some simple tweaks here and there, without using any codes. It is highly user-friendly and can be connected to WooCommerce easily.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://trustpulse.com/"&gt;Details&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://trustpulse.com/"&gt;Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://codewatchers.com/aff/hostings/go"&gt;Hosting&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First of all, you will need to create an account on Trust Pulse as it is a premium plugin.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mpl45Udg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Trust-Pulse-pricing.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mpl45Udg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Trust-Pulse-pricing.jpg" alt="" width="880" height="332"&gt;&lt;/a&gt;Once you have created your account, you need to &lt;strong&gt;Sign in&lt;/strong&gt; and press &lt;strong&gt;Create Campaign&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6urDtZyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Create-Campaign.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6urDtZyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Create-Campaign.jpg" alt="" width="744" height="159"&gt;&lt;/a&gt;Then, you need to name your campaign and &lt;strong&gt;connect it to the website you used while signing up.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y7qRb-7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Name-your-campaign.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y7qRb-7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Name-your-campaign.jpg" alt="" width="734" height="302"&gt;&lt;/a&gt;&lt;strong&gt;Trust Pulse&lt;/strong&gt; allows you to create two types of notifications i.e. &lt;strong&gt;Recent Activity&lt;/strong&gt; and &lt;strong&gt;On-Fire.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recent Activity&lt;/strong&gt; alerts the visitor whenever someone takes an action on your website.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;On-Fire&lt;/strong&gt; combines all the actions taken on your site and displays them together.&lt;/p&gt;

&lt;p&gt;For this tutorial, you need to go with the &lt;strong&gt;Recent Activity&lt;/strong&gt; option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zLqdGZ_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Select-Campaign-Type.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zLqdGZ_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Select-Campaign-Type.jpg" alt="" width="744" height="442"&gt;&lt;/a&gt;Select &lt;strong&gt;Recent Activity&lt;/strong&gt; and press &lt;strong&gt;Next Step&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Next, you will need to design your &lt;strong&gt;Low Stock Notification&lt;/strong&gt; and you can move ahead by enabling &lt;strong&gt;Display a Default Notification&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_L0LS9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Enable-Display-Default-Notificiation.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_L0LS9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Enable-Display-Default-Notificiation.jpg" alt="" width="742" height="240"&gt;&lt;/a&gt;Now, you can &lt;strong&gt;Customize&lt;/strong&gt; your &lt;strong&gt;Low Stock&lt;/strong&gt; &lt;strong&gt;Alert&lt;/strong&gt; by selecting options from the &lt;strong&gt;Drop-Down Menu&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qjd1f17W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Customize-Notification.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qjd1f17W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Customize-Notification.jpg" alt="" width="717" height="427"&gt;&lt;/a&gt;&lt;strong&gt;Title Text&lt;/strong&gt; will be the title of your notification.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Message Text&lt;/strong&gt; refers to the body of your popup.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Notification Image&lt;/strong&gt; serves as the image you want to display on the popup.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Message Link&lt;/strong&gt; will be the page where your users will be directed when they press the notification.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codewatchers.com/en/blog/how-to-display-low-stock-warning-in-woocommerce?utm_campaign=content-trimming&amp;amp;utm_source=dev.to&amp;amp;utm_medium=link"&gt;Read The Full Tutorial.&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Getting Started with Decorators in Python</title>
      <author>Adarsh Rawat</author>
      <pubDate>Wed, 10 Nov 2021 16:55:18 +0000</pubDate>
      <link>https://dev.to/adarshrawat7400/getting-started-with-decorators-in-python-4kpi</link>
      <guid>https://dev.to/adarshrawat7400/getting-started-with-decorators-in-python-4kpi</guid>
      <description>&lt;p&gt;To get started with Decorators , First we have to understand few things :-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;everything we see in python is an object.&lt;/li&gt;
&lt;li&gt;function in python is also an object.&lt;/li&gt;
&lt;li&gt;we can declare function within a function.&lt;/li&gt;
&lt;li&gt;we these inner function have access to local variables in th e enclosing function. &lt;/li&gt;
&lt;li&gt;a function can return any value, including a function&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;to understand the above point let us take an example&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-"&gt;
  &lt;/a&gt;
  Example :-
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; def hello(name):
...     return f"Hello {name}"
...
&amp;gt;&amp;gt;&amp;gt; a = hello
&amp;gt;&amp;gt;&amp;gt; # as we can see variable a referencing to a function object
&amp;gt;&amp;gt;&amp;gt; a("Ram")
'Hello Ram'
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with the above example we can,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;functions are objects &lt;/li&gt;
&lt;li&gt;they can be assigned/reference by other name ,such as variable &lt;em&gt;a&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;let's take another example to clear other remaining &lt;br&gt;
points&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; def foo(name):
...     def bar():
...             print(f"Hey I'm the inner function bar enclosed inside foo function , {name}")
...     return bar
...
&amp;gt;&amp;gt;&amp;gt; f = foo("Ram")
&amp;gt;&amp;gt;&amp;gt; f.__name__
'bar'
&amp;gt;&amp;gt;&amp;gt; type(f)
&amp;lt;class 'function'&amp;gt;
&amp;gt;&amp;gt;&amp;gt; f()
Hey I'm the inner function bar enclosed inside foo function , Ram
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example we have declared a function &lt;em&gt;foo&lt;/em&gt; which contains another function &lt;em&gt;bar&lt;/em&gt;, and when we called the outer function &lt;em&gt;foo&lt;/em&gt; we get back reference to &lt;em&gt;bar&lt;/em&gt; function object,&lt;br&gt;
we also verified the same by,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;checking &lt;em&gt;f.&lt;strong&gt;name&lt;/strong&gt;&lt;/em&gt; attribute which return name of the function&lt;/li&gt;
&lt;li&gt;&lt;p&gt;checked &lt;em&gt;type(f)&lt;/em&gt; to see that it is of type &lt;em&gt;function&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Inner function &lt;em&gt;bar&lt;/em&gt; has access to  all varibles of enclosing function like variable &lt;em&gt;name&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The concepts that we have covered in the above example&lt;br&gt;
will help in the understanding of Decorators&lt;/p&gt;

&lt;p&gt;Now we see some examples of special type of decorator&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#function-wrapper"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Function Wrapper&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Wrappers around the functions are also knows as decorators which are a very powerful and useful tool in Python since it allows programmers to modify the behavior of function or class.&lt;/p&gt;

&lt;p&gt;Let's understand with an example&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-"&gt;
  &lt;/a&gt;
  Example :-
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;lines = '-' * 60 + '\n'

def with_lines(func):
    def wrapper():
        return f'{lines}{func()}{lines}'
    return wrapper

def a():
    return f'I am in a!\n'
new_a = with_lines(a)


def b():
    return f'I am in b!\n'
new_b = with_lines(b)

print(a())
print(b())
print(new_a())
print(new_b())

Output :-
I am in a!

I am in b!

------------------------------------------------------------
I am in a!
------------------------------------------------------------

-----------------------------------------------------------------
I am in b!
-----------------------------------------------------------------


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example we created a &lt;em&gt;with_lines&lt;/em&gt; function which takes &lt;em&gt;func&lt;/em&gt; (callable object ) as and argument and &lt;em&gt;with_lines&lt;/em&gt; function has an inner function &lt;em&gt;wrapper&lt;/em&gt;&lt;br&gt;
which has access to the outer function variable, &lt;br&gt;
So we call the function passed by outer function inside the &lt;strong&gt;wrapper&lt;/strong&gt; function by adding &lt;em&gt;global varible&lt;/em&gt; lines at the start and end and return wrapper function object.&lt;/p&gt;

&lt;p&gt;With this now we have a &lt;em&gt;with_lines&lt;/em&gt; function wrapper which can we used with any function to change behiviour of the function,&lt;/p&gt;

&lt;p&gt;As we used it with  &lt;em&gt;new_a&lt;/em&gt; and &lt;em&gt;new_b&lt;/em&gt; functions that have some formating added to them using &lt;em&gt;with_lines&lt;/em&gt; wrapper function.&lt;/p&gt;

&lt;p&gt;Wrapper are one of the most powerful tools of python which can we used to change or added some extra behiviour to the existing function.&lt;/p&gt;

&lt;p&gt;Now we have gathered enough information to understand &lt;em&gt;Decorators&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-decorator"&gt;
  &lt;/a&gt;
  What is a Decorator?
&lt;/h3&gt;

&lt;p&gt;In simple terms :-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A function&lt;/li&gt;
&lt;li&gt;that takes function as an argument &lt;/li&gt;
&lt;li&gt;and return a function as its output&lt;/li&gt;
&lt;li&gt;Because of the &lt;strong&gt;@&lt;/strong&gt; syntax in Python, decorating a function replaces that function with the result of calling the decorator on the function.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-can-i-use-a-decorator-for"&gt;
  &lt;/a&gt;
  What can I use a Decorator For?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Anything that is repeated across multiple functions&lt;/li&gt;
&lt;li&gt;Grab / modify / filter input arguments&lt;/li&gt;
&lt;li&gt;Grab / modify / filter outputs&lt;/li&gt;
&lt;li&gt;Change the state&lt;/li&gt;
&lt;li&gt;Stop a function from being called under certain conditions&lt;/li&gt;
&lt;li&gt;Choose a different function to be called instead&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we will understand decorators with couple of examples&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-"&gt;
  &lt;/a&gt;
  Example :-
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;lines = '-' * 60 + '\n'

def with_lines(func):
    def wrapper(*args, **kwargs):
        return f'{lines}{func(*args, **kwargs)}{lines}'
    return wrapper

@with_lines
def a():
    return f'I am in a!\n'
# a = with_lines(a)   # this line (after) is the same as @with_lines (before)


@with_lines
def b():
    return f'I am in b!\n'
# b = with_lines(b)  # this line (after) is the same as line 14

@with_lines
def add(x, y):
    return f'{x} + {y} = {x+y}\n'

print(a())
print(b())
print(add(3,5))  # add is actually wrapper! so when I call add(3,5), it's saying wrapper(3,5)

OUTPUT :- 

-----------------------------------------------------------------
I am in a!
-----------------------------------------------------------------

-----------------------------------------------------------------
I am in b!
-----------------------------------------------------------------

-----------------------------------------------------------------
3 + 5 = 8
-----------------------------------------------------------------

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the same &lt;em&gt;with_lines&lt;/em&gt; wrapper function used in the above example we added this decorator with the existing method &lt;em&gt;a()&lt;/em&gt; ,&lt;em&gt;b()&lt;/em&gt; and &lt;em&gt;add()&lt;/em&gt; method using using &lt;strong&gt;@&lt;/strong&gt; Symbol which replaces that function with the result of calling the decorator on the function.&lt;/p&gt;

&lt;p&gt;Let's take another example to see how we can filter the input using decorator :-&lt;br&gt;
We have given a list of int from which we have to all numbers which are only even, let's see how we can do it using &lt;em&gt;decorator&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-"&gt;
  &lt;/a&gt;
  Example :-
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

# Wrapper that filter even from list of ints
def only_evens(func):
    def wrapper(*args):
        even_numbers = [num for num in args if num % 2 == 0]
        print("\n\nWrapper added")
        print(f"even numbers {even_numbers}")
        result = f"sum of even numbers :- {func(*even_numbers)}"
        return result

    return wrapper



def add_nums(*numbers):
    sum = 0
    for num in numbers:
        sum += num
    return sum


print("Original add_nums function output :-",add_nums(1,2,3,4,5,6,7,8,9,10))

@only_evens
def add_nums(*numbers):
    sum = 0
    for num in numbers:
        sum += num
    return sum


print("Original add_nums function output :-",add_nums(1,2,3,4,5,6,7,8,9,10))

Output :-
Original add_nums function output :- 55


Wrapper added
even numbers [2, 4, 6, 8, 10]
Original add_nums function output :- sum of even numbers :- 30

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example &lt;br&gt;
first we called the orignal method &lt;em&gt;add_nums()&lt;/em&gt; which add all the numbers.&lt;br&gt;
then we declared the &lt;em&gt;add_nums()&lt;/em&gt; function again but this time &lt;br&gt;
added &lt;strong&gt;@only_evens&lt;/strong&gt; wrapper to it , the  wrapper &lt;em&gt;only_evens&lt;/em&gt; filter the list of values first then the filters values passed to the original method &lt;em&gt;add_nums()&lt;/em&gt; which return the sum of only even values.&lt;/p&gt;

&lt;p&gt;with this example we have come to an end,&lt;br&gt;
hope you all have learn some basis of &lt;em&gt;decorators&lt;/em&gt;&lt;br&gt;
this topic , at first is not easy to grasp,&lt;br&gt;
but as you explore more about &lt;em&gt;decorators&lt;/em&gt;&lt;br&gt;
you will know how useful it is.&lt;br&gt;
See you next time :-)&lt;/p&gt;

</description>
      <category>progamming</category>
      <category>python</category>
      <category>beginners</category>
      <category>decorators</category>
    </item>
  </channel>
</rss>
