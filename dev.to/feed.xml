<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Track User's Location On Your Website</title>
      <author>Bibek</author>
      <pubDate>Thu, 06 May 2021 21:59:31 +0000</pubDate>
      <link>https://dev.to/bibekkakati/track-user-s-location-on-your-website-58e0</link>
      <guid>https://dev.to/bibekkakati/track-user-s-location-on-your-website-58e0</guid>
      <description>&lt;p&gt;Hello everyone üëã&lt;/p&gt;

&lt;p&gt;In this article, we will see how can we get access to the user's location on our website.&lt;/p&gt;

&lt;p&gt;Tracking the user's location is not always necessary, but if you are building something like a location sharing application, a map-related application or to offer customized results based on the user's location then you need access to the user's location. By application, I mean web-based applications.&lt;/p&gt;

&lt;p&gt;So how can we get access to the user's location? &lt;/p&gt;

&lt;p&gt;Modern browsers provide almost everything we need in our application to enhance the user's experience. And here comes the &lt;code&gt;Geolocation API&lt;/code&gt; which is a Web API provided by the browsers to get access to the user's location with their consent.&lt;/p&gt;

&lt;p&gt;Live link to try it out at the end of the article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-geolocation-api"&gt;
  &lt;/a&gt;
  What is Geolocation API?
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Geolocation API&lt;/code&gt; is a Web API that gives Web content access to the location of the device.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Permission required to use the &lt;code&gt;Geolocation API&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation üìç
&lt;/h3&gt;

&lt;p&gt;Let's understand the implementation of the API.&lt;/p&gt;

&lt;p&gt;We can access the API from the browser's &lt;code&gt;window.navigator&lt;/code&gt; object.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#check-for-raw-geolocation-api-endraw-support"&gt;
  &lt;/a&gt;
  Check For &lt;code&gt;Geolocation API&lt;/code&gt; Support
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// It supports&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#geolocation-interface"&gt;
  &lt;/a&gt;
  Geolocation Interface üó∫Ô∏è
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;geolocation&lt;/code&gt; is the main method that we need to access to get, track, cancel tracking the location. It has three properties (methods):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;getCurrentPosition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;watchPosition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clearWatch&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#current-location"&gt;
  &lt;/a&gt;
  Current Location üìå
&lt;/h3&gt;

&lt;p&gt;To get the current location of the device, we will use the &lt;code&gt;getCurrentPosition&lt;/code&gt; method. This method will pass the current &lt;code&gt;position&lt;/code&gt; to the &lt;code&gt;positionCallback&lt;/code&gt; and in case of &lt;code&gt;error&lt;/code&gt;, it will pass the &lt;code&gt;error&lt;/code&gt; object to the &lt;code&gt;errorCallback&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;positionCallback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;errorCallback&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#position-callback"&gt;
  &lt;/a&gt;
  Position Callback
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;positionCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Assigning coords object for easier access.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;coords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Position of the longitude .&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;longitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Position of the latitude.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;latitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Accuracy of latitude &amp;amp; longitude in meters.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accuracy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Altitude in meters, relative to sea level.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;altitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;altitude&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Accuracy of the altitude in meters. Value can be null.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;altitudeAccuracy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;altitudeAccuracy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Direction towards which the device is facing. This value specified&lt;/span&gt;
  &lt;span class="c1"&gt;// in degrees clockwise from North. Value can be null.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;heading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// The velocity of the device in m/s. Value can be null.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;speed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// The time at which the location was retrieved.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All the values are of the &lt;code&gt;double&lt;/code&gt; type.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#error-callback"&gt;
  &lt;/a&gt;
  Error Callback
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;errorCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PERMISSION_DENIED&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;User denied the request for Geolocation.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;POSITION_UNAVAILABLE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Location information is unavailable.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TIMEOUT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The request to get user location timed out.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;UNKNOWN_ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;An unknown error occurred.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I think this function is very self-explanatory. It is just comparing the error code with the error type and we can handle it in any way.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#live-location"&gt;
  &lt;/a&gt;
  Live Location üåé
&lt;/h3&gt;

&lt;p&gt;To track the live location of the device we can call the &lt;code&gt;watchPosition&lt;/code&gt; method. This method takes the same arguments as &lt;code&gt;getCurrentPosition&lt;/code&gt;. The method will pass the updated current &lt;code&gt;position&lt;/code&gt; to the &lt;code&gt;positionCallback&lt;/code&gt; as the device change its location and in case of &lt;code&gt;error&lt;/code&gt;, it will pass the &lt;code&gt;error&lt;/code&gt; object to the &lt;code&gt;errorCallback&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;watchPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="nx"&gt;positionCallback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="nx"&gt;errorCallback&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;watchPosition&lt;/code&gt; method returns an &lt;code&gt;id&lt;/code&gt; which we can use to stop tracking.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#stop-tracking"&gt;
  &lt;/a&gt;
  Stop Tracking  üõë
&lt;/h3&gt;

&lt;p&gt;To stop tracking the live location we can call the &lt;code&gt;clearWatch&lt;/code&gt; method. The method expects &lt;code&gt;id&lt;/code&gt; as an argument.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clearWatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example‚ú®
&lt;/h3&gt;

&lt;p&gt;Check out the &lt;a href="https://github.com/bibekkakati/blogs-projects/tree/main/web/geolocation-api"&gt;GitHub repo&lt;/a&gt; for sample code.&lt;/p&gt;

&lt;p&gt;Try it out &lt;a href="https://bibekkakati.github.io/blogs-projects/web/geolocation-api/index.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;Mobile devices will give more accuracy.&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;Enjoyed? Give it a thumbs-up üëç&lt;/p&gt;

&lt;p&gt;Thank you for reading | Feel free to &lt;a href="https://bibekkakati.me"&gt;connect&lt;/a&gt; üëã&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/bibekkakati"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9buHlCpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-red.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>node</category>
      <category>react</category>
    </item>
    <item>
      <title>Melhorando a performance dos seus testes em PHP/Laravel</title>
      <author>Pedro Paulo</author>
      <pubDate>Thu, 06 May 2021 21:49:29 +0000</pubDate>
      <link>https://dev.to/pedropms/melhorando-a-performance-dos-seus-testes-em-php-laravel-3kip</link>
      <guid>https://dev.to/pedropms/melhorando-a-performance-dos-seus-testes-em-php-laravel-3kip</guid>
      <description>&lt;h1&gt;
  &lt;a href="#o-problema"&gt;
  &lt;/a&gt;
  O problema
&lt;/h1&gt;

&lt;p&gt;Voc√™ j√° se encontrou na situa√ß√£o em que tinha que fazer um &lt;em&gt;deploy&lt;/em&gt; ou subir sua atualiza√ß√£o urgente e teve que ficar esperando os testes terminarem para finalizar &lt;em&gt;pipeline&lt;/em&gt;? Nessa hora qualquer minuto √© uma eternidade. &lt;/p&gt;

&lt;p&gt;Eu estava enfrentando esse problema, meus testes demoravam cerca de 6 minutos para rodar e esse tempo seguia aumentando a cada nova &lt;em&gt;feature&lt;/em&gt; entregue.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#a-solu%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  A solu√ß√£o
&lt;/h1&gt;

&lt;p&gt;Para resolver isso encontrei o pacote &lt;a href="https://github.com/paratestphp/paratest"&gt;Paratest&lt;/a&gt;, basicamente, esse pacote adiciona suporte a testes paralelos ao PHPUnit, fazendo com que seus testes rodem simultaneamente.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#instala%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Instala√ß√£o
&lt;/h4&gt;

&lt;p&gt;Primeiro come√ßamos instalando o pacote:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;composer require &lt;span class="nt"&gt;--dev&lt;/span&gt; brianium/paratest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ap√≥s isso, sua aplica√ß√£o j√° tem suporte aos testes em paralelo. ü•≥&lt;/p&gt;

&lt;p&gt;Para come√ßar a usar vamos rodar o comando:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;vendor/bin/paratest &lt;span class="nt"&gt;-p4&lt;/span&gt; &lt;span class="nt"&gt;--runner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;WrapperRunner
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#op%C3%A7%C3%B5es-usadas"&gt;
  &lt;/a&gt;
  Op√ß√µes usadas:
&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;-p4&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A op√ß√£o &lt;code&gt;-p&lt;/code&gt; √© referente ao n√∫mero de processos simult√¢neos que ir√£o rodar os testes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;--runner=WrapperRunner&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Por padr√£o, o PHPUnit inicia um novo processo para cada arquivo de testes que ir√° rodar, utilizando o &lt;code&gt;--runner=WrapperRunner&lt;/code&gt; cada processo &lt;code&gt;-p&lt;/code&gt; ir√° iniciar apenas uma vez e manter tudo o que √© preciso para rodar todos os arquivos de testes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para saber todas as op√ß√µes dispon√≠veis e ter mais detalhes sobre as usadas aqui, acesse a &lt;a href="https://github.com/paratestphp/paratest"&gt;documenta√ß√£o&lt;/a&gt; do pacote.&lt;/p&gt;


&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#resultados"&gt;
  &lt;/a&gt;
  Resultados
&lt;/h4&gt;

&lt;p&gt;Para efeitos de compara√ß√£o vamos rodar modo sequencial, apenas com o PHPUnit e no modo paralelo, com o Paratest. Ser√£o 646 testes com 75442 asser√ß√µes, a maioria desses testes sendo de integra√ß√£o, com acesso ao banco de dados e outras depend√™ncias.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#testes-sequenciais"&gt;
  &lt;/a&gt;
  Testes Sequenciais:
&lt;/h5&gt;

&lt;p&gt;O tempo levado pelo PHPUnit para rodar todos esses testes foi de aproximadamente 5 minutos e 39 segundos. Agora, lembre-se da situa√ß√£o em que voc√™ est√° esperando a pipeline terminar para finalmente fazer um &lt;em&gt;deploy&lt;/em&gt;, esses quase 6 minutos se tornam uma eternidade.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SAqge80c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x82hzvc6klhqb8ectg9f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SAqge80c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x82hzvc6klhqb8ectg9f.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#testes-paralelos"&gt;
  &lt;/a&gt;
  Testes Paralelos:
&lt;/h5&gt;

&lt;p&gt;J√° o tempo levado pelo Paratest foi de aproximadamente 1 minuto e 11 segundos. Um tempo muito melhor para voc√™ que est√° ansioso esperando.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rbs7riYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qoq01jkggezu5shb0ulh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rbs7riYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qoq01jkggezu5shb0ulh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#nem-tudo-s%C3%A3o-flores"&gt;
  &lt;/a&gt;
  Nem tudo s√£o flores üòì
&lt;/h1&gt;

&lt;p&gt;Quando estamos trabalhando com paralelismo um grande problema √© controlar o acesso de cada processo aos recursos e dados do sistema, e nesse caso n√£o √© diferente. Em testes que devem acessar o banco de dados, modificar e consultar registros pode ocorrer de dois testes acessarem o mesmo dado simultaneamente causando poss√≠veis &lt;em&gt;deadlocks&lt;/em&gt; no banco de dados e assim, tamb√©m, um desses testes acabar√° falhando.&lt;/p&gt;

&lt;p&gt;Uma poss√≠vel solu√ß√£o para esses casos √© o isolamento de cada teste no acesso ao banco de dados. √â poss√≠vel fazer isso rodando os testes dentro de uma &lt;em&gt;transaction&lt;/em&gt; assim fazendo com que todos os registros modificados e/ou consultados estejam isolados e tudo que foi feito pelo teste √© desconsiderado ap√≥s seu t√©rmino.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;O Laravel disponibiliza a &lt;em&gt;Trait&lt;/em&gt; &lt;strong&gt;DatabaseTransactions&lt;/strong&gt;, com ela no seu &lt;strong&gt;TestCase&lt;/strong&gt; (classe na qual seus testes ir√£o extender), seus testes ir√£o por padr√£o rodar dentro de uma &lt;em&gt;transaction&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Caso use SQLServer, outra poss√≠vel solu√ß√£o √© habilitar a op√ß√£o &lt;strong&gt;READ_COMMITTED_SNAPSHOT&lt;/strong&gt;, ela ajuda com esses casos de dados sendo acessados e modificados simultanemente. Para mais detalhes acesse: &lt;a href="https://www.mssqltips.com/sqlservertip/6368/sql-server-readcommittedsnapshot-database-option-and-read-commited-transaction-isolation-level/"&gt;https://www.mssqltips.com/sqlservertip/6368/sql-server-readcommittedsnapshot-database-option-and-read-commited-transaction-isolation-level/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Observa√ß√£o: no meu caso as duas op√ß√µes foram usadas.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#conclus%C3%A3o"&gt;
  &lt;/a&gt;
  Conclus√£o
&lt;/h1&gt;

&lt;p&gt;Com a necessidade de cobrir sua aplica√ß√£o com testes aumentando a cada dia, rapidamente voc√™ come√ßa a se sentir incomodado com a demora na finaliza√ß√£o dos testes. Para ajudar nesse ponto, a op√ß√£o de rodar seus testes em paralelo √© muito bem vinda, ela est√° a√≠ para aumentar a performance e produtividade do seu time nos &lt;em&gt;deploys&lt;/em&gt; e no dia a dia.&lt;/p&gt;

&lt;p&gt;Se voc√™ ainda n√£o usou, deveria dar uma chance e ver o tempo que voc√™ est√° perdendo &lt;em&gt;(literalmente rs)&lt;/em&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#fontes"&gt;
  &lt;/a&gt;
  Fontes
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Paratest: &lt;a href="https://github.com/paratestphp/paratest"&gt;https://github.com/paratestphp/paratest&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Laravel Doc: &lt;a href="https://laravel.com/docs/8.x/testing#running-tests-in-parallel"&gt;https://laravel.com/docs/8.x/testing#running-tests-in-parallel&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title> Let's write a tiny JSON parser in Kotlin! Part 2: The Parser</title>
      <author>Will BL</author>
      <pubDate>Thu, 06 May 2021 21:01:19 +0000</pubDate>
      <link>https://dev.to/williambl/let-s-write-a-tiny-json-parser-in-kotlin-part-2-the-parser-b8g</link>
      <guid>https://dev.to/williambl/let-s-write-a-tiny-json-parser-in-kotlin-part-2-the-parser-b8g</guid>
      <description>&lt;p&gt;So now we have an understanding of JSON and the components that make it up, but we have to create something that will read it - this will be our parser.&lt;/p&gt;

&lt;p&gt;Our parser will step through our JSON file character by character to read it, so it'll need to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;remember our JSON&lt;/li&gt;
&lt;li&gt;remember where in the JSON it's currently looking&lt;/li&gt;
&lt;li&gt;know if it's at the end&lt;/li&gt;
&lt;li&gt;read the current character&lt;/li&gt;
&lt;li&gt;step to the next character&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So let's do it!&lt;br&gt;
First, we'll create a class which will take in our JSON as a &lt;code&gt;CharSequence&lt;/code&gt; (we could use a &lt;code&gt;String&lt;/code&gt;, too - the functionality is the same, but this lets you do something weird like throw a &lt;code&gt;StringBuilder&lt;/code&gt; in there), and will remember where it's currently reading:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Parser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;CharSequence&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's give it the ability to read and step through the input.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Parser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;CharSequence&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;step&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nc"&gt;Char&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;++]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;peek&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nc"&gt;Char&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;skip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;peek()&lt;/code&gt; will read the current character, &lt;code&gt;skip()&lt;/code&gt;, will move the cursor forwards by one, and &lt;code&gt;step()&lt;/code&gt; and read and then move on.&lt;/p&gt;

&lt;p&gt;However, trying to read past the end will throw an exception, so let's add a method to check if we're at the end:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;hasNext&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nc"&gt;Boolean&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is everything we'll need for moving along our JSON text. Next, let's add some functions to actually read it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predicate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;StringBuilder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;predicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;peek&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;step&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;CharSequence&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;StringBuilder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;patternCursor&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;peek&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;patternCursor&lt;/span&gt;&lt;span class="p"&gt;++])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;skip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These two functions are vital to how the parser will do its job:&lt;/p&gt;

&lt;p&gt;They read the JSON one character at a time, and store what they've read in a buffer, until the character they read reaches a certain condition. For the first function, that condition is given via a predicate, and in the second, the condition is that the buffer's contents match a given string. Once the condition is met, the buffer's contents are returned.&lt;/p&gt;

&lt;p&gt;These five methods, simple as they seem, are extremely powerful, and all we need as a foundation for our parser!&lt;/p&gt;

</description>
      <category>kotlin</category>
      <category>json</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How To Unit Test Like a Pro</title>
      <author>Abdulcelil Cercenazi</author>
      <pubDate>Thu, 06 May 2021 20:54:15 +0000</pubDate>
      <link>https://dev.to/jarjanazy/how-to-unit-test-like-a-pro-59kj</link>
      <guid>https://dev.to/jarjanazy/how-to-unit-test-like-a-pro-59kj</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-unit-testing"&gt;
  &lt;/a&gt;
  What Is Unit Testing‚ùì üì¶
&lt;/h1&gt;

&lt;p&gt;Testing a '&lt;strong&gt;unit&lt;/strong&gt;' in the system separately from other units.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-what-does-a-unit-mean"&gt;
  &lt;/a&gt;
  But What Does a Unit Mean‚ùì
&lt;/h2&gt;

&lt;p&gt;There are a lot of different opinios regarding the answer to this question.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Some people say a unit is a function, some say it's a class.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;üü¢ However, the definition I find most logical is the one describing a unit as a 'behavior' of the system.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It's a scenario that has meaning in the business logic.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For example, create a new Shipment using the client's inputs, and save them to the database.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;not really save, but fake it (mock it) we will see it a bit later
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#but-why-does-the-behavior-description-seems-the-most-logical"&gt;
  &lt;/a&gt;
  But Why Does The Behavior Description Seems The Most Logical‚ùì
&lt;/h2&gt;

&lt;p&gt;Tests would be closer to real-life‚úîÔ∏è&lt;/p&gt;

&lt;p&gt;You wouldn‚Äôt write useless tests. (for example, a useless null pointer check) ‚úîÔ∏è&lt;/p&gt;

&lt;p&gt;We can refactor our code without breaking tests since we test the outputs of a unit and not its inner workings ‚úîÔ∏è&lt;/p&gt;

&lt;p&gt;However, there are some things that we might not want to test in a unit üî¥&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like what?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Most commonly, dependencies on the outer world.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Database connection (get me the record with this Id)&lt;/li&gt;
&lt;li&gt;API calls (call Twitter's API and get all my tweets)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those dependencies we need to &lt;strong&gt;mock&lt;/strong&gt;.&lt;br&gt;
Mocking is defining how a dependency should act in certain conditions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;oh dear database connection, please return this object if your x method got called with the y parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#lets-look-at-an-example"&gt;
  &lt;/a&gt;
  Let's look at an example ‚öôÔ∏è
&lt;/h2&gt;

&lt;p&gt;We have a Shipment class üì¶&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@RequiredArgsConstructor&lt;/span&gt;  
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Shipment&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
   &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;productCode&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
   &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
   &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Shipment Repository for database operations üóÉ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ShipmentRepository&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;Optional&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Shipment&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;findShipment&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;productCode&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
        &lt;span class="c1"&gt;// mock method  &lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;Optional&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;empty&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
    &lt;span class="o"&gt;}&lt;/span&gt;  
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Shipment&lt;/span&gt; &lt;span class="n"&gt;shipment&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
        &lt;span class="c1"&gt;// mock method  &lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A validation service üîç&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;VerificationService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;shipmentIsntValid&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;productCode&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isEmpty&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;  
                &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;productCode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isEmpty&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;  
                &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
    &lt;span class="o"&gt;}&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Shipment service ü•ã&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@RequiredArgsConstructor&lt;/span&gt;  
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ShipmentService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;VerificationService&lt;/span&gt; &lt;span class="n"&gt;verificationService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;ShipmentRepository&lt;/span&gt; &lt;span class="n"&gt;shipmentRepository&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;createAndSaveShipment&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;productCode&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;  
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verificationService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shipmentIsntValid&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;productCode&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;  
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Shipment isn't valid"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shipmentExistInDB&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;productCode&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;  
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Shipment Not Found"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
        &lt;span class="n"&gt;createNewShipment&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;productCode&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Shipment Is Created"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
    &lt;span class="o"&gt;}&lt;/span&gt;  
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;createNewShipment&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;productCode&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
        &lt;span class="nc"&gt;Shipment&lt;/span&gt; &lt;span class="n"&gt;shipment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Shipment&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;productCode&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
        &lt;span class="n"&gt;shipmentRepository&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shipment&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
    &lt;span class="o"&gt;}&lt;/span&gt;  
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;shipmentExistInDB&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;productCode&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;shipmentRepository&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findShipment&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;productCode&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;isPresent&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
    &lt;span class="o"&gt;}&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the unit testing, we will use Junit5 and Mockito.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-look-at-a-bad-example-of-unit-tests"&gt;
  &lt;/a&gt;
  Let's look at a bad example of Unit Tests ‚ùå
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@ExtendWith&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;MockitoExtension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;  
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UniTestTests&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="nd"&gt;@Mock&lt;/span&gt;  
  &lt;span class="nc"&gt;ShipmentRepository&lt;/span&gt; &lt;span class="n"&gt;shipmentRepo&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
    &lt;span class="nd"&gt;@Test&lt;/span&gt;  
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;givenData_DetectValidity&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;  
        &lt;span class="nc"&gt;VerificationService&lt;/span&gt; &lt;span class="n"&gt;verificationService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;VerificationService&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
        &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;verificationService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shipmentIsntValid&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"jhon"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"3HFF"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
        &lt;span class="n"&gt;assertFalse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
    &lt;span class="o"&gt;}&lt;/span&gt;  
    &lt;span class="nd"&gt;@Test&lt;/span&gt;  
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;givenData_DetectShipmentExistsInDB&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;  
        &lt;span class="nc"&gt;ShipmentService&lt;/span&gt; &lt;span class="n"&gt;shipmentService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ShipmentService&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;VerificationService&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;shipmentRepo&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
        &lt;span class="nc"&gt;Shipment&lt;/span&gt; &lt;span class="n"&gt;shipment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Shipment&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ahmed"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"3HKK"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
        &lt;span class="n"&gt;doReturn&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Optional&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shipment&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;when&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shipmentRepo&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;findShipment&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ahmed"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"3HKK"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  

        &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;shipmentService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shipmentExistInDB&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ahmed"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"3HKK"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
        &lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
    &lt;span class="o"&gt;}&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Why are those bad unit tests? ‚ö†Ô∏è&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ShipmentService and VerificationService are two closely related methods that work together to produce a single behavior (adding a new Shipment).&lt;/li&gt;
&lt;li&gt;However, we are testing them in isolation, both in separate tests.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#now-lets-look-at-a-good-unit-testing-example"&gt;
  &lt;/a&gt;
  Now, Let's look at a good unit testing example ‚úÖ
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@ExtendWith&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;MockitoExtension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;  
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UniTestTests&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="nd"&gt;@Mock&lt;/span&gt;  
  &lt;span class="nc"&gt;ShipmentRepository&lt;/span&gt; &lt;span class="n"&gt;shipmentRepo&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
    &lt;span class="nd"&gt;@Test&lt;/span&gt;  
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;givenShipmentData_CreateNewShipment&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;  
        &lt;span class="nc"&gt;VerificationService&lt;/span&gt; &lt;span class="n"&gt;verificationService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;VerificationService&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
        &lt;span class="nc"&gt;ShipmentService&lt;/span&gt; &lt;span class="n"&gt;shipmentService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ShipmentService&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verificationService&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shipmentRepo&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  

        &lt;span class="n"&gt;doReturn&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Optional&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;empty&lt;/span&gt;&lt;span class="o"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;when&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shipmentRepo&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;findShipment&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"jalil"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"3HXX"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
        &lt;span class="n"&gt;doNothing&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;when&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shipmentRepo&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;any&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;  

        &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;shipmentService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createAndSaveShipment&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"jalil"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"3HXX"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
        &lt;span class="n"&gt;assertEquals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Shipment Is Created"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
    &lt;span class="o"&gt;}&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#to-sum-it-in-few-words-%F0%9F%96%8B"&gt;
  &lt;/a&gt;
  To Sum it in Few Words üñã
&lt;/h2&gt;

&lt;p&gt;A unit test is meant to validate how feature behavior in the system.&lt;br&gt;
 It could be a bunch of classes and functions interacting together to produce this behavior.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#source-code-on-github"&gt;
  &lt;/a&gt;
  Source Code on üîó&lt;a href="https://github.com/Jarjanazy/java-tutorial/tree/main/src/main/java/unitTestTutorial"&gt;GitHub&lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>java</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Destructure Optional Params in Typescript</title>
      <author>Matt Gregg</author>
      <pubDate>Thu, 06 May 2021 20:52:08 +0000</pubDate>
      <link>https://dev.to/itwasmattgregg/destructure-optional-params-in-typescript-3d95</link>
      <guid>https://dev.to/itwasmattgregg/destructure-optional-params-in-typescript-3d95</guid>
      <description>&lt;p&gt;Sometimes you have a function with an optional Object argument that you want to destructure in the function. Like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;SomeObject&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;option1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;stuff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;param&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;SomeObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;stuff&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However you'll get an error because &lt;code&gt;param&lt;/code&gt; could be undefined and TS doesn't like you trying to destructure something that's undefined. There are a couple ways around this...&lt;/p&gt;

&lt;p&gt;Define a fallback in the initializer and don't use the ? optional identifier:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;param&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SomeObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;stuff&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use nullish coalescence:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;param&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;SomeObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;stuff&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or just call the propery on the parameter directly with optional chaining:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;param&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;SomeObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;anotherFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;param&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;stuff&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All of these work and will handle &lt;code&gt;param&lt;/code&gt; being undefined.&lt;/p&gt;

</description>
      <category>dev</category>
      <category>frontend</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Sobre renuncia voluntaria (thread)</title>
      <author>Jorge Epu√±an</author>
      <pubDate>Thu, 06 May 2021 20:22:08 +0000</pubDate>
      <link>https://dev.to/devschile/sobre-renuncia-voluntaria-thread-17m7</link>
      <guid>https://dev.to/devschile/sobre-renuncia-voluntaria-thread-17m7</guid>
      <description>&lt;h1&gt;
  &lt;a href="#pegas"&gt;
  &lt;/a&gt;
  #pegas
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Le nacho, livercake, and 8 others&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Es real eso de que la carta de renuncia hay que mandarla con 30 d√≠as de anticipaci√≥n?, hay alguna forma de saltarse eso?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
No, que no es real? O lo de que no se puede saltar?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Igual ya la estoy redactando, la mando ma√±ana mismo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;livercake&lt;/strong&gt;&lt;br&gt;
eso es s√≥lo una ‚Äòformalidad‚Äô&lt;br&gt;
si lo haces con menos de 30 d√≠as, la empresa podr√≠a reservarse el pago de algunas liquidaciones o beneficios de ese mes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;livercake&lt;/strong&gt;&lt;br&gt;
o demandarte por via civil si te mandaste algun condoro al irte de la pega (cosa q podrian hacer igual, con 30 dias)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;livercake&lt;/strong&gt;&lt;br&gt;
lo unico obligatorio es que tiene que ser por escrito y tienes que ir a la notaria&lt;br&gt;
el resto pico pal que lee&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rola_&lt;/strong&gt;&lt;br&gt;
oye nacho la carta la puedes hacer online en la inspeccion del trabajo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rola_&lt;/strong&gt;&lt;br&gt;
despues eso lo imprimes y se lo pasas a tu empleador&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;livercake&lt;/strong&gt;&lt;br&gt;
üòÆ cacha ya ni tenis que ir a la notaria&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
La duraaaa?&lt;br&gt;
No sab√≠a&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rola_&lt;/strong&gt;&lt;br&gt;
asi es&lt;br&gt;
no es necesario&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Felipe SandoMan&lt;/strong&gt;&lt;br&gt;
No la imprimas sacala de la pagina y mandala por correo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rola_&lt;/strong&gt;&lt;br&gt;
llevabas como 3 hras redactando xd?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
La hago altiro entonces, gracias @livercake @rola_&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
M√°s o menos jajaja&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;livercake&lt;/strong&gt;&lt;br&gt;
Estimado empleador‚Ä¶&lt;br&gt;
no, no,&lt;br&gt;
Querido empleador‚Ä¶&lt;br&gt;
no no asi tampoco&lt;br&gt;
A quien corresponda‚Ä¶&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rola_&lt;/strong&gt;&lt;br&gt;
jajajajaja&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;livercake&lt;/strong&gt;&lt;br&gt;
:xd:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manu&lt;/strong&gt;&lt;br&gt;
En teoria te la pueden rechazar&lt;br&gt;
nunca lo hacen&lt;br&gt;
pero la idea es ser profesional&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Y en el caso de que si?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manu&lt;/strong&gt;&lt;br&gt;
y renunciar con un tiempo decente xd para dejar en claro las cosas supongo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Igual la empresa est√° urgida&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asilva&lt;/strong&gt;&lt;br&gt;
vas a la inspeccion del trabajo y le dices que quieres renunciar, te pregunta los datos basicos, el motivo y listo, 5 minutos ya estas ajuera&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;livercake&lt;/strong&gt;&lt;br&gt;
uta eso si igual&lt;br&gt;
como dice manu, como es una formalidad,&lt;br&gt;
si no lo haces est√°s siendo poco formal ü§µ‚Äç‚ôÇÔ∏è&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Mmm...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;livercake&lt;/strong&gt;&lt;br&gt;
aka te van a pelar :shrug-mario:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
debes notificar con 30 dias de anticipacion, pero para efectos practicos nunca me han pedido quedarme 30 dias&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
siemrpe es negociable, lo que mas me hje quedado son 2 semanas en :yapo: :lol2:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asilva&lt;/strong&gt;&lt;br&gt;
ir a la notaria es solo para no hacer fila en la inspeccion... puedes elegir hacer fila en la inspeccion, o hacer fila en la notaria&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
Siempre puedes mandarte un Fight club e irte con lucas en tu bolsillo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rola_&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://midt.dirtrab.cl/"&gt;https://midt.dirtrab.cl/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asilva&lt;/strong&gt;&lt;br&gt;
la wea de 30 dias es para irte en buena onda, pero los puedes mandar a la chucha el mismo dia si quieres&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
creo que la carta con clave unica puedes hacerla por internet&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Fuuu tengo que ir a sacarlaaa&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.dt.gob.cl/portal/1626/w3-article-116645.html"&gt;https://www.dt.gob.cl/portal/1626/w3-article-116645.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;jerodude&lt;/strong&gt;&lt;br&gt;
Yo siempre lo hago con 3 semanas de anticipacion&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;jerodude&lt;/strong&gt;&lt;br&gt;
Si estoy ultra chato son 2&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
te pueden pedir los 30 dias o si no estan de acuerdo, despedirte por abandono de labores y solo pagarte las vacaciones pendientes &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Si ah√≠ me sali√≥ lo de los 30 d√≠as&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Jajaj&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;jerodude&lt;/strong&gt;&lt;br&gt;
Tambien la hice por MiDT, no necesitas redactar nada si usas esa&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
pero nunca me ha pasado, pq al final es lo mismo renunciar a que te echen por causal tuya&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asilva&lt;/strong&gt;&lt;br&gt;
en una pega les di una carta de renuncia a 30 dias, y el jefe se puso weon, a la ma√±ana siguiente llegue con una nueva carta de renuncia efectiva desde el mismo dia. Como se le desfiguro la cara fue hermoso ‚ù§Ô∏è&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rola_&lt;/strong&gt;&lt;br&gt;
ajajajaj&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Ser√≠a mi primera vez "real" que renuncio&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rola_&lt;/strong&gt;&lt;br&gt;
que belicoooo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
Le hubieras hecho una carta de renuncia con 30 d√≠as atras, y le cobrabas por el desarrollo que hiciste durante ese tiempo :mind-blown:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
La otra no cuenta, porque me fui de trato nom√°s&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
Oye y te vas con pega nacho?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Wen tip, tenerla hecha desde el inicio pa llegar y tirarla&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
No&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
O es quit rage?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Es que he estado tirando CVS&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
pero igual, puedes anunciar tu renuncia en una reunion primero y despues entregar la carta&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Y me han dicho varios que si, pero no puedo por no soltar las responsabilidades (me piden disponibilidad de una semana a la otra m√°s o menos)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
no es necesario tanta formalidad&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asilva&lt;/strong&gt;&lt;br&gt;
Le nacho renuncia porque no hay endulzante para el cafe, se lo robaron todo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Jajajaja&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
Renuncio porque la hija del Sfeir no me dio la pas√°&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
No, me voy porque ya no estoy haciendo casi nada... Solo soporte y me pudri√≥ todo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asilva&lt;/strong&gt;&lt;br&gt;
ah, entonces pa que te vas a quedar 1 mes?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
te estay dando muchas vueltas&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Es que eso&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Jajaja&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asilva&lt;/strong&gt;&lt;br&gt;
habla y diles que te quieres ir&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;jerodude&lt;/strong&gt;&lt;br&gt;
Yo le digo a los bosses en reu que me voy y mando la carta a rrhh&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
habla con tu jefe, dile que te queris ir&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
No hay rrhh aca&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
Dile que vas a comprar cigarros y no vuelves, como lo hizo mi papa &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rola_&lt;/strong&gt;&lt;br&gt;
siii dileee&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
que les dai 2 semanas, y que no podis mas&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Les voy a pedir una reu ma√±ana&lt;br&gt;
Y les digo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asilva&lt;/strong&gt;&lt;br&gt;
dile: hola, me quiero ir, te complica si me voy en 2 semanas?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
si no les gusta, que te pueden  echar por abandono de funciones pq ya tienes otra pega&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asilva&lt;/strong&gt;&lt;br&gt;
a lo mejor estan puro esperando que renuncies y no te quieren ver 30 dias mas üòõ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
O sea... No s√©, igual me llevo relativamente bien con ellos&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Si no es por malas ondas ni nada&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
ningun gefe con 2 dedos de frente va a querer tener a alguien con un pie afuera trabajando, sabiendo que quiere puro irse&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
Pero siempre es un buen momento para empezar a llevarse mal&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Pero como que ya me satur√≥ la wea de no ser √∫til&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rola_&lt;/strong&gt;&lt;br&gt;
le nacho y no es mejor buscar algo primero&lt;br&gt;
y ese tiemo muerto dentro de tu pegaq&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Si he estado buscando&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;jerodude&lt;/strong&gt;&lt;br&gt;
Ojo que igual es redflag que en tus nuevas pegas no te esperen al menos 3 semanas&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Y me han dicho que si&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rola_&lt;/strong&gt;&lt;br&gt;
postular a lo desquiciaooo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Pero no me he podido ir a las dos semanas como quieren porque tengo carga po&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asilva&lt;/strong&gt;&lt;br&gt;
igual avisa de la renuncia antes de llegar con la carta, por ultimo para que lleguen a un acuerdo de cuantos dias te vas a quedar. (pero igual busca pega antes para que llegues tu con la propuesta)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Pero ahora que me dijeron, dem√°s si se puede&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rola_&lt;/strong&gt;&lt;br&gt;
osea igual podi renuncia sin pega solo si tienes ahorros&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Ya, ma√±ana mismo doy aviso, y les cuento como me fue jajaja&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rola_&lt;/strong&gt;&lt;br&gt;
sino fuiste weno&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
Y acuerdate de hacerles un rm -rf en los servidores&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Me quedan como 300k&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asilva&lt;/strong&gt;&lt;br&gt;
si eso, no soltar las contrase√±as hasta que paguen el finiquito&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
y no te robes bases de datos de clientes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Tendr√≠a que entregar solo un **.PEM&lt;br&gt;
Y el resto, mis llaves de acceso de consola&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asilva&lt;/strong&gt;&lt;br&gt;
eso no se hace gui√±o gui√±o&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
ah eso, no firmar la wea de finiquito hasta que te paguen o que tengan el cheque ahi al firmar&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le nacho&lt;/strong&gt;&lt;br&gt;
Buena acotaci√≥n&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
El otro dia un abogado laboral me dijo que cuando habia problemas uno podia firmar el finiquito escribiendo "Acepto con reparos" y eso facilitaba que los demandaras a la inspeccion del trabajo &lt;br&gt;
(Por si necesitas el finiquito para postular a otra pega)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
mejor no firmar nomas, si aceptas aunque sea con reparos, la inspeccion del trabajo no puede hacer nada&lt;br&gt;
por eso a los abogados laborales les gusta esa wea&lt;br&gt;
de hacer anotaciones en el finiquito&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manu&lt;/strong&gt;&lt;br&gt;
Yo hare la mia la otra semana&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manu&lt;/strong&gt;&lt;br&gt;
Con fecha fin de mes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
a los abogados culiaos les encanta lo de hacer anotaciones en todo tipo de contratos&lt;br&gt;
pq para hacerlas efectivas son demandas civiles mas larga que la ctm, y ellos se forran&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
Pero puedes postular a otra pega sin tener finiquito en la anterior?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
si&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manu&lt;/strong&gt;&lt;br&gt;
Si puedes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
lo que en teoria no puedes es tener otro contrato&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manu&lt;/strong&gt;&lt;br&gt;
Pero si esa pega infrinje alguna clausula de tu otro contrato ojo ahi&lt;br&gt;
Si te pillan&lt;br&gt;
Jajaja&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
si es que en tu primer contrato tenias clausula de exclusividad&lt;br&gt;
de hecho con esa clausula no puedes hacer freelance tampoco&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asilva&lt;/strong&gt;&lt;br&gt;
es como el chiste del bonbo fica para demandar a la tarjeta master plop, el abogado queria demanda civil para recuperar las 5 lukas&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manu&lt;/strong&gt;&lt;br&gt;
Aham&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
&lt;a class="mentioned-user" href="https://dev.to/marcos"&gt;@marcos&lt;/a&gt;
 deber√≠a tener un progrmaa en la TV para resolver dudas...&lt;br&gt;
Alo Marcos?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manu&lt;/strong&gt;&lt;br&gt;
Jajajajaj&lt;br&gt;
Es que marcos es :patrones: y ya sabe todo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
me he cambiado mucho de pega&lt;br&gt;
tal vez muchas weas no son legales, pero se hacen en la practica&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
Yo llevo 14 a√±os a honorarios en esta pega, me dijeron que cuando me vaya me puedo forrar. Es cierto?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
forrar en que&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
jajaja&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://defensadespidos.cl/honorarios/"&gt;https://defensadespidos.cl/honorarios/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Abogados Laborales - Servicio Gratuito&lt;/em&gt;&lt;br&gt;
Trabajador a Honorarios ¬øTe Despidieron? :: DefensaDespidos.cl&lt;br&gt;
Demandamos los Derechos e Indemnizaciones de los Trabajadores a Honorarios de Servicios p√∫blicos,Municipalidades y del Estado. Servicio Gratuito ‚òéÔ∏è +56412190132&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
ah pero del estado, pq ahi te hacen un contrato de prestacion de servicio&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;joaco&lt;/strong&gt;&lt;br&gt;
mi contrato tiene cl√°usula de exclusividad y de 30 d√≠as de aviso (aunque creo que eso √∫ltimo es por ley)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
una vez me ofrecieron una pega asi, deje el proceso cuando me dijeron que era a honorarios&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;joaco&lt;/strong&gt;&lt;br&gt;
encuentro rid√≠culo que sean 30 d√≠as. 2 semanas es mucho m√°s prudente&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;joaco&lt;/strong&gt;&lt;br&gt;
casi todas las pegas del estado son boleteando ahora&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;marcos&lt;/strong&gt;&lt;br&gt;
si, pq pa ser contratado tiene que aprobar la contraloria, poco menos que hasta el papa&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
Es un cacho, hay que hacer un concurso publico y que te aprueben hasta los gremios de la institucion (for real)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
Ademas que no te pagan lo que deben, a mi me ofrecieron contrato pero por 1.500.000 de acuerdo a la escala de sueldos&lt;br&gt;
No me podian ofrecer mas&lt;br&gt;
Por eso prefer√≠ seguir a honorarios&lt;br&gt;
Tienes que hacer "carrera funcionaria" para ir ganando mas lucas&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;joaco&lt;/strong&gt;&lt;br&gt;
y cu√°nto era boleteando cuando te ofrecieron 1.5 por contrato?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
En ese tiempo, 2m&lt;br&gt;
Eran solo 500 lucas mas, pero claro, por ley no podian llegar al monto&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;joaco&lt;/strong&gt;&lt;br&gt;
no era tanta la diferencia en sueldos brutos. Creo que el bruto de 1.5 es cerca de 1.9&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
Ese era el bruto&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;joaco&lt;/strong&gt;&lt;br&gt;
ah chuta&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trag&lt;/strong&gt;&lt;br&gt;
No se como estar√° la escala de sueldos actualmente, tengo entendido que esta -mejor-, pero solo por el reajuste&lt;br&gt;
Bueno que tambien depende de la reparticion del gobierno, no todos los ministerios usan la misma escala&lt;/p&gt;

&lt;p&gt;-- fin --&lt;/p&gt;

</description>
      <category>leyes</category>
      <category>laboral</category>
      <category>chile</category>
      <category>renuncia</category>
    </item>
    <item>
      <title>The Ultimate Web Developer Resources List üî•Awesome 200+ Resources</title>
      <author>Kiran Raj R</author>
      <pubDate>Thu, 06 May 2021 19:59:31 +0000</pubDate>
      <link>https://dev.to/kiranrajvjd/the-ultimate-web-developer-resources-list-200-resources-2gf5</link>
      <guid>https://dev.to/kiranrajvjd/the-ultimate-web-developer-resources-list-200-resources-2gf5</guid>
      <description>&lt;p&gt;Web development is not an easy task for beginners, to create a web project that standout takes lot of effort, time and vast knowledge in various html elements, CSS properties and JavaScript. I list 200+ resources that will help junior web developers to fill the gaps in knowledge they lack in HTML and CSS. These will definitely help developers to create amazing web projects with less effort and quickly. All the resources listed here are free to use. These resources can be used to understand how CSS works which help to learn CSS quickly. Hope this will help you, Happy Coding.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-filters"&gt;
  &lt;/a&gt;
  CSS Filters
&lt;/h3&gt;

&lt;p&gt;The below site help you to generate CSS filter code. You can adjust various parameters like brightness, contrast etc.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.cssfilters.co/"&gt;CSS Filters&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--an4h5lvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqlxn0ugoh9gr8cdnf5x.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.cssfiltergenerator.com/"&gt;CSS Filter Generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R7_MBbrI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lr2myinsb8n7bpx3bcg.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#media-query-generators"&gt;
  &lt;/a&gt;
  Media Query Generators
&lt;/h3&gt;

&lt;p&gt;The below listed sites help to generate CSS media query codes.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="http://giona.net/tools/css3-mediaquery-generator/"&gt;Giona&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ux8rV8hS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iyd1aw90nb0cpke64bcx.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://simplecss.eu/"&gt;Simple CSS&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iBi1-UMo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dvyslt1g3jybr91mm42l.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://tools51.nasqueron.org/css/media-queries-generator"&gt;Tools51&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W21XN67x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3k806s720udp120sya0s.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;

&lt;h4&gt;
  &lt;a href="#css-spinner"&gt;
  &lt;/a&gt;
  CSS Spinner
&lt;/h4&gt;

&lt;p&gt;Free CSS spinners that can be used in your web projects.&lt;br&gt;
1.&lt;a href="https://loading.io/spinner/"&gt;Loading.io&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7aRwDan4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j06twllkcwff89luwhcp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7aRwDan4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j06twllkcwff89luwhcp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
2.&lt;a href="https://tobiasahlin.com/spinkit/"&gt;Tobiashlin&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LVzgADLd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyp7omgtqi84sw48helr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LVzgADLd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyp7omgtqi84sw48helr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
3.&lt;a href="https://icons8.com/cssload/en/spinners"&gt;Icons8.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fyS1q3np--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3umvfe4dnze7z5nb6g0m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fyS1q3np--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3umvfe4dnze7z5nb6g0m.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#font-generators-font-mixers"&gt;
  &lt;/a&gt;
  Font Generators / Font Mixers
&lt;/h3&gt;

&lt;p&gt;These links help to play with various fonts, mixing them to create beautiful patters, these patters can be copied to your web projects.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://brandmark.io/font-generator/"&gt;Brand Mark&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6_HOtogs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no6ia8vs5h2tba3i5r25.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.mixfont.com/"&gt;Mix Font&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yKt6jm6y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/coulkjvlcjwl1wz6dmvk.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://djr.com/bungee/"&gt;DJR&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OF-bAHCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rw1e0co715t2000jgrh9.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.threebu.it/random-material-palette/"&gt;Threebu&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_G-t09W3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4y6ai7ajuum6oeezj3n.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://fontjoy.com/"&gt;Font Joy&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cp3WrMOD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqztucg31on3kdsufn15.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#box-shadow"&gt;
  &lt;/a&gt;
  Box shadow
&lt;/h3&gt;

&lt;p&gt;Help to create box shadows using css code.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://getcssscan.com/css-box-shadow-examples"&gt;GetCSSScan&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ai4W6Hye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20zcnlg0y8t6jr07zuds.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://css3studio.com/page-css3/css-box-shadow.php"&gt;CSS3 Studio&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7GOOAxR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pw7e5tx2qwuaw6vaecxq.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://enjoycss.com/"&gt;Enjoy CSS&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S1lRBfMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ce8gdwc65xor7w6msb37.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cssbud.com/css-generator/css-box-shadow-generator/"&gt;CSSBud&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rNGPH158--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lr5r1c7hu826hqvf0j5p.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://shadows.brumm.af/"&gt;Shadows.brumm&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--631eDRkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ly3z8afg4kl142lchdoj.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#meta-tag-generator"&gt;
  &lt;/a&gt;
  Meta Tag Generator
&lt;/h3&gt;

&lt;p&gt;These links help to generate meta tags based on your inputs.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://webcode.tools/generators/meta-tags"&gt;Meta Tag Generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gjyLQLcr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iek3m4qar5r89ehjurqb.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.seoptimer.com/meta-tag-generator"&gt;SEOptimer&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wNEcl4mF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pegiwk76vgojqkzohpq1.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hallanalysis.com/seo-meta-tag-generator/"&gt;Hall Analysis&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QCzi0tjh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rosllkbveendzi9t69q6.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#free-favicon-maker"&gt;
  &lt;/a&gt;
  Free Favicon Maker
&lt;/h3&gt;

&lt;p&gt;Favicons are small 16x16 icon files that are displayed next to the URL of your site in a browser's address bar, the below sites helps you to create favicons.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://formito.com/tools/favicon"&gt;Formito&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qTkIcpPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c72p7lbuffikd8ensx24.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://formito.com/tools/logo"&gt;Free Logo Maker&lt;/a&gt; text only
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m9BdG2mk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04icri7a32iwow2x2y4t.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://favicon.io/"&gt;Favicon.io&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j5Cng8HZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xaot3665nvgyfr3ylqjl.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.favicon-generator.org/"&gt;Favicon-generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NzitoYRa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqqlu42b3m9ywk5v8l8u.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.favicon.cc/"&gt;Favicon.cc&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V4QJnAmz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkuoz1z9ynv2s9ad32fx.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#profile-picture-maker"&gt;
  &lt;/a&gt;
  Profile Picture Maker
&lt;/h3&gt;

&lt;p&gt;Websites that help to create profile pictures.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://pfpmaker.com/"&gt;Pfpmaker&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---S6GpJTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wh04pucqv8v81bpbsq93.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://profilepicturemaker.com/"&gt;Profile Picture maker&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0M-ZBGAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mjefn2sbcnnobghckqys.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#neumorphism"&gt;
  &lt;/a&gt;
  Neumorphism
&lt;/h3&gt;

&lt;p&gt;Neumorphism is a design trend which is marked by minimal and realistic-looking UI. A few sites that help to generate css code for the neumorphism design is listed below. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://neumorphism.io/#e0e0e0"&gt;Neumorphism&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uhfe4Lgs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6le1i5s1plmc2ygspif.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://neumorphic.design"&gt;Neumorphic&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VtsmoOKX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4q7t28auxpbo4q6xc6x.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#dual-tone-creator"&gt;
  &lt;/a&gt;
  Dual Tone Creator
&lt;/h3&gt;

&lt;p&gt;The below links help to create dual tone effect using css.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://cssduotone.com/"&gt;CSS Duotones.com&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J07a1Qso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqvs3np4afg8y68g9a9v.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://medialoot.com/duotones/"&gt;Medialoot&lt;/a&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fs5MBr1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04x8xp8fp9yedkda7p97.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://duotone.shapefactory.co/?f=26b7a0&amp;amp;t=3d3f4c&amp;amp;q=_"&gt;DuoTone: ShapeFactory&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t6_6DNpo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eb0x26oamjg2a15d50d4.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#random-animation-generator"&gt;
  &lt;/a&gt;
  Random Animation Generator
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;
  &lt;a href="#3d-book-cover-creator"&gt;
  &lt;/a&gt;
  &lt;a href="https://3dbookcovergenerator.netlify.app/"&gt;3D Book Cover Creator&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q5wjkX0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mq37gp4bulbg4mowoxna.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q5wjkX0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mq37gp4bulbg4mowoxna.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4&gt;
  &lt;a href="#water-pipe"&gt;
  &lt;/a&gt;
  &lt;a href="http://dragdropsite.github.io/waterpipe.js/"&gt;Water pipe&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QPk747XG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0pvj3yhfznvuaywpb2ex.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QPk747XG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0pvj3yhfznvuaywpb2ex.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4&gt;
  &lt;a href="#card-flip"&gt;
  &lt;/a&gt;
  &lt;a href="http://foxcodetango.com/css-card-flip-generator/index.html"&gt;Card Flip&lt;/a&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VGEIVpZo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7kswohdkuj2wjbyiudd.PNG" alt="Alt Text"&gt;
&lt;/h4&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#triangle-generator"&gt;
  &lt;/a&gt;
  Triangle generator
&lt;/h3&gt;

&lt;p&gt;These links help to generate triangle shapes using html and css, you can use the shape by simply copying the code to your project.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://omatsuri.app/triangle-generator"&gt;Omatsuri&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ax1Fn8XS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03h6awqcmq7a6dwsp2hw.PNG" alt="Alt Text"&gt;
2 .&lt;a href="http://apps.eky.hk/css-triangle-generator/"&gt;CSS triangle generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t7xuPrg2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx2xmf3ofh6q7gmbcds1.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#ribbon-banner-generator"&gt;
  &lt;/a&gt;
  Ribbon / Banner generator
&lt;/h3&gt;

&lt;p&gt;The links help to generate  ribbons and banners.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://badgen.net/"&gt;Badge Generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ihx1xSD9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bupaildga1anpqxabzsr.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://doodlenerd.com/css-element/ribbon-generator"&gt;Doodle Nerd&lt;/a&gt; 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ziAu8NeM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sgxd9cxc65majm7diubh.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.cssportal.com/css-ribbon-generator/"&gt;CSS Portal : Ribbon&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NadYts5n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eh841qqv37vjsbjrrj3n.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.cssportal.com/css-ribbon-banner-generator/"&gt;CSS Portal : Ribbon Banner&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QX-1hA54--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v75u9mqx29v3cweig294.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#underline-generators"&gt;
  &lt;/a&gt;
  Underline generators
&lt;/h3&gt;

&lt;p&gt;These links help to generate underlines and animations that can be applied on underlines in CSS. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://underline-generator.netlify.app/?ref=undesign"&gt;Underline generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ifHadOJd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hrf8uqvl3inbprtc8d67.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cssbud.com/css-generator/css-underline-generator/"&gt;CSS Bud&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v_rqPUkB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2msrc6b1v5ob3k7qy8xa.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#hamburger-menu-icons"&gt;
  &lt;/a&gt;
  Hamburger Menu Icons
&lt;/h3&gt;

&lt;p&gt;The below links help to generate beautiful hamburger menus icon. &lt;br&gt;
1 .&lt;a href="https://jonsuh.com/hamburgers/"&gt;Hamburgers&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HaB6PYqB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jfkm17ewcatwnhdi18zi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HaB6PYqB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jfkm17ewcatwnhdi18zi.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://burger-generator.com/"&gt;Burger-generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nZOKDvDf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f87lqzmuvqhgqrv9mqgc.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#table-generator"&gt;
  &lt;/a&gt;
  Table Generator
&lt;/h3&gt;

&lt;p&gt;The links help to create beautiful html tables. The links help to generate both the html code for table and CSS code to style the tables based on your preferences.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://divtable.com/table-styler/"&gt;Div Table&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ueBcEBOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74u6i7p0qpdb1ryy1b13.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.cssportal.com/html-table-generator/"&gt;CSS portal&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N4j8HBic--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xmlqyb567r475h0w43sz.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.html.am/html-codes/tables/"&gt;HTML.am&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EdxdJTwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhulc0ouwl8yn7dj0xbj.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#button-generators"&gt;
  &lt;/a&gt;
  Button Generators
&lt;/h3&gt;

&lt;p&gt;The below links will help to design various buttons based on your preferences, these links generate CSS code of your designs, which can be copied into your projects. Various hover effect can also be generated using the links.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://gradientbuttons.colorion.co/"&gt;GradientButton&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p-6PkwYs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14ylylkz0xj2vgg68en1.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p-6PkwYs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14ylylkz0xj2vgg68en1.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://css3buttongenerator.com/"&gt;css3buttongenerator.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7wDcdnFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/glmxf71r4ivy37yp8jeg.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7wDcdnFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/glmxf71r4ivy37yp8jeg.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.bestcssbuttongenerator.com/"&gt;bestcssbuttongenerator.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MFtHKt4Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/in9t1zsgwe49wyyk34ez.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MFtHKt4Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/in9t1zsgwe49wyyk34ez.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://cssbuttoncreator.com/"&gt;cssbuttoncreator.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pco2p1Mu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hqvxn20w89c85bp1mkpp.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pco2p1Mu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hqvxn20w89c85bp1mkpp.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.cssportal.com/css3-button-generator/"&gt;cssportal.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eDtxsRv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yrjbglxxcrfbcutallkn.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eDtxsRv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yrjbglxxcrfbcutallkn.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://loading.io/button/generator/"&gt;Loading.io&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IvFdtTtZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e5yr8rjducppqftburmp.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IvFdtTtZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e5yr8rjducppqftburmp.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://tools.fromdev.com/css-button-generator.html"&gt;fromdev.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sFm0J2TH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t1iamx8dzybedxwly5z.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sFm0J2TH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t1iamx8dzybedxwly5z.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.html-code-generator.com/css/button-generator"&gt;html-code-generator.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ITABdBh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xmcmrtpjfisjv07zbh4.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ITABdBh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xmcmrtpjfisjv07zbh4.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.cssgenerators.net/"&gt;cssgenerators.net&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--irhsWgq0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7q6arxcd7xsj8sckcdv.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--irhsWgq0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7q6arxcd7xsj8sckcdv.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://buttonoptimizer.com/"&gt;buttonoptimizer.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vp21TNfg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oogul1ts3186ot4xef9u.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vp21TNfg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oogul1ts3186ot4xef9u.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.dextronet.com/css-buttons-generator/"&gt;dextronet.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PC6HIuDA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/906265hjfmxcsqc3ta4z.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PC6HIuDA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/906265hjfmxcsqc3ta4z.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.sciweavers.org/i2style"&gt;sciweavers.org&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RK9gNq2K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvzd405mmsm83qvzkb7a.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RK9gNq2K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvzd405mmsm83qvzkb7a.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#flip-switch"&gt;
  &lt;/a&gt;
  Flip Switch
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.cssportal.com/css3-flip-switch/"&gt;cssportal.com&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eoJPumBt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdi34whfik0dmfnsg642.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://proto.io/freebies/onoff/"&gt;proto.io&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eoJPumBt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdi34whfik0dmfnsg642.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.html-code-generator.com/css/radio-button-checkbox"&gt;html-code-generator.com&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w_RYyhM8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ksjn2s5gg2jfcbdnvt9.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://bun.js.org/"&gt;Bun&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_KDSS5ow--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhc4459o2pdswmkmov2k.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#checkbox-generator"&gt;
  &lt;/a&gt;
  Checkbox Generator
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://doodlenerd.com/html-control/css-checkbox-generator"&gt;Doodle Nerd&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jgd-x2AF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er5rug2ibx1aw429bsf5.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jgd-x2AF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er5rug2ibx1aw429bsf5.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bun.js.org/"&gt;Bun&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--964ztYEY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4iycaifgbs1vv38j5p4.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--964ztYEY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4iycaifgbs1vv38j5p4.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#radio-button-generator"&gt;
  &lt;/a&gt;
  Radio Button Generator
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://doodlenerd.com/html-control/css-radio-button-generator"&gt;Doodle Nerd&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hJfglf-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h53ecznhxbl6n6atftk0.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://bun.js.org/"&gt;Bun&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--964ztYEY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4iycaifgbs1vv38j5p4.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h4&gt;
  &lt;a href="#icons"&gt;
  &lt;/a&gt;
  Icons üí•
&lt;/h4&gt;

&lt;p&gt;The below links provide with free icon resources, which can be used in web projects.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.iconshock.com/svg-icons/"&gt;Iconshock&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nKFkf-Ry--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cb8w46tswkoya6u93amh.png" alt="Site Image"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://icons8.com/icons"&gt;Icon8&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--grGYkylH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6tdaalw8u5z8eh2uqui.png" alt="Site Image"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.flaticon.com/"&gt;Flaticon&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ifkqcBkF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qe7sfbh4intdos1njx7d.png" alt="Site Image"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freepik.com"&gt;Freepik&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nCp0mlLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ge6n5j4uobp6jm5fuk2f.png" alt="Site Image"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.iconninja.com/"&gt;Icon Ninja&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZuQIREEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyexhprsk5ydlowb4sm4.png" alt="Site Image"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.svgrepo.com/"&gt;SVGrepo&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--okT7Hz7X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/347yh4tgntq87uwsp7xi.png" alt="Site Image"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mariodelvalle.github.io/CaptainIconWeb/"&gt;Captain Icon Web&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QSpk_VPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d5l0rtnbjl6rplxclhce.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://fontawesome.com/"&gt;Font Awesome&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UzKLxB1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl7x4pnjrqrup3avovig.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://css.gg/app"&gt;CSS.gg&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jgMncWAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0h4pmkg9u2tnmk18gm9.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://jam-icons.com/"&gt;Jam Icons&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VXOdpN1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1mxrzmqlinppuymrjkl7.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://lineicons.com/icons/"&gt;Line Icons&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SeKiZhBh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c65wr15hkuj4xdytepxf.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://fonts.google.com/icons?selected=Material+Icons"&gt;Material Icons&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rc9pSkGk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjp3frr88fc8a8j28mrm.PNG" alt="Alt Text"&gt;
13.&lt;a href="https://iconmonstr.com/"&gt;Iconmonstr&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_FgjqeEz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9mzpa8viqifwdqz3285.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#color-gradient-resources"&gt;
  &lt;/a&gt;
  Color Gradient Resources
&lt;/h3&gt;

&lt;p&gt;These links help to generate color gradients CSS codes, which can be copy pasted into your web projects.  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.eggradients.com/"&gt;Eggradients&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ILvV8k4k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z09h1kuxyx297m7hl5za.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.colorzilla.com/gradient-editor/"&gt;Colorzilla&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5OjnoERb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ffnxbr70sf5wkib4het3.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://webgradients.com/"&gt;WebGradients&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P3HxAv6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iojot8g73jfijbp2zqdb.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mycolor.space/gradient"&gt;MyColor.space&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_T2aym4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/go4mhel5e3qd7p4xjw6c.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://webkul.github.io/coolhue/"&gt;CoolHue&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g1KggSrf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/le1gems6wdzt9vdzqkj5.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://gradienthunt.com/"&gt;GradientHunt&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lS7SiXNm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b13kq7ea4apm3ojldwdq.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://uigradients.com/#Aqualicious"&gt;UIgradient&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WLwC_bj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8s6q6bf7nqes9kzk7rk0.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.grabient.com/"&gt;Grabient&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AkwqDhhT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzktnatr2f2s8at5r6t1.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mdigi.tools/gradient-generator/"&gt;Mdigi&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fxRsZH3n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7w8f7xrc4a5jez5qsdh9.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coolors.co/gradient-maker/aed1ef-f2dfc1-f0b9ef"&gt;Coolors&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wVgZn7An--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60zaq2gcj5q2u4xb82gh.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#color-palette-generator"&gt;
  &lt;/a&gt;
  Color Palette Generator
&lt;/h3&gt;

&lt;p&gt;The below links will help to generate color palette, which can make your web project awesome.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="http://www.colorsontheweb.com/Color-Tools/Color-Wizard"&gt;ColorsOnTheWeb&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Evk8A7nn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o486hdoszehf0r84qyb0.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://colorpalettes.net/"&gt;ColorPalettes&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H4CRZQ9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/br43olifwnuwjnzve97l.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://colorhunt.co/"&gt;ColorHunt&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6xdEKcjc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5hw4bzns5c4zl29a13af.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.0to255.com/"&gt;0 To 255&lt;/a&gt; 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PTc9t4wT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbrxakifv963y296cqaf.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://color.hailpixel.com/"&gt;Hailpixel&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--58Xryula--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnguvcbgetca1bh2wtw6.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://clrs.cc/"&gt;Clrs.cc&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N0twijhR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/atvloro88gdk6xroa4v4.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://htmlcolorcodes.com/"&gt;HTMLColorCodes&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5pLHVGW2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9nv0lmxxszsid620u53h.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coolors.co/"&gt;Coolors&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LahqxWHM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10dd21jgze3kb6zqrruu.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://colormind.io/"&gt;ColorMind&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sIYST-0o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bbe8cuc3nde2pfpsx2k4.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://colors.muz.li/"&gt;Muzil&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5CUc3u6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j1197s087gifkol3e1m6.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.canva.com/colors/color-palette-generator/"&gt;Canva&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--41rCmzLL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3q1xp4c0nmq0l4t6icp0.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mycolor.space/"&gt;Mycolor.space&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yApPUykH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2d8jc3pvd9eujjmnhmc.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://color.adobe.com/create/color-wheel/"&gt;AdobeColorWheel&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vqL1OzTq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i677jzsog1mvofkd7xsf.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.huesnap.com/"&gt;Huesnap&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dxXpX3ru--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3yquscpm8nc9qjycbpao.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.materialpalette.com/"&gt;MaterialPalette&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qW7a1egT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5wk9d8bojvzwhdi6atlm.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.colorexplorer.com/colorpicker.aspx"&gt;ColorExplorer&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dFnsYjUn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6v6e3otcdp0osilnzjs.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://paletton.com/#uid=14j0u0kllllaFw0g0qFqFg0w0aF"&gt;Paletton&lt;/a&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H3L_3J0k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6960n90xns9xpmeb79r4.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://brandcolors.net/"&gt;BrandColor&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ijS_m3vB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehc1eixsf37m01uv2eap.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.colorpoint.io/free-tools-for-designers/color-tints-and-shades/#111111,ffffff"&gt;ColorPoint.io&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pBcz7vVw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ylbxgt07rhm6r736k28d.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://colormixer.web.app/0300e1ffff008409fff99537643c0201a501e4222f320000ff00fa48283a0400/Nightclub"&gt;Color Mixer&lt;/a&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7IJ5OuRN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f27923scdb1llp7dmi44.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h1&gt;
  &lt;a href="#svg-shape-generator"&gt;
  &lt;/a&gt;
  SVG Shape Generator
&lt;/h1&gt;

&lt;p&gt;The below links will help to generate svg shapes, you can generate svg codes for the shapes you created. To add the shapes to your project simply copy paste the codes to your project.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.blobmaker.app/"&gt;Blob Maker&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LefyFHmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txprj4g0lm2zywhjssi3.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://squircley.app/"&gt;Squircley&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ISDD0cBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfhhjhdiuczx3zc8kgjt.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.softr.io/tools/svg-shape-generator"&gt;Softr.io : SVG Shape Generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V4ZzI6hN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38c71vm1y0j63ire7zvs.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blobs.app/"&gt;Blobs&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9W7KdhPl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhle8q8pro3gir1a5vv8.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://chartgen.frederickallen.co/pie.html"&gt;Chartgen&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XRb2DWUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fb5vt8xqnuv93k95s77i.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.outpan.com/app/9aaaf27303/svg-gradient-wave-generator"&gt;Outpan : Gradient Wave Generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VRy60sjd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nwlkr6tq6icamm2gkhd.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://wavelry.vercel.app/"&gt;Wavelry&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KeipE2wJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9s68lb5s3a8rbaiadne.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.softr.io/tools/svg-wave-generator"&gt;Softr.io : SVG Wave Generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---_1AecCT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tyi41akc744dapp85c8f.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://getwaves.io/"&gt;Getwaves.io : Wave Generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BS09tQI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bqr7wxlflxno8s0akkn6.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://svgwave.in/"&gt;SVGwave.in : Wave Generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zeshiICd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0r3n672zdjtu95aopmx.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://app.haikei.app/"&gt;Haikei : Multiple Shape Generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4U7OvWsM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtchdaamx193rurbogm4.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.svgwaves.io/?ref=undesign"&gt;SVGwaves.io&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cO0IWWna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rix7v0941vtbmnil9x96.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.shapedivider.app/"&gt;Shape Divider&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2ZgoxpKM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkza9h3ypd9zdqxxs4gz.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://omatsuri.app/page-dividers"&gt;Omatsuri&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F-1akuqD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iplstlgnv6vchd6rr4ua.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#svg-background-generators"&gt;
  &lt;/a&gt;
  SVG Background Generators
&lt;/h3&gt;

&lt;p&gt;The links below will help you to generate beautiful backgrounds in svg format based on your inputs.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.svgbackgrounds.com/"&gt;SVG Backgrounds&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SR2R_l_w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yxjk51c44ftww2xcrvm6.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.heropatterns.com/"&gt;Hero Patterns&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SCSKSZv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k9umtd1hd3l7pet616o5.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://philiprogers.com/svgpatterns/"&gt;Philiprogers: SVGPatterns&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YJoAKahM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvsqwwpxh465uf0qx0ne.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://thepatternlibrary.com/"&gt;The Pattern Library&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AB_eunnz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dl0g1tbjy6bw7x6xwryi.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.kennethcachia.com/plain-pattern/"&gt;Plain Pattern&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YWM76J7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9m6xsh3ftkkc67i224pv.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://patternico.com/"&gt;Patternico&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xvYzMDOX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5rdlcbadsmlltbl8i0t.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://products.ls.graphics/paaatterns/preview.html"&gt;Paaatterns&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JkRviCqo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yny63z5p0u3om7w3jaqu.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coolbackgrounds.io/"&gt;Cool Background&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pfAthOXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5foqffi5wtv1z6axh6mr.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://btmills.github.io/geopattern/"&gt;Btmills: Geopattern&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gLSZ62wE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0cm1tpdc8nfbfs6yzsb2.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://bgjar.com/"&gt;Bgjar&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DF7Ffb-W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57sswvdvpygsrdsa09d0.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.svgeez.com/"&gt;Svgeez&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HxdwPAeG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xez665nblkdrms8smu8t.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://patternpad.com/editor.html"&gt;Patternpad&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dNJmDJqt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ax34572fqje6y8p7hpg9.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://tartanify.com/tartan/lyon-jeffrey-m-hunting-personal"&gt;Tartanify&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6yqR5VEj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3gu7oen33eo4jtnujbh.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://bg.siteorigin.com/"&gt;Bg Siteorigin&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BBLy4x8L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crf1oxybrnjfvjqkbsdj.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://tabbied.com/select-artwork"&gt;Tabbied&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GtAJY_Mb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8wappcfjzyqwmk8axfn6.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pattern.monster"&gt;Pattern Monster&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sx2OV5oI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7xz6hae9ulx4ido2xiv.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.visiwig.com/patterns/"&gt;Visiwig&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HVG8oX4J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h034i73t2gxnna0njd7h.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://patterninja.com/"&gt;Pattern Ninja&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRggrpyh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3igkak4bb8iekg2edi5g.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://online-free-tools.com/en/css_pattern_generator_background"&gt;CSS Background Patterns&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3UkTeziv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfxuc6hl6s60j8ykxuuz.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.patternify.com/"&gt;Patternify&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9sA3ffS8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ph3olfxiqfroi9afse7.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://wweb.dev/resources/animated-css-background-generator/"&gt;Animated CSS Background&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iO2M_U8N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ed7dn09whct1zp7rxl5r.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://stripesgenerator.com/"&gt;CSS Stripes Generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yP9gMDGJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rd1sxbstgfym0i02zmsl.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://patternizer.com/yy47/72"&gt;Patternizer&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TZc6RVDp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rkp43zvtlnohm07e01t.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://doodad.dev/pattern-generator/"&gt;Doodad: Pattern Generator&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EZ5sp_Uc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3up1kaya9pknlk2z4blk.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#illustration-resources"&gt;
  &lt;/a&gt;
  Illustration resources
&lt;/h3&gt;

&lt;p&gt;The below resources will help you to get free illustrations for your web projects.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-undraw"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://undraw.co/illustrations"&gt;Undraw&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QDq1_Khd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8z0rntk4g9k44yu28dtw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QDq1_Khd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8z0rntk4g9k44yu28dtw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-draw-kit"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://www.drawkit.io/"&gt;Draw Kit&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pqtVudNX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xputyajvbwn1w4no3px7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pqtVudNX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xputyajvbwn1w4no3px7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-indian-doodle"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://iconscout.com/illustration-pack/indian-doodle"&gt;Indian Doodle&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--puGud7XM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yb1wd2kzxsk1494y48vb.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--puGud7XM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yb1wd2kzxsk1494y48vb.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-poke"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://www.karthiksrinivas.in/poke"&gt;Poke&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jl_SncTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ivmlgg0flbvus2ntymb1.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jl_SncTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ivmlgg0flbvus2ntymb1.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#5-open-doodles"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.opendoodles.com/"&gt;open Doodles&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TISmMm4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/psmh97241p0jijsgm73m.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TISmMm4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/psmh97241p0jijsgm73m.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#6-lukaszadam"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://lukaszadam.com/illustrations"&gt;Lukaszadam&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E0NP0KtZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ltiupbeyl6dvbg7ogg4.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E0NP0KtZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ltiupbeyl6dvbg7ogg4.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#7-ira-design"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://iradesign.io/"&gt;IRA Design&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HSfmJJxC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yptmywqvtv8n3eywf5d7.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HSfmJJxC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yptmywqvtv8n3eywf5d7.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#8-mixkit"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://mixkit.co/free-stock-art/"&gt;Mixkit&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r2FMLs3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rajncbafaeo5c95v9ca.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r2FMLs3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rajncbafaeo5c95v9ca.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#9-scale"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://2.flexiple.com/scale/all-illustrations"&gt;Scale&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a0dKVACS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pv0k3y3wspz283lg67bv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a0dKVACS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pv0k3y3wspz283lg67bv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#10-pulse"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://sleekbundle.com/product/pulse-illustration-kit/"&gt;Pulse&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4CkNQbPj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ezyta5xwmkyd581quk95.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4CkNQbPj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ezyta5xwmkyd581quk95.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#11-gee-me"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://geeme.vercel.app/"&gt;Gee Me&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xmlBsW8c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kriv828b35ci9efg86io.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xmlBsW8c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kriv828b35ci9efg86io.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#12-absurd"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://absurd.design/#slide-6"&gt;Absurd&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--psyeWF4L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4771n0xxl7zbkct0crj.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--psyeWF4L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4771n0xxl7zbkct0crj.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#13-the-noun-project"&gt;
  &lt;/a&gt;
  13. &lt;a href="https://thenounproject.com/"&gt;The Noun project&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kRs3ILSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gciseb4suexp3ivfbdyp.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kRs3ILSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gciseb4suexp3ivfbdyp.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#14-freshfolk"&gt;
  &lt;/a&gt;
  14. &lt;a href="https://fresh-folk.com/"&gt;Fresh-folk&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WC8-6-Wc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jzhq6rwgamchdebylza.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WC8-6-Wc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jzhq6rwgamchdebylza.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#15-rawpixel"&gt;
  &lt;/a&gt;
  15. &lt;a href="https://www.rawpixel.com/search/illustration?sort=curated&amp;amp;page=1"&gt;Rawpixel&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pAAOQJuL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/csr0c4puj5r8lfc20t01.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pAAOQJuL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/csr0c4puj5r8lfc20t01.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#16-webpixels-eye-pop"&gt;
  &lt;/a&gt;
  16. &lt;a href="https://webpixels.io/illustrations"&gt;Webpixels : Eye Pop&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HvUGCwdp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/imbd1ndnk23ufs485n43.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HvUGCwdp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/imbd1ndnk23ufs485n43.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#17-delesign"&gt;
  &lt;/a&gt;
  17. &lt;a href="https://delesign.com/free-designs/graphics/"&gt;Delesign&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SlgPOHjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wluirrec5lcjx8jz8z2a.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SlgPOHjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wluirrec5lcjx8jz8z2a.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#18-manypixels"&gt;
  &lt;/a&gt;
  18. &lt;a href="https://www.manypixels.co/gallery?ref=lapaninja"&gt;Manypixels&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2QjVgpSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yrbuyc091nwwplswc9yg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2QjVgpSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yrbuyc091nwwplswc9yg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#19-icon8"&gt;
  &lt;/a&gt;
  19. &lt;a href="https://icons8.com/illustrations"&gt;Icon8&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vj1HVTVG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mud8xjq867gqvik4z6pi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vj1HVTVG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mud8xjq867gqvik4z6pi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#20-humaans"&gt;
  &lt;/a&gt;
  20. &lt;a href="https://humaaans.com/"&gt;Humaans&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RLAhOONk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mi8x8akqcx4wq4s5psd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RLAhOONk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mi8x8akqcx4wq4s5psd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#21-streamline"&gt;
  &lt;/a&gt;
  21. &lt;a href="https://lab.streamlinehq.com/"&gt;Streamline&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6RRCXoML--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehuqvn432tj9cj3sov88.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6RRCXoML--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehuqvn432tj9cj3sov88.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#22-lucid"&gt;
  &lt;/a&gt;
  22. &lt;a href="https://lucid.pixsellz.io/"&gt;Lucid&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_N68uou0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tpxn3r1266x0ii01j2ya.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_N68uou0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tpxn3r1266x0ii01j2ya.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#23-ui8"&gt;
  &lt;/a&gt;
  23. &lt;a href="https://ui8.net/"&gt;Ui8&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6sqUsfaO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/avybo04r5dsz04lsicpq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6sqUsfaO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/avybo04r5dsz04lsicpq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#24-controlrocks"&gt;
  &lt;/a&gt;
  24. &lt;a href="https://control.rocks/"&gt;Control.Rocks&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1RI5fmDm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lc2drqsq2q0mqsyz4xec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1RI5fmDm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lc2drqsq2q0mqsyz4xec.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#25-niceillustrations"&gt;
  &lt;/a&gt;
  25. &lt;a href="https://niceillustrations.com/free-illustrations/"&gt;Niceillustrations&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wk6vh8b1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/euvglymwkz21qdw48imd.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wk6vh8b1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/euvglymwkz21qdw48imd.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#26-pixel-true"&gt;
  &lt;/a&gt;
  26. &lt;a href="https://www.pixeltrue.com/packs"&gt;Pixel True&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i7cJL-8_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc2kb9eafbm5e7451i2a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i7cJL-8_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc2kb9eafbm5e7451i2a.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#27-isometric"&gt;
  &lt;/a&gt;
  27. &lt;a href="https://isometric.online/"&gt;Isometric&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vw7tK1rY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc8nj6mrhyc1siivs53z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vw7tK1rY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc8nj6mrhyc1siivs53z.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#28-story-set"&gt;
  &lt;/a&gt;
  28. &lt;a href="https://storyset.com/"&gt;Story Set&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WszuBsIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqjpuemqdtiilnl6ii8q.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WszuBsIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqjpuemqdtiilnl6ii8q.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#29-open-peeps"&gt;
  &lt;/a&gt;
  29. &lt;a href="https://www.openpeeps.com/"&gt;Open Peeps&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fu6Z21Wm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xejoa036yddvxe04f45p.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fu6Z21Wm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xejoa036yddvxe04f45p.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#30-black-illustrations"&gt;
  &lt;/a&gt;
  30. &lt;a href="https://www.blackillustrations.com/"&gt;Black illustrations&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bsTc_1he--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvkhiy0ml5alzlormbff.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bsTc_1he--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvkhiy0ml5alzlormbff.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#31-free-illustrations"&gt;
  &lt;/a&gt;
  31. &lt;a href="https://freeillustrations.xyz/"&gt;Free Illustrations&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ibZTrt61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vx1oh4owhvaor0ns7b86.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ibZTrt61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vx1oh4owhvaor0ns7b86.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#32-illlustrations"&gt;
  &lt;/a&gt;
  32. &lt;a href="https://illlustrations.co/"&gt;Illlustrations&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QPoGv7zH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q4o6o2ap9tzj6ghkr4m4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QPoGv7zH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q4o6o2ap9tzj6ghkr4m4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#33-getillustrations"&gt;
  &lt;/a&gt;
  33. &lt;a href="https://www.getillustrations.com/illustration-packs"&gt;Getillustrations&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vC3JGEXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/im7m7484noe877v9e6o7.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vC3JGEXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/im7m7484noe877v9e6o7.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -------------------------------------------
&lt;/h1&gt;
&lt;h3&gt;
  &lt;a href="#css-animation-resources"&gt;
  &lt;/a&gt;
  CSS Animation Resources
&lt;/h3&gt;

&lt;p&gt;The below resources help you to get CSS code to animate various components of your web projects.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1the-app-guruz"&gt;
  &lt;/a&gt;
  1.&lt;a href="https://www.theappguruz.com/tag-tools/web/CSSAnimations/"&gt;The App Guruz&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nmR9YmaH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dp6zeg86j9vyp9j44jf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nmR9YmaH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dp6zeg86j9vyp9j44jf.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-css-animate"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://cssanimate.com/"&gt;CSS animate&lt;/a&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6bkPETmg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0621pbfm8y366rtmiq4.PNG" alt="Alt Text"&gt;
&lt;/h3&gt;
&lt;h3&gt;
  &lt;a href="#3animatelo"&gt;
  &lt;/a&gt;
  3.&lt;a href="https://gibbok.github.io/animatelo/"&gt;Animatelo&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wWH9dST5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2kuiyyzibet8hj5dvhaq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wWH9dST5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2kuiyyzibet8hj5dvhaq.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4all-animation-css3"&gt;
  &lt;/a&gt;
  4.&lt;a href="https://all-animation.github.io/"&gt;All Animation CSS3&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uG9BbQ9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n59wf6ax7zkrbliq2fcy.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uG9BbQ9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n59wf6ax7zkrbliq2fcy.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#5csshake"&gt;
  &lt;/a&gt;
  5.&lt;a href="https://elrumordelaluz.github.io/csshake/"&gt;CSShake&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gack2eS3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fm2slcpnnad51iy67nll.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gack2eS3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fm2slcpnnad51iy67nll.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#6cssanimation"&gt;
  &lt;/a&gt;
  6.&lt;a href="http://cssanimation.io/"&gt;CSSAnimation&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L-fYmGoq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4ox2wsshfms3desfppi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L-fYmGoq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4ox2wsshfms3desfppi.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#7hovercss"&gt;
  &lt;/a&gt;
  7.&lt;a href="https://ianlunn.github.io/Hover/"&gt;Hover.CSS&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J6_4Cg37--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4og2h1ehz8mrg4wx7hc6.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J6_4Cg37--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4og2h1ehz8mrg4wx7hc6.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#8infinite"&gt;
  &lt;/a&gt;
  8.&lt;a href="https://tilomitra.github.io/infinite/"&gt;Infinite&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tmvTdqw9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfjfatpmltu7fyd1z6hb.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tmvTdqw9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfjfatpmltu7fyd1z6hb.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#9its-tuesday"&gt;
  &lt;/a&gt;
  9.&lt;a href="https://shakrmedia.github.io/tuesday/"&gt;It's Tuesday&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4r-ibgoJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vrh18jt8g0bd5sjr7rlk.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4r-ibgoJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vrh18jt8g0bd5sjr7rlk.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#10magic"&gt;
  &lt;/a&gt;
  10.&lt;a href="https://www.minimamente.com/project/magic/"&gt;Magic&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--85gZ-5c_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/juc4b4j5mvnicw3miitf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--85gZ-5c_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/juc4b4j5mvnicw3miitf.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#11micron"&gt;
  &lt;/a&gt;
  11.&lt;a href="https://webkul.github.io/micron/"&gt;Micron&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TiWEaNt---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0f2058uf6gjaaf7z06l2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TiWEaNt---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0f2058uf6gjaaf7z06l2.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#12motion-ui"&gt;
  &lt;/a&gt;
  12.&lt;a href="https://zurb.com/playground/motion-ui"&gt;Motion UI&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pqk3hDdq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vd79z14ctgdw2bv11w15.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pqk3hDdq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vd79z14ctgdw2bv11w15.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#13obnoxious"&gt;
  &lt;/a&gt;
  13.&lt;a href="https://tholman.com/obnoxious/"&gt;Obnoxious&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Wzw6RKq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vc37v6i21edol428w6qq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Wzw6RKq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vc37v6i21edol428w6qq.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#14reboundgen"&gt;
  &lt;/a&gt;
  14.&lt;a href="https://dwarcher.github.io/reboundgen/examples/"&gt;Reboundgen&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--furOmx44--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81feyzvg6rdwg9j8hnlq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--furOmx44--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81feyzvg6rdwg9j8hnlq.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#15rocket"&gt;
  &lt;/a&gt;
  15.&lt;a href="https://minimamente.com/example/rocket/"&gt;Rocket&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--80Ef1HVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4i8if1477zy91wuq5xd.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--80Ef1HVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4i8if1477zy91wuq5xd.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#16wicked-css"&gt;
  &lt;/a&gt;
  16.&lt;a href="https://kristofferandreasen.github.io/wickedCSS/#"&gt;Wicked CSS&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0D3hfFih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7ifwbbtjkdy2xfzfqc2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0D3hfFih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7ifwbbtjkdy2xfzfqc2.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#17animista"&gt;
  &lt;/a&gt;
  17.&lt;a href="https://animista.net/play/basic"&gt;Animista&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mw5luExL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8nvvnmsjgiyh5x92uys.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mw5luExL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8nvvnmsjgiyh5x92uys.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#18animatecss"&gt;
  &lt;/a&gt;
  18.&lt;a href="https://animate.style/"&gt;Animate.CSS&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XwHtompO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gy96015n0sngr6flo30b.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XwHtompO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gy96015n0sngr6flo30b.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#19keyframes"&gt;
  &lt;/a&gt;
  19.&lt;a href="https://keyframes.app/animate/"&gt;Keyframes&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mwWoxLBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gn6jr8xpt5ee3hvzkv5w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mwWoxLBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gn6jr8xpt5ee3hvzkv5w.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/25-awesome-fonts-from-google-fonts-40im" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;25 Awesome Fonts From Google Fonts&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª Apr 14 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/awesome-css-layout-resources-for-beginners-508a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Awesome CSS Layout Resources For Beginners&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª Apr 18 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/24-html-tags-you-may-not-know-37be" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;24 HTML Tags you may not know.&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª May  4 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/12-simple-button-hover-animation-using-css-1ff1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;12 Simple Button Hover Animation Using CSS&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª May  5 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top 5 DEV Comments of the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 06 May 2021 19:55:01 +0000</pubDate>
      <link>https://dev.to/devteam/top-5-dev-comments-of-the-past-week-5ej6</link>
      <guid>https://dev.to/devteam/top-5-dev-comments-of-the-past-week-5ej6</guid>
      <description>&lt;p&gt;&lt;em&gt;This is a weekly roundup of awesome DEV comments that you may have missed.  You are welcome and encouraged to boost posts and comments yourself using the &lt;strong&gt;&lt;a href="https://dev.to/t/bestofdev"&gt;#bestofdev&lt;/a&gt;&lt;/strong&gt; tag.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Having a lot of &lt;a href="https://dev.to/madza/how-many-unfinished-projects-do-you-have-56fg"&gt;unfinished projects&lt;/a&gt; floating around can seem daunting, but this is a great outlook and work ethic to have, &lt;a class="mentioned-user" href="https://dev.to/zedvas"&gt;@zedvas&lt;/a&gt;
!&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/zedvas"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--nGsjr2sx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ooIvTfIz--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/623259/54220914-da56-495f-8e45-58c2a6be5404.jpeg" alt="zedvas profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/zedvas"&gt;
        &lt;span class="comment-username"&gt;zedvas&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/zedvas/comment/1e2mp" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 30
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;I usually have 2-3 going simultaneously. I read a great tip once that said when you get stuck/bored of one project, you can then "procrastinate" by working on the other. That helps keep my mind fresh and inspired for when I go back to the original project.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://dev.to/tyaga001/7-uncomfortable-truths-about-being-a-developer-1gec"&gt;Being a developer is not an easy path&lt;/a&gt;, and imposter syndrome gets the better of us sometimes. &lt;a class="mentioned-user" href="https://dev.to/hseritt"&gt;@hseritt&lt;/a&gt;
 has an awesome mindset - thanks for the boost!&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/hseritt"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--JKlkcHIU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2Z21rdn1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/208229/983531c4-066f-49f6-a6b0-dbb46ed8ee4a.jpg" alt="hseritt profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/hseritt"&gt;
        &lt;span class="comment-username"&gt;Harlin Seritt&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/hseritt/comment/1e4gd" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    May  2
  &lt;/time&gt;

    ‚Ä¢ Edited
    &lt;span class="hidden m:inline-block"&gt;
      on &lt;time&gt;
      May 2&lt;/time&gt;
    &lt;/span&gt;
&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;You stop having impostor syndrome when you have the realization that everything you're doing and going through is actually perfect for where you are in life. It can be your work or relationships or anything or finances. It doesn't matter. Everyone goes through the same. Think about it like this: you can't possibly know more than you actually know. Sounds elementary but it's amazing that we humans believe we should know more than we do, make more money than we do and be where we think we should be when right here is absolutely fine for this moment. Enjoy this moment and life takes care of itself.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;These are some &lt;a href="https://dev.to/devteam/what-was-your-win-this-week-29e4"&gt;really great wins&lt;/a&gt;, &lt;a class="mentioned-user" href="https://dev.to/devlorenz0"&gt;@devlorenz0&lt;/a&gt;
 ! And following &lt;a href="https://dev.to/devnews"&gt;DevNews&lt;/a&gt; is 100% a win  üòÉ&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/devlorenzo"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vti3cpRg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Kd7UvXKm--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_66%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/571015/e3d4ff5f-e11d-4538-bb83-9d3ce3e9dfb9.gif" alt="devlorenzo profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/devlorenzo"&gt;
        &lt;span class="comment-username"&gt;DevLorenzo&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/devlorenzo/comment/1e37c" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 30
  &lt;/time&gt;

    ‚Ä¢ Edited
    &lt;span class="hidden m:inline-block"&gt;
      on &lt;time&gt;
      Apr 30&lt;/time&gt;
    &lt;/span&gt;
&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Finally I have time to participate!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1. One of my articles reached the TOP of the week for the second time in a row&lt;/li&gt;
&lt;li&gt;2. I wrote my first paid article! &lt;/li&gt;
&lt;li&gt;3. I discovered that React can be really fun&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PS: I also followed DevNews, if that count as a win&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;It's &lt;a href="https://dev.to/devteam/join-us-for-the-first-dev-community-bug-smash-3plm"&gt;Bug Smash&lt;/a&gt; time! Good job on the find, &lt;a class="mentioned-user" href="https://dev.to/thomasbnt"&gt;@thomasbnt&lt;/a&gt;
 üòÇ! Have fun fixing the bugs &lt;a href="https://github.com/forem/forem/labels/Bug%20Smash"&gt;we've outlined in our repo&lt;/a&gt; for Bug Smash, everyone! &lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/thomasbnt"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--KObNX0HI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--R6v2MfmY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_66%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/18254/5bbbdf2e-fe47-4e8e-9a51-3b4e1dcde042.gif" alt="thomasbnt profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/thomasbnt"&gt;
        &lt;span class="comment-username"&gt;Thomas Bnt&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/thomasbnt/comment/1e65k" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    May  4
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;And here it is!  I found a bug in the matrix üòÜ&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This post on &lt;a href="https://dev.to/resourcefulmind/a-beginner-s-journey-into-software-development-in-nigeria-86b"&gt;journeying into coding in Nigeria&lt;/a&gt; is a fantastic, necessary read for any developer. Thanks for helping create a great community with this comment, &lt;a class="mentioned-user" href="https://dev.to/dammyreginal"&gt;@dammyreginal&lt;/a&gt;
.&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/dammyreginal"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--6cXDGrB7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--PAJ_AAG1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/623231/702125ba-6fff-45c7-b396-a25fade749bf.jpeg" alt="dammyreginal profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/dammyreginal"&gt;
        &lt;span class="comment-username"&gt;dammyreginal&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/dammyreginal/comment/1e2ia" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 30
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Once I finished reading this, I connected to it immediately. Thanks for putting this out. All we hear every other day is success stories of developers, no one talks about their struggles. Even family members feel you're wasting your time. They whine as if its their time you're using. Sometimes their encouragement is merely borne out of pity. For buffing software Developers its really crazy. Especially in a third world country like Nigeria. All the factors mentioned above us very true. However, to add a little to it is the fact that most job out there request for senior devs. Very little if any request for junior Developers, which would have been a fine way of growing their career. Me I'm open for any opportunity that comes my way. So if you know of any, please hit me up. I never studied computer science.  However, my love for IT and curiosity led me to be here right now. Started into IT with learning networking(Cisco). Then i learnt front end web designing from Shaw academy. That was back in 2016. I have taught this for a while. Then just some 4 months back I dived into backend using nodejs and I'm reallly loving the journey. I would state again that if there's opportunity for junior devs, I'd be ready to take the plunge. I need the experience as my present job has nothing to do with IT(I teach).&lt;br&gt;
Once again thanks @opeyemi stephen for the write up. That was really bold of you.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;See you next week for more great comments ‚úå&lt;/p&gt;

</description>
      <category>bestofdev</category>
    </item>
    <item>
      <title>Improving Django View Performance with Async Support</title>
      <author>Kyle Johnson</author>
      <pubDate>Thu, 06 May 2021 19:52:05 +0000</pubDate>
      <link>https://dev.to/kjpctech/improving-django-view-performance-with-async-support-52lp</link>
      <guid>https://dev.to/kjpctech/improving-django-view-performance-with-async-support-52lp</guid>
      <description>&lt;p&gt;&lt;a href="https://docs.djangoproject.com/en/3.1/topics/async/"&gt;Django 3.1 was recently released and along with it came support for asynchronous views.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To anyone that uses Django and works with lots of data from lots of different Web sources, this is a big deal. Supporting asynchronous views means cleaner code, a different way to think about things, and most importantly, the ability to dramatically improve performance of applications.&lt;/p&gt;

&lt;p&gt;But let‚Äôs back up a bit.&lt;/p&gt;

&lt;p&gt;If you‚Äôre unfamiliar with the term ‚Äúviews‚Äù, don‚Äôt worry, it‚Äôs an easy concept to understand.&lt;/p&gt;

&lt;p&gt;Views are key components of applications built in with the Django framework. At their very simplest, views are Python functions or classes that take a web request and produce a web response. Prior to Django 3.1, views had to run with Python threads. Now, views can run in an asynchronous event loop without Python threads. This means Python‚Äôs asyncio library can be used inside of Django views.&lt;/p&gt;

&lt;p&gt;According to the &lt;a href="https://docs.djangoproject.com/en/3.1/topics/async/"&gt;documentation&lt;/a&gt;:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-main-benefits-are-the-ability-to-service-hundreds-of-connections-without-using-python-threads"&gt;
  &lt;/a&gt;
  The main benefits are the ability to service hundreds of connections without using Python threads.
&lt;/h4&gt;

&lt;p&gt;There are other benefits as well including the use of Python‚Äôs &lt;a href="https://docs.python.org/3/library/asyncio-task.html#running-tasks-concurrently"&gt;asyncio.gather&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let‚Äôs say you have a view that makes four API calls. Even in a best case scenario, if each call takes only a second, it‚Äôs a total of four seconds if executed synchronously. And that‚Äôs the best case scenario.&lt;/p&gt;

&lt;p&gt;We can cut down on that time frame significantly and improve the situation overall by using Pythons concurrent.futures library.&lt;/p&gt;

&lt;p&gt;This makes it possible to make the four API calls in the previous example concurrently meaning the view could take roughly one second in total if using four workers with the ThreadPoolExecutor. By all accounts, the practice cuts down on the time needed and improves the calls.&lt;/p&gt;

&lt;p&gt;That‚Äôs important in a world where seconds matter and making someone wait around for an application to load can cause frustration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-realworld-example-tracking-montanas-yellowstone-river"&gt;
  &lt;/a&gt;
  A Real-World Example: Tracking Montana's Yellowstone River
&lt;/h2&gt;

&lt;p&gt;To illustrate how asynchronous views improve performance, I created an example project to display statistical data from the &lt;a href="https://waterdata.usgs.gov/nwis"&gt;United States Geological Survey (USGS)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The project makes six API calls to the USGS to collect data about six access points on the Yellowstone River in my home state of Montana. This data includes the volume of water moving at each access point at the time, known as discharge rate, as well as the gage height, which is the surface level of the water relative to its streambed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-1-the-synchronous-method"&gt;
  &lt;/a&gt;
  Example 1: The Synchronous Method
&lt;/h3&gt;

&lt;p&gt;Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_river_flow_and_height&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;site_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="s"&gt;"""
  Synchronous method to get river data from USGS
  """&lt;/span&gt;
  &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'https://waterservices.usgs.gov/nwis/iv/?format=json&amp;amp;sites=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;site_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;parameterCd=00060,00065&amp;amp;siteStatus=all'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parse_flow_and_height_from_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dashboard_v1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="s"&gt;"""
  Synchronous view that loads data one at a time
  """&lt;/span&gt;
  &lt;span class="n"&gt;start_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="n"&gt;river_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;site_id&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;SITES&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="n"&gt;river_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;SITES&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;site_id&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;get_river_flow_and_height&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;site_id&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'rivers/dashboard.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;'river_data'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;river_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;'version'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'v1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;'load_time'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jcbXr48Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://nextlinklabs.com/static/cb8ecefa3b6fcabb4313b17c16cfb5a1/52ae2/river-dashboard-v1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jcbXr48Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://nextlinklabs.com/static/cb8ecefa3b6fcabb4313b17c16cfb5a1/52ae2/river-dashboard-v1.png" alt="Version 1 Results Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The data loads and takes almost four seconds. For the purposes of this post, that‚Äôll be our baseline. Let‚Äôs see if we can improve that situation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-2-a-concurrent-view-loading-some-data-simultaneously"&gt;
  &lt;/a&gt;
  Example 2: A Concurrent View Loading Some Data Simultaneously
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dashboard_v2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="s"&gt;"""
  Concurrent view that loads some data simultaneously
  """&lt;/span&gt;
  &lt;span class="n"&gt;start_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="n"&gt;river_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

  &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;concurrent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;futures&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_workers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;executor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;site_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SITES&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;executor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_river_flow_and_height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SITES&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;())):&lt;/span&gt;
          &lt;span class="n"&gt;river_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;SITES&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;site_id&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'rivers/dashboard.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;'river_data'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;river_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;'version'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'v2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;'load_time'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8dZ7DNE4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://nextlinklabs.com/static/5ebd36374501096265fc54795b41ad3c/0e677/river-dashboard-v2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8dZ7DNE4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://nextlinklabs.com/static/5ebd36374501096265fc54795b41ad3c/0e677/river-dashboard-v2.png" alt="Version 2 Results Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we‚Äôre down to roughly 1.5 seconds and that‚Äôs a big improvement. Let‚Äôs see what happens when we leverage asynchronous views.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-3-the-asynchronous-method"&gt;
  &lt;/a&gt;
  Example 3: The Asynchronous Method
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_river_flow_and_height_async&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;site_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="s"&gt;"""
  Asynchronous method to get river data from USGS
  """&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;httpx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AsyncClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'https://waterservices.usgs.gov/nwis/iv/?format=json&amp;amp;sites=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;site_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;parameterCd=00060,00065&amp;amp;siteStatus=all'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parse_flow_and_height_from_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;


&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dashboard_v3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="s"&gt;"""
  Asynchronous view that loads data using asyncio
  """&lt;/span&gt;
  &lt;span class="n"&gt;start_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="n"&gt;river_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

  &lt;span class="n"&gt;datas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gather&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;get_river_flow_and_height_async&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;site_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;site_id&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;SITES&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()])&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;site_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SITES&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;datas&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="n"&gt;river_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;SITES&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;site_id&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'rivers/dashboard.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;'river_data'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;river_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;'version'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'v3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;'load_time'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pNPGvvrE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://nextlinklabs.com/static/18078f4a9265bc0718ef195c24dd1f48/7a2f6/river-dashboard-v3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pNPGvvrE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://nextlinklabs.com/static/18078f4a9265bc0718ef195c24dd1f48/7a2f6/river-dashboard-v3.png" alt="Version 3 Results Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wow, we got results back in just under a second. That‚Äôs roughly a three second improvement on the original method.&lt;/p&gt;

&lt;p&gt;This example shows pretty clearly how asynchronous views can be leveraged to drastically improve performance.&lt;/p&gt;

&lt;p&gt;View the full project on GitLab: &lt;a href="https://gitlab.com/nextlink/example-django-async-rivers"&gt;https://gitlab.com/nextlink/example-django-async-rivers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This post originally appeared on our &lt;a href="https://nextlinklabs.com/"&gt;blog at NextLink Labs&lt;/a&gt; where, among other things, we write about &lt;a href="https://nextlinklabs.com/services/devops-consulting-services"&gt;devops consulting&lt;/a&gt; &lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
      <category>api</category>
      <category>performance</category>
    </item>
    <item>
      <title>", hopefully" - An Intro to Git Hooks</title>
      <author>Brodan</author>
      <pubDate>Thu, 06 May 2021 19:43:27 +0000</pubDate>
      <link>https://dev.to/brodan/hopefully-an-intro-to-git-hooks-507c</link>
      <guid>https://dev.to/brodan/hopefully-an-intro-to-git-hooks-507c</guid>
      <description>&lt;p&gt;In yet another instance of a blog post inspired by a single tweet, this post will offer a &lt;em&gt;very&lt;/em&gt; basic introduction to git hooks (commit hooks, to be specific).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/BkVqfREIvC012/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/BkVqfREIvC012/giphy.gif" alt="I'm hooked GIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-tweet"&gt;
  &lt;/a&gt;
  The Tweet
&lt;/h1&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--9DuQr6CB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1308782458561851395/LwlNjTm5_normal.jpg" alt="Challah B√§ck Girl profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Challah B√§ck Girl
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @emgrasmeder
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      a post-commit hook that amends your commit message with ", hopefully"
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:29 PM - 04 May 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1389708730086957061" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1389708730086957061" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1389708730086957061" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I saw this on my timeline earlier today, had a good chuckle, and then realized that despite knowing &lt;em&gt;about&lt;/em&gt; git hooks for a long time, I've never actually written one. I decided to fix that by writing a dead simple hook that would recreate the aforementioned Tweet.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-code"&gt;
  &lt;/a&gt;
  The Code
&lt;/h1&gt;

&lt;p&gt;Start by initializing a new git repo as such:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;mkdir &lt;/span&gt;hook-testing
&lt;span class="nb"&gt;cd &lt;/span&gt;hook-testing
git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;git actually generates a number of sample hooks when you initialize a repo. You can see them all by running &lt;code&gt;ls .git/hooks/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you look closely, there's a hook named &lt;code&gt;prepare-commit-msg.sample&lt;/code&gt;. How convenient! This hook, once enabled, will run every time a &lt;code&gt;git commit&lt;/code&gt; command is run when working in this repo.&lt;/p&gt;

&lt;p&gt;You can read more about this hook in the &lt;a href="https://git-scm.com/docs/githooks#_prepare_commit_msg"&gt;githooks Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In order for git to actually pick up and run a hook, the &lt;code&gt;.sample&lt;/code&gt; extension must be removed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mv&lt;/span&gt; .git/hooks/prepare-commit-msg.sample .git/hooks/prepare-commit-msg
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open &lt;code&gt;.git/hooks/prepare-commit-msg&lt;/code&gt; in an editor and feel free to look at the examples. Then replace it all with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nv"&gt;COMMIT_MSG_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="nv"&gt;COMMIT_SOURCE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;

&lt;span class="nv"&gt;DREAM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;", hopefully"&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$COMMIT_SOURCE&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"message"&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;
&lt;span class="k"&gt;then
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="nv"&gt;$COMMIT_MSG_FILE&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;$DREAM&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$COMMIT_MSG_FILE&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I kept this hook pretty simple since my shell-scripting abilities are lackluster.&lt;/p&gt;

&lt;p&gt;git passes three arguments into the &lt;code&gt;prepare-commit-msg&lt;/code&gt; hook, but we only care about the first two:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;$1&lt;/code&gt; is the name of the file that contains the commit log message. We will append our optimistic message to this file.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;$2&lt;/code&gt; is the source of the commit message and is set according to how the commit is being generated (such as in a &lt;code&gt;merge&lt;/code&gt;, &lt;code&gt;squash&lt;/code&gt;, etc, or just a regular old &lt;code&gt;commit&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this case, the hook is only going to run if the commit source is &lt;code&gt;"message"&lt;/code&gt;, meaning that the commit was made using the &lt;code&gt;-m&lt;/code&gt; flag. Feel free to modify this to your liking.&lt;/p&gt;

&lt;p&gt;In order to see it in action, we need to commit something:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git commit &lt;span class="nt"&gt;--allow-empty&lt;/span&gt; &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"adding an empty commit"&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;master 1031a40] adding an empty commit, hopefully
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see above, the commit message was updated to include the &lt;code&gt;", hopefully"&lt;/code&gt; message. You can run &lt;code&gt;git log&lt;/code&gt; to see it again if you want to double-check.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-conclusion"&gt;
  &lt;/a&gt;
  The Conclusion
&lt;/h1&gt;

&lt;p&gt;I hope you found this post informative and entertaining. The hook itself is very simple but I actually learned a log about git internals while working on it.&lt;/p&gt;

&lt;p&gt;If you'd like to see the other posts I've written that were inspired entirely by Tweets, consider these:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.twilio.com/blog/john-mayer-customer-service-line-twilio-voice-python"&gt;Build John Mayer's Customer Service Line with Twilio Voice and Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/brodan/waifu-mms-bot-send-a-selfie-receive-a-waifu-4617"&gt;Waifu MMS Bot - Send a Selfie, Receive a Waifu &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>git</category>
      <category>shell</category>
    </item>
    <item>
      <title>.Net 5 API with GraphQL - Step by Step</title>
      <author>Mohamad Lawand</author>
      <pubDate>Thu, 06 May 2021 19:36:52 +0000</pubDate>
      <link>https://dev.to/moe23/net-5-api-with-graphql-step-by-step-2b20</link>
      <guid>https://dev.to/moe23/net-5-api-with-graphql-step-by-step-2b20</guid>
      <description>&lt;p&gt;In this article we will be learning about GraphQL with Asp.Net Core 5, we will be  building a Todo List functionality&lt;/p&gt;

&lt;p&gt;You can watch the full video on Youtube&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IoLtrxw98So"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;And you can get the source from GitHub using this link:&lt;br&gt;
&lt;a href="https://github.com/mohamadlawand087/v28-Net5-GraphQL"&gt;https://github.com/mohamadlawand087/v28-Net5-GraphQL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So what we will cover today:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Problem we want to solve&lt;/li&gt;
&lt;li&gt;What is GraphQL&lt;/li&gt;
&lt;li&gt;REST vs GraphQL&lt;/li&gt;
&lt;li&gt;Core Concepts&lt;/li&gt;
&lt;li&gt;Ingredients&lt;/li&gt;
&lt;li&gt;Coding&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As always you will find the source code in the description down below. Please like, share and subscribe if you like the video. It will really help the channel&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-problem-and-the-solution"&gt;
  &lt;/a&gt;
  The Problem and the Solution
&lt;/h3&gt;

&lt;p&gt;in order to understand graphQL let us understand the problem that it solves.&lt;/p&gt;

&lt;p&gt;It was originally built by facebook to solve their data fetching needs. back in 2012 when facebook released their application it had a lot of criticism about the performance, the lag, the  battery drainage as it was doing a lot of API calls to fetch the users data  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WT4ggoUO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gmytz4ikch5vqypggf4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WT4ggoUO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gmytz4ikch5vqypggf4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To solve this facebook introduced GraphQL which turns all of these request into a single request. With that single API endpoint we can retrieve any data from the server using the GraphQL query language. Where we tell the API exactly the information we want and the API will return it, this will solve for a bunch of the problems.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6vt6P53C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7tcloy2szv8kojitrvy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6vt6P53C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7tcloy2szv8kojitrvy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So let us analyse the query we have, we are actually nesting objects inside the same request we are requesting more information through the nested obj. We get back the result in json, so in Rest API it could have been multiple requests to get this information while in GraphQL it was a single call.&lt;/p&gt;

&lt;p&gt;We are taking what was a different requests and instead making the client the responsible for figuring out the logic of which the data needs to be processed to get the information we are delegating all of these requests to the server and requesting the server to handle the information binding based on the GraphQL query that we sent.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-graphql"&gt;
  &lt;/a&gt;
  What is GraphQL
&lt;/h3&gt;

&lt;p&gt;GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get many resources in a single request:&lt;/strong&gt; GraphQL queries access not just the properties of one resource but also smoothly follow references between them. While typical REST APIs require loading from multiple URLs, GraphQL APIs get all the data your app needs in a single request. &lt;/p&gt;

&lt;p&gt;GraphQL is about data trees, which allow us to get into relations. push back the data aggregation to the server side&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One Endpoint&lt;/li&gt;
&lt;li&gt;One Request&lt;/li&gt;
&lt;li&gt;Type System&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#graphql-vs-rest"&gt;
  &lt;/a&gt;
  GraphQL vs REST
&lt;/h3&gt;

&lt;p&gt;REST&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Multiple endpoints for different data type&lt;/li&gt;
&lt;li&gt;Chained requests to get the data we need&lt;/li&gt;
&lt;li&gt;Over-fetch: We get more information from what we need.&lt;/li&gt;
&lt;li&gt;Under-fetch: we get less data so we need to make a lot of requests to get the info&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GraphQL&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One Endpoint&lt;/li&gt;
&lt;li&gt;One Request with different mapping&lt;/li&gt;
&lt;li&gt;No Over-fetch&lt;/li&gt;
&lt;li&gt;No Under-fetch&lt;/li&gt;
&lt;li&gt;Type System&lt;/li&gt;
&lt;li&gt;Predictable&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#when-to-use-it"&gt;
  &lt;/a&gt;
  When to use it
&lt;/h3&gt;

&lt;p&gt;REST&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Non-Interactive (System to System)&lt;/li&gt;
&lt;li&gt;Microservices&lt;/li&gt;
&lt;li&gt;Simple Object Hierarchy&lt;/li&gt;
&lt;li&gt;Repeated Simple queries&lt;/li&gt;
&lt;li&gt;Easier to develop&lt;/li&gt;
&lt;li&gt;more complex to consume by clients&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GraphQL&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;real time applications&lt;/li&gt;
&lt;li&gt;mobile applications&lt;/li&gt;
&lt;li&gt;complex object hierarchy&lt;/li&gt;
&lt;li&gt;complex query&lt;/li&gt;
&lt;li&gt;Complicated to develop&lt;/li&gt;
&lt;li&gt;Easier to consume by clients&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#core-concepts"&gt;
  &lt;/a&gt;
  Core Concepts
&lt;/h3&gt;

&lt;p&gt;Schema: Describe the api in full, query, objects, datatypes and description. Some of its properties are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Self-documenting&lt;/li&gt;
&lt;li&gt;Formed of Types&lt;/li&gt;
&lt;li&gt;Must have a Root Query Type&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Types&lt;/strong&gt;: It can be anything some of the types are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Query&lt;/li&gt;
&lt;li&gt;Mutation&lt;/li&gt;
&lt;li&gt;Subscription&lt;/li&gt;
&lt;li&gt;Objects&lt;/li&gt;
&lt;li&gt;Enumeration&lt;/li&gt;
&lt;li&gt;Scalar&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Resolvers&lt;/strong&gt;: returns data for a given field&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data Source&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data Source&lt;/li&gt;
&lt;li&gt;Microservice&lt;/li&gt;
&lt;li&gt;Rest API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mutation: will allow us to edit and add data&lt;/p&gt;

&lt;p&gt;Subscription: a web socket base connection which will allow us to send real time messages once an action is executed.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#ingredients"&gt;
  &lt;/a&gt;
  Ingredients
&lt;/h3&gt;

&lt;p&gt;VS Code (&lt;a href="https://code.visualstudio.com/download"&gt;https://code.visualstudio.com/download&lt;/a&gt;)&lt;br&gt;
.Net 5 (&lt;a href="https://dotnet.microsoft.com/download"&gt;https://dotnet.microsoft.com/download&lt;/a&gt;)&lt;br&gt;
Insomnia (&lt;a href="https://insomnia.rest/download"&gt;https://insomnia.rest/download&lt;/a&gt;)&lt;br&gt;
Dbeaver (&lt;a href="https://dbeaver.io/download/"&gt;https://dbeaver.io/download/&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#hotchocolate"&gt;
  &lt;/a&gt;
  HotChocolate
&lt;/h3&gt;

&lt;p&gt;is an implementation of GraphQL and a framework for writing GraphQL servers in .Net Core. &lt;/p&gt;

&lt;p&gt;We need to check the version of dotnet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to install the entity framework tool&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet tool &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--global&lt;/span&gt; dotnet-ef
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once thats finish let us create our application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet new web &lt;span class="nt"&gt;-n&lt;/span&gt; TodoListGQL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to install the packages that we need&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet add package Microsoft.EntityFrameworkCore.Design
dotnet add package Microsoft.EntityFrameworkCore.Sqlite
dotnet add package HotChocolate.AspNetCore
dotnet add package HotChocolate.Data.EntityFramework
dotnet add package GraphQL.Server.Ui.Voyage
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now lets check our application and check the source code, lets build the application and see if its running&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet build
dotnet run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us start developing, the first thing we need to do is create our models and build our DbContext. Inside the root directory of our application let us create a new folder called Models and inside the Models folder let us create a 2 new classes called ItemData.cs and ItemList.cs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ItemData&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Description&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;Done&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ListId&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="n"&gt;ItemList&lt;/span&gt; &lt;span class="n"&gt;ItemList&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ItemList&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;ItemList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;ItemDatas&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;HashSet&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemData&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="n"&gt;ICollection&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemData&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ItemDatas&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to create our application db context so inside the root directory we create a new folder called Data and inside the Data folder will create a new class called ApiDbContext&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ApiDbContext&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DbContext&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="n"&gt;DbSet&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemData&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Items&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="n"&gt;DbSet&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemList&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Lists&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DbContextOptions&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;base&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;OnModelCreating&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ModelBuilder&lt;/span&gt; &lt;span class="n"&gt;modelBuilder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;OnModelCreating&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modelBuilder&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;modelBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemData&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;entity&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;HasOne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ItemList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WithMany&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ItemDatas&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;HasForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;OnDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DeleteBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Restrict&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;HasConstraintName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"FK_ItemData_ItemList"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to update our appsettings.json as well the startup class.&lt;/p&gt;

&lt;p&gt;First let us open the appsettings and add the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"ConnectionStrings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"DefaultConnection"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"DataSource=app.db; Cache=Shared"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us update the startup class to connect our application to the database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Startup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IConfiguration&lt;/span&gt; &lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Configuration&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IConfiguration&lt;/span&gt; &lt;span class="n"&gt;Configuration&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;ConfigureServices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IServiceCollection&lt;/span&gt; &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddDbContext&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseSqlite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;Configuration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetConnectionString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DefaultConnection"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we want to build our database, to do that we need utilise the ef core migrations&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet ef migrations add &lt;span class="s2"&gt;"Initial Migrations"&lt;/span&gt;
dotnet ef database update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the database update has completed successfully we can see we have a new folder called migrations which will contain the C# script which will be responsible on creating the database and its table Item. &lt;/p&gt;

&lt;p&gt;we can verify that the database has been created since we can see the app.db file in our root directory as well we can see that use the SQLite browser (dbeaver) to verify that the table has been created successfully.&lt;/p&gt;

&lt;p&gt;Now we need to start integrating GraphQL to our application, the first thing we are going to do is to add a new folder into the root of our applications which is called GraphQL.&lt;/p&gt;

&lt;p&gt;Now inside the GraphQL folder we are going to create a new class called Query.cs&lt;/p&gt;

&lt;p&gt;Our Query class will contain some methods which will return an IQueryable Result and this query class will be the endpoint we are going to utilise to get information back from the api&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Query&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Will return all of our todo list items&lt;/span&gt;
    &lt;span class="c1"&gt;// We are injecting the context of our dbConext to access the db&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IQueryable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemData&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetItem&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;Service&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to to update our startup class inside our ConfigureServices Method to utilise GraphQL and create an entry point for GraphQL and provide us with a schema construction&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddGraphQLServer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddQueryType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to update our endpoints&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseEndpoints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;endpoints&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;endpoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapGraphQL&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseGraphQLVoyager&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;VoyagerOptions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;GraphQLEndPoint&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/graphql"&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s"&gt;"/graphql-voyager"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us build our application and run it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet build
dotnet run

// http://localhost:5000/graphql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we navigate to &lt;a href="http://localhost:5000/graphql"&gt;http://localhost:5000/graphql&lt;/a&gt; we can see that we are utilising a UI which is provided for us by the HotChocolate nuget package that we installed. if we click on the schema button (book icon) we can see the main query that we have added called items based on the one we added in the query class.&lt;/p&gt;

&lt;p&gt;Let us open our database with dbeaver and add some information manually there then lets go back to our url &lt;a href="http://localhost:5000/graphql"&gt;http://localhost:5000/graphql&lt;/a&gt;  Now let us test our application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;so now let us update our query and introduce aliases which mean that we want to execute different commands in the same query similar to below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this request we are only getting 1 of the requests back while the others are generating errors why is that happening.&lt;/p&gt;

&lt;p&gt;The main reason behind this is that our application db context does not work in parallel which means when GraphQL try to execute the commands simultaneously it fails as  the db context can only work single threaded. &lt;/p&gt;

&lt;p&gt;To resolve this issue we need to use a new feature introduced in .Net 5 which is PooledDbContextFactory which we can use to resolve this error.&lt;/p&gt;

&lt;p&gt;The first place we need to change is our startup class inside our ConfigureServices Method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddPooledDbContextFactory&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseSqlite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;Configuration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetConnectionString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DefaultConnection"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The AddPooledDbContextFactory is basically creating instance of the ApiDbContext and putting them in a pool, when ever the db context is needed we can take an instance from the pool then return it once we finish using it.&lt;/p&gt;

&lt;p&gt;The next step we need to update the Query.cs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// So basically this attribute is pulling a db context from a pool&lt;/span&gt;
&lt;span class="c1"&gt;// using the db context &lt;/span&gt;
&lt;span class="c1"&gt;// returning the db context to the pool&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;UseDbContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IQueryable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemData&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetItems&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;ScopedService&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us run the application again and run the parallel queries again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;dotnet&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can see everything is running as it should be, next we are going to try to pul the information from the list so we are going to get the parent list and all the items that belong to the list&lt;/p&gt;

&lt;p&gt;let us add a new query in the query class&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;UseDbContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IQueryable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemList&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetLists&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;ScopedService&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Lists&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us try querying the data and check what do we get so inside insomnia we create a new request&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;lists&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;itemDatas&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we can see that the data which is being returned is not complete &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m-vm2Va9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/9518142d-cfdf-4863-bcbc-f314f3fa9c3b/Screenshot_2021-05-03_at_20.23.40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m-vm2Va9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/9518142d-cfdf-4863-bcbc-f314f3fa9c3b/Screenshot_2021-05-03_at_20.23.40.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/9518142d-cfdf-4863-bcbc-f314f3fa9c3b/Screenshot_2021-05-03_at_20.23.40.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So how do we solve this we need to enable projections inside our query to enable us to get obj children. Let us update the Query.cs class to the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;UseDbContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;UseProjection&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IQueryable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemList&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetLists&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;ScopedService&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Lists&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we need to update the startup class inside the ConfigureServices method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// This will be the entry point and will provide us with a schema &lt;/span&gt;
&lt;span class="c1"&gt;// construction&lt;/span&gt;
&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddGraphQLServer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddQueryType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddProjections&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now let us document our API, to accomplish this we need to update our models class first let us update the ItemData model&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;GraphQLDescription&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Used to define todo item for a specific list"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ItemData&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Description&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;GraphQLDescription&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"If the user has completed this item"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;Done&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;GraphQLDescription&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"The list which this item belongs to"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ListId&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="n"&gt;ItemList&lt;/span&gt; &lt;span class="n"&gt;ItemList&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us update our ItemList&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;GraphQLDescription&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Used to group the do list item into groups"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ItemList&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;ItemList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;ItemDatas&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;HashSet&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemData&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="n"&gt;ICollection&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemData&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ItemDatas&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now where can we see these documentation, since we have already added the GraphQL voyager nuget and we configured it in our startup class we need to visit this url: &lt;a href="http://localhost:5000/graphql-voyager"&gt;http://localhost:5000/graphql-voyager&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And we can see a graphical representation of our API and we can see the documentation that we added.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JUeIcg6V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ab28c866-07af-468e-8f2f-01f7e0e3a314/Screenshot_2021-05-03_at_20.42.37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JUeIcg6V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ab28c866-07af-468e-8f2f-01f7e0e3a314/Screenshot_2021-05-03_at_20.42.37.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ab28c866-07af-468e-8f2f-01f7e0e3a314/Screenshot_2021-05-03_at_20.42.37.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we need to do some breakup between our Models and the documentation and in order for us to achieve this we will use types&lt;/p&gt;

&lt;p&gt;Inside the GraphQL folder we need to create a new folders called Items and Lists. Once we create these folders let us create our first Type ListType.cs inside the Lists folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ListType&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ObjectType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemList&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="c1"&gt;// since we are inheriting from objtype we need to override the functionality&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IObjectTypeDescriptor&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemList&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Description&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Used to group the do list item into groups"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ItemDatas&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;Ignore&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ItemDatas&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResolveWith&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Resolvers&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetItems&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!,&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!))&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseDbContext&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Description&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This is the list of to do item available for this list"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

     &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Resolvers&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IQueryable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemData&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetItems&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ItemList&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ScopedService&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListId&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to create the ItemType inside GraphQL ‚áí Items folder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// since we are inheriting from objtype we need to override the functionality&lt;/span&gt;
&lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IObjectTypeDescriptor&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemData&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Description&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Used to define todo item for a specific list"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ItemList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResolveWith&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Resolvers&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!,&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!))&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseDbContext&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Description&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This is the list that the item belongs to"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Resolvers&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;ItemList&lt;/span&gt; &lt;span class="nf"&gt;GetList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ItemData&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ScopedService&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Lists&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FirstOrDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the types has been added we need to update our startup class to take advantage of the types so inside our Startup class in the ConfigureServices method we need to update to the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddGraphQLServer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddQueryType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
                        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemType&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
                        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ListType&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
                        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddProjections&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us build and run our application and check the schema&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;dotnet&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;
&lt;span class="n"&gt;dotnet&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to add filtering and sorting we need to update the Query class to the below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Query&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Will return all of our todo list items&lt;/span&gt;
    &lt;span class="c1"&gt;// We are injecting the context of our dbConext to access the db&lt;/span&gt;
    &lt;span class="c1"&gt;// this is called a resolver&lt;/span&gt;

    &lt;span class="c1"&gt;// So basically this attribute is pulling a db context from a pool&lt;/span&gt;
    &lt;span class="c1"&gt;// using the db context &lt;/span&gt;
    &lt;span class="c1"&gt;// returning the db context to the pool&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;UseDbContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;UseProjection&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;//=&amp;gt; we have remove it since we have used explicit resolvers&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;UseFiltering&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;UseSorting&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IQueryable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemData&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetItems&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;ScopedService&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;UseDbContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;UseProjection&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;//=&amp;gt; we have remove it since we have used explicit resolvers&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;UseFiltering&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;UseSorting&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IQueryable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemList&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetLists&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;ScopedService&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Lists&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we need to update the startup class ConfigureServices method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddGraphQLServer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddQueryType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ListType&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemType&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddProjections&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddSorting&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddFiltering&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us create a new query with filtering to see what how it works filtering&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;lists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;itemDatas&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;sorting query&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;lists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we want to cover mutation, and Mutation is when we want to add, edit and delete data.&lt;/p&gt;

&lt;p&gt;To implement mutation we need to add a new class inside our GraphQL folder and this mutation class will contain 2 methods 1 for adding Lists and 1 for adding list item&lt;/p&gt;

&lt;p&gt;Will start by adding the input and output model so inside the GraphQL ‚áí List we add 2 files AddListInput and AddListPayload&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;AddListPayload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ListType&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;AddListInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now we need to add our mutation class inside the GraphQL folder we add a new a class called Mutation&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// this attribute will help us utilise the multi threaded api db context&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;UseDbContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;AddListPayload&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;AddListAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AddListInput&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ScopedService&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ItemList&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Lists&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveChangesAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;AddListPayload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to update our startup class&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddGraphQLServer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddQueryType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ListType&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemType&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddMutationType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Mutation&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddProjections&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddSorting&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddFiltering&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us test it, we create a new request in insomnia and utilise mutation instead of query&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;mutation&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nf"&gt;addList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Food"&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;list&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;name&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we are going to add a second mutation to add list item so we start by adding the models inside the GraphQL ‚áí Items will add AddItemInput and AddItemPayload&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;AddItemInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;listId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;AddItemPayload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ItemData&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and we need now to update the mutation class&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;UseDbContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;AddItemPayload&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;AddItemAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AddItemInput&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ScopedService&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ItemData&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;Done&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;ListId&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listId&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveChangesAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;AddItemPayload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us test it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;mutation&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;addItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Bring laptop"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Bring the laptop with charger"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;listId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we are going to go through subscriptions&lt;/p&gt;

&lt;p&gt;A subscription is a real time event notification, we utilise a websocket to achieve this. &lt;/p&gt;

&lt;p&gt;Inside the GraphQL folder will create a new class called Subscription.cs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Subscribe&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Topic&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;ItemList&lt;/span&gt; &lt;span class="nf"&gt;OnListAdded&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;EventMessage&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ItemList&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we need to update the startup class to take advantage of websockets we update the Configure method with the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseWebSockets&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The second part we need to update in startup class is the ConfigureServices method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddGraphQLServer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddQueryType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ListType&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemType&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddMutationType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Mutation&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddSubscriptionType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Subscription&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddProjections&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddSorting&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddFiltering&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddInMemorySubscriptions&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to update our mutations so once we add a new list item we are sending an update to the subscriptions&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// this attribute will help us utilise the multi threaded api db context&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;UseDbContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;AddListPayload&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;AddListAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;AddListInput&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ScopedService&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Service&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ITopicEventSender&lt;/span&gt; &lt;span class="n"&gt;eventSender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;CancellationToken&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ItemList&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Lists&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveChangesAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// we emit our subscription&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;eventSender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SendAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;nameof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Subscription&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OnListAdded&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;AddListPayload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>graphql</category>
      <category>dotnet</category>
      <category>csharp</category>
      <category>api</category>
    </item>
    <item>
      <title>Use AWS CloudFront Functions for URI Rewrites</title>
      <author>Ross Wickman</author>
      <pubDate>Thu, 06 May 2021 19:27:21 +0000</pubDate>
      <link>https://dev.to/aws-builders/use-aws-cloudfront-functions-for-uri-rewrites-587d</link>
      <guid>https://dev.to/aws-builders/use-aws-cloudfront-functions-for-uri-rewrites-587d</guid>
      <description>&lt;p&gt;With just over one week to move a customer application from one data center into our managed service environment, I was provided with a new (to me) requirement. The requirement was to configure URI redirects for their web application. This didn't seem like a huge concern at the immediate request. I figured I'd just put a couple of listener rules on the Application Load Balancer (ALB) and call it good doing what all DevOps engineers do...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Agl-JHDu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620326441535/m6WTB2j1T.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Agl-JHDu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620326441535/m6WTB2j1T.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That was before I received the spreadsheet with almost 60 (known) redirects. More potentially to come.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-to-do"&gt;
  &lt;/a&gt;
  What to do?
&lt;/h2&gt;

&lt;p&gt;I didn't want to make an already complicated solution more complicated.&lt;/p&gt;

&lt;p&gt;I knew I had limits to the number of rules allowed in Load Balancer Listeners.&lt;/p&gt;

&lt;p&gt;I wasn't interested in adding or modifying any Lambda@Edge functions managing my Content Security Policies.&lt;/p&gt;

&lt;p&gt;Fortunately for me, right at the time of receiving this new requirement, AWS Announced CloudFront Functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-isare-cloudfront-functions"&gt;
  &lt;/a&gt;
  What is/are CloudFront Functions?
&lt;/h2&gt;

&lt;p&gt;...a new serverless edge compute capability. You can use this new CloudFront feature to run JavaScript functions across 225+ CloudFront edge locations in 90 cities across 47 countries.... ( &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/05/cloudfront-functions/"&gt;read the full announcement here&lt;/a&gt; ).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-could-cloudfront-functions-help-me"&gt;
  &lt;/a&gt;
  How could CloudFront Functions help me?
&lt;/h2&gt;

&lt;p&gt;Aside from the rule limits imposed on me by ALB Listeners such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;100 total rules per ALB&lt;/li&gt;
&lt;li&gt;5 conditions per rule&lt;/li&gt;
&lt;li&gt;5 wildcards per rule&lt;/li&gt;
&lt;li&gt;5 weighted target groups per rule&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I would have had to use wildcards to make some of the rewrites work. You can use your imagination and the following example to see how this may not produce a favorable outcome.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-case-example"&gt;
  &lt;/a&gt;
  Use case example
&lt;/h3&gt;

&lt;p&gt;Imagine a website like  &lt;a href="https://www.allrecipes.com/"&gt;AllRecipies&lt;/a&gt;  wanting to redirect certain recipes to new or improved names.&lt;/p&gt;

&lt;p&gt;Consider &lt;em&gt;Homemade Mac and Cheese&lt;/em&gt; served here:&lt;br&gt;
&lt;a href="https://www.allrecipes.com/recipe/11679/homemade-mac-and-cheese/"&gt;https://www.allrecipes.com/recipe/11679/homemade-mac-and-cheese/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's say for example sake the &lt;code&gt;11679&lt;/code&gt; in that URI is a catalog of recipes. AllRecipies may want to redirect anything that isn't a successful hit to a different catalog of recipes. So they use a wildcard like:&lt;br&gt;
&lt;a href="https://www.allrecipes.com/recipe/11679/*"&gt;https://www.allrecipes.com/recipe/11679/*&lt;/a&gt; to push all requests to &lt;a href="https://www.allrecipies.com/summer21/"&gt;https://www.allrecipies.com/summer21/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What happens is now &lt;a href="https://www.allrecipes.com/recipe/11679/homemade-MOUSE-and-cheese/"&gt;https://www.allrecipes.com/recipe/11679/homemade-MOUSE-and-cheese/&lt;/a&gt; successfully redirects with a &lt;code&gt;200&lt;/code&gt; response instead of going to a &lt;code&gt;404&lt;/code&gt; Page Not Found. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE:&lt;/em&gt; oddly enough, AllRecipes is actually doing some magic to forward that URL to the correct recipe.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-cloudfront-functions-for-uri-rewrites"&gt;
  &lt;/a&gt;
  Using CloudFront Functions for URI Rewrites
&lt;/h2&gt;

&lt;p&gt;Being under the gun to come up with a solution, I immediately took a stab at CloudFront Functions. I'm honestly not sure how I got  &lt;a href="https://gist.github.com/rosswickman/f60d3dc9eb2459fe74a0d6c7c376882c"&gt;this&lt;/a&gt; to work after the first attempt, so I'm interested in getting anyone's feedback on this implementation.&lt;/p&gt;

&lt;p&gt;To accommodate an unknown amount of future requests for rewrites, I tweaked and implemented the example provided in the &lt;a href="https://aws.amazon.com/blogs/aws/introducing-cloudfront-functions-run-your-code-at-the-edge-with-low-latency-at-any-scale/"&gt;CloudFront Functions Introduction Blog&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-implementation"&gt;
  &lt;/a&gt;
  My implementation
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function handler(event) {
  var request = event.request;
  var rewrites = [
    ['/summer21','/recipies?year=2021&amp;amp;season=summer'],
    ['/recipies/homemade-mouse-and-cheese/', '/recipies/homemade-mac-and-cheese/'],
    ['/recipies/camping/grilling', '/recipies?activities=camping&amp;amp;with=grill']
  ]

  for (var arrayIndex in rewrites){
    if (request.uri == rewrites[arrayIndex][0]) {
      var newUri = rewrites[arrayIndex][1];

      var response = {
        statusCode: 301,
        statusDescription: 'Permanently moved',
        headers: {
          "location": { "value": newUri }
        }
      }
      return response;
    }
  }
  return request;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#making-the-solution-more-robust"&gt;
  &lt;/a&gt;
  Making the solution more robust
&lt;/h2&gt;

&lt;p&gt;This CloudFront Function appears to be working as expected. This example allows you to redirect any URI pattern and forward it to a new path or include a search query for client or server-side functionality. All while using JavaScript at the Edge. Without a doubt, this could be modified to further accommodate query strings in the request.&lt;/p&gt;

&lt;p&gt;I typically like to deploy my solutions via CloudFormation specifically because this is for a customer; however, at the time of this post and the function implementation, the CloudFormation Team has not released an update to the User Guide for creating this as a managed resource in CloudFormation. I am told it should be released soon. Once I have the information, I will try to get back here and provide a CloudFormation Template in an update.&lt;/p&gt;

&lt;p&gt;Until then, if you are looking to try this out or implement CloudFront Functions in your own environment, I encourage you to checkout  &lt;a href="https://dev.to/aws-builders/aws-cloud-front-functions-471c"&gt;this blog&lt;/a&gt; post by a fellow AWS Community Builder. &lt;/p&gt;

&lt;p&gt;Please do not hesitate to comment below how you decide to implement CloudFront Functions, this specific function, or better yet how I can make this specific function even better.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloudfront</category>
      <category>functions</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
