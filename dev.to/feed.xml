<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to make a vaccine tracker using CoWin public API</title>
      <author>Web_Codr</author>
      <pubDate>Sat, 05 Jun 2021 06:31:30 +0000</pubDate>
      <link>https://dev.to/web_dev/how-to-make-a-vaccine-tracker-using-cowin-public-api-826</link>
      <guid>https://dev.to/web_dev/how-to-make-a-vaccine-tracker-using-cowin-public-api-826</guid>
      <description>&lt;p&gt;In this blog I have shown how can you create a simple vaccine tracker using Cowin Public API. The coding language used in this tutorial is PHP - cURL. All the source code and can be downloaded or copied from the link below&lt;br&gt;
&lt;a rel="nofollow" href="https://codewithbishal.com/example/cowin-vaccine-tracker-php"&gt;Vaccine tracker using CoWin API&lt;/a&gt;&lt;br&gt;
View More :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a rel="nofollow" href="https://codewithbishal.com/example/responsive-image-gallery"&gt;Responsive Image gallery with hover effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel="nofollow" href="https://codewithbishal.com/example/css-login-form"&gt;beautiful login form using HTML and CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At first, on our webpage, there is a preview of our vaccine tracker, then there are a few QNA and an overview of the blog. There is a button to copy and Download the codes.&lt;/p&gt;

&lt;p&gt;You can view, copy and download the source code files through the link given below. &lt;a rel="nofollow" href="https://codewithbishal.com/example/cowin-vaccine-tracker-php"&gt;View and Download Source Code&lt;/a&gt; &lt;/p&gt;

</description>
    </item>
    <item>
      <title>List Rendering in React</title>
      <author>Moni</author>
      <pubDate>Sat, 05 Jun 2021 06:21:09 +0000</pubDate>
      <link>https://dev.to/moni_coder/list-rendering-in-react-5dch</link>
      <guid>https://dev.to/moni_coder/list-rendering-in-react-5dch</guid>
      <description>&lt;p&gt;&lt;strong&gt;Why we need List Rendering in React&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Whenever we need to render same type of components or elements multiple time (with different data) than we use List rendering to automate rendering&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to do List Rendering in React&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;Javascript map() operator  (Introduced in ES6) is used for List Rendering.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benefits&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Reduces Line of code&lt;/li&gt;
&lt;li&gt;Automates Rendering&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;STATIC WAY : NOT EFFICIENT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5T24Llvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gd86idvlz7a9a2xaadvd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5T24Llvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gd86idvlz7a9a2xaadvd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;USING MAP&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NseC6l_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qaqu2fabsadv23dfgrww.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NseC6l_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qaqu2fabsadv23dfgrww.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can follow me on my youtube videos channel.&lt;/p&gt;

&lt;p&gt;Videos in Hindi&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/TPcG1fg7_Yg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KzpayhfZEfM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>5 Projects in JavaScript for Beginners</title>
      <author>Yash Mantri</author>
      <pubDate>Sat, 05 Jun 2021 06:13:23 +0000</pubDate>
      <link>https://dev.to/yashmantri20/5-projects-in-javascript-for-beginners-4dfl</link>
      <guid>https://dev.to/yashmantri20/5-projects-in-javascript-for-beginners-4dfl</guid>
      <description>&lt;p&gt;𝟬. 𝗧𝗼𝗱𝗼 𝗔𝗽𝗽 Build a simple Todo App where users can Add, Update and Delete the task.&lt;/p&gt;

&lt;p&gt;𝟭. 𝗪𝗲𝗮𝘁𝗵𝗲𝗿 𝗔𝗽𝗽 You can display the weather of various locations. Use OpenWeatherMap API for displaying the weather details.&lt;/p&gt;

&lt;p&gt;𝟮. 𝗣𝗼𝗿𝘁𝗳𝗼𝗹𝗶𝗼 Build your portfolio using Html, CSS, and JavaScript.&lt;/p&gt;

&lt;p&gt;𝟯. 𝗤𝘂𝗶𝘇 𝗔𝗽𝗽 Everybody love's to take part in Quiz. So, it could be a great idea to develop a quiz app using JavaScript, Html, and CSS.&lt;/p&gt;

&lt;p&gt;𝟰. 𝗚𝗶𝘁𝗵𝘂𝗯 𝗙𝗶𝗻𝗱 𝗮𝗻𝗱 𝗖𝗼𝗺𝗽𝗮𝗿𝗲 You can use Github API to fetch the details. And then, you can make a comparison app between two users or show all the details of the users like Total Stars, Total Repos, etc.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>6 Steps to publish your Chrome Extension in chrome web store</title>
      <author>vinaynvd</author>
      <pubDate>Sat, 05 Jun 2021 05:56:02 +0000</pubDate>
      <link>https://dev.to/vinaynvd/6-steps-to-publish-your-chrome-extension-in-chrome-web-store-14ah</link>
      <guid>https://dev.to/vinaynvd/6-steps-to-publish-your-chrome-extension-in-chrome-web-store-14ah</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--80z1Te1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/10000/1%2AzjKjIXqlWgfbSbR_SayHHA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--80z1Te1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/10000/1%2AzjKjIXqlWgfbSbR_SayHHA.jpeg" alt="[Web development vector from freepik.com created by upklyak][6 Steps to publish your chrome extension in chrome web store](https://www.freepik.com/vectors/man)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Heya&lt;/em&gt;&lt;/strong&gt;!!&lt;br&gt;
I’m going to show how to &lt;strong&gt;publish our chrome extension&lt;/strong&gt; to the &lt;strong&gt;chrome webstore.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before that, Please read my part 1 article [&lt;a href="https://vinaynvd72.medium.com/is-it-hard-to-create-a-chrome-extension-using-angular-d9fd6a5740f3"&gt;6 steps to create a Chrome Extension using Angular&lt;/a&gt;] if you haven’t read. Part 1 article covers about creating a chrome extension (&lt;a href="https://chrome.google.com/webstore/detail/browser-notes/goejhefllnefpaocmedbdmfnekhnhien"&gt;browser-notes chrome extension&lt;/a&gt;) &amp;amp; testing it locally.&lt;/p&gt;

&lt;p&gt;Before publishing our extension, I’m going to add a new feature to the chrome extension which we’ve developed in the previous article &amp;amp; then we can publish our extension.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-export-to-html-feature-for-our-browser-notes-extension"&gt;
  &lt;/a&gt;
  Adding “Export to HTML” Feature for our browser notes extension.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_IcJh4M9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AXbSjjp2QKd9KuuOyQLqiOg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_IcJh4M9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AXbSjjp2QKd9KuuOyQLqiOg.png" alt="Browser notes extension with Export to HTML button (feature)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’m adding the project’s github repo link &lt;a href="https://github.com/vinaynvd/browser-notes-extension"&gt;here&lt;/a&gt;. You can refer &lt;a href="https://github.com/vinaynvd/browser-notes-extension/blob/main/src/app/components/notes-editor/"&gt;notes-editor component&lt;/a&gt; in this project.&lt;/p&gt;

&lt;p&gt;In this component I’ve added **Export to HTML **button.&lt;br&gt;
You can refer to this path in my repo &lt;a href="https://github.com/vinaynvd/browser-notes-extension/tree/main/src/app/components/notes-editor"&gt;browser-notes-extension/src/app/notes-editor&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When a user clicks Export to HTML button, extension is going to download their copied/typed content in the form of html file. &lt;br&gt;
Also, what ever you type or paste in our extension, It’s going to save in user’s browser local storage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This extension will use your browser’s local storage to store content&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now let’s go publishing our chrome extension into the chrome web store.&lt;br&gt;
Here are the 6 steps to publish your Chrome extension successfully in to the chrome webstore.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-register-for-a-google-developer-account"&gt;
  &lt;/a&gt;
  Step 1 : Register for a Google developer account
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;A Developer account&lt;/strong&gt; is a normal google account that is used for &lt;strong&gt;publishing **extensions or apps on **Play Store&lt;/strong&gt; &lt;strong&gt;or Web Store&lt;/strong&gt;. &lt;br&gt;
We need this account to publish our extension in to the chrome webstore. It’s easy to create a developer account, You need to &lt;strong&gt;spend 5$&lt;/strong&gt; as one time signup fee. Then you will be able to &lt;strong&gt;publish&lt;/strong&gt; &lt;strong&gt;up to&lt;/strong&gt; &lt;strong&gt;20&lt;/strong&gt; different &lt;strong&gt;extensions&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-creating-new-item"&gt;
  &lt;/a&gt;
  Step 2 : Creating New Item
&lt;/h2&gt;

&lt;p&gt;Once you are an owner of Google developers account, you can go to your developer’s dashboard. Here’s how it looks&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UhgTeYmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/1%2ASG4RTtdnZ2rMNISKGDan3Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UhgTeYmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/1%2ASG4RTtdnZ2rMNISKGDan3Q.png" alt="Google developer’s dashboard of a user"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To publish our extension, click on new Item. It’s going to ask the zip file of your chrome extension project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DbR0R7oV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AygI8Ols8mV4epxQzRWXMxA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DbR0R7oV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AygI8Ols8mV4epxQzRWXMxA.png" alt="Drop zip file in google developer’s dashboard."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In our Angular application case, we’ve already built our extension in dist directory by running this command &amp;amp; zipped it. You can refer the step 5 of part 1 &lt;a href="https://vinaynvd72.medium.com/is-it-hard-to-create-a-chrome-extension-using-angular-d9fd6a5740f3"&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ng build --prod
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;After generating the build of our extension, you can go to **dist **directory &amp;amp; zip the browser-notes folder. Drag &amp;amp; drop that zip file in Add new item dialog in developers dashboard.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-store-listing"&gt;
  &lt;/a&gt;
  Step 3 : Store Listing
&lt;/h2&gt;

&lt;p&gt;When you’ve successfully added your zip file in step 2. It’s going to take you to store listing page. By default this page is going to read the values like Title, version..etc from the manifest.json file (which is in your zip file).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4AV1BW7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3656/1%2AfSL5inp9awCIi2pL7K_8Og.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4AV1BW7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3656/1%2AfSL5inp9awCIi2pL7K_8Og.png" alt="Store listing page of chrome extension."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My extension was rejected when my description was too short &amp;amp; it contains excessive &amp;amp; irrelevant keywords. So I got a mail like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JJ66u3Lo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2ABon534jCkGz22xEM0bD3lw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JJ66u3Lo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2ABon534jCkGz22xEM0bD3lw.png" alt="Chrome extension rejection mail"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For successful approval of your extension, please note these points&lt;/strong&gt;, &lt;br&gt;
&lt;strong&gt;1. **Need to write a **long explanatory description&lt;/strong&gt;, which was &lt;strong&gt;approved&lt;/strong&gt; for the very next day.&lt;br&gt;
&lt;strong&gt;2.&lt;/strong&gt; We need to have &lt;strong&gt;store icon&lt;/strong&gt; of &lt;strong&gt;128x128 **pixels.&lt;br&gt;
**3.&lt;/strong&gt; Need to provide &lt;strong&gt;at least 1 screenshot&lt;/strong&gt; whose &lt;strong&gt;size **should be **1280x800&lt;/strong&gt; or &lt;strong&gt;600x400&lt;/strong&gt;. You can provide a maximum of 5 screenshots.&lt;br&gt;
&lt;strong&gt;4.&lt;/strong&gt; Need to provide 1 &lt;strong&gt;small promo tile&lt;/strong&gt; of 440x280 size &amp;amp; &lt;strong&gt;Large promo tile&lt;/strong&gt; of size 920x680 &amp;amp; **Marquee promo tile **of size 1400x560.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-privacy-practices"&gt;
  &lt;/a&gt;
  Step 4: Privacy practices
&lt;/h2&gt;

&lt;p&gt;After filling form in your store listing page, you’ll be redirected to **Privacy practices **page. Here you need to provide the following information.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Single purpose&lt;/strong&gt; : An extension must have a single purpose that is narrow and easy-to-understand.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Permission justification&lt;/strong&gt; : Are you using the remote code, if Y*&lt;em&gt;es **then provide the **justification&lt;/em&gt;&lt;em&gt;. In our case N&lt;/em&gt;&lt;em&gt;o.
**3. **Data usage *&lt;/em&gt;: What user data do you plan to collect from users now or in the future ? In our case, we collect only website content like text, images, hyperlinks..etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally you need to check these disclosures in Privacy practices&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--labrHwKp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A7eaNj7kGkhbpIxf9hBfReQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--labrHwKp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A7eaNj7kGkhbpIxf9hBfReQ.png" alt="disclosures to comply with our [Developer Program Policies](https://developer.chrome.com/webstore/program_policies)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5-payments-amp-distribution"&gt;
  &lt;/a&gt;
  Step 5 : Payments &amp;amp; Distribution
&lt;/h2&gt;

&lt;p&gt;Here in this step, you need to setup your payment, if you want to monetize your extension. Right now, I’m publishing this extension for free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wv948_DB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3522/1%2AOnJWI1CPb3imDLkmeQ5ACw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wv948_DB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3522/1%2AOnJWI1CPb3imDLkmeQ5ACw.png" alt="Payments &amp;amp; Distribution page in chrome webstore developers dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can select the visibility of your extension to **Public, Private or Unlisted. **Distribution, Here if you want to make your extension available to **All Regions, **you can do that or you can select the countries listed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DAIU_dzR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3006/1%2Aub7IQxhagm-QZ0FYn-fCbA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DAIU_dzR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3006/1%2Aub7IQxhagm-QZ0FYn-fCbA.png" alt="Distribution step with countries."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-6-submit-for-review"&gt;
  &lt;/a&gt;
  Step 6 : Submit for review
&lt;/h2&gt;

&lt;p&gt;This is the final step to submit your chrome extension for review. Here All apps go through an automated review process and in some cases, an app will be published without further manual review. There may be some instances in which a manual review will be required before the app is published based on chrome extension &lt;a href="https://developer.chrome.com/docs/webstore/program_policies/"&gt;program policies&lt;/a&gt;. In some cases, where sensitive permissions are requested, review times and/or approval times may be longer.&lt;/p&gt;

&lt;p&gt;Before hitting &lt;strong&gt;submit for review **button, I suggest hit **Save draft **button first. &lt;br&gt;
Once your application is submitted &amp;amp; their review is done &amp;amp; approved, you will get an **email **like this from **chrome webstore.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HIj5Lrwe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AT13HWrSU7cVnjheyxQ9mOA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HIj5Lrwe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AT13HWrSU7cVnjheyxQ9mOA.png" alt="Chrome extension approved mail after review for publishing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally you can see your extension in chrome webstore, when you hit the **Link to published item.&lt;br&gt;
**Here’s our Browser notes extension published in chrome webstore. &amp;amp; Here’s the &lt;a href="https://chrome.google.com/webstore/detail/browser-notes/goejhefllnefpaocmedbdmfnekhnhien"&gt;Browser notes extension link in chrome web store&lt;/a&gt;. &lt;br&gt;
Yayy!! I already had 5 users &amp;amp; 2 reviews. &lt;br&gt;
Come on!! Don’t feel shy to try our extension too 😉&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j7kI56se--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2138/1%2A2DPh-Oi_r0FgWyID7QS2fQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j7kI56se--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2138/1%2A2DPh-Oi_r0FgWyID7QS2fQ.png" alt="Browser notes extension page in chrome webstore"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Here in this article, we’ve seen how to publish our extension successfully in chrome webstore. Building &amp;amp; publishing chrome extension is easy, Use your creativity &amp;amp; publish your own extension in the web store. &lt;br&gt;
Hope, this article helped you to begin your journey to successfully publish your extension.&lt;/p&gt;

&lt;p&gt;Want to thank me ? Please show your Support &amp;amp; Love by buying me a coffee ☕ by hitting the below link 😃&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/vinaynvd"&gt;https://www.buymeacoffee.com/vinaynvd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks Alot!! 🙂&lt;/p&gt;

</description>
      <category>chromewebstore</category>
      <category>chromeextension</category>
      <category>publishextension</category>
      <category>publishchromewebstoreextension</category>
    </item>
    <item>
      <title>I made a new JavaScript operator!</title>
      <author>Siddharth</author>
      <pubDate>Sat, 05 Jun 2021 05:38:16 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/i-made-a-new-javascript-operator-ki8</link>
      <guid>https://dev.to/siddharthshyniben/i-made-a-new-javascript-operator-ki8</guid>
      <description>&lt;p&gt;Can you figure out how?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// The new arrow operator – goes from one number to another&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// x goes to 0&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="runkit-element"&gt;
  &lt;code&gt;
    
  &lt;/code&gt;
  &lt;code&gt;
    
let x = 10;
// The new arrow operator – goes from one number to another
while (x --&amp;gt; 0) { // x goes to 0
  console.log(x)
}

  &lt;/code&gt;
&lt;/div&gt;



</description>
      <category>javascript</category>
    </item>
    <item>
      <title>What a great journey with Dev.to !!</title>
      <author>Rajesh Kumar Yadav</author>
      <pubDate>Sat, 05 Jun 2021 05:14:55 +0000</pubDate>
      <link>https://dev.to/rajeshkumaryadavdotcom/journey-with-dev-to-4iaa</link>
      <guid>https://dev.to/rajeshkumaryadavdotcom/journey-with-dev-to-4iaa</guid>
      <description>&lt;p&gt;Hey, there 👋,&lt;/p&gt;

&lt;p&gt;Thanks for dropping by. I hope you spend a couple minutes reading my articles, today I've completed one month of journey with dev.to and want to express my journey experience with you.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#a-few-lines-about-my-work-and-me"&gt;
  &lt;/a&gt;
  ✋ A few lines about My Work and Me
&lt;/h1&gt;

&lt;p&gt;I am Rajesh, a technology specialist by profession and a technical blogger by passion. I am passionate about knowledge sharing, open-source contributions, connecting to people, and mentoring.&lt;/p&gt;

&lt;p&gt;After spending a decade with software development and web programming, I finally got the wisdom 💡 to start my blog a couple of years ago as &lt;code&gt;DevelopersDiscussion.com&lt;/code&gt; and thereafter I found a great dev community as &lt;code&gt;dev.to&lt;/code&gt; and I started writing here as well, based on my efforts and consistency dev.to has promoted me with a badge and now I'm moderator as well. Believe me or not, blogging is one of the wisest decision I have taken so far. Sharing is indeed the best way to gain knowledge 👨🏻‍🎓.&lt;/p&gt;

&lt;p&gt;I write articles on HTML, CSS, JavaScript, Angular, React, Node.js, XSLT, XML, AWS, Servers, CI/CD, Mobile Web Technologies,  Machine Learning, Software Development, Blogging, and Leadership. If you are interested in any of these, you may find my articles very useful. So please give it a try and follow me for updates.&lt;/p&gt;

&lt;p&gt;You can read more about me at &lt;a href="https://rajeshkumaryadav.com"&gt;RajeshKumarYadav.com&lt;/a&gt; and you can show your support as well.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-do-i-need-your-support"&gt;
  &lt;/a&gt;
  🤝 Why do I need your Support?
&lt;/h1&gt;

&lt;p&gt;First of all, Thank You very much 🙏 for reading, liking, commenting on my articles. The biggest motivation behind consistent content creation is &lt;code&gt;YOU&lt;/code&gt;, my readers.&lt;/p&gt;

&lt;p&gt;As you know, writing quality articles takes time and effort. Therefore, if you have enjoyed my articles or it was helpful to you, please consider showing your thanks by buying a coffee for me. It will surely motivate me further to write excellent content in the future 😊.&lt;/p&gt;

&lt;p&gt;You Can click on the &lt;code&gt;Buy Me A Coffee&lt;/code&gt; button at the bottom of the articles.&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/rkycom"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can extend your support by following me on Twitter(@rky_com), &lt;/p&gt;

&lt;p&gt;🙏 Thank You&lt;br&gt;
Thanks for sponsoring &amp;amp; supporting!&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>motivation</category>
      <category>discuss</category>
    </item>
    <item>
      <title>New At HTML? Watch this if you are new at HTML.</title>
      <author>Angwyn-Developer</author>
      <pubDate>Sat, 05 Jun 2021 04:55:30 +0000</pubDate>
      <link>https://dev.to/angwyndeveloper/new-at-html-watch-this-if-you-are-new-at-html-565j</link>
      <guid>https://dev.to/angwyndeveloper/new-at-html-watch-this-if-you-are-new-at-html-565j</guid>
      <description>&lt;p&gt;if you are new to coding, HTML is the right code for you. because html is very easy and suitable for beginners. first of all the application you need is a code editor, suitable code editor for html is notepad++ (for me, code editor is not necessarily the same, you can use: Notepad, Sublime, Atom, etc) if you want to use notepad++ go to this website : &lt;a href="https://notepad-plus-plus.org/downloads/"&gt;https://notepad-plus-plus.org/downloads/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OK.if you already download the Code Editor, Open the code editor, and Click File &amp;gt; New Or "Ctrl + N" And Save or Save As, Then rename it "index.html" ,so the text file can be a html file, after that u can type your first code :)&lt;/p&gt;

&lt;pre&gt;&lt;span&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;head&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;&amp;lt;html&amp;gt; element to know that the file is html, this element must be on the first line.&lt;/p&gt;

&lt;p&gt;&amp;lt;head&amp;gt; element for the title element, the title element is useful for changing the name of your website website&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;span&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;title&amp;gt;&lt;/span&gt;This Is TITLE.&lt;span&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;if you write the code correctly then the browser title is "This is TITLE".&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Header&lt;/u&gt;&lt;br&gt;
the header element is useful for displaying jumbo/large letters, the header element has many font sizes, there are &amp;lt;h1&amp;gt;, &amp;lt;h2&amp;gt;, &amp;lt;h3&amp;gt;, to &amp;lt;h6&amp;gt;&lt;/p&gt;

&lt;p&gt;Code:&lt;/p&gt;

&lt;pre&gt;&lt;span&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Header Tutorial&lt;span&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;This is Header 1 &lt;span&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;if you typed the code correctly then the result is like this...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p79tuDYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1sobeg9w3b63a50q42k.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p79tuDYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1sobeg9w3b63a50q42k.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To be continued...&lt;br&gt;
See you in part 2...&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>html</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to make Responsive Website Using HTML CSS JavaScript Step By Step</title>
      <author>fahim kabir</author>
      <pubDate>Sat, 05 Jun 2021 04:27:55 +0000</pubDate>
      <link>https://dev.to/fahimkabir/how-to-make-responsive-website-using-html-css-javascript-step-by-step-1ej2</link>
      <guid>https://dev.to/fahimkabir/how-to-make-responsive-website-using-html-css-javascript-step-by-step-1ej2</guid>
      <description>&lt;p&gt;Hi there 👋,&lt;/p&gt;

&lt;p&gt;Checkout my recently made responsive agency website.&lt;/p&gt;

&lt;p&gt;In this responsive website i have added Home section, about section, feature section, pricing section, contact form &amp;amp; footer. Also have made this complete website responsive using media query.&lt;/p&gt;

&lt;p&gt;For this project I have used these libraries,&lt;br&gt;
▶️ HTML&lt;br&gt;
▶️ CSS&lt;br&gt;
▶️ JavaScript&lt;/p&gt;

&lt;p&gt;Here is the tutorial for this ecommerce website!&lt;br&gt;
Part 1:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1FoQOProoeI"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Part 2:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/G6JGc9MC96s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can use this to learn or for your portfolio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feel free to visit my YouTube channel:&lt;br&gt;
&lt;a href="//www.youtube.com/tech2etc"&gt;@Tech2etc&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow me on Instagram where I'm sharing lot's of useful resources!&lt;br&gt;
&lt;a href="https://www.instagram.com/fahimkabir.hamim"&gt;@fahimkabir.hamim&lt;/a&gt; 😉&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How Can Games Help Programmers Be More Productive</title>
      <author>tirth-uhiha-dev</author>
      <pubDate>Sat, 05 Jun 2021 04:26:45 +0000</pubDate>
      <link>https://dev.to/tirthuhihadev/how-can-games-help-programmers-be-more-productive-4k01</link>
      <guid>https://dev.to/tirthuhihadev/how-can-games-help-programmers-be-more-productive-4k01</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hey-there"&gt;
  &lt;/a&gt;
  Hey There,
&lt;/h1&gt;

&lt;p&gt;Tired and exhausted Dev's. I am Tirth here your one and only game blogger here. So today we are going to talk about a little bit off-topic by the way sorry for that. Ok, so I have a question?&lt;br&gt;
So how can games help programmers be more productive??, you must be thinking that &lt;strong&gt;(from your perspective)&lt;/strong&gt; wait what tirth you must be kidding right.&lt;br&gt;
if you know anything else pls comment&lt;br&gt;
No guys I am not joking here's your answer:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boost-learning-and-memory"&gt;
  &lt;/a&gt;
  Boost Learning and Memory:
&lt;/h3&gt;

&lt;p&gt;A lot of video games require players to learn,memorize and apply various tricks.Player also beed to remember all the instructions given at the start of the game.So programers must be able to learn all the syntax and related sybols of the coding language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improve-problemsolving-skills"&gt;
  &lt;/a&gt;
  Improve Problem-Solving Skills:
&lt;/h3&gt;

&lt;p&gt;A great problem solver can make critical decisions in a matter of seconds. In video games, decision-making is often cut down to seconds, and players must make full use of their brain power before proceeding to the next step.Each video game has rules guiding players on what to follow before executing the next move.&lt;br&gt;
You can apply this skill to programming, where you are required to develop a software solution that will solve a real-world problem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improve-multitasking-skills"&gt;
  &lt;/a&gt;
  Improve Multitasking Skills:
&lt;/h3&gt;

&lt;p&gt;For example, if the game involves fighting, a player will have to keep monitoring the energy levels of fighters while simultaneously attacking enemies. Without excellent multitasking skills, one is highly likely to fall on the losing end.&lt;br&gt;
Programming will also call for excellent multitasking skills to create solutions to real-world problems. Programmers must be keen and observant to whatever is taking place on their screen and must be able to write code while simultaneously checking for errors.&lt;/p&gt;

&lt;p&gt;So, End of the day it's up to you i have only shown the benifits of gaming in programmers life it also has some cons just don't be be addicted to game it may effect your work.Play games for entertainment.&lt;/p&gt;

&lt;p&gt;If you are still There then do like and follow my dev account i won't take a sec to do that and if you like gaming then do subscribe to youtube channel:&lt;br&gt;
&lt;a href="https://www.youtube.com/channel/UC1sE6NRQT5zbgzq9tRhQRlQ"&gt;My Youtube Channel&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devmeme</category>
      <category>programming</category>
      <category>gamedev</category>
      <category>python</category>
    </item>
    <item>
      <title>::Before and ::After in CSS made easy</title>
      <author>RahulReddy</author>
      <pubDate>Sat, 05 Jun 2021 03:50:14 +0000</pubDate>
      <link>https://dev.to/deraowl/before-and-after-in-css-made-easy-4m27</link>
      <guid>https://dev.to/deraowl/before-and-after-in-css-made-easy-4m27</guid>
      <description>&lt;p&gt;Hello, People&lt;/p&gt;

&lt;p&gt;Today we are going to learn about pseudo-elements, one of the most useful CSS properties.&lt;br&gt;
Pseudo-elements in CSS allow us to add content to a page without adding additional HTML elements.&lt;br&gt;
Seems confusing? Okay, in simple terms.&lt;/p&gt;

&lt;blockquote&gt;Pseudo-elements are like a shadow, which can be seen but not able to touch.&lt;/blockquote&gt;

&lt;p&gt;I can assure you that if you master these topics, you will use them all over your project. Without wasting time let us dive in.&lt;/p&gt;

&lt;h1&gt;::Before&lt;/h1&gt;

&lt;p&gt;Before selector is used to position content before the content of the selected element.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;

&lt;p&gt;We need to add the item with the keyword ::before with the required content property. The content can be any string or even blank.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     element::before{
      content: "";
     }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: before and after pseudo-elements will not work without content property.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://codepen.io/Archisol/pen/poeLzLR"&gt;https://codepen.io/Archisol/pen/poeLzLR&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;::After&lt;/h1&gt;

&lt;p&gt;The after pseudo-element can be used to position content after the content of the selected element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;

&lt;p&gt;We need to add the item with the keyword ::after with the required content property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     element::after{
      content: "";
     }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://codepen.io/Archisol/pen/JjWLPMZ"&gt;https://codepen.io/Archisol/pen/JjWLPMZ&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: These elements are inline by default&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I Hope, the blog was useful. If there are any queries feel free to ping me on &lt;a href="https://twitter.com/DeRaowl"&gt;Twitter&lt;/a&gt;. &lt;strong&gt;Now as a task you can create the below image&lt;/strong&gt; using before and after pseudo-elements.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pfxvpMz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622716152574/FjzGLaOXJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pfxvpMz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622716152574/FjzGLaOXJ.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The solution can be found here &lt;a href="https://codepen.io/Archisol/pen/QWpmLVK"&gt;Codepen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more about Pseudo Elements, refer below websites:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements"&gt;MDN Web-Docs&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://css-tricks.com/almanac/selectors/a/after-and-before/"&gt;CSS  Tricks&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Angular : How to add A fully customizable, one-time password input component in your angular app just in 10 minutes?</title>
      <author>Rajesh Kumar Yadav</author>
      <pubDate>Sat, 05 Jun 2021 03:45:51 +0000</pubDate>
      <link>https://dev.to/rajeshkumaryadavdotcom/angular-how-to-add-a-fully-customizable-one-time-password-input-component-in-your-angular-app-just-in-10-minutes-n29</link>
      <guid>https://dev.to/rajeshkumaryadavdotcom/angular-how-to-add-a-fully-customizable-one-time-password-input-component-in-your-angular-app-just-in-10-minutes-n29</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/TdpKuX7H1KBvvR2Hpu/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/TdpKuX7H1KBvvR2Hpu/giphy.gif" alt="Image"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;You can use this component in your app and extend it to SMS API, here I will skip API part as it varies from sms provider to provider.  &lt;/p&gt;

&lt;p&gt;Let's begin to learn how to add otp component in your angular app.  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-1-install-dependency"&gt;
  &lt;/a&gt;
  Step 1 - Install dependency
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt; &lt;span class="nx"&gt;ng&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;otp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#step-2-add-raw-ngotpinputmodule-endraw-to-imports-raw-appmodulets-endraw-something-like"&gt;
  &lt;/a&gt;
  Step 2 - Add &lt;code&gt;NgOtpInputModule&lt;/code&gt; to imports &lt;code&gt;app.module.ts&lt;/code&gt; something like
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/platform-browser&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NgModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NgOtpInputModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ng-otp-input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;NgModule&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; 
&lt;span class="na"&gt;declarations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AppComponent&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
&lt;span class="na"&gt;imports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;BrowserModule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;NgOtpInputModule&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
&lt;span class="na"&gt;bootstrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AppComponent&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here in your existing app you have to add &lt;code&gt;import { NgOtpInputModule } from 'ng-otp-input'&lt;/code&gt;; near all existing imports and then add imports in &lt;code&gt;NgModule&lt;/code&gt; as &lt;code&gt;NgOtpInputModule&lt;/code&gt; with your existing code.  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-3-open-your-choice-of-components-ts-html-file-where-you-want-to-add-otp-feature-and-add-below-code-"&gt;
  &lt;/a&gt;
  Step 3 - Open your choice of component's ts html file where you want to add OTP feature and add below code -
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ng&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;otp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onInputChange&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;onOtpChange($event)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{length:5}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ng-otp-input&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All done, OTP component is added.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extra Bits&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
When I decided to add this to my own website &lt;a href="https://rajeshkumaryadav.com/#/auth"&gt;https://rajeshkumaryadav.com/#/auth&lt;/a&gt; then I thought of to write config in ts file and pass it in html as below, I will write some more code below which I am using in my website like if all digits are entered then validation should be done etc. If you are happy with default feature you can skip this extra bits part.  &lt;/p&gt;

&lt;p&gt;auth.component.html&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ng&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;otp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;ngOtpInput&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onInputChange&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;onOtpChange($event)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;ngIf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;showOtpComponent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;config&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ng-otp-input&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;as my config list is long, I will define it in ts file  &lt;/p&gt;

&lt;p&gt;auth.component.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;otp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;showOtpComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;ViewChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ngOtpInput&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;static&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="nx"&gt;ngOtpInput&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;allowNumbersOnly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;isPasswordInput&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;disableAutoFocus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;inputStyles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;50px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;50px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt; 

&lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="c1"&gt;// OTP Code onOtpChange(otp) { this.otp = otp; // When all 4 digits are filled, trigger OTP validation method if (otp.length == 4) { this.validateOtp(); } } setVal(val) { this.ngOtpInput.setValue(val); } onConfigChange() { this.showOtpComponent = false; this.otp = null; setTimeout(() =&amp;gt; { this.showOtpComponent = true; }, 0); } validateOtp() { // write your logic here to validate it, you can integrate sms API here if you want } &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note that in above config, you can make necessary changes as per your requirements.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#live-demo-"&gt;
  &lt;/a&gt;
  Live Demo -
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://rajeshkumaryadav.com/#/auth"&gt;https://rajeshkumaryadav.com/#/auth&lt;/a&gt;  &lt;/p&gt;

</description>
      <category>angular</category>
      <category>webdev</category>
      <category>typescript</category>
      <category>npm</category>
    </item>
    <item>
      <title>Using IAM Service Account Instead Of Instance Profile For EKS Pods</title>
      <author>Vu Dao</author>
      <pubDate>Sat, 05 Jun 2021 02:56:34 +0000</pubDate>
      <link>https://dev.to/vumdao/using-iam-service-account-instead-of-instance-profile-for-eks-pods-262p</link>
      <guid>https://dev.to/vumdao/using-iam-service-account-instead-of-instance-profile-for-eks-pods-262p</guid>
      <description>&lt;h3&gt;
  &lt;a href="#-with-iam-identitybased-policies-you-can-specify-allowed-or-denied-actions-and-resources-as-well-as-the-conditions-under-which-actions-are-allowed-or-denied"&gt;
  &lt;/a&gt;
  &lt;strong&gt;- With IAM identity-based policies, you can specify allowed or denied actions and resources as well as the conditions under which actions are allowed or denied.&lt;/strong&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-for-multiple-services-in-k8s-how-can-we-control-the-permission-of-using-aws-resouce-within-the-pod-the-easiest-way-is-to-use-instance-profile-which-attached-to-the-eks-node-but-that-is-the-worst-way-with-high-risk-of-security-lets-go-through-this-post-to-know-more"&gt;
  &lt;/a&gt;
  &lt;strong&gt;- For multiple services in K8S how can we control the permission of using AWS resouce within the pod. The easiest way is to use instance profile which attached to the EKS node but that is the worst way with high risk of security. Let's go through this post to know more&lt;/strong&gt;
&lt;/h3&gt;




&lt;p&gt;&lt;strong&gt;TL,DR&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-in-this-document"&gt;
  &lt;/a&gt;
  What’s In This Document
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#-Kubernetes-Service-Accounts"&gt;Kubernetes Service Accounts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Verify-the-default-service-account-in-the-eks-cluster"&gt;Verify the default service account in the eks cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-IAM-Roles-for-Service-Accounts-(IRSA)"&gt;IAM Roles for Service Accounts (IRSA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-How-to-assign-IAM-roles-to-service-account"&gt;How to assign IAM roles to service account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Create-EKS-cluster-using-AWS-CDK"&gt;Create EKS cluster using AWS CDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.toCreate-IAM-identity-provider---Type-OpenID-Connect"&gt;Create IAM identity provider - Type OpenID Connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.toCreate-IAM-Service-Account-Role-bind-with-OIDC-provider"&gt;Create IAM Service Account Role bind with OIDC provider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#kubernetes-service-accounts"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Kubernetes-Service-Accounts"&gt;Kubernetes Service Accounts&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A service account is a special type of object that allows you to assign a Kubernetes RBAC role to a pod. A default service account is created automatically for each Namespace within a cluster. When you deploy a pod into a Namespace without referencing a specific service account, the default service account for that Namespace will automatically get assigned to the Pod and the Secret, i.e. the service account (JWT) token for that service account, will get mounted to the pod as a volume at /var/run/secrets/kubernetes.io/serviceaccount.**&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#verify-the-default-service-account-in-the-eks-cluster"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Verify-the-default-service-account-in-the-eks-cluster"&gt;Verify the default service account in the eks cluster&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create Pod deployment without service account, here we use &lt;code&gt;aws-cli&lt;/code&gt; image to test &lt;code&gt;s3&lt;/code&gt; permission and then apply
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: aws-test
  name: aws-test
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aws-test
  template:
    metadata:
      labels:
        app: aws-test
    spec:
      containers:
        - image: mikesir87/aws-cli:v1
          name: aws-test
          command: ['sleep', '60']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Get pod's ENV, expect there's no &lt;code&gt;AWS_ROLE_ARN&lt;/code&gt; and &lt;code&gt;AWS_WEB_IDENTITY_TOKEN_FILE&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl exec aws-test-854c4fb8c-9lpsv -- env |grep AWS
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Get the default token in &lt;code&gt;/var/run/secrets/kubernetes.io/serviceaccount/token&lt;/code&gt;. Decoding the service account token in that directory will reveal the following metadata:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl exec aws-test-854c4fb8c-9lpsv -- cat /var/run/secrets/kubernetes.io/serviceaccount/token
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "iss": "kubernetes/serviceaccount",
  "kubernetes.io/serviceaccount/namespace": "dev",
  "kubernetes.io/serviceaccount/secret.name": "default-token-qvr29",
  "kubernetes.io/serviceaccount/service-account.name": "default",
  "kubernetes.io/serviceaccount/service-account.uid": "d9378593-295f-4be0-a918",
  "sub": "system:serviceaccount:dev:default"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The default service account has the following permissions to the Kubernetes API.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl describe clusterrole system:discovery
Name:         system:discovery
Labels:       kubernetes.io/bootstrapping=rbac-defaults
Annotations:  rbac.authorization.kubernetes.io/autoupdate: true
PolicyRule:
  Resources  Non-Resource URLs  Resource Names  Verbs
  ---------  -----------------  --------------  -----
             [/api/*]           []              [get]
             [/api]             []              [get]
             [/apis/*]          []              [get]
             [/apis]            []              [get]
             [/healthz]         []              [get]
             [/livez]           []              [get]
             [/openapi/*]       []              [get]
             [/openapi]         []              [get]
             [/readyz]          []              [get]
             [/version/]        []              [get]
             [/version]         []              [get]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The pod does not have any permissions in AWS services instead it might inherrit from instance profile if we do not block access to instance metadata.&lt;/li&gt;
&lt;li&gt;Next step we will create an IAM role service account which is fedderated by OpenID connector and assumed by &lt;code&gt;AssumeRoleWithWebIdentity&lt;/code&gt;. Sound strange right? let's discover moore.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#iam-roles-for-service-accounts-irsa"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-IAM-Roles-for-Service-Accounts-(IRSA)"&gt;IAM Roles for Service Accounts (IRSA)&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;IRSA is a feature that allows you to assign an IAM role to a Kubernetes service account. It works by leveraging a Kubernetes feature known as Service Account Token Volume Projection. Pods with service accounts that reference an IAM Role call a public OIDC discovery endpoint for AWS IAM upon startup.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When an AWS API is invoked, the AWS SDKs calls &lt;code&gt;sts:AssumeRoleWithWebIdentity&lt;/code&gt; and automatically exchanges the Kubernetes issued token for a AWS role credential.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;EKS Pod Identity Webhook mutates pods with a ServiceAccount with an &lt;code&gt;eks.amazonaws.com/role-arn&lt;/code&gt; annotation by adding a ServiceAccount projected token volume and adding environment variables that configure the AWS SDKs to automatically assume the specified role. In order to work, an OIDC provider is configured in AWS IAM to trust the ServiceAccount tokens. The mutating webhook that runs as part of the EKS control plane injects the AWS Role ARN and the path to a web identity token file into the Pod as environment variables. These values can also be supplied manually.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;AWS_ROLE_ARN=arn:aws:iam::AWS_ACCOUNT_ID:role/IAM_ROLE_NAME
AWS_WEB_IDENTITY_TOKEN_FILE=/var/run/secrets/eks.amazonaws.com/serviceaccount/token
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The kubelet will automatically rotate the projected token when it is older than 80% of its total TTL, or after 24 hours. The AWS SDKs are responsible for reloading the token when it rotates.**&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vUtXQMnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/service-account/img/flow.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vUtXQMnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/service-account/img/flow.png%3Fraw%3Dtrue" alt="Alt-Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-assign-iam-roles-to-service-account"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-How-to-assign-IAM-roles-to-service-account"&gt;How to assign IAM roles to service account&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First you need EKS cluster to get OpenId connect (OIDC) URL. What is OIDC? OpenID Connect is a simple identity layer on top of the OAuth 2.0 protocol. It allows Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the End-User in an interoperable and REST-like manner.)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create IAM identity provider. IAM identity providers (IdPs) manage user identities outside of AWS. You can establish a trust relationship with an IdP to give external user identities permissions to use AWS resources in your account.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Collect IAM open id connect provider arn and then create an IAM role and set Trust Relationship with Policy Document (limited by condition):&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Federated": "&amp;lt;open_id_connect_provider_arn&amp;gt;"
      },
      "Action": "sts:AssumeRoleWithWebIdentity",
      "Condition": {
        "StringEquals": {
          "oidc.eks.ap-northeast-2.amazonaws.com/id/&amp;lt;OIDC_PROVIDER_ID&amp;gt;:aud": "sts.amazonaws.com",
          "oidc.eks.ap-northeast-2.amazonaws.com/id/&amp;lt;OIDC_PROVIDER_ID&amp;gt;:sub": "system:serviceaccount:dev:sel-eks-sa"
        }
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Attach necessary policies/ managed policies for the role&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;
  &lt;a href="https://dev.to/vumdao"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zBs_Sbxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/service-account/img/too_much.jpg%3Fraw%3Dtrue"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;b&gt;NO, the most interesting parts waiting for you - Using AWS CDK to create all of the above and CDK8S to create your yaml files&lt;/b&gt;
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#create-eks-cluster-using-aws-cdk"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Create-EKS-cluster-using-AWS-CDK"&gt;Create EKS cluster using AWS CDK&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The post is long enough to share EKS CDK code here but the IAM role service account, IAM identiy provider and OIDC need to be in same stack of EKS&lt;/li&gt;
&lt;li&gt;Usind &lt;code&gt;AWS CDK 2.0&lt;/code&gt; to create EKS cluster, EKS admin role, EKS node role both principal is &lt;code&gt;eks.amazonaws.com&lt;/code&gt;, EKS node group, IAM instace profile, OIDC provider, IAM identity provider, IAM service account role for projected service and &lt;code&gt;aws-node&lt;/code&gt; DaemonSet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
  &lt;a href="https://dev.to/vumdao"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I92Ih_El--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/service-account/img/eks_cdk.jpg%3Fraw%3Dtrue"&gt;
  &lt;/a&gt;
&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from constructs import Construct
from aws_cdk import (
    App, Stack, Environment, Tags, CfnJson, CfnOutput,
    aws_eks as eks,
    aws_ec2 as ec2,
    aws_iam as iam
)
import re


class RunAllAtOnce:
    def __init__(self):
        app = App()
        _env = Environment(region="ap-northeast-2", account=account)
        cluster = EksTestStack(app, 'EksClusterStack', env=_env)
        IamOICProvider(app, 'EksOICIdentityProvider', eks_cluster=cluster.eks_cluster, env=_env)

        app.synth()


class EksTestStack(Stack):
    def __init__(self, scope: Construct, construct_id: str, env, **kwargs) -&amp;gt; None:
        super().__init__(scope, construct_id, env=env, **kwargs)

        self.eks_cluster = None
        self.acc_id = env.account
        statement = EksWorkerRoleStatements(self.acc_id)

        eks_private_vpc = ec2.Vpc(self, "EksPrivateVPC", cidr='10.3.0.0/16', max_azs=2, nat_gateways=1)

        # EKS Admin role
        eks_admin_role = iam.Role(
            self, 'EKSMasterRole', role_name='eks-admin-role', assumed_by=iam.ServicePrincipal("ec2.amazonaws.com")
        )
        eks_admin_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name("AmazonS3ReadOnlyAccess"))
        eks_admin_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name("IAMFullAccess"))
        eks_admin_role.add_to_policy(statement.admin_statement())

        # EKS Node Role
        node_role = iam.Role(
            self, "EKSNodeRole", role_name='eks-node-role', assumed_by=iam.ServicePrincipal("eks.amazonaws.com")
        )
        node_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name("AmazonEKSClusterPolicy"))
        node_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name("AmazonEKSWorkerNodePolicy"))
        node_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name("AmazonEC2ContainerRegistryReadOnly"))
        node_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name("AmazonEKSServicePolicy"))

        # Create EKS cluster
        self.eks_cluster = eks.Cluster(
            scope=self, id='EKSDevCluster',
            vpc=eks_private_vpc,
            default_capacity=0,
            cluster_name='eks-dev',
            masters_role=eks_admin_role,
            core_dns_compute_type=eks.CoreDnsComputeType.EC2,
            version=eks.KubernetesVersion.V1_19,
            role=node_role
        )

        # Worker Role
        worker_role = iam.Role(self, "EKSWorkerRole", role_name='eks-worker-role',
                               assumed_by=iam.ServicePrincipal("ec2.amazonaws.com"))
        attached_policy = ['AmazonEC2ContainerRegistryReadOnly', 'AmazonEKSWorkerNodePolicy']
        for policy in attached_policy:
            worker_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name(policy))
        worker_role.add_to_policy(statement.eks_cni())

        ssh_worker_sg = ec2.SecurityGroup(
            self, 'EksWorkerSSHSG',
            vpc=eks_private_vpc,
            description='EKS SSH to worker nodes',
            security_group_name='eks-ssh'
        )
        ssh_worker_sg.add_ingress_rule(ec2.Peer.ipv4('10.3.0.0/16'), ec2.Port.tcp(22), "SSH Access")

        self.eks_cluster.add_nodegroup_capacity(
            id="EksNodeGroup",
            desired_size=1,
            disk_size=20,
            instance_types=[ec2.InstanceType("r5a.xlarge")],
            labels={'role': 'worker', 'type': 'stateless'},
            max_size=2,
            min_size=1,
            nodegroup_name='eks-dev-node-group',
            node_role=worker_role,
            remote_access=eks.NodegroupRemoteAccess(ssh_key_name='dev-t', source_security_groups=[ssh_worker_sg]),
            subnets=ec2.Subnetection(subnet_type=ec2.SubnetType.PRIVATE)
        )


class EksWorkerRoleStatements(object):
    def __init__(self, acc_id) -&amp;gt; None:
        self.acc_id = acc_id

    @staticmethod
    def admin_statement():
        policy_statement = iam.PolicyStatement(
            effect=iam.Effect.ALLOW,
            actions=['*'],
            resources=['*'],
            conditions={'StringEquals': {"aws:RequestedRegion": "ap-northeast-2"}}
        )
        return policy_statement

    @staticmethod
    def eks_cni():
        policy_statement = iam.PolicyStatement(
            effect=iam.Effect.ALLOW,
            actions=[
                "ec2:AssignPrivateIpAddresses",
                "ec2:AttachNetworkInterface",
                "ec2:CreateNetworkInterface",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeInstances",
                "ec2:DescribeTags",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeInstanceTypes",
                "ec2:DetachNetworkInterface",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:UnassignPrivateIpAddresses",
                "ec2:CreateTags"
            ],
            resources=['*'],
            conditions={'StringEquals': {"aws:RequestedRegion": "ap-northeast-2"}}
        )
        return policy_statement


class IamOICProvider(Stack):
    def __init__(self, scope: Construct, construct_id: str, eks_cluster, env, **kwargs) -&amp;gt; None:
        super().__init__(scope, construct_id, env=env, **kwargs)

        statement = EksWorkerRoleStatements(env.account)
        oidc_url = eks_cluster.cluster_open_id_connect_issuer_url
        iam_oic = iam.OpenIdConnectProvider(
            self, construct_id,
            url=oidc_url,
            client_ids=['sts.amazonaws.com']
        )
        Tags.of(iam_oic).add(key='cfn.eks-dev.stack', value='iam-pid-stack')

        oidc_provider = re.sub("https://", "", oidc_url)

        def string_like(name_space, sa_name):
            string = CfnJson(
                self, f'JsonCondition{sa_name}',
                value={
                    f'{oidc_provider}:sub': f'system:serviceaccount:{name_space}:{sa_name}',
                    f'{oidc_provider}:aud': 'sts.amazonaws.com'
                }
            )
            return string

        oic_role = iam.Role(
            self, 'EksIAMServiceAccountRole',
            role_name='sel-eks-oic-dev-sa',
            assumed_by=iam.FederatedPrincipal(
                federated=f'arn:aws:iam::{env.account}:oidc-provider/{oidc_provider}',
                conditions={'StringEquals': string_like('dev', 'sel-eks-sa')},
                assume_role_action='sts:AssumeRoleWithWebIdentity'
            )
        )

        oic_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name('AmazonS3ReadOnlyAccess'))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-iam-service-account-role-bind-with-oidc-provider"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="https://dev.toCreate-IAM-Service-Account-Role-bind-with-OIDC-provider"&gt;Create IAM Service Account Role bind with OIDC provider&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;
  &lt;a href="https://dev.to/vumdao"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S_FHbKmO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/service-account/img/oidc.jpg%3Fraw%3Dtrue"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create Service account using &lt;code&gt;CDK8S&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/usr/bin/env python
import os

from constructs import Construct
from cdk8s import App, Chart
from imports import k8s


class CreateNameSpace(Chart):
    def __init__(self, scope: Construct, id: str):
        super().__init__(scope, id)
        k8s.KubeNamespace(
            self, "NameSpace",
            metadata=k8s.ObjectMeta(name='dev')
        )


class ServiceAccount(Chart):
    def __init__(self, scope: Construct, id: str):
        super().__init__(scope, id, namespace='dev')
        k8s.KubeServiceAccount(
            self, "ServiceAccount",
            metadata=k8s.ObjectMeta(
                name='sel-eks-sa',
                annotations={'eks.amazonaws.com/role-arn': 'arn:aws:iam::123456789012:role/sel-eks-oic-dev-sa'}
            )
        )

app = App()
CreateNameSpace(app, "namespace")
ServiceAccount(app, 'serviceaccount')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Test: Use image &lt;code&gt;aws-cli&lt;/code&gt; to test the S3 permission as we attached &lt;code&gt;AmazonS3ReadOnlyAccess&lt;/code&gt; to the IRSA
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: aws-test
  name: aws-test
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aws-test
  template:
    metadata:
      labels:
        app: aws-test
    spec:
      containers:
        - image: mikesir87/aws-cli:v1
          name: aws-test
          command: ['sleep', '60']
      serviceAccountName: sel-eks-sa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl exec aws-test-7d5c5b6b95-csphv -- env | grep AWS
AWS_DEFAULT_REGION=ap-northeast-2
AWS_REGION=ap-northeast-2
AWS_ROLE_ARN=arn:aws:iam::123456789012:role/eks-oic-dev-sa
AWS_WEB_IDENTITY_TOKEN_FILE=/var/run/secrets/eks.amazonaws.com/serviceaccount/token
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl exec aws-test-7d5c5b6b95-csphv -- aws s3 ls | wc -l
76
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Why using IAM service account instead of instance profile?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There's no global/admin-level role in the cluster that can assume any other role used by apps in the cluster! As such, you never have to worry about a misconfiguration in your cluster granting elevated access to pods.&lt;/li&gt;
&lt;li&gt;The IAM roles for service accounts feature provides the following benefits:&lt;/li&gt;
&lt;li&gt;Least privilege — By using the IAM roles for service accounts feature, you no longer need to provide extended permissions to the node IAM role so that pods on that node can call AWS APIs. You can scope IAM permissions to a service account, and only pods that use that service account have access to those permissions. This feature also eliminates the need for third-party solutions such as kiam or kube2iam.&lt;/li&gt;
&lt;li&gt;Credential isolation — A container can only retrieve credentials for the IAM role that is associated with the service account to which it belongs. A container never has access to credentials that are intended for another container that belongs to another pod.&lt;/li&gt;
&lt;li&gt;Auditability — Access and event logging is available through CloudTrail to help ensure retrospective auditing.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally you get the end but we can now sperate the roles for applications and the eks nodes, and later for more such autoscaler group service and daemonSet node.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;strong&gt;Reference:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html"&gt;https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.github.io/aws-eks-best-practices/security/docs/iam/"&gt;https://aws.github.io/aws-eks-best-practices/security/docs/iam/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/cni-iam-role.html"&gt;https://docs.aws.amazon.com/eks/latest/userguide/cni-iam-role.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-vpc-cni.html#updating-vpc-cni-eks-add-on"&gt;https://docs.aws.amazon.com/eks/latest/userguide/managing-vpc-cni.html#updating-vpc-cni-eks-add-on&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.mikesir87.io/2020/09/eks-pod-identity-webhook-deep-dive/"&gt;https://blog.mikesir87.io/2020/09/eks-pod-identity-webhook-deep-dive/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openid.net/connect/"&gt;https://openid.net/connect/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="https://dev.to/vumdao"&gt;🌠 Blog&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://github.com/vumdao/cdk8s-example"&gt;Github&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://stackoverflow.com/users/11430272/vumdao"&gt;stackoverflow&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/in/vu-dao-9280ab43/"&gt;Linkedin&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/groups/12488649/"&gt;Group&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.facebook.com/CloudOpz-104917804863956"&gt;Page&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://twitter.com/VuDao81124667"&gt;Twitter 🌠&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>aws</category>
      <category>eks</category>
      <category>k8s</category>
      <category>cloudopz</category>
    </item>
  </channel>
</rss>
